In file included from ./benchmarks/tmux/leak_10/tmux_leak_10.c:10:0:
./benchmarks/tmux/leak_10/tmux_leak_10.c: In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/../stdio.h:138:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11: note: in expansion of macro ‘xstrdup’
   return (xstrdup(""));
           ^~~~~~~
./benchmarks/tmux/leak_10/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11: note: in expansion of macro ‘xstrdup’
   return (xstrdup(""));
           ^~~~~~~
./benchmarks/tmux/leak_10/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function ‘strdup’
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/tmux/leak_10/tmux_leak_10.c:139:10: note: in expansion of macro ‘xstrdup’
  return (xstrdup(envent->value));
          ^~~~~~~
./benchmarks/tmux/leak_10/tmux_leak_10.c: In function ‘cmd_string_expand_tilde’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:214:18: warning: implicit declaration of function ‘getpwuid’; did you mean ‘getdelim’? [-Wimplicit-function-declaration]
   else if ((pw = getpwuid(getuid())) != NULL)
                  ^~~~~~~~
                  getdelim
./benchmarks/tmux/leak_10/tmux_leak_10.c:214:27: warning: implicit declaration of function ‘getuid’; did you mean ‘getenv’? [-Wimplicit-function-declaration]
   else if ((pw = getpwuid(getuid())) != NULL)
                           ^~~~~~
                           getenv
./benchmarks/tmux/leak_10/tmux_leak_10.c:214:16: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
   else if ((pw = getpwuid(getuid())) != NULL)
                ^
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:13: warning: implicit declaration of function ‘getpwnam’; did you mean ‘tempnam’? [-Wimplicit-function-declaration]
   if ((pw = getpwnam(username)) != NULL)
             ^~~~~~~~
             tempnam
./benchmarks/tmux/leak_10/tmux_leak_10.c:220:11: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
   if ((pw = getpwnam(username)) != NULL)
           ^
./benchmarks/tmux/leak_10/tmux_leak_10.c:227:10: warning: incompatible implicit declaration of built-in function ‘strdup’
  return (strdup(home));
          ^~~~~~
./benchmarks/tmux/leak_10/tmux_leak_10.c: In function ‘cmd_string_parse’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:292:14: warning: implicit declaration of function ‘strchr’ [-Wimplicit-function-declaration]
     equals = strchr(argv[0], '=');
              ^~~~~~
./benchmarks/tmux/leak_10/tmux_leak_10.c:292:14: warning: incompatible implicit declaration of built-in function ‘strchr’
./benchmarks/tmux/leak_10/tmux_leak_10.c:292:14: note: include ‘<string.h>’ or provide a declaration of ‘strchr’
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:28: warning: implicit declaration of function ‘strcspn’ [-Wimplicit-function-declaration]
     whitespace = argv[0] + strcspn(argv[0], " \t");
                            ^~~~~~~
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:28: warning: incompatible implicit declaration of built-in function ‘strcspn’
./benchmarks/tmux/leak_10/tmux_leak_10.c:293:28: note: include ‘<string.h>’ or provide a declaration of ‘strcspn’
./benchmarks/tmux/leak_10/tmux_leak_10.c:297:5: warning: implicit declaration of function ‘memmove’ [-Wimplicit-function-declaration]
     memmove(argv, argv + 1, argc * (sizeof *argv));
     ^~~~~~~
./benchmarks/tmux/leak_10/tmux_leak_10.c:297:5: warning: incompatible implicit declaration of built-in function ‘memmove’
./benchmarks/tmux/leak_10/tmux_leak_10.c:297:5: note: include ‘<string.h>’ or provide a declaration of ‘memmove’
./benchmarks/tmux/leak_10/tmux_leak_10.c: In function ‘load_cfg’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:371:13: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
    oldlen = strlen(line);
             ^~~~~~
./benchmarks/tmux/leak_10/tmux_leak_10.c:371:13: warning: incompatible implicit declaration of built-in function ‘strlen’
./benchmarks/tmux/leak_10/tmux_leak_10.c:371:13: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/tmux/leak_10/tmux_leak_10.c:379:3: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
   memcpy(line + oldlen, buf, len);
   ^~~~~~
./benchmarks/tmux/leak_10/tmux_leak_10.c:379:3: warning: incompatible implicit declaration of built-in function ‘memcpy’
./benchmarks/tmux/leak_10/tmux_leak_10.c:379:3: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/tmux/leak_10/tmux_leak_10.c:384:9: warning: incompatible implicit declaration of built-in function ‘strlen’
   len = strlen(line);
         ^~~~~~
./benchmarks/tmux/leak_10/tmux_leak_10.c:384:9: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/tmux/leak_10/tmux_leak_10.c:397:10: warning: implicit declaration of function ‘isspace’ [-Wimplicit-function-declaration]
   while (isspace((u_char)*buf))
          ^~~~~~~
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 6
succs:= 6
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE_SWITCH -------
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 3
succs:= 4
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
succs:= 6
succs:= 5
succs:= 6
--------GIMPLE Cond -------
succs:= 9
--------GIMPLE Cond -------
succs:= 10
--------GIMPLE Cond -------
succs:= 11
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 10
succs:= 11
succs:= 12
succs:= 13
succs:= 9
succs:= 12
--------GIMPLE Cond -------
succs:= 15
--------GIMPLE Cond -------
succs:= 16
succs:= 16
--------GIMPLE Cond -------
succs:= 18
succs:= 18
succs:= 4
succs:= 13
succs:= 15
--------GIMPLE_SWITCH -------
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE_SWITCH -------
--------GIMPLE Cond -------
succs:= 10
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 11
succs:= 12
succs:= 4
succs:= 10
--------GIMPLE Cond -------
succs:= 13
--------GIMPLE Cond -------
succs:= 19
succs:= 11
succs:= 13
succs:= 19
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 9
succs:= 6
succs:= 7
succs:= 8
succs:= 9
succs:= 10
--------GIMPLE Cond -------
succs:= 13
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 14
succs:= 14
succs:= 15
--------GIMPLE_SWITCH -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 23
succs:= 23
--------GIMPLE Cond -------
succs:= 24
--------GIMPLE Cond -------
succs:= 24
succs:= 26
--------GIMPLE Cond -------
succs:= 27
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 27
succs:= 29
succs:= 30
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 33
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 34
succs:= 35
--------GIMPLE Cond -------
succs:= 36
succs:= 35
succs:= 36
--------GIMPLE Cond -------
succs:= 38
succs:= 34
--------GIMPLE Cond -------
succs:= 40
--------GIMPLE Cond -------
succs:= 41
succs:= 41
--------GIMPLE Cond -------
succs:= 44
succs:= 38
succs:= 40
succs:= 44
--------GIMPLE Cond -------
succs:= 33
--------GIMPLE Cond -------
succs:= 47
succs:= 19
succs:= 20
succs:= 21
succs:= 30
succs:= 31
succs:= 46
succs:= 47
--------GIMPLE Cond -------
succs:= 49
--------GIMPLE Cond -------
succs:= 51
succs:= 49
--------GIMPLE Cond -------
succs:= 53
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 54
succs:= 54
succs:= 55
--------GIMPLE Cond -------
succs:= 56
succs:= 53
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 57
succs:= 57
succs:= 58
--------GIMPLE Cond -------
succs:= 61
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 62
succs:= 62
succs:= 63
succs:= 63
--------GIMPLE Cond -------
succs:= 65
succs:= 61
succs:= 65
--------GIMPLE Cond -------
succs:= 68
succs:= 2
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_25 = VDEF <.MEM_19(D)>
_16 = __printf_chk (1, "zero size%s", "");
# .MEM_23 = VDEF <.MEM_19(D)>
_17 = __printf_chk (1, "nmemb * size > SIZE_MAX%s", "");
# .MEM_21 = VDEF <.MEM_20>
_18 = __printf_chk (1, "xrealloc failed%s", "");
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
# .MEM_84 = VDEF <.MEM_83>
ch_55 = cmd_string_getc (s_50(D), p_51(D));
# .MEM_85 = VDEF <.MEM_77>
buf_59 = xrealloc (0B, 1, 1);
# .MEM_87 = VDEF <.MEM_78>
ch_62 = cmd_string_getc (s_50(D), p_51(D));
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
# .MEM_45 = VDEF <.MEM_42>
ch_30 = cmd_string_getc (s_19(D), p_20(D));
# .MEM_46 = VDEF <.MEM_42>
t_32 = cmd_string_variable (s_19(D), p_20(D));
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);
# .MEM_172 = VDEF <.MEM_7>
f_11 = fopen ("path", "rb");
# .MEM_179 = VDEF <.MEM_170>
_20 = __printf_chk (1, "%s: %s", "path", _16);
# .MEM_180 = VDEF <.MEM_179>
line_23 = malloc (_22);
# .MEM_181 = VDEF <.MEM_180>
memcpy (_24, _16, len_21);
# VUSE <.MEM_182>
len_29 = strlen (line_23);
# VUSE <.MEM_156>
_45 = isspace (_44);
# .MEM_187 = VDEF <.MEM_158>
ch_73 = cmd_string_getc (buf_40, &p);
# .MEM_197 = VDEF <.MEM_187>
t_74 = cmd_string_string (buf_40, &p, 39, 0);
# .MEM_200 = VDEF <.MEM_187>
t_75 = cmd_string_string (buf_40, &p, 34, 1);
# .MEM_198 = VDEF <.MEM_187>
t_76 = cmd_string_variable (buf_40, &p);
# .MEM_199 = VDEF <.MEM_159>
ch_77 = cmd_string_getc (buf_40, &p);
# .MEM_201 = VDEF <.MEM_160>
buf_81 = xrealloc (buf_78, 1, _80);
# .MEM_203 = VDEF <.MEM_202>
argv_87 = xrealloc (argv_86, _85, 8);
# VUSE <.MEM_162>
equals_96 = strchr (_95, 61);
# VUSE <.MEM_162>
_99 = strcspn (_98, " \t");
# .MEM_205 = VDEF <.MEM_162>
memmove (argv_94, _108, _107);
# .MEM_188 = VDEF <.MEM_187>
_135 = cmd_string_getc (buf_40, &p);
# .MEM_193 = VDEF <.MEM_188>
_140 = getuid ();
# .MEM_194 = VDEF <.MEM_193>
_141 = getpwuid (_140);
# .MEM_190 = VDEF <.MEM_189>
username_145 = cmd_string_string (buf_40, &p, 47, 0);
# .MEM_191 = VDEF <.MEM_190>
_146 = getpwnam (username_145);
# .MEM_195 = VDEF <.MEM_163>
_151 = strdup (home_150);
# .MEM_206 = VDEF <.MEM_187>
buf_112 = xrealloc (buf_78, 1, _111);
# VUSE <.MEM_169>
_56 = __builtin_object_size (buf_55, 1);
_57 = __builtin_constant_p (_54);
# VUSE <.MEM_169>
_58 = __builtin_object_size (buf_55, 1);
# .MEM_175 = VDEF <.MEM_169>
_59 = __fgets_chk (buf_55, _58, _54, f_11);
# VUSE <.MEM_169>
_61 = __builtin_object_size (buf_55, 1);
# VUSE <.MEM_169>
_62 = __builtin_object_size (buf_55, 1);
# .MEM_174 = VDEF <.MEM_169>
_63 = __fgets_chk_warn (buf_55, _62, _54, f_11);
# .MEM_176 = VDEF <.MEM_169>
_64 = __fgets_alias (buf_55, _54, f_11);
# .MEM_177 = VDEF <.MEM_170>
fclose (f_11);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:xrealloc========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa4a2287b88
    type <pointer_type 0x7fa4a229a0a8
        type <void_type 0x7fa4a2293f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa4a229a0a8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa4a229fbd0>>
    var <var_decl 0x7fa4a3014cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fa4a1de6f60>
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
In function ‘xrealloc’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
this stmt is child function---realloc-----

 ================== find ================== 
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = newptr_11;
bb index := 8
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
Cond in fucntion xrealloc basic block 6
 ================== possible direct basic block ================= 
from xrealloc basic block 7
 ================== possible direct basic block ================= 
from xrealloc basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (newsize_7 == 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
  if (newsize == 0)
     ^
if (newsize_7 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a2287b88
    type <pointer_type 0x7fa4a229a0a8
        type <void_type 0x7fa4a2293f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa4a229a0a8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa4a229fbd0>>
    var <var_decl 0x7fa4a3014cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fa4a1de6f60>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a227ff90 type <integer_type 0x7fa4a22935e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a227ff90 type <integer_type 0x7fa4a22935e8 int> constant 1>
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;44m =======node_fun:cmd_string_getc========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path cmd_string_getc  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:cmd_string_getc========= [0m
[40;42m =======start_check_funciton:cmd_string_getc========= [0m
[40;33m =======POP node_fun stack:cmd_string_getc========= [0m
[40;44m =======node_fun:cmd_string_variable========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path cmd_string_variable  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa4a2287b88
    type <pointer_type 0x7fa4a229a0a8
        type <void_type 0x7fa4a2293f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa4a229a0a8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa4a229fbd0>>
    var <var_decl 0x7fa4a3014cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fa4a1de6f60>
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_variable’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
this stmt is child function---realloc-----

 ================== find ================== 
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = newptr_11;
bb index := 8
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
Cond in fucntion xrealloc basic block 6
 ================== possible direct basic block ================= 
from xrealloc basic block 7
 ================== possible direct basic block ================= 
from xrealloc basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (newsize_7 == 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
  if (newsize == 0)
     ^
if (newsize_7 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a2287b88
    type <pointer_type 0x7fa4a229a0a8
        type <void_type 0x7fa4a2293f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa4a229a0a8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa4a229fbd0>>
    var <var_decl 0x7fa4a3014cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fa4a1de6f60>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a227ff90 type <integer_type 0x7fa4a22935e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a227ff90 type <integer_type 0x7fa4a22935e8 int> constant 1>
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:cmd_string_getc========= [0m
[40;42m =======start_check_funciton:cmd_string_getc========= [0m
[40;33m =======POP node_fun stack:cmd_string_getc========= [0m
[40;42m =======pre_check_funciton:cmd_string_variable========= [0m
[40;42m =======start_check_funciton:cmd_string_variable========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa4a1df1318
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fa4a1e31150>
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================
_76 = strdup ("");
./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11: warning: use location
   return (xstrdup(""));
           ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1df1318
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fa4a1e31150>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1df1318
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fa4a1e31150>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1df12d0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fa4a1e31138>
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 70

======================================================================
_74 = strdup (_37);
./benchmarks/tmux/leak_10/tmux_leak_10.c:139:10: warning: use location
  return (xstrdup(envent->value));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1df12d0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fa4a1e31138>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1df12d0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fa4a1e31138>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_62 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:116:7: warning: use location
    ch = cmd_string_getc(s, p);
       ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = ch_62 != -1;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_32 = ch_62 != -1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:9: warning: use location
  if (ch != EOF && fch != '{')
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = _32 & _33;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_34 = _32 & _33;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:16: warning: use location
  if (ch != EOF && fch != '{')
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_34 != 0)
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
if (_34 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
  if (ch != EOF && fch != '{')
     ^
if (_34 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
Cond in fucntion cmd_string_variable basic block 16
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 17
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_30 = ch_62 != 125;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:23: warning: use location
  if (fch == '{' && ch != '}')
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_31 = _29 & _30;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:17: warning: use location
  if (fch == '{' && ch != '}')
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = (char) ch_62;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = (char) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23 + 4294967248;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_24 > 9)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                     ^
if (_24 > 9)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
Cond in fucntion cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = _21 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 > 25)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
if (_22 > 25)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
Cond in fucntion cmd_string_variable basic block 11
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = ch_62 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = _16 & _19;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_62 == -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
       ^
if (ch_62 == -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
Cond in fucntion cmd_string_variable basic block 9
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
_97 = *p_51(D);
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
ch_55 = cmd_string_getc (s_50(D), p_51(D));
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
ch_55 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:103:6: warning: use location
   ch = cmd_string_getc(s, p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_15 = (char) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
   buf[len++] = ch;
              ^
*buf_59 = _15;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
_13 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^
_14 = _13 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_9 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_8 = ch_38 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_12 = _8 & _11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_6 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = _6 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (unsigned int) ch_55;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_2 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = ch_55 != 95;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_1 = ch_55 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _1 & _4;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_5 = _1 & _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_62 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:116:7: warning: use location
    ch = cmd_string_getc(s, p);
       ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = ch_62 != -1;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_32 = ch_62 != -1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:9: warning: use location
  if (ch != EOF && fch != '{')
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = _32 & _33;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_34 = _32 & _33;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:16: warning: use location
  if (ch != EOF && fch != '{')
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_34 != 0)
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
if (_34 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
  if (ch != EOF && fch != '{')
     ^
if (_34 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
Cond in fucntion cmd_string_variable basic block 16
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 17
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_30 = ch_62 != 125;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:23: warning: use location
  if (fch == '{' && ch != '}')
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_31 = _29 & _30;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:17: warning: use location
  if (fch == '{' && ch != '}')
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = (char) ch_62;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = (char) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23 + 4294967248;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_24 > 9)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                     ^
if (_24 > 9)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
Cond in fucntion cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = _21 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 > 25)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
if (_22 > 25)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
Cond in fucntion cmd_string_variable basic block 11
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = ch_62 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = _16 & _19;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_62 == -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
       ^
if (ch_62 == -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
Cond in fucntion cmd_string_variable basic block 9
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
_97 = *p_51(D);
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
ch_55 = cmd_string_getc (s_50(D), p_51(D));
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
ch_55 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:103:6: warning: use location
   ch = cmd_string_getc(s, p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_15 = (char) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
   buf[len++] = ch;
              ^
*buf_59 = _15;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
_13 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^
_14 = _13 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_9 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_8 = ch_38 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_12 = _8 & _11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_6 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = _6 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (unsigned int) ch_55;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_2 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = ch_55 != 95;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_1 = ch_55 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _1 & _4;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_5 = _1 & _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a1de6720 type <pointer_type 0x7fa4a1da9a80> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
buf_40 = PHI <buf_59(8), buf_64(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: use location
     buf = xrealloc(buf, 1, len + 1);
         ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = buf_64 + len_42;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
buf_40 = PHI <buf_59(8), buf_64(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: use location
     buf = xrealloc(buf, 1, len + 1);
         ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = buf_64 + len_42;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fa4a1d9dd40
    type <pointer_type 0x7fa4a1dd8690
        type <array_type 0x7fa4a1dcf348 type <integer_type 0x7fa4a1da99d8 char>
            QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fa4a1dcf2a0>
            pointer_to_this <pointer_type 0x7fa4a1dd8690>>
        unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fa4a1de67c8 type <array_type 0x7fa4a1dcf348>
        readonly constant static "\000">
    ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11 start: ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11 finish: ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1defd80
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fa4a1e31018>
# VUSE <.MEM_93>
_37 = envent_72(D)->value;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 70

======================================================================
_74 = strdup (_37);
./benchmarks/tmux/leak_10/tmux_leak_10.c:139:10: warning: use location
  return (xstrdup(envent->value));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defd80
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fa4a1e31018>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1defd80
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fa4a1e31018>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:cmd_string_variable========= [0m
[40;44m =======node_fun:cmd_string_string========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path cmd_string_string  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa4a2287b88
    type <pointer_type 0x7fa4a229a0a8
        type <void_type 0x7fa4a2293f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa4a229a0a8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa4a229fbd0>>
    var <var_decl 0x7fa4a3014cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fa4a1de6f60>
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
In function ‘cmd_string_string’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
this stmt is child function---realloc-----

 ================== find ================== 
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = newptr_11;
bb index := 8
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
Cond in fucntion xrealloc basic block 6
 ================== possible direct basic block ================= 
from xrealloc basic block 7
 ================== possible direct basic block ================= 
from xrealloc basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (newsize_7 == 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
  if (newsize == 0)
     ^
if (newsize_7 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a2287b88
    type <pointer_type 0x7fa4a229a0a8
        type <void_type 0x7fa4a2293f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa4a229a0a8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa4a229fbd0>>
    var <var_decl 0x7fa4a3014cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fa4a1de6f60>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a227ff90 type <integer_type 0x7fa4a22935e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a227ff90 type <integer_type 0x7fa4a22935e8 int> constant 1>
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:cmd_string_getc========= [0m
[40;42m =======start_check_funciton:cmd_string_getc========= [0m
[40;33m =======POP node_fun stack:cmd_string_getc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path cmd_string_variable  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa4a2287b88
    type <pointer_type 0x7fa4a229a0a8
        type <void_type 0x7fa4a2293f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa4a229a0a8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa4a229fbd0>>
    var <var_decl 0x7fa4a3014cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fa4a1de6f60>
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
this stmt is child function---realloc-----

 ================== find ================== 
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = newptr_11;
bb index := 8
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
Cond in fucntion xrealloc basic block 6
 ================== possible direct basic block ================= 
from xrealloc basic block 7
 ================== possible direct basic block ================= 
from xrealloc basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (newsize_7 == 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
  if (newsize == 0)
     ^
if (newsize_7 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a2287b88
    type <pointer_type 0x7fa4a229a0a8
        type <void_type 0x7fa4a2293f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa4a229a0a8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa4a229fbd0>>
    var <var_decl 0x7fa4a3014cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fa4a1de6f60>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a227ff90 type <integer_type 0x7fa4a22935e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a227ff90 type <integer_type 0x7fa4a22935e8 int> constant 1>
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_string_getc  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:cmd_string_getc========= [0m
[40;42m =======start_check_funciton:cmd_string_getc========= [0m
[40;33m =======POP node_fun stack:cmd_string_getc========= [0m
[40;42m =======pre_check_funciton:cmd_string_variable========= [0m
[40;42m =======start_check_funciton:cmd_string_variable========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa4a1df1318
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fa4a1e31150>
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================
_76 = strdup ("");
./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11: warning: use location
   return (xstrdup(""));
           ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1df1318
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fa4a1e31150>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1df1318
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fa4a1e31150>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1df12d0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fa4a1e31138>
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 70

======================================================================
_74 = strdup (_37);
./benchmarks/tmux/leak_10/tmux_leak_10.c:139:10: warning: use location
  return (xstrdup(envent->value));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1df12d0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fa4a1e31138>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1df12d0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fa4a1e31138>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_62 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:116:7: warning: use location
    ch = cmd_string_getc(s, p);
       ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = ch_62 != -1;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_32 = ch_62 != -1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:9: warning: use location
  if (ch != EOF && fch != '{')
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = _32 & _33;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_34 = _32 & _33;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:16: warning: use location
  if (ch != EOF && fch != '{')
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_34 != 0)
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
if (_34 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
  if (ch != EOF && fch != '{')
     ^
if (_34 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
Cond in fucntion cmd_string_variable basic block 16
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 17
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_30 = ch_62 != 125;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:23: warning: use location
  if (fch == '{' && ch != '}')
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_31 = _29 & _30;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:17: warning: use location
  if (fch == '{' && ch != '}')
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = (char) ch_62;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = (char) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23 + 4294967248;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_24 > 9)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                     ^
if (_24 > 9)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
Cond in fucntion cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = _21 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 > 25)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
if (_22 > 25)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
Cond in fucntion cmd_string_variable basic block 11
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = ch_62 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = _16 & _19;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_62 == -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
       ^
if (ch_62 == -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
Cond in fucntion cmd_string_variable basic block 9
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
_97 = *p_51(D);
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
ch_55 = cmd_string_getc (s_50(D), p_51(D));
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
ch_55 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:103:6: warning: use location
   ch = cmd_string_getc(s, p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_15 = (char) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
   buf[len++] = ch;
              ^
*buf_59 = _15;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
_13 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^
_14 = _13 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_9 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_8 = ch_38 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_12 = _8 & _11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_6 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = _6 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (unsigned int) ch_55;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_2 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = ch_55 != 95;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_1 = ch_55 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _1 & _4;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_5 = _1 & _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_62 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:116:7: warning: use location
    ch = cmd_string_getc(s, p);
       ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = ch_62 != -1;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_32 = ch_62 != -1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:9: warning: use location
  if (ch != EOF && fch != '{')
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = _32 & _33;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_34 = _32 & _33;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:16: warning: use location
  if (ch != EOF && fch != '{')
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_34 != 0)
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
if (_34 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
  if (ch != EOF && fch != '{')
     ^
if (_34 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
Cond in fucntion cmd_string_variable basic block 16
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 17
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_30 = ch_62 != 125;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:23: warning: use location
  if (fch == '{' && ch != '}')
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_31 = _29 & _30;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:17: warning: use location
  if (fch == '{' && ch != '}')
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = (char) ch_62;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = (char) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23 + 4294967248;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_24 > 9)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                     ^
if (_24 > 9)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
Cond in fucntion cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = _21 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 > 25)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
if (_22 > 25)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
Cond in fucntion cmd_string_variable basic block 11
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = ch_62 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = _16 & _19;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_62 == -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
       ^
if (ch_62 == -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
Cond in fucntion cmd_string_variable basic block 9
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
_97 = *p_51(D);
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
ch_55 = cmd_string_getc (s_50(D), p_51(D));
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
ch_55 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:103:6: warning: use location
   ch = cmd_string_getc(s, p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_15 = (char) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
   buf[len++] = ch;
              ^
*buf_59 = _15;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
_13 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^
_14 = _13 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_9 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_8 = ch_38 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_12 = _8 & _11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_6 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = _6 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (unsigned int) ch_55;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_2 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = ch_55 != 95;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_1 = ch_55 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _1 & _4;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_5 = _1 & _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a1de6720 type <pointer_type 0x7fa4a1da9a80> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
buf_40 = PHI <buf_59(8), buf_64(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: use location
     buf = xrealloc(buf, 1, len + 1);
         ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = buf_64 + len_42;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
buf_40 = PHI <buf_59(8), buf_64(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: use location
     buf = xrealloc(buf, 1, len + 1);
         ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = buf_64 + len_42;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fa4a1d9dd40
    type <pointer_type 0x7fa4a1dd8690
        type <array_type 0x7fa4a1dcf348 type <integer_type 0x7fa4a1da99d8 char>
            QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fa4a1dcf2a0>
            pointer_to_this <pointer_type 0x7fa4a1dd8690>>
        unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fa4a1de67c8 type <array_type 0x7fa4a1dcf348>
        readonly constant static "\000">
    ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11 start: ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11 finish: ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1defd80
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fa4a1e31018>
# VUSE <.MEM_93>
_37 = envent_72(D)->value;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 70

======================================================================
_74 = strdup (_37);
./benchmarks/tmux/leak_10/tmux_leak_10.c:139:10: warning: use location
  return (xstrdup(envent->value));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defd80
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fa4a1e31018>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1defd80
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fa4a1e31018>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:cmd_string_variable========= [0m
[40;42m =======pre_check_funciton:cmd_string_string========= [0m
[40;42m =======start_check_funciton:cmd_string_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_22 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:156:8: warning: use location
  while ((ch = cmd_string_getc(s, p)) != endch) {
        ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_8 = PHI <ch_22(3), ch_22(4), ch_30(5), 27(6), 13(7), 10(8), 9(9), ch_22(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = (char) ch_8;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_32 = cmd_string_variable (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
    if ((t = cmd_string_variable(s, p)) == NULL)
       ^
this stmt is child function---cmd_string_variable-----

 ================== trace ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
trace fucntion name:cmd_string_variable 
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :0========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (t_32 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
if (t_32 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
Cond in fucntion cmd_string_string basic block 11
 ================== possible direct basic block ================= 
from cmd_string_string basic block 17
 ================== possible direct basic block ================= 
from cmd_string_string basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_30 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:163:4: warning: use location
    switch (ch = cmd_string_getc(s, p)) {
    ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_30 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:163:4: warning: use location
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_22 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:156:8: warning: use location
  while ((ch = cmd_string_getc(s, p)) != endch) {
        ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_8 = PHI <ch_22(3), ch_22(4), ch_30(5), 27(6), 13(7), 10(8), 9(9), ch_22(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = (char) ch_8;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_32 = cmd_string_variable (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
    if ((t = cmd_string_variable(s, p)) == NULL)
       ^
this stmt is child function---cmd_string_variable-----

 ================== trace ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
trace fucntion name:cmd_string_variable 
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :0========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (t_32 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
if (t_32 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
Cond in fucntion cmd_string_string basic block 11
 ================== possible direct basic block ================= 
from cmd_string_string basic block 17
 ================== possible direct basic block ================= 
from cmd_string_string basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_30 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:163:4: warning: use location
    switch (ch = cmd_string_getc(s, p)) {
    ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_30 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:163:4: warning: use location
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1df1ea0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1dedc60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fa4a1e31198>
buf_9 = PHI <0B(2), buf_16(15)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
bb index := 17
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 18

======================================================================
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
bb index := 16
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 18

======================================================================
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1df1ea0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1dedc60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fa4a1e31198>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = PHI <buf_25(16), 0B(17)>
bb index := 18
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = PHI <buf_25(16), 0B(17)>
bb index := 18
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 18

======================================================================
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: use location
   buf = xrealloc(buf, 1, len + 1);
       ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1df1ea0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1dedc60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fa4a1e31198>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = buf_34 + len_10;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:6: warning: use location
   buf[len++] = ch;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1df1ea0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1dedc60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fa4a1e31198>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
_3 = buf_34 + len_10;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:6: warning: use location
   buf[len++] = ch;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_48 = VDEF <.MEM_47>
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_48 = VDEF <.MEM_47>
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1df1ea0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1dedc60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fa4a1e31198>
buf_9 = PHI <0B(2), buf_16(15)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
bb index := 17
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 18

======================================================================
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
bb index := 16
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 18

======================================================================
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1df1ea0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1dedc60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fa4a1e31198>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = PHI <buf_25(16), 0B(17)>
bb index := 18
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = PHI <buf_25(16), 0B(17)>
bb index := 18
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 18

======================================================================
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: use location
   buf = xrealloc(buf, 1, len + 1);
       ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1df1ea0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1dedc60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fa4a1e31198>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = buf_34 + len_10;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:6: warning: use location
   buf[len++] = ch;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1df1ea0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1dedc60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fa4a1e31198>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
_3 = buf_34 + len_10;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:6: warning: use location
   buf[len++] = ch;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_48 = VDEF <.MEM_47>
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_48 = VDEF <.MEM_47>
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:cmd_string_string========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 23 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:__fgets_alias========= [0m
[40;33m =======POP node_fun stack:__fgets_alias========= [0m
[40;42m =======pre add _ fucntion:__fgets_chk_warn========= [0m
[40;33m =======POP node_fun stack:__fgets_chk_warn========= [0m
[40;42m =======pre add _ fucntion:__builtin_object_size========= [0m
[40;33m =======POP node_fun stack:__builtin_object_size========= [0m
[40;42m =======pre add _ fucntion:__builtin_constant_p========= [0m
[40;33m =======POP node_fun stack:__builtin_constant_p========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa4a2287b88
    type <pointer_type 0x7fa4a229a0a8
        type <void_type 0x7fa4a2293f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa4a229a0a8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa4a229fbd0>>
    var <var_decl 0x7fa4a3014cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fa4a1de6f60>
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
In function ‘main’:
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
this stmt is child function---realloc-----

 ================== find ================== 
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = newptr_11;
bb index := 8
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
Cond in fucntion xrealloc basic block 6
 ================== possible direct basic block ================= 
from xrealloc basic block 7
 ================== possible direct basic block ================= 
from xrealloc basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (newsize_7 == 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
  if (newsize == 0)
     ^
if (newsize_7 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a2287b88
    type <pointer_type 0x7fa4a229a0a8
        type <void_type 0x7fa4a2293f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa4a229a0a8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa4a229fbd0>>
    var <var_decl 0x7fa4a3014cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fa4a1de6f60>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a227ff90 type <integer_type 0x7fa4a22935e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a227ff90 type <integer_type 0x7fa4a22935e8 int> constant 1>
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:getpwnam========= [0m
[40;33m =======POP node_fun stack:getpwnam========= [0m
[40;42m =======pre add _ fucntion:cmd_string_string========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_string_string  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa4a2287b88
    type <pointer_type 0x7fa4a229a0a8
        type <void_type 0x7fa4a2293f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa4a229a0a8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa4a229fbd0>>
    var <var_decl 0x7fa4a3014cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fa4a1de6f60>
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
this stmt is child function---realloc-----

 ================== find ================== 
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = newptr_11;
bb index := 8
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
Cond in fucntion xrealloc basic block 6
 ================== possible direct basic block ================= 
from xrealloc basic block 7
 ================== possible direct basic block ================= 
from xrealloc basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (newsize_7 == 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
  if (newsize == 0)
     ^
if (newsize_7 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a2287b88
    type <pointer_type 0x7fa4a229a0a8
        type <void_type 0x7fa4a2293f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa4a229a0a8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa4a229fbd0>>
    var <var_decl 0x7fa4a3014cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fa4a1de6f60>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a227ff90 type <integer_type 0x7fa4a22935e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a227ff90 type <integer_type 0x7fa4a22935e8 int> constant 1>
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_string_getc  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:cmd_string_getc========= [0m
[40;42m =======start_check_funciton:cmd_string_getc========= [0m
[40;33m =======POP node_fun stack:cmd_string_getc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path cmd_string_variable  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa4a2287b88
    type <pointer_type 0x7fa4a229a0a8
        type <void_type 0x7fa4a2293f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa4a229a0a8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa4a229fbd0>>
    var <var_decl 0x7fa4a3014cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fa4a1de6f60>
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
this stmt is child function---realloc-----

 ================== find ================== 
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = newptr_11;
bb index := 8
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
Cond in fucntion xrealloc basic block 6
 ================== possible direct basic block ================= 
from xrealloc basic block 7
 ================== possible direct basic block ================= 
from xrealloc basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (newsize_7 == 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
  if (newsize == 0)
     ^
if (newsize_7 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a2287b88
    type <pointer_type 0x7fa4a229a0a8
        type <void_type 0x7fa4a2293f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa4a229a0a8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa4a229fbd0>>
    var <var_decl 0x7fa4a3014cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fa4a1de6f60>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a227ff90 type <integer_type 0x7fa4a22935e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a227ff90 type <integer_type 0x7fa4a22935e8 int> constant 1>
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_string_getc  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:cmd_string_getc========= [0m
[40;42m =======start_check_funciton:cmd_string_getc========= [0m
[40;33m =======POP node_fun stack:cmd_string_getc========= [0m
[40;42m =======pre_check_funciton:cmd_string_variable========= [0m
[40;42m =======start_check_funciton:cmd_string_variable========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa4a1df1318
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fa4a1e31150>
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================
_76 = strdup ("");
./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11: warning: use location
   return (xstrdup(""));
           ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1df1318
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fa4a1e31150>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1df1318
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fa4a1e31150>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1df12d0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fa4a1e31138>
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 70

======================================================================
_74 = strdup (_37);
./benchmarks/tmux/leak_10/tmux_leak_10.c:139:10: warning: use location
  return (xstrdup(envent->value));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1df12d0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fa4a1e31138>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1df12d0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fa4a1e31138>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_62 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:116:7: warning: use location
    ch = cmd_string_getc(s, p);
       ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = ch_62 != -1;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_32 = ch_62 != -1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:9: warning: use location
  if (ch != EOF && fch != '{')
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = _32 & _33;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_34 = _32 & _33;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:16: warning: use location
  if (ch != EOF && fch != '{')
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_34 != 0)
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
if (_34 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
  if (ch != EOF && fch != '{')
     ^
if (_34 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
Cond in fucntion cmd_string_variable basic block 16
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 17
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_30 = ch_62 != 125;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:23: warning: use location
  if (fch == '{' && ch != '}')
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_31 = _29 & _30;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:17: warning: use location
  if (fch == '{' && ch != '}')
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = (char) ch_62;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = (char) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23 + 4294967248;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_24 > 9)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                     ^
if (_24 > 9)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
Cond in fucntion cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = _21 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 > 25)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
if (_22 > 25)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
Cond in fucntion cmd_string_variable basic block 11
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = ch_62 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = _16 & _19;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_62 == -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
       ^
if (ch_62 == -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
Cond in fucntion cmd_string_variable basic block 9
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
_97 = *p_51(D);
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
ch_55 = cmd_string_getc (s_50(D), p_51(D));
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
ch_55 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:103:6: warning: use location
   ch = cmd_string_getc(s, p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_15 = (char) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
   buf[len++] = ch;
              ^
*buf_59 = _15;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
_13 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^
_14 = _13 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_9 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_8 = ch_38 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_12 = _8 & _11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_6 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = _6 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (unsigned int) ch_55;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_2 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = ch_55 != 95;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_1 = ch_55 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _1 & _4;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_5 = _1 & _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_62 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:116:7: warning: use location
    ch = cmd_string_getc(s, p);
       ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = ch_62 != -1;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_32 = ch_62 != -1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:9: warning: use location
  if (ch != EOF && fch != '{')
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = _32 & _33;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_34 = _32 & _33;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:16: warning: use location
  if (ch != EOF && fch != '{')
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_34 != 0)
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
if (_34 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
  if (ch != EOF && fch != '{')
     ^
if (_34 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
Cond in fucntion cmd_string_variable basic block 16
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 17
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_30 = ch_62 != 125;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:23: warning: use location
  if (fch == '{' && ch != '}')
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_31 = _29 & _30;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:17: warning: use location
  if (fch == '{' && ch != '}')
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = (char) ch_62;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = (char) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23 + 4294967248;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_24 > 9)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                     ^
if (_24 > 9)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
Cond in fucntion cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = _21 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 > 25)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
if (_22 > 25)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
Cond in fucntion cmd_string_variable basic block 11
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = ch_62 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = _16 & _19;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_62 == -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
       ^
if (ch_62 == -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
Cond in fucntion cmd_string_variable basic block 9
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
_97 = *p_51(D);
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
ch_55 = cmd_string_getc (s_50(D), p_51(D));
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
ch_55 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:103:6: warning: use location
   ch = cmd_string_getc(s, p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_15 = (char) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
   buf[len++] = ch;
              ^
*buf_59 = _15;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
_13 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^
_14 = _13 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_9 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_8 = ch_38 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_12 = _8 & _11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_6 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = _6 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (unsigned int) ch_55;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_2 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = ch_55 != 95;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_1 = ch_55 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _1 & _4;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_5 = _1 & _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a1de6720 type <pointer_type 0x7fa4a1da9a80> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
buf_40 = PHI <buf_59(8), buf_64(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: use location
     buf = xrealloc(buf, 1, len + 1);
         ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = buf_64 + len_42;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
buf_40 = PHI <buf_59(8), buf_64(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: use location
     buf = xrealloc(buf, 1, len + 1);
         ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = buf_64 + len_42;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fa4a1d9dd40
    type <pointer_type 0x7fa4a1dd8690
        type <array_type 0x7fa4a1dcf348 type <integer_type 0x7fa4a1da99d8 char>
            QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fa4a1dcf2a0>
            pointer_to_this <pointer_type 0x7fa4a1dd8690>>
        unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fa4a1de67c8 type <array_type 0x7fa4a1dcf348>
        readonly constant static "\000">
    ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11 start: ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11 finish: ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1defd80
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fa4a1e31018>
# VUSE <.MEM_93>
_37 = envent_72(D)->value;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 70

======================================================================
_74 = strdup (_37);
./benchmarks/tmux/leak_10/tmux_leak_10.c:139:10: warning: use location
  return (xstrdup(envent->value));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defd80
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fa4a1e31018>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1defd80
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fa4a1e31018>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:cmd_string_variable========= [0m
[40;42m =======pre_check_funciton:cmd_string_string========= [0m
[40;42m =======start_check_funciton:cmd_string_string========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_22 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:156:8: warning: use location
  while ((ch = cmd_string_getc(s, p)) != endch) {
        ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_8 = PHI <ch_22(3), ch_22(4), ch_30(5), 27(6), 13(7), 10(8), 9(9), ch_22(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = (char) ch_8;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_32 = cmd_string_variable (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
    if ((t = cmd_string_variable(s, p)) == NULL)
       ^
this stmt is child function---cmd_string_variable-----

 ================== trace ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
trace fucntion name:cmd_string_variable 
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :0========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (t_32 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
if (t_32 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
Cond in fucntion cmd_string_string basic block 11
 ================== possible direct basic block ================= 
from cmd_string_string basic block 17
 ================== possible direct basic block ================= 
from cmd_string_string basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_30 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:163:4: warning: use location
    switch (ch = cmd_string_getc(s, p)) {
    ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_30 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:163:4: warning: use location
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_40>
ch_22 = cmd_string_getc (s_19(D), p_20(D));
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_22 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:156:8: warning: use location
  while ((ch = cmd_string_getc(s, p)) != endch) {
        ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_8 = PHI <ch_22(3), ch_22(4), ch_30(5), 27(6), 13(7), 10(8), 9(9), ch_22(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = (char) ch_8;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
t_32 = cmd_string_variable (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
    if ((t = cmd_string_variable(s, p)) == NULL)
       ^
this stmt is child function---cmd_string_variable-----

 ================== trace ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
trace fucntion name:cmd_string_variable 
[40;44m =======trace_function_path cmd_string_variable  function_call count: 4 level :0========  [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :1========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;46m =======add node_fun stack:cmd_string_getc========= [0m
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :1========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (t_32 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
if (t_32 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:183:7: warning: use location
Cond in fucntion cmd_string_string basic block 11
 ================== possible direct basic block ================= 
from cmd_string_string basic block 17
 ================== possible direct basic block ================= 
from cmd_string_string basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_30 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:163:4: warning: use location
    switch (ch = cmd_string_getc(s, p)) {
    ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_30 = cmd_string_getc (s_19(D), p_20(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:163:4: warning: use location
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a2287750
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1df5000 s>
    def_stmt GIMPLE_NOP
    version 19
    ptr-info 0x7fa4a1e311e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1df1ea0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1dedc60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fa4a1e31198>
buf_9 = PHI <0B(2), buf_16(15)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
bb index := 17
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 18

======================================================================
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
bb index := 16
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 18

======================================================================
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1df1ea0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1dedc60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fa4a1e31198>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = PHI <buf_25(16), 0B(17)>
bb index := 18
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = PHI <buf_25(16), 0B(17)>
bb index := 18
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 18

======================================================================
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: use location
   buf = xrealloc(buf, 1, len + 1);
       ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1df1ea0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1dedc60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fa4a1e31198>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = buf_34 + len_10;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:6: warning: use location
   buf[len++] = ch;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1df1ea0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1dedc60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fa4a1e31198>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
_3 = buf_34 + len_10;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:6: warning: use location
   buf[len++] = ch;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_48 = VDEF <.MEM_47>
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_48 = VDEF <.MEM_47>
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1df1ea0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1dedc60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fa4a1e31198>
buf_9 = PHI <0B(2), buf_16(15)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
bb index := 17
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 18

======================================================================
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
bb index := 16
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 18

======================================================================
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1df1ea0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1dedc60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fa4a1e31198>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = PHI <buf_25(16), 0B(17)>
bb index := 18
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = PHI <buf_25(16), 0B(17)>
bb index := 18
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 18

======================================================================
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_16 = PHI <buf_9(12), buf_34(14)>
bb index := 15
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_9 = PHI <0B(2), buf_16(15)>
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: use location
   buf = xrealloc(buf, 1, len + 1);
       ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1df1ea0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1dedc60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fa4a1e31198>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = buf_34 + len_10;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:6: warning: use location
   buf[len++] = ch;
      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1df1ea0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1dedc60 buf>
    def_stmt buf_9 = PHI <0B(2), buf_16(15)>
    version 9
    ptr-info 0x7fa4a1e31198>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
_11 = PHI <buf_25(16), 0B(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_16 = PHI <buf_9(12), buf_34(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
buf_25 = xrealloc (buf_9, 1, _6);
./benchmarks/tmux/leak_10/tmux_leak_10.c:194:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_49 = VDEF <.MEM_38>
free (buf_9);
./benchmarks/tmux/leak_10/tmux_leak_10.c:199:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_9 = PHI <0B(2), buf_16(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
_3 = buf_34 + len_10;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:6: warning: use location
   buf[len++] = ch;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_48 = VDEF <.MEM_47>
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_36>
buf_34 = xrealloc (buf_9, 1, _1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:190:7: warning: Use after free error!: free location 
   buf = xrealloc(buf, 1, len + 1);
       ^
# .MEM_48 = VDEF <.MEM_47>
*_3 = _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:191:14: warning: use location
   buf[len++] = ch;
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:cmd_string_string========= [0m
[40;42m =======pre add _ fucntion:getpwuid========= [0m
[40;33m =======POP node_fun stack:getpwuid========= [0m
[40;42m =======pre add _ fucntion:getuid========= [0m
[40;33m =======POP node_fun stack:getuid========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_string_getc  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:cmd_string_getc========= [0m
[40;42m =======start_check_funciton:cmd_string_getc========= [0m
[40;33m =======POP node_fun stack:cmd_string_getc========= [0m
[40;42m =======pre add _ fucntion:memmove========= [0m
[40;33m =======POP node_fun stack:memmove========= [0m
[40;42m =======pre add _ fucntion:strcspn========= [0m
[40;33m =======POP node_fun stack:strcspn========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre add _ fucntion:cmd_string_variable========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path cmd_string_variable  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa4a2287b88
    type <pointer_type 0x7fa4a229a0a8
        type <void_type 0x7fa4a2293f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa4a229a0a8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa4a229fbd0>>
    var <var_decl 0x7fa4a3014cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fa4a1de6f60>
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
this stmt is child function---realloc-----

 ================== find ================== 
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = newptr_11;
bb index := 8
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_11 == 0B)
bb index := 6
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 18

======================================================================
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
Cond in fucntion xrealloc basic block 6
 ================== possible direct basic block ================= 
from xrealloc basic block 7
 ================== possible direct basic block ================= 
from xrealloc basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_39>
return _11;
lto1: warning: use location
beacuse in succ := 18 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 18

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_7 == 0)
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
if (newsize_7 == 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
  if (newsize == 0)
     ^
if (newsize_7 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:53:5: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a2287b88
    type <pointer_type 0x7fa4a229a0a8
        type <void_type 0x7fa4a2293f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa4a229a0a8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa4a229fbd0>>
    var <var_decl 0x7fa4a3014cf0 newptr>
    def_stmt newptr_11 = realloc (oldptr_9(D), newsize_7);
    version 11
    ptr-info 0x7fa4a1de6f60>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
_12 = newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: Use after free error!: free location 
if (newptr_11 == 0B)
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a227ff90 type <integer_type 0x7fa4a22935e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a227ff90 type <integer_type 0x7fa4a22935e8 int> constant 1>
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:cmd_string_getc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_string_getc  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:cmd_string_getc========= [0m
[40;42m =======start_check_funciton:cmd_string_getc========= [0m
[40;33m =======POP node_fun stack:cmd_string_getc========= [0m
[40;42m =======pre_check_funciton:cmd_string_variable========= [0m
[40;42m =======start_check_funciton:cmd_string_variable========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa4a1df1318
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fa4a1e31150>
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_95 = VDEF <.MEM_93>
_76 = strdup ("");
bb index := 19
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 70

======================================================================
_76 = strdup ("");
./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11: warning: use location
   return (xstrdup(""));
           ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1df1318
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fa4a1e31150>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1df1318
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _76 = strdup ("");
    version 76
    ptr-info 0x7fa4a1e31150>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1df12d0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fa4a1e31138>
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 70

======================================================================
_74 = strdup (_37);
./benchmarks/tmux/leak_10/tmux_leak_10.c:139:10: warning: use location
  return (xstrdup(envent->value));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1df12d0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fa4a1e31138>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1df12d0
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _74 = strdup (_37);
    version 74
    ptr-info 0x7fa4a1e31138>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_62 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:116:7: warning: use location
    ch = cmd_string_getc(s, p);
       ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = ch_62 != -1;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_32 = ch_62 != -1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:9: warning: use location
  if (ch != EOF && fch != '{')
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = _32 & _33;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_34 = _32 & _33;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:16: warning: use location
  if (ch != EOF && fch != '{')
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_34 != 0)
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
if (_34 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
  if (ch != EOF && fch != '{')
     ^
if (_34 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
Cond in fucntion cmd_string_variable basic block 16
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 17
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_30 = ch_62 != 125;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:23: warning: use location
  if (fch == '{' && ch != '}')
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_31 = _29 & _30;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:17: warning: use location
  if (fch == '{' && ch != '}')
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = (char) ch_62;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = (char) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23 + 4294967248;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_24 > 9)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                     ^
if (_24 > 9)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
Cond in fucntion cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = _21 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 > 25)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
if (_22 > 25)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
Cond in fucntion cmd_string_variable basic block 11
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = ch_62 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = _16 & _19;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_62 == -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
       ^
if (ch_62 == -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
Cond in fucntion cmd_string_variable basic block 9
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
_97 = *p_51(D);
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
ch_55 = cmd_string_getc (s_50(D), p_51(D));
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
ch_55 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:103:6: warning: use location
   ch = cmd_string_getc(s, p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_15 = (char) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
   buf[len++] = ch;
              ^
*buf_59 = _15;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
_13 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^
_14 = _13 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_9 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_8 = ch_38 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_12 = _8 & _11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_6 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = _6 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (unsigned int) ch_55;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_2 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = ch_55 != 95;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_1 = ch_55 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _1 & _4;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_5 = _1 & _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ch_62 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:116:7: warning: use location
    ch = cmd_string_getc(s, p);
       ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_32 = ch_62 != -1;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_32 = ch_62 != -1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:9: warning: use location
  if (ch != EOF && fch != '{')
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = _32 & _33;
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
_34 = _32 & _33;
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:16: warning: use location
  if (ch != EOF && fch != '{')
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_34 != 0)
bb index := 16
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 8

======================================================================
if (_34 != 0)
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
  if (ch != EOF && fch != '{')
     ^
if (_34 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:130:5: warning: use location
Cond in fucntion cmd_string_variable basic block 16
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 17
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = ch_62 != 125;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_30 = ch_62 != 125;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:23: warning: use location
  if (fch == '{' && ch != '}')
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_31 = _29 & _30;
bb index := 15
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 8

======================================================================
_31 = _29 & _30;
./benchmarks/tmux/leak_10/tmux_leak_10.c:128:17: warning: use location
  if (fch == '{' && ch != '}')
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_28 = (char) ch_62;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = (char) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_24 = _23 + 4294967248;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_24 > 9)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                     ^
if (_24 > 9)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:21: warning: use location
Cond in fucntion cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = _21 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 > 25)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
if (_22 > 25)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location
Cond in fucntion cmd_string_variable basic block 11
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 12
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = (unsigned int) ch_62;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_16 = ch_62 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = _16 & _19;
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ch_62 == -1)
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
    if (ch == EOF || !cmd_string_other(ch))
       ^
if (ch_62 == -1)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_10/tmux_leak_10.c:117:7: warning: use location
Cond in fucntion cmd_string_variable basic block 9
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 15
 ================== possible direct basic block ================= 
from cmd_string_variable basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
  (*p)--;
      ^
*p_51(D) = _98;
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:6: warning: use location
_97 = *p_51(D);
./benchmarks/tmux/leak_10/tmux_leak_10.c:76:3: warning: use location
  (*p)--;
   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_83>
ch_55 = cmd_string_getc (s_50(D), p_51(D));
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
ch_55 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:103:6: warning: use location
   ch = cmd_string_getc(s, p);
      ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
ch_38 = PHI <ch_53(2), ch_55(3), ch_55(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_15 = (char) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
   buf[len++] = ch;
              ^
*buf_59 = _15;
./benchmarks/tmux/leak_10/tmux_leak_10.c:113:14: warning: use location
_13 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^
_14 = _13 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (unsigned int) ch_38;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_9 = (unsigned int) ch_38;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_8 = ch_38 != 95;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_8 = ch_38 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = _8 & _11;
bb index := 5
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
_12 = _8 & _11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:108:8: warning: use location
   if (!cmd_string_first(ch)) {
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = (unsigned int) ch_55;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_6 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _6 + 4294967231;
bb index := 4
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_7 = _6 + 4294967231;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (unsigned int) ch_55;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_2 = (unsigned int) ch_55;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_1 = ch_55 != 95;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_1 = ch_55 != 95;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _1 & _4;
bb index := 3
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
_5 = _1 & _4;
./benchmarks/tmux/leak_10/tmux_leak_10.c:104:8: warning: use location
   if (!cmd_string_first(ch))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_82(D)>
ch_53 = cmd_string_getc (s_50(D), p_51(D));
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================
ch_53 = cmd_string_getc (s_50(D), p_51(D));
./benchmarks/tmux/leak_10/tmux_leak_10.c:97:2: warning: use location
  switch (ch = cmd_string_getc(s, p)) {
  ^
this stmt is child function---cmd_string_getc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>
trace fucntion name:cmd_string_getc 
[40;44m =======trace_function_path cmd_string_getc  function_call count: 0 level :0========  [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1deff78
    type <pointer_type 0x7fa4a1da9dc8
        type <integer_type 0x7fa4a1da9d20 char readonly string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9dc8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa4a1dd9f00 s>
    def_stmt GIMPLE_NOP
    version 50
    ptr-info 0x7fa4a1e31078>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fa4a1de6720 type <pointer_type 0x7fa4a1da9a80> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
buf_40 = PHI <buf_59(8), buf_64(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: use location
     buf = xrealloc(buf, 1, len + 1);
         ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = buf_64 + len_42;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
buf_40 = PHI <buf_59(8), buf_64(14)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
bb index := 21
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 70

======================================================================
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: use location
  buf = xrealloc(buf, 1, len + 1);
      ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: use location
     buf = xrealloc(buf, 1, len + 1);
         ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_20 = VDEF <.MEM_19(D)>
newptr_11 = realloc (oldptr_9(D), newsize_7);
./benchmarks/tmux/leak_10/tmux_leak_10.c:57:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with buf ========= [0m
[40;36m ======= relate stmt argument:buf ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = buf_64 + len_42;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
bb index := 14
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1defe58
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1ded360 buf>
    def_stmt buf_40 = PHI <buf_59(8), buf_64(14)>
    version 40
    ptr-info 0x7fa4a1e31030>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_41 = PHI <0B(2), 0B(4), buf_40(13), buf_40(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: use location
  free(buf);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_36 = buf_69 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:5: warning: use location
  buf[len] = '\0';
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_92 = VDEF <.MEM_91>
*_36 = 0;
./benchmarks/tmux/leak_10/tmux_leak_10.c:134:11: warning: use location
  buf[len] = '\0';
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
_27 = buf_64 + len_42;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:8: warning: use location
     buf[len++] = ch;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
# .MEM_89 = VDEF <.MEM_88>
*_27 = _28;
./benchmarks/tmux/leak_10/tmux_leak_10.c:123:16: warning: use location
     buf[len++] = ch;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_91 = VDEF <.MEM_79>
buf_69 = xrealloc (buf_40, 1, _35);
./benchmarks/tmux/leak_10/tmux_leak_10.c:133:6: warning: Use after free error!: free location 
  buf = xrealloc(buf, 1, len + 1);
      ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
buf_64 = xrealloc (buf_40, 1, _25);
./benchmarks/tmux/leak_10/tmux_leak_10.c:122:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1);
         ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_93 = VDEF <.MEM_92>
free (buf_69);
./benchmarks/tmux/leak_10/tmux_leak_10.c:136:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_96 = VDEF <.MEM_80>
free (buf_41);
./benchmarks/tmux/leak_10/tmux_leak_10.c:142:2: warning: Use after free error!: free location 
  free(buf);
  ^
buf_40 = PHI <buf_59(8), buf_64(14)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fa4a1d9dd40
    type <pointer_type 0x7fa4a1dd8690
        type <array_type 0x7fa4a1dcf348 type <integer_type 0x7fa4a1da99d8 char>
            QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fa4a1dcf2a0>
            pointer_to_this <pointer_type 0x7fa4a1dd8690>>
        unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fa4a1de67c8 type <array_type 0x7fa4a1dcf348>
        readonly constant static "\000">
    ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11 start: ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11 finish: ./benchmarks/tmux/leak_10/tmux_leak_10.c:138:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1defd80
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fa4a1e31018>
# VUSE <.MEM_93>
_37 = envent_72(D)->value;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
_74 = strdup (_37);
bb index := 20
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 70

======================================================================
_74 = strdup (_37);
./benchmarks/tmux/leak_10/tmux_leak_10.c:139:10: warning: use location
  return (xstrdup(envent->value));
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1defd80
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fa4a1e31018>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
bb index := 22
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 70

======================================================================
_43 = PHI <t_56(D)(7), _76(19), _74(20), 0B(21)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1defd80
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
   
    def_stmt _37 = envent_72(D)->value;
    version 37
    ptr-info 0x7fa4a1e31018>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:cmd_string_variable========= [0m
[40;42m =======pre add _ fucntion:isspace========= [0m
[40;33m =======POP node_fun stack:isspace========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fa4a1df96c0
    type <pointer_type 0x7fa4a229a0a8
        type <void_type 0x7fa4a2293f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa4a229a0a8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa4a229fbd0>>
   
    def_stmt _1 = malloc (1);
    version 1
    ptr-info 0x7fa4a1e31258>
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
causes.list = _1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:441:14: warning: use location
  causes.list = malloc(1);
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_4 = VDEF <.MEM_3>
causes.list = _1;
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
causes.list = _1;
./benchmarks/tmux/leak_10/tmux_leak_10.c:441:14: warning: use location
  causes.list = malloc(1);
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);
bb index := 2
# VUSE <.MEM_20>
return newptr_11;
./benchmarks/tmux/leak_10/tmux_leak_10.c:60:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);
bb index := 2
# VUSE <.MEM_15>
return _8;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);
bb index := 2
# VUSE <.MEM_81>
return _43;
lto1: warning: use location
beacuse in succ := 22 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 22

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_3 = VDEF <.MEM_2(D)>
_1 = malloc (1);
bb index := 2
# VUSE <.MEM_10>
return 0;
lto1: warning: use location
beacuse in succ := 70 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 70

======================================================================
_1 = malloc (1);
./benchmarks/tmux/leak_10/tmux_leak_10.c:441:16: warning: use location
  causes.list = malloc(1);
                ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fa4a1df96c0
    type <pointer_type 0x7fa4a229a0a8
        type <void_type 0x7fa4a2293f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa4a229a0a8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa4a229fbd0>>
   
    def_stmt _1 = malloc (1);
    version 1
    ptr-info 0x7fa4a1e31258>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fa4a1df96c0
    type <pointer_type 0x7fa4a229a0a8
        type <void_type 0x7fa4a2293f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa4a229a0a8>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa4a229fbd0>>
   
    def_stmt _1 = malloc (1);
    version 1
    ptr-info 0x7fa4a1e31258>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_210 = VDEF <.MEM_166>
free (_123);
./benchmarks/tmux/leak_10/tmux_leak_10.c:331:4: warning: use location
    free(argv[i]);
    ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fa4a1e0b828
    type <pointer_type 0x7fa4a1da9a80
        type <integer_type 0x7fa4a1da99d8 char public string-flag QI
            size <integer_cst 0x7fa4a227fcd8 constant 8>
            unit size <integer_cst 0x7fa4a227fcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa4a22933f0 precision 8 min <integer_cst 0x7fa4a1dac180 -128> max <integer_cst 0x7fa4a1dac168 127> context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
            pointer_to_this <pointer_type 0x7fa4a1da9a80>>
        public unsigned DI
        size <integer_cst 0x7fa4a227fbe8 constant 64>
        unit size <integer_cst 0x7fa4a227fc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fa4a228a168 ./benchmarks/tmux/leak_10/tmux_leak_10.c>
        pointer_to_this <pointer_type 0x7fa4a1da9b28>>
    var <var_decl 0x7fa4a1e0c2d0 line>
    def_stmt line_23 = malloc (_22);
    version 23
    ptr-info 0x7fa4a1e312b8>
# .MEM_180 = VDEF <.MEM_179>
line_23 = malloc (_22);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
At top level:
lto1: internal compiler error: Segmentation fault
unrecognized DWARF version in .debug_info at 6
0x7fa4a2236b90 checkPointerConstraint(tree_node*, ptb*, gimple_array*, tree_node*, int)
	/root/x21321219/new_gccplugin/Compiler/Algorithm.h:3048
0x7fa4a222a970 walk_function_path(tree_node*, int, ptb*, gimple_array*)
	/root/x21321219/new_gccplugin/Compiler/trace.h:1616
0x7fa4a222abb6 dump_fucntion(cgraph_node*, ptb*, gimple_array*)
	/root/x21321219/new_gccplugin/Compiler/trace.h:1658
0x7fa4a22359fa PointerConstraint(ptb*, ptb*)
	/root/x21321219/new_gccplugin/Compiler/Algorithm.h:2623
0x7fa4a223c3d6 detect()
	/root/x21321219/new_gccplugin/Compiler/Algorithm.h:5291
0x7fa4a223ccdc execute_detect
	/root/x21321219/new_gccplugin/Compiler/gcc_plugin.c:108
0x7fa4a223cd52 execute
	/root/x21321219/new_gccplugin/Compiler/gcc_plugin.c:129
Please submit a full bug report,
with preprocessed source if appropriate.
Please include the complete backtrace with any bug report.
See <file:///usr/share/doc/gcc-7/README.Bugs> for instructions.
lto-wrapper: fatal error: gcc-7 returned 1 exit status
compilation terminated.
/usr/bin/ld: error: lto-wrapper failed
collect2: error: ld returned 1 exit status
