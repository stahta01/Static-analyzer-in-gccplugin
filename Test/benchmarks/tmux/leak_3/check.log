In file included from ./benchmarks/tmux/leak_3/tmux_leak_3.c:12:
./benchmarks/tmux/leak_3/tmux_leak_3.c: In function â€˜server_client_get_pathâ€™:
./benchmarks/tmux/leak_3/../stdio.h:138:20: warning: implicit declaration of function â€˜strdupâ€™ [-Wimplicit-function-declaration]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/tmux/leak_3/tmux_leak_3.c:77:24: note: in expansion of macro â€˜xstrdupâ€™
   77 |                 path = xstrdup(file);                           /* allocation site */
      |                        ^~~~~~~
./benchmarks/tmux/leak_3/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/tmux/leak_3/tmux_leak_3.c:77:24: note: in expansion of macro â€˜xstrdupâ€™
   77 |                 path = xstrdup(file);                           /* allocation site */
      |                        ^~~~~~~
./benchmarks/tmux/leak_3/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/tmux/leak_3/tmux_leak_3.c:81:17: note: in expansion of macro â€˜xstrdupâ€™
   81 |         return (xstrdup(resolved));                             /* allocation site */
      |                 ^~~~~~~
./benchmarks/tmux/leak_3/tmux_leak_3.c: In function â€˜cmd_save_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:13: warning: implicit declaration of function â€˜strcmpâ€™ [-Wimplicit-function-declaration]
  142 |         if (strcmp(path, "-") == 0) {
      |             ^~~~~~
./benchmarks/tmux/leak_3/tmux_leak_3.c:14:1: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strcmpâ€™
   13 | #include "../tmux.h"
  +++ |+#include <string.h>
   14 | 
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -0.4%|          |
nothrow                          |      |      |      |      |     -0.4%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                              |      |      |      |      |     -3.3%|          |
forwprop                         |      |      |      |      |     -3.4%|          |
ethread              ------------|      |      |      |      |          |          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                            |      |      |      |      |     -0.4%|          |
phiopt                           |      |      |      |      |     -0.4%|          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

=======node_fun:cmd_save_buffer_exec=========

--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 2
succs:= 3
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 4
succs:= 5
--------GIMPLE Cond -------
succs:= 5
succs:= 6
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 8
succs:= 8
--------GIMPLE Cond -------
succs:= 10
succs:= 10
succs:= 3
succs:= 6
succs:= 7
=======node_fun:cmd_load_buffer_exec=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 4
succs:= 5
succs:= 5
=======node_fun:server_client_get_path=========

--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
succs:= 4
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_2 = VDEF <.MEM_1(D)>
cmd_load_buffer_exec (&self, &item);
# .MEM_3 = VDEF <.MEM_2>
cmd_save_buffer_exec (&self, &item);
# VUSE <.MEM_20(D)>
_1 = strcmp (path_12(D), "-");
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
# .MEM_22 = VDEF <.MEM_21>
f_16 = fopen (file_14, "wb");
# .MEM_28 = VDEF <.MEM_22>
printf ("%s", file_14);
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
# .MEM_18 = VDEF <.MEM_17>
f_14 = fopen (file_12, "rb");
# .MEM_24 = VDEF <.MEM_18>
printf ("%s", file_12);
# .MEM_19 = VDEF <.MEM_18>
_2 = ferror (f_14);
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
# .MEM_20 = VDEF <.MEM_19>
fclose (f_14);
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
# .MEM_20 = VDEF <.MEM_16>
_2 = realpath (path_3, &resolved);
# .MEM_22 = VDEF <.MEM_21>
_15 = strdup (&resolved);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:cmd_save_buffer_exec========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_save_buffer_exec  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:fwrite========= [0m
[40;33m =======POP node_fun stack:fwrite========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre add _ fucntion:server_client_get_path========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path server_client_get_path  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;33m =======POP node_fun stack:realpath========= [0m
[40;42m =======pre_check_funciton:server_client_get_path========= [0m
[40;42m =======start_check_funciton:server_client_get_path========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f551bcae678
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_11 = strdup (file_8(D));
    version:11
    ptr-info 0x7f551bca1c00>
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
path_11 = strdup (file_8(D));
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:77:24: warning: use location
   77 |                 path = xstrdup(file);                           /* allocation site */
      |                        ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_3 = PHI <path_9(D)(2), path_11(3)>
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
path_3 = PHI <path_9(D)(2), path_11(3)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
bb index := 5
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
free (path_3);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_16>
_2 = realpath (path_3, &resolved);
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
_2 = realpath (path_3, &resolved);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:13: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |             ^
this stmt is child function---realpath-----

 ================== trace ================== 
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_1 = *file_8(D);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:13: warning: use location
   76 |         if (*file == '/')
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (_1 == 47)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
if (_1 == 47)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
Cond in fucntion server_client_get_path basic block 2
 ================== possible direct basic block ================= 
from server_client_get_path basic block 3
 ================== possible direct basic block ================= 
from server_client_get_path basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae678
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_11 = strdup (file_8(D));
    version:11
    ptr-info 0x7f551bca1c00>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
path_3 = PHI <path_9(D)(2), path_11(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
path_3 = PHI <path_9(D)(2), path_11(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f551bcae6c0
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
   
    def_stmt _15 = strdup (&resolved);
    version:15
    ptr-info 0x7f551bca1c18>
# .MEM_22 = VDEF <.MEM_21>
_15 = strdup (&resolved);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_15 = strdup (&resolved);
bb index := 5
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
_15 = strdup (&resolved);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:81:17: warning: use location
   81 |         return (xstrdup(resolved));                             /* allocation site */
      |                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae6c0
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
   
    def_stmt _15 = strdup (&resolved);
    version:15
    ptr-info 0x7f551bca1c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551bcae5e8
    type <pointer_type 0x7f551bc7fb28
        type <integer_type 0x7f551bc7fa80 char readonly public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fb28>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f551bca7400 file>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f551bca1be8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
path_11 = strdup (file_8(D));
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:77:24: warning: use location
   77 |                 path = xstrdup(file);                           /* allocation site */
      |                        ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_3 = PHI <path_9(D)(2), path_11(3)>
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
path_3 = PHI <path_9(D)(2), path_11(3)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
bb index := 5
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
free (path_3);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_16>
_2 = realpath (path_3, &resolved);
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
_2 = realpath (path_3, &resolved);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:13: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |             ^
this stmt is child function---realpath-----

 ================== trace ================== 
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_1 = *file_8(D);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:13: warning: use location
   76 |         if (*file == '/')
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (_1 == 47)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
if (_1 == 47)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
Cond in fucntion server_client_get_path basic block 2
 ================== possible direct basic block ================= 
from server_client_get_path basic block 3
 ================== possible direct basic block ================= 
from server_client_get_path basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae5e8
    type <pointer_type 0x7f551bc7fb28
        type <integer_type 0x7f551bc7fa80 char readonly public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fb28>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f551bca7400 file>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f551bca1be8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
path_3 = PHI <path_9(D)(2), path_11(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551bcae558
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_3 = PHI <path_9(D)(2), path_11(3)>
    version:3
    ptr-info 0x7f551bca1bb8>
path_3 = PHI <path_9(D)(2), path_11(3)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
bb index := 5
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
free (path_3);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_16>
_2 = realpath (path_3, &resolved);
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
_2 = realpath (path_3, &resolved);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:13: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |             ^
this stmt is child function---realpath-----

 ================== trace ================== 
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae558
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_3 = PHI <path_9(D)(2), path_11(3)>
    version:3
    ptr-info 0x7f551bca1bb8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f551c3529a0
    type <pointer_type 0x7f551bc8fb28
        type <array_type 0x7f551bc8f930 type <integer_type 0x7f551bc7f9d8 char>
            BLK
            size <integer_cst 0x7f551bc76be8 constant 32768>
            unit-size <integer_cst 0x7f551bc76bd0 constant 4096>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f551bc8f888>
            pointer_to_this <pointer_type 0x7f551bc8fb28>>
        unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f551bcb1120 resolved type <array_type 0x7f551bc8f930>
        addressable BLK ./benchmarks/tmux/leak_3/tmux_leak_3.c:74:14 size <integer_cst 0x7f551bc76be8 32768> unit-size <integer_cst 0x7f551bc76bd0 4096>
        align:8 warn_if_not_align:0 context <function_decl 0x7f551bc80a00 server_client_get_path>>
    ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10 start: ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10 finish: ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:server_client_get_path========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre_check_funciton:cmd_save_buffer_exec========= [0m
[40;42m =======start_check_funciton:cmd_save_buffer_exec========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f551c15ea20
    type <pointer_type 0x7f551bc7fb28
        type <integer_type 0x7f551bc7fa80 char readonly public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fb28>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca81b0 path>
    def_stmt GIMPLE_NOP
    version:12>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strcmp (path_12(D), "-");
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:13: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 2
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 3
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: use location
  153 |         file = server_client_get_path(c, path);
      |                ^
this stmt is child function---server_client_get_path-----

 ================== trace ================== 
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :0========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;46m =======add node_fun stack:realpath========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
printf ("%s", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:156:17: warning: use location
  156 |                 printf("%s", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:3 
f_16 = fopen (file_14, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:13: warning: use location
  154 |         f = fopen(file, flags);
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:3 
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:3 
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:3 
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^
this stmt is child function---fwrite-----

 ================== trace ================== 
trace fucntion name:fwrite 

 ================== trace ================== 
trace fucntion free:3 
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^
if (_5 != bufsize_18(D))

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 10
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 11
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
if (f_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 8
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 9
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = c_11->flags;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:45: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                                             ^
_4 = _3 & 8192;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:53: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                                                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20(D)>
_2 = c_11->session;
bb index := 4
# VUSE <.MEM_19>
return _6;
In function â€˜cmd_save_buffer_execâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20(D)>
_2 = c_11->session;
bb index := 4
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_2 = c_11->session;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:22: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_19>
return _6;
In function â€˜cmd_save_buffer_execâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
if (_2 == 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:20: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                    ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:20: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 4
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 6
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_11 == 0B)
bb index := 3
# VUSE <.MEM_19>
return _6;
In function â€˜cmd_save_buffer_execâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_11 == 0B)
bb index := 3
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
if (c_11 == 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:20: warning: use location
  143 |                 if (c == NULL) {
      |                    ^
if (c_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:20: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 3
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 14
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551c15ea20
    type <pointer_type 0x7f551bc7fb28
        type <integer_type 0x7f551bc7fa80 char readonly public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fb28>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca81b0 path>
    def_stmt GIMPLE_NOP
    version:12>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_25 = VDEF <.MEM_24>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_28 = VDEF <.MEM_22>
printf ("%s", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:156:17: warning: use location
  156 |                 printf("%s", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_22 = VDEF <.MEM_21>
f_16 = fopen (file_14, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:13: warning: use location
  154 |         f = fopen(file, flags);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551c15e9d8
    type <pointer_type 0x7f551bc8f7e0
        type <record_type 0x7f551bc8f738 client BLK
            size <integer_cst 0x7f551bc76ba0 constant 6336>
            unit-size <integer_cst 0x7f551bc76ab0 constant 792>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc8f738 fields <field_decl 0x7f551bc91850 name> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc8f7e0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca8240 c>
    def_stmt c_11 = item_10(D)->client;
    version:11
    ptr-info 0x7f551bca1a98>
# VUSE <.MEM_20(D)>
c_11 = item_10(D)->client;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: use location
  153 |         file = server_client_get_path(c, path);
      |                ^
this stmt is child function---server_client_get_path-----

 ================== trace ================== 
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :0========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
[40;36m ======= node_fun:server_client_get_path========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;46m =======add node_fun stack:realpath========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
printf ("%s", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:156:17: warning: use location
  156 |                 printf("%s", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
f_16 = fopen (file_14, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:13: warning: use location
  154 |         f = fopen(file, flags);
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:2 
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^
this stmt is child function---fwrite-----

 ================== trace ================== 
trace fucntion name:fwrite 

 ================== trace ================== 
trace fucntion free:2 
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^
if (_5 != bufsize_18(D))

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 10
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 11
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
if (f_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 8
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 9
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = strcmp (path_12(D), "-");
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:13: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:2 
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 2
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 3
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = c_11->flags;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:45: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                                             ^
_4 = _3 & 8192;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:53: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                                                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20(D)>
_2 = c_11->session;
bb index := 4
# VUSE <.MEM_19>
return _6;
In function â€˜cmd_save_buffer_execâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20(D)>
_2 = c_11->session;
bb index := 4
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_2 = c_11->session;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:22: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_19>
return _6;
In function â€˜cmd_save_buffer_execâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
if (_2 == 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:20: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                    ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:20: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 4
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 6
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_11 == 0B)
bb index := 3
# VUSE <.MEM_19>
return _6;
In function â€˜cmd_save_buffer_execâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_11 == 0B)
bb index := 3
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
if (c_11 == 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:20: warning: use location
  143 |                 if (c == NULL) {
      |                    ^
if (c_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:20: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 3
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 14
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551c15e9d8
    type <pointer_type 0x7f551bc8f7e0
        type <record_type 0x7f551bc8f738 client BLK
            size <integer_cst 0x7f551bc76ba0 constant 6336>
            unit-size <integer_cst 0x7f551bc76ab0 constant 792>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc8f738 fields <field_decl 0x7f551bc91850 name> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc8f7e0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca8240 c>
    def_stmt c_11 = item_10(D)->client;
    version:11
    ptr-info 0x7f551bca1a98>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551c15ea68
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bca8090 file>
    def_stmt file_14 = server_client_get_path (c_11, path_12(D));
    version:14
    ptr-info 0x7f551bca1ab0>
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));

 ================== trace ptable================== 
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :888========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
[40;36m ======= node_fun:server_client_get_path========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;46m =======add node_fun stack:realpath========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---server_client_get_path-----
this other function ------server_client_get_path-----
 
 Start check Pointer Collect  

======================================================================
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: use location
  153 |         file = server_client_get_path(c, path);
      |                ^
this stmt is child function---server_client_get_path-----

 ================== trace ================== 
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :0========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
[40;36m ======= node_fun:server_client_get_path========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;46m =======add node_fun stack:realpath========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
printf ("%s", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:156:17: warning: use location
  156 |                 printf("%s", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:3 
f_16 = fopen (file_14, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:13: warning: use location
  154 |         f = fopen(file, flags);
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:3 
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:3 
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:3 
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^
this stmt is child function---fwrite-----

 ================== trace ================== 
trace fucntion name:fwrite 

 ================== trace ================== 
trace fucntion free:3 
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^
if (_5 != bufsize_18(D))

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 10
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 11
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
if (f_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 8
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 9
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = strcmp (path_12(D), "-");
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:13: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:3 
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 2
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 3
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = c_11->flags;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:45: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                                             ^
_4 = _3 & 8192;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:53: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                                                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20(D)>
_2 = c_11->session;
bb index := 4
# VUSE <.MEM_19>
return _6;
In function â€˜cmd_save_buffer_execâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20(D)>
_2 = c_11->session;
bb index := 4
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_2 = c_11->session;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:22: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_19>
return _6;
In function â€˜cmd_save_buffer_execâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
if (_2 == 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:20: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                    ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:20: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 4
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 6
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_11 == 0B)
bb index := 3
# VUSE <.MEM_19>
return _6;
In function â€˜cmd_save_buffer_execâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_11 == 0B)
bb index := 3
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
if (c_11 == 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:20: warning: use location
  143 |                 if (c == NULL) {
      |                    ^
if (c_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:20: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 3
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 14
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551c15ea68
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bca8090 file>
    def_stmt file_14 = server_client_get_path (c_11, path_12(D));
    version:14
    ptr-info 0x7f551bca1ab0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_25 = VDEF <.MEM_24>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_28 = VDEF <.MEM_22>
printf ("%s", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:156:17: warning: use location
  156 |                 printf("%s", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_22 = VDEF <.MEM_21>
f_16 = fopen (file_14, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:13: warning: use location
  154 |         f = fopen(file, flags);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f551c352c60
    type <pointer_type 0x7f551bc98348
        type <array_type 0x7f551bc982a0 type <integer_type 0x7f551bc7f9d8 char>
            BLK
            size <integer_cst 0x7f551c174060 constant 24>
            unit-size <integer_cst 0x7f551bc76d38 constant 3>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f551bc981f8>
            pointer_to_this <pointer_type 0x7f551bc98348>>
        unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f551bca18a0 type <array_type 0x7f551bc982a0>
        readonly constant static "%s\000">
    ./benchmarks/tmux/leak_3/tmux_leak_3.c:156:10 start: ./benchmarks/tmux/leak_3/tmux_leak_3.c:156:10 finish: ./benchmarks/tmux/leak_3/tmux_leak_3.c:156:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551c15eaf8
    type <pointer_type 0x7f551bc7fb28
        type <integer_type 0x7f551bc7fa80 char readonly public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fb28>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca8120 bufdata>
    def_stmt GIMPLE_NOP
    version:17>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^
this stmt is child function---fwrite-----

 ================== trace ================== 
trace fucntion name:fwrite 

 ================== trace ================== 
trace fucntion free:0 
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^
if (_5 != bufsize_18(D))

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 10
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 11
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
if (f_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 8
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 9
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551c15eaf8
    type <pointer_type 0x7f551bc7fb28
        type <integer_type 0x7f551bc7fa80 char readonly public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fb28>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca8120 bufdata>
    def_stmt GIMPLE_NOP
    version:17>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f551c352ce0
    type <pointer_type 0x7f551bc9a690
        type <array_type 0x7f551bc9a5e8 type <integer_type 0x7f551bc7f9d8 char>
            TI
            size <integer_cst 0x7f551c156c00 constant 128>
            unit-size <integer_cst 0x7f551c156c18 constant 16>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f551bc9a540>
            pointer_to_this <pointer_type 0x7f551bc9a690>>
        unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f551bca2de8 type <array_type 0x7f551bc9a5e8>
        readonly constant static "%s: write error\000">
    ./benchmarks/tmux/leak_3/tmux_leak_3.c:162:10 start: ./benchmarks/tmux/leak_3/tmux_leak_3.c:162:10 finish: ./benchmarks/tmux/leak_3/tmux_leak_3.c:162:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551c15eab0
    type <pointer_type 0x7f551bc95bd0
        type <record_type 0x7f551bc95b28 FILE BLK
            size <integer_cst 0x7f551bc76c78 constant 1728>
            unit-size <integer_cst 0x7f551bc76cf0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc95a80 fields <field_decl 0x7f551bc97130 _flags> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc95bd0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551c9fef30 f>
    def_stmt f_16 = fopen (file_14, "wb");
    version:16
    ptr-info 0x7f551bca1ac8>
# .MEM_22 = VDEF <.MEM_21>
f_16 = fopen (file_14, "wb");

 ================== trace ptable================== 
trace fucntion name:fopen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---fopen-----
this other function ------fopen-----
 
 Start check Pointer Collect  

======================================================================
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
printf ("%s", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:156:17: warning: use location
  156 |                 printf("%s", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
f_16 = fopen (file_14, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:13: warning: use location
  154 |         f = fopen(file, flags);
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:2 

 Expand conflict 
 The same function may have multiple branches :fclose
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^
=======================Path Constaint===========================

=succs:= 10
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^
	relate logic:= 0
=succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^
this stmt is child function---fwrite-----

 ================== trace ================== 
trace fucntion name:fwrite 

 ================== trace ================== 
trace fucntion free:2 
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^
if (_5 != bufsize_18(D))

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 10
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 11
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
if (f_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 8
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 9
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551c15eab0
    type <pointer_type 0x7f551bc95bd0
        type <record_type 0x7f551bc95b28 FILE BLK
            size <integer_cst 0x7f551bc76c78 constant 1728>
            unit-size <integer_cst 0x7f551bc76cf0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc95a80 fields <field_decl 0x7f551bc97130 _flags> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc95bd0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551c9fef30 f>
    def_stmt f_16 = fopen (file_14, "wb");
    version:16
    ptr-info 0x7f551bca1ac8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551c15eab0
    type <pointer_type 0x7f551bc95bd0
        type <record_type 0x7f551bc95b28 FILE BLK
            size <integer_cst 0x7f551bc76c78 constant 1728>
            unit-size <integer_cst 0x7f551bc76cf0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc95a80 fields <field_decl 0x7f551bc97130 _flags> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc95bd0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551c9fef30 f>
    def_stmt f_16 = fopen (file_14, "wb");
    version:16
    ptr-info 0x7f551bca1ac8>
# .MEM_22 = VDEF <.MEM_21>
f_16 = fopen (file_14, "wb");

 ================== trace ptable================== 
trace fucntion name:fopen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---fopen-----
this other function ------fopen-----
 
 Start check Pointer Collect  

======================================================================
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
printf ("%s", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:156:17: warning: use location
  156 |                 printf("%s", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
f_16 = fopen (file_14, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:13: warning: use location
  154 |         f = fopen(file, flags);
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:2 
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 

 Expand conflict 
 The same function may have multiple branches :fclose
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^
=======================Path Constaint===========================

succs:= 10
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^
	relate logic:= 1
succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 0
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^
this stmt is child function---fwrite-----

 ================== trace ================== 
trace fucntion name:fwrite 

 ================== trace ================== 
trace fucntion free:2 
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^
if (_5 != bufsize_18(D))

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 10
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 11
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
if (f_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 8
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 9
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551c15eab0
    type <pointer_type 0x7f551bc95bd0
        type <record_type 0x7f551bc95b28 FILE BLK
            size <integer_cst 0x7f551bc76c78 constant 1728>
            unit-size <integer_cst 0x7f551bc76cf0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc95a80 fields <field_decl 0x7f551bc97130 _flags> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc95bd0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551c9fef30 f>
    def_stmt f_16 = fopen (file_14, "wb");
    version:16
    ptr-info 0x7f551bca1ac8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:cmd_save_buffer_exec========= [0m
[40;42m =======pre add _ fucntion:cmd_load_buffer_exec========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path cmd_load_buffer_exec  function_call count: 6 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:ferror========= [0m
[40;33m =======POP node_fun stack:ferror========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre add _ fucntion:server_client_get_path========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path server_client_get_path  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;33m =======POP node_fun stack:realpath========= [0m
[40;42m =======pre_check_funciton:server_client_get_path========= [0m
[40;42m =======start_check_funciton:server_client_get_path========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f551bcae678
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_11 = strdup (file_8(D));
    version:11
    ptr-info 0x7f551bca1c00>
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
path_11 = strdup (file_8(D));
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:77:24: warning: use location
   77 |                 path = xstrdup(file);                           /* allocation site */
      |                        ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_3 = PHI <path_9(D)(2), path_11(3)>
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
path_3 = PHI <path_9(D)(2), path_11(3)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
bb index := 5
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
free (path_3);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_16>
_2 = realpath (path_3, &resolved);
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
_2 = realpath (path_3, &resolved);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:13: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |             ^
this stmt is child function---realpath-----

 ================== trace ================== 
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_1 = *file_8(D);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:13: warning: use location
   76 |         if (*file == '/')
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (_1 == 47)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
if (_1 == 47)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
Cond in fucntion server_client_get_path basic block 2
 ================== possible direct basic block ================= 
from server_client_get_path basic block 3
 ================== possible direct basic block ================= 
from server_client_get_path basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae678
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_11 = strdup (file_8(D));
    version:11
    ptr-info 0x7f551bca1c00>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
path_3 = PHI <path_9(D)(2), path_11(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
path_3 = PHI <path_9(D)(2), path_11(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f551bcae6c0
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
   
    def_stmt _15 = strdup (&resolved);
    version:15
    ptr-info 0x7f551bca1c18>
# .MEM_22 = VDEF <.MEM_21>
_15 = strdup (&resolved);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_15 = strdup (&resolved);
bb index := 5
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
_15 = strdup (&resolved);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:81:17: warning: use location
   81 |         return (xstrdup(resolved));                             /* allocation site */
      |                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae6c0
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
   
    def_stmt _15 = strdup (&resolved);
    version:15
    ptr-info 0x7f551bca1c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551bcae5e8
    type <pointer_type 0x7f551bc7fb28
        type <integer_type 0x7f551bc7fa80 char readonly public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fb28>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f551bca7400 file>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f551bca1be8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
path_11 = strdup (file_8(D));
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:77:24: warning: use location
   77 |                 path = xstrdup(file);                           /* allocation site */
      |                        ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_3 = PHI <path_9(D)(2), path_11(3)>
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
path_3 = PHI <path_9(D)(2), path_11(3)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
bb index := 5
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
free (path_3);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_16>
_2 = realpath (path_3, &resolved);
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
_2 = realpath (path_3, &resolved);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:13: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |             ^
this stmt is child function---realpath-----

 ================== trace ================== 
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_1 = *file_8(D);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:13: warning: use location
   76 |         if (*file == '/')
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (_1 == 47)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
if (_1 == 47)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
Cond in fucntion server_client_get_path basic block 2
 ================== possible direct basic block ================= 
from server_client_get_path basic block 3
 ================== possible direct basic block ================= 
from server_client_get_path basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae5e8
    type <pointer_type 0x7f551bc7fb28
        type <integer_type 0x7f551bc7fa80 char readonly public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fb28>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f551bca7400 file>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f551bca1be8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
path_3 = PHI <path_9(D)(2), path_11(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551bcae558
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_3 = PHI <path_9(D)(2), path_11(3)>
    version:3
    ptr-info 0x7f551bca1bb8>
path_3 = PHI <path_9(D)(2), path_11(3)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
bb index := 5
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
free (path_3);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_16>
_2 = realpath (path_3, &resolved);
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
_2 = realpath (path_3, &resolved);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:13: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |             ^
this stmt is child function---realpath-----

 ================== trace ================== 
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae558
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_3 = PHI <path_9(D)(2), path_11(3)>
    version:3
    ptr-info 0x7f551bca1bb8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f551c3529a0
    type <pointer_type 0x7f551bc8fb28
        type <array_type 0x7f551bc8f930 type <integer_type 0x7f551bc7f9d8 char>
            BLK
            size <integer_cst 0x7f551bc76be8 constant 32768>
            unit-size <integer_cst 0x7f551bc76bd0 constant 4096>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f551bc8f888>
            pointer_to_this <pointer_type 0x7f551bc8fb28>>
        unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f551bcb1120 resolved type <array_type 0x7f551bc8f930>
        addressable BLK ./benchmarks/tmux/leak_3/tmux_leak_3.c:74:14 size <integer_cst 0x7f551bc76be8 32768> unit-size <integer_cst 0x7f551bc76bd0 4096>
        align:8 warn_if_not_align:0 context <function_decl 0x7f551bc80a00 server_client_get_path>>
    ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10 start: ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10 finish: ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:server_client_get_path========= [0m
[40;42m =======pre_check_funciton:cmd_load_buffer_exec========= [0m
[40;42m =======start_check_funciton:cmd_load_buffer_exec========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f551bcae090
    type <pointer_type 0x7f551bc8f7e0
        type <record_type 0x7f551bc8f738 client BLK
            size <integer_cst 0x7f551bc76ba0 constant 6336>
            unit-size <integer_cst 0x7f551bc76ab0 constant 792>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc8f738 fields <field_decl 0x7f551bc91850 name> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc8f7e0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca8a20 c>
    def_stmt c_9 = item_8(D)->client;
    version:9
    ptr-info 0x7f551bca1b40>
# VUSE <.MEM_16(D)>
c_9 = item_8(D)->client;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: use location
  100 |         file = server_client_get_path(c, path);
      |                ^
this stmt is child function---server_client_get_path-----

 ================== trace ================== 
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :0========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
[40;36m ======= node_fun:server_client_get_path========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;46m =======add node_fun stack:realpath========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: use location
  118 |         free(file);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
bb index := 5
# VUSE <.MEM_19>
return _6;
In function â€˜cmd_load_buffer_execâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
bb index := 5
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
printf ("%s: read error", file_12);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:111:17: warning: use location
  111 |                 printf("%s: read error", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: use location
  104 |                 free(file);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
printf ("%s", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:103:17: warning: use location
  103 |                 printf("%s", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
f_14 = fopen (file_12, "rb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:101:13: warning: use location
  101 |         f = fopen(file, "rb");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
bb index := 7
# VUSE <.MEM_19>
return _6;
In function â€˜cmd_load_buffer_execâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
bb index := 7
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================
fclose (f_14);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:9: warning: use location
  117 |         fclose(f);
      |         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_14 != 0B)
bb index := 5
# VUSE <.MEM_19>
return _6;
In function â€˜cmd_load_buffer_execâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_14 != 0B)
bb index := 5
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
if (f_14 != 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
  124 |         if (f != NULL)
      |            ^
if (f_14 != 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
Cond in fucntion cmd_load_buffer_exec basic block 5
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 7
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_2 = ferror (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:13: warning: use location
  110 |         if (ferror(f)) {
      |             ^
this stmt is child function---ferror-----

 ================== trace ================== 
trace fucntion name:ferror 

 ================== trace ================== 
trace fucntion free:2 
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^
if (_2 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
Cond in fucntion cmd_load_buffer_exec basic block 4
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 5
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae090
    type <pointer_type 0x7f551bc8f7e0
        type <record_type 0x7f551bc8f738 client BLK
            size <integer_cst 0x7f551bc76ba0 constant 6336>
            unit-size <integer_cst 0x7f551bc76ab0 constant 792>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc8f738 fields <field_decl 0x7f551bc91850 name> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc8f7e0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca8a20 c>
    def_stmt c_9 = item_8(D)->client;
    version:9
    ptr-info 0x7f551bca1b40>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:111:17: warning: use location
  111 |                 printf("%s: read error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: Use after free error!: free location 
  118 |         free(file);
      |         ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^
	relate logic:= 0
=succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_20 = VDEF <.MEM_19>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:9: warning: use location
  117 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (f_14 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
  124 |         if (f != NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_19 = VDEF <.MEM_18>
_2 = ferror (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:13: warning: use location
  110 |         if (ferror(f)) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551bcae120
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bca8870 file>
    def_stmt file_12 = server_client_get_path (c_9, path_10);
    version:12
    ptr-info 0x7f551bca1b70>
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);

 ================== trace ptable================== 
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :888========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
[40;36m ======= node_fun:server_client_get_path========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;46m =======add node_fun stack:realpath========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---server_client_get_path-----
this other function ------server_client_get_path-----
 
 Start check Pointer Collect  

======================================================================
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: use location
  100 |         file = server_client_get_path(c, path);
      |                ^
this stmt is child function---server_client_get_path-----

 ================== trace ================== 
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :0========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
[40;36m ======= node_fun:server_client_get_path========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;46m =======add node_fun stack:realpath========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: use location
  118 |         free(file);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
bb index := 5
# VUSE <.MEM_19>
return _6;
In function â€˜cmd_load_buffer_execâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
bb index := 5
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
printf ("%s: read error", file_12);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:111:17: warning: use location
  111 |                 printf("%s: read error", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: use location
  104 |                 free(file);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
printf ("%s", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:103:17: warning: use location
  103 |                 printf("%s", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:3 
f_14 = fopen (file_12, "rb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:101:13: warning: use location
  101 |         f = fopen(file, "rb");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
bb index := 7
# VUSE <.MEM_19>
return _6;
In function â€˜cmd_load_buffer_execâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
bb index := 7
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================
fclose (f_14);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:3 
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:9: warning: use location
  117 |         fclose(f);
      |         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_14 != 0B)
bb index := 5
# VUSE <.MEM_19>
return _6;
In function â€˜cmd_load_buffer_execâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_14 != 0B)
bb index := 5
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
if (f_14 != 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
  124 |         if (f != NULL)
      |            ^
if (f_14 != 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
Cond in fucntion cmd_load_buffer_exec basic block 5
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 7
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_2 = ferror (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:13: warning: use location
  110 |         if (ferror(f)) {
      |             ^
this stmt is child function---ferror-----

 ================== trace ================== 
trace fucntion name:ferror 

 ================== trace ================== 
trace fucntion free:3 
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^
if (_2 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
Cond in fucntion cmd_load_buffer_exec basic block 4
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 5
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae120
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bca8870 file>
    def_stmt file_12 = server_client_get_path (c_9, path_10);
    version:12
    ptr-info 0x7f551bca1b70>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: use location
  104 |                 free(file);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: use location
  118 |         free(file);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_21 = VDEF <.MEM_20>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: use location
  118 |         free(file);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:111:17: warning: use location
  111 |                 printf("%s: read error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:111:17: warning: use location
  111 |                 printf("%s: read error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:111:17: warning: use location
  111 |                 printf("%s: read error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: use location
  104 |                 free(file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_24 = VDEF <.MEM_18>
printf ("%s", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:103:17: warning: use location
  103 |                 printf("%s", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_18 = VDEF <.MEM_17>
f_14 = fopen (file_12, "rb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:101:13: warning: use location
  101 |         f = fopen(file, "rb");
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: Use after free error!: free location 
  118 |         free(file);
      |         ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^
	relate logic:= 0
=succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: Use after free error!: free location 
  118 |         free(file);
      |         ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^
	relate logic:= 0
=succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_20 = VDEF <.MEM_19>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:9: warning: use location
  117 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_20 = VDEF <.MEM_19>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:9: warning: use location
  117 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_20 = VDEF <.MEM_19>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:9: warning: use location
  117 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
if (f_14 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
  124 |         if (f != NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (f_14 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
  124 |         if (f != NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (f_14 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
  124 |         if (f != NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_19 = VDEF <.MEM_18>
_2 = ferror (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:13: warning: use location
  110 |         if (ferror(f)) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_19 = VDEF <.MEM_18>
_2 = ferror (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:13: warning: use location
  110 |         if (ferror(f)) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_19 = VDEF <.MEM_18>
_2 = ferror (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:13: warning: use location
  110 |         if (ferror(f)) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f551c352e20
    type <pointer_type 0x7f551bc98348
        type <array_type 0x7f551bc982a0 type <integer_type 0x7f551bc7f9d8 char>
            BLK
            size <integer_cst 0x7f551c174060 constant 24>
            unit-size <integer_cst 0x7f551bc76d38 constant 3>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f551bc981f8>
            pointer_to_this <pointer_type 0x7f551bc98348>>
        unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f551bca1978 type <array_type 0x7f551bc982a0>
        readonly constant static "%s\000">
    ./benchmarks/tmux/leak_3/tmux_leak_3.c:103:10 start: ./benchmarks/tmux/leak_3/tmux_leak_3.c:103:10 finish: ./benchmarks/tmux/leak_3/tmux_leak_3.c:103:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551bcae168
    type <pointer_type 0x7f551bc95bd0
        type <record_type 0x7f551bc95b28 FILE BLK
            size <integer_cst 0x7f551bc76c78 constant 1728>
            unit-size <integer_cst 0x7f551bc76cf0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc95a80 fields <field_decl 0x7f551bc97130 _flags> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc95bd0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca8990 f>
    def_stmt f_14 = fopen (file_12, "rb");
    version:14
    ptr-info 0x7f551bca1b88>
# .MEM_18 = VDEF <.MEM_17>
f_14 = fopen (file_12, "rb");

 ================== trace ptable================== 
trace fucntion name:fopen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---fopen-----
this other function ------fopen-----
 
 Start check Pointer Collect  

======================================================================
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: use location
  118 |         free(file);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
bb index := 5
# VUSE <.MEM_19>
return _6;
In function â€˜cmd_load_buffer_execâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
bb index := 5
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
printf ("%s: read error", file_12);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:111:17: warning: use location
  111 |                 printf("%s: read error", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: use location
  104 |                 free(file);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
printf ("%s", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:103:17: warning: use location
  103 |                 printf("%s", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
f_14 = fopen (file_12, "rb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:101:13: warning: use location
  101 |         f = fopen(file, "rb");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
bb index := 7
# VUSE <.MEM_19>
return _6;
In function â€˜cmd_load_buffer_execâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
bb index := 7
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================
fclose (f_14);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:9: warning: use location
  117 |         fclose(f);
      |         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_14 != 0B)
bb index := 5
# VUSE <.MEM_19>
return _6;
In function â€˜cmd_load_buffer_execâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_14 != 0B)
bb index := 5
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
if (f_14 != 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
  124 |         if (f != NULL)
      |            ^
if (f_14 != 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
Cond in fucntion cmd_load_buffer_exec basic block 5
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 7
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_2 = ferror (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:13: warning: use location
  110 |         if (ferror(f)) {
      |             ^
this stmt is child function---ferror-----

 ================== trace ================== 
trace fucntion name:ferror 

 ================== trace ================== 
trace fucntion free:2 
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^
if (_2 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
Cond in fucntion cmd_load_buffer_exec basic block 4
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 5
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae168
    type <pointer_type 0x7f551bc95bd0
        type <record_type 0x7f551bc95b28 FILE BLK
            size <integer_cst 0x7f551bc76c78 constant 1728>
            unit-size <integer_cst 0x7f551bc76cf0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc95a80 fields <field_decl 0x7f551bc97130 _flags> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc95bd0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca8990 f>
    def_stmt f_14 = fopen (file_12, "rb");
    version:14
    ptr-info 0x7f551bca1b88>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: use location
  104 |                 free(file);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: use location
  118 |         free(file);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:111:17: warning: use location
  111 |                 printf("%s: read error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:111:17: warning: use location
  111 |                 printf("%s: read error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: Use after free error!: free location 
  118 |         free(file);
      |         ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^
	relate logic:= 0
=succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: Use after free error!: free location 
  118 |         free(file);
      |         ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^
	relate logic:= 0
=succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_20 = VDEF <.MEM_19>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:9: warning: use location
  117 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_20 = VDEF <.MEM_19>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:9: warning: use location
  117 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (f_14 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
  124 |         if (f != NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (f_14 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
  124 |         if (f != NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_19 = VDEF <.MEM_18>
_2 = ferror (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:13: warning: use location
  110 |         if (ferror(f)) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_19 = VDEF <.MEM_18>
_2 = ferror (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:13: warning: use location
  110 |         if (ferror(f)) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f551c352ea0
    type <pointer_type 0x7f551bc98738
        type <array_type 0x7f551bc98690 type <integer_type 0x7f551bc7f9d8 char>
            BLK
            size <integer_cst 0x7f551bc76d80 constant 120>
            unit-size <integer_cst 0x7f551bc76d68 constant 15>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f551bc985e8>
            pointer_to_this <pointer_type 0x7f551bc98738>>
        unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f551bcac230 type <array_type 0x7f551bc98690>
        readonly constant static "%s: read error\000">
    ./benchmarks/tmux/leak_3/tmux_leak_3.c:111:10 start: ./benchmarks/tmux/leak_3/tmux_leak_3.c:111:10 finish: ./benchmarks/tmux/leak_3/tmux_leak_3.c:111:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:cmd_load_buffer_exec========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f551c352ac0
    type <pointer_type 0x7f551bc92150
        type <record_type 0x7f551bc920a8 cmd BLK
            size <integer_cst 0x7f551bc76c00 constant 448>
            unit-size <integer_cst 0x7f551bc76c18 constant 56>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc920a8 fields <field_decl 0x7f551bc91da8 entry> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc92150>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f551c9fec60 self type <record_type 0x7f551bc920a8 cmd>
        addressable BLK ./benchmarks/tmux/leak_3/tmux_leak_3.c:190:13 size <integer_cst 0x7f551bc76c00 448> unit-size <integer_cst 0x7f551bc76c18 56>
        align:64 warn_if_not_align:0 context <function_decl 0x7f551bc80d00 main>
        chain <var_decl 0x7f551c9febd0 item type <record_type 0x7f551bc92f18 cmdq_item>
            addressable BLK ./benchmarks/tmux/leak_3/tmux_leak_3.c:191:19
            size <integer_cst 0x7f551bc76c60 constant 1920>
            unit-size <integer_cst 0x7f551bc76ac8 constant 240>
            align:64 warn_if_not_align:0 context <function_decl 0x7f551bc80d00 main>>>
    ./benchmarks/tmux/leak_3/tmux_leak_3.c:192:2 start: ./benchmarks/tmux/leak_3/tmux_leak_3.c:192:2 finish: ./benchmarks/tmux/leak_3/tmux_leak_3.c:192:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f551c352b20
    type <pointer_type 0x7f551bc92150
        type <record_type 0x7f551bc920a8 cmd BLK
            size <integer_cst 0x7f551bc76c00 constant 448>
            unit-size <integer_cst 0x7f551bc76c18 constant 56>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc920a8 fields <field_decl 0x7f551bc91da8 entry> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc92150>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f551c9fec60 self type <record_type 0x7f551bc920a8 cmd>
        addressable BLK ./benchmarks/tmux/leak_3/tmux_leak_3.c:190:13 size <integer_cst 0x7f551bc76c00 448> unit-size <integer_cst 0x7f551bc76c18 56>
        align:64 warn_if_not_align:0 context <function_decl 0x7f551bc80d00 main>
        chain <var_decl 0x7f551c9febd0 item type <record_type 0x7f551bc92f18 cmdq_item>
            addressable BLK ./benchmarks/tmux/leak_3/tmux_leak_3.c:191:19
            size <integer_cst 0x7f551bc76c60 constant 1920>
            unit-size <integer_cst 0x7f551bc76ac8 constant 240>
            align:64 warn_if_not_align:0 context <function_decl 0x7f551bc80d00 main>>>
    ./benchmarks/tmux/leak_3/tmux_leak_3.c:193:2 start: ./benchmarks/tmux/leak_3/tmux_leak_3.c:193:2 finish: ./benchmarks/tmux/leak_3/tmux_leak_3.c:193:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:cmd_save_buffer_exec========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path cmd_save_buffer_exec  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:fwrite========= [0m
[40;33m =======POP node_fun stack:fwrite========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre add _ fucntion:server_client_get_path========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path server_client_get_path  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;33m =======POP node_fun stack:realpath========= [0m
[40;42m =======pre_check_funciton:server_client_get_path========= [0m
[40;42m =======start_check_funciton:server_client_get_path========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f551bcae678
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_11 = strdup (file_8(D));
    version:11
    ptr-info 0x7f551bca1c00>
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
path_11 = strdup (file_8(D));
In function â€˜cmd_save_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:77:24: warning: use location
   77 |                 path = xstrdup(file);                           /* allocation site */
      |                        ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_3 = PHI <path_9(D)(2), path_11(3)>
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
path_3 = PHI <path_9(D)(2), path_11(3)>
In function â€˜cmd_save_buffer_execâ€™:
lto1: warning: use location
this stmt have mutiple branch --------
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
bb index := 5
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
free (path_3);
In function â€˜cmd_save_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_16>
_2 = realpath (path_3, &resolved);
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
_2 = realpath (path_3, &resolved);
In function â€˜cmd_save_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:13: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |             ^
this stmt is child function---realpath-----

 ================== trace ================== 
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
In function â€˜cmd_save_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_1 = *file_8(D);
In function â€˜cmd_save_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:13: warning: use location
   76 |         if (*file == '/')
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (_1 == 47)
In function â€˜cmd_save_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
if (_1 == 47)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
Cond in fucntion server_client_get_path basic block 2
 ================== possible direct basic block ================= 
from server_client_get_path basic block 3
 ================== possible direct basic block ================= 
from server_client_get_path basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae678
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_11 = strdup (file_8(D));
    version:11
    ptr-info 0x7f551bca1c00>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
path_3 = PHI <path_9(D)(2), path_11(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
path_3 = PHI <path_9(D)(2), path_11(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f551bcae6c0
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
   
    def_stmt _15 = strdup (&resolved);
    version:15
    ptr-info 0x7f551bca1c18>
# .MEM_22 = VDEF <.MEM_21>
_15 = strdup (&resolved);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_15 = strdup (&resolved);
bb index := 5
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
_15 = strdup (&resolved);
In function â€˜cmd_save_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:81:17: warning: use location
   81 |         return (xstrdup(resolved));                             /* allocation site */
      |                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae6c0
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
   
    def_stmt _15 = strdup (&resolved);
    version:15
    ptr-info 0x7f551bca1c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551bcae5e8
    type <pointer_type 0x7f551bc7fb28
        type <integer_type 0x7f551bc7fa80 char readonly public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fb28>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f551bca7400 file>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f551bca1be8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
path_11 = strdup (file_8(D));
In function â€˜cmd_save_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:77:24: warning: use location
   77 |                 path = xstrdup(file);                           /* allocation site */
      |                        ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_3 = PHI <path_9(D)(2), path_11(3)>
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
path_3 = PHI <path_9(D)(2), path_11(3)>
In function â€˜cmd_save_buffer_execâ€™:
lto1: warning: use location
this stmt have mutiple branch --------
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
bb index := 5
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
free (path_3);
In function â€˜cmd_save_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_16>
_2 = realpath (path_3, &resolved);
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
_2 = realpath (path_3, &resolved);
In function â€˜cmd_save_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:13: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |             ^
this stmt is child function---realpath-----

 ================== trace ================== 
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
In function â€˜cmd_save_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_1 = *file_8(D);
In function â€˜cmd_save_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:13: warning: use location
   76 |         if (*file == '/')
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (_1 == 47)
In function â€˜cmd_save_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
if (_1 == 47)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
Cond in fucntion server_client_get_path basic block 2
 ================== possible direct basic block ================= 
from server_client_get_path basic block 3
 ================== possible direct basic block ================= 
from server_client_get_path basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae5e8
    type <pointer_type 0x7f551bc7fb28
        type <integer_type 0x7f551bc7fa80 char readonly public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fb28>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f551bca7400 file>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f551bca1be8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
path_3 = PHI <path_9(D)(2), path_11(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551bcae558
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_3 = PHI <path_9(D)(2), path_11(3)>
    version:3
    ptr-info 0x7f551bca1bb8>
path_3 = PHI <path_9(D)(2), path_11(3)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
bb index := 5
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
free (path_3);
In function â€˜cmd_save_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_16>
_2 = realpath (path_3, &resolved);
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
_2 = realpath (path_3, &resolved);
In function â€˜cmd_save_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:13: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |             ^
this stmt is child function---realpath-----

 ================== trace ================== 
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
In function â€˜cmd_save_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae558
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_3 = PHI <path_9(D)(2), path_11(3)>
    version:3
    ptr-info 0x7f551bca1bb8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f551c3529a0
    type <pointer_type 0x7f551bc8fb28
        type <array_type 0x7f551bc8f930 type <integer_type 0x7f551bc7f9d8 char>
            BLK
            size <integer_cst 0x7f551bc76be8 constant 32768>
            unit-size <integer_cst 0x7f551bc76bd0 constant 4096>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f551bc8f888>
            pointer_to_this <pointer_type 0x7f551bc8fb28>>
        unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f551bcb1120 resolved type <array_type 0x7f551bc8f930>
        addressable BLK ./benchmarks/tmux/leak_3/tmux_leak_3.c:74:14 size <integer_cst 0x7f551bc76be8 32768> unit-size <integer_cst 0x7f551bc76bd0 4096>
        align:8 warn_if_not_align:0 context <function_decl 0x7f551bc80a00 server_client_get_path>>
    ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10 start: ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10 finish: ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:server_client_get_path========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre_check_funciton:cmd_save_buffer_exec========= [0m
[40;42m =======start_check_funciton:cmd_save_buffer_exec========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f551c15ea20
    type <pointer_type 0x7f551bc7fb28
        type <integer_type 0x7f551bc7fa80 char readonly public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fb28>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca81b0 path>
    def_stmt GIMPLE_NOP
    version:12>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_1 = strcmp (path_12(D), "-");
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:13: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 2
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 3
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: use location
  153 |         file = server_client_get_path(c, path);
      |                ^
this stmt is child function---server_client_get_path-----

 ================== trace ================== 
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :0========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;46m =======add node_fun stack:realpath========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
printf ("%s", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:156:17: warning: use location
  156 |                 printf("%s", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:3 
f_16 = fopen (file_14, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:13: warning: use location
  154 |         f = fopen(file, flags);
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:3 
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:3 
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:3 
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^
this stmt is child function---fwrite-----

 ================== trace ================== 
trace fucntion name:fwrite 

 ================== trace ================== 
trace fucntion free:3 
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^
if (_5 != bufsize_18(D))

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 10
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 11
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
if (f_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 8
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 9
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = c_11->flags;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:45: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                                             ^
_4 = _3 & 8192;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:53: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                                                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20(D)>
_2 = c_11->session;
bb index := 4
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20(D)>
_2 = c_11->session;
bb index := 4
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_2 = c_11->session;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:22: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:20: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                    ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:20: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 4
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 6
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_11 == 0B)
bb index := 3
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_11 == 0B)
bb index := 3
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
if (c_11 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:20: warning: use location
  143 |                 if (c == NULL) {
      |                    ^
if (c_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:20: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 3
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 14
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551c15ea20
    type <pointer_type 0x7f551bc7fb28
        type <integer_type 0x7f551bc7fa80 char readonly public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fb28>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca81b0 path>
    def_stmt GIMPLE_NOP
    version:12>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_25 = VDEF <.MEM_24>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_28 = VDEF <.MEM_22>
printf ("%s", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:156:17: warning: use location
  156 |                 printf("%s", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_22 = VDEF <.MEM_21>
f_16 = fopen (file_14, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:13: warning: use location
  154 |         f = fopen(file, flags);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551c15e9d8
    type <pointer_type 0x7f551bc8f7e0
        type <record_type 0x7f551bc8f738 client BLK
            size <integer_cst 0x7f551bc76ba0 constant 6336>
            unit-size <integer_cst 0x7f551bc76ab0 constant 792>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc8f738 fields <field_decl 0x7f551bc91850 name> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc8f7e0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca8240 c>
    def_stmt c_11 = item_10(D)->client;
    version:11
    ptr-info 0x7f551bca1a98>
# VUSE <.MEM_20(D)>
c_11 = item_10(D)->client;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: use location
  153 |         file = server_client_get_path(c, path);
      |                ^
this stmt is child function---server_client_get_path-----

 ================== trace ================== 
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :0========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
[40;36m ======= node_fun:server_client_get_path========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;46m =======add node_fun stack:realpath========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
printf ("%s", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:156:17: warning: use location
  156 |                 printf("%s", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
f_16 = fopen (file_14, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:13: warning: use location
  154 |         f = fopen(file, flags);
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:2 
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^
this stmt is child function---fwrite-----

 ================== trace ================== 
trace fucntion name:fwrite 

 ================== trace ================== 
trace fucntion free:2 
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^
if (_5 != bufsize_18(D))

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 10
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 11
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
if (f_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 8
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 9
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = strcmp (path_12(D), "-");
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:13: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:2 
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 2
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 3
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = c_11->flags;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:45: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                                             ^
_4 = _3 & 8192;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:53: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                                                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20(D)>
_2 = c_11->session;
bb index := 4
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20(D)>
_2 = c_11->session;
bb index := 4
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_2 = c_11->session;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:22: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:20: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                    ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:20: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 4
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 6
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_11 == 0B)
bb index := 3
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_11 == 0B)
bb index := 3
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
if (c_11 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:20: warning: use location
  143 |                 if (c == NULL) {
      |                    ^
if (c_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:20: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 3
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 14
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551c15e9d8
    type <pointer_type 0x7f551bc8f7e0
        type <record_type 0x7f551bc8f738 client BLK
            size <integer_cst 0x7f551bc76ba0 constant 6336>
            unit-size <integer_cst 0x7f551bc76ab0 constant 792>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc8f738 fields <field_decl 0x7f551bc91850 name> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc8f7e0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca8240 c>
    def_stmt c_11 = item_10(D)->client;
    version:11
    ptr-info 0x7f551bca1a98>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551c15ea68
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bca8090 file>
    def_stmt file_14 = server_client_get_path (c_11, path_12(D));
    version:14
    ptr-info 0x7f551bca1ab0>
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));

 ================== trace ptable================== 
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :888========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
[40;36m ======= node_fun:server_client_get_path========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;46m =======add node_fun stack:realpath========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---server_client_get_path-----
this other function ------server_client_get_path-----
 
 Start check Pointer Collect  

======================================================================
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: use location
  153 |         file = server_client_get_path(c, path);
      |                ^
this stmt is child function---server_client_get_path-----

 ================== trace ================== 
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :0========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
[40;36m ======= node_fun:server_client_get_path========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;46m =======add node_fun stack:realpath========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
printf ("%s", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:156:17: warning: use location
  156 |                 printf("%s", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:3 
f_16 = fopen (file_14, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:13: warning: use location
  154 |         f = fopen(file, flags);
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:3 
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:3 
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:3 
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^
this stmt is child function---fwrite-----

 ================== trace ================== 
trace fucntion name:fwrite 

 ================== trace ================== 
trace fucntion free:3 
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^
if (_5 != bufsize_18(D))

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 10
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 11
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
if (f_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 8
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 9
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_1 = strcmp (path_12(D), "-");
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:13: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |             ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:3 
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 2
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 3
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = c_11->flags;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:45: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                                             ^
_4 = _3 & 8192;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:53: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                                                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20(D)>
_2 = c_11->session;
bb index := 4
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_20(D)>
_2 = c_11->session;
bb index := 4
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
_2 = c_11->session;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:22: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:20: warning: use location
  146 |                 if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      |                    ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:20: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 4
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 6
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_11 == 0B)
bb index := 3
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_11 == 0B)
bb index := 3
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================
if (c_11 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:20: warning: use location
  143 |                 if (c == NULL) {
      |                    ^
if (c_11 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:20: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 3
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 14
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551c15ea68
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bca8090 file>
    def_stmt file_14 = server_client_get_path (c_11, path_12(D));
    version:14
    ptr-info 0x7f551bca1ab0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_25 = VDEF <.MEM_24>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_28 = VDEF <.MEM_22>
printf ("%s", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:156:17: warning: use location
  156 |                 printf("%s", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_22 = VDEF <.MEM_21>
f_16 = fopen (file_14, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:13: warning: use location
  154 |         f = fopen(file, flags);
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20(D)>
file_14 = server_client_get_path (c_11, path_12(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:16: warning: Use after free error!: free location 
  153 |         file = server_client_get_path(c, path);
      |                ^
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f551c352c60
    type <pointer_type 0x7f551bc98348
        type <array_type 0x7f551bc982a0 type <integer_type 0x7f551bc7f9d8 char>
            BLK
            size <integer_cst 0x7f551c174060 constant 24>
            unit-size <integer_cst 0x7f551bc76d38 constant 3>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f551bc981f8>
            pointer_to_this <pointer_type 0x7f551bc98348>>
        unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f551bca18a0 type <array_type 0x7f551bc982a0>
        readonly constant static "%s\000">
    ./benchmarks/tmux/leak_3/tmux_leak_3.c:156:10 start: ./benchmarks/tmux/leak_3/tmux_leak_3.c:156:10 finish: ./benchmarks/tmux/leak_3/tmux_leak_3.c:156:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551c15eaf8
    type <pointer_type 0x7f551bc7fb28
        type <integer_type 0x7f551bc7fa80 char readonly public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fb28>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca8120 bufdata>
    def_stmt GIMPLE_NOP
    version:17>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^
this stmt is child function---fwrite-----

 ================== trace ================== 
trace fucntion name:fwrite 

 ================== trace ================== 
trace fucntion free:0 
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^
if (_5 != bufsize_18(D))

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 10
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 11
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
if (f_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 8
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 9
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551c15eaf8
    type <pointer_type 0x7f551bc7fb28
        type <integer_type 0x7f551bc7fa80 char readonly public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fb28>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca8120 bufdata>
    def_stmt GIMPLE_NOP
    version:17>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f551c352ce0
    type <pointer_type 0x7f551bc9a690
        type <array_type 0x7f551bc9a5e8 type <integer_type 0x7f551bc7f9d8 char>
            TI
            size <integer_cst 0x7f551c156c00 constant 128>
            unit-size <integer_cst 0x7f551c156c18 constant 16>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f551bc9a540>
            pointer_to_this <pointer_type 0x7f551bc9a690>>
        unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f551bca2de8 type <array_type 0x7f551bc9a5e8>
        readonly constant static "%s: write error\000">
    ./benchmarks/tmux/leak_3/tmux_leak_3.c:162:10 start: ./benchmarks/tmux/leak_3/tmux_leak_3.c:162:10 finish: ./benchmarks/tmux/leak_3/tmux_leak_3.c:162:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551c15eab0
    type <pointer_type 0x7f551bc95bd0
        type <record_type 0x7f551bc95b28 FILE BLK
            size <integer_cst 0x7f551bc76c78 constant 1728>
            unit-size <integer_cst 0x7f551bc76cf0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc95a80 fields <field_decl 0x7f551bc97130 _flags> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc95bd0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551c9fef30 f>
    def_stmt f_16 = fopen (file_14, "wb");
    version:16
    ptr-info 0x7f551bca1ac8>
# .MEM_22 = VDEF <.MEM_21>
f_16 = fopen (file_14, "wb");

 ================== trace ptable================== 
trace fucntion name:fopen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---fopen-----
this other function ------fopen-----
 
 Start check Pointer Collect  

======================================================================
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
printf ("%s", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:156:17: warning: use location
  156 |                 printf("%s", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
f_16 = fopen (file_14, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:13: warning: use location
  154 |         f = fopen(file, flags);
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:2 

 Expand conflict 
 The same function may have multiple branches :fclose
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^
=======================Path Constaint===========================

=succs:= 10
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^
	relate logic:= 0
=succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^
this stmt is child function---fwrite-----

 ================== trace ================== 
trace fucntion name:fwrite 

 ================== trace ================== 
trace fucntion free:2 
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^
if (_5 != bufsize_18(D))

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 10
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 11
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
if (f_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 8
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 9
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551c15eab0
    type <pointer_type 0x7f551bc95bd0
        type <record_type 0x7f551bc95b28 FILE BLK
            size <integer_cst 0x7f551bc76c78 constant 1728>
            unit-size <integer_cst 0x7f551bc76cf0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc95a80 fields <field_decl 0x7f551bc97130 _flags> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc95bd0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551c9fef30 f>
    def_stmt f_16 = fopen (file_14, "wb");
    version:16
    ptr-info 0x7f551bca1ac8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551c15eab0
    type <pointer_type 0x7f551bc95bd0
        type <record_type 0x7f551bc95b28 FILE BLK
            size <integer_cst 0x7f551bc76c78 constant 1728>
            unit-size <integer_cst 0x7f551bc76cf0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc95a80 fields <field_decl 0x7f551bc97130 _flags> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc95bd0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551c9fef30 f>
    def_stmt f_16 = fopen (file_14, "wb");
    version:16
    ptr-info 0x7f551bca1ac8>
# .MEM_22 = VDEF <.MEM_21>
f_16 = fopen (file_14, "wb");

 ================== trace ptable================== 
trace fucntion name:fopen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---fopen-----
this other function ------fopen-----
 
 Start check Pointer Collect  

======================================================================
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
printf ("%s", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:156:17: warning: use location
  156 |                 printf("%s", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
f_16 = fopen (file_14, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:13: warning: use location
  154 |         f = fopen(file, flags);
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:2 
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 

 Expand conflict 
 The same function may have multiple branches :fclose
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^
=======================Path Constaint===========================

succs:= 10
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^
	relate logic:= 1
succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 0
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================

_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^
this stmt is child function---fwrite-----

 ================== trace ================== 
trace fucntion name:fwrite 

 ================== trace ================== 
trace fucntion free:2 
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^
if (_5 != bufsize_18(D))

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 10
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 11
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
if (f_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
Cond in fucntion cmd_save_buffer_exec basic block 8
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 9
 ================== possible direct basic block ================= 
from cmd_save_buffer_exec basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551c15eab0
    type <pointer_type 0x7f551bc95bd0
        type <record_type 0x7f551bc95b28 FILE BLK
            size <integer_cst 0x7f551bc76c78 constant 1728>
            unit-size <integer_cst 0x7f551bc76cf0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc95a80 fields <field_decl 0x7f551bc97130 _flags> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc95bd0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551c9fef30 f>
    def_stmt f_16 = fopen (file_14, "wb");
    version:16
    ptr-info 0x7f551bca1ac8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: use location
  157 |                 free(file);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:9: warning: use location
  169 |         free(file);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_26 = VDEF <.MEM_23>
printf ("%s: write error", file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:162:17: warning: use location
  162 |                 printf("%s: write error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_24 = VDEF <.MEM_23>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:9: warning: use location
  168 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_27 = VDEF <.MEM_26>
fclose (f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:17: warning: use location
  163 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:13: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_29 = VDEF <.MEM_28>
free (file_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:17: warning: Use after free error!: free location 
  157 |                 free(file);
      |                 ^
if (_5 != bufsize_18(D))
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:12: warning: use location
  161 |         if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 8
if (f_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:12: warning: use location
  155 |         if (f == NULL) {
      |            ^
	relate logic:= 1
succs:= 2
if (_1 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:12: warning: use location
  142 |         if (strcmp(path, "-") == 0) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:cmd_save_buffer_exec========= [0m
[40;44m =======node_fun:cmd_load_buffer_exec========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path cmd_load_buffer_exec  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:ferror========= [0m
[40;33m =======POP node_fun stack:ferror========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre add _ fucntion:server_client_get_path========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path server_client_get_path  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;33m =======POP node_fun stack:realpath========= [0m
[40;42m =======pre_check_funciton:server_client_get_path========= [0m
[40;42m =======start_check_funciton:server_client_get_path========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f551bcae678
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_11 = strdup (file_8(D));
    version:11
    ptr-info 0x7f551bca1c00>
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
path_11 = strdup (file_8(D));
In function â€˜cmd_load_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:77:24: warning: use location
   77 |                 path = xstrdup(file);                           /* allocation site */
      |                        ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_3 = PHI <path_9(D)(2), path_11(3)>
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
path_3 = PHI <path_9(D)(2), path_11(3)>
In function â€˜cmd_load_buffer_execâ€™:
lto1: warning: use location
this stmt have mutiple branch --------
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
bb index := 5
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
free (path_3);
In function â€˜cmd_load_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_16>
_2 = realpath (path_3, &resolved);
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
_2 = realpath (path_3, &resolved);
In function â€˜cmd_load_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:13: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |             ^
this stmt is child function---realpath-----

 ================== trace ================== 
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
In function â€˜cmd_load_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_1 = *file_8(D);
In function â€˜cmd_load_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:13: warning: use location
   76 |         if (*file == '/')
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (_1 == 47)
In function â€˜cmd_load_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
if (_1 == 47)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
Cond in fucntion server_client_get_path basic block 2
 ================== possible direct basic block ================= 
from server_client_get_path basic block 3
 ================== possible direct basic block ================= 
from server_client_get_path basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae678
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_11 = strdup (file_8(D));
    version:11
    ptr-info 0x7f551bca1c00>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
path_3 = PHI <path_9(D)(2), path_11(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
path_3 = PHI <path_9(D)(2), path_11(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f551bcae6c0
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
   
    def_stmt _15 = strdup (&resolved);
    version:15
    ptr-info 0x7f551bca1c18>
# .MEM_22 = VDEF <.MEM_21>
_15 = strdup (&resolved);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_15 = strdup (&resolved);
bb index := 5
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
_15 = strdup (&resolved);
In function â€˜cmd_load_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:81:17: warning: use location
   81 |         return (xstrdup(resolved));                             /* allocation site */
      |                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae6c0
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
   
    def_stmt _15 = strdup (&resolved);
    version:15
    ptr-info 0x7f551bca1c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551bcae5e8
    type <pointer_type 0x7f551bc7fb28
        type <integer_type 0x7f551bc7fa80 char readonly public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fb28>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f551bca7400 file>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f551bca1be8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
path_11 = strdup (file_8(D));
In function â€˜cmd_load_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:77:24: warning: use location
   77 |                 path = xstrdup(file);                           /* allocation site */
      |                        ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_3 = PHI <path_9(D)(2), path_11(3)>
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
path_3 = PHI <path_9(D)(2), path_11(3)>
In function â€˜cmd_load_buffer_execâ€™:
lto1: warning: use location
this stmt have mutiple branch --------
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
bb index := 5
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
free (path_3);
In function â€˜cmd_load_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_16>
_2 = realpath (path_3, &resolved);
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
_2 = realpath (path_3, &resolved);
In function â€˜cmd_load_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:13: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |             ^
this stmt is child function---realpath-----

 ================== trace ================== 
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
In function â€˜cmd_load_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_1 = *file_8(D);
In function â€˜cmd_load_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:13: warning: use location
   76 |         if (*file == '/')
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (_1 == 47)
In function â€˜cmd_load_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
if (_1 == 47)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
Cond in fucntion server_client_get_path basic block 2
 ================== possible direct basic block ================= 
from server_client_get_path basic block 3
 ================== possible direct basic block ================= 
from server_client_get_path basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae5e8
    type <pointer_type 0x7f551bc7fb28
        type <integer_type 0x7f551bc7fa80 char readonly public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fb28>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f551bca7400 file>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f551bca1be8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
path_3 = PHI <path_9(D)(2), path_11(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551bcae558
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_3 = PHI <path_9(D)(2), path_11(3)>
    version:3
    ptr-info 0x7f551bca1bb8>
path_3 = PHI <path_9(D)(2), path_11(3)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
bb index := 5
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
free (path_3);
In function â€˜cmd_load_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_16>
_2 = realpath (path_3, &resolved);
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
_2 = realpath (path_3, &resolved);
In function â€˜cmd_load_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:13: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |             ^
this stmt is child function---realpath-----

 ================== trace ================== 
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_23>
return _4;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
In function â€˜cmd_load_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae558
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_3 = PHI <path_9(D)(2), path_11(3)>
    version:3
    ptr-info 0x7f551bca1bb8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f551c3529a0
    type <pointer_type 0x7f551bc8fb28
        type <array_type 0x7f551bc8f930 type <integer_type 0x7f551bc7f9d8 char>
            BLK
            size <integer_cst 0x7f551bc76be8 constant 32768>
            unit-size <integer_cst 0x7f551bc76bd0 constant 4096>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f551bc8f888>
            pointer_to_this <pointer_type 0x7f551bc8fb28>>
        unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f551bcb1120 resolved type <array_type 0x7f551bc8f930>
        addressable BLK ./benchmarks/tmux/leak_3/tmux_leak_3.c:74:14 size <integer_cst 0x7f551bc76be8 32768> unit-size <integer_cst 0x7f551bc76bd0 4096>
        align:8 warn_if_not_align:0 context <function_decl 0x7f551bc80a00 server_client_get_path>>
    ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10 start: ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10 finish: ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:server_client_get_path========= [0m
[40;42m =======pre_check_funciton:cmd_load_buffer_exec========= [0m
[40;42m =======start_check_funciton:cmd_load_buffer_exec========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f551bcae090
    type <pointer_type 0x7f551bc8f7e0
        type <record_type 0x7f551bc8f738 client BLK
            size <integer_cst 0x7f551bc76ba0 constant 6336>
            unit-size <integer_cst 0x7f551bc76ab0 constant 792>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc8f738 fields <field_decl 0x7f551bc91850 name> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc8f7e0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca8a20 c>
    def_stmt c_9 = item_8(D)->client;
    version:9
    ptr-info 0x7f551bca1b40>
# VUSE <.MEM_16(D)>
c_9 = item_8(D)->client;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: use location
  100 |         file = server_client_get_path(c, path);
      |                ^
this stmt is child function---server_client_get_path-----

 ================== trace ================== 
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :0========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
[40;36m ======= node_fun:server_client_get_path========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;46m =======add node_fun stack:realpath========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: use location
  118 |         free(file);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
bb index := 5
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
bb index := 5
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
printf ("%s: read error", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:111:17: warning: use location
  111 |                 printf("%s: read error", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: use location
  104 |                 free(file);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
printf ("%s", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:103:17: warning: use location
  103 |                 printf("%s", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
f_14 = fopen (file_12, "rb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:101:13: warning: use location
  101 |         f = fopen(file, "rb");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
bb index := 7
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
bb index := 7
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:9: warning: use location
  117 |         fclose(f);
      |         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_14 != 0B)
bb index := 5
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_14 != 0B)
bb index := 5
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
if (f_14 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
  124 |         if (f != NULL)
      |            ^
if (f_14 != 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
Cond in fucntion cmd_load_buffer_exec basic block 5
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 7
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_2 = ferror (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:13: warning: use location
  110 |         if (ferror(f)) {
      |             ^
this stmt is child function---ferror-----

 ================== trace ================== 
trace fucntion name:ferror 

 ================== trace ================== 
trace fucntion free:2 
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^
if (_2 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
Cond in fucntion cmd_load_buffer_exec basic block 4
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 5
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae090
    type <pointer_type 0x7f551bc8f7e0
        type <record_type 0x7f551bc8f738 client BLK
            size <integer_cst 0x7f551bc76ba0 constant 6336>
            unit-size <integer_cst 0x7f551bc76ab0 constant 792>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc8f738 fields <field_decl 0x7f551bc91850 name> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc8f7e0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca8a20 c>
    def_stmt c_9 = item_8(D)->client;
    version:9
    ptr-info 0x7f551bca1b40>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:111:17: warning: use location
  111 |                 printf("%s: read error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: Use after free error!: free location 
  118 |         free(file);
      |         ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^
	relate logic:= 0
=succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_20 = VDEF <.MEM_19>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:9: warning: use location
  117 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (f_14 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
  124 |         if (f != NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_19 = VDEF <.MEM_18>
_2 = ferror (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:13: warning: use location
  110 |         if (ferror(f)) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551bcae120
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bca8870 file>
    def_stmt file_12 = server_client_get_path (c_9, path_10);
    version:12
    ptr-info 0x7f551bca1b70>
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);

 ================== trace ptable================== 
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :888========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
[40;36m ======= node_fun:server_client_get_path========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;46m =======add node_fun stack:realpath========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---server_client_get_path-----
this other function ------server_client_get_path-----
 
 Start check Pointer Collect  

======================================================================
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: use location
  100 |         file = server_client_get_path(c, path);
      |                ^
this stmt is child function---server_client_get_path-----

 ================== trace ================== 
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :0========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
[40;31m  find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
[40;36m ======= node_fun:server_client_get_path========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;46m =======add node_fun stack:realpath========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: use location
  118 |         free(file);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
bb index := 5
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
bb index := 5
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
printf ("%s: read error", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:111:17: warning: use location
  111 |                 printf("%s: read error", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: use location
  104 |                 free(file);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
printf ("%s", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:103:17: warning: use location
  103 |                 printf("%s", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:3 
f_14 = fopen (file_12, "rb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:101:13: warning: use location
  101 |         f = fopen(file, "rb");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
bb index := 7
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
bb index := 7
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:3 
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:9: warning: use location
  117 |         fclose(f);
      |         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_14 != 0B)
bb index := 5
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_14 != 0B)
bb index := 5
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
if (f_14 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
  124 |         if (f != NULL)
      |            ^
if (f_14 != 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
Cond in fucntion cmd_load_buffer_exec basic block 5
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 7
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_2 = ferror (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:13: warning: use location
  110 |         if (ferror(f)) {
      |             ^
this stmt is child function---ferror-----

 ================== trace ================== 
trace fucntion name:ferror 

 ================== trace ================== 
trace fucntion free:3 
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^
if (_2 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
Cond in fucntion cmd_load_buffer_exec basic block 4
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 5
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae120
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bca8870 file>
    def_stmt file_12 = server_client_get_path (c_9, path_10);
    version:12
    ptr-info 0x7f551bca1b70>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: use location
  104 |                 free(file);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: use location
  118 |         free(file);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_21 = VDEF <.MEM_20>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: use location
  118 |         free(file);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:111:17: warning: use location
  111 |                 printf("%s: read error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:111:17: warning: use location
  111 |                 printf("%s: read error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:111:17: warning: use location
  111 |                 printf("%s: read error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: use location
  104 |                 free(file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_24 = VDEF <.MEM_18>
printf ("%s", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:103:17: warning: use location
  103 |                 printf("%s", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_18 = VDEF <.MEM_17>
f_14 = fopen (file_12, "rb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:101:13: warning: use location
  101 |         f = fopen(file, "rb");
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: Use after free error!: free location 
  118 |         free(file);
      |         ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^
	relate logic:= 0
=succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: Use after free error!: free location 
  118 |         free(file);
      |         ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^
	relate logic:= 0
=succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_20 = VDEF <.MEM_19>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:9: warning: use location
  117 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_20 = VDEF <.MEM_19>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:9: warning: use location
  117 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_20 = VDEF <.MEM_19>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:9: warning: use location
  117 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
if (f_14 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
  124 |         if (f != NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (f_14 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
  124 |         if (f != NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (f_14 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
  124 |         if (f != NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
# .MEM_19 = VDEF <.MEM_18>
_2 = ferror (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:13: warning: use location
  110 |         if (ferror(f)) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_19 = VDEF <.MEM_18>
_2 = ferror (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:13: warning: use location
  110 |         if (ferror(f)) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_19 = VDEF <.MEM_18>
_2 = ferror (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:13: warning: use location
  110 |         if (ferror(f)) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
file_12 = server_client_get_path (c_9, path_10);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:16: warning: Use after free error!: free location 
  100 |         file = server_client_get_path(c, path);
      |                ^
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f551c352e20
    type <pointer_type 0x7f551bc98348
        type <array_type 0x7f551bc982a0 type <integer_type 0x7f551bc7f9d8 char>
            BLK
            size <integer_cst 0x7f551c174060 constant 24>
            unit-size <integer_cst 0x7f551bc76d38 constant 3>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f551bc981f8>
            pointer_to_this <pointer_type 0x7f551bc98348>>
        unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f551bca1978 type <array_type 0x7f551bc982a0>
        readonly constant static "%s\000">
    ./benchmarks/tmux/leak_3/tmux_leak_3.c:103:10 start: ./benchmarks/tmux/leak_3/tmux_leak_3.c:103:10 finish: ./benchmarks/tmux/leak_3/tmux_leak_3.c:103:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551bcae168
    type <pointer_type 0x7f551bc95bd0
        type <record_type 0x7f551bc95b28 FILE BLK
            size <integer_cst 0x7f551bc76c78 constant 1728>
            unit-size <integer_cst 0x7f551bc76cf0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc95a80 fields <field_decl 0x7f551bc97130 _flags> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc95bd0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca8990 f>
    def_stmt f_14 = fopen (file_12, "rb");
    version:14
    ptr-info 0x7f551bca1b88>
# .MEM_18 = VDEF <.MEM_17>
f_14 = fopen (file_12, "rb");

 ================== trace ptable================== 
trace fucntion name:fopen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---fopen-----
this other function ------fopen-----
 
 Start check Pointer Collect  

======================================================================
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: use location
  118 |         free(file);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
bb index := 5
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
bb index := 5
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
printf ("%s: read error", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:111:17: warning: use location
  111 |                 printf("%s: read error", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: use location
  104 |                 free(file);
      |                 ^
this stmt is child function---free-----

 ================== find ================== 
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
printf ("%s", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:103:17: warning: use location
  103 |                 printf("%s", file);
      |                 ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
f_14 = fopen (file_12, "rb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:101:13: warning: use location
  101 |         f = fopen(file, "rb");
      |             ^
this stmt is child function---fopen-----

 ================== trace ================== 
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
bb index := 7
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
bb index := 7
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:9: warning: use location
  117 |         fclose(f);
      |         ^
this stmt is child function---fclose-----

 ================== trace ================== 
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_14 != 0B)
bb index := 5
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_14 != 0B)
bb index := 5
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================
if (f_14 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
  124 |         if (f != NULL)
      |            ^
if (f_14 != 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
Cond in fucntion cmd_load_buffer_exec basic block 5
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 7
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_2 = ferror (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:13: warning: use location
  110 |         if (ferror(f)) {
      |             ^
this stmt is child function---ferror-----

 ================== trace ================== 
trace fucntion name:ferror 

 ================== trace ================== 
trace fucntion free:2 
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^
if (_2 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
Cond in fucntion cmd_load_buffer_exec basic block 4
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 5
 ================== possible direct basic block ================= 
from cmd_load_buffer_exec basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae168
    type <pointer_type 0x7f551bc95bd0
        type <record_type 0x7f551bc95b28 FILE BLK
            size <integer_cst 0x7f551bc76c78 constant 1728>
            unit-size <integer_cst 0x7f551bc76cf0 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551bc95a80 fields <field_decl 0x7f551bc97130 _flags> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc95bd0>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f551bca8990 f>
    def_stmt f_14 = fopen (file_12, "rb");
    version:14
    ptr-info 0x7f551bca1b88>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: use location
  104 |                 free(file);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: use location
  118 |         free(file);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:111:17: warning: use location
  111 |                 printf("%s: read error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_22 = VDEF <.MEM_19>
printf ("%s: read error", file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:111:17: warning: use location
  111 |                 printf("%s: read error", file);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: Use after free error!: free location 
  118 |         free(file);
      |         ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^
	relate logic:= 0
=succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:9: warning: Use after free error!: free location 
  118 |         free(file);
      |         ^
# .MEM_23 = VDEF <.MEM_22>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:17: warning: use location
  125 |                 fclose(f);
      |                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^
	relate logic:= 0
=succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_20 = VDEF <.MEM_19>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:9: warning: use location
  117 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_20 = VDEF <.MEM_19>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:9: warning: use location
  117 |         fclose(f);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (f_14 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
  124 |         if (f != NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (f_14 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:12: warning: use location
  124 |         if (f != NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_19 = VDEF <.MEM_18>
_2 = ferror (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:13: warning: use location
  110 |         if (ferror(f)) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
# .MEM_19 = VDEF <.MEM_18>
_2 = ferror (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:13: warning: use location
  110 |         if (ferror(f)) {
      |             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (file_12);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:17: warning: Use after free error!: free location 
  104 |                 free(file);
      |                 ^
if (_2 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:12: warning: use location
  110 |         if (ferror(f)) {
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 2
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:12: warning: use location
  102 |         if (f == NULL) {
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f551c352ea0
    type <pointer_type 0x7f551bc98738
        type <array_type 0x7f551bc98690 type <integer_type 0x7f551bc7f9d8 char>
            BLK
            size <integer_cst 0x7f551bc76d80 constant 120>
            unit-size <integer_cst 0x7f551bc76d68 constant 15>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f551bc985e8>
            pointer_to_this <pointer_type 0x7f551bc98738>>
        unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f551bcac230 type <array_type 0x7f551bc98690>
        readonly constant static "%s: read error\000">
    ./benchmarks/tmux/leak_3/tmux_leak_3.c:111:10 start: ./benchmarks/tmux/leak_3/tmux_leak_3.c:111:10 finish: ./benchmarks/tmux/leak_3/tmux_leak_3.c:111:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:cmd_load_buffer_exec========= [0m
[40;44m =======node_fun:server_client_get_path========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path server_client_get_path  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:realpath========= [0m
[40;33m =======POP node_fun stack:realpath========= [0m
[40;42m =======pre_check_funciton:server_client_get_path========= [0m
[40;42m =======start_check_funciton:server_client_get_path========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f551bcae678
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_11 = strdup (file_8(D));
    version:11
    ptr-info 0x7f551bca1c00>
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_19>
return _6;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
path_11 = strdup (file_8(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:77:24: warning: use location
   77 |                 path = xstrdup(file);                           /* allocation site */
      |                        ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_3 = PHI <path_9(D)(2), path_11(3)>
bb index := 4
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
path_3 = PHI <path_9(D)(2), path_11(3)>
lto1: warning: use location
this stmt have mutiple branch --------
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
bb index := 5
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_16>
_2 = realpath (path_3, &resolved);
bb index := 4
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
_2 = realpath (path_3, &resolved);
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:13: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |             ^
this stmt is child function---realpath-----

 ================== trace ================== 
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_1 = *file_8(D);
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:13: warning: use location
   76 |         if (*file == '/')
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
if (_1 == 47)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
Cond in fucntion server_client_get_path basic block 2
 ================== possible direct basic block ================= 
from server_client_get_path basic block 3
 ================== possible direct basic block ================= 
from server_client_get_path basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae678
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_11 = strdup (file_8(D));
    version:11
    ptr-info 0x7f551bca1c00>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
path_3 = PHI <path_9(D)(2), path_11(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
path_3 = PHI <path_9(D)(2), path_11(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f551bcae6c0
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
   
    def_stmt _15 = strdup (&resolved);
    version:15
    ptr-info 0x7f551bca1c18>
# .MEM_22 = VDEF <.MEM_21>
_15 = strdup (&resolved);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_15 = strdup (&resolved);
bb index := 5
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
_15 = strdup (&resolved);
./benchmarks/tmux/leak_3/tmux_leak_3.c:81:17: warning: use location
   81 |         return (xstrdup(resolved));                             /* allocation site */
      |                 ^
this stmt is child function---strdup-----

 ================== trace ================== 
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae6c0
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
   
    def_stmt _15 = strdup (&resolved);
    version:15
    ptr-info 0x7f551bca1c18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551bcae5e8
    type <pointer_type 0x7f551bc7fb28
        type <integer_type 0x7f551bc7fa80 char readonly public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fb28>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f551bca7400 file>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f551bca1be8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18(D)>
path_11 = strdup (file_8(D));
bb index := 3
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
path_11 = strdup (file_8(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:77:24: warning: use location
   77 |                 path = xstrdup(file);                           /* allocation site */
      |                        ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_3 = PHI <path_9(D)(2), path_11(3)>
bb index := 4
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
path_3 = PHI <path_9(D)(2), path_11(3)>
lto1: warning: use location
this stmt have mutiple branch --------
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
bb index := 5
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_16>
_2 = realpath (path_3, &resolved);
bb index := 4
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
_2 = realpath (path_3, &resolved);
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:13: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |             ^
this stmt is child function---realpath-----

 ================== trace ================== 
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18(D)>
_1 = *file_8(D);
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_1 = *file_8(D);
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:13: warning: use location
   76 |         if (*file == '/')
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
beacuse in succ := 14 have return or exit
# VUSE <.MEM_19>
return _6;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_15>
return _3;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
if (_1 == 47)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
Cond in fucntion server_client_get_path basic block 2
 ================== possible direct basic block ================= 
from server_client_get_path basic block 3
 ================== possible direct basic block ================= 
from server_client_get_path basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae5e8
    type <pointer_type 0x7f551bc7fb28
        type <integer_type 0x7f551bc7fa80 char readonly public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fb28>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f551bca7400 file>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f551bca1be8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
path_3 = PHI <path_9(D)(2), path_11(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f551bcae558
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_3 = PHI <path_9(D)(2), path_11(3)>
    version:3
    ptr-info 0x7f551bca1bb8>
path_3 = PHI <path_9(D)(2), path_11(3)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
bb index := 5
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_16>
_2 = realpath (path_3, &resolved);
bb index := 4
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
_2 = realpath (path_3, &resolved);
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:13: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |             ^
this stmt is child function---realpath-----

 ================== trace ================== 
trace fucntion name:realpath 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 4
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_23>
return _4;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f551bcae558
    type <pointer_type 0x7f551bc7fd20
        type <integer_type 0x7f551bc7f9d8 char public QI
            size <integer_cst 0x7f551c156ca8 constant 8>
            unit-size <integer_cst 0x7f551c156cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f551c16b3f0 precision:8 min <integer_cst 0x7f551bc76738 -128> max <integer_cst 0x7f551bc76720 127> context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f551bc7fd20>>
        public unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f551c161168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f551bc95c78>>
    var <var_decl 0x7f551bcb11b0 path>
    def_stmt path_3 = PHI <path_9(D)(2), path_11(3)>
    version:3
    ptr-info 0x7f551bca1bb8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: use location
   80 |         free(path);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (path_3);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:9: warning: Use after free error!: free location 
   80 |         free(path);
      |         ^
_4 = PHI <path_3(4), _15(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 4
if (_2 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:12: warning: use location
   78 |         if (realpath(path, resolved) == NULL)
      |            ^
	relate logic:= 0
=succs:= 2
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:12: warning: use location
   76 |         if (*file == '/')
      |            ^
	relate logic:= 1
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f551c3529a0
    type <pointer_type 0x7f551bc8fb28
        type <array_type 0x7f551bc8f930 type <integer_type 0x7f551bc7f9d8 char>
            BLK
            size <integer_cst 0x7f551bc76be8 constant 32768>
            unit-size <integer_cst 0x7f551bc76bd0 constant 4096>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f551bc8f888>
            pointer_to_this <pointer_type 0x7f551bc8fb28>>
        unsigned DI
        size <integer_cst 0x7f551c156bb8 constant 64>
        unit-size <integer_cst 0x7f551c156bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f551bcb1120 resolved type <array_type 0x7f551bc8f930>
        addressable BLK ./benchmarks/tmux/leak_3/tmux_leak_3.c:74:14 size <integer_cst 0x7f551bc76be8 32768> unit-size <integer_cst 0x7f551bc76bd0 4096>
        align:8 warn_if_not_align:0 context <function_decl 0x7f551bc80a00 server_client_get_path>>
    ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10 start: ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10 finish: ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:server_client_get_path========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
cmd_load_buffer_exec (&self, &item);
cmd_save_buffer_exec (&self, &item);
self ={v} {CLOBBER};
item ={v} {CLOBBER};
return 0;

=======Mapping node_fun:cmd_save_buffer_exec=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
c_11 = item_10(D)->client;
_1 = strcmp (path_12(D), "-");
if (_1 == 0)
  goto <bb 3>; [67.00%]
else
  goto <bb 8>; [33.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 719407025]:
if (c_11 == 0B)
  goto <bb 14>; [0.45%]
else
  goto <bb 4>; [99.55%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 716169692]:
_2 = c_11->session;
if (_2 == 0B)
  goto <bb 6>; [18.09%]
else
  goto <bb 5>; [81.91%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 586614595]:
_3 = c_11->flags;
_4 = _3 & 8192;
if (_4 != 0)
  goto <bb 6>; [50.00%]
else
  goto <bb 7>; [50.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 422862394]:
// predicted unlikely by goto predictor.
goto <bb 14>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 293307297]:
// predicted unlikely by goto predictor.
if (bufsize_18(D) > 2499)
  goto <bb 13>; [1.04%]
else
  goto <bb 14>; [98.96%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 354334800]:
file_14 = server_client_get_path (c_11, path_12(D));
f_16 = fopen (file_14, "wb");
if (f_16 == 0B)
  goto <bb 9>; [0.45%]
else
  goto <bb 10>; [99.55%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 1594507]:
printf ("%s", file_14);
free (file_14);
goto <bb 14>; [100.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 352740293]:
_5 = fwrite (bufdata_17(D), 1, bufsize_18(D), f_16);
if (_5 != bufsize_18(D))
  goto <bb 11>; [2.00%]
else
  goto <bb 12>; [98.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 7054807]:
printf ("%s: write error", file_14);
fclose (f_16);
goto <bb 14>; [100.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 345685486]:
fclose (f_16);
free (file_14);
goto <bb 14>; [100.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 3050395]:

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 1073741824]:
# _6 = PHI <-1(3), 0(6), 0(7), -1(9), -1(11), 0(12), -1(13)>
return _6;

=======Mapping node_fun:cmd_load_buffer_exec=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
args_7 = self_6(D)->args;
c_9 = item_8(D)->client;
_1 = args_7->argv;
path_10 = *_1;
file_12 = server_client_get_path (c_9, path_10);
f_14 = fopen (file_12, "rb");
if (f_14 == 0B)
  goto <bb 3>; [0.45%]
else
  goto <bb 4>; [99.55%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 4831840]:
printf ("%s", file_12);
free (file_12);
goto <bb 8>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1068909983]:
_2 = ferror (f_14);
if (_2 != 0)
  goto <bb 5>; [34.00%]
else
  goto <bb 6>; [66.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 363429398]:
printf ("%s: read error", file_12);
// predicted unlikely by goto predictor.
if (f_14 != 0B)
  goto <bb 7>; [53.47%]
else
  goto <bb 8>; [46.53%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 705480586]:
fclose (f_14);
free (file_12);
goto <bb 8>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 194325699]:
fclose (f_14);

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 1073741824]:
# _3 = PHI <-1(3), -1(5), 0(6), -1(7)>
return _3;

=======Mapping node_fun:server_client_get_path=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = *file_8(D);
if (_1 == 47)
  goto <bb 3>; [20.24%]
else
  goto <bb 4>; [79.76%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 217325344]:
path_11 = strdup (file_8(D));

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# path_3 = PHI <path_9(D)(2), path_11(3)>
_2 = realpath (path_3, &resolved);
if (_2 == 0B)
  goto <bb 6>; [30.95%]
else
  goto <bb 5>; [69.05%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 741418729]:
free (path_3);
_15 = strdup (&resolved);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# _4 = PHI <path_3(4), _15(5)>
resolved ={v} {CLOBBER};
return _4;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 2 [0m
[40;34m    gimple free   count : 5 [0m
[40;34m    find Entry point : 12 [0m
[40;34m    used_stmt array stack totalsize of : 0.003000 mb[0m
[40;34m    collect time: : 0.000186 s [0m
[40;34m    algorithm time: 0.096448 s [0m
[40;34m    gimple stmt count : : 56 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ch                   ------------|      |      |      |      |          |          |
cplxlower            ------------|      |      |      |      |          |          |
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -0.9%|     +0.3%|
copyprop                         |      |      |      |      |     -0.9%|     +0.3%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
no_loop              ------------|      |      |      |      |          |          |
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                  ------------|      |      |      |      |          |          |
strlen               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +74.3%|    +42.9%|
into_cfglayout                   |      |      |      |      |     -1.9%|     -0.7%|
jump                             |      |      |      |      |     -2.7%|     -2.1%|
subreg1                          |      |      |      |      |     -0.8%|     -1.4%|
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -1.4%|     -1.8%|
ce1                              |      |      |      |      |     -1.4%|     -1.5%|
reginfo                          |      |      |      |      |          |     +0.3%|
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant      ------------|      |      |      |      |          |          |
loop2_done           ------------|      |      |      |      |          |          |
dse1                 ------------|      |      |      |      |          |          |
fwprop2              ------------|      |      |      |      |          |          |
init-regs                        |      |      |      |      |     +1.5%|     +1.1%|
combine                          |      |      |      |      |     +2.4%|     +3.4%|
ce2                              |      |      |      |      |     +1.0%|     +2.2%|
outof_cfglayout                  |      |      |      |      |     +1.7%|     +0.4%|
split1                           |      |      |      |      |     +1.6%|     +0.4%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                              |      |      |      |      |     -0.3%|     -0.1%|
reload                           |      |      |      |      |     -6.7%|     -9.1%|
postreload                       |      |      |      |      |     -6.9%|     -9.9%|
split2                           |      |      |      |      |     -0.3%|     -0.1%|
cmpelim                          |      |      |      |      |     -0.3%|     -0.1%|
pro_and_epilogue                 |      |      |      |      |     +6.9%|    +12.8%|
dse2                             |      |      |      |      |     +6.4%|    +11.3%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg        ------------|      |      |      |      |          |          |
rtl_dce                          |      |      |      |      |     -0.8%|     -0.7%|
bbro                             |      |      |      |      |     -1.4%|     -1.7%|
split4                           |      |      |      |      |     -0.6%|     -1.0%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
