In file included from ./benchmarks/tmux/leak_3/tmux_leak_3.c:12:0:
./benchmarks/tmux/leak_3/tmux_leak_3.c: In function â€˜server_client_get_pathâ€™:
./benchmarks/tmux/leak_3/../stdio.h:138:20: warning: implicit declaration of function â€˜strdupâ€™ [-Wimplicit-function-declaration]
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/tmux/leak_3/tmux_leak_3.c:77:10: note: in expansion of macro â€˜xstrdupâ€™
   path = xstrdup(file);    /* allocation site */
          ^~~~~~~
./benchmarks/tmux/leak_3/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/tmux/leak_3/tmux_leak_3.c:77:10: note: in expansion of macro â€˜xstrdupâ€™
   path = xstrdup(file);    /* allocation site */
          ^~~~~~~
./benchmarks/tmux/leak_3/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10: note: in expansion of macro â€˜xstrdupâ€™
  return (xstrdup(resolved));    /* allocation site */
          ^~~~~~~
./benchmarks/tmux/leak_3/tmux_leak_3.c: In function â€˜cmd_save_buffer_execâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:6: warning: implicit declaration of function â€˜strcmpâ€™ [-Wimplicit-function-declaration]
  if (strcmp(path, "-") == 0) {
      ^~~~~~
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 4
succs:= 5
succs:= 5
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 8
succs:= 9
--------GIMPLE Cond -------
succs:= 10
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 12
succs:= 12
--------GIMPLE Cond -------
succs:= 14
succs:= 14
succs:= 11
--------GIMPLE Cond -------
succs:= 9
succs:= 10
succs:= 11
succs:= 17
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_20 = VDEF <.MEM_19(D)>
path_10 = strdup (file_7(D));
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
# .MEM_23 = VDEF <.MEM_22>
_13 = strdup (&resolved);
# .MEM_33 = VDEF <.MEM_1(D)>
file_25 = server_client_get_path (c_22, path_24);
# .MEM_34 = VDEF <.MEM_33>
f_26 = fopen (file_25, "rb");
# .MEM_40 = VDEF <.MEM_34>
_27 = __printf_chk (1, "%s", file_25);
# .MEM_35 = VDEF <.MEM_34>
_28 = ferror (f_26);
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);
# .MEM_36 = VDEF <.MEM_35>
fclose (f_26);
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
# .MEM_43 = VDEF <.MEM_31>
file_13 = server_client_get_path (c_7, path_8(D));
# .MEM_44 = VDEF <.MEM_43>
f_14 = fopen (file_13, "wb");
# .MEM_50 = VDEF <.MEM_44>
_15 = __printf_chk (1, "%s", file_13);
# .MEM_45 = VDEF <.MEM_44>
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:server_client_get_path========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path server_client_get_path  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__realpath_chk========= [0m
[40;33m =======POP node_fun stack:__realpath_chk========= [0m
[40;42m =======pre_check_funciton:server_client_get_path========= [0m
[40;42m =======start_check_funciton:server_client_get_path========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f772aea3948
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772bc30bd0 path>
    def_stmt path_10 = strdup (file_7(D));
    version 10
    ptr-info 0x7f772a9fb7c8>
# .MEM_20 = VDEF <.MEM_19(D)>
path_10 = strdup (file_7(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
path_10 = strdup (file_7(D));
bb index := 3
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
path_10 = strdup (file_7(D));
bb index := 3
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
path_10 = strdup (file_7(D));
bb index := 3
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
path_10 = strdup (file_7(D));
bb index := 3
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================
path_10 = strdup (file_7(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:77:8: warning: use location
   path = xstrdup(file);    /* allocation site */
        ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f772aea3948
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772bc30bd0 path>
    def_stmt path_10 = strdup (file_7(D));
    version 10
    ptr-info 0x7f772a9fb7c8>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_2 = PHI <path_8(D)(2), path_10(3)>
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_2 = PHI <path_8(D)(2), path_10(3)>
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_2 = PHI <path_8(D)(2), path_10(3)>
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_2 = PHI <path_8(D)(2), path_10(3)>
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================
path_2 = PHI <path_8(D)(2), path_10(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
_3 = PHI <path_2(5), _13(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
bb index := 6
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
bb index := 6
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: use location
  free(path);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = path_2;
bb index := 5
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = path_2;
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================
_14 = path_2;
./benchmarks/tmux/leak_3/tmux_leak_3.c:79:10: warning: use location
   return (path);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================
_16 = __realpath_chk (path_2, &resolved, 4096);
this stmt is child function---__realpath_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aea3948
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772bc30bd0 path>
    def_stmt path_10 = strdup (file_7(D));
    version 10
    ptr-info 0x7f772a9fb7c8>
trace fucntion name:__realpath_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================
if (_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:5: warning: use location
  if (realpath(path, resolved) == NULL)
     ^
if (_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:5: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
_1 = *file_7(D);
bb index := 2
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
_1 = *file_7(D);
bb index := 2
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
_1 = *file_7(D);
bb index := 2
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
_1 = *file_7(D);
bb index := 2
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================
_1 = *file_7(D);
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:6: warning: use location
  if (*file == '/')
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:5: warning: use location
  if (*file == '/')
     ^
if (_1 == 47)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:5: warning: use location
Cond in fucntion server_client_get_path basic block 2
 ================== possible direct basic block ================= 
from server_client_get_path basic block 3
 ================== possible direct basic block ================= 
from server_client_get_path basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f772aea3948
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772bc30bd0 path>
    def_stmt path_10 = strdup (file_7(D));
    version 10
    ptr-info 0x7f772a9fb7c8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: use location
  free(path);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: Use after free error!: free location 
path_2 = PHI <path_8(D)(2), path_10(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: Use after free error!: free location 
path_2 = PHI <path_8(D)(2), path_10(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: Use after free error!: free location 
_3 = PHI <path_2(5), _13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: Use after free error!: free location 
_3 = PHI <path_2(5), _13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f772aea3990
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
   
    def_stmt _13 = strdup (&resolved);
    version 13
    ptr-info 0x7f772a9fb7e0>
# .MEM_23 = VDEF <.MEM_22>
_13 = strdup (&resolved);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_13 = strdup (&resolved);
bb index := 6
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_13 = strdup (&resolved);
bb index := 6
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
_13 = strdup (&resolved);
./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10: warning: use location
  return (xstrdup(resolved));    /* allocation site */
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f772aea3990
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
   
    def_stmt _13 = strdup (&resolved);
    version 13
    ptr-info 0x7f772a9fb7e0>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
_3 = PHI <path_2(5), _13(6)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f772aea3990
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
   
    def_stmt _13 = strdup (&resolved);
    version 13
    ptr-info 0x7f772a9fb7e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f772aea38b8
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f772a9f2200 file>
    def_stmt GIMPLE_NOP
    version 7
    ptr-info 0x7f772a9fb798>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
path_10 = strdup (file_7(D));
bb index := 3
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
path_10 = strdup (file_7(D));
bb index := 3
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
path_10 = strdup (file_7(D));
bb index := 3
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
path_10 = strdup (file_7(D));
bb index := 3
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================
path_10 = strdup (file_7(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:77:8: warning: use location
   path = xstrdup(file);    /* allocation site */
        ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f772aea38b8
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f772a9f2200 file>
    def_stmt GIMPLE_NOP
    version 7
    ptr-info 0x7f772a9fb798>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_2 = PHI <path_8(D)(2), path_10(3)>
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_2 = PHI <path_8(D)(2), path_10(3)>
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_2 = PHI <path_8(D)(2), path_10(3)>
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_2 = PHI <path_8(D)(2), path_10(3)>
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================
path_2 = PHI <path_8(D)(2), path_10(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
_3 = PHI <path_2(5), _13(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
bb index := 6
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
bb index := 6
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: use location
  free(path);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = path_2;
bb index := 5
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = path_2;
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================
_14 = path_2;
./benchmarks/tmux/leak_3/tmux_leak_3.c:79:10: warning: use location
   return (path);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================
_16 = __realpath_chk (path_2, &resolved, 4096);
this stmt is child function---__realpath_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aea38b8
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f772a9f2200 file>
    def_stmt GIMPLE_NOP
    version 7
    ptr-info 0x7f772a9fb798>
trace fucntion name:__realpath_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================
if (_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:5: warning: use location
  if (realpath(path, resolved) == NULL)
     ^
if (_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:5: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
_1 = *file_7(D);
bb index := 2
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
_1 = *file_7(D);
bb index := 2
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
_1 = *file_7(D);
bb index := 2
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
_1 = *file_7(D);
bb index := 2
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================
_1 = *file_7(D);
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:6: warning: use location
  if (*file == '/')
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================
if (_1 == 47)
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:5: warning: use location
  if (*file == '/')
     ^
if (_1 == 47)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:5: warning: use location
Cond in fucntion server_client_get_path basic block 2
 ================== possible direct basic block ================= 
from server_client_get_path basic block 3
 ================== possible direct basic block ================= 
from server_client_get_path basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f772aea38b8
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f772a9f2200 file>
    def_stmt GIMPLE_NOP
    version 7
    ptr-info 0x7f772a9fb798>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: Use after free error!: free location 
  free(path);
  ^
path_2 = PHI <path_8(D)(2), path_10(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: Use after free error!: free location 
_3 = PHI <path_2(5), _13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f772aea3828
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772bc30bd0 path>
    def_stmt path_2 = PHI <path_8(D)(2), path_10(3)>
    version 2
    ptr-info 0x7f772a9fb768>
path_2 = PHI <path_8(D)(2), path_10(3)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
_3 = PHI <path_2(5), _13(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
bb index := 6
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
bb index := 6
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = path_2;
bb index := 5
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = path_2;
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================
_14 = path_2;
./benchmarks/tmux/leak_3/tmux_leak_3.c:79:10: warning: use location
   return (path);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================
_16 = __realpath_chk (path_2, &resolved, 4096);
this stmt is child function---__realpath_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aea3828
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772bc30bd0 path>
    def_stmt path_2 = PHI <path_8(D)(2), path_10(3)>
    version 2
    ptr-info 0x7f772a9fb768>
trace fucntion name:__realpath_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================
if (_16 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:5: warning: use location
  if (realpath(path, resolved) == NULL)
     ^
if (_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:5: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f772aea3828
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772bc30bd0 path>
    def_stmt path_2 = PHI <path_8(D)(2), path_10(3)>
    version 2
    ptr-info 0x7f772a9fb768>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: use location
  free(path);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: Use after free error!: free location 
_3 = PHI <path_2(5), _13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: Use after free error!: free location 
_3 = PHI <path_2(5), _13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f772a9b9a40
    type <pointer_type 0x7f772a9f35e8
        type <array_type 0x7f772a9f33f0 type <integer_type 0x7f772a9c5888 char>
            BLK
            size <integer_cst 0x7f772a9c8af8 constant 32768>
            unit size <integer_cst 0x7f772a9c8ae0 constant 4096>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f772a9f3348>
            pointer_to_this <pointer_type 0x7f772a9f35e8>>
        unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f772bc30b40 resolved type <array_type 0x7f772a9f33f0>
        addressable BLK file ./benchmarks/tmux/leak_3/tmux_leak_3.c line 74 col 14 size <integer_cst 0x7f772a9c8af8 32768> unit size <integer_cst 0x7f772a9c8ae0 4096>
        align 128 context <function_decl 0x7f772a9c6e00 server_client_get_path>
        chain <function_decl 0x7f772a9efa00 strdup type <function_type 0x7f772a9f03f0>
            addressable nothrow public external built-in QI file <built-in> line 0 col 0
            align 8 built-in BUILT_IN_NORMAL:BUILT_IN_STRDUP context <function_decl 0x7f772a9c6e00 server_client_get_path> attributes <tree_list 0x7f772a9f1550>>>
    ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10 start: ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10 finish: ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:server_client_get_path========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 8 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:fclose========= [0m
[40;33m =======POP node_fun stack:fclose========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:fwrite========= [0m
[40;33m =======POP node_fun stack:fwrite========= [0m
[40;42m =======pre add _ fucntion:fopen========= [0m
[40;33m =======POP node_fun stack:fopen========= [0m
[40;42m =======pre add _ fucntion:server_client_get_path========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path server_client_get_path  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__realpath_chk========= [0m
[40;33m =======POP node_fun stack:__realpath_chk========= [0m
[40;42m =======pre_check_funciton:server_client_get_path========= [0m
[40;42m =======start_check_funciton:server_client_get_path========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f772aea3948
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772bc30bd0 path>
    def_stmt path_10 = strdup (file_7(D));
    version 10
    ptr-info 0x7f772a9fb7c8>
# .MEM_20 = VDEF <.MEM_19(D)>
path_10 = strdup (file_7(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
path_10 = strdup (file_7(D));
bb index := 3
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
path_10 = strdup (file_7(D));
bb index := 3
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
path_10 = strdup (file_7(D));
bb index := 3
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
path_10 = strdup (file_7(D));
bb index := 3
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================
path_10 = strdup (file_7(D));
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:77:8: warning: use location
   path = xstrdup(file);    /* allocation site */
        ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f772aea3948
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772bc30bd0 path>
    def_stmt path_10 = strdup (file_7(D));
    version 10
    ptr-info 0x7f772a9fb7c8>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_2 = PHI <path_8(D)(2), path_10(3)>
bb index := 4
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_2 = PHI <path_8(D)(2), path_10(3)>
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_2 = PHI <path_8(D)(2), path_10(3)>
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_2 = PHI <path_8(D)(2), path_10(3)>
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================
path_2 = PHI <path_8(D)(2), path_10(3)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
_3 = PHI <path_2(5), _13(6)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
bb index := 6
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
bb index := 6
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
free (path_2);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: use location
  free(path);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = path_2;
bb index := 5
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = path_2;
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================
_14 = path_2;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:79:10: warning: use location
   return (path);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================
_16 = __realpath_chk (path_2, &resolved, 4096);
this stmt is child function---__realpath_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aea3948
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772bc30bd0 path>
    def_stmt path_10 = strdup (file_7(D));
    version 10
    ptr-info 0x7f772a9fb7c8>
trace fucntion name:__realpath_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================
if (_16 == 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:5: warning: use location
  if (realpath(path, resolved) == NULL)
     ^
if (_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:5: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
_1 = *file_7(D);
bb index := 2
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
_1 = *file_7(D);
bb index := 2
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
_1 = *file_7(D);
bb index := 2
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
_1 = *file_7(D);
bb index := 2
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================
_1 = *file_7(D);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:6: warning: use location
  if (*file == '/')
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================
if (_1 == 47)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:5: warning: use location
  if (*file == '/')
     ^
if (_1 == 47)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:5: warning: use location
Cond in fucntion server_client_get_path basic block 2
 ================== possible direct basic block ================= 
from server_client_get_path basic block 3
 ================== possible direct basic block ================= 
from server_client_get_path basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f772aea3948
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772bc30bd0 path>
    def_stmt path_10 = strdup (file_7(D));
    version 10
    ptr-info 0x7f772a9fb7c8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: use location
  free(path);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: Use after free error!: free location 
path_2 = PHI <path_8(D)(2), path_10(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: Use after free error!: free location 
path_2 = PHI <path_8(D)(2), path_10(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: Use after free error!: free location 
_3 = PHI <path_2(5), _13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: Use after free error!: free location 
_3 = PHI <path_2(5), _13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f772aea3990
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
   
    def_stmt _13 = strdup (&resolved);
    version 13
    ptr-info 0x7f772a9fb7e0>
# .MEM_23 = VDEF <.MEM_22>
_13 = strdup (&resolved);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_13 = strdup (&resolved);
bb index := 6
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_13 = strdup (&resolved);
bb index := 6
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
_13 = strdup (&resolved);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10: warning: use location
  return (xstrdup(resolved));    /* allocation site */
          ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f772aea3990
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
   
    def_stmt _13 = strdup (&resolved);
    version 13
    ptr-info 0x7f772a9fb7e0>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
_3 = PHI <path_2(5), _13(6)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f772aea3990
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
   
    def_stmt _13 = strdup (&resolved);
    version 13
    ptr-info 0x7f772a9fb7e0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f772aea38b8
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f772a9f2200 file>
    def_stmt GIMPLE_NOP
    version 7
    ptr-info 0x7f772a9fb798>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
path_10 = strdup (file_7(D));
bb index := 3
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
path_10 = strdup (file_7(D));
bb index := 3
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
path_10 = strdup (file_7(D));
bb index := 3
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
path_10 = strdup (file_7(D));
bb index := 3
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================
path_10 = strdup (file_7(D));
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:77:8: warning: use location
   path = xstrdup(file);    /* allocation site */
        ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f772aea38b8
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f772a9f2200 file>
    def_stmt GIMPLE_NOP
    version 7
    ptr-info 0x7f772a9fb798>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_2 = PHI <path_8(D)(2), path_10(3)>
bb index := 4
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_2 = PHI <path_8(D)(2), path_10(3)>
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_2 = PHI <path_8(D)(2), path_10(3)>
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
path_2 = PHI <path_8(D)(2), path_10(3)>
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================
path_2 = PHI <path_8(D)(2), path_10(3)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
_3 = PHI <path_2(5), _13(6)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
bb index := 6
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
bb index := 6
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
free (path_2);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: use location
  free(path);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = path_2;
bb index := 5
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = path_2;
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================
_14 = path_2;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:79:10: warning: use location
   return (path);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================
_16 = __realpath_chk (path_2, &resolved, 4096);
this stmt is child function---__realpath_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aea38b8
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f772a9f2200 file>
    def_stmt GIMPLE_NOP
    version 7
    ptr-info 0x7f772a9fb798>
trace fucntion name:__realpath_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================
if (_16 == 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:5: warning: use location
  if (realpath(path, resolved) == NULL)
     ^
if (_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:5: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
_1 = *file_7(D);
bb index := 2
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
_1 = *file_7(D);
bb index := 2
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
_1 = *file_7(D);
bb index := 2
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19(D)>
_1 = *file_7(D);
bb index := 2
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================
_1 = *file_7(D);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:6: warning: use location
  if (*file == '/')
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 47)
bb index := 2
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 19

======================================================================
if (_1 == 47)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:5: warning: use location
  if (*file == '/')
     ^
if (_1 == 47)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:76:5: warning: use location
Cond in fucntion server_client_get_path basic block 2
 ================== possible direct basic block ================= 
from server_client_get_path basic block 3
 ================== possible direct basic block ================= 
from server_client_get_path basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f772aea38b8
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f772a9f2200 file>
    def_stmt GIMPLE_NOP
    version 7
    ptr-info 0x7f772a9fb798>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: Use after free error!: free location 
  free(path);
  ^
path_2 = PHI <path_8(D)(2), path_10(3)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: Use after free error!: free location 
_3 = PHI <path_2(5), _13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f772aea3828
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772bc30bd0 path>
    def_stmt path_2 = PHI <path_8(D)(2), path_10(3)>
    version 2
    ptr-info 0x7f772a9fb768>
path_2 = PHI <path_8(D)(2), path_10(3)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = PHI <path_2(5), _13(6)>
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
_3 = PHI <path_2(5), _13(6)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
bb index := 6
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
bb index := 6
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
free (path_2);
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = path_2;
bb index := 5
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = path_2;
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================
_14 = path_2;
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:79:10: warning: use location
   return (path);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_24>
return _3;
In function â€˜server_client_get_pathâ€™:
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_17>
_16 = __realpath_chk (path_2, &resolved, 4096);
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================
_16 = __realpath_chk (path_2, &resolved, 4096);
this stmt is child function---__realpath_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aea3828
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772bc30bd0 path>
    def_stmt path_2 = PHI <path_8(D)(2), path_10(3)>
    version 2
    ptr-info 0x7f772a9fb768>
trace fucntion name:__realpath_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 == 0B)
bb index := 4
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 19

======================================================================
if (_16 == 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:5: warning: use location
  if (realpath(path, resolved) == NULL)
     ^
if (_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:78:5: warning: use location
Cond in fucntion server_client_get_path basic block 4
 ================== possible direct basic block ================= 
from server_client_get_path basic block 5
 ================== possible direct basic block ================= 
from server_client_get_path basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f772aea3828
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772bc30bd0 path>
    def_stmt path_2 = PHI <path_8(D)(2), path_10(3)>
    version 2
    ptr-info 0x7f772a9fb768>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: use location
  free(path);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: Use after free error!: free location 
_3 = PHI <path_2(5), _13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: Use after free error!: free location 
_3 = PHI <path_2(5), _13(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f772a9b9a40
    type <pointer_type 0x7f772a9f35e8
        type <array_type 0x7f772a9f33f0 type <integer_type 0x7f772a9c5888 char>
            BLK
            size <integer_cst 0x7f772a9c8af8 constant 32768>
            unit size <integer_cst 0x7f772a9c8ae0 constant 4096>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f772a9f3348>
            pointer_to_this <pointer_type 0x7f772a9f35e8>>
        unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f772bc30b40 resolved type <array_type 0x7f772a9f33f0>
        addressable BLK file ./benchmarks/tmux/leak_3/tmux_leak_3.c line 74 col 14 size <integer_cst 0x7f772a9c8af8 32768> unit size <integer_cst 0x7f772a9c8ae0 4096>
        align 128 context <function_decl 0x7f772a9c6e00 server_client_get_path>
        chain <function_decl 0x7f772a9efa00 strdup type <function_type 0x7f772a9f03f0>
            addressable nothrow public external built-in QI file <built-in> line 0 col 0
            align 8 built-in BUILT_IN_NORMAL:BUILT_IN_STRDUP context <function_decl 0x7f772a9c6e00 server_client_get_path> attributes <tree_list 0x7f772a9f1550>>>
    ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10 start: ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10 finish: ./benchmarks/tmux/leak_3/tmux_leak_3.c:81:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:server_client_get_path========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:ferror========= [0m
[40;33m =======POP node_fun stack:ferror========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f772aa0d1b0
    type <pointer_type 0x7f772a9e1150
        type <record_type 0x7f772a9e11f8 client BLK
            size <integer_cst 0x7f772a9c88a0 constant 6336>
            unit size <integer_cst 0x7f772a9c87f8 constant 792>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9e11f8 fields <field_decl 0x7f772a9e9260 name> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9e1150> chain <type_decl 0x7f772a9e92f8 D.4431>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f772a9e1348>>
    var <var_decl 0x7f772aa09cf0 c>
    def_stmt c_22 = item.client;
    version 22
    ptr-info 0x7f772a9fb8e8>
# VUSE <.MEM_1(D)>
c_22 = item.client;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
file_25 = server_client_get_path (c_22, path_24);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:7: warning: use location
  file = server_client_get_path(c, path);
       ^
this stmt is child function---server_client_get_path-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d1b0
    type <pointer_type 0x7f772a9e1150
        type <record_type 0x7f772a9e11f8 client BLK
            size <integer_cst 0x7f772a9c88a0 constant 6336>
            unit size <integer_cst 0x7f772a9c87f8 constant 792>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9e11f8 fields <field_decl 0x7f772a9e9260 name> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9e1150> chain <type_decl 0x7f772a9e92f8 D.4431>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f772a9e1348>>
    var <var_decl 0x7f772aa09cf0 c>
    def_stmt c_22 = item.client;
    version 22
    ptr-info 0x7f772a9fb8e8>
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__realpath_chk========= [0m
[40;46m =======add node_fun stack:__realpath_chk========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
bb index := 6
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
bb index := 6
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: use location
  free(file);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);
bb index := 5
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);
bb index := 5
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================
_29 = __printf_chk (1, "%s: read error", file_25);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d1b0
    type <pointer_type 0x7f772a9e1150
        type <record_type 0x7f772a9e11f8 client BLK
            size <integer_cst 0x7f772a9c88a0 constant 6336>
            unit size <integer_cst 0x7f772a9c87f8 constant 792>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9e11f8 fields <field_decl 0x7f772a9e9260 name> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9e1150> chain <type_decl 0x7f772a9e92f8 D.4431>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f772a9e1348>>
    var <var_decl 0x7f772aa09cf0 c>
    def_stmt c_22 = item.client;
    version 22
    ptr-info 0x7f772a9fb8e8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
bb index := 3
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
bb index := 3
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: use location
   free(file);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_27 = __printf_chk (1, "%s", file_25);
bb index := 3
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_27 = __printf_chk (1, "%s", file_25);
bb index := 3
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================
_27 = __printf_chk (1, "%s", file_25);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d1b0
    type <pointer_type 0x7f772a9e1150
        type <record_type 0x7f772a9e11f8 client BLK
            size <integer_cst 0x7f772a9c88a0 constant 6336>
            unit size <integer_cst 0x7f772a9c87f8 constant 792>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9e11f8 fields <field_decl 0x7f772a9e9260 name> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9e1150> chain <type_decl 0x7f772a9e92f8 D.4431>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f772a9e1348>>
    var <var_decl 0x7f772aa09cf0 c>
    def_stmt c_22 = item.client;
    version 22
    ptr-info 0x7f772a9fb8e8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:2 
f_26 = fopen (file_25, "rb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:101:4: warning: use location
  f = fopen(file, "rb");
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d1b0
    type <pointer_type 0x7f772a9e1150
        type <record_type 0x7f772a9e11f8 client BLK
            size <integer_cst 0x7f772a9c88a0 constant 6336>
            unit size <integer_cst 0x7f772a9c87f8 constant 792>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9e11f8 fields <field_decl 0x7f772a9e9260 name> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9e1150> chain <type_decl 0x7f772a9e92f8 D.4431>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f772a9e1348>>
    var <var_decl 0x7f772aa09cf0 c>
    def_stmt c_22 = item.client;
    version 22
    ptr-info 0x7f772a9fb8e8>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:3: warning: use location
   fclose(f);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d1b0
    type <pointer_type 0x7f772a9e1150
        type <record_type 0x7f772a9e11f8 client BLK
            size <integer_cst 0x7f772a9c88a0 constant 6336>
            unit size <integer_cst 0x7f772a9c87f8 constant 792>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9e11f8 fields <field_decl 0x7f772a9e9260 name> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9e1150> chain <type_decl 0x7f772a9e92f8 D.4431>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f772a9e1348>>
    var <var_decl 0x7f772aa09cf0 c>
    def_stmt c_22 = item.client;
    version 22
    ptr-info 0x7f772a9fb8e8>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
fclose (f_26);
bb index := 6
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
fclose (f_26);
bb index := 6
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:2: warning: use location
  fclose(f);
  ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d1b0
    type <pointer_type 0x7f772a9e1150
        type <record_type 0x7f772a9e11f8 client BLK
            size <integer_cst 0x7f772a9c88a0 constant 6336>
            unit size <integer_cst 0x7f772a9c87f8 constant 792>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9e11f8 fields <field_decl 0x7f772a9e9260 name> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9e1150> chain <type_decl 0x7f772a9e92f8 D.4431>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f772a9e1348>>
    var <var_decl 0x7f772aa09cf0 c>
    def_stmt c_22 = item.client;
    version 22
    ptr-info 0x7f772a9fb8e8>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_26 != 0B)
bb index := 5
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_26 != 0B)
bb index := 5
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_26 != 0B)
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_26 != 0B)
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================
if (f_26 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:5: warning: use location
  if (f != NULL)
     ^
if (f_26 != 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:5: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_28 = ferror (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:6: warning: use location
  if (ferror(f)) {
      ^
this stmt is child function---ferror-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d1b0
    type <pointer_type 0x7f772a9e1150
        type <record_type 0x7f772a9e11f8 client BLK
            size <integer_cst 0x7f772a9c88a0 constant 6336>
            unit size <integer_cst 0x7f772a9c87f8 constant 792>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9e11f8 fields <field_decl 0x7f772a9e9260 name> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9e1150> chain <type_decl 0x7f772a9e92f8 D.4431>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f772a9e1348>>
    var <var_decl 0x7f772aa09cf0 c>
    def_stmt c_22 = item.client;
    version 22
    ptr-info 0x7f772a9fb8e8>
trace fucntion name:ferror 

 ================== trace ================== 
trace fucntion free:2 
if (_28 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:5: warning: use location
  if (ferror(f)) {
     ^
if (_28 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:5: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f772aa0d1b0
    type <pointer_type 0x7f772a9e1150
        type <record_type 0x7f772a9e11f8 client BLK
            size <integer_cst 0x7f772a9c88a0 constant 6336>
            unit size <integer_cst 0x7f772a9c87f8 constant 792>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9e11f8 fields <field_decl 0x7f772a9e9260 name> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9e1150> chain <type_decl 0x7f772a9e92f8 D.4431>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f772a9e1348>>
    var <var_decl 0x7f772aa09cf0 c>
    def_stmt c_22 = item.client;
    version 22
    ptr-info 0x7f772a9fb8e8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_36 = VDEF <.MEM_35>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (f_26 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:5: warning: use location
  if (f != NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_35 = VDEF <.MEM_34>
_28 = ferror (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:6: warning: use location
  if (ferror(f)) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (_28 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:5: warning: use location
  if (ferror(f)) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f772aa0d288
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772aa09ea0 file>
    def_stmt file_25 = server_client_get_path (c_22, path_24);
    version 25
    ptr-info 0x7f772a9fb930>
# .MEM_33 = VDEF <.MEM_1(D)>
file_25 = server_client_get_path (c_22, path_24);

 ================== trace ptable================== 
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :-100========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__realpath_chk========= [0m
[40;46m =======add node_fun stack:__realpath_chk========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---server_client_get_path-----
this other function ------server_client_get_path-----
 
 Start check Pointer Collect  

======================================================================
file_25 = server_client_get_path (c_22, path_24);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:7: warning: use location
  file = server_client_get_path(c, path);
       ^
this stmt is child function---server_client_get_path-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d288
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772aa09ea0 file>
    def_stmt file_25 = server_client_get_path (c_22, path_24);
    version 25
    ptr-info 0x7f772a9fb930>
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: use location
  free(path);
  ^
[40;36m ======= node_fun:server_client_get_path========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__realpath_chk========= [0m
[40;46m =======add node_fun stack:__realpath_chk========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
bb index := 6
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
bb index := 6
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: use location
  free(file);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);
bb index := 5
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);
bb index := 5
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================
_29 = __printf_chk (1, "%s: read error", file_25);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d288
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772aa09ea0 file>
    def_stmt file_25 = server_client_get_path (c_22, path_24);
    version 25
    ptr-info 0x7f772a9fb930>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
bb index := 3
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
bb index := 3
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: use location
   free(file);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_27 = __printf_chk (1, "%s", file_25);
bb index := 3
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_27 = __printf_chk (1, "%s", file_25);
bb index := 3
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================
_27 = __printf_chk (1, "%s", file_25);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d288
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772aa09ea0 file>
    def_stmt file_25 = server_client_get_path (c_22, path_24);
    version 25
    ptr-info 0x7f772a9fb930>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:3 
f_26 = fopen (file_25, "rb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:101:4: warning: use location
  f = fopen(file, "rb");
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d288
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772aa09ea0 file>
    def_stmt file_25 = server_client_get_path (c_22, path_24);
    version 25
    ptr-info 0x7f772a9fb930>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:3: warning: use location
   fclose(f);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d288
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772aa09ea0 file>
    def_stmt file_25 = server_client_get_path (c_22, path_24);
    version 25
    ptr-info 0x7f772a9fb930>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
fclose (f_26);
bb index := 6
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
fclose (f_26);
bb index := 6
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:2: warning: use location
  fclose(f);
  ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d288
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772aa09ea0 file>
    def_stmt file_25 = server_client_get_path (c_22, path_24);
    version 25
    ptr-info 0x7f772a9fb930>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_26 != 0B)
bb index := 5
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_26 != 0B)
bb index := 5
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_26 != 0B)
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_26 != 0B)
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================
if (f_26 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:5: warning: use location
  if (f != NULL)
     ^
if (f_26 != 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:5: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_28 = ferror (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:6: warning: use location
  if (ferror(f)) {
      ^
this stmt is child function---ferror-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d288
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772aa09ea0 file>
    def_stmt file_25 = server_client_get_path (c_22, path_24);
    version 25
    ptr-info 0x7f772a9fb930>
trace fucntion name:ferror 

 ================== trace ================== 
trace fucntion free:3 
if (_28 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:5: warning: use location
  if (ferror(f)) {
     ^
if (_28 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:5: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f772aa0d288
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772aa09ea0 file>
    def_stmt file_25 = server_client_get_path (c_22, path_24);
    version 25
    ptr-info 0x7f772a9fb930>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: use location
   free(file);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: use location
  free(file);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: use location
   free(file);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: use location
  free(file);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_33 = VDEF <.MEM_1(D)>
file_25 = server_client_get_path (c_22, path_24);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:7: warning: Use after free error!: free location 
  file = server_client_get_path(c, path);
       ^
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: use location
  free(file);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_1(D)>
file_25 = server_client_get_path (c_22, path_24);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:7: warning: Use after free error!: free location 
  file = server_client_get_path(c, path);
       ^
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_1(D)>
file_25 = server_client_get_path (c_22, path_24);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:7: warning: Use after free error!: free location 
  file = server_client_get_path(c, path);
       ^
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: use location
   free(file);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_1(D)>
file_25 = server_client_get_path (c_22, path_24);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:7: warning: Use after free error!: free location 
  file = server_client_get_path(c, path);
       ^
# .MEM_40 = VDEF <.MEM_34>
_27 = __printf_chk (1, "%s", file_25);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_1(D)>
file_25 = server_client_get_path (c_22, path_24);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:7: warning: Use after free error!: free location 
# .MEM_34 = VDEF <.MEM_33>
f_26 = fopen (file_25, "rb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:101:4: warning: use location
  f = fopen(file, "rb");
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_1(D)>
file_25 = server_client_get_path (c_22, path_24);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:7: warning: Use after free error!: free location 
  file = server_client_get_path(c, path);
       ^
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_1(D)>
file_25 = server_client_get_path (c_22, path_24);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:7: warning: Use after free error!: free location 
  file = server_client_get_path(c, path);
       ^
# .MEM_36 = VDEF <.MEM_35>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_36 = VDEF <.MEM_35>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_36 = VDEF <.MEM_35>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_1(D)>
file_25 = server_client_get_path (c_22, path_24);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:7: warning: Use after free error!: free location 
  file = server_client_get_path(c, path);
       ^
if (f_26 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:5: warning: use location
  if (f != NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (f_26 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:5: warning: use location
  if (f != NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (f_26 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:5: warning: use location
  if (f != NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_1(D)>
file_25 = server_client_get_path (c_22, path_24);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:7: warning: Use after free error!: free location 
  file = server_client_get_path(c, path);
       ^
# .MEM_35 = VDEF <.MEM_34>
_28 = ferror (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:6: warning: use location
  if (ferror(f)) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_35 = VDEF <.MEM_34>
_28 = ferror (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:6: warning: use location
  if (ferror(f)) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_35 = VDEF <.MEM_34>
_28 = ferror (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:6: warning: use location
  if (ferror(f)) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_33 = VDEF <.MEM_1(D)>
file_25 = server_client_get_path (c_22, path_24);
./benchmarks/tmux/leak_3/tmux_leak_3.c:100:7: warning: Use after free error!: free location 
  file = server_client_get_path(c, path);
       ^
if (_28 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:5: warning: use location
  if (ferror(f)) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (_28 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:5: warning: use location
  if (ferror(f)) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (_28 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:5: warning: use location
  if (ferror(f)) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f772ae9bf90 type <integer_type 0x7f772aeaf5e8 int> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f772aa0d2d0
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa09d80 f>
    def_stmt f_26 = fopen (file_25, "rb");
    version 26
    ptr-info 0x7f772a9fb948>
# .MEM_34 = VDEF <.MEM_33>
f_26 = fopen (file_25, "rb");

 ================== trace ptable================== 
trace fucntion name:fopen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---fopen-----
this other function ------fopen-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
bb index := 6
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
bb index := 6
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: use location
  free(file);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);
bb index := 5
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);
bb index := 5
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================
_29 = __printf_chk (1, "%s: read error", file_25);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d2d0
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa09d80 f>
    def_stmt f_26 = fopen (file_25, "rb");
    version 26
    ptr-info 0x7f772a9fb948>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
bb index := 3
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
bb index := 3
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: use location
   free(file);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_27 = __printf_chk (1, "%s", file_25);
bb index := 3
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_27 = __printf_chk (1, "%s", file_25);
bb index := 3
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================
_27 = __printf_chk (1, "%s", file_25);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d2d0
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa09d80 f>
    def_stmt f_26 = fopen (file_25, "rb");
    version 26
    ptr-info 0x7f772a9fb948>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:2 
f_26 = fopen (file_25, "rb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:101:4: warning: use location
  f = fopen(file, "rb");
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d2d0
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa09d80 f>
    def_stmt f_26 = fopen (file_25, "rb");
    version 26
    ptr-info 0x7f772a9fb948>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:3: warning: use location
   fclose(f);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d2d0
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa09d80 f>
    def_stmt f_26 = fopen (file_25, "rb");
    version 26
    ptr-info 0x7f772a9fb948>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
fclose (f_26);
bb index := 6
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
fclose (f_26);
bb index := 6
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:2: warning: use location
  fclose(f);
  ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d2d0
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa09d80 f>
    def_stmt f_26 = fopen (file_25, "rb");
    version 26
    ptr-info 0x7f772a9fb948>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_26 != 0B)
bb index := 5
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_26 != 0B)
bb index := 5
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_26 != 0B)
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_26 != 0B)
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================
if (f_26 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:5: warning: use location
  if (f != NULL)
     ^
if (f_26 != 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:5: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_28 = ferror (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:6: warning: use location
  if (ferror(f)) {
      ^
this stmt is child function---ferror-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d2d0
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa09d80 f>
    def_stmt f_26 = fopen (file_25, "rb");
    version 26
    ptr-info 0x7f772a9fb948>
trace fucntion name:ferror 

 ================== trace ================== 
trace fucntion free:2 
if (_28 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:5: warning: use location
  if (ferror(f)) {
     ^
if (_28 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:5: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f772aa0d2d0
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa09d80 f>
    def_stmt f_26 = fopen (file_25, "rb");
    version 26
    ptr-info 0x7f772a9fb948>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: use location
   free(file);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: use location
  free(file);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: use location
   free(file);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: use location
  free(file);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_36 = VDEF <.MEM_35>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_36 = VDEF <.MEM_35>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (f_26 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:5: warning: use location
  if (f != NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (f_26 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:5: warning: use location
  if (f != NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_35 = VDEF <.MEM_34>
_28 = ferror (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:6: warning: use location
  if (ferror(f)) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_35 = VDEF <.MEM_34>
_28 = ferror (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:6: warning: use location
  if (ferror(f)) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (_28 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:5: warning: use location
  if (ferror(f)) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (_28 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:5: warning: use location
  if (ferror(f)) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f772aa0d2d0
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa09d80 f>
    def_stmt f_26 = fopen (file_25, "rb");
    version 26
    ptr-info 0x7f772a9fb948>
# .MEM_34 = VDEF <.MEM_33>
f_26 = fopen (file_25, "rb");

 ================== trace ptable================== 
trace fucntion name:fopen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---fopen-----
this other function ------fopen-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
bb index := 6
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
bb index := 6
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: use location
  free(file);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);
bb index := 5
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);
bb index := 5
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================
_29 = __printf_chk (1, "%s: read error", file_25);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d2d0
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa09d80 f>
    def_stmt f_26 = fopen (file_25, "rb");
    version 26
    ptr-info 0x7f772a9fb948>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
bb index := 3
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
bb index := 3
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: use location
   free(file);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_27 = __printf_chk (1, "%s", file_25);
bb index := 3
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_40 = VDEF <.MEM_34>
_27 = __printf_chk (1, "%s", file_25);
bb index := 3
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 19

======================================================================
_27 = __printf_chk (1, "%s", file_25);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d2d0
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa09d80 f>
    def_stmt f_26 = fopen (file_25, "rb");
    version 26
    ptr-info 0x7f772a9fb948>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:2 
f_26 = fopen (file_25, "rb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:101:4: warning: use location
  f = fopen(file, "rb");
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d2d0
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa09d80 f>
    def_stmt f_26 = fopen (file_25, "rb");
    version 26
    ptr-info 0x7f772a9fb948>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
bb index := 7
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
bb index := 7
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 19

======================================================================

 Expand conflict 
 The same function may have multiple branches :fclose
# .MEM_36 = VDEF <.MEM_35>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:2: warning: use location
  fclose(f);
  ^
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:3: warning: use location
   fclose(f);
   ^
=======================Path Constaint===========================

succs:= 5
if (f_26 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:5: warning: use location
  if (f != NULL)
     ^
	relate logic:= 1
succs:= 4
if (_28 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:5: warning: use location
  if (ferror(f)) {
     ^
	relate logic:= 0
succs:= 2
if (f_26 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:5: warning: use location
  if (f == NULL) {
     ^
	relate logic:= 1
=======================Path Constaint===========================


======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
fclose (f_26);
bb index := 6
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_36 = VDEF <.MEM_35>
fclose (f_26);
bb index := 6
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 19

======================================================================
# .MEM_36 = VDEF <.MEM_35>
fclose (f_26);
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:2: warning: use location
  fclose(f);
  ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d2d0
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa09d80 f>
    def_stmt f_26 = fopen (file_25, "rb");
    version 26
    ptr-info 0x7f772a9fb948>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_26 != 0B)
bb index := 5
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_26 != 0B)
bb index := 5
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_26 != 0B)
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (f_26 != 0B)
bb index := 5
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 19

======================================================================
if (f_26 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:5: warning: use location
  if (f != NULL)
     ^
if (f_26 != 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:5: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_28 = ferror (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:6: warning: use location
  if (ferror(f)) {
      ^
this stmt is child function---ferror-----

 ================== trace ================== 
 <ssa_name 0x7f772aa0d2d0
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa09d80 f>
    def_stmt f_26 = fopen (file_25, "rb");
    version 26
    ptr-info 0x7f772a9fb948>
trace fucntion name:ferror 

 ================== trace ================== 
trace fucntion free:2 
if (_28 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:5: warning: use location
  if (ferror(f)) {
     ^
if (_28 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:5: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f772aa0d2d0
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa09d80 f>
    def_stmt f_26 = fopen (file_25, "rb");
    version 26
    ptr-info 0x7f772a9fb948>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: use location
   free(file);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: use location
  free(file);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: use location
   free(file);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: use location
  free(file);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
# .MEM_38 = VDEF <.MEM_35>
_29 = __printf_chk (1, "%s: read error", file_25);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_39 = VDEF <.MEM_38>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:125:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_36 = VDEF <.MEM_35>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_36 = VDEF <.MEM_35>
fclose (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:117:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (f_26 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:5: warning: use location
  if (f != NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (f_26 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:5: warning: use location
  if (f != NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_35 = VDEF <.MEM_34>
_28 = ferror (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:6: warning: use location
  if (ferror(f)) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_35 = VDEF <.MEM_34>
_28 = ferror (f_26);
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:6: warning: use location
  if (ferror(f)) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (_28 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:5: warning: use location
  if (ferror(f)) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (_28 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:5: warning: use location
  if (ferror(f)) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f772aa04708
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02bd0 path>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f772a9fb858>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================
_9 = strcmp (path_8(D), "-");
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:6: warning: use location
  if (strcmp(path, "-") == 0) {
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f772aa04708
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02bd0 path>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f772a9fb858>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================
if (_9 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:5: warning: use location
  if (strcmp(path, "-") == 0) {
     ^
if (_9 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:5: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
file_13 = server_client_get_path (c_7, path_8(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:7: warning: use location
  file = server_client_get_path(c, path);
       ^
this stmt is child function---server_client_get_path-----

 ================== trace ================== 
 <ssa_name 0x7f772aa04708
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02bd0 path>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f772a9fb858>
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
[40;36m ======= node_fun:server_client_get_path========= [0m
[40;36m ======= find relate stmt with path ========= [0m
[40;36m ======= relate stmt argument:path ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__realpath_chk========= [0m
[40;46m =======add node_fun stack:__realpath_chk========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
bb index := 16
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
bb index := 16
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: use location
  free(file);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);
bb index := 15
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);
bb index := 15
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
_19 = __printf_chk (1, "%s: write error", file_13);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aa04708
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02bd0 path>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f772a9fb858>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
bb index := 13
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
bb index := 13
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 19

======================================================================
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: use location
   free(file);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_44>
_15 = __printf_chk (1, "%s", file_13);
bb index := 13
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_44>
_15 = __printf_chk (1, "%s", file_13);
bb index := 13
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 19

======================================================================
_15 = __printf_chk (1, "%s", file_13);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aa04708
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02bd0 path>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f772a9fb858>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:2 
f_14 = fopen (file_13, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:4: warning: use location
  f = fopen(file, flags);
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f772aa04708
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02bd0 path>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f772a9fb858>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
bb index := 16
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
bb index := 16
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f772aa04708
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02bd0 path>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f772a9fb858>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
bb index := 15
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
bb index := 15
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f772aa04708
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02bd0 path>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f772a9fb858>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^
this stmt is child function---fwrite-----

 ================== trace ================== 
 <ssa_name 0x7f772aa04708
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02bd0 path>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f772a9fb858>
trace fucntion name:fwrite 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^
if (bufsize_17(D) > 2499)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
  if (f == NULL) {
     ^
if (f_14 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
Cond in fucntion main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== possible direct basic block ================= 
from main basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = c_7->flags;
bb index := 11
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = c_7->flags;
bb index := 11
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = c_7->flags;
bb index := 11
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = c_7->flags;
bb index := 11
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = c_7->flags;
bb index := 11
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = c_7->flags;
bb index := 11
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================
_11 = c_7->flags;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:31: warning: use location
   if (c->session == NULL || (c->flags & CLIENT_CONTROL))
                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_10 = c_7->session;
bb index := 10
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_10 = c_7->session;
bb index := 10
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_10 = c_7->session;
bb index := 10
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_10 = c_7->session;
bb index := 10
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_10 = c_7->session;
bb index := 10
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_10 = c_7->session;
bb index := 10
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================
_10 = c_7->session;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:8: warning: use location
   if (c->session == NULL || (c->flags & CLIENT_CONTROL))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0B)
bb index := 10
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0B)
bb index := 10
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0B)
bb index := 10
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0B)
bb index := 10
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0B)
bb index := 10
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0B)
bb index := 10
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================
if (_10 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:6: warning: use location
   if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      ^
if (_10 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:6: warning: use location
Cond in fucntion main basic block 10
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_7 == 0B)
bb index := 9
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_7 == 0B)
bb index := 9
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_7 == 0B)
bb index := 9
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_7 == 0B)
bb index := 9
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 19

======================================================================
if (c_7 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:6: warning: use location
   if (c == NULL) {
      ^
if (c_7 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:6: warning: use location
Cond in fucntion main basic block 9
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f772aa04708
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02bd0 path>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7f772a9fb858>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_45 = VDEF <.MEM_44>
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: Use after free error!: free location 
  free(file);
  ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f772aa046c0
    type <pointer_type 0x7f772a9e1150
        type <record_type 0x7f772a9e11f8 client BLK
            size <integer_cst 0x7f772a9c88a0 constant 6336>
            unit size <integer_cst 0x7f772a9c87f8 constant 792>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9e11f8 fields <field_decl 0x7f772a9e9260 name> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9e1150> chain <type_decl 0x7f772a9e92f8 D.4431>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f772a9e1348>>
    var <var_decl 0x7f772aa02b40 c>
    def_stmt c_7 = item.client;
    version 7
    ptr-info 0x7f772a9fb840>
# VUSE <.MEM_31>
c_7 = item.client;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
file_13 = server_client_get_path (c_7, path_8(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:7: warning: use location
  file = server_client_get_path(c, path);
       ^
this stmt is child function---server_client_get_path-----

 ================== trace ================== 
 <ssa_name 0x7f772aa046c0
    type <pointer_type 0x7f772a9e1150
        type <record_type 0x7f772a9e11f8 client BLK
            size <integer_cst 0x7f772a9c88a0 constant 6336>
            unit size <integer_cst 0x7f772a9c87f8 constant 792>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9e11f8 fields <field_decl 0x7f772a9e9260 name> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9e1150> chain <type_decl 0x7f772a9e92f8 D.4431>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f772a9e1348>>
    var <var_decl 0x7f772aa02b40 c>
    def_stmt c_7 = item.client;
    version 7
    ptr-info 0x7f772a9fb840>
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
[40;36m ======= node_fun:server_client_get_path========= [0m
[40;36m ======= find relate stmt with c ========= [0m
[40;36m ======= relate stmt argument:c ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__realpath_chk========= [0m
[40;46m =======add node_fun stack:__realpath_chk========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
bb index := 16
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
bb index := 16
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: use location
  free(file);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);
bb index := 15
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);
bb index := 15
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
_19 = __printf_chk (1, "%s: write error", file_13);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aa046c0
    type <pointer_type 0x7f772a9e1150
        type <record_type 0x7f772a9e11f8 client BLK
            size <integer_cst 0x7f772a9c88a0 constant 6336>
            unit size <integer_cst 0x7f772a9c87f8 constant 792>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9e11f8 fields <field_decl 0x7f772a9e9260 name> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9e1150> chain <type_decl 0x7f772a9e92f8 D.4431>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f772a9e1348>>
    var <var_decl 0x7f772aa02b40 c>
    def_stmt c_7 = item.client;
    version 7
    ptr-info 0x7f772a9fb840>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
bb index := 13
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
bb index := 13
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 19

======================================================================
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: use location
   free(file);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_44>
_15 = __printf_chk (1, "%s", file_13);
bb index := 13
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_44>
_15 = __printf_chk (1, "%s", file_13);
bb index := 13
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 19

======================================================================
_15 = __printf_chk (1, "%s", file_13);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aa046c0
    type <pointer_type 0x7f772a9e1150
        type <record_type 0x7f772a9e11f8 client BLK
            size <integer_cst 0x7f772a9c88a0 constant 6336>
            unit size <integer_cst 0x7f772a9c87f8 constant 792>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9e11f8 fields <field_decl 0x7f772a9e9260 name> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9e1150> chain <type_decl 0x7f772a9e92f8 D.4431>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f772a9e1348>>
    var <var_decl 0x7f772aa02b40 c>
    def_stmt c_7 = item.client;
    version 7
    ptr-info 0x7f772a9fb840>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:2 
f_14 = fopen (file_13, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:4: warning: use location
  f = fopen(file, flags);
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f772aa046c0
    type <pointer_type 0x7f772a9e1150
        type <record_type 0x7f772a9e11f8 client BLK
            size <integer_cst 0x7f772a9c88a0 constant 6336>
            unit size <integer_cst 0x7f772a9c87f8 constant 792>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9e11f8 fields <field_decl 0x7f772a9e9260 name> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9e1150> chain <type_decl 0x7f772a9e92f8 D.4431>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f772a9e1348>>
    var <var_decl 0x7f772aa02b40 c>
    def_stmt c_7 = item.client;
    version 7
    ptr-info 0x7f772a9fb840>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
bb index := 16
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
bb index := 16
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f772aa046c0
    type <pointer_type 0x7f772a9e1150
        type <record_type 0x7f772a9e11f8 client BLK
            size <integer_cst 0x7f772a9c88a0 constant 6336>
            unit size <integer_cst 0x7f772a9c87f8 constant 792>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9e11f8 fields <field_decl 0x7f772a9e9260 name> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9e1150> chain <type_decl 0x7f772a9e92f8 D.4431>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f772a9e1348>>
    var <var_decl 0x7f772aa02b40 c>
    def_stmt c_7 = item.client;
    version 7
    ptr-info 0x7f772a9fb840>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
bb index := 15
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
bb index := 15
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f772aa046c0
    type <pointer_type 0x7f772a9e1150
        type <record_type 0x7f772a9e11f8 client BLK
            size <integer_cst 0x7f772a9c88a0 constant 6336>
            unit size <integer_cst 0x7f772a9c87f8 constant 792>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9e11f8 fields <field_decl 0x7f772a9e9260 name> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9e1150> chain <type_decl 0x7f772a9e92f8 D.4431>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f772a9e1348>>
    var <var_decl 0x7f772aa02b40 c>
    def_stmt c_7 = item.client;
    version 7
    ptr-info 0x7f772a9fb840>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^
this stmt is child function---fwrite-----

 ================== trace ================== 
 <ssa_name 0x7f772aa046c0
    type <pointer_type 0x7f772a9e1150
        type <record_type 0x7f772a9e11f8 client BLK
            size <integer_cst 0x7f772a9c88a0 constant 6336>
            unit size <integer_cst 0x7f772a9c87f8 constant 792>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9e11f8 fields <field_decl 0x7f772a9e9260 name> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9e1150> chain <type_decl 0x7f772a9e92f8 D.4431>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f772a9e1348>>
    var <var_decl 0x7f772aa02b40 c>
    def_stmt c_7 = item.client;
    version 7
    ptr-info 0x7f772a9fb840>
trace fucntion name:fwrite 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^
if (bufsize_17(D) > 2499)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
  if (f == NULL) {
     ^
if (f_14 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
Cond in fucntion main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== possible direct basic block ================= 
from main basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================
_9 = strcmp (path_8(D), "-");
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:6: warning: use location
  if (strcmp(path, "-") == 0) {
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f772aa046c0
    type <pointer_type 0x7f772a9e1150
        type <record_type 0x7f772a9e11f8 client BLK
            size <integer_cst 0x7f772a9c88a0 constant 6336>
            unit size <integer_cst 0x7f772a9c87f8 constant 792>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9e11f8 fields <field_decl 0x7f772a9e9260 name> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9e1150> chain <type_decl 0x7f772a9e92f8 D.4431>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f772a9e1348>>
    var <var_decl 0x7f772aa02b40 c>
    def_stmt c_7 = item.client;
    version 7
    ptr-info 0x7f772a9fb840>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================
if (_9 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:5: warning: use location
  if (strcmp(path, "-") == 0) {
     ^
if (_9 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:5: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = c_7->flags;
bb index := 11
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = c_7->flags;
bb index := 11
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = c_7->flags;
bb index := 11
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = c_7->flags;
bb index := 11
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = c_7->flags;
bb index := 11
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = c_7->flags;
bb index := 11
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================
_11 = c_7->flags;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:31: warning: use location
   if (c->session == NULL || (c->flags & CLIENT_CONTROL))
                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_10 = c_7->session;
bb index := 10
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_10 = c_7->session;
bb index := 10
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_10 = c_7->session;
bb index := 10
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_10 = c_7->session;
bb index := 10
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_10 = c_7->session;
bb index := 10
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_10 = c_7->session;
bb index := 10
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================
_10 = c_7->session;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:8: warning: use location
   if (c->session == NULL || (c->flags & CLIENT_CONTROL))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0B)
bb index := 10
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0B)
bb index := 10
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0B)
bb index := 10
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0B)
bb index := 10
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0B)
bb index := 10
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0B)
bb index := 10
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================
if (_10 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:6: warning: use location
   if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      ^
if (_10 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:6: warning: use location
Cond in fucntion main basic block 10
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_7 == 0B)
bb index := 9
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_7 == 0B)
bb index := 9
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_7 == 0B)
bb index := 9
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_7 == 0B)
bb index := 9
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 19

======================================================================
if (c_7 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:6: warning: use location
   if (c == NULL) {
      ^
if (c_7 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:6: warning: use location
Cond in fucntion main basic block 9
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f772aa046c0
    type <pointer_type 0x7f772a9e1150
        type <record_type 0x7f772a9e11f8 client BLK
            size <integer_cst 0x7f772a9c88a0 constant 6336>
            unit size <integer_cst 0x7f772a9c87f8 constant 792>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9e11f8 fields <field_decl 0x7f772a9e9260 name> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9e1150> chain <type_decl 0x7f772a9e92f8 D.4431>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f772a9e1348>>
    var <var_decl 0x7f772aa02b40 c>
    def_stmt c_7 = item.client;
    version 7
    ptr-info 0x7f772a9fb840>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_45 = VDEF <.MEM_44>
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: Use after free error!: free location 
  free(file);
  ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f772aa04870
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772aa02cf0 file>
    def_stmt file_13 = server_client_get_path (c_7, path_8(D));
    version 13
    ptr-info 0x7f772a9fb888>
# .MEM_43 = VDEF <.MEM_31>
file_13 = server_client_get_path (c_7, path_8(D));

 ================== trace ptable================== 
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :-100========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__realpath_chk========= [0m
[40;46m =======add node_fun stack:__realpath_chk========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---server_client_get_path-----
this other function ------server_client_get_path-----
 
 Start check Pointer Collect  

======================================================================
file_13 = server_client_get_path (c_7, path_8(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:7: warning: use location
  file = server_client_get_path(c, path);
       ^
this stmt is child function---server_client_get_path-----

 ================== trace ================== 
 <ssa_name 0x7f772aa04870
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772aa02cf0 file>
    def_stmt file_13 = server_client_get_path (c_7, path_8(D));
    version 13
    ptr-info 0x7f772a9fb888>
trace fucntion name:server_client_get_path 
[40;44m =======trace_function_path server_client_get_path  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_21>
free (path_2);
./benchmarks/tmux/leak_3/tmux_leak_3.c:80:2: warning: use location
  free(path);
  ^
[40;36m ======= node_fun:server_client_get_path========= [0m
[40;36m ======= find relate stmt with file ========= [0m
[40;36m ======= relate stmt argument:file ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__realpath_chk========= [0m
[40;46m =======add node_fun stack:__realpath_chk========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
bb index := 16
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
bb index := 16
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: use location
  free(file);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);
bb index := 15
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);
bb index := 15
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
_19 = __printf_chk (1, "%s: write error", file_13);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aa04870
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772aa02cf0 file>
    def_stmt file_13 = server_client_get_path (c_7, path_8(D));
    version 13
    ptr-info 0x7f772a9fb888>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
bb index := 13
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
bb index := 13
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 19

======================================================================
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: use location
   free(file);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_44>
_15 = __printf_chk (1, "%s", file_13);
bb index := 13
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_44>
_15 = __printf_chk (1, "%s", file_13);
bb index := 13
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 19

======================================================================
_15 = __printf_chk (1, "%s", file_13);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aa04870
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772aa02cf0 file>
    def_stmt file_13 = server_client_get_path (c_7, path_8(D));
    version 13
    ptr-info 0x7f772a9fb888>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:3 
f_14 = fopen (file_13, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:4: warning: use location
  f = fopen(file, flags);
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f772aa04870
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772aa02cf0 file>
    def_stmt file_13 = server_client_get_path (c_7, path_8(D));
    version 13
    ptr-info 0x7f772a9fb888>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
bb index := 16
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
bb index := 16
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f772aa04870
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772aa02cf0 file>
    def_stmt file_13 = server_client_get_path (c_7, path_8(D));
    version 13
    ptr-info 0x7f772a9fb888>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
bb index := 15
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
bb index := 15
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f772aa04870
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772aa02cf0 file>
    def_stmt file_13 = server_client_get_path (c_7, path_8(D));
    version 13
    ptr-info 0x7f772a9fb888>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:3 
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^
this stmt is child function---fwrite-----

 ================== trace ================== 
 <ssa_name 0x7f772aa04870
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772aa02cf0 file>
    def_stmt file_13 = server_client_get_path (c_7, path_8(D));
    version 13
    ptr-info 0x7f772a9fb888>
trace fucntion name:fwrite 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^
if (bufsize_17(D) > 2499)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
  if (f == NULL) {
     ^
if (f_14 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
Cond in fucntion main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== possible direct basic block ================= 
from main basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================
_9 = strcmp (path_8(D), "-");
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:6: warning: use location
  if (strcmp(path, "-") == 0) {
      ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f772aa04870
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772aa02cf0 file>
    def_stmt file_13 = server_client_get_path (c_7, path_8(D));
    version 13
    ptr-info 0x7f772a9fb888>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 == 0)
bb index := 8
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 19

======================================================================
if (_9 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:5: warning: use location
  if (strcmp(path, "-") == 0) {
     ^
if (_9 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:5: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = c_7->flags;
bb index := 11
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = c_7->flags;
bb index := 11
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = c_7->flags;
bb index := 11
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = c_7->flags;
bb index := 11
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = c_7->flags;
bb index := 11
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = c_7->flags;
bb index := 11
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 19

======================================================================
_11 = c_7->flags;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:31: warning: use location
   if (c->session == NULL || (c->flags & CLIENT_CONTROL))
                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_10 = c_7->session;
bb index := 10
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_10 = c_7->session;
bb index := 10
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_10 = c_7->session;
bb index := 10
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_10 = c_7->session;
bb index := 10
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_10 = c_7->session;
bb index := 10
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_10 = c_7->session;
bb index := 10
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================
_10 = c_7->session;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:8: warning: use location
   if (c->session == NULL || (c->flags & CLIENT_CONTROL))
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0B)
bb index := 10
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0B)
bb index := 10
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0B)
bb index := 10
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0B)
bb index := 10
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0B)
bb index := 10
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0B)
bb index := 10
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 19

======================================================================
if (_10 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:6: warning: use location
   if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      ^
if (_10 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:6: warning: use location
Cond in fucntion main basic block 10
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_7 == 0B)
bb index := 9
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_7 == 0B)
bb index := 9
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_7 == 0B)
bb index := 9
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (c_7 == 0B)
bb index := 9
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 19

======================================================================
if (c_7 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:6: warning: use location
   if (c == NULL) {
      ^
if (c_7 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:6: warning: use location
Cond in fucntion main basic block 9
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f772aa04870
    type <pointer_type 0x7f772a9c5930
        type <integer_type 0x7f772a9c5888 char public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5930>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
        pointer_to_this <pointer_type 0x7f772a9d1000>>
    var <var_decl 0x7f772aa02cf0 file>
    def_stmt file_13 = server_client_get_path (c_7, path_8(D));
    version 13
    ptr-info 0x7f772a9fb888>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: use location
   free(file);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: use location
  free(file);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: use location
   free(file);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: use location
  free(file);
  ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_43 = VDEF <.MEM_31>
file_13 = server_client_get_path (c_7, path_8(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:7: warning: use location
  file = server_client_get_path(c, path);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_43 = VDEF <.MEM_31>
file_13 = server_client_get_path (c_7, path_8(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:7: warning: use location
  file = server_client_get_path(c, path);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_31>
file_13 = server_client_get_path (c_7, path_8(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:7: warning: Use after free error!: free location 
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: use location
  free(file);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_31>
file_13 = server_client_get_path (c_7, path_8(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:7: warning: Use after free error!: free location 
  file = server_client_get_path(c, path);
       ^
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_31>
file_13 = server_client_get_path (c_7, path_8(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:7: warning: Use after free error!: free location 
  file = server_client_get_path(c, path);
       ^
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: use location
   free(file);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_31>
file_13 = server_client_get_path (c_7, path_8(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:7: warning: Use after free error!: free location 
  file = server_client_get_path(c, path);
       ^
# .MEM_50 = VDEF <.MEM_44>
_15 = __printf_chk (1, "%s", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_50 = VDEF <.MEM_44>
_15 = __printf_chk (1, "%s", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_50 = VDEF <.MEM_44>
_15 = __printf_chk (1, "%s", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_31>
file_13 = server_client_get_path (c_7, path_8(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:7: warning: Use after free error!: free location 
  file = server_client_get_path(c, path);
       ^
# .MEM_44 = VDEF <.MEM_43>
f_14 = fopen (file_13, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:4: warning: use location
  f = fopen(file, flags);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_44 = VDEF <.MEM_43>
f_14 = fopen (file_13, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:4: warning: use location
  f = fopen(file, flags);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_44 = VDEF <.MEM_43>
f_14 = fopen (file_13, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:4: warning: use location
  f = fopen(file, flags);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_31>
file_13 = server_client_get_path (c_7, path_8(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:7: warning: Use after free error!: free location 
  file = server_client_get_path(c, path);
       ^
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_31>
file_13 = server_client_get_path (c_7, path_8(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:7: warning: Use after free error!: free location 
  file = server_client_get_path(c, path);
       ^
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_31>
file_13 = server_client_get_path (c_7, path_8(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:7: warning: Use after free error!: free location 
  file = server_client_get_path(c, path);
       ^
# .MEM_45 = VDEF <.MEM_44>
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_45 = VDEF <.MEM_44>
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_45 = VDEF <.MEM_44>
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_45 = VDEF <.MEM_44>
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_45 = VDEF <.MEM_44>
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_31>
file_13 = server_client_get_path (c_7, path_8(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:7: warning: Use after free error!: free location 
  file = server_client_get_path(c, path);
       ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: Use after free error!: free location 
  free(file);
  ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: Use after free error!: free location 
  free(file);
  ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_31>
file_13 = server_client_get_path (c_7, path_8(D));
./benchmarks/tmux/leak_3/tmux_leak_3.c:153:7: warning: Use after free error!: free location 
  file = server_client_get_path(c, path);
       ^
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
  if (f == NULL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
  if (f == NULL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
  if (f == NULL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:6: warning: use location
  if (strcmp(path, "-") == 0) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# VUSE <.MEM_31>
_9 = strcmp (path_8(D), "-");
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:6: warning: use location
  if (strcmp(path, "-") == 0) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (_9 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:5: warning: use location
  if (strcmp(path, "-") == 0) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
if (_9 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:5: warning: use location
  if (strcmp(path, "-") == 0) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# VUSE <.MEM_31>
_11 = c_7->flags;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:31: warning: use location
   if (c->session == NULL || (c->flags & CLIENT_CONTROL))
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# VUSE <.MEM_31>
_11 = c_7->flags;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:31: warning: use location
   if (c->session == NULL || (c->flags & CLIENT_CONTROL))
                               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# VUSE <.MEM_31>
_10 = c_7->session;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:8: warning: use location
   if (c->session == NULL || (c->flags & CLIENT_CONTROL))
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# VUSE <.MEM_31>
_10 = c_7->session;
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:8: warning: use location
   if (c->session == NULL || (c->flags & CLIENT_CONTROL))
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (_10 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:6: warning: use location
   if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
if (_10 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:146:6: warning: use location
   if (c->session == NULL || (c->flags & CLIENT_CONTROL))
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (c_7 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:6: warning: use location
   if (c == NULL) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
if (c_7 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:143:6: warning: use location
   if (c == NULL) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f772aa04948
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02c60 bufdata>
    def_stmt GIMPLE_NOP
    version 16
    ptr-info 0x7f772a9fb8b8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^
this stmt is child function---fwrite-----

 ================== trace ================== 
 <ssa_name 0x7f772aa04948
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02c60 bufdata>
    def_stmt GIMPLE_NOP
    version 16
    ptr-info 0x7f772a9fb8b8>
trace fucntion name:fwrite 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^
if (bufsize_17(D) > 2499)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
bb index := 16
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
bb index := 16
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f772aa04948
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02c60 bufdata>
    def_stmt GIMPLE_NOP
    version 16
    ptr-info 0x7f772a9fb8b8>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
bb index := 15
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
bb index := 15
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f772aa04948
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02c60 bufdata>
    def_stmt GIMPLE_NOP
    version 16
    ptr-info 0x7f772a9fb8b8>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:0 
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
  if (f == NULL) {
     ^
if (f_14 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
Cond in fucntion main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== possible direct basic block ================= 
from main basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f772aa04948
    type <pointer_type 0x7f772a9c5d20
        type <integer_type 0x7f772a9c5c78 char readonly public string-flag QI
            size <integer_cst 0x7f772ae9bcd8 constant 8>
            unit size <integer_cst 0x7f772ae9bcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f772aeaf3f0 precision 8 min <integer_cst 0x7f772a9c8270 -128> max <integer_cst 0x7f772a9c8258 127> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9c5d20>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02c60 bufdata>
    def_stmt GIMPLE_NOP
    version 16
    ptr-info 0x7f772a9fb8b8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f772aa048b8
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02e10 f>
    def_stmt f_14 = fopen (file_13, "wb");
    version 14
    ptr-info 0x7f772a9fb8a0>
# .MEM_44 = VDEF <.MEM_43>
f_14 = fopen (file_13, "wb");

 ================== trace ptable================== 
trace fucntion name:fopen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---fopen-----
this other function ------fopen-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
bb index := 16
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
bb index := 16
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: use location
  free(file);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);
bb index := 15
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);
bb index := 15
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
_19 = __printf_chk (1, "%s: write error", file_13);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aa048b8
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02e10 f>
    def_stmt f_14 = fopen (file_13, "wb");
    version 14
    ptr-info 0x7f772a9fb8a0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
bb index := 13
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
bb index := 13
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 19

======================================================================
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: use location
   free(file);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_44>
_15 = __printf_chk (1, "%s", file_13);
bb index := 13
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_44>
_15 = __printf_chk (1, "%s", file_13);
bb index := 13
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 19

======================================================================
_15 = __printf_chk (1, "%s", file_13);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aa048b8
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02e10 f>
    def_stmt f_14 = fopen (file_13, "wb");
    version 14
    ptr-info 0x7f772a9fb8a0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:2 
f_14 = fopen (file_13, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:4: warning: use location
  f = fopen(file, flags);
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f772aa048b8
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02e10 f>
    def_stmt f_14 = fopen (file_13, "wb");
    version 14
    ptr-info 0x7f772a9fb8a0>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
bb index := 16
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
bb index := 16
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================

 Expand conflict 
 The same function may have multiple branches :fclose
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^
=======================Path Constaint===========================

=succs:= 14
if (bufsize_17(D) != _18)
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:5: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
     ^
	relate logic:= 0
=succs:= 12
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
  if (f == NULL) {
     ^
	relate logic:= 0
=succs:= 8
if (_9 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:5: warning: use location
  if (strcmp(path, "-") == 0) {
     ^
	relate logic:= 0
=succs:= 5
if (f_26 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:5: warning: use location
  if (f != NULL)
     ^
	relate logic:= 1
=succs:= 4
if (_28 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:5: warning: use location
  if (ferror(f)) {
     ^
	relate logic:= 0
=succs:= 2
if (f_26 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:5: warning: use location
  if (f == NULL) {
     ^
	relate logic:= 1
=======================Path Constaint===========================


======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
bb index := 15
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
bb index := 15
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f772aa048b8
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02e10 f>
    def_stmt f_14 = fopen (file_13, "wb");
    version 14
    ptr-info 0x7f772a9fb8a0>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^
this stmt is child function---fwrite-----

 ================== trace ================== 
 <ssa_name 0x7f772aa048b8
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02e10 f>
    def_stmt f_14 = fopen (file_13, "wb");
    version 14
    ptr-info 0x7f772a9fb8a0>
trace fucntion name:fwrite 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^
if (bufsize_17(D) > 2499)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
  if (f == NULL) {
     ^
if (f_14 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
Cond in fucntion main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== possible direct basic block ================= 
from main basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f772aa048b8
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02e10 f>
    def_stmt f_14 = fopen (file_13, "wb");
    version 14
    ptr-info 0x7f772a9fb8a0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: use location
   free(file);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: use location
  free(file);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: use location
   free(file);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: use location
  free(file);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_50 = VDEF <.MEM_44>
_15 = __printf_chk (1, "%s", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_50 = VDEF <.MEM_44>
_15 = __printf_chk (1, "%s", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_44 = VDEF <.MEM_43>
f_14 = fopen (file_13, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:4: warning: use location
  f = fopen(file, flags);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_44 = VDEF <.MEM_43>
f_14 = fopen (file_13, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:4: warning: use location
  f = fopen(file, flags);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_45 = VDEF <.MEM_44>
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_45 = VDEF <.MEM_44>
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_45 = VDEF <.MEM_44>
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_45 = VDEF <.MEM_44>
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: Use after free error!: free location 
  free(file);
  ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: Use after free error!: free location 
  free(file);
  ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
  if (f == NULL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
  if (f == NULL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f772aa048b8
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02e10 f>
    def_stmt f_14 = fopen (file_13, "wb");
    version 14
    ptr-info 0x7f772a9fb8a0>
# .MEM_44 = VDEF <.MEM_43>
f_14 = fopen (file_13, "wb");

 ================== trace ptable================== 
trace fucntion name:fopen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---fopen-----
this other function ------fopen-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
bb index := 16
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
bb index := 16
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: use location
  free(file);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);
bb index := 15
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);
bb index := 15
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================
_19 = __printf_chk (1, "%s: write error", file_13);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aa048b8
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02e10 f>
    def_stmt f_14 = fopen (file_13, "wb");
    version 14
    ptr-info 0x7f772a9fb8a0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
bb index := 13
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
bb index := 13
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 19

======================================================================
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: use location
   free(file);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_44>
_15 = __printf_chk (1, "%s", file_13);
bb index := 13
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_44>
_15 = __printf_chk (1, "%s", file_13);
bb index := 13
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 19

======================================================================
_15 = __printf_chk (1, "%s", file_13);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f772aa048b8
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02e10 f>
    def_stmt f_14 = fopen (file_13, "wb");
    version 14
    ptr-info 0x7f772a9fb8a0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:2 
f_14 = fopen (file_13, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:4: warning: use location
  f = fopen(file, flags);
    ^
this stmt is child function---fopen-----

 ================== trace ================== 
 <ssa_name 0x7f772aa048b8
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02e10 f>
    def_stmt f_14 = fopen (file_13, "wb");
    version 14
    ptr-info 0x7f772a9fb8a0>
trace fucntion name:fopen 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
bb index := 16
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
bb index := 16
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 19

======================================================================
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^
this stmt is child function---fclose-----

 ================== trace ================== 
 <ssa_name 0x7f772aa048b8
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02e10 f>
    def_stmt f_14 = fopen (file_13, "wb");
    version 14
    ptr-info 0x7f772a9fb8a0>
trace fucntion name:fclose 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
bb index := 15
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
bb index := 15
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 15 ,possiable got to succ := 19

======================================================================

 Expand conflict 
 The same function may have multiple branches :fclose
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^
=======================Path Constaint===========================

succs:= 14
if (bufsize_17(D) != _18)
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:5: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
     ^
	relate logic:= 1
succs:= 12
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
  if (f == NULL) {
     ^
	relate logic:= 0
succs:= 8
if (_9 == 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:142:5: warning: use location
  if (strcmp(path, "-") == 0) {
     ^
	relate logic:= 0
succs:= 5
if (f_26 != 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:124:5: warning: use location
  if (f != NULL)
     ^
	relate logic:= 1
succs:= 4
if (_28 != 0)
./benchmarks/tmux/leak_3/tmux_leak_3.c:110:5: warning: use location
  if (ferror(f)) {
     ^
	relate logic:= 0
succs:= 2
if (f_26 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:102:5: warning: use location
  if (f == NULL) {
     ^
	relate logic:= 1
=======================Path Constaint===========================

_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^
this stmt is child function---fwrite-----

 ================== trace ================== 
 <ssa_name 0x7f772aa048b8
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02e10 f>
    def_stmt f_14 = fopen (file_13, "wb");
    version 14
    ptr-info 0x7f772a9fb8a0>
trace fucntion name:fwrite 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_24>
return _3;
lto1: warning: use location
beacuse in succ := 7 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (bufsize_17(D) > 2499)
bb index := 17
# VUSE <.MEM_5>
return 0;
lto1: warning: use location
beacuse in succ := 19 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 19

======================================================================
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^
if (bufsize_17(D) > 2499)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 19
 ================== possible direct basic block ================= 
from main basic block 18
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
  if (f == NULL) {
     ^
if (f_14 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
Cond in fucntion main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== possible direct basic block ================= 
from main basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f772aa048b8
    type <pointer_type 0x7f772a9ecd20
        type <record_type 0x7f772a9ecc78 FILE BLK
            size <integer_cst 0x7f772a9c8978 constant 1728>
            unit size <integer_cst 0x7f772a9c89f0 constant 216>
            align 64 symtab 0 alias set -1 canonical type 0x7f772a9ecb28 fields <field_decl 0x7f772a9ee558 _flags> context <translation_unit_decl 0x7f772aea6168 ./benchmarks/tmux/leak_3/tmux_leak_3.c>
            pointer_to_this <pointer_type 0x7f772a9ecd20> chain <type_decl 0x7f772a9ee5f0 D.4544>>
        public unsigned DI
        size <integer_cst 0x7f772ae9bbe8 constant 64>
        unit size <integer_cst 0x7f772ae9bc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f772aa02e10 f>
    def_stmt f_14 = fopen (file_13, "wb");
    version 14
    ptr-info 0x7f772a9fb8a0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: use location
   free(file);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: use location
  free(file);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: use location
   free(file);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: use location
  free(file);
  ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_48 = VDEF <.MEM_45>
_19 = __printf_chk (1, "%s: write error", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_50 = VDEF <.MEM_44>
_15 = __printf_chk (1, "%s", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_50 = VDEF <.MEM_44>
_15 = __printf_chk (1, "%s", file_13);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_44 = VDEF <.MEM_43>
f_14 = fopen (file_13, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:4: warning: use location
  f = fopen(file, flags);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_44 = VDEF <.MEM_43>
f_14 = fopen (file_13, "wb");
./benchmarks/tmux/leak_3/tmux_leak_3.c:154:4: warning: use location
  f = fopen(file, flags);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_46 = VDEF <.MEM_45>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:168:2: warning: use location
  fclose(f);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_49 = VDEF <.MEM_48>
fclose (f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:163:3: warning: use location
   fclose(f);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_45 = VDEF <.MEM_44>
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_45 = VDEF <.MEM_44>
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
# .MEM_45 = VDEF <.MEM_44>
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
# .MEM_45 = VDEF <.MEM_44>
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
./benchmarks/tmux/leak_3/tmux_leak_3.c:161:6: warning: use location
  if (fwrite(bufdata, 1, bufsize, f) != bufsize) {
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: Use after free error!: free location 
  free(file);
  ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:157:3: warning: Use after free error!: free location 
   free(file);
   ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_47 = VDEF <.MEM_46>
free (file_13);
./benchmarks/tmux/leak_3/tmux_leak_3.c:169:2: warning: Use after free error!: free location 
  free(file);
  ^
if (bufsize_17(D) > 2499)
./benchmarks/tmux/leak_3/tmux_leak_3.c:177:5: warning: use location
  if (bufsize > (INT_MAX / 4) - 1) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_41 = VDEF <.MEM_40>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:104:3: warning: Use after free error!: free location 
   free(file);
   ^
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
  if (f == NULL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_37 = VDEF <.MEM_36>
free (file_25);
./benchmarks/tmux/leak_3/tmux_leak_3.c:118:2: warning: Use after free error!: free location 
  free(file);
  ^
if (f_14 == 0B)
./benchmarks/tmux/leak_3/tmux_leak_3.c:155:5: warning: use location
  if (f == NULL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:server_client_get_path=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = *file_7(D);
if (_1 == 47)
  goto <bb 3>; [20.24%]
else
  goto <bb 4>; [79.76%]

=======is loop:0=========

 bb index 3 
<bb 3> [20.24%]:
path_10 = strdup (file_7(D));

=======is loop:0=========

 bb index 4 
<bb 4> [100.00%]:
# path_2 = PHI <path_8(D)(2), path_10(3)>
_16 = __realpath_chk (path_2, &resolved, 4096);
if (_16 == 0B)
  goto <bb 5>; [42.56%]
else
  goto <bb 6>; [57.44%]

=======is loop:0=========

 bb index 5 
<bb 5> [42.56%]:
_14 = path_2;
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [57.44%]:
free (path_2);
_13 = strdup (&resolved);

=======is loop:0=========

 bb index 7 
<bb 7> [100.00%]:
# _3 = PHI <path_2(5), _13(6)>
resolved ={v} {CLOBBER};
return _3;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
args_21 = self.args;
c_22 = item.client;
_23 = args_21->argv;
path_24 = *_23;
file_25 = server_client_get_path (c_22, path_24);
f_26 = fopen (file_25, "rb");
if (f_26 == 0B)
  goto <bb 3>; [0.87%]
else
  goto <bb 4>; [99.13%]

=======is loop:0=========

 bb index 3 
<bb 3> [0.87%]:
_27 = __printf_chk (1, "%s", file_25);
free (file_25);
goto <bb 8>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [99.13%]:
_28 = ferror (f_26);
if (_28 != 0)
  goto <bb 5>; [54.00%]
else
  goto <bb 6>; [46.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [53.53%]:
_29 = __printf_chk (1, "%s: read error", file_25);
if (f_26 != 0B)
  goto <bb 7>; [53.47%]
else
  goto <bb 8>; [46.53%]

=======is loop:0=========

 bb index 6 
<bb 6> [45.60%]:
fclose (f_26);
free (file_25);
goto <bb 8>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [28.62%]:
fclose (f_26);

=======is loop:0=========

 bb index 8 
<bb 8> [100.00%]:
# _30 = PHI <-1(3), -1(5), 0(6), -1(7)>
_42 = _30;
args_6 = self.args;
c_7 = item.client;
_9 = strcmp (path_8(D), "-");
if (_9 == 0)
  goto <bb 9>; [67.00%]
else
  goto <bb 12>; [33.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [67.00%]:
if (c_7 == 0B)
  goto <bb 19> (do_stdout); [0.87%]
else
  goto <bb 10>; [99.13%]

=======is loop:0=========

 bb index 10 
<bb 10> [66.42%]:
_10 = c_7->session;
if (_10 == 0B)
  goto <bb 19> (do_stdout); [26.74%]
else
  goto <bb 11>; [73.26%]

=======is loop:0=========

 bb index 11 
<bb 11> [48.66%]:
_11 = c_7->flags;
_12 = _11 & 8192;
if (_12 != 0)
  goto <bb 19> (do_stdout); [46.00%]
else
  goto <bb 17> (do_print); [54.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [33.00%]:
file_13 = server_client_get_path (c_7, path_8(D));
f_14 = fopen (file_13, "wb");
if (f_14 == 0B)
  goto <bb 13>; [0.87%]
else
  goto <bb 14>; [99.13%]

=======is loop:0=========

 bb index 13 
<bb 13> [0.29%]:
_15 = __printf_chk (1, "%s", file_13);
free (file_13);
goto <bb 19> (do_stdout); [100.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [32.71%]:
_18 = fwrite (bufdata_16(D), 1, bufsize_17(D), f_14);
if (bufsize_17(D) != _18)
  goto <bb 15>; [3.81%]
else
  goto <bb 16>; [96.19%]

=======is loop:0=========

 bb index 15 
<bb 15> [1.25%]:
_19 = __printf_chk (1, "%s: write error", file_13);
fclose (f_14);
goto <bb 19> (do_stdout); [100.00%]

=======is loop:0=========

 bb index 16 
<bb 16> [31.47%]:
fclose (f_14);
free (file_13);
goto <bb 19> (do_stdout); [100.00%]

=======is loop:0=========

 bb index 17 
do_print [26.27%]:
if (bufsize_17(D) > 2499)
  goto <bb 19> (do_stdout); [2.00%]
else
  goto <bb 18>; [98.00%]

=======is loop:0=========

 bb index 18 
<bb 18> [25.75%]:

=======is loop:0=========

 bb index 19 
# _20 = PHI <-1(9), 0(10), 0(11), -1(13), -1(15), 0(16), -1(17), 0(18)>
do_stdout [100.00%]:
_52 = _20;
self ={v} {CLOBBER};
item ={v} {CLOBBER};
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 12 [0m
[40;34m    used_stmt array stack totalsize of : 3360 [0m
[40;34m    collect time: : 0.000164 s [0m
[40;34m    algorithm time: 0.055494 s [0m
[40;34m    gimple stmt count : : 55 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
