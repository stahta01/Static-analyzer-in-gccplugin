../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/tmux/use_after_free_2/../tmux.h:23,
                 from ./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c:12:
./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c: In function â€˜window_removeâ€™:
./benchmarks/tmux/use_after_free_2/../array.h:65:17: warning: implicit declaration of function â€˜memmoveâ€™ [-Wimplicit-function-declaration]
   65 |                 memmove((a)->list + (i), (a)->list + (i) + 1,           \
      |                 ^~~~~~~
./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c:112:9: note: in expansion of macro â€˜ARRAY_REMOVEâ€™
  112 |         ARRAY_REMOVE(ww, i);
      |         ^~~~~~~~~~~~
./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c:13:1: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memmoveâ€™
   12 | #include "../tmux.h"
  +++ |+#include <string.h>
   13 | 
In file included from ./benchmarks/tmux/use_after_free_2/../tmux.h:23,
                 from ./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c:12:
./benchmarks/tmux/use_after_free_2/../array.h:65:17: warning: incompatible implicit declaration of built-in function â€˜memmoveâ€™ [-Wbuiltin-declaration-mismatch]
   65 |                 memmove((a)->list + (i), (a)->list + (i) + 1,           \
      |                 ^~~~~~~
./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c:112:9: note: in expansion of macro â€˜ARRAY_REMOVEâ€™
  112 |         ARRAY_REMOVE(ww, i);
      |         ^~~~~~~~~~~~
./benchmarks/tmux/use_after_free_2/../array.h:65:17: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memmoveâ€™
   65 |                 memmove((a)->list + (i), (a)->list + (i) + 1,           \
      |                 ^~~~~~~
./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c:112:9: note: in expansion of macro â€˜ARRAY_REMOVEâ€™
  112 |         ARRAY_REMOVE(ww, i);
      |         ^~~~~~~~~~~~
./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c: In function â€˜window_destroyâ€™:
./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c:125:9: warning: implicit declaration of function â€˜closeâ€™; did you mean â€˜pcloseâ€™? [-Wimplicit-function-declaration]
  125 |         close(w->fd);
      |         ^~~~~
      |         pclose
In file included from ./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c:11:
./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c: In function â€˜window_createâ€™:
./benchmarks/tmux/use_after_free_2/../stdio.h:138:20: warning: implicit declaration of function â€˜strdupâ€™ [-Wimplicit-function-declaration]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c:161:16: note: in expansion of macro â€˜xstrdupâ€™
  161 |         name = xstrdup(cmd);
      |                ^~~~~~~
./benchmarks/tmux/use_after_free_2/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™ [-Wbuiltin-declaration-mismatch]
  138 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c:161:16: note: in expansion of macro â€˜xstrdupâ€™
  161 |         name = xstrdup(cmd);
      |                ^~~~~~~
./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c:162:20: warning: implicit declaration of function â€˜strchrâ€™ [-Wimplicit-function-declaration]
  162 |         if ((ptr = strchr(name, ' ')) != NULL) {
      |                    ^~~~~~
./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c:162:20: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strchrâ€™
./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c:162:20: warning: incompatible implicit declaration of built-in function â€˜strchrâ€™ [-Wbuiltin-declaration-mismatch]
./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c:162:20: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strchrâ€™
./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c:174:9: warning: implicit declaration of function â€˜strcpyâ€™ [-Wimplicit-function-declaration]
  174 |         strcpy(w->name, name);
      |         ^~~~~~
./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c:174:9: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strcpyâ€™
./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c:174:9: warning: incompatible implicit declaration of built-in function â€˜strcpyâ€™ [-Wbuiltin-declaration-mismatch]
./benchmarks/tmux/use_after_free_2/tmux_uaf_2.c:174:9: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strcpyâ€™

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 42%)
 phase parsing                      :   0.06 ( 86%)   0.00 (  0%)   0.07 ( 88%)  1546k ( 51%)
 phase opt and generate             :   0.01 ( 14%)   0.00 (  0%)   0.01 ( 12%)   206k (  7%)
 callgraph ipa passes               :   0.01 ( 14%)   0.00 (  0%)   0.01 ( 12%)   112k (  4%)
 lto stream compression             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 12%)     0  (  0%)
 ipa free lang data                 :   0.01 ( 14%)   0.00 (  0%)   0.00 (  0%)  3976  (  0%)
 preprocessing                      :   0.00 (  0%)   0.00 (  0%)   0.01 ( 12%)   622k ( 20%)
 lexical analysis                   :   0.02 ( 29%)   0.00 (  0%)   0.01 ( 13%)     0  (  0%)
 parser (global)                    :   0.02 ( 29%)   0.00 (  0%)   0.03 ( 37%)   585k ( 19%)
 parser struct body                 :   0.01 ( 14%)   0.00 (  0%)   0.02 ( 25%)   148k (  5%)
 parser function body               :   0.01 ( 14%)   0.00 (  0%)   0.00 (  0%)    92k (  3%)
 TOTAL                              :   0.07          0.00          0.08         3061k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)  2157k ( 97%)
 TOTAL                              :   0.00          0.00          0.01         2230k
../Compiler/newplugin.so 11.2.0 
--------plugin argument-----------
contextsentive 1
debugoutput 0
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
=======node_fun:window_create=========
=======node_fun:window_add=========
=======node_fun:window_destroy=========
=======node_fun:window_remove=========
=======node_fun:window_index=========
=======node_fun:buffer_destroy=========
=======node_fun:buffer_create=========
=======node_fun:xrealloc=========
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 42 
===============The second stage : Mapping stmt=================
# .MEM_7 = VDEF <.MEM_6(D)>
w_5 = window_create ("cmd", sx_2(D), sy_3(D));
# .MEM_8 = VDEF <.MEM_7>
window_add (&windows, w_5);
# .MEM_9 = VDEF <.MEM_8>
window_remove (&windows, w_5);
# .MEM_32 = VDEF <.MEM_31(D)>
w_11 = malloc (200);
# .MEM_34 = VDEF <.MEM_33>
_1 = buffer_create (8192);
# .MEM_36 = VDEF <.MEM_35>
_2 = buffer_create (8192);
# .MEM_38 = VDEF <.MEM_37>
name_20 = strdup (cmd_18(D));
# VUSE <.MEM_38>
ptr_21 = strchr (name_20, 32);
# VUSE <.MEM_38>
ptr_23 = strchr (_5, 32);
# .MEM_41 = VDEF <.MEM_30>
strcpy (_6, name_20);
# .MEM_43 = VDEF <.MEM_42>
window_add (&windows, w_11);
# .MEM_44 = VDEF <.MEM_43(D)>
_1 = window_index (ww_37(D), 0B, &i);
# .MEM_56 = VDEF <.MEM_44>
printf ("number too big%s", "");
# .MEM_54 = VDEF <.MEM_44>
printf ("size too big%s", "");
# .MEM_47 = VDEF <.MEM_46>
_9 = xrealloc (_8, 1, _7);
# .MEM_51 = VDEF <.MEM_42>
_12 = xrealloc (_11, 2, _10);
# .MEM_7 = VDEF <.MEM_6(D)>
close (_1);
# .MEM_8 = VDEF <.MEM_7>
buffer_destroy (_2);
# .MEM_9 = VDEF <.MEM_8>
buffer_destroy (_3);
# .MEM_39 = VDEF <.MEM_38(D)>
_1 = window_index (ww_33(D), w_34(D), &i);
# .MEM_50 = VDEF <.MEM_39>
printf ("window not found%s", "");
# .MEM_40 = VDEF <.MEM_39>
memmove (_21, _16, _10);
# .MEM_47 = VDEF <.MEM_46>
window_destroy (w_34(D));
# .MEM_48 = VDEF <.MEM_47>
window_remove (&windows, w_34(D));
# .MEM_11 = VDEF <.MEM_6(D)>
printf ("zero size%s", "");
# .MEM_7 = VDEF <.MEM_6(D)>
b_5 = calloc (1, 32);
# .MEM_8 = VDEF <.MEM_7>
_1 = malloc (size_2(D));
# .MEM_15 = VDEF <.MEM_9(D)>
printf ("zero size%s", "");
# .MEM_13 = VDEF <.MEM_9(D)>
printf ("nmemb * size > SIZE_MAX%s", "");
# .MEM_11 = VDEF <.MEM_10>
printf ("xrealloc failed%s", "");
===============The second stage : Program slicing=================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
w_5 = window_create ("cmd", sx_2(D), sy_3(D));
window_add (&windows, w_5);
window_remove (&windows, w_5);
return 0;

=======Mapping node_fun:window_create=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 305001406]:
w_11 = malloc (200);
w_11->fd = fd_12(D);
_1 = buffer_create (8192);
w_11->in = _1;
_2 = buffer_create (8192);
w_11->out = _2;
name_20 = strdup (cmd_18(D));
ptr_21 = strchr (name_20, 32);
if (ptr_21 != 0B)
  goto <bb 3>; [70.00%]
else
  goto <bb 10>; [30.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 213500985]:
if (name_20 != ptr_21)
  goto <bb 4>; [70.00%]
else
  goto <bb 8>; [30.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 149450690]:
_3 = MEM[(char *)ptr_21 + -1B];
if (_3 != 92)
  goto <bb 5>; [66.00%]
else
  goto <bb 8>; [34.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 98637455]:
*ptr_21 = 0;
goto <bb 10>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1014686025]:
_4 = MEM[(char *)ptr_23 + -1B];
if (_4 != 92)
  goto <bb 7>; [5.50%]
else
  goto <bb 9>; [94.50%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 55807731]:
*ptr_23 = 0;
goto <bb 10>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 114863530]:
# ptr_29 = PHI <ptr_21(3), ptr_21(4)>

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 1073741824]:
# ptr_7 = PHI <ptr_23(6), ptr_29(8)>
_5 = ptr_7 + 1;
ptr_23 = strchr (_5, 32);
if (ptr_23 != 0B)
  goto <bb 6>; [94.50%]
else
  goto <bb 10>; [5.50%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 305001407]:
_6 = &w_11->name;
strcpy (_6, name_20);
free (name_20);
window_add (&windows, w_11);
w_11->references = 0;
return w_11;

=======Mapping node_fun:window_add=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 236412291]:
_1 = window_index (ww_37(D), 0B, &i);
if (_1 != 0)
  goto <bb 3>; [50.00%]
else
  goto <bb 13>; [50.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 118206146]:
_2 = ww_37(D)->num;
if (_2 > 1073741823)
  goto <bb 4>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 47282]:
printf ("number too big%s", "");
exit (1);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118158863]:
_3 = ww_37(D)->num;
_4 = _3 + 1;
_5 = 1073741824 / _4;
if (_5 <= 7)
  goto <bb 6>; [0.04%]
else
  goto <bb 7>; [99.96%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 47263]:
printf ("size too big%s", "");
exit (1);

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
_6 = ww_37(D)->space;
if (_6 == 0)
  goto <bb 8>; [33.00%]
else
  goto <bb 9>; [67.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 38976828]:
ww_37(D)->space = 80;
_7 = ww_37(D)->space;
_8 = ww_37(D)->list;
_9 = xrealloc (_8, 1, _7);
ww_37(D)->list = _9;

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 118111600]:
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 955630224]:
_10 = ww_37(D)->space;
_11 = ww_37(D)->list;
_12 = xrealloc (_11, 2, _10);
ww_37(D)->list = _12;
_13 = ww_37(D)->space;
_14 = _13 * 2;
ww_37(D)->space = _14;

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 1073741824]:
_15 = ww_37(D)->space;
_16 = ww_37(D)->num;
_17 = _16 + 1;
_18 = (long unsigned int) _17;
_19 = _18 * 8;
if (_15 <= _19)
  goto <bb 10>; [89.00%]
else
  goto <bb 12>; [11.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 118111600]:
_20 = ww_37(D)->list;
_21 = ww_37(D)->num;
_22 = (long unsigned int) _21;
_23 = _22 * 8;
_24 = _20 + _23;
*_24 = w_39(D);
_25 = ww_37(D)->num;
_26 = _25 + 1;
ww_37(D)->num = _26;
goto <bb 14>; [100.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 118206146]:
_27 = ww_37(D)->list;
_28 = i;
_29 = (long unsigned int) _28;
_30 = _29 * 8;
_31 = _27 + _30;
*_31 = w_39(D);

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 236317746]:
_32 = w_39(D)->references;
_33 = _32 + 1;
w_39(D)->references = _33;
i ={v} {CLOBBER};
return;

=======Mapping node_fun:window_destroy=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = w_5(D)->fd;
close (_1);
_2 = w_5(D)->in;
buffer_destroy (_2);
_3 = w_5(D)->out;
buffer_destroy (_3);
free (w_5(D));
return;

=======Mapping node_fun:window_remove=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = window_index (ww_33(D), w_34(D), &i);
if (_1 != 0)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
printf ("window not found%s", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
_2 = ww_33(D)->num;
_3 = _2 + 4294967295;
_4 = i;
if (_3 > _4)
  goto <bb 5>; [33.00%]
else
  goto <bb 6>; [67.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 354193067]:
_5 = ww_33(D)->num;
_6 = i;
_7 = _5 - _6;
_8 = _7 + 4294967295;
_9 = (long unsigned int) _8;
_10 = _9 * 8;
_11 = ww_33(D)->list;
_12 = i;
_13 = (sizetype) _12;
_14 = _13 + 1;
_15 = _14 * 8;
_16 = _11 + _15;
_17 = ww_33(D)->list;
_18 = i;
_19 = (long unsigned int) _18;
_20 = _19 * 8;
_21 = _17 + _20;
memmove (_21, _16, _10);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073312330]:
_22 = ww_33(D)->num;
_23 = _22 + 4294967295;
ww_33(D)->num = _23;
_24 = ww_33(D)->num;
if (_24 == 0)
  goto <bb 7>; [33.00%]
else
  goto <bb 8>; [67.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 354193067]:
_25 = ww_33(D)->list;
free (_25);
ww_33(D)->num = 0;
ww_33(D)->list = 0B;
ww_33(D)->space = 0;

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 1073312330]:
_26 = w_34(D)->references;
_27 = _26 + 4294967295;
w_34(D)->references = _27;
_28 = w_34(D)->references;
if (_28 == 0)
  goto <bb 9>; [33.00%]
else
  goto <bb 10>; [67.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 354193067]:
window_destroy (w_34(D));
window_remove (&windows, w_34(D));

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 1073312330]:
i ={v} {CLOBBER};
return;

=======Mapping node_fun:window_index=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 114863530]:
*i_14(D) = 0;
goto <bb 5>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1014686026]:
_1 = ww_16(D)->list;
_2 = *i_14(D);
_3 = (long unsigned int) _2;
_4 = _3 * 8;
_5 = _1 + _4;
_6 = *_5;
if (_6 == w_17(D))
  goto <bb 6>; [5.50%]
else
  goto <bb 4>; [94.50%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 958878296]:
_7 = *i_14(D);
_8 = _7 + 1;
*i_14(D) = _8;

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1073741824]:
_9 = *i_14(D);
_10 = ww_16(D)->num;
if (_9 < _10)
  goto <bb 3>; [94.50%]
else
  goto <bb 6>; [5.50%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 114863531]:
# _11 = PHI <0(3), -1(5)>
return _11;

=======Mapping node_fun:buffer_destroy=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = b_3(D)->base;
free (_1);
free (b_3(D));
return;

=======Mapping node_fun:buffer_create=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (size_2(D) == 0)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
printf ("zero size%s", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
b_5 = calloc (1, 32);
_1 = malloc (size_2(D));
b_5->base = _1;
b_5->space = size_2(D);
return b_5;

=======Mapping node_fun:xrealloc=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
newsize_4 = nmemb_2(D) * size_3(D);
if (newsize_4 == 0)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
printf ("zero size%s", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
_1 = 1073741824 / nmemb_2(D);
if (_1 < size_3(D))
  goto <bb 5>; [0.04%]
else
  goto <bb 6>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 429324]:
printf ("nmemb * size > SIZE_MAX%s", "");
exit (1);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1072883005]:
newptr_8 = realloc (oldptr_6(D), newsize_4);
if (newptr_8 == 0B)
  goto <bb 7>; [0.04%]
else
  goto <bb 8>; [99.96%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 429152]:
printf ("xrealloc failed%s", "");
exit (1);

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 1072453853]:
return newptr_8;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 5 [0m
[40;34m    gimple free   count : 5 [0m
[40;34m    all ptable point : 42 [0m
[40;34m    analyzable ptable point : 35 [0m
[40;34m    analyzable ptable all point stmt : 386 [0m
[40;34m    used_stmt array stack totalsize of : 0.012184 mb[0m
[40;34m    collect time: : 0.000698 s [0m
[40;34m    mapping time: : 0.002878 s [0m
[40;34m    algorithm time: 0.021782 s [0m
[40;34m    gimple stmt count : : 174 [0m
[40;34m    this report analysis in Mon Jun 20 14:58:19 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 73%)
 phase opt and generate             :   0.06 (100%)   0.02 (100%)   0.07 (100%)   731k ( 25%)
 dump files                         :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)     0  (  0%)
 callgraph functions expansion      :   0.03 ( 50%)   0.02 (100%)   0.04 ( 57%)   588k ( 20%)
 ipa lto gimple in                  :   0.01 ( 17%)   0.00 (  0%)   0.00 (  0%)    97k (  3%)
 dominator optimization             :   0.00 (  0%)   0.01 ( 50%)   0.00 (  0%)    22k (  1%)
 expand                             :   0.01 ( 17%)   0.00 (  0%)   0.01 ( 14%)    82k (  3%)
 post expand cleanups               :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)  5096  (  0%)
 LRA non-specific                   :   0.01 ( 17%)   0.00 (  0%)   0.00 (  0%)  2504  (  0%)
 reload CSE regs                    :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)  4696  (  0%)
 hard reg cprop                     :   0.00 (  0%)   0.01 ( 50%)   0.00 (  0%)    72  (  0%)
 plugin execution                   :   0.02 ( 33%)   0.00 (  0%)   0.03 ( 43%)  2120  (  0%)
 rest of compilation                :   0.01 ( 17%)   0.00 (  0%)   0.00 (  0%)    29k (  1%)
 TOTAL                              :   0.06          0.02          0.07         2956k
