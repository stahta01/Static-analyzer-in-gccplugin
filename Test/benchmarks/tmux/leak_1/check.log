./benchmarks/tmux/leak_1/tmux_leak_1.c: In function ‘xvasprintf’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:91:13: warning: implicit declaration of function ‘vasprintf’; did you mean ‘xvasprintf’? [-Wimplicit-function-declaration]
   91 |         i = vasprintf(ret, fmt, ap);
      |             ^~~~~~~~~
      |             xvasprintf
./benchmarks/tmux/leak_1/tmux_leak_1.c: In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:111:9: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
  111 |         memcpy(&gc, gcp, sizeof gc);
      |         ^~~~~~
./benchmarks/tmux/leak_1/tmux_leak_1.c:12:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
   11 | #include "../tmux.h"
  +++ |+#include <string.h>
   12 | 
./benchmarks/tmux/leak_1/tmux_leak_1.c:111:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  111 |         memcpy(&gc, gcp, sizeof gc);
      |         ^~~~~~
./benchmarks/tmux/leak_1/tmux_leak_1.c:111:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/tmux/leak_1/tmux_leak_1.c:119:38: warning: implicit declaration of function ‘strcspn’ [-Wimplicit-function-declaration]
  119 |                         last = ptr + strcspn(ptr, "]");
      |                                      ^~~~~~~
./benchmarks/tmux/leak_1/tmux_leak_1.c:119:38: note: include ‘<string.h>’ or provide a declaration of ‘strcspn’
./benchmarks/tmux/leak_1/tmux_leak_1.c:119:38: warning: incompatible implicit declaration of built-in function ‘strcspn’ [-Wbuiltin-declaration-mismatch]
./benchmarks/tmux/leak_1/tmux_leak_1.c:119:38: note: include ‘<string.h>’ or provide a declaration of ‘strcspn’
./benchmarks/tmux/leak_1/tmux_leak_1.c:133:32: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
  133 |                         left = strlen(ptr);
      |                                ^~~~~~
./benchmarks/tmux/leak_1/tmux_leak_1.c:133:32: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/tmux/leak_1/tmux_leak_1.c:133:32: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
./benchmarks/tmux/leak_1/tmux_leak_1.c:133:32: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
In file included from ./benchmarks/tmux/leak_1/tmux_leak_1.c:10:
./benchmarks/tmux/leak_1/tmux_leak_1.c: In function ‘screen_write_cstrlen’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:169:24: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
  169 |         msg2 = xmalloc(strlen(msg) + 1);
      |                        ^~~~~~
./benchmarks/tmux/leak_1/../stdio.h:137:27: note: in definition of macro ‘xmalloc’
  137 | #define xmalloc(a) malloc(a)
      |                           ^
./benchmarks/tmux/leak_1/tmux_leak_1.c:169:24: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
  169 |         msg2 = xmalloc(strlen(msg) + 1);
      |                        ^~~~~~
./benchmarks/tmux/leak_1/../stdio.h:137:27: note: in definition of macro ‘xmalloc’
  137 | #define xmalloc(a) malloc(a)
      |                           ^
./benchmarks/tmux/leak_1/tmux_leak_1.c: In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:218:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
  218 |         memcpy(&old, &wp->status_screen, sizeof old);
      |         ^~~~~~
./benchmarks/tmux/leak_1/tmux_leak_1.c:218:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/tmux/leak_1/tmux_leak_1.c:221:22: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
  221 |         out = malloc(strlen(fmt));                      /* allocation site */
      |                      ^~~~~~
./benchmarks/tmux/leak_1/tmux_leak_1.c:221:22: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -1.4%|          |
nothrow                          |      |      |      |      |     -1.4%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
forwprop                         |      |      |      |      |     -0.9%|          |
ethread                          |      |      |      |      |     -0.9%|          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========

=======node_fun:screen_redraw_make_pane_status=========

--------GIMPLE Cond -------
succs:= 2
=======node_fun:grid_compare=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
=======node_fun:screen_write_cstrlen=========

--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
succs:= 7
succs:= 9
succs:= 3
succs:= 4
--------GIMPLE Cond -------
succs:= 12
=======node_fun:screen_write_cnputs=========

--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
succs:= 6
succs:= 3
succs:= 4
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 9
--------GIMPLE Cond -------
succs:= 9
succs:= 10
succs:= 11
--------GIMPLE Cond -------
succs:= 12
--------GIMPLE Cond -------
succs:= 11
succs:= 12
--------GIMPLE Cond -------
succs:= 12
succs:= 7
succs:= 16
--------GIMPLE Cond -------
succs:= 16
succs:= 17
--------GIMPLE Cond -------
succs:= 18
succs:= 18
--------GIMPLE Cond -------
succs:= 5
succs:= 8
succs:= 14
succs:= 17
succs:= 22
=======node_fun:xvasprintf=========

--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 2
succs:= 3
succs:= 22
succs:= 3
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_2 = VDEF <.MEM_1(D)>
screen_redraw_make_pane_status (&c, &w, &wp);
# .MEM_18 = VDEF <.MEM_17(D)>
memcpy (&old, _1, 136);
# VUSE <.MEM_19>
_2 = strlen (fmt_12(D));
# .MEM_20 = VDEF <.MEM_19>
out_14 = malloc (_2);
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
# .MEM_22 = VDEF <.MEM_21>
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
# VUSE <.MEM_22>
_6 = grid_compare (_5, _4);
# .MEM_41 = VDEF <.MEM_40(D)>
xvasprintf (&msg, fmt_20(D), ap_21(D));
# VUSE <.MEM_41>
_2 = strlen (_1);
# .MEM_42 = VDEF <.MEM_41>
msg2_24 = malloc (_3);
 <var_decl 0x7fb4dbee37e0 msg
    type <pointer_type 0x7fb4dbebba80
        type <integer_type 0x7fb4dbebb9d8 char public QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebba80>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
        pointer_to_this <pointer_type 0x7fb4dbebbc78>>
    addressable unsigned DI ./benchmarks/tmux/leak_1/tmux_leak_1.c:165:10 size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebcc00 screen_write_cstrlen> chain <var_decl 0x7fb4dbee3750 msg2>>
# .MEM_54 = VDEF <.MEM_53(D)>
memcpy (&gc, gcp_32(D), 24);
# .MEM_55 = VDEF <.MEM_54>
xvasprintf (&msg, fmt_34(D), ap_35(D));
# VUSE <.MEM_52>
_4 = strcspn (ptr_38, "]");
# VUSE <.MEM_52>
left_46 = strlen (ptr_45);
 <var_decl 0x7fb4dbee3e10 msg
    type <pointer_type 0x7fb4dbebba80
        type <integer_type 0x7fb4dbebb9d8 char public QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebba80>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
        pointer_to_this <pointer_type 0x7fb4dbebbc78>>
    addressable unsigned DI ./benchmarks/tmux/leak_1/tmux_leak_1.c:106:10 size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebcb00 screen_write_cnputs> chain <var_decl 0x7fb4dbee3d80 ptr>>
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
# .MEM_10 = VDEF <.MEM_9>
printf ("xasprintf: %s", "");
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:screen_redraw_make_pane_status========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path screen_redraw_make_pane_status  function_call count: 6 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:grid_compare========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path grid_compare  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:grid_compare========= [0m
[40;42m =======start_check_funciton:grid_compare========= [0m
[40;33m =======POP node_fun stack:grid_compare========= [0m
[40;42m =======pre add _ fucntion:screen_write_cnputs========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path screen_write_cnputs  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strcspn========= [0m
[40;33m =======POP node_fun stack:strcspn========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xvasprintf  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;33m =======POP node_fun stack:vasprintf========= [0m
[40;42m =======pre_check_funciton:xvasprintf========= [0m
[40;42m =======start_check_funciton:xvasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb4dbef09d8
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fb4dbee2600 ret>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fb4dbeddfd8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = *ret_3(D);
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:22: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
if (_1 == 0B)
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:19: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |                   ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:19: warning: use location
Cond in fucntion xvasprintf basic block 3
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:91:13: warning: use location
   91 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt is child function---vasprintf-----

 ================== trace ================== 
trace fucntion name:vasprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (i_7 < 0)
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:12: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |            ^
if (i_7 < 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:12: warning: use location
Cond in fucntion xvasprintf basic block 2
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dbef09d8
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fb4dbee2600 ret>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fb4dbeddfd8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb4dbef4140
    type <pointer_type 0x7fb4dbec2d20
        type <array_type 0x7fb4dbec2c78 type <integer_type 0x7fb4dbebb9d8 char>
            BLK
            size <integer_cst 0x7fb4dbeb27b0 constant 112>
            unit-size <integer_cst 0x7fb4dbeb2798 constant 14>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fb4dbec2bd0>
            pointer_to_this <pointer_type 0x7fb4dbec2d20>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fb4dbef72f8 type <array_type 0x7fb4dbec2c78>
        readonly constant static "xasprintf: %s\000">
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:xvasprintf========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre_check_funciton:screen_write_cnputs========= [0m
[40;42m =======start_check_funciton:screen_write_cnputs========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fb4dc58ef80
    type <pointer_type 0x7fb4dbec60a8
        type <record_type 0x7fb4dbec4bd0 grid_cell BLK
            size <integer_cst 0x7fb4dc3b0078 constant 192>
            unit-size <integer_cst 0x7fb4dc3b0048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dbec4bd0 fields <field_decl 0x7fb4dbebeb48 flags> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec60a8>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fb4dbee3ea0 gc type <record_type 0x7fb4dbec4bd0 grid_cell>
        addressable BLK ./benchmarks/tmux/leak_1/tmux_leak_1.c:104:20 size <integer_cst 0x7fb4dc3b0078 192> unit-size <integer_cst 0x7fb4dc3b0048 24>
        align:32 warn_if_not_align:0 context <function_decl 0x7fb4dbebcb00 screen_write_cnputs>
        chain <var_decl 0x7fb4dbee3e10 msg type <pointer_type 0x7fb4dbebba80>
            addressable unsigned DI ./benchmarks/tmux/leak_1/tmux_leak_1.c:106:10 size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebcb00 screen_write_cnputs> chain <var_decl 0x7fb4dbee3d80 ptr>>>
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:111:9 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:111:9 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:111:9>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb4dc58efc0
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fb4dbee3e10 msg type <pointer_type 0x7fb4dbebba80>
        addressable unsigned DI ./benchmarks/tmux/leak_1/tmux_leak_1.c:106:10 size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebcb00 screen_write_cnputs>
        chain <var_decl 0x7fb4dbee3d80 ptr type <pointer_type 0x7fb4dbec4e70>
            unsigned DI ./benchmarks/tmux/leak_1/tmux_leak_1.c:107:13 size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebcb00 screen_write_cnputs> chain <var_decl 0x7fb4dbee3cf0 last>>>
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:113:2 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:113:2 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:113:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb4dbef03a8
    type <pointer_type 0x7fb4dbec4e70
        type <integer_type 0x7fb4dbec4930 u_char public unsigned QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dc392cd8 0> max <integer_cst 0x7fb4dc392c78 255> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec4e70>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb4dbee3d80 ptr>
    def_stmt ptr_38 = ptr_24 + 2;
    version:38
    ptr-info 0x7fb4dbeddf30>
ptr_38 = ptr_24 + 2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_4 = strcspn (ptr_38, "]");
bb index := 5
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_4 = strcspn (ptr_38, "]");
bb index := 5
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = strcspn (ptr_38, "]");
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:119:38: warning: use location
  119 |                         last = ptr + strcspn(ptr, "]");
      |                                      ^
this stmt is child function---strcspn-----

 ================== trace ================== 
trace fucntion name:strcspn 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
last_39 = ptr_38 + _4;
bb index := 5
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
last_39 = ptr_38 + _4;
bb index := 5
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
last_39 = ptr_38 + _4;
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:119:30: warning: use location
  119 |                         last = ptr + strcspn(ptr, "]");
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_41 = last_39 + 1;
bb index := 6
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_41 = last_39 + 1;
bb index := 6
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_41 = last_39 + 1;
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:126:29: warning: use location
  126 |                         ptr = last + 1;
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_2 = PHI <ptr_41(6), ptr_47(10), ptr_47(15), ptr_44(20)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_24 = PHI <ptr_37(2), ptr_2(21)>
bb index := 22
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_24 = PHI <ptr_37(2), ptr_2(21)>
bb index := 22
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_24 = PHI <ptr_37(2), ptr_2(21)>
bb index := 22
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_24 = PHI <ptr_37(2), ptr_2(21)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_22 = *ptr_24;
bb index := 22
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_22 = *ptr_24;
bb index := 22
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_22 = *ptr_24;
bb index := 22
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = *ptr_24;
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:116:16: warning: use location
  116 |         while (*ptr != '\0') {
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 != 0)
bb index := 22
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 != 0)
bb index := 22
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 != 0)
bb index := 22
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 != 0)
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:116:21: warning: use location
  116 |         while (*ptr != '\0') {
      |                     ^
if (_22 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:116:21: warning: use location
Cond in fucntion screen_write_cnputs basic block 22
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 3
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_44 = ptr_24 + 1;
./benchmarks/tmux/leak_1/tmux_leak_1.c:154:28: warning: use location
  154 |                         ptr++;
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_20 = *ptr_24;
bb index := 18
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_20 = *ptr_24;
bb index := 18
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = *ptr_24;
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:151:29: warning: use location
  151 |                         if (*ptr > 0x1f && *ptr < 0x7f) {
      |                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_47 = &MEM <u_char> [(void *)ptr_24 + 2B];
bb index := 9
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_47 = &MEM <u_char> [(void *)ptr_24 + 2B];
bb index := 9
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_47 = &MEM <u_char> [(void *)ptr_24 + 2B];
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:136:28: warning: use location
  136 |                         ptr++;
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_45 = ptr_24 + 1;
bb index := 8
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_45 = ptr_24 + 1;
bb index := 8
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_45 = ptr_24 + 1;
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:131:28: warning: use location
  131 |                         ptr++;
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
left_46 = strlen (ptr_45);
bb index := 8
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
left_46 = strlen (ptr_45);
bb index := 8
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
left_46 = strlen (ptr_45);
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:133:32: warning: use location
  133 |                         left = strlen(ptr);
      |                                ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *ptr_24;
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:21: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = (signed char) _6;
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:26: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
if (_7 < 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
Cond in fucntion screen_write_cnputs basic block 7
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 8
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_38 = ptr_24 + 2;
bb index := 5
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_38 = ptr_24 + 2;
bb index := 5
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_38 = ptr_24 + 2;
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:118:29: warning: use location
  118 |                         ptr += 2;
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = MEM[(u_char *)ptr_24 + 1B];
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:41: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
if (_3 == 91)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
Cond in fucntion screen_write_cnputs basic block 4
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 5
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_1 = *ptr_24;
bb index := 3
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_1 = *ptr_24;
bb index := 3
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = *ptr_24;
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:24: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 35)
bb index := 3
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 35)
bb index := 3
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_1 == 35)
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
if (_1 == 35)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
Cond in fucntion screen_write_cnputs basic block 3
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 4
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_52>
*last_39 = 0;
bb index := 6
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_52>
*last_39 = 0;
bb index := 6
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*last_39 = 0;
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:124:31: warning: use location
  124 |                         *last = '\0';
      |                               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dbef03a8
    type <pointer_type 0x7fb4dbec4e70
        type <integer_type 0x7fb4dbec4930 u_char public unsigned QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dc392cd8 0> max <integer_cst 0x7fb4dc392c78 255> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec4e70>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb4dbee3d80 ptr>
    def_stmt ptr_38 = ptr_24 + 2;
    version:38
    ptr-info 0x7fb4dbeddf30>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
./benchmarks/tmux/leak_1/tmux_leak_1.c:158:9: warning: use location
  158 |         free(msg);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
./benchmarks/tmux/leak_1/tmux_leak_1.c:158:9: warning: Use after free error!: free location 
ptr_2 = PHI <ptr_41(6), ptr_47(10), ptr_47(15), ptr_44(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
if (_5 == 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:120:28: warning: use location
  120 |                         if (*last == '\0') {
      |                            ^
	relate logic:= 1
succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
if (_10 > left_46)
./benchmarks/tmux/leak_1/tmux_leak_1.c:134:28: warning: use location
  134 |                         if (left < (size_t)ud->size - 1)
      |                            ^
	relate logic:= 1
succs:= 7
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
	relate logic:= 0
succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 14
if (_15 > size_25)
./benchmarks/tmux/leak_1/tmux_leak_1.c:141:45: warning: use location
  141 |                                 while (size < (size_t)maxlen) {
      |                                             ^
	relate logic:= 0
=succs:= 12
if (_13 > _14)
./benchmarks/tmux/leak_1/tmux_leak_1.c:140:40: warning: use location
  140 |                         if (maxlen > 0 && size + ud->width > (size_t)maxlen) {
      |                                        ^
	relate logic:= 1
=succs:= 11
if (maxlen_42(D) > 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:140:28: warning: use location
  140 |                         if (maxlen > 0 && size + ud->width > (size_t)maxlen) {
      |                            ^
	relate logic:= 0
=succs:= 10
// predicted unlikely by continue predictor.
./benchmarks/tmux/leak_1/tmux_leak_1.c:138:28: warning: use location
  138 |                         if (more != UTF8_DONE)
      |                            ^
	relate logic:= 1
=succs:= 9
if (more_48(D) != 1)
./benchmarks/tmux/leak_1/tmux_leak_1.c:138:28: warning: use location
	relate logic:= 0
=succs:= 8
if (_10 > left_46)
./benchmarks/tmux/leak_1/tmux_leak_1.c:134:28: warning: use location
  134 |                         if (left < (size_t)ud->size - 1)
      |                            ^
	relate logic:= 1
=succs:= 7
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
	relate logic:= 0
=succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
=succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 17
if (_18 > _19)
./benchmarks/tmux/leak_1/tmux_leak_1.c:148:40: warning: use location
  148 |                         if (maxlen > 0 && size + 1 > (size_t)maxlen)
      |                                        ^
	relate logic:= 1
succs:= 16
if (maxlen_42(D) > 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:148:28: warning: use location
  148 |                         if (maxlen > 0 && size + 1 > (size_t)maxlen)
      |                            ^
	relate logic:= 0
succs:= 7
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
	relate logic:= 0
succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 22
if (_22 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:116:21: warning: use location
  116 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
./benchmarks/tmux/leak_1/tmux_leak_1.c:158:9: warning: Use after free error!: free location 
  158 |         free(msg);
      |         ^
ptr_24 = PHI <ptr_37(2), ptr_2(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
if (_5 == 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:120:28: warning: use location
  120 |                         if (*last == '\0') {
      |                            ^
	relate logic:= 1
succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
if (_10 > left_46)
./benchmarks/tmux/leak_1/tmux_leak_1.c:134:28: warning: use location
  134 |                         if (left < (size_t)ud->size - 1)
      |                            ^
	relate logic:= 1
succs:= 7
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
	relate logic:= 0
succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 14
if (_15 > size_25)
./benchmarks/tmux/leak_1/tmux_leak_1.c:141:45: warning: use location
  141 |                                 while (size < (size_t)maxlen) {
      |                                             ^
	relate logic:= 0
=succs:= 12
if (_13 > _14)
./benchmarks/tmux/leak_1/tmux_leak_1.c:140:40: warning: use location
  140 |                         if (maxlen > 0 && size + ud->width > (size_t)maxlen) {
      |                                        ^
	relate logic:= 1
=succs:= 11
if (maxlen_42(D) > 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:140:28: warning: use location
  140 |                         if (maxlen > 0 && size + ud->width > (size_t)maxlen) {
      |                            ^
	relate logic:= 0
=succs:= 10
// predicted unlikely by continue predictor.
./benchmarks/tmux/leak_1/tmux_leak_1.c:138:28: warning: use location
  138 |                         if (more != UTF8_DONE)
      |                            ^
	relate logic:= 1
=succs:= 9
if (more_48(D) != 1)
./benchmarks/tmux/leak_1/tmux_leak_1.c:138:28: warning: use location
	relate logic:= 0
=succs:= 8
if (_10 > left_46)
./benchmarks/tmux/leak_1/tmux_leak_1.c:134:28: warning: use location
  134 |                         if (left < (size_t)ud->size - 1)
      |                            ^
	relate logic:= 1
=succs:= 7
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
	relate logic:= 0
=succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
=succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 17
if (_18 > _19)
./benchmarks/tmux/leak_1/tmux_leak_1.c:148:40: warning: use location
  148 |                         if (maxlen > 0 && size + 1 > (size_t)maxlen)
      |                                        ^
	relate logic:= 1
succs:= 16
if (maxlen_42(D) > 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:148:28: warning: use location
  148 |                         if (maxlen > 0 && size + 1 > (size_t)maxlen)
      |                            ^
	relate logic:= 0
succs:= 7
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
	relate logic:= 0
succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 22
if (_22 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:116:21: warning: use location
  116 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb4dbef0558
    type <pointer_type 0x7fb4dbec4e70
        type <integer_type 0x7fb4dbec4930 u_char public unsigned QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dc392cd8 0> max <integer_cst 0x7fb4dc392c78 255> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec4e70>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb4dbee3d80 ptr>
    def_stmt ptr_45 = ptr_24 + 1;
    version:45
    ptr-info 0x7fb4dbeddf90>
ptr_45 = ptr_24 + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
left_46 = strlen (ptr_45);
bb index := 8
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
left_46 = strlen (ptr_45);
bb index := 8
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
left_46 = strlen (ptr_45);
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:133:32: warning: use location
  133 |                         left = strlen(ptr);
      |                                ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
left_46 = strlen (ptr_45);
bb index := 8
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
left_46 = strlen (ptr_45);
bb index := 8
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
left_46 = strlen (ptr_45);
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:133:32: warning: use location
  133 |                         left = strlen(ptr);
      |                                ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dbef0558
    type <pointer_type 0x7fb4dbec4e70
        type <integer_type 0x7fb4dbec4930 u_char public unsigned QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dc392cd8 0> max <integer_cst 0x7fb4dc392c78 255> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec4e70>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb4dbee3d80 ptr>
    def_stmt ptr_45 = ptr_24 + 1;
    version:45
    ptr-info 0x7fb4dbeddf90>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
./benchmarks/tmux/leak_1/tmux_leak_1.c:158:9: warning: use location
  158 |         free(msg);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:screen_write_cnputs========= [0m
[40;42m =======pre add _ fucntion:screen_write_cstrlen========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path screen_write_cstrlen  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xvasprintf  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;33m =======POP node_fun stack:vasprintf========= [0m
[40;42m =======pre_check_funciton:xvasprintf========= [0m
[40;42m =======start_check_funciton:xvasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb4dbef09d8
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fb4dbee2600 ret>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fb4dbeddfd8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = *ret_3(D);
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:22: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
if (_1 == 0B)
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:19: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |                   ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:19: warning: use location
Cond in fucntion xvasprintf basic block 3
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:91:13: warning: use location
   91 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt is child function---vasprintf-----

 ================== trace ================== 
trace fucntion name:vasprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (i_7 < 0)
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:12: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |            ^
if (i_7 < 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:12: warning: use location
Cond in fucntion xvasprintf basic block 2
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dbef09d8
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fb4dbee2600 ret>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fb4dbeddfd8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb4dbef4140
    type <pointer_type 0x7fb4dbec2d20
        type <array_type 0x7fb4dbec2c78 type <integer_type 0x7fb4dbebb9d8 char>
            BLK
            size <integer_cst 0x7fb4dbeb27b0 constant 112>
            unit-size <integer_cst 0x7fb4dbeb2798 constant 14>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fb4dbec2bd0>
            pointer_to_this <pointer_type 0x7fb4dbec2d20>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fb4dbef72f8 type <array_type 0x7fb4dbec2c78>
        readonly constant static "xasprintf: %s\000">
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:xvasprintf========= [0m
[40;42m =======pre_check_funciton:screen_write_cstrlen========= [0m
[40;42m =======start_check_funciton:screen_write_cstrlen========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb4dbeec480
    type <pointer_type 0x7fb4dbebba80
        type <integer_type 0x7fb4dbebb9d8 char public QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebba80>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
        pointer_to_this <pointer_type 0x7fb4dbebbc78>>
    var <var_decl 0x7fb4dbee3750 msg2>
    def_stmt msg2_24 = malloc (_3);
    version:24
    ptr-info 0x7fb4dbedddc8>
# .MEM_42 = VDEF <.MEM_41>
msg2_24 = malloc (_3);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
bb index := 13
# VUSE <.MEM_9>
return i_7;
In function ‘screen_write_cstrlen’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 5

======================================================================
free (msg2_24);
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
  186 |         free(msg2);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
bb index := 12
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cstrlen’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
bb index := 12
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
bb index := 12
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_39>
*ptr2_17 = 0;
bb index := 13
# VUSE <.MEM_9>
return i_7;
In function ‘screen_write_cstrlen’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 5

======================================================================
*ptr2_17 = 0;
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:183:15: warning: use location
  183 |         *ptr2 = '\0';
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*ptr2_17 = _11;
./benchmarks/tmux/leak_1/tmux_leak_1.c:181:25: warning: use location
  181 |                 *ptr2++ = *ptr++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*ptr2_17 = _11;
./benchmarks/tmux/leak_1/tmux_leak_1.c:181:25: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr2_37 = ptr2_17 + 1;
./benchmarks/tmux/leak_1/tmux_leak_1.c:181:22: warning: use location
  181 |                 *ptr2++ = *ptr++;
      |                      ^
msg2_24 = malloc (_3);
./benchmarks/tmux/leak_1/tmux_leak_1.c:169:16: warning: use location
  169 |         msg2 = xmalloc(strlen(msg) + 1);
      |                ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dbeec480
    type <pointer_type 0x7fb4dbebba80
        type <integer_type 0x7fb4dbebb9d8 char public QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebba80>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
        pointer_to_this <pointer_type 0x7fb4dbebbc78>>
    var <var_decl 0x7fb4dbee3750 msg2>
    def_stmt msg2_24 = malloc (_3);
    version:24
    ptr-info 0x7fb4dbedddc8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: use location
  185 |         free(msg);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
  186 |         free(msg2);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: Use after free error!: free location 
  185 |         free(msg);
      |         ^
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
  186 |         free(msg2);
      |         ^
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
  186 |         free(msg2);
      |         ^
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: Use after free error!: free location 
  185 |         free(msg);
      |         ^
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
  186 |         free(msg2);
      |         ^
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <addr_expr 0x7fb4dc58ee40
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fb4dbee37e0 msg type <pointer_type 0x7fb4dbebba80>
        addressable unsigned DI ./benchmarks/tmux/leak_1/tmux_leak_1.c:165:10 size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebcc00 screen_write_cstrlen>
        chain <var_decl 0x7fb4dbee3750 msg2 type <pointer_type 0x7fb4dbebba80>
            unsigned DI ./benchmarks/tmux/leak_1/tmux_leak_1.c:165:16 size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebcc00 screen_write_cstrlen> chain <var_decl 0x7fb4dbee36c0 ptr>>>
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:168:2 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:168:2 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:168:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb4dc39af78
    type <pointer_type 0x7fb4dbebba80
        type <integer_type 0x7fb4dbebb9d8 char public QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebba80>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
        pointer_to_this <pointer_type 0x7fb4dbebbc78>>
   
    def_stmt _1 = msg;
    version:1
    ptr-info 0x7fb4dbeddd08>
# VUSE <.MEM_41>
_1 = msg;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_2 = strlen (_1);
./benchmarks/tmux/leak_1/tmux_leak_1.c:169:16: warning: use location
  169 |         msg2 = xmalloc(strlen(msg) + 1);
      |                ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_2 = strlen (_1);
./benchmarks/tmux/leak_1/tmux_leak_1.c:169:16: warning: use location
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dc39af78
    type <pointer_type 0x7fb4dbebba80
        type <integer_type 0x7fb4dbebb9d8 char public QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebba80>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
        pointer_to_this <pointer_type 0x7fb4dbebbc78>>
   
    def_stmt _1 = msg;
    version:1
    ptr-info 0x7fb4dbeddd08>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: use location
  185 |         free(msg);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
  186 |         free(msg2);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb4dbeec000
    type <integer_type 0x7fb4dc3a77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a7738 precision:64 min <integer_cst 0x7fb4dc392e88 0> max <integer_cst 0x7fb4dc393500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb4dc3b37e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
_3 = _2 + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
msg2_24 = malloc (_3);
./benchmarks/tmux/leak_1/tmux_leak_1.c:169:16: warning: use location
  169 |         msg2 = xmalloc(strlen(msg) + 1);
      |                ^
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
bb index := 13
# VUSE <.MEM_9>
return i_7;
In function ‘screen_write_cstrlen’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 5

======================================================================
free (msg2_24);
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
  186 |         free(msg2);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
bb index := 12
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cstrlen’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
bb index := 12
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
bb index := 12
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_39>
*ptr2_17 = 0;
bb index := 13
# VUSE <.MEM_9>
return i_7;
In function ‘screen_write_cstrlen’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 5

======================================================================
*ptr2_17 = 0;
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:183:15: warning: use location
  183 |         *ptr2 = '\0';
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*ptr2_17 = _11;
./benchmarks/tmux/leak_1/tmux_leak_1.c:181:25: warning: use location
  181 |                 *ptr2++ = *ptr++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*ptr2_17 = _11;
./benchmarks/tmux/leak_1/tmux_leak_1.c:181:25: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr2_37 = ptr2_17 + 1;
./benchmarks/tmux/leak_1/tmux_leak_1.c:181:22: warning: use location
  181 |                 *ptr2++ = *ptr++;
      |                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dbeec000
    type <integer_type 0x7fb4dc3a77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a7738 precision:64 min <integer_cst 0x7fb4dc392e88 0> max <integer_cst 0x7fb4dc393500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb4dc3b37e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: use location
  185 |         free(msg);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
  186 |         free(msg2);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: Use after free error!: free location 
  185 |         free(msg);
      |         ^
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
  186 |         free(msg2);
      |         ^
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
  186 |         free(msg2);
      |         ^
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: Use after free error!: free location 
  185 |         free(msg);
      |         ^
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
  186 |         free(msg2);
      |         ^
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:screen_write_cstrlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre_check_funciton:screen_redraw_make_pane_status========= [0m
[40;42m =======start_check_funciton:screen_redraw_make_pane_status========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb4dc39aa20
    type <pointer_type 0x7fb4dbebba80
        type <integer_type 0x7fb4dbebb9d8 char public QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebba80>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
        pointer_to_this <pointer_type 0x7fb4dbebbc78>>
    var <var_decl 0x7fb4dbee3090 out>
    def_stmt out_14 = malloc (_2);
    version:14
    ptr-info 0x7fb4dbeddcc0>
# .MEM_20 = VDEF <.MEM_19>
out_14 = malloc (_2);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘screen_redraw_make_pane_status’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^
this stmt is child function---screen_write_cnputs-----

 ================== trace ================== 
trace fucntion name:screen_write_cnputs 
[40;44m =======trace_function_path screen_write_cnputs  function_call count: 5 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
./benchmarks/tmux/leak_1/tmux_leak_1.c:158:9: warning: use location
  158 |         free(msg);
      |         ^
[40;36m ======= node_fun:screen_write_cnputs========= [0m
[40;36m ======= find relate stmt with out ========= [0m
[40;36m ======= relate stmt argument:out ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strcspn========= [0m
[40;46m =======add node_fun stack:strcspn========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;46m =======add node_fun stack:xvasprintf========= [0m
[40;44m =======trace_function_path xvasprintf  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:xvasprintf========= [0m
[40;36m ======= find relate stmt with out ========= [0m
[40;36m ======= relate stmt argument:out ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘screen_redraw_make_pane_status’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
outlen_16 = screen_write_cstrlen ("%s", out_14);
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:222:14: warning: use location
  222 |     outlen = screen_write_cstrlen("%s", out);
      |              ^
this stmt is child function---screen_write_cstrlen-----

 ================== trace ================== 
trace fucntion name:screen_write_cstrlen 
[40;44m =======trace_function_path screen_write_cstrlen  function_call count: 4 level :0========  [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
[40;31m  find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: use location
  185 |         free(msg);
      |         ^
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
[40;36m ======= node_fun:screen_write_cstrlen========= [0m
[40;36m ======= find relate stmt with out ========= [0m
[40;36m ======= relate stmt argument:out ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;46m =======add node_fun stack:xvasprintf========= [0m
[40;44m =======trace_function_path xvasprintf  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:xvasprintf========= [0m
[40;36m ======= find relate stmt with out ========= [0m
[40;36m ======= relate stmt argument:out ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long int) outlen_16;
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘screen_redraw_make_pane_status’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long int) outlen_16;
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_3 = (long int) outlen_16;
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
out_14 = malloc (_2);
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘screen_redraw_make_pane_status’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
out_14 = malloc (_2);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
out_14 = malloc (_2);
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:221:15: warning: use location
  221 |         out = malloc(strlen(fmt));                      /* allocation site */
      |               ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dc39aa20
    type <pointer_type 0x7fb4dbebba80
        type <integer_type 0x7fb4dbebb9d8 char public QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebba80>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
        pointer_to_this <pointer_type 0x7fb4dbebbc78>>
    var <var_decl 0x7fb4dbee3090 out>
    def_stmt out_14 = malloc (_2);
    version:14
    ptr-info 0x7fb4dbeddcc0>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:222:14: warning: Use after free error!: free location 
  222 |     outlen = screen_write_cstrlen("%s", out);
      |              ^
# .MEM_22 = VDEF <.MEM_21>
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:222:14: warning: Use after free error!: free location 
  222 |     outlen = screen_write_cstrlen("%s", out);
      |              ^
_3 = (long int) outlen_16;
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb4dc58ec20
    type <pointer_type 0x7fb4dbed35e8
        type <record_type 0x7fb4dbec9c78 screen BLK
            size <integer_cst 0x7fb4dbeb2a38 constant 1088>
            unit-size <integer_cst 0x7fb4dbeb2a50 constant 136>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dbec9c78 fields <field_decl 0x7fb4dbeca098 title> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbed35e8>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fb4dcc3aea0 old type <record_type 0x7fb4dbec9c78 screen>
        addressable BLK ./benchmarks/tmux/leak_1/tmux_leak_1.c:216:18 size <integer_cst 0x7fb4dbeb2a38 1088> unit-size <integer_cst 0x7fb4dbeb2a50 136>
        align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebce00 screen_redraw_make_pane_status>>
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:218:9 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:218:9 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:218:9>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb4dc39a9d8
    type <pointer_type 0x7fb4dbebbbd0
        type <integer_type 0x7fb4dbebbb28 char readonly QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbbd0>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb4dbee3120 fmt>
    def_stmt GIMPLE_NOP
    version:12>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_2 = strlen (fmt_12(D));
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘screen_redraw_make_pane_status’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_2 = strlen (fmt_12(D));
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_2 = strlen (fmt_12(D));
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:221:15: warning: use location
  221 |         out = malloc(strlen(fmt));                      /* allocation site */
      |               ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
out_14 = malloc (_2);
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘screen_redraw_make_pane_status’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
out_14 = malloc (_2);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
out_14 = malloc (_2);
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:221:15: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘screen_redraw_make_pane_status’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^
this stmt is child function---screen_write_cnputs-----

 ================== trace ================== 
trace fucntion name:screen_write_cnputs 
[40;44m =======trace_function_path screen_write_cnputs  function_call count: 5 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
./benchmarks/tmux/leak_1/tmux_leak_1.c:158:9: warning: use location
  158 |         free(msg);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strcspn========= [0m
[40;46m =======add node_fun stack:strcspn========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;46m =======add node_fun stack:xvasprintf========= [0m
[40;44m =======trace_function_path xvasprintf  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘screen_redraw_make_pane_status’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
outlen_16 = screen_write_cstrlen ("%s", out_14);
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:222:14: warning: use location
  222 |     outlen = screen_write_cstrlen("%s", out);
      |              ^
this stmt is child function---screen_write_cstrlen-----

 ================== trace ================== 
trace fucntion name:screen_write_cstrlen 
[40;44m =======trace_function_path screen_write_cstrlen  function_call count: 4 level :0========  [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
[40;31m  find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: use location
  185 |         free(msg);
      |         ^
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
[40;31m  find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
  186 |         free(msg2);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;46m =======add node_fun stack:xvasprintf========= [0m
[40;44m =======trace_function_path xvasprintf  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long int) outlen_16;
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘screen_redraw_make_pane_status’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long int) outlen_16;
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_3 = (long int) outlen_16;
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dc39a9d8
    type <pointer_type 0x7fb4dbebbbd0
        type <integer_type 0x7fb4dbebbb28 char readonly QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbbd0>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb4dbee3120 fmt>
    def_stmt GIMPLE_NOP
    version:12>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:222:14: warning: Use after free error!: free location 
  222 |     outlen = screen_write_cstrlen("%s", out);
      |              ^
# .MEM_22 = VDEF <.MEM_21>
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:222:14: warning: Use after free error!: free location 
  222 |     outlen = screen_write_cstrlen("%s", out);
      |              ^
_3 = (long int) outlen_16;
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb4dc39a7e0
    type <integer_type 0x7fb4dc3a77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a7738 precision:64 min <integer_cst 0x7fb4dc392e88 0> max <integer_cst 0x7fb4dc393500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb4dc3b37e0>>
   
    def_stmt _2 = strlen (fmt_12(D));
    version:2>
# VUSE <.MEM_19>
_2 = strlen (fmt_12(D));

 ================== trace ptable================== 
trace fucntion name:strlen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strlen-----
this other function ------strlen-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_2 = strlen (fmt_12(D));
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘screen_redraw_make_pane_status’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_2 = strlen (fmt_12(D));
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_2 = strlen (fmt_12(D));
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:221:15: warning: use location
  221 |         out = malloc(strlen(fmt));                      /* allocation site */
      |               ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
out_14 = malloc (_2);
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘screen_redraw_make_pane_status’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
out_14 = malloc (_2);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
out_14 = malloc (_2);
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:221:15: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘screen_redraw_make_pane_status’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^
this stmt is child function---screen_write_cnputs-----

 ================== trace ================== 
trace fucntion name:screen_write_cnputs 
[40;44m =======trace_function_path screen_write_cnputs  function_call count: 5 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
./benchmarks/tmux/leak_1/tmux_leak_1.c:158:9: warning: use location
  158 |         free(msg);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strcspn========= [0m
[40;46m =======add node_fun stack:strcspn========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;46m =======add node_fun stack:xvasprintf========= [0m
[40;44m =======trace_function_path xvasprintf  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘screen_redraw_make_pane_status’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
outlen_16 = screen_write_cstrlen ("%s", out_14);
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:222:14: warning: use location
  222 |     outlen = screen_write_cstrlen("%s", out);
      |              ^
this stmt is child function---screen_write_cstrlen-----

 ================== trace ================== 
trace fucntion name:screen_write_cstrlen 
[40;44m =======trace_function_path screen_write_cstrlen  function_call count: 4 level :0========  [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
[40;31m  find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: use location
  185 |         free(msg);
      |         ^
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
[40;31m  find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
  186 |         free(msg2);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;46m =======add node_fun stack:xvasprintf========= [0m
[40;44m =======trace_function_path xvasprintf  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long int) outlen_16;
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘screen_redraw_make_pane_status’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long int) outlen_16;
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_3 = (long int) outlen_16;
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dc39a7e0
    type <integer_type 0x7fb4dc3a77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a7738 precision:64 min <integer_cst 0x7fb4dc392e88 0> max <integer_cst 0x7fb4dc393500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb4dc3b37e0>>
   
    def_stmt _2 = strlen (fmt_12(D));
    version:2>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:222:14: warning: Use after free error!: free location 
  222 |     outlen = screen_write_cstrlen("%s", out);
      |              ^
# .MEM_22 = VDEF <.MEM_21>
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:222:14: warning: Use after free error!: free location 
  222 |     outlen = screen_write_cstrlen("%s", out);
      |              ^
_3 = (long int) outlen_16;
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb4dc58eca0
    type <pointer_type 0x7fb4dbed3888
        type <array_type 0x7fb4dbed37e0 type <integer_type 0x7fb4dbebb9d8 char>
            BLK
            size <integer_cst 0x7fb4dc3b0060 constant 24>
            unit-size <integer_cst 0x7fb4dbeb2e10 constant 3>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fb4dbed3738>
            pointer_to_this <pointer_type 0x7fb4dbed3888>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fb4dbedd8b8 type <array_type 0x7fb4dbed37e0>
        readonly constant static "%s\000">
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:222:35 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:222:35 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:222:35>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb4dc58ece0
    type <pointer_type 0x7fb4dbec47e0
        type <record_type 0x7fb4dbec4738 screen_write_ctx BLK
            size <integer_cst 0x7fb4dc4670a8 constant 448>
            unit-size <integer_cst 0x7fb4dbeb27f8 constant 56>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dbec4738 fields <field_decl 0x7fb4dbebe5f0 wp> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec47e0>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fb4dcc3af30 ctx type <record_type 0x7fb4dbec4738 screen_write_ctx>
        addressable BLK ./benchmarks/tmux/leak_1/tmux_leak_1.c:215:27 size <integer_cst 0x7fb4dc4670a8 448> unit-size <integer_cst 0x7fb4dbeb27f8 56>
        align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebce00 screen_redraw_make_pane_status>
        chain <var_decl 0x7fb4dcc3aea0 old type <record_type 0x7fb4dbec9c78 screen>
            addressable BLK ./benchmarks/tmux/leak_1/tmux_leak_1.c:216:18
            size <integer_cst 0x7fb4dbeb2a38 constant 1088>
            unit-size <integer_cst 0x7fb4dbeb2a50 constant 136>
            align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebce00 screen_redraw_make_pane_status>>>
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:224:2 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:224:2 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:224:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb4dc39a8b8
    type <pointer_type 0x7fb4dbec69d8
        type <record_type 0x7fb4dbec6930 grid BLK
            size <integer_cst 0x7fb4dc392f18 constant 256>
            unit-size <integer_cst 0x7fb4dc3b0018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dbec6930 fields <field_decl 0x7fb4dbec8000 flags> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec69d8>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = wp_8(D)->status_screen.grid;
    version:5
    ptr-info 0x7fb4dbeddc90>
# VUSE <.MEM_22>
_5 = wp_8(D)->status_screen.grid;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_6 = grid_compare (_5, _4);
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘screen_redraw_make_pane_status’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_6 = grid_compare (_5, _4);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_6 = grid_compare (_5, _4);
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:226:13: warning: use location
  226 |         if (grid_compare(wp->status_screen.grid, old.grid) == 0) {
      |             ^
this stmt is child function---grid_compare-----

 ================== trace ================== 
trace fucntion name:grid_compare 
[40;44m =======trace_function_path grid_compare  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:grid_compare========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘screen_redraw_make_pane_status’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (_6 == 0)
In function ‘main’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:226:12: warning: use location
  226 |         if (grid_compare(wp->status_screen.grid, old.grid) == 0) {
      |            ^
if (_6 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:226:12: warning: use location
Cond in fucntion screen_redraw_make_pane_status basic block 2
 ================== possible direct basic block ================= 
from screen_redraw_make_pane_status basic block 3
 ================== possible direct basic block ================= 
from screen_redraw_make_pane_status basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dc39a8b8
    type <pointer_type 0x7fb4dbec69d8
        type <record_type 0x7fb4dbec6930 grid BLK
            size <integer_cst 0x7fb4dc392f18 constant 256>
            unit-size <integer_cst 0x7fb4dc3b0018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dbec6930 fields <field_decl 0x7fb4dbec8000 flags> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec69d8>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = wp_8(D)->status_screen.grid;
    version:5
    ptr-info 0x7fb4dbeddc90>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:screen_redraw_make_pane_status========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fb4dc58eb40
    type <pointer_type 0x7fb4dbecf1f8
        type <record_type 0x7fb4dbecf150 client BLK
            size <integer_cst 0x7fb4dbeb2c78 constant 6336>
            unit-size <integer_cst 0x7fb4dbeb2b88 constant 792>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dbecf150 fields <field_decl 0x7fb4dbed1260 name> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbecf1f8>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fb4dcc3acf0 c type <record_type 0x7fb4dbecf150 client>
        addressable BLK ./benchmarks/tmux/leak_1/tmux_leak_1.c:234:16 size <integer_cst 0x7fb4dbeb2c78 6336> unit-size <integer_cst 0x7fb4dbeb2b88 792>
        align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebcf00 main>
        chain <var_decl 0x7fb4dcc3ac60 w type <record_type 0x7fb4dbecfb28 window>
            addressable BLK ./benchmarks/tmux/leak_1/tmux_leak_1.c:235:16
            size <integer_cst 0x7fb4dbeb2c90 constant 2048>
            unit-size <integer_cst 0x7fb4dbeb2b70 constant 256>
            align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebcf00 main> chain <var_decl 0x7fb4dcc3abd0 wp>>>
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:237:2 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:237:2 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:237:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:screen_redraw_make_pane_status========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path screen_redraw_make_pane_status  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:grid_compare========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path grid_compare  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:grid_compare========= [0m
[40;42m =======start_check_funciton:grid_compare========= [0m
[40;33m =======POP node_fun stack:grid_compare========= [0m
[40;42m =======pre add _ fucntion:screen_write_cnputs========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path screen_write_cnputs  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strcspn========= [0m
[40;33m =======POP node_fun stack:strcspn========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xvasprintf  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;33m =======POP node_fun stack:vasprintf========= [0m
[40;42m =======pre_check_funciton:xvasprintf========= [0m
[40;42m =======start_check_funciton:xvasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb4dbef09d8
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fb4dbee2600 ret>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fb4dbeddfd8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = *ret_3(D);
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:22: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
if (_1 == 0B)
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:19: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |                   ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:19: warning: use location
Cond in fucntion xvasprintf basic block 3
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:91:13: warning: use location
   91 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt is child function---vasprintf-----

 ================== trace ================== 
trace fucntion name:vasprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (i_7 < 0)
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:12: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |            ^
if (i_7 < 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:12: warning: use location
Cond in fucntion xvasprintf basic block 2
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dbef09d8
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fb4dbee2600 ret>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fb4dbeddfd8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb4dbef4140
    type <pointer_type 0x7fb4dbec2d20
        type <array_type 0x7fb4dbec2c78 type <integer_type 0x7fb4dbebb9d8 char>
            BLK
            size <integer_cst 0x7fb4dbeb27b0 constant 112>
            unit-size <integer_cst 0x7fb4dbeb2798 constant 14>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fb4dbec2bd0>
            pointer_to_this <pointer_type 0x7fb4dbec2d20>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fb4dbef72f8 type <array_type 0x7fb4dbec2c78>
        readonly constant static "xasprintf: %s\000">
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:xvasprintf========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre_check_funciton:screen_write_cnputs========= [0m
[40;42m =======start_check_funciton:screen_write_cnputs========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fb4dc58ef80
    type <pointer_type 0x7fb4dbec60a8
        type <record_type 0x7fb4dbec4bd0 grid_cell BLK
            size <integer_cst 0x7fb4dc3b0078 constant 192>
            unit-size <integer_cst 0x7fb4dc3b0048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dbec4bd0 fields <field_decl 0x7fb4dbebeb48 flags> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec60a8>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fb4dbee3ea0 gc type <record_type 0x7fb4dbec4bd0 grid_cell>
        addressable BLK ./benchmarks/tmux/leak_1/tmux_leak_1.c:104:20 size <integer_cst 0x7fb4dc3b0078 192> unit-size <integer_cst 0x7fb4dc3b0048 24>
        align:32 warn_if_not_align:0 context <function_decl 0x7fb4dbebcb00 screen_write_cnputs>
        chain <var_decl 0x7fb4dbee3e10 msg type <pointer_type 0x7fb4dbebba80>
            addressable unsigned DI ./benchmarks/tmux/leak_1/tmux_leak_1.c:106:10 size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebcb00 screen_write_cnputs> chain <var_decl 0x7fb4dbee3d80 ptr>>>
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:111:9 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:111:9 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:111:9>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb4dc58efc0
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fb4dbee3e10 msg type <pointer_type 0x7fb4dbebba80>
        addressable unsigned DI ./benchmarks/tmux/leak_1/tmux_leak_1.c:106:10 size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebcb00 screen_write_cnputs>
        chain <var_decl 0x7fb4dbee3d80 ptr type <pointer_type 0x7fb4dbec4e70>
            unsigned DI ./benchmarks/tmux/leak_1/tmux_leak_1.c:107:13 size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebcb00 screen_write_cnputs> chain <var_decl 0x7fb4dbee3cf0 last>>>
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:113:2 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:113:2 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:113:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb4dbef03a8
    type <pointer_type 0x7fb4dbec4e70
        type <integer_type 0x7fb4dbec4930 u_char public unsigned QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dc392cd8 0> max <integer_cst 0x7fb4dc392c78 255> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec4e70>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb4dbee3d80 ptr>
    def_stmt ptr_38 = ptr_24 + 2;
    version:38
    ptr-info 0x7fb4dbeddf30>
ptr_38 = ptr_24 + 2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_4 = strcspn (ptr_38, "]");
bb index := 5
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_4 = strcspn (ptr_38, "]");
bb index := 5
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = strcspn (ptr_38, "]");
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:119:38: warning: use location
  119 |                         last = ptr + strcspn(ptr, "]");
      |                                      ^
this stmt is child function---strcspn-----

 ================== trace ================== 
trace fucntion name:strcspn 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
last_39 = ptr_38 + _4;
bb index := 5
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
last_39 = ptr_38 + _4;
bb index := 5
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
last_39 = ptr_38 + _4;
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:119:30: warning: use location
  119 |                         last = ptr + strcspn(ptr, "]");
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_41 = last_39 + 1;
bb index := 6
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_41 = last_39 + 1;
bb index := 6
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_41 = last_39 + 1;
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:126:29: warning: use location
  126 |                         ptr = last + 1;
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_2 = PHI <ptr_41(6), ptr_47(10), ptr_47(15), ptr_44(20)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_24 = PHI <ptr_37(2), ptr_2(21)>
bb index := 22
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_24 = PHI <ptr_37(2), ptr_2(21)>
bb index := 22
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_24 = PHI <ptr_37(2), ptr_2(21)>
bb index := 22
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_24 = PHI <ptr_37(2), ptr_2(21)>
In function ‘screen_redraw_make_pane_status’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_22 = *ptr_24;
bb index := 22
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_22 = *ptr_24;
bb index := 22
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_22 = *ptr_24;
bb index := 22
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = *ptr_24;
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:116:16: warning: use location
  116 |         while (*ptr != '\0') {
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 != 0)
bb index := 22
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 != 0)
bb index := 22
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 != 0)
bb index := 22
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 != 0)
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:116:21: warning: use location
  116 |         while (*ptr != '\0') {
      |                     ^
if (_22 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:116:21: warning: use location
Cond in fucntion screen_write_cnputs basic block 22
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 3
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_44 = ptr_24 + 1;
./benchmarks/tmux/leak_1/tmux_leak_1.c:154:28: warning: use location
  154 |                         ptr++;
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_20 = *ptr_24;
bb index := 18
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_20 = *ptr_24;
bb index := 18
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = *ptr_24;
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:151:29: warning: use location
  151 |                         if (*ptr > 0x1f && *ptr < 0x7f) {
      |                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_47 = &MEM <u_char> [(void *)ptr_24 + 2B];
bb index := 9
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_47 = &MEM <u_char> [(void *)ptr_24 + 2B];
bb index := 9
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_47 = &MEM <u_char> [(void *)ptr_24 + 2B];
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:136:28: warning: use location
  136 |                         ptr++;
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_45 = ptr_24 + 1;
bb index := 8
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_45 = ptr_24 + 1;
bb index := 8
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_45 = ptr_24 + 1;
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:131:28: warning: use location
  131 |                         ptr++;
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
left_46 = strlen (ptr_45);
bb index := 8
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
left_46 = strlen (ptr_45);
bb index := 8
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
left_46 = strlen (ptr_45);
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:133:32: warning: use location
  133 |                         left = strlen(ptr);
      |                                ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *ptr_24;
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:21: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = (signed char) _6;
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:26: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
if (_7 < 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
Cond in fucntion screen_write_cnputs basic block 7
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 8
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_38 = ptr_24 + 2;
bb index := 5
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_38 = ptr_24 + 2;
bb index := 5
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_38 = ptr_24 + 2;
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:118:29: warning: use location
  118 |                         ptr += 2;
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = MEM[(u_char *)ptr_24 + 1B];
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:41: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
if (_3 == 91)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
Cond in fucntion screen_write_cnputs basic block 4
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 5
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_1 = *ptr_24;
bb index := 3
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_1 = *ptr_24;
bb index := 3
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = *ptr_24;
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:24: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 35)
bb index := 3
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 35)
bb index := 3
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_1 == 35)
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
if (_1 == 35)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
Cond in fucntion screen_write_cnputs basic block 3
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 4
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_52>
*last_39 = 0;
bb index := 6
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_52>
*last_39 = 0;
bb index := 6
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*last_39 = 0;
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:124:31: warning: use location
  124 |                         *last = '\0';
      |                               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dbef03a8
    type <pointer_type 0x7fb4dbec4e70
        type <integer_type 0x7fb4dbec4930 u_char public unsigned QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dc392cd8 0> max <integer_cst 0x7fb4dc392c78 255> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec4e70>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb4dbee3d80 ptr>
    def_stmt ptr_38 = ptr_24 + 2;
    version:38
    ptr-info 0x7fb4dbeddf30>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
./benchmarks/tmux/leak_1/tmux_leak_1.c:158:9: warning: use location
  158 |         free(msg);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
./benchmarks/tmux/leak_1/tmux_leak_1.c:158:9: warning: Use after free error!: free location 
ptr_2 = PHI <ptr_41(6), ptr_47(10), ptr_47(15), ptr_44(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
if (_5 == 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:120:28: warning: use location
  120 |                         if (*last == '\0') {
      |                            ^
	relate logic:= 1
succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
if (_10 > left_46)
./benchmarks/tmux/leak_1/tmux_leak_1.c:134:28: warning: use location
  134 |                         if (left < (size_t)ud->size - 1)
      |                            ^
	relate logic:= 1
succs:= 7
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
	relate logic:= 0
succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 14
if (_15 > size_25)
./benchmarks/tmux/leak_1/tmux_leak_1.c:141:45: warning: use location
  141 |                                 while (size < (size_t)maxlen) {
      |                                             ^
	relate logic:= 0
=succs:= 12
if (_13 > _14)
./benchmarks/tmux/leak_1/tmux_leak_1.c:140:40: warning: use location
  140 |                         if (maxlen > 0 && size + ud->width > (size_t)maxlen) {
      |                                        ^
	relate logic:= 1
=succs:= 11
if (maxlen_42(D) > 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:140:28: warning: use location
  140 |                         if (maxlen > 0 && size + ud->width > (size_t)maxlen) {
      |                            ^
	relate logic:= 0
=succs:= 10
// predicted unlikely by continue predictor.
./benchmarks/tmux/leak_1/tmux_leak_1.c:138:28: warning: use location
  138 |                         if (more != UTF8_DONE)
      |                            ^
	relate logic:= 1
=succs:= 9
if (more_48(D) != 1)
./benchmarks/tmux/leak_1/tmux_leak_1.c:138:28: warning: use location
	relate logic:= 0
=succs:= 8
if (_10 > left_46)
./benchmarks/tmux/leak_1/tmux_leak_1.c:134:28: warning: use location
  134 |                         if (left < (size_t)ud->size - 1)
      |                            ^
	relate logic:= 1
=succs:= 7
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
	relate logic:= 0
=succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
=succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 17
if (_18 > _19)
./benchmarks/tmux/leak_1/tmux_leak_1.c:148:40: warning: use location
  148 |                         if (maxlen > 0 && size + 1 > (size_t)maxlen)
      |                                        ^
	relate logic:= 1
succs:= 16
if (maxlen_42(D) > 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:148:28: warning: use location
  148 |                         if (maxlen > 0 && size + 1 > (size_t)maxlen)
      |                            ^
	relate logic:= 0
succs:= 7
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
	relate logic:= 0
succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 22
if (_22 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:116:21: warning: use location
  116 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
./benchmarks/tmux/leak_1/tmux_leak_1.c:158:9: warning: Use after free error!: free location 
  158 |         free(msg);
      |         ^
ptr_24 = PHI <ptr_37(2), ptr_2(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
if (_5 == 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:120:28: warning: use location
  120 |                         if (*last == '\0') {
      |                            ^
	relate logic:= 1
succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
if (_10 > left_46)
./benchmarks/tmux/leak_1/tmux_leak_1.c:134:28: warning: use location
  134 |                         if (left < (size_t)ud->size - 1)
      |                            ^
	relate logic:= 1
succs:= 7
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
	relate logic:= 0
succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 14
if (_15 > size_25)
./benchmarks/tmux/leak_1/tmux_leak_1.c:141:45: warning: use location
  141 |                                 while (size < (size_t)maxlen) {
      |                                             ^
	relate logic:= 0
=succs:= 12
if (_13 > _14)
./benchmarks/tmux/leak_1/tmux_leak_1.c:140:40: warning: use location
  140 |                         if (maxlen > 0 && size + ud->width > (size_t)maxlen) {
      |                                        ^
	relate logic:= 1
=succs:= 11
if (maxlen_42(D) > 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:140:28: warning: use location
  140 |                         if (maxlen > 0 && size + ud->width > (size_t)maxlen) {
      |                            ^
	relate logic:= 0
=succs:= 10
// predicted unlikely by continue predictor.
./benchmarks/tmux/leak_1/tmux_leak_1.c:138:28: warning: use location
  138 |                         if (more != UTF8_DONE)
      |                            ^
	relate logic:= 1
=succs:= 9
if (more_48(D) != 1)
./benchmarks/tmux/leak_1/tmux_leak_1.c:138:28: warning: use location
	relate logic:= 0
=succs:= 8
if (_10 > left_46)
./benchmarks/tmux/leak_1/tmux_leak_1.c:134:28: warning: use location
  134 |                         if (left < (size_t)ud->size - 1)
      |                            ^
	relate logic:= 1
=succs:= 7
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
	relate logic:= 0
=succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
=succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 17
if (_18 > _19)
./benchmarks/tmux/leak_1/tmux_leak_1.c:148:40: warning: use location
  148 |                         if (maxlen > 0 && size + 1 > (size_t)maxlen)
      |                                        ^
	relate logic:= 1
succs:= 16
if (maxlen_42(D) > 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:148:28: warning: use location
  148 |                         if (maxlen > 0 && size + 1 > (size_t)maxlen)
      |                            ^
	relate logic:= 0
succs:= 7
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
	relate logic:= 0
succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 22
if (_22 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:116:21: warning: use location
  116 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb4dbef0558
    type <pointer_type 0x7fb4dbec4e70
        type <integer_type 0x7fb4dbec4930 u_char public unsigned QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dc392cd8 0> max <integer_cst 0x7fb4dc392c78 255> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec4e70>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb4dbee3d80 ptr>
    def_stmt ptr_45 = ptr_24 + 1;
    version:45
    ptr-info 0x7fb4dbeddf90>
ptr_45 = ptr_24 + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
left_46 = strlen (ptr_45);
bb index := 8
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
left_46 = strlen (ptr_45);
bb index := 8
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
left_46 = strlen (ptr_45);
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:133:32: warning: use location
  133 |                         left = strlen(ptr);
      |                                ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
left_46 = strlen (ptr_45);
bb index := 8
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
left_46 = strlen (ptr_45);
bb index := 8
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
left_46 = strlen (ptr_45);
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:133:32: warning: use location
  133 |                         left = strlen(ptr);
      |                                ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dbef0558
    type <pointer_type 0x7fb4dbec4e70
        type <integer_type 0x7fb4dbec4930 u_char public unsigned QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dc392cd8 0> max <integer_cst 0x7fb4dc392c78 255> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec4e70>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb4dbee3d80 ptr>
    def_stmt ptr_45 = ptr_24 + 1;
    version:45
    ptr-info 0x7fb4dbeddf90>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
./benchmarks/tmux/leak_1/tmux_leak_1.c:158:9: warning: use location
  158 |         free(msg);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:screen_write_cnputs========= [0m
[40;42m =======pre add _ fucntion:screen_write_cstrlen========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path screen_write_cstrlen  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xvasprintf  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;33m =======POP node_fun stack:vasprintf========= [0m
[40;42m =======pre_check_funciton:xvasprintf========= [0m
[40;42m =======start_check_funciton:xvasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb4dbef09d8
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fb4dbee2600 ret>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fb4dbeddfd8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = *ret_3(D);
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:22: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
if (_1 == 0B)
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:19: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |                   ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:19: warning: use location
Cond in fucntion xvasprintf basic block 3
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:91:13: warning: use location
   91 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt is child function---vasprintf-----

 ================== trace ================== 
trace fucntion name:vasprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (i_7 < 0)
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:12: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |            ^
if (i_7 < 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:12: warning: use location
Cond in fucntion xvasprintf basic block 2
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dbef09d8
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fb4dbee2600 ret>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fb4dbeddfd8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb4dbef4140
    type <pointer_type 0x7fb4dbec2d20
        type <array_type 0x7fb4dbec2c78 type <integer_type 0x7fb4dbebb9d8 char>
            BLK
            size <integer_cst 0x7fb4dbeb27b0 constant 112>
            unit-size <integer_cst 0x7fb4dbeb2798 constant 14>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fb4dbec2bd0>
            pointer_to_this <pointer_type 0x7fb4dbec2d20>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fb4dbef72f8 type <array_type 0x7fb4dbec2c78>
        readonly constant static "xasprintf: %s\000">
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:xvasprintf========= [0m
[40;42m =======pre_check_funciton:screen_write_cstrlen========= [0m
[40;42m =======start_check_funciton:screen_write_cstrlen========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb4dbeec480
    type <pointer_type 0x7fb4dbebba80
        type <integer_type 0x7fb4dbebb9d8 char public QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebba80>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
        pointer_to_this <pointer_type 0x7fb4dbebbc78>>
    var <var_decl 0x7fb4dbee3750 msg2>
    def_stmt msg2_24 = malloc (_3);
    version:24
    ptr-info 0x7fb4dbedddc8>
# .MEM_42 = VDEF <.MEM_41>
msg2_24 = malloc (_3);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
bb index := 13
# VUSE <.MEM_9>
return i_7;
In function ‘screen_write_cstrlen’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 5

======================================================================
free (msg2_24);
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
  186 |         free(msg2);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
bb index := 12
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cstrlen’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
bb index := 12
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
bb index := 12
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
In function ‘screen_redraw_make_pane_status’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_39>
*ptr2_17 = 0;
bb index := 13
# VUSE <.MEM_9>
return i_7;
In function ‘screen_write_cstrlen’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 5

======================================================================
*ptr2_17 = 0;
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:183:15: warning: use location
  183 |         *ptr2 = '\0';
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*ptr2_17 = _11;
./benchmarks/tmux/leak_1/tmux_leak_1.c:181:25: warning: use location
  181 |                 *ptr2++ = *ptr++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*ptr2_17 = _11;
./benchmarks/tmux/leak_1/tmux_leak_1.c:181:25: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr2_37 = ptr2_17 + 1;
./benchmarks/tmux/leak_1/tmux_leak_1.c:181:22: warning: use location
  181 |                 *ptr2++ = *ptr++;
      |                      ^
msg2_24 = malloc (_3);
./benchmarks/tmux/leak_1/tmux_leak_1.c:169:16: warning: use location
  169 |         msg2 = xmalloc(strlen(msg) + 1);
      |                ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dbeec480
    type <pointer_type 0x7fb4dbebba80
        type <integer_type 0x7fb4dbebb9d8 char public QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebba80>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
        pointer_to_this <pointer_type 0x7fb4dbebbc78>>
    var <var_decl 0x7fb4dbee3750 msg2>
    def_stmt msg2_24 = malloc (_3);
    version:24
    ptr-info 0x7fb4dbedddc8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: use location
  185 |         free(msg);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
  186 |         free(msg2);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: Use after free error!: free location 
  185 |         free(msg);
      |         ^
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
  186 |         free(msg2);
      |         ^
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
  186 |         free(msg2);
      |         ^
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: Use after free error!: free location 
  185 |         free(msg);
      |         ^
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
  186 |         free(msg2);
      |         ^
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <addr_expr 0x7fb4dc58ee40
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fb4dbee37e0 msg type <pointer_type 0x7fb4dbebba80>
        addressable unsigned DI ./benchmarks/tmux/leak_1/tmux_leak_1.c:165:10 size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebcc00 screen_write_cstrlen>
        chain <var_decl 0x7fb4dbee3750 msg2 type <pointer_type 0x7fb4dbebba80>
            unsigned DI ./benchmarks/tmux/leak_1/tmux_leak_1.c:165:16 size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebcc00 screen_write_cstrlen> chain <var_decl 0x7fb4dbee36c0 ptr>>>
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:168:2 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:168:2 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:168:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb4dc39af78
    type <pointer_type 0x7fb4dbebba80
        type <integer_type 0x7fb4dbebb9d8 char public QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebba80>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
        pointer_to_this <pointer_type 0x7fb4dbebbc78>>
   
    def_stmt _1 = msg;
    version:1
    ptr-info 0x7fb4dbeddd08>
# VUSE <.MEM_41>
_1 = msg;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_2 = strlen (_1);
./benchmarks/tmux/leak_1/tmux_leak_1.c:169:16: warning: use location
  169 |         msg2 = xmalloc(strlen(msg) + 1);
      |                ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_2 = strlen (_1);
./benchmarks/tmux/leak_1/tmux_leak_1.c:169:16: warning: use location
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dc39af78
    type <pointer_type 0x7fb4dbebba80
        type <integer_type 0x7fb4dbebb9d8 char public QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebba80>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
        pointer_to_this <pointer_type 0x7fb4dbebbc78>>
   
    def_stmt _1 = msg;
    version:1
    ptr-info 0x7fb4dbeddd08>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: use location
  185 |         free(msg);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
  186 |         free(msg2);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb4dbeec000
    type <integer_type 0x7fb4dc3a77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a7738 precision:64 min <integer_cst 0x7fb4dc392e88 0> max <integer_cst 0x7fb4dc393500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb4dc3b37e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
_3 = _2 + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
msg2_24 = malloc (_3);
./benchmarks/tmux/leak_1/tmux_leak_1.c:169:16: warning: use location
  169 |         msg2 = xmalloc(strlen(msg) + 1);
      |                ^
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
bb index := 13
# VUSE <.MEM_9>
return i_7;
In function ‘screen_write_cstrlen’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 5

======================================================================
free (msg2_24);
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
  186 |         free(msg2);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
bb index := 12
# VUSE <.MEM_46>
return size_30(D);
In function ‘screen_write_cstrlen’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
bb index := 12
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
bb index := 12
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
In function ‘screen_redraw_make_pane_status’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_39>
*ptr2_17 = 0;
bb index := 13
# VUSE <.MEM_9>
return i_7;
In function ‘screen_write_cstrlen’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 5

======================================================================
*ptr2_17 = 0;
In function ‘screen_redraw_make_pane_status’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:183:15: warning: use location
  183 |         *ptr2 = '\0';
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*ptr2_17 = _11;
./benchmarks/tmux/leak_1/tmux_leak_1.c:181:25: warning: use location
  181 |                 *ptr2++ = *ptr++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*ptr2_17 = _11;
./benchmarks/tmux/leak_1/tmux_leak_1.c:181:25: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr2_37 = ptr2_17 + 1;
./benchmarks/tmux/leak_1/tmux_leak_1.c:181:22: warning: use location
  181 |                 *ptr2++ = *ptr++;
      |                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dbeec000
    type <integer_type 0x7fb4dc3a77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a7738 precision:64 min <integer_cst 0x7fb4dc392e88 0> max <integer_cst 0x7fb4dc393500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb4dc3b37e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: use location
  185 |         free(msg);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
  186 |         free(msg2);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: Use after free error!: free location 
  185 |         free(msg);
      |         ^
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
  186 |         free(msg2);
      |         ^
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
  186 |         free(msg2);
      |         ^
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: Use after free error!: free location 
  185 |         free(msg);
      |         ^
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
  186 |         free(msg2);
      |         ^
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:screen_write_cstrlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre_check_funciton:screen_redraw_make_pane_status========= [0m
[40;42m =======start_check_funciton:screen_redraw_make_pane_status========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb4dc39aa20
    type <pointer_type 0x7fb4dbebba80
        type <integer_type 0x7fb4dbebb9d8 char public QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebba80>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
        pointer_to_this <pointer_type 0x7fb4dbebbc78>>
    var <var_decl 0x7fb4dbee3090 out>
    def_stmt out_14 = malloc (_2);
    version:14
    ptr-info 0x7fb4dbeddcc0>
# .MEM_20 = VDEF <.MEM_19>
out_14 = malloc (_2);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^
this stmt is child function---screen_write_cnputs-----

 ================== trace ================== 
trace fucntion name:screen_write_cnputs 
[40;44m =======trace_function_path screen_write_cnputs  function_call count: 5 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
./benchmarks/tmux/leak_1/tmux_leak_1.c:158:9: warning: use location
  158 |         free(msg);
      |         ^
[40;36m ======= node_fun:screen_write_cnputs========= [0m
[40;36m ======= find relate stmt with out ========= [0m
[40;36m ======= relate stmt argument:out ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strcspn========= [0m
[40;46m =======add node_fun stack:strcspn========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;46m =======add node_fun stack:xvasprintf========= [0m
[40;44m =======trace_function_path xvasprintf  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:xvasprintf========= [0m
[40;36m ======= find relate stmt with out ========= [0m
[40;36m ======= relate stmt argument:out ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
outlen_16 = screen_write_cstrlen ("%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:222:14: warning: use location
  222 |     outlen = screen_write_cstrlen("%s", out);
      |              ^
this stmt is child function---screen_write_cstrlen-----

 ================== trace ================== 
trace fucntion name:screen_write_cstrlen 
[40;44m =======trace_function_path screen_write_cstrlen  function_call count: 4 level :0========  [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
[40;31m  find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: use location
  185 |         free(msg);
      |         ^
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
[40;36m ======= node_fun:screen_write_cstrlen========= [0m
[40;36m ======= find relate stmt with out ========= [0m
[40;36m ======= relate stmt argument:out ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;46m =======add node_fun stack:xvasprintf========= [0m
[40;44m =======trace_function_path xvasprintf  function_call count: 3 level :1========  [0m
[40;36m ======= node_fun:xvasprintf========= [0m
[40;36m ======= find relate stmt with out ========= [0m
[40;36m ======= relate stmt argument:out ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long int) outlen_16;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long int) outlen_16;
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_3 = (long int) outlen_16;
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
out_14 = malloc (_2);
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
out_14 = malloc (_2);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
out_14 = malloc (_2);
./benchmarks/tmux/leak_1/tmux_leak_1.c:221:15: warning: use location
  221 |         out = malloc(strlen(fmt));                      /* allocation site */
      |               ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dc39aa20
    type <pointer_type 0x7fb4dbebba80
        type <integer_type 0x7fb4dbebb9d8 char public QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebba80>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
        pointer_to_this <pointer_type 0x7fb4dbebbc78>>
    var <var_decl 0x7fb4dbee3090 out>
    def_stmt out_14 = malloc (_2);
    version:14
    ptr-info 0x7fb4dbeddcc0>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:222:14: warning: Use after free error!: free location 
  222 |     outlen = screen_write_cstrlen("%s", out);
      |              ^
# .MEM_22 = VDEF <.MEM_21>
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:222:14: warning: Use after free error!: free location 
  222 |     outlen = screen_write_cstrlen("%s", out);
      |              ^
_3 = (long int) outlen_16;
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb4dc58ec20
    type <pointer_type 0x7fb4dbed35e8
        type <record_type 0x7fb4dbec9c78 screen BLK
            size <integer_cst 0x7fb4dbeb2a38 constant 1088>
            unit-size <integer_cst 0x7fb4dbeb2a50 constant 136>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dbec9c78 fields <field_decl 0x7fb4dbeca098 title> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbed35e8>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fb4dcc3aea0 old type <record_type 0x7fb4dbec9c78 screen>
        addressable BLK ./benchmarks/tmux/leak_1/tmux_leak_1.c:216:18 size <integer_cst 0x7fb4dbeb2a38 1088> unit-size <integer_cst 0x7fb4dbeb2a50 136>
        align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebce00 screen_redraw_make_pane_status>>
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:218:9 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:218:9 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:218:9>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb4dc39a9d8
    type <pointer_type 0x7fb4dbebbbd0
        type <integer_type 0x7fb4dbebbb28 char readonly QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbbd0>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb4dbee3120 fmt>
    def_stmt GIMPLE_NOP
    version:12>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_2 = strlen (fmt_12(D));
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_2 = strlen (fmt_12(D));
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_2 = strlen (fmt_12(D));
./benchmarks/tmux/leak_1/tmux_leak_1.c:221:15: warning: use location
  221 |         out = malloc(strlen(fmt));                      /* allocation site */
      |               ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
out_14 = malloc (_2);
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
out_14 = malloc (_2);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
out_14 = malloc (_2);
./benchmarks/tmux/leak_1/tmux_leak_1.c:221:15: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^
this stmt is child function---screen_write_cnputs-----

 ================== trace ================== 
trace fucntion name:screen_write_cnputs 
[40;44m =======trace_function_path screen_write_cnputs  function_call count: 5 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
./benchmarks/tmux/leak_1/tmux_leak_1.c:158:9: warning: use location
  158 |         free(msg);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strcspn========= [0m
[40;46m =======add node_fun stack:strcspn========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;46m =======add node_fun stack:xvasprintf========= [0m
[40;44m =======trace_function_path xvasprintf  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
outlen_16 = screen_write_cstrlen ("%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:222:14: warning: use location
  222 |     outlen = screen_write_cstrlen("%s", out);
      |              ^
this stmt is child function---screen_write_cstrlen-----

 ================== trace ================== 
trace fucntion name:screen_write_cstrlen 
[40;44m =======trace_function_path screen_write_cstrlen  function_call count: 4 level :0========  [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
[40;31m  find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: use location
  185 |         free(msg);
      |         ^
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
[40;31m  find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
  186 |         free(msg2);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;46m =======add node_fun stack:xvasprintf========= [0m
[40;44m =======trace_function_path xvasprintf  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long int) outlen_16;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long int) outlen_16;
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_3 = (long int) outlen_16;
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dc39a9d8
    type <pointer_type 0x7fb4dbebbbd0
        type <integer_type 0x7fb4dbebbb28 char readonly QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbbd0>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb4dbee3120 fmt>
    def_stmt GIMPLE_NOP
    version:12>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:222:14: warning: Use after free error!: free location 
  222 |     outlen = screen_write_cstrlen("%s", out);
      |              ^
# .MEM_22 = VDEF <.MEM_21>
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:222:14: warning: Use after free error!: free location 
  222 |     outlen = screen_write_cstrlen("%s", out);
      |              ^
_3 = (long int) outlen_16;
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb4dc39a7e0
    type <integer_type 0x7fb4dc3a77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a7738 precision:64 min <integer_cst 0x7fb4dc392e88 0> max <integer_cst 0x7fb4dc393500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb4dc3b37e0>>
   
    def_stmt _2 = strlen (fmt_12(D));
    version:2>
# VUSE <.MEM_19>
_2 = strlen (fmt_12(D));

 ================== trace ptable================== 
trace fucntion name:strlen 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strlen-----
this other function ------strlen-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_2 = strlen (fmt_12(D));
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_2 = strlen (fmt_12(D));
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_2 = strlen (fmt_12(D));
./benchmarks/tmux/leak_1/tmux_leak_1.c:221:15: warning: use location
  221 |         out = malloc(strlen(fmt));                      /* allocation site */
      |               ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
out_14 = malloc (_2);
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
out_14 = malloc (_2);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
out_14 = malloc (_2);
./benchmarks/tmux/leak_1/tmux_leak_1.c:221:15: warning: use location
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^
this stmt is child function---screen_write_cnputs-----

 ================== trace ================== 
trace fucntion name:screen_write_cnputs 
[40;44m =======trace_function_path screen_write_cnputs  function_call count: 5 level :0========  [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
./benchmarks/tmux/leak_1/tmux_leak_1.c:158:9: warning: use location
  158 |         free(msg);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strcspn========= [0m
[40;46m =======add node_fun stack:strcspn========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;46m =======add node_fun stack:xvasprintf========= [0m
[40;44m =======trace_function_path xvasprintf  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
outlen_16 = screen_write_cstrlen ("%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:222:14: warning: use location
  222 |     outlen = screen_write_cstrlen("%s", out);
      |              ^
this stmt is child function---screen_write_cstrlen-----

 ================== trace ================== 
trace fucntion name:screen_write_cstrlen 
[40;44m =======trace_function_path screen_write_cstrlen  function_call count: 4 level :0========  [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
[40;31m  find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: use location
  185 |         free(msg);
      |         ^
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
[40;31m  find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
  186 |         free(msg2);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;46m =======add node_fun stack:xvasprintf========= [0m
[40;44m =======trace_function_path xvasprintf  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;46m =======add node_fun stack:vasprintf========= [0m

 ================== trace ================== 
trace fucntion free:3 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long int) outlen_16;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = (long int) outlen_16;
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_3 = (long int) outlen_16;
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dc39a7e0
    type <integer_type 0x7fb4dc3a77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a7738 precision:64 min <integer_cst 0x7fb4dc392e88 0> max <integer_cst 0x7fb4dc393500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb4dc3b37e0>>
   
    def_stmt _2 = strlen (fmt_12(D));
    version:2>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:222:14: warning: Use after free error!: free location 
  222 |     outlen = screen_write_cstrlen("%s", out);
      |              ^
# .MEM_22 = VDEF <.MEM_21>
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_21 = VDEF <.MEM_20>
outlen_16 = screen_write_cstrlen ("%s", out_14);
./benchmarks/tmux/leak_1/tmux_leak_1.c:222:14: warning: Use after free error!: free location 
  222 |     outlen = screen_write_cstrlen("%s", out);
      |              ^
_3 = (long int) outlen_16;
./benchmarks/tmux/leak_1/tmux_leak_1.c:224:9: warning: use location
  224 |         screen_write_cnputs(&ctx, outlen, &gc, "%s", out);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb4dc58eca0
    type <pointer_type 0x7fb4dbed3888
        type <array_type 0x7fb4dbed37e0 type <integer_type 0x7fb4dbebb9d8 char>
            BLK
            size <integer_cst 0x7fb4dc3b0060 constant 24>
            unit-size <integer_cst 0x7fb4dbeb2e10 constant 3>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fb4dbed3738>
            pointer_to_this <pointer_type 0x7fb4dbed3888>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fb4dbedd8b8 type <array_type 0x7fb4dbed37e0>
        readonly constant static "%s\000">
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:222:35 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:222:35 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:222:35>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb4dc58ece0
    type <pointer_type 0x7fb4dbec47e0
        type <record_type 0x7fb4dbec4738 screen_write_ctx BLK
            size <integer_cst 0x7fb4dc4670a8 constant 448>
            unit-size <integer_cst 0x7fb4dbeb27f8 constant 56>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dbec4738 fields <field_decl 0x7fb4dbebe5f0 wp> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec47e0>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fb4dcc3af30 ctx type <record_type 0x7fb4dbec4738 screen_write_ctx>
        addressable BLK ./benchmarks/tmux/leak_1/tmux_leak_1.c:215:27 size <integer_cst 0x7fb4dc4670a8 448> unit-size <integer_cst 0x7fb4dbeb27f8 56>
        align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebce00 screen_redraw_make_pane_status>
        chain <var_decl 0x7fb4dcc3aea0 old type <record_type 0x7fb4dbec9c78 screen>
            addressable BLK ./benchmarks/tmux/leak_1/tmux_leak_1.c:216:18
            size <integer_cst 0x7fb4dbeb2a38 constant 1088>
            unit-size <integer_cst 0x7fb4dbeb2a50 constant 136>
            align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebce00 screen_redraw_make_pane_status>>>
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:224:2 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:224:2 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:224:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb4dc39a8b8
    type <pointer_type 0x7fb4dbec69d8
        type <record_type 0x7fb4dbec6930 grid BLK
            size <integer_cst 0x7fb4dc392f18 constant 256>
            unit-size <integer_cst 0x7fb4dc3b0018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dbec6930 fields <field_decl 0x7fb4dbec8000 flags> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec69d8>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = wp_8(D)->status_screen.grid;
    version:5
    ptr-info 0x7fb4dbeddc90>
# VUSE <.MEM_22>
_5 = wp_8(D)->status_screen.grid;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_6 = grid_compare (_5, _4);
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_22>
_6 = grid_compare (_5, _4);
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_6 = grid_compare (_5, _4);
./benchmarks/tmux/leak_1/tmux_leak_1.c:226:13: warning: use location
  226 |         if (grid_compare(wp->status_screen.grid, old.grid) == 0) {
      |             ^
this stmt is child function---grid_compare-----

 ================== trace ================== 
trace fucntion name:grid_compare 
[40;44m =======trace_function_path grid_compare  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:grid_compare========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 == 0)
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (_6 == 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:226:12: warning: use location
  226 |         if (grid_compare(wp->status_screen.grid, old.grid) == 0) {
      |            ^
if (_6 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:226:12: warning: use location
Cond in fucntion screen_redraw_make_pane_status basic block 2
 ================== possible direct basic block ================= 
from screen_redraw_make_pane_status basic block 3
 ================== possible direct basic block ================= 
from screen_redraw_make_pane_status basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dc39a8b8
    type <pointer_type 0x7fb4dbec69d8
        type <record_type 0x7fb4dbec6930 grid BLK
            size <integer_cst 0x7fb4dc392f18 constant 256>
            unit-size <integer_cst 0x7fb4dc3b0018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dbec6930 fields <field_decl 0x7fb4dbec8000 flags> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec69d8>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = wp_8(D)->status_screen.grid;
    version:5
    ptr-info 0x7fb4dbeddc90>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:screen_redraw_make_pane_status========= [0m
[40;44m =======node_fun:grid_compare========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path grid_compare  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:grid_compare========= [0m
[40;42m =======start_check_funciton:grid_compare========= [0m
[40;33m =======POP node_fun stack:grid_compare========= [0m
[40;44m =======node_fun:screen_write_cstrlen========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path screen_write_cstrlen  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xvasprintf  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;33m =======POP node_fun stack:vasprintf========= [0m
[40;42m =======pre_check_funciton:xvasprintf========= [0m
[40;42m =======start_check_funciton:xvasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb4dbef09d8
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fb4dbee2600 ret>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fb4dbeddfd8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = *ret_3(D);
In function ‘screen_write_cstrlen’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:22: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
if (_1 == 0B)
In function ‘screen_write_cstrlen’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:19: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |                   ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:19: warning: use location
Cond in fucntion xvasprintf basic block 3
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
In function ‘screen_write_cstrlen’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:91:13: warning: use location
   91 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt is child function---vasprintf-----

 ================== trace ================== 
trace fucntion name:vasprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (i_7 < 0)
In function ‘screen_write_cstrlen’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:12: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |            ^
if (i_7 < 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:12: warning: use location
Cond in fucntion xvasprintf basic block 2
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dbef09d8
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fb4dbee2600 ret>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fb4dbeddfd8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb4dbef4140
    type <pointer_type 0x7fb4dbec2d20
        type <array_type 0x7fb4dbec2c78 type <integer_type 0x7fb4dbebb9d8 char>
            BLK
            size <integer_cst 0x7fb4dbeb27b0 constant 112>
            unit-size <integer_cst 0x7fb4dbeb2798 constant 14>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fb4dbec2bd0>
            pointer_to_this <pointer_type 0x7fb4dbec2d20>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fb4dbef72f8 type <array_type 0x7fb4dbec2c78>
        readonly constant static "xasprintf: %s\000">
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:xvasprintf========= [0m
[40;42m =======pre_check_funciton:screen_write_cstrlen========= [0m
[40;42m =======start_check_funciton:screen_write_cstrlen========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb4dbeec480
    type <pointer_type 0x7fb4dbebba80
        type <integer_type 0x7fb4dbebb9d8 char public QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebba80>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
        pointer_to_this <pointer_type 0x7fb4dbebbc78>>
    var <var_decl 0x7fb4dbee3750 msg2>
    def_stmt msg2_24 = malloc (_3);
    version:24
    ptr-info 0x7fb4dbedddc8>
# .MEM_42 = VDEF <.MEM_41>
msg2_24 = malloc (_3);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
bb index := 13
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 5

======================================================================
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
  186 |         free(msg2);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
bb index := 12
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
bb index := 12
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
bb index := 12
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_39>
*ptr2_17 = 0;
bb index := 13
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 5

======================================================================
*ptr2_17 = 0;
./benchmarks/tmux/leak_1/tmux_leak_1.c:183:15: warning: use location
  183 |         *ptr2 = '\0';
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*ptr2_17 = _11;
./benchmarks/tmux/leak_1/tmux_leak_1.c:181:25: warning: use location
  181 |                 *ptr2++ = *ptr++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*ptr2_17 = _11;
./benchmarks/tmux/leak_1/tmux_leak_1.c:181:25: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr2_37 = ptr2_17 + 1;
./benchmarks/tmux/leak_1/tmux_leak_1.c:181:22: warning: use location
  181 |                 *ptr2++ = *ptr++;
      |                      ^
msg2_24 = malloc (_3);
./benchmarks/tmux/leak_1/tmux_leak_1.c:169:16: warning: use location
  169 |         msg2 = xmalloc(strlen(msg) + 1);
      |                ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dbeec480
    type <pointer_type 0x7fb4dbebba80
        type <integer_type 0x7fb4dbebb9d8 char public QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebba80>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
        pointer_to_this <pointer_type 0x7fb4dbebbc78>>
    var <var_decl 0x7fb4dbee3750 msg2>
    def_stmt msg2_24 = malloc (_3);
    version:24
    ptr-info 0x7fb4dbedddc8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: use location
  185 |         free(msg);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
  186 |         free(msg2);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: Use after free error!: free location 
  185 |         free(msg);
      |         ^
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
  186 |         free(msg2);
      |         ^
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
  186 |         free(msg2);
      |         ^
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: Use after free error!: free location 
  185 |         free(msg);
      |         ^
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
  186 |         free(msg2);
      |         ^
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <addr_expr 0x7fb4dc58ee40
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fb4dbee37e0 msg type <pointer_type 0x7fb4dbebba80>
        addressable unsigned DI ./benchmarks/tmux/leak_1/tmux_leak_1.c:165:10 size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebcc00 screen_write_cstrlen>
        chain <var_decl 0x7fb4dbee3750 msg2 type <pointer_type 0x7fb4dbebba80>
            unsigned DI ./benchmarks/tmux/leak_1/tmux_leak_1.c:165:16 size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebcc00 screen_write_cstrlen> chain <var_decl 0x7fb4dbee36c0 ptr>>>
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:168:2 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:168:2 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:168:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb4dc39af78
    type <pointer_type 0x7fb4dbebba80
        type <integer_type 0x7fb4dbebb9d8 char public QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebba80>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
        pointer_to_this <pointer_type 0x7fb4dbebbc78>>
   
    def_stmt _1 = msg;
    version:1
    ptr-info 0x7fb4dbeddd08>
# VUSE <.MEM_41>
_1 = msg;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_2 = strlen (_1);
./benchmarks/tmux/leak_1/tmux_leak_1.c:169:16: warning: use location
  169 |         msg2 = xmalloc(strlen(msg) + 1);
      |                ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_2 = strlen (_1);
./benchmarks/tmux/leak_1/tmux_leak_1.c:169:16: warning: use location
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dc39af78
    type <pointer_type 0x7fb4dbebba80
        type <integer_type 0x7fb4dbebb9d8 char public QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dbeb2720 -128> max <integer_cst 0x7fb4dbeb2708 127> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebba80>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
        pointer_to_this <pointer_type 0x7fb4dbebbc78>>
   
    def_stmt _1 = msg;
    version:1
    ptr-info 0x7fb4dbeddd08>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: use location
  185 |         free(msg);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
  186 |         free(msg2);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb4dbeec000
    type <integer_type 0x7fb4dc3a77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a7738 precision:64 min <integer_cst 0x7fb4dc392e88 0> max <integer_cst 0x7fb4dc393500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb4dc3b37e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
_3 = _2 + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
msg2_24 = malloc (_3);
./benchmarks/tmux/leak_1/tmux_leak_1.c:169:16: warning: use location
  169 |         msg2 = xmalloc(strlen(msg) + 1);
      |                ^
this stmt is child function---malloc-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
bb index := 13
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 5

======================================================================
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
  186 |         free(msg2);
      |         ^
this stmt is child function---free-----

 ================== find ================== 
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
bb index := 12
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
bb index := 12
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
bb index := 12
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_39>
*ptr2_17 = 0;
bb index := 13
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 5

======================================================================
*ptr2_17 = 0;
./benchmarks/tmux/leak_1/tmux_leak_1.c:183:15: warning: use location
  183 |         *ptr2 = '\0';
      |               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*ptr2_17 = _11;
./benchmarks/tmux/leak_1/tmux_leak_1.c:181:25: warning: use location
  181 |                 *ptr2++ = *ptr++;
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*ptr2_17 = _11;
./benchmarks/tmux/leak_1/tmux_leak_1.c:181:25: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr2_37 = ptr2_17 + 1;
./benchmarks/tmux/leak_1/tmux_leak_1.c:181:22: warning: use location
  181 |                 *ptr2++ = *ptr++;
      |                      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dbeec000
    type <integer_type 0x7fb4dc3a77e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a7738 precision:64 min <integer_cst 0x7fb4dc392e88 0> max <integer_cst 0x7fb4dc393500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fb4dc3b37e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: use location
  185 |         free(msg);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: use location
  186 |         free(msg2);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: Use after free error!: free location 
  185 |         free(msg);
      |         ^
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
  186 |         free(msg2);
      |         ^
ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
  186 |         free(msg2);
      |         ^
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_44 = VDEF <.MEM_43>
free (_13);
./benchmarks/tmux/leak_1/tmux_leak_1.c:185:9: warning: Use after free error!: free location 
  185 |         free(msg);
      |         ^
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_45 = VDEF <.MEM_44>
free (msg2_24);
./benchmarks/tmux/leak_1/tmux_leak_1.c:186:9: warning: Use after free error!: free location 
  186 |         free(msg2);
      |         ^
ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=succs:= 12
if (_12 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:173:21: warning: use location
  173 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:screen_write_cstrlen========= [0m
[40;44m =======node_fun:screen_write_cnputs========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path screen_write_cnputs  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strcspn========= [0m
[40;33m =======POP node_fun stack:strcspn========= [0m
[40;42m =======pre add _ fucntion:xvasprintf========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xvasprintf  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;33m =======POP node_fun stack:vasprintf========= [0m
[40;42m =======pre_check_funciton:xvasprintf========= [0m
[40;42m =======start_check_funciton:xvasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb4dbef09d8
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fb4dbee2600 ret>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fb4dbeddfd8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = *ret_3(D);
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:22: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
if (_1 == 0B)
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:19: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |                   ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:19: warning: use location
Cond in fucntion xvasprintf basic block 3
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:91:13: warning: use location
   91 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt is child function---vasprintf-----

 ================== trace ================== 
trace fucntion name:vasprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (i_7 < 0)
In function ‘screen_write_cnputs’:
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:12: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |            ^
if (i_7 < 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:12: warning: use location
Cond in fucntion xvasprintf basic block 2
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dbef09d8
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fb4dbee2600 ret>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fb4dbeddfd8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb4dbef4140
    type <pointer_type 0x7fb4dbec2d20
        type <array_type 0x7fb4dbec2c78 type <integer_type 0x7fb4dbebb9d8 char>
            BLK
            size <integer_cst 0x7fb4dbeb27b0 constant 112>
            unit-size <integer_cst 0x7fb4dbeb2798 constant 14>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fb4dbec2bd0>
            pointer_to_this <pointer_type 0x7fb4dbec2d20>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fb4dbef72f8 type <array_type 0x7fb4dbec2c78>
        readonly constant static "xasprintf: %s\000">
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:xvasprintf========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre_check_funciton:screen_write_cnputs========= [0m
[40;42m =======start_check_funciton:screen_write_cnputs========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fb4dc58ef80
    type <pointer_type 0x7fb4dbec60a8
        type <record_type 0x7fb4dbec4bd0 grid_cell BLK
            size <integer_cst 0x7fb4dc3b0078 constant 192>
            unit-size <integer_cst 0x7fb4dc3b0048 constant 24>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dbec4bd0 fields <field_decl 0x7fb4dbebeb48 flags> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec60a8>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fb4dbee3ea0 gc type <record_type 0x7fb4dbec4bd0 grid_cell>
        addressable BLK ./benchmarks/tmux/leak_1/tmux_leak_1.c:104:20 size <integer_cst 0x7fb4dc3b0078 192> unit-size <integer_cst 0x7fb4dc3b0048 24>
        align:32 warn_if_not_align:0 context <function_decl 0x7fb4dbebcb00 screen_write_cnputs>
        chain <var_decl 0x7fb4dbee3e10 msg type <pointer_type 0x7fb4dbebba80>
            addressable unsigned DI ./benchmarks/tmux/leak_1/tmux_leak_1.c:106:10 size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebcb00 screen_write_cnputs> chain <var_decl 0x7fb4dbee3d80 ptr>>>
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:111:9 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:111:9 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:111:9>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb4dc58efc0
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fb4dbee3e10 msg type <pointer_type 0x7fb4dbebba80>
        addressable unsigned DI ./benchmarks/tmux/leak_1/tmux_leak_1.c:106:10 size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebcb00 screen_write_cnputs>
        chain <var_decl 0x7fb4dbee3d80 ptr type <pointer_type 0x7fb4dbec4e70>
            unsigned DI ./benchmarks/tmux/leak_1/tmux_leak_1.c:107:13 size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7fb4dbebcb00 screen_write_cnputs> chain <var_decl 0x7fb4dbee3cf0 last>>>
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:113:2 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:113:2 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:113:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb4dbef03a8
    type <pointer_type 0x7fb4dbec4e70
        type <integer_type 0x7fb4dbec4930 u_char public unsigned QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dc392cd8 0> max <integer_cst 0x7fb4dc392c78 255> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec4e70>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb4dbee3d80 ptr>
    def_stmt ptr_38 = ptr_24 + 2;
    version:38
    ptr-info 0x7fb4dbeddf30>
ptr_38 = ptr_24 + 2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_4 = strcspn (ptr_38, "]");
bb index := 5
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_4 = strcspn (ptr_38, "]");
bb index := 5
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = strcspn (ptr_38, "]");
./benchmarks/tmux/leak_1/tmux_leak_1.c:119:38: warning: use location
  119 |                         last = ptr + strcspn(ptr, "]");
      |                                      ^
this stmt is child function---strcspn-----

 ================== trace ================== 
trace fucntion name:strcspn 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
last_39 = ptr_38 + _4;
bb index := 5
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
last_39 = ptr_38 + _4;
bb index := 5
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
last_39 = ptr_38 + _4;
./benchmarks/tmux/leak_1/tmux_leak_1.c:119:30: warning: use location
  119 |                         last = ptr + strcspn(ptr, "]");
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_41 = last_39 + 1;
bb index := 6
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_41 = last_39 + 1;
bb index := 6
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_41 = last_39 + 1;
./benchmarks/tmux/leak_1/tmux_leak_1.c:126:29: warning: use location
  126 |                         ptr = last + 1;
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_2 = PHI <ptr_41(6), ptr_47(10), ptr_47(15), ptr_44(20)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_24 = PHI <ptr_37(2), ptr_2(21)>
bb index := 22
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_24 = PHI <ptr_37(2), ptr_2(21)>
bb index := 22
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_24 = PHI <ptr_37(2), ptr_2(21)>
bb index := 22
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_24 = PHI <ptr_37(2), ptr_2(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_22 = *ptr_24;
bb index := 22
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_22 = *ptr_24;
bb index := 22
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_22 = *ptr_24;
bb index := 22
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_22 = *ptr_24;
./benchmarks/tmux/leak_1/tmux_leak_1.c:116:16: warning: use location
  116 |         while (*ptr != '\0') {
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 != 0)
bb index := 22
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 != 0)
bb index := 22
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 != 0)
bb index := 22
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_22 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:116:21: warning: use location
  116 |         while (*ptr != '\0') {
      |                     ^
if (_22 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:116:21: warning: use location
Cond in fucntion screen_write_cnputs basic block 22
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 3
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_44 = ptr_24 + 1;
./benchmarks/tmux/leak_1/tmux_leak_1.c:154:28: warning: use location
  154 |                         ptr++;
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_20 = *ptr_24;
bb index := 18
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_20 = *ptr_24;
bb index := 18
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_20 = *ptr_24;
./benchmarks/tmux/leak_1/tmux_leak_1.c:151:29: warning: use location
  151 |                         if (*ptr > 0x1f && *ptr < 0x7f) {
      |                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_47 = &MEM <u_char> [(void *)ptr_24 + 2B];
bb index := 9
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_47 = &MEM <u_char> [(void *)ptr_24 + 2B];
bb index := 9
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_47 = &MEM <u_char> [(void *)ptr_24 + 2B];
./benchmarks/tmux/leak_1/tmux_leak_1.c:136:28: warning: use location
  136 |                         ptr++;
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_45 = ptr_24 + 1;
bb index := 8
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_45 = ptr_24 + 1;
bb index := 8
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_45 = ptr_24 + 1;
./benchmarks/tmux/leak_1/tmux_leak_1.c:131:28: warning: use location
  131 |                         ptr++;
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
left_46 = strlen (ptr_45);
bb index := 8
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
left_46 = strlen (ptr_45);
bb index := 8
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
left_46 = strlen (ptr_45);
./benchmarks/tmux/leak_1/tmux_leak_1.c:133:32: warning: use location
  133 |                         left = strlen(ptr);
      |                                ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = *ptr_24;
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:21: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_7 = (signed char) _6;
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:26: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
if (_7 < 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
Cond in fucntion screen_write_cnputs basic block 7
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 8
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_38 = ptr_24 + 2;
bb index := 5
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ptr_38 = ptr_24 + 2;
bb index := 5
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
ptr_38 = ptr_24 + 2;
./benchmarks/tmux/leak_1/tmux_leak_1.c:118:29: warning: use location
  118 |                         ptr += 2;
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = MEM[(u_char *)ptr_24 + 1B];
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:41: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
if (_3 == 91)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
Cond in fucntion screen_write_cnputs basic block 4
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 5
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_1 = *ptr_24;
bb index := 3
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_1 = *ptr_24;
bb index := 3
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = *ptr_24;
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:24: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 35)
bb index := 3
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 35)
bb index := 3
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
if (_1 == 35)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
Cond in fucntion screen_write_cnputs basic block 3
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 4
 ================== possible direct basic block ================= 
from screen_write_cnputs basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_52>
*last_39 = 0;
bb index := 6
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_52>
*last_39 = 0;
bb index := 6
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*last_39 = 0;
./benchmarks/tmux/leak_1/tmux_leak_1.c:124:31: warning: use location
  124 |                         *last = '\0';
      |                               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dbef03a8
    type <pointer_type 0x7fb4dbec4e70
        type <integer_type 0x7fb4dbec4930 u_char public unsigned QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dc392cd8 0> max <integer_cst 0x7fb4dc392c78 255> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec4e70>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb4dbee3d80 ptr>
    def_stmt ptr_38 = ptr_24 + 2;
    version:38
    ptr-info 0x7fb4dbeddf30>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
./benchmarks/tmux/leak_1/tmux_leak_1.c:158:9: warning: use location
  158 |         free(msg);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
./benchmarks/tmux/leak_1/tmux_leak_1.c:158:9: warning: Use after free error!: free location 
ptr_2 = PHI <ptr_41(6), ptr_47(10), ptr_47(15), ptr_44(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
if (_5 == 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:120:28: warning: use location
  120 |                         if (*last == '\0') {
      |                            ^
	relate logic:= 1
succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
if (_10 > left_46)
./benchmarks/tmux/leak_1/tmux_leak_1.c:134:28: warning: use location
  134 |                         if (left < (size_t)ud->size - 1)
      |                            ^
	relate logic:= 1
succs:= 7
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
	relate logic:= 0
succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 14
if (_15 > size_25)
./benchmarks/tmux/leak_1/tmux_leak_1.c:141:45: warning: use location
  141 |                                 while (size < (size_t)maxlen) {
      |                                             ^
	relate logic:= 0
=succs:= 12
if (_13 > _14)
./benchmarks/tmux/leak_1/tmux_leak_1.c:140:40: warning: use location
  140 |                         if (maxlen > 0 && size + ud->width > (size_t)maxlen) {
      |                                        ^
	relate logic:= 1
=succs:= 11
if (maxlen_42(D) > 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:140:28: warning: use location
  140 |                         if (maxlen > 0 && size + ud->width > (size_t)maxlen) {
      |                            ^
	relate logic:= 0
=succs:= 10
// predicted unlikely by continue predictor.
./benchmarks/tmux/leak_1/tmux_leak_1.c:138:28: warning: use location
  138 |                         if (more != UTF8_DONE)
      |                            ^
	relate logic:= 1
=succs:= 9
if (more_48(D) != 1)
./benchmarks/tmux/leak_1/tmux_leak_1.c:138:28: warning: use location
	relate logic:= 0
=succs:= 8
if (_10 > left_46)
./benchmarks/tmux/leak_1/tmux_leak_1.c:134:28: warning: use location
  134 |                         if (left < (size_t)ud->size - 1)
      |                            ^
	relate logic:= 1
=succs:= 7
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
	relate logic:= 0
=succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
=succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 17
if (_18 > _19)
./benchmarks/tmux/leak_1/tmux_leak_1.c:148:40: warning: use location
  148 |                         if (maxlen > 0 && size + 1 > (size_t)maxlen)
      |                                        ^
	relate logic:= 1
succs:= 16
if (maxlen_42(D) > 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:148:28: warning: use location
  148 |                         if (maxlen > 0 && size + 1 > (size_t)maxlen)
      |                            ^
	relate logic:= 0
succs:= 7
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
	relate logic:= 0
succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 22
if (_22 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:116:21: warning: use location
  116 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
./benchmarks/tmux/leak_1/tmux_leak_1.c:158:9: warning: Use after free error!: free location 
  158 |         free(msg);
      |         ^
ptr_24 = PHI <ptr_37(2), ptr_2(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

succs:= 5
if (_5 == 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:120:28: warning: use location
  120 |                         if (*last == '\0') {
      |                            ^
	relate logic:= 1
succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 8
if (_10 > left_46)
./benchmarks/tmux/leak_1/tmux_leak_1.c:134:28: warning: use location
  134 |                         if (left < (size_t)ud->size - 1)
      |                            ^
	relate logic:= 1
succs:= 7
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
	relate logic:= 0
succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 14
if (_15 > size_25)
./benchmarks/tmux/leak_1/tmux_leak_1.c:141:45: warning: use location
  141 |                                 while (size < (size_t)maxlen) {
      |                                             ^
	relate logic:= 0
=succs:= 12
if (_13 > _14)
./benchmarks/tmux/leak_1/tmux_leak_1.c:140:40: warning: use location
  140 |                         if (maxlen > 0 && size + ud->width > (size_t)maxlen) {
      |                                        ^
	relate logic:= 1
=succs:= 11
if (maxlen_42(D) > 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:140:28: warning: use location
  140 |                         if (maxlen > 0 && size + ud->width > (size_t)maxlen) {
      |                            ^
	relate logic:= 0
=succs:= 10
// predicted unlikely by continue predictor.
./benchmarks/tmux/leak_1/tmux_leak_1.c:138:28: warning: use location
  138 |                         if (more != UTF8_DONE)
      |                            ^
	relate logic:= 1
=succs:= 9
if (more_48(D) != 1)
./benchmarks/tmux/leak_1/tmux_leak_1.c:138:28: warning: use location
	relate logic:= 0
=succs:= 8
if (_10 > left_46)
./benchmarks/tmux/leak_1/tmux_leak_1.c:134:28: warning: use location
  134 |                         if (left < (size_t)ud->size - 1)
      |                            ^
	relate logic:= 1
=succs:= 7
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
	relate logic:= 0
=succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
=succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

succs:= 17
if (_18 > _19)
./benchmarks/tmux/leak_1/tmux_leak_1.c:148:40: warning: use location
  148 |                         if (maxlen > 0 && size + 1 > (size_t)maxlen)
      |                                        ^
	relate logic:= 1
succs:= 16
if (maxlen_42(D) > 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:148:28: warning: use location
  148 |                         if (maxlen > 0 && size + 1 > (size_t)maxlen)
      |                            ^
	relate logic:= 0
succs:= 7
if (_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:130:20: warning: use location
  130 |                 if (*ptr > 0x7f) {
      |                    ^
	relate logic:= 0
succs:= 4
if (_3 == 91)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:35: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                                   ^
	relate logic:= 1
succs:= 3
if (_1 == 35)
./benchmarks/tmux/leak_1/tmux_leak_1.c:117:20: warning: use location
  117 |                 if (ptr[0] == '#' && ptr[1] == '[') {
      |                    ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 22
if (_22 != 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:116:21: warning: use location
  116 |         while (*ptr != '\0') {
      |                     ^
	relate logic:= 0
=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb4dbef0558
    type <pointer_type 0x7fb4dbec4e70
        type <integer_type 0x7fb4dbec4930 u_char public unsigned QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dc392cd8 0> max <integer_cst 0x7fb4dc392c78 255> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec4e70>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb4dbee3d80 ptr>
    def_stmt ptr_45 = ptr_24 + 1;
    version:45
    ptr-info 0x7fb4dbeddf90>
ptr_45 = ptr_24 + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
left_46 = strlen (ptr_45);
bb index := 8
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
left_46 = strlen (ptr_45);
bb index := 8
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
left_46 = strlen (ptr_45);
./benchmarks/tmux/leak_1/tmux_leak_1.c:133:32: warning: use location
  133 |                         left = strlen(ptr);
      |                                ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
left_46 = strlen (ptr_45);
bb index := 8
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
  188 |         return (size);
      |                ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_46>
return size_30(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:188:16: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
left_46 = strlen (ptr_45);
bb index := 8
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
  159 | }
      | ^
beacuse in succ := 23 have return or exit
# VUSE <.MEM_59>
return;
./benchmarks/tmux/leak_1/tmux_leak_1.c:159:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 23

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
left_46 = strlen (ptr_45);
./benchmarks/tmux/leak_1/tmux_leak_1.c:133:32: warning: use location
  133 |                         left = strlen(ptr);
      |                                ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dbef0558
    type <pointer_type 0x7fb4dbec4e70
        type <integer_type 0x7fb4dbec4930 u_char public unsigned QI
            size <integer_cst 0x7fb4dc392ca8 constant 8>
            unit-size <integer_cst 0x7fb4dc392cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fb4dc3a73f0 precision:8 min <integer_cst 0x7fb4dc392cd8 0> max <integer_cst 0x7fb4dc392c78 255> context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbec4e70>>
        public unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fb4dbee3d80 ptr>
    def_stmt ptr_45 = ptr_24 + 1;
    version:45
    ptr-info 0x7fb4dbeddf90>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_52>
free (_23);
./benchmarks/tmux/leak_1/tmux_leak_1.c:158:9: warning: use location
  158 |         free(msg);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:screen_write_cnputs========= [0m
[40;44m =======node_fun:xvasprintf========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path xvasprintf  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:vasprintf========= [0m
[40;33m =======POP node_fun stack:vasprintf========= [0m
[40;42m =======pre_check_funciton:xvasprintf========= [0m
[40;42m =======start_check_funciton:xvasprintf========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb4dbef09d8
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fb4dbee2600 ret>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fb4dbeddfd8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_25>
return _7;
In function ‘xvasprintf’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_9>
_1 = *ret_3(D);
bb index := 3
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
_1 = *ret_3(D);
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:22: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0B)
bb index := 3
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
if (_1 == 0B)
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:19: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |                   ^
if (_1 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:19: warning: use location
Cond in fucntion xvasprintf basic block 3
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
bb index := 2
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
./benchmarks/tmux/leak_1/tmux_leak_1.c:91:13: warning: use location
   91 |         i = vasprintf(ret, fmt, ap);
      |             ^
this stmt is child function---vasprintf-----

 ================== trace ================== 
trace fucntion name:vasprintf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9(D)>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (i_7 < 0)
bb index := 2
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
   96 |         return i;
      |                ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return i_7;
./benchmarks/tmux/leak_1/tmux_leak_1.c:96:16: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (i_7 < 0)
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:12: warning: use location
   93 |         if (i < 0 || *ret == NULL)
      |            ^
if (i_7 < 0)

 ================== find cond branch ================= 
./benchmarks/tmux/leak_1/tmux_leak_1.c:93:12: warning: use location
Cond in fucntion xvasprintf basic block 2
 ================== possible direct basic block ================= 
from xvasprintf basic block 4
 ================== possible direct basic block ================= 
from xvasprintf basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb4dbef09d8
    type <pointer_type 0x7fb4dbebbc78
        type <pointer_type 0x7fb4dbebba80 type <integer_type 0x7fb4dbebb9d8 char>
            public unsigned DI
            size <integer_cst 0x7fb4dc392bb8 constant 64>
            unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fb4dc39d168 ./benchmarks/tmux/leak_1/tmux_leak_1.c>
            pointer_to_this <pointer_type 0x7fb4dbebbc78>>
        public unsigned DI size <integer_cst 0x7fb4dc392bb8 64> unit-size <integer_cst 0x7fb4dc392bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fb4dbee2600 ret>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7fb4dbeddfd8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb4dbef4140
    type <pointer_type 0x7fb4dbec2d20
        type <array_type 0x7fb4dbec2c78 type <integer_type 0x7fb4dbebb9d8 char>
            BLK
            size <integer_cst 0x7fb4dbeb27b0 constant 112>
            unit-size <integer_cst 0x7fb4dbeb2798 constant 14>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fb4dbec2bd0>
            pointer_to_this <pointer_type 0x7fb4dbec2d20>>
        unsigned DI
        size <integer_cst 0x7fb4dc392bb8 constant 64>
        unit-size <integer_cst 0x7fb4dc392bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fb4dbef72f8 type <array_type 0x7fb4dbec2c78>
        readonly constant static "xasprintf: %s\000">
    ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3 start: ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3 finish: ./benchmarks/tmux/leak_1/tmux_leak_1.c:94:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:xvasprintf========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
screen_redraw_make_pane_status (&c, &w, &wp);
c ={v} {CLOBBER};
w ={v} {CLOBBER};
wp ={v} {CLOBBER};
return 0;

=======Mapping node_fun:screen_redraw_make_pane_status=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = &wp_8(D)->status_screen;
memcpy (&old, _1, 136);
wp_8(D)->status_screen.mode = 0;
_2 = strlen (fmt_12(D));
out_14 = malloc (_2);
outlen_16 = screen_write_cstrlen ("%s", out_14);
_3 = (long int) outlen_16;
screen_write_cnputs (&ctx, _3, &gc, "%s", out_14);
_4 = old.grid;
_5 = wp_8(D)->status_screen.grid;
_6 = grid_compare (_5, _4);
if (_6 == 0)
  goto <bb 3>; [34.00%]
else
  goto <bb 4>; [66.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 365072224]:

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _7 = PHI <1(2), 0(3)>
gc ={v} {CLOBBER};
ctx ={v} {CLOBBER};
old ={v} {CLOBBER};
return _7;

=======Mapping node_fun:grid_compare=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = ga_7(D)->sx;
_2 = gb_8(D)->sx;
if (_1 != _2)
  goto <bb 4>; [50.00%]
else
  goto <bb 3>; [50.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 536870913]:
_3 = ga_7(D)->sy;
_4 = gb_8(D)->sy;
if (_3 != _4)
  goto <bb 4>; [50.00%]
else
  goto <bb 5>; [50.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 805306369]:

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# _5 = PHI <0(3), 1(4)>
return _5;

=======Mapping node_fun:screen_write_cstrlen=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
xvasprintf (&msg, fmt_20(D), ap_21(D));
_1 = msg;
_2 = strlen (_1);
_3 = _2 + 1;
msg2_24 = malloc (_3);
ptr_25 = msg;
goto <bb 12>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_4 = *ptr_16;
if (_4 == 35)
  goto <bb 4>; [34.00%]
else
  goto <bb 10>; [66.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 324914280]:
_5 = MEM[(char *)ptr_16 + 1B];
if (_5 == 91)
  goto <bb 6>; [8.58%]
else
  goto <bb 10>; [91.42%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 225555493]:
ptr_35 = ptr_14 + 1;

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 253433138]:
# ptr_14 = PHI <ptr_16(4), ptr_35(5)>
_33 = *ptr_14;
_6 = _33 != 93;
_7 = _33 != 0;
_8 = _6 & _7;
if (_8 != 0)
  goto <bb 5>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 27877645]:
_9 = *ptr_14;
if (_9 == 93)
  goto <bb 8>; [34.00%]
else
  goto <bb 9>; [66.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 9478399]:
ptr_34 = ptr_14 + 1;

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 27877645]:
# ptr_15 = PHI <ptr_14(7), ptr_34(8)>
// predicted unlikely by continue predictor.
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 927752580]:
ptr_36 = ptr_16 + 1;
ptr2_37 = ptr2_17 + 1;
_11 = *ptr_16;
*ptr2_17 = _11;

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 955630225]:
# ptr_26 = PHI <ptr_15(9), ptr_36(10)>
# ptr2_31 = PHI <ptr2_17(9), ptr2_37(10)>

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 1073741824]:
# ptr_16 = PHI <ptr_25(2), ptr_26(11)>
# ptr2_17 = PHI <msg2_24(2), ptr2_31(11)>
_12 = *ptr_16;
if (_12 != 0)
  goto <bb 3>; [89.00%]
else
  goto <bb 13>; [11.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 118111600]:
*ptr2_17 = 0;
_13 = msg;
free (_13);
free (msg2_24);
msg ={v} {CLOBBER};
return size_30(D);

=======Mapping node_fun:screen_write_cnputs=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 122916664]:
memcpy (&gc, gcp_32(D), 24);
xvasprintf (&msg, fmt_34(D), ap_35(D));
ptr_37 = msg;
goto <bb 22>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 1050119505]:
_1 = *ptr_24;
if (_1 == 35)
  goto <bb 4>; [34.00%]
else
  goto <bb 7>; [66.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 357040635]:
_3 = MEM[(u_char *)ptr_24 + 1B];
if (_3 == 91)
  goto <bb 5>; [34.00%]
else
  goto <bb 7>; [66.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 121393817]:
ptr_38 = ptr_24 + 2;
_4 = strcspn (ptr_38, "]");
last_39 = ptr_38 + _4;
_5 = *last_39;
if (_5 == 0)
  goto <bb 23>; [67.00%]
else
  goto <bb 6>; [33.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 40059959]:
*last_39 = 0;
ptr_41 = last_39 + 1;
// predicted unlikely by continue predictor.
goto <bb 21>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 928725687]:
_6 = *ptr_24;
_7 = (signed char) _6;
if (_7 < 0)
  goto <bb 8>; [41.00%]
else
  goto <bb 16>; [59.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 380777528]:
ptr_45 = ptr_24 + 1;
left_46 = strlen (ptr_45);
_8 = MEM[(struct utf8_data *)&gc + 12B].size;
_9 = (long unsigned int) _8;
_10 = _9 + 18446744073709551615;
if (_10 > left_46)
  goto <bb 23>; [2.20%]
else
  goto <bb 9>; [97.80%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 372400423]:
ptr_47 = &MEM <u_char> [(void *)ptr_24 + 2B];
if (more_48(D) != 1)
  goto <bb 10>; [48.88%]
else
  goto <bb 11>; [51.12%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 182029325]:
// predicted unlikely by continue predictor.
goto <bb 21>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 190371097]:
if (maxlen_42(D) > 0)
  goto <bb 12>; [59.00%]
else
  goto <bb 15>; [41.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 112318948]:
_11 = MEM[(struct utf8_data *)&gc + 12B].width;
_12 = (long unsigned int) _11;
_13 = _12 + size_27;
_14 = (long unsigned int) maxlen_42(D);
if (_13 > _14)
  goto <bb 14>; [2.20%]
else
  goto <bb 15>; [97.80%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 19992773]:
size_49 = size_25 + 1;

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 22463790]:
# size_25 = PHI <size_27(12), size_49(13)>
_15 = (long unsigned int) maxlen_42(D);
if (_15 > size_25)
  goto <bb 13>; [89.00%]
else
  goto <bb 23>; [11.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 187900080]:
_16 = MEM[(struct utf8_data *)&gc + 12B].width;
_17 = (long unsigned int) _16;
size_50 = _17 + size_27;
goto <bb 21>; [100.00%]

=======is loop:1=========

 bb index 16 
<bb 16> [local count: 547948159]:
if (maxlen_42(D) > 0)
  goto <bb 17>; [59.00%]
else
  goto <bb 18>; [41.00%]

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 323289415]:
_18 = size_27 + 1;
_19 = (long unsigned int) maxlen_42(D);
if (_18 > _19)
  goto <bb 23>; [2.20%]
else
  goto <bb 18>; [97.80%]

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 540835792]:
_20 = *ptr_24;
_21 = _20 + 224;
if (_21 <= 94)
  goto <bb 19>; [50.00%]
else
  goto <bb 20>; [50.00%]

=======is loop:1=========

 bb index 19 
<bb 19> [local count: 270417896]:
size_43 = size_27 + 1;

=======is loop:1=========

 bb index 20 
<bb 20> [local count: 540835792]:
# size_26 = PHI <size_27(18), size_43(19)>
ptr_44 = ptr_24 + 1;

=======is loop:1=========

 bb index 21 
<bb 21> [local count: 950825158]:
# ptr_2 = PHI <ptr_41(6), ptr_47(10), ptr_47(15), ptr_44(20)>
# size_29 = PHI <size_27(6), size_27(10), size_50(15), size_26(20)>

=======is loop:1=========

 bb index 22 
<bb 22> [local count: 1073741824]:
# ptr_24 = PHI <ptr_37(2), ptr_2(21)>
# size_27 = PHI <0(2), size_29(21)>
_22 = *ptr_24;
if (_22 != 0)
  goto <bb 3>; [97.80%]
else
  goto <bb 23>; [2.20%]

=======is loop:0=========

 bb index 23 
<bb 23> [local count: 122916667]:
_23 = msg;
free (_23);
gc ={v} {CLOBBER};
msg ={v} {CLOBBER};
return;

=======Mapping node_fun:xvasprintf=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
i_7 = vasprintf (ret_3(D), fmt_4(D), ap_5(D));
if (i_7 < 0)
  goto <bb 4>; [0.04%]
else
  goto <bb 3>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 1073312329]:
_1 = *ret_3(D);
if (_1 == 0B)
  goto <bb 4>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 858820]:
printf ("xasprintf: %s", "");
exit (1);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1072883005]:
return i_7;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 2 [0m
[40;34m    gimple free   count : 3 [0m
[40;34m    find Entry point : 10 [0m
[40;34m    used_stmt array stack totalsize of : 0.001592 mb[0m
[40;34m    collect time: : 0.000215 s [0m
[40;34m    algorithm time: 0.181013 s [0m
[40;34m    gimple stmt count : : 122 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt                           |      |      |      |      |     -0.3%|     -0.3%|
ch                               |      |      |      |      |     +3.2%|     -0.3%|
cplxlower                        |      |      |      |      |     +3.4%|     +0.0%|
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -3.0%|     -0.9%|
copyprop                         |      |    +1|      |      |     -3.1%|     -0.9%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                              |      |      |      |      |          |     -0.2%|
walloca                          |      |      |      |      |          |     -0.2%|
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
loop                 ------------|      |      |      |      |          |          |
loopinit                         |      |      |      |      |    -34.3%|    -74.3%|
sccp                 ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
ivcanon              ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
cunroll              ------------|      |      |      |      |          |          |
ivopts               ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
loopdone             ------------|      |      |      |      |          |          |
no_loop                          |      |      |      |      |    +52.2%|   +288.7%|
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     +0.6%|     -0.1%|
strlen                           |      |      |      |      |     +0.6%|     -0.1%|
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                            |      |      |      |      |     -0.3%|     -0.0%|
forwprop                         |      |      |      |      |     -0.3%|     -0.0%|
phiopt                           |      |      |      |      |     -0.3%|     -0.1%|
fab                              |      |      |      |      |     -0.3%|     -0.1%|
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +77.6%|    +61.1%|
into_cfglayout                   |      |      |      |      |     -1.3%|     -0.3%|
jump                             |      |      |      |      |     -1.8%|     -0.9%|
subreg1                          |      |      |      |      |     -0.5%|     -0.6%|
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -2.0%|     -1.9%|
ce1                              |      |      |      |      |     -2.0%|     -1.8%|
reginfo                          |      |      |      |      |          |     +0.1%|
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant      ------------|      |      |      |      |          |          |
loop2_done           ------------|      |      |      |      |          |          |
dse1                 ------------|      |      |      |      |          |          |
fwprop2              ------------|      |      |      |      |          |          |
init-regs                        |      |      |      |      |     +0.5%|     +0.4%|
combine                          |      |      |      |      |     -1.8%|     +1.6%|
ce2                              |      |    +1|      |      |     -2.3%|     +1.2%|
outof_cfglayout                  |      |      |      |      |     +1.0%|     +0.2%|
split1                           |      |      |      |      |     +1.0%|     +0.2%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                              |      |      |      |      |     -0.6%|     -0.6%|
reload                           |      |      |      |      |     -8.3%|     -9.7%|
postreload                       |      |      |      |      |     -8.3%|    -10.1%|
split2                           |      |      |      |      |     +0.6%|     +0.5%|
cmpelim                          |      |      |      |      |     +0.6%|     +0.5%|
pro_and_epilogue                 |      |      |      |      |     +6.5%|     +5.4%|
dse2                             |      |      |      |      |     +6.1%|     +5.1%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg                    |      |      |      |      |     -0.3%|     -0.6%|
rtl_dce                          |      |      |      |      |     -0.3%|     -0.6%|
bbro                             |      |      |      |      |     +0.2%|     +0.1%|
split4                           |      |      |      |      |     +0.2%|     +0.1%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
