./benchmarks/tmux/double_free_3/tmux_df_3.c: In function â€˜cmd_string_stringâ€™:
./benchmarks/tmux/double_free_3/tmux_df_3.c:93:33: warning: implicit declaration of function â€˜strlenâ€™ [-Wimplicit-function-declaration]
    buf = xrealloc(buf, 1, len + strlen(t) + 1);
                                 ^~~~~~
./benchmarks/tmux/double_free_3/tmux_df_3.c:93:33: warning: incompatible implicit declaration of built-in function â€˜strlenâ€™
./benchmarks/tmux/double_free_3/tmux_df_3.c:93:33: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strlenâ€™
./benchmarks/tmux/double_free_3/tmux_df_3.c:94:4: warning: implicit declaration of function â€˜strcpyâ€™ [-Wimplicit-function-declaration]
    strcpy(buf + len, t);
    ^~~~~~
./benchmarks/tmux/double_free_3/tmux_df_3.c:94:4: warning: incompatible implicit declaration of built-in function â€˜strcpyâ€™
./benchmarks/tmux/double_free_3/tmux_df_3.c:94:4: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strcpyâ€™
./benchmarks/tmux/double_free_3/tmux_df_3.c: In function â€˜cmd_string_variableâ€™:
./benchmarks/tmux/double_free_3/tmux_df_3.c:145:8: warning: implicit declaration of function â€˜strdupâ€™ [-Wimplicit-function-declaration]
    t = strdup("$");
        ^~~~~~
./benchmarks/tmux/double_free_3/tmux_df_3.c:145:8: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™
In file included from ./benchmarks/tmux/double_free_3/tmux_df_3.c:9:0:
./benchmarks/tmux/double_free_3/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/tmux/double_free_3/tmux_df_3.c:175:11: note: in expansion of macro â€˜xstrdupâ€™
   return (xstrdup(""));
           ^~~~~~~
./benchmarks/tmux/double_free_3/../stdio.h:138:20: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/tmux/double_free_3/tmux_df_3.c:178:10: note: in expansion of macro â€˜xstrdupâ€™
  return (xstrdup(t));
          ^~~~~~~
./benchmarks/tmux/double_free_3/tmux_df_3.c: In function â€˜cmd_string_expand_tildeâ€™:
./benchmarks/tmux/double_free_3/tmux_df_3.c:195:14: warning: implicit declaration of function â€˜getpwuidâ€™; did you mean â€˜getdelimâ€™? [-Wimplicit-function-declaration]
    if ((pw = getpwuid(getuid())) != NULL)
              ^~~~~~~~
              getdelim
./benchmarks/tmux/double_free_3/tmux_df_3.c:195:23: warning: implicit declaration of function â€˜getuidâ€™; did you mean â€˜getenvâ€™? [-Wimplicit-function-declaration]
    if ((pw = getpwuid(getuid())) != NULL)
                       ^~~~~~
                       getenv
./benchmarks/tmux/double_free_3/tmux_df_3.c:195:12: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
    if ((pw = getpwuid(getuid())) != NULL)
            ^
./benchmarks/tmux/double_free_3/tmux_df_3.c:202:13: warning: implicit declaration of function â€˜getpwnamâ€™; did you mean â€˜tempnamâ€™? [-Wimplicit-function-declaration]
   if ((pw = getpwnam(username)) != NULL)
             ^~~~~~~~
             tempnam
./benchmarks/tmux/double_free_3/tmux_df_3.c:202:11: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
   if ((pw = getpwnam(username)) != NULL)
           ^
./benchmarks/tmux/double_free_3/tmux_df_3.c:210:9: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™
  path = strdup(home);
         ^~~~~~
./benchmarks/tmux/double_free_3/tmux_df_3.c: In function â€˜cmd_string_parseâ€™:
./benchmarks/tmux/double_free_3/tmux_df_3.c:268:14: warning: implicit declaration of function â€˜strchrâ€™ [-Wimplicit-function-declaration]
     equals = strchr(argv[0], '=');
              ^~~~~~
./benchmarks/tmux/double_free_3/tmux_df_3.c:268:14: warning: incompatible implicit declaration of built-in function â€˜strchrâ€™
./benchmarks/tmux/double_free_3/tmux_df_3.c:268:14: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strchrâ€™
./benchmarks/tmux/double_free_3/tmux_df_3.c:269:28: warning: implicit declaration of function â€˜strcspnâ€™ [-Wimplicit-function-declaration]
     whitespace = argv[0] + strcspn(argv[0], " \t");
                            ^~~~~~~
./benchmarks/tmux/double_free_3/tmux_df_3.c:269:28: warning: incompatible implicit declaration of built-in function â€˜strcspnâ€™
./benchmarks/tmux/double_free_3/tmux_df_3.c:269:28: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strcspnâ€™
./benchmarks/tmux/double_free_3/tmux_df_3.c:273:5: warning: implicit declaration of function â€˜memmoveâ€™ [-Wimplicit-function-declaration]
     memmove(argv, argv + 1, argc * (sizeof *argv)); /* memory leak */
     ^~~~~~~
./benchmarks/tmux/double_free_3/tmux_df_3.c:273:5: warning: incompatible implicit declaration of built-in function â€˜memmoveâ€™
./benchmarks/tmux/double_free_3/tmux_df_3.c:273:5: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memmoveâ€™
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 6
succs:= 6
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 5
succs:= 5
--------GIMPLE_SWITCH -------
--------GIMPLE Cond -------
succs:= 9
succs:= 9
--------GIMPLE Cond -------
succs:= 11
succs:= 11
--------GIMPLE Cond -------
succs:= 12
--------GIMPLE Cond -------
succs:= 12
succs:= 14
--------GIMPLE Cond -------
succs:= 15
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 15
succs:= 17
succs:= 18
--------GIMPLE Cond -------
succs:= 19
--------GIMPLE Cond -------
succs:= 20
succs:= 18
succs:= 19
succs:= 20
--------GIMPLE Cond -------
succs:= 22
--------GIMPLE Cond -------
succs:= 22
succs:= 24
--------GIMPLE Cond -------
succs:= 26
succs:= 24
succs:= 2
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_22 = VDEF <.MEM_16(D)>
_13 = __printf_chk (1, "zero size%s", "");
# .MEM_20 = VDEF <.MEM_16(D)>
_14 = __printf_chk (1, "nmemb * size > SIZE_MAX%s", "");
# .MEM_18 = VDEF <.MEM_17>
_15 = __printf_chk (1, "xrealloc failed%s", "");
# .MEM_116 = VDEF <.MEM_101>
buf_17 = xrealloc (buf_16, 1, _15);
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
# VUSE <.MEM_103>
equals_32 = strchr (_31, 61);
# VUSE <.MEM_103>
_35 = strcspn (_34, " \t");
# .MEM_120 = VDEF <.MEM_103>
memmove (argv_30, _44, _43);
# .MEM_122 = VDEF <.MEM_98>
buf_53 = xrealloc (buf_16, 1, _52);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:xrealloc========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc076812900
    type <pointer_type 0x7fc0768250a8
        type <void_type 0x7fc07681ef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fc0768250a8>>
        public unsigned DI
        size <integer_cst 0x7fc07680abe8 constant 64>
        unit size <integer_cst 0x7fc07680ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fc07682abd0>>
    var <var_decl 0x7fc07759fab0 newptr>
    def_stmt newptr_8 = realloc (oldptr_6(D), newsize_4);
    version 8
    ptr-info 0x7fc07636a018>
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
bb index := 6
# VUSE <.MEM_17>
return newptr_8;
In function â€˜xreallocâ€™:
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
bb index := 6
# VUSE <.MEM_17>
return newptr_8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
bb index := 6
# VUSE <.MEM_17>
return newptr_8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================
newptr_8 = realloc (oldptr_6(D), newsize_4);
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
this stmt is child function---realloc-----

 ================== find ================== 
newptr_8 = realloc (oldptr_6(D), newsize_4);
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = newptr_8;
bb index := 8
# VUSE <.MEM_17>
return newptr_8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================
_9 = newptr_8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_8 == 0B)
bb index := 6
# VUSE <.MEM_17>
return newptr_8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_8 == 0B)
bb index := 6
# VUSE <.MEM_17>
return newptr_8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_8 == 0B)
bb index := 6
# VUSE <.MEM_17>
return newptr_8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================
if (newptr_8 == 0B)
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: use location
Cond in fucntion xrealloc basic block 6
 ================== possible direct basic block ================= 
from xrealloc basic block 7
 ================== possible direct basic block ================= 
from xrealloc basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_4 == 0)
bb index := 2
# VUSE <.MEM_17>
return newptr_8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_4 == 0)
bb index := 2
# VUSE <.MEM_17>
return newptr_8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_4 == 0)
bb index := 2
# VUSE <.MEM_6>
return 0;
lto1: warning: use location
beacuse in succ := 29 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 29

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_4 == 0)
bb index := 2
# VUSE <.MEM_6>
return 0;
lto1: warning: use location
beacuse in succ := 29 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 29

======================================================================
if (newsize_4 == 0)
./benchmarks/tmux/double_free_3/tmux_df_3.c:30:5: warning: use location
  if (newsize == 0)
     ^
if (newsize_4 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/double_free_3/tmux_df_3.c:30:5: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc076812900
    type <pointer_type 0x7fc0768250a8
        type <void_type 0x7fc07681ef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fc0768250a8>>
        public unsigned DI
        size <integer_cst 0x7fc07680abe8 constant 64>
        unit size <integer_cst 0x7fc07680ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fc07682abd0>>
    var <var_decl 0x7fc07759fab0 newptr>
    def_stmt newptr_8 = realloc (oldptr_6(D), newsize_4);
    version 8
    ptr-info 0x7fc07636a018>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: Use after free error!: free location 
_9 = newptr_8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
_9 = newptr_8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_8 == 0B)
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: Use after free error!: free location 
if (newptr_8 == 0B)
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc07680af90 type <integer_type 0x7fc07681e5e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc07680af90 type <integer_type 0x7fc07681e5e8 int> constant 1>
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc076812900
    type <pointer_type 0x7fc0768250a8
        type <void_type 0x7fc07681ef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fc0768250a8>>
        public unsigned DI
        size <integer_cst 0x7fc07680abe8 constant 64>
        unit size <integer_cst 0x7fc07680ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fc07682abd0>>
    var <var_decl 0x7fc07759fab0 newptr>
    def_stmt newptr_8 = realloc (oldptr_6(D), newsize_4);
    version 8
    ptr-info 0x7fc07636a018>
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
bb index := 6
# VUSE <.MEM_17>
return newptr_8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
bb index := 6
# VUSE <.MEM_17>
return newptr_8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
bb index := 6
# VUSE <.MEM_17>
return newptr_8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================
newptr_8 = realloc (oldptr_6(D), newsize_4);
In function â€˜mainâ€™:
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
this stmt is child function---realloc-----

 ================== find ================== 
newptr_8 = realloc (oldptr_6(D), newsize_4);
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = newptr_8;
bb index := 8
# VUSE <.MEM_17>
return newptr_8;
In function â€˜xreallocâ€™:
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================
_9 = newptr_8;
In function â€˜mainâ€™:
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_8 == 0B)
bb index := 6
# VUSE <.MEM_17>
return newptr_8;
In function â€˜xreallocâ€™:
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_8 == 0B)
bb index := 6
# VUSE <.MEM_17>
return newptr_8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newptr_8 == 0B)
bb index := 6
# VUSE <.MEM_17>
return newptr_8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================
if (newptr_8 == 0B)
In function â€˜mainâ€™:
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: use location
Cond in fucntion xrealloc basic block 6
 ================== possible direct basic block ================= 
from xrealloc basic block 7
 ================== possible direct basic block ================= 
from xrealloc basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_4 == 0)
bb index := 2
# VUSE <.MEM_17>
return newptr_8;
In function â€˜xreallocâ€™:
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
  return (newptr);
         ^
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_4 == 0)
bb index := 2
# VUSE <.MEM_17>
return newptr_8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_4 == 0)
bb index := 2
# VUSE <.MEM_6>
return 0;
lto1: warning: use location
beacuse in succ := 29 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 29

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newsize_4 == 0)
bb index := 2
# VUSE <.MEM_6>
return 0;
lto1: warning: use location
beacuse in succ := 29 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 29

======================================================================
if (newsize_4 == 0)
In function â€˜mainâ€™:
./benchmarks/tmux/double_free_3/tmux_df_3.c:30:5: warning: use location
  if (newsize == 0)
     ^
if (newsize_4 == 0)

 ================== find cond branch ================= 
./benchmarks/tmux/double_free_3/tmux_df_3.c:30:5: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc076812900
    type <pointer_type 0x7fc0768250a8
        type <void_type 0x7fc07681ef18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fc0768250a8>>
        public unsigned DI
        size <integer_cst 0x7fc07680abe8 constant 64>
        unit size <integer_cst 0x7fc07680ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fc07682abd0>>
    var <var_decl 0x7fc07759fab0 newptr>
    def_stmt newptr_8 = realloc (oldptr_6(D), newsize_4);
    version 8
    ptr-info 0x7fc07636a018>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: Use after free error!: free location 
_9 = newptr_8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
_9 = newptr_8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:37:9: warning: use location
  return (newptr);
         ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: Use after free error!: free location 
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
if (newptr_8 == 0B)
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: Use after free error!: free location 
if (newptr_8 == 0B)
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc07680af90 type <integer_type 0x7fc07681e5e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc07680af90 type <integer_type 0x7fc07681e5e8 int> constant 1>
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre add _ fucntion:memmove========= [0m
[40;33m =======POP node_fun stack:memmove========= [0m
[40;42m =======pre add _ fucntion:strcspn========= [0m
[40;33m =======POP node_fun stack:strcspn========= [0m
[40;42m =======pre add _ fucntion:strchr========= [0m
[40;33m =======POP node_fun stack:strchr========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc076353c18
    type <pointer_type 0x7fc0763347e0
        type <integer_type 0x7fc076334738 char public string-flag QI
            size <integer_cst 0x7fc07680acd8 constant 8>
            unit size <integer_cst 0x7fc07680acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fc07681e3f0 precision 8 min <integer_cst 0x7fc076337180 -128> max <integer_cst 0x7fc076337168 127> context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
            pointer_to_this <pointer_type 0x7fc0763347e0>>
        public unsigned DI
        size <integer_cst 0x7fc07680abe8 constant 64>
        unit size <integer_cst 0x7fc07680ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
        pointer_to_this <pointer_type 0x7fc076334888>>
    var <var_decl 0x7fc07635a1b0 buf>
    def_stmt buf_16 = PHI <0B(3), buf_74(4)>
    version 16
    ptr-info 0x7fc07636a078>
buf_16 = PHI <0B(3), buf_74(4)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_53 = xrealloc (buf_16, 1, _52);
./benchmarks/tmux/double_free_3/tmux_df_3.c:289:8: warning: use location
    buf = xrealloc(buf, 1, len + 1);
        ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fc076353c18
    type <pointer_type 0x7fc0763347e0
        type <integer_type 0x7fc076334738 char public string-flag QI
            size <integer_cst 0x7fc07680acd8 constant 8>
            unit size <integer_cst 0x7fc07680acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fc07681e3f0 precision 8 min <integer_cst 0x7fc076337180 -128> max <integer_cst 0x7fc076337168 127> context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
            pointer_to_this <pointer_type 0x7fc0763347e0>>
        public unsigned DI
        size <integer_cst 0x7fc07680abe8 constant 64>
        unit size <integer_cst 0x7fc07680ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
        pointer_to_this <pointer_type 0x7fc076334888>>
    var <var_decl 0x7fc07635a1b0 buf>
    def_stmt buf_16 = PHI <0B(3), buf_74(4)>
    version 16
    ptr-info 0x7fc07636a078>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_74 = PHI <buf_75(14), buf_53(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_16 = PHI <0B(3), buf_74(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = buf_53 + len_14;
./benchmarks/tmux/double_free_3/tmux_df_3.c:290:7: warning: use location
    buf[len++] = ch;
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_56 = _57;
./benchmarks/tmux/double_free_3/tmux_df_3.c:290:15: warning: use location
    buf[len++] = ch;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_56 = _57;
./benchmarks/tmux/double_free_3/tmux_df_3.c:290:15: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_17 = xrealloc (buf_16, 1, _15);
./benchmarks/tmux/double_free_3/tmux_df_3.c:252:9: warning: use location
     buf = xrealloc(buf, 1, len + 1); /* allocation site */
         ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fc076353c18
    type <pointer_type 0x7fc0763347e0
        type <integer_type 0x7fc076334738 char public string-flag QI
            size <integer_cst 0x7fc07680acd8 constant 8>
            unit size <integer_cst 0x7fc07680acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fc07681e3f0 precision 8 min <integer_cst 0x7fc076337180 -128> max <integer_cst 0x7fc076337168 127> context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
            pointer_to_this <pointer_type 0x7fc0763347e0>>
        public unsigned DI
        size <integer_cst 0x7fc07680abe8 constant 64>
        unit size <integer_cst 0x7fc07680ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
        pointer_to_this <pointer_type 0x7fc076334888>>
    var <var_decl 0x7fc07635a1b0 buf>
    def_stmt buf_16 = PHI <0B(3), buf_74(4)>
    version 16
    ptr-info 0x7fc07636a078>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_28 = buf_17;
./benchmarks/tmux/double_free_3/tmux_df_3.c:256:18: warning: use location
     argv[argc++] = buf;
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = buf_17 + len_14;
./benchmarks/tmux/double_free_3/tmux_df_3.c:253:8: warning: use location
     buf[len] = '\0';
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = 0;
./benchmarks/tmux/double_free_3/tmux_df_3.c:253:14: warning: use location
     buf[len] = '\0';
              ^
buf_58 = PHI <buf_75(18), buf_75(19), buf_16(20)>
lto1: warning: use location
this stmt have mutiple branch --------
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: use location
   xfree(buf);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 
if (buf_58 != 0B)
./benchmarks/tmux/double_free_3/tmux_df_3.c:300:5: warning: use location
  if (buf != NULL)
     ^
if (buf_58 != 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/double_free_3/tmux_df_3.c:300:5: warning: use location
Cond in fucntion main basic block 22
 ================== possible direct basic block ================= 
from main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
buf_75 = PHI <buf_16(12), 0B(13)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc076353c18
    type <pointer_type 0x7fc0763347e0
        type <integer_type 0x7fc076334738 char public string-flag QI
            size <integer_cst 0x7fc07680acd8 constant 8>
            unit size <integer_cst 0x7fc07680acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fc07681e3f0 precision 8 min <integer_cst 0x7fc076337180 -128> max <integer_cst 0x7fc076337168 127> context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
            pointer_to_this <pointer_type 0x7fc0763347e0>>
        public unsigned DI
        size <integer_cst 0x7fc07680abe8 constant 64>
        unit size <integer_cst 0x7fc07680ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
        pointer_to_this <pointer_type 0x7fc076334888>>
    var <var_decl 0x7fc07635a1b0 buf>
    def_stmt buf_16 = PHI <0B(3), buf_74(4)>
    version 16
    ptr-info 0x7fc07636a078>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: use location
     xfree(argv[argc - 1]);
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_105>
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: use location
   xfree(buf);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_126 = VDEF <.MEM_107>
free (_64);
./benchmarks/tmux/double_free_3/tmux_df_3.c:305:4: warning: use location
    xfree(argv[argc]);     /* double-free */
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_107>
free (argv_59);
./benchmarks/tmux/double_free_3/tmux_df_3.c:306:3: warning: use location
   xfree(argv);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: Use after free error!: free location 
     xfree(argv[argc - 1]);
     ^
# .MEM_122 = VDEF <.MEM_98>
buf_53 = xrealloc (buf_16, 1, _52);
./benchmarks/tmux/double_free_3/tmux_df_3.c:289:8: warning: use location
    buf = xrealloc(buf, 1, len + 1);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_122 = VDEF <.MEM_98>
buf_53 = xrealloc (buf_16, 1, _52);
./benchmarks/tmux/double_free_3/tmux_df_3.c:289:8: warning: Use after free error!: free location 
buf_74 = PHI <buf_75(14), buf_53(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_116 = VDEF <.MEM_101>
buf_17 = xrealloc (buf_16, 1, _15);
./benchmarks/tmux/double_free_3/tmux_df_3.c:252:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1); /* allocation site */
         ^
buf_74 = PHI <buf_75(14), buf_53(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_124 = VDEF <.MEM_105>
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: Use after free error!: free location 
   xfree(buf);
   ^
buf_74 = PHI <buf_75(14), buf_53(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: Use after free error!: free location 
     xfree(argv[argc - 1]);
     ^
buf_74 = PHI <buf_75(14), buf_53(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_105>
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: Use after free error!: free location 
   xfree(buf);
   ^
buf_74 = PHI <buf_75(14), buf_53(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_126 = VDEF <.MEM_107>
free (_64);
./benchmarks/tmux/double_free_3/tmux_df_3.c:305:4: warning: Use after free error!: free location 
    xfree(argv[argc]);     /* double-free */
    ^
buf_74 = PHI <buf_75(14), buf_53(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_107>
free (argv_59);
./benchmarks/tmux/double_free_3/tmux_df_3.c:306:3: warning: Use after free error!: free location 
   xfree(argv);
   ^
buf_74 = PHI <buf_75(14), buf_53(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_122 = VDEF <.MEM_98>
buf_53 = xrealloc (buf_16, 1, _52);
./benchmarks/tmux/double_free_3/tmux_df_3.c:289:8: warning: Use after free error!: free location 
    buf = xrealloc(buf, 1, len + 1);
        ^
buf_16 = PHI <0B(3), buf_74(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_116 = VDEF <.MEM_101>
buf_17 = xrealloc (buf_16, 1, _15);
./benchmarks/tmux/double_free_3/tmux_df_3.c:252:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1); /* allocation site */
         ^
buf_16 = PHI <0B(3), buf_74(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_124 = VDEF <.MEM_105>
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: Use after free error!: free location 
   xfree(buf);
   ^
buf_16 = PHI <0B(3), buf_74(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: Use after free error!: free location 
     xfree(argv[argc - 1]);
     ^
buf_16 = PHI <0B(3), buf_74(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_105>
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: Use after free error!: free location 
   xfree(buf);
   ^
buf_16 = PHI <0B(3), buf_74(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_126 = VDEF <.MEM_107>
free (_64);
./benchmarks/tmux/double_free_3/tmux_df_3.c:305:4: warning: Use after free error!: free location 
    xfree(argv[argc]);     /* double-free */
    ^
buf_16 = PHI <0B(3), buf_74(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_107>
free (argv_59);
./benchmarks/tmux/double_free_3/tmux_df_3.c:306:3: warning: Use after free error!: free location 
   xfree(argv);
   ^
buf_16 = PHI <0B(3), buf_74(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_122 = VDEF <.MEM_98>
buf_53 = xrealloc (buf_16, 1, _52);
./benchmarks/tmux/double_free_3/tmux_df_3.c:289:8: warning: Use after free error!: free location 
    buf = xrealloc(buf, 1, len + 1);
        ^
_56 = buf_53 + len_14;
./benchmarks/tmux/double_free_3/tmux_df_3.c:290:7: warning: use location
    buf[len++] = ch;
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_116 = VDEF <.MEM_101>
buf_17 = xrealloc (buf_16, 1, _15);
./benchmarks/tmux/double_free_3/tmux_df_3.c:252:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1); /* allocation site */
         ^
_56 = buf_53 + len_14;
./benchmarks/tmux/double_free_3/tmux_df_3.c:290:7: warning: use location
    buf[len++] = ch;
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: Use after free error!: free location 
     xfree(argv[argc - 1]);
     ^
_56 = buf_53 + len_14;
./benchmarks/tmux/double_free_3/tmux_df_3.c:290:7: warning: use location
    buf[len++] = ch;
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_122 = VDEF <.MEM_98>
buf_53 = xrealloc (buf_16, 1, _52);
./benchmarks/tmux/double_free_3/tmux_df_3.c:289:8: warning: Use after free error!: free location 
    buf = xrealloc(buf, 1, len + 1);
        ^
# .MEM_123 = VDEF <.MEM_122>
*_56 = _57;
./benchmarks/tmux/double_free_3/tmux_df_3.c:290:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_116 = VDEF <.MEM_101>
buf_17 = xrealloc (buf_16, 1, _15);
./benchmarks/tmux/double_free_3/tmux_df_3.c:252:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1); /* allocation site */
         ^
# .MEM_123 = VDEF <.MEM_122>
*_56 = _57;
./benchmarks/tmux/double_free_3/tmux_df_3.c:290:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: Use after free error!: free location 
     xfree(argv[argc - 1]);
     ^
# .MEM_123 = VDEF <.MEM_122>
*_56 = _57;
./benchmarks/tmux/double_free_3/tmux_df_3.c:290:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_122 = VDEF <.MEM_98>
buf_53 = xrealloc (buf_16, 1, _52);
./benchmarks/tmux/double_free_3/tmux_df_3.c:289:8: warning: Use after free error!: free location 
    buf = xrealloc(buf, 1, len + 1);
        ^
# .MEM_123 = VDEF <.MEM_122>
*_56 = _57;
./benchmarks/tmux/double_free_3/tmux_df_3.c:290:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_116 = VDEF <.MEM_101>
buf_17 = xrealloc (buf_16, 1, _15);
./benchmarks/tmux/double_free_3/tmux_df_3.c:252:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1); /* allocation site */
         ^
# .MEM_123 = VDEF <.MEM_122>
*_56 = _57;
./benchmarks/tmux/double_free_3/tmux_df_3.c:290:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: Use after free error!: free location 
     xfree(argv[argc - 1]);
     ^
# .MEM_123 = VDEF <.MEM_122>
*_56 = _57;
./benchmarks/tmux/double_free_3/tmux_df_3.c:290:15: warning: use location
    buf[len++] = ch;
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_116 = VDEF <.MEM_101>
buf_17 = xrealloc (buf_16, 1, _15);
./benchmarks/tmux/double_free_3/tmux_df_3.c:252:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1); /* allocation site */
         ^
# .MEM_119 = VDEF <.MEM_118>
*_28 = buf_17;
./benchmarks/tmux/double_free_3/tmux_df_3.c:256:18: warning: use location
     argv[argc++] = buf;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_116 = VDEF <.MEM_101>
buf_17 = xrealloc (buf_16, 1, _15);
./benchmarks/tmux/double_free_3/tmux_df_3.c:252:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1); /* allocation site */
         ^
_18 = buf_17 + len_14;
./benchmarks/tmux/double_free_3/tmux_df_3.c:253:8: warning: use location
     buf[len] = '\0';
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_116 = VDEF <.MEM_101>
buf_17 = xrealloc (buf_16, 1, _15);
./benchmarks/tmux/double_free_3/tmux_df_3.c:252:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1); /* allocation site */
         ^
# .MEM_117 = VDEF <.MEM_116>
*_18 = 0;
./benchmarks/tmux/double_free_3/tmux_df_3.c:253:14: warning: use location
     buf[len] = '\0';
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_122 = VDEF <.MEM_98>
buf_53 = xrealloc (buf_16, 1, _52);
./benchmarks/tmux/double_free_3/tmux_df_3.c:289:8: warning: Use after free error!: free location 
    buf = xrealloc(buf, 1, len + 1);
        ^
buf_58 = PHI <buf_75(18), buf_75(19), buf_16(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_116 = VDEF <.MEM_101>
buf_17 = xrealloc (buf_16, 1, _15);
./benchmarks/tmux/double_free_3/tmux_df_3.c:252:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1); /* allocation site */
         ^
buf_58 = PHI <buf_75(18), buf_75(19), buf_16(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_124 = VDEF <.MEM_105>
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: Use after free error!: free location 
   xfree(buf);
   ^
buf_58 = PHI <buf_75(18), buf_75(19), buf_16(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: Use after free error!: free location 
     xfree(argv[argc - 1]);
     ^
buf_58 = PHI <buf_75(18), buf_75(19), buf_16(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_105>
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: Use after free error!: free location 
   xfree(buf);
   ^
buf_58 = PHI <buf_75(18), buf_75(19), buf_16(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_126 = VDEF <.MEM_107>
free (_64);
./benchmarks/tmux/double_free_3/tmux_df_3.c:305:4: warning: Use after free error!: free location 
    xfree(argv[argc]);     /* double-free */
    ^
buf_58 = PHI <buf_75(18), buf_75(19), buf_16(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_107>
free (argv_59);
./benchmarks/tmux/double_free_3/tmux_df_3.c:306:3: warning: Use after free error!: free location 
   xfree(argv);
   ^
buf_58 = PHI <buf_75(18), buf_75(19), buf_16(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_122 = VDEF <.MEM_98>
buf_53 = xrealloc (buf_16, 1, _52);
./benchmarks/tmux/double_free_3/tmux_df_3.c:289:8: warning: Use after free error!: free location 
    buf = xrealloc(buf, 1, len + 1);
        ^
# .MEM_124 = VDEF <.MEM_105>
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: use location
   xfree(buf);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_116 = VDEF <.MEM_101>
buf_17 = xrealloc (buf_16, 1, _15);
./benchmarks/tmux/double_free_3/tmux_df_3.c:252:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1); /* allocation site */
         ^
# .MEM_124 = VDEF <.MEM_105>
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: use location
   xfree(buf);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_122 = VDEF <.MEM_98>
buf_53 = xrealloc (buf_16, 1, _52);
./benchmarks/tmux/double_free_3/tmux_df_3.c:289:8: warning: Use after free error!: free location 
    buf = xrealloc(buf, 1, len + 1);
        ^
if (buf_58 != 0B)
./benchmarks/tmux/double_free_3/tmux_df_3.c:300:5: warning: use location
  if (buf != NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_116 = VDEF <.MEM_101>
buf_17 = xrealloc (buf_16, 1, _15);
./benchmarks/tmux/double_free_3/tmux_df_3.c:252:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1); /* allocation site */
         ^
if (buf_58 != 0B)
./benchmarks/tmux/double_free_3/tmux_df_3.c:300:5: warning: use location
  if (buf != NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: Use after free error!: free location 
     xfree(argv[argc - 1]);
     ^
if (buf_58 != 0B)
./benchmarks/tmux/double_free_3/tmux_df_3.c:300:5: warning: use location
  if (buf != NULL)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_122 = VDEF <.MEM_98>
buf_53 = xrealloc (buf_16, 1, _52);
./benchmarks/tmux/double_free_3/tmux_df_3.c:289:8: warning: Use after free error!: free location 
    buf = xrealloc(buf, 1, len + 1);
        ^
buf_75 = PHI <buf_16(12), 0B(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_116 = VDEF <.MEM_101>
buf_17 = xrealloc (buf_16, 1, _15);
./benchmarks/tmux/double_free_3/tmux_df_3.c:252:9: warning: Use after free error!: free location 
     buf = xrealloc(buf, 1, len + 1); /* allocation site */
         ^
buf_75 = PHI <buf_16(12), 0B(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_124 = VDEF <.MEM_105>
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: Use after free error!: free location 
   xfree(buf);
   ^
buf_75 = PHI <buf_16(12), 0B(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: Use after free error!: free location 
     xfree(argv[argc - 1]);
     ^
buf_75 = PHI <buf_16(12), 0B(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_105>
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: Use after free error!: free location 
   xfree(buf);
   ^
buf_75 = PHI <buf_16(12), 0B(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_126 = VDEF <.MEM_107>
free (_64);
./benchmarks/tmux/double_free_3/tmux_df_3.c:305:4: warning: Use after free error!: free location 
    xfree(argv[argc]);     /* double-free */
    ^
buf_75 = PHI <buf_16(12), 0B(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_107>
free (argv_59);
./benchmarks/tmux/double_free_3/tmux_df_3.c:306:3: warning: Use after free error!: free location 
   xfree(argv);
   ^
buf_75 = PHI <buf_16(12), 0B(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc076353dc8
    type <pointer_type 0x7fc076334888
        type <pointer_type 0x7fc0763347e0 type <integer_type 0x7fc076334738 char>
            public unsigned DI
            size <integer_cst 0x7fc07680abe8 constant 64>
            unit size <integer_cst 0x7fc07680ac00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
            pointer_to_this <pointer_type 0x7fc076334888>>
        public unsigned DI size <integer_cst 0x7fc07680abe8 64> unit size <integer_cst 0x7fc07680ac00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fc07635a120 argv>
    def_stmt argv_22 = PHI <0B(3), argv_73(4)>
    version 22
    ptr-info 0x7fc07636a0c0>
argv_22 = PHI <0B(3), argv_73(4)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: use location
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
 <ssa_name 0x7fc076353dc8
    type <pointer_type 0x7fc076334888
        type <pointer_type 0x7fc0763347e0 type <integer_type 0x7fc076334738 char>
            public unsigned DI
            size <integer_cst 0x7fc07680abe8 constant 64>
            unit size <integer_cst 0x7fc07680ac00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
            pointer_to_this <pointer_type 0x7fc076334888>>
        public unsigned DI size <integer_cst 0x7fc07680abe8 64> unit size <integer_cst 0x7fc07680ac00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fc07635a120 argv>
    def_stmt argv_22 = PHI <0B(3), argv_73(4)>
    version 22
    ptr-info 0x7fc07636a0c0>
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 3 level :0========  [0m
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_16(D)>
newptr_8 = realloc (oldptr_6(D), newsize_4);
./benchmarks/tmux/double_free_3/tmux_df_3.c:34:5: warning: use location
  if ((newptr = realloc(oldptr, newsize)) == NULL)
     ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with argv ========= [0m
[40;36m ======= relate stmt argument:argv ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
argv_30 = PHI <argv_22(12), argv_23(13)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
memmove (argv_30, _44, _43);
./benchmarks/tmux/double_free_3/tmux_df_3.c:273:5: warning: use location
     memmove(argv, argv + 1, argc * (sizeof *argv)); /* memory leak */
     ^
this stmt is child function---memmove-----

 ================== trace ================== 
 <ssa_name 0x7fc076353dc8
    type <pointer_type 0x7fc076334888
        type <pointer_type 0x7fc0763347e0 type <integer_type 0x7fc076334738 char>
            public unsigned DI
            size <integer_cst 0x7fc07680abe8 constant 64>
            unit size <integer_cst 0x7fc07680ac00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
            pointer_to_this <pointer_type 0x7fc076334888>>
        public unsigned DI size <integer_cst 0x7fc07680abe8 64> unit size <integer_cst 0x7fc07680ac00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fc07635a120 argv>
    def_stmt argv_22 = PHI <0B(3), argv_73(4)>
    version 22
    ptr-info 0x7fc07636a0c0>
trace fucntion name:memmove 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = *argv_30;
./benchmarks/tmux/double_free_3/tmux_df_3.c:269:28: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = strcspn (_34, " \t");
./benchmarks/tmux/double_free_3/tmux_df_3.c:269:28: warning: use location
this stmt is child function---strcspn-----

 ================== trace ================== 
 <ssa_name 0x7fc076353dc8
    type <pointer_type 0x7fc076334888
        type <pointer_type 0x7fc0763347e0 type <integer_type 0x7fc076334738 char>
            public unsigned DI
            size <integer_cst 0x7fc07680abe8 constant 64>
            unit size <integer_cst 0x7fc07680ac00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
            pointer_to_this <pointer_type 0x7fc076334888>>
        public unsigned DI size <integer_cst 0x7fc07680abe8 64> unit size <integer_cst 0x7fc07680ac00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fc07635a120 argv>
    def_stmt argv_22 = PHI <0B(3), argv_73(4)>
    version 22
    ptr-info 0x7fc07636a0c0>
trace fucntion name:strcspn 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
whitespace_36 = _33 + _35;
./benchmarks/tmux/double_free_3/tmux_df_3.c:269:16: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = equals_32 > whitespace_36;
./benchmarks/tmux/double_free_3/tmux_df_3.c:270:34: warning: use location
     if (equals == NULL || equals > whitespace)
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = _37 | _38;
./benchmarks/tmux/double_free_3/tmux_df_3.c:270:24: warning: use location
     if (equals == NULL || equals > whitespace)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_39 != 0)
./benchmarks/tmux/double_free_3/tmux_df_3.c:270:8: warning: use location
     if (equals == NULL || equals > whitespace)
        ^
if (_39 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/double_free_3/tmux_df_3.c:270:8: warning: use location
Cond in fucntion main basic block 15
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = *argv_30;
./benchmarks/tmux/double_free_3/tmux_df_3.c:269:22: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_31 = *argv_30;
./benchmarks/tmux/double_free_3/tmux_df_3.c:268:14: warning: use location
     equals = strchr(argv[0], '=');
              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
equals_32 = strchr (_31, 61);
./benchmarks/tmux/double_free_3/tmux_df_3.c:268:12: warning: use location
     equals = strchr(argv[0], '=');
            ^
this stmt is child function---strchr-----

 ================== trace ================== 
 <ssa_name 0x7fc076353dc8
    type <pointer_type 0x7fc076334888
        type <pointer_type 0x7fc0763347e0 type <integer_type 0x7fc076334738 char>
            public unsigned DI
            size <integer_cst 0x7fc07680abe8 constant 64>
            unit size <integer_cst 0x7fc07680ac00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
            pointer_to_this <pointer_type 0x7fc076334888>>
        public unsigned DI size <integer_cst 0x7fc07680abe8 64> unit size <integer_cst 0x7fc07680ac00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fc07635a120 argv>
    def_stmt argv_22 = PHI <0B(3), argv_73(4)>
    version 22
    ptr-info 0x7fc07636a0c0>
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:1 
argv_59 = PHI <argv_30(18), argv_30(19), argv_22(20)>
lto1: warning: use location
this stmt have mutiple branch --------
free (argv_59);
./benchmarks/tmux/double_free_3/tmux_df_3.c:306:3: warning: use location
   xfree(argv);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (argv_59);
./benchmarks/tmux/double_free_3/tmux_df_3.c:306:3: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
if (argv_59 != 0B)
./benchmarks/tmux/double_free_3/tmux_df_3.c:303:5: warning: use location
  if (argv != NULL) {
     ^
if (argv_59 != 0B)

 ================== find cond branch ================= 
./benchmarks/tmux/double_free_3/tmux_df_3.c:303:5: warning: use location
Cond in fucntion main basic block 24
 ================== possible direct basic block ================= 
from main basic block 26
 ================== possible direct basic block ================= 
from main basic block 28
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
argv_73 = PHI <argv_30(14), argv_22(21)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
argv_22 = PHI <0B(3), argv_73(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_49 = argv_30 + _48;
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: use location
     xfree(argv[argc - 1]);
     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_50 = *_49;
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: use location
this stmt is child function---free-----

 ================== find ================== 
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_44 = argv_30 + 8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:273:24: warning: use location
     memmove(argv, argv + 1, argc * (sizeof *argv)); /* memory leak */
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_28 = argv_23 + _27;
./benchmarks/tmux/double_free_3/tmux_df_3.c:256:9: warning: use location
     argv[argc++] = buf;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_28 = buf_17;
./benchmarks/tmux/double_free_3/tmux_df_3.c:256:18: warning: use location
     argv[argc++] = buf;
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_28 = buf_17;
./benchmarks/tmux/double_free_3/tmux_df_3.c:256:18: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = buf_17 + len_14;
./benchmarks/tmux/double_free_3/tmux_df_3.c:253:8: warning: use location
     buf[len] = '\0';
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
*_18 = 0;
./benchmarks/tmux/double_free_3/tmux_df_3.c:253:14: warning: use location
     buf[len] = '\0';
              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc076353dc8
    type <pointer_type 0x7fc076334888
        type <pointer_type 0x7fc0763347e0 type <integer_type 0x7fc076334738 char>
            public unsigned DI
            size <integer_cst 0x7fc07680abe8 constant 64>
            unit size <integer_cst 0x7fc07680ac00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
            pointer_to_this <pointer_type 0x7fc076334888>>
        public unsigned DI size <integer_cst 0x7fc07680abe8 64> unit size <integer_cst 0x7fc07680ac00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fc07635a120 argv>
    def_stmt argv_22 = PHI <0B(3), argv_73(4)>
    version 22
    ptr-info 0x7fc07636a0c0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: use location
     xfree(argv[argc - 1]);
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_105>
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: use location
   xfree(buf);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_126 = VDEF <.MEM_107>
free (_64);
./benchmarks/tmux/double_free_3/tmux_df_3.c:305:4: warning: use location
    xfree(argv[argc]);     /* double-free */
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_107>
free (argv_59);
./benchmarks/tmux/double_free_3/tmux_df_3.c:306:3: warning: use location
   xfree(argv);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
argv_30 = PHI <argv_22(12), argv_23(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_125 = VDEF <.MEM_107>
free (argv_59);
./benchmarks/tmux/double_free_3/tmux_df_3.c:306:3: warning: Use after free error!: free location 
   xfree(argv);
   ^
argv_30 = PHI <argv_22(12), argv_23(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: Use after free error!: free location 
     xfree(argv[argc - 1]);
     ^
argv_30 = PHI <argv_22(12), argv_23(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: Use after free error!: free location 
argv_30 = PHI <argv_22(12), argv_23(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_105>
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: Use after free error!: free location 
   xfree(buf);
   ^
argv_30 = PHI <argv_22(12), argv_23(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_126 = VDEF <.MEM_107>
free (_64);
./benchmarks/tmux/double_free_3/tmux_df_3.c:305:4: warning: Use after free error!: free location 
    xfree(argv[argc]);     /* double-free */
    ^
argv_30 = PHI <argv_22(12), argv_23(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_107>
free (argv_59);
./benchmarks/tmux/double_free_3/tmux_df_3.c:306:3: warning: Use after free error!: free location 
   xfree(argv);
   ^
argv_30 = PHI <argv_22(12), argv_23(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# .MEM_120 = VDEF <.MEM_103>
memmove (argv_30, _44, _43);
./benchmarks/tmux/double_free_3/tmux_df_3.c:273:5: warning: use location
     memmove(argv, argv + 1, argc * (sizeof *argv)); /* memory leak */
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# VUSE <.MEM_103>
_34 = *argv_30;
./benchmarks/tmux/double_free_3/tmux_df_3.c:269:28: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# VUSE <.MEM_103>
_35 = strcspn (_34, " \t");
./benchmarks/tmux/double_free_3/tmux_df_3.c:269:28: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
whitespace_36 = _33 + _35;
./benchmarks/tmux/double_free_3/tmux_df_3.c:269:16: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
_38 = equals_32 > whitespace_36;
./benchmarks/tmux/double_free_3/tmux_df_3.c:270:34: warning: use location
     if (equals == NULL || equals > whitespace)
                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
_39 = _37 | _38;
./benchmarks/tmux/double_free_3/tmux_df_3.c:270:24: warning: use location
     if (equals == NULL || equals > whitespace)
                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
if (_39 != 0)
./benchmarks/tmux/double_free_3/tmux_df_3.c:270:8: warning: use location
     if (equals == NULL || equals > whitespace)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# VUSE <.MEM_103>
_33 = *argv_30;
./benchmarks/tmux/double_free_3/tmux_df_3.c:269:22: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# VUSE <.MEM_103>
_31 = *argv_30;
./benchmarks/tmux/double_free_3/tmux_df_3.c:268:14: warning: use location
     equals = strchr(argv[0], '=');
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# VUSE <.MEM_103>
equals_32 = strchr (_31, 61);
./benchmarks/tmux/double_free_3/tmux_df_3.c:268:12: warning: use location
     equals = strchr(argv[0], '=');
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
argv_59 = PHI <argv_30(18), argv_30(19), argv_22(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_125 = VDEF <.MEM_107>
free (argv_59);
./benchmarks/tmux/double_free_3/tmux_df_3.c:306:3: warning: Use after free error!: free location 
   xfree(argv);
   ^
argv_59 = PHI <argv_30(18), argv_30(19), argv_22(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: Use after free error!: free location 
     xfree(argv[argc - 1]);
     ^
argv_59 = PHI <argv_30(18), argv_30(19), argv_22(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: Use after free error!: free location 
argv_59 = PHI <argv_30(18), argv_30(19), argv_22(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_105>
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: Use after free error!: free location 
   xfree(buf);
   ^
argv_59 = PHI <argv_30(18), argv_30(19), argv_22(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_126 = VDEF <.MEM_107>
free (_64);
./benchmarks/tmux/double_free_3/tmux_df_3.c:305:4: warning: Use after free error!: free location 
    xfree(argv[argc]);     /* double-free */
    ^
argv_59 = PHI <argv_30(18), argv_30(19), argv_22(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_107>
free (argv_59);
./benchmarks/tmux/double_free_3/tmux_df_3.c:306:3: warning: Use after free error!: free location 
   xfree(argv);
   ^
argv_59 = PHI <argv_30(18), argv_30(19), argv_22(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# .MEM_125 = VDEF <.MEM_107>
free (argv_59);
./benchmarks/tmux/double_free_3/tmux_df_3.c:306:3: warning: use location
   xfree(argv);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
if (argv_59 != 0B)
./benchmarks/tmux/double_free_3/tmux_df_3.c:303:5: warning: use location
  if (argv != NULL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: Use after free error!: free location 
     xfree(argv[argc - 1]);
     ^
if (argv_59 != 0B)
./benchmarks/tmux/double_free_3/tmux_df_3.c:303:5: warning: use location
  if (argv != NULL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: Use after free error!: free location 
     xfree(argv[argc - 1]);
     ^
if (argv_59 != 0B)
./benchmarks/tmux/double_free_3/tmux_df_3.c:303:5: warning: use location
  if (argv != NULL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_105>
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: Use after free error!: free location 
   xfree(buf);
   ^
if (argv_59 != 0B)
./benchmarks/tmux/double_free_3/tmux_df_3.c:303:5: warning: use location
  if (argv != NULL) {
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
argv_73 = PHI <argv_30(14), argv_22(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_125 = VDEF <.MEM_107>
free (argv_59);
./benchmarks/tmux/double_free_3/tmux_df_3.c:306:3: warning: Use after free error!: free location 
   xfree(argv);
   ^
argv_73 = PHI <argv_30(14), argv_22(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: Use after free error!: free location 
     xfree(argv[argc - 1]);
     ^
argv_73 = PHI <argv_30(14), argv_22(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: Use after free error!: free location 
argv_73 = PHI <argv_30(14), argv_22(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_105>
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: Use after free error!: free location 
   xfree(buf);
   ^
argv_73 = PHI <argv_30(14), argv_22(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_126 = VDEF <.MEM_107>
free (_64);
./benchmarks/tmux/double_free_3/tmux_df_3.c:305:4: warning: Use after free error!: free location 
    xfree(argv[argc]);     /* double-free */
    ^
argv_73 = PHI <argv_30(14), argv_22(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_107>
free (argv_59);
./benchmarks/tmux/double_free_3/tmux_df_3.c:306:3: warning: Use after free error!: free location 
   xfree(argv);
   ^
argv_73 = PHI <argv_30(14), argv_22(21)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
argv_22 = PHI <0B(3), argv_73(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_125 = VDEF <.MEM_107>
free (argv_59);
./benchmarks/tmux/double_free_3/tmux_df_3.c:306:3: warning: Use after free error!: free location 
   xfree(argv);
   ^
argv_22 = PHI <0B(3), argv_73(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: Use after free error!: free location 
     xfree(argv[argc - 1]);
     ^
argv_22 = PHI <0B(3), argv_73(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: Use after free error!: free location 
argv_22 = PHI <0B(3), argv_73(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_105>
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: Use after free error!: free location 
   xfree(buf);
   ^
argv_22 = PHI <0B(3), argv_73(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_126 = VDEF <.MEM_107>
free (_64);
./benchmarks/tmux/double_free_3/tmux_df_3.c:305:4: warning: Use after free error!: free location 
    xfree(argv[argc]);     /* double-free */
    ^
argv_22 = PHI <0B(3), argv_73(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_107>
free (argv_59);
./benchmarks/tmux/double_free_3/tmux_df_3.c:306:3: warning: Use after free error!: free location 
   xfree(argv);
   ^
argv_22 = PHI <0B(3), argv_73(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
_49 = argv_30 + _48;
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: use location
     xfree(argv[argc - 1]);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# VUSE <.MEM_104>
_50 = *_49;
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: use location
     xfree(argv[argc - 1]);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: use location
     xfree(argv[argc - 1]);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
_44 = argv_30 + 8;
./benchmarks/tmux/double_free_3/tmux_df_3.c:273:24: warning: use location
     memmove(argv, argv + 1, argc * (sizeof *argv)); /* memory leak */
                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
_28 = argv_23 + _27;
./benchmarks/tmux/double_free_3/tmux_df_3.c:256:9: warning: use location
     argv[argc++] = buf;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# .MEM_119 = VDEF <.MEM_118>
*_28 = buf_17;
./benchmarks/tmux/double_free_3/tmux_df_3.c:256:18: warning: use location
     argv[argc++] = buf;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_118 = VDEF <.MEM_117>
argv_23 = xrealloc (argv_22, _21, 8);
./benchmarks/tmux/double_free_3/tmux_df_3.c:255:10: warning: Use after free error!: free location 
     argv = xrealloc(argv, argc + 1, sizeof *argv);
          ^
# .MEM_119 = VDEF <.MEM_118>
*_28 = buf_17;
./benchmarks/tmux/double_free_3/tmux_df_3.c:256:18: warning: use location
     argv[argc++] = buf;
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc076360090
    type <pointer_type 0x7fc0763347e0
        type <integer_type 0x7fc076334738 char public string-flag QI
            size <integer_cst 0x7fc07680acd8 constant 8>
            unit size <integer_cst 0x7fc07680acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fc07681e3f0 precision 8 min <integer_cst 0x7fc076337180 -128> max <integer_cst 0x7fc076337168 127> context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
            pointer_to_this <pointer_type 0x7fc0763347e0>>
        public unsigned DI
        size <integer_cst 0x7fc07680abe8 constant 64>
        unit size <integer_cst 0x7fc07680ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
        pointer_to_this <pointer_type 0x7fc076334888>>
   
    def_stmt _31 = *argv_30;
    version 31
    ptr-info 0x7fc07636a120>
# VUSE <.MEM_103>
_31 = *argv_30;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
equals_32 = strchr (_31, 61);
./benchmarks/tmux/double_free_3/tmux_df_3.c:268:12: warning: use location
     equals = strchr(argv[0], '=');
            ^
this stmt is child function---strchr-----

 ================== trace ================== 
 <ssa_name 0x7fc076360090
    type <pointer_type 0x7fc0763347e0
        type <integer_type 0x7fc076334738 char public string-flag QI
            size <integer_cst 0x7fc07680acd8 constant 8>
            unit size <integer_cst 0x7fc07680acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fc07681e3f0 precision 8 min <integer_cst 0x7fc076337180 -128> max <integer_cst 0x7fc076337168 127> context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
            pointer_to_this <pointer_type 0x7fc0763347e0>>
        public unsigned DI
        size <integer_cst 0x7fc07680abe8 constant 64>
        unit size <integer_cst 0x7fc07680ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
        pointer_to_this <pointer_type 0x7fc076334888>>
   
    def_stmt _31 = *argv_30;
    version 31
    ptr-info 0x7fc07636a120>
trace fucntion name:strchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = equals_32 > whitespace_36;
./benchmarks/tmux/double_free_3/tmux_df_3.c:270:34: warning: use location
     if (equals == NULL || equals > whitespace)
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = _37 | _38;
./benchmarks/tmux/double_free_3/tmux_df_3.c:270:24: warning: use location
     if (equals == NULL || equals > whitespace)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_39 != 0)
./benchmarks/tmux/double_free_3/tmux_df_3.c:270:8: warning: use location
     if (equals == NULL || equals > whitespace)
        ^
if (_39 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/double_free_3/tmux_df_3.c:270:8: warning: use location
Cond in fucntion main basic block 15
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = equals_32 == 0B;
./benchmarks/tmux/double_free_3/tmux_df_3.c:270:16: warning: use location
     if (equals == NULL || equals > whitespace)
                ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc076360090
    type <pointer_type 0x7fc0763347e0
        type <integer_type 0x7fc076334738 char public string-flag QI
            size <integer_cst 0x7fc07680acd8 constant 8>
            unit size <integer_cst 0x7fc07680acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fc07681e3f0 precision 8 min <integer_cst 0x7fc076337180 -128> max <integer_cst 0x7fc076337168 127> context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
            pointer_to_this <pointer_type 0x7fc0763347e0>>
        public unsigned DI
        size <integer_cst 0x7fc07680abe8 constant 64>
        unit size <integer_cst 0x7fc07680ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
        pointer_to_this <pointer_type 0x7fc076334888>>
   
    def_stmt _31 = *argv_30;
    version 31
    ptr-info 0x7fc07636a120>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: use location
     xfree(argv[argc - 1]);
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_105>
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: use location
   xfree(buf);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_126 = VDEF <.MEM_107>
free (_64);
./benchmarks/tmux/double_free_3/tmux_df_3.c:305:4: warning: use location
    xfree(argv[argc]);     /* double-free */
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_107>
free (argv_59);
./benchmarks/tmux/double_free_3/tmux_df_3.c:306:3: warning: use location
   xfree(argv);
   ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc076360168
    type <pointer_type 0x7fc0763347e0
        type <integer_type 0x7fc076334738 char public string-flag QI
            size <integer_cst 0x7fc07680acd8 constant 8>
            unit size <integer_cst 0x7fc07680acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fc07681e3f0 precision 8 min <integer_cst 0x7fc076337180 -128> max <integer_cst 0x7fc076337168 127> context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
            pointer_to_this <pointer_type 0x7fc0763347e0>>
        public unsigned DI
        size <integer_cst 0x7fc07680abe8 constant 64>
        unit size <integer_cst 0x7fc07680ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
        pointer_to_this <pointer_type 0x7fc076334888>>
   
    def_stmt _34 = *argv_30;
    version 34
    ptr-info 0x7fc07636a168>
# VUSE <.MEM_103>
_34 = *argv_30;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = strcspn (_34, " \t");
./benchmarks/tmux/double_free_3/tmux_df_3.c:269:28: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                            ^
this stmt is child function---strcspn-----

 ================== trace ================== 
 <ssa_name 0x7fc076360168
    type <pointer_type 0x7fc0763347e0
        type <integer_type 0x7fc076334738 char public string-flag QI
            size <integer_cst 0x7fc07680acd8 constant 8>
            unit size <integer_cst 0x7fc07680acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fc07681e3f0 precision 8 min <integer_cst 0x7fc076337180 -128> max <integer_cst 0x7fc076337168 127> context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
            pointer_to_this <pointer_type 0x7fc0763347e0>>
        public unsigned DI
        size <integer_cst 0x7fc07680abe8 constant 64>
        unit size <integer_cst 0x7fc07680ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
        pointer_to_this <pointer_type 0x7fc076334888>>
   
    def_stmt _34 = *argv_30;
    version 34
    ptr-info 0x7fc07636a168>
trace fucntion name:strcspn 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
whitespace_36 = _33 + _35;
./benchmarks/tmux/double_free_3/tmux_df_3.c:269:16: warning: use location
     whitespace = argv[0] + strcspn(argv[0], " \t");
                ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_38 = equals_32 > whitespace_36;
./benchmarks/tmux/double_free_3/tmux_df_3.c:270:34: warning: use location
     if (equals == NULL || equals > whitespace)
                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = _37 | _38;
./benchmarks/tmux/double_free_3/tmux_df_3.c:270:24: warning: use location
     if (equals == NULL || equals > whitespace)
                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_39 != 0)
./benchmarks/tmux/double_free_3/tmux_df_3.c:270:8: warning: use location
     if (equals == NULL || equals > whitespace)
        ^
if (_39 != 0)

 ================== find cond branch ================= 
./benchmarks/tmux/double_free_3/tmux_df_3.c:270:8: warning: use location
Cond in fucntion main basic block 15
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc076360168
    type <pointer_type 0x7fc0763347e0
        type <integer_type 0x7fc076334738 char public string-flag QI
            size <integer_cst 0x7fc07680acd8 constant 8>
            unit size <integer_cst 0x7fc07680acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fc07681e3f0 precision 8 min <integer_cst 0x7fc076337180 -128> max <integer_cst 0x7fc076337168 127> context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
            pointer_to_this <pointer_type 0x7fc0763347e0>>
        public unsigned DI
        size <integer_cst 0x7fc07680abe8 constant 64>
        unit size <integer_cst 0x7fc07680ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
        pointer_to_this <pointer_type 0x7fc076334888>>
   
    def_stmt _34 = *argv_30;
    version 34
    ptr-info 0x7fc07636a168>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_121 = VDEF <.MEM_104>
free (_50);
./benchmarks/tmux/double_free_3/tmux_df_3.c:279:5: warning: use location
     xfree(argv[argc - 1]);
     ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_105>
free (buf_58);
./benchmarks/tmux/double_free_3/tmux_df_3.c:301:3: warning: use location
   xfree(buf);
   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_126 = VDEF <.MEM_107>
free (_64);
./benchmarks/tmux/double_free_3/tmux_df_3.c:305:4: warning: use location
    xfree(argv[argc]);     /* double-free */
    ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_125 = VDEF <.MEM_107>
free (argv_59);
./benchmarks/tmux/double_free_3/tmux_df_3.c:306:3: warning: use location
   xfree(argv);
   ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:4 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc076360048
    type <pointer_type 0x7fc076334888
        type <pointer_type 0x7fc0763347e0 type <integer_type 0x7fc076334738 char>
            public unsigned DI
            size <integer_cst 0x7fc07680abe8 constant 64>
            unit size <integer_cst 0x7fc07680ac00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fc076815168 ./benchmarks/tmux/double_free_3/tmux_df_3.c>
            pointer_to_this <pointer_type 0x7fc076334888>>
        public unsigned DI size <integer_cst 0x7fc07680abe8 64> unit size <integer_cst 0x7fc07680ac00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fc07635a120 argv>
    def_stmt argv_30 = PHI <argv_22(12), argv_23(13)>
    version 30
    ptr-info 0x7fc07636a108>
argv_30 = PHI <argv_22(12), argv_23(13)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:xrealloc=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
newsize_4 = nmemb_2(D) * size_3(D);
if (newsize_4 == 0)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [0.04%]:
_13 = __printf_chk (1, "zero size%s", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [99.96%]:
_1 = 1073741824 / nmemb_2(D);
if (_1 < size_3(D))
  goto <bb 5>; [0.04%]
else
  goto <bb 6>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [0.04%]:
_14 = __printf_chk (1, "nmemb * size > SIZE_MAX%s", "");
exit (1);

=======is loop:0=========

 bb index 6 
<bb 6> [99.92%]:
newptr_8 = realloc (oldptr_6(D), newsize_4);
if (newptr_8 == 0B)
  goto <bb 7>; [0.04%]
else
  goto <bb 8>; [99.96%]

=======is loop:0=========

 bb index 7 
<bb 7> [0.04%]:
_15 = __printf_chk (1, "xrealloc failed%s", "");
exit (1);

=======is loop:0=========

 bb index 8 
<bb 8> [99.88%]:
_9 = newptr_8;
return newptr_8;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [6.67%]:
if (argc_3(D) > 1)
  goto <bb 3>; [50.69%]
else
  goto <bb 29>; [49.31%]

=======is loop:0=========

 bb index 3 
<bb 3> [3.38%]:
_1 = MEM[(char * *)argv_5(D) + 8B];
cause_135 = 0B;
cmdlist_136 = 0B;
p_137 = 0;
goto <bb 5>; [100.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [41.63%]:
# argc_69 = PHI <argc_70(14), argc_19(21)>
# have_arg_71 = PHI <have_arg_72(14), 1(21)>
# argv_73 = PHI <argv_30(14), argv_22(21)>
# buf_74 = PHI <buf_75(14), buf_53(21)>
# len_76 = PHI <len_77(14), len_55(21)>
# p_129 = PHI <p_134(14), p_131(21)>

=======is loop:1=========

 bb index 5 
<bb 5> [45.00%]:
# argc_19 = PHI <0(3), argc_69(4)>
# have_arg_13 = PHI <0(3), have_arg_71(4)>
# argv_22 = PHI <0B(3), argv_73(4)>
# buf_16 = PHI <0B(3), buf_74(4)>
# len_14 = PHI <0(3), len_76(4)>
# p_130 = PHI <p_137(3), p_129(4)>
_78 = p_130;
_79 = _1 + _78;
_80 = *_79;
if (_80 == 0)
  goto <bb 7>; [2.00%]
else
  goto <bb 6>; [98.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [44.10%]:
_81 = p_130;
_82 = _81 + 1;
p_138 = _82;
_83 = _1 + _81;
_84 = *_83;
_85 = (int) _84;

=======is loop:1=========

 bb index 7 
<bb 7> [45.00%]:
# _86 = PHI <-1(5), _85(6)>
# p_131 = PHI <p_130(5), p_138(6)>
_113 = _86;
ch_11 = _113;
switch (ch_11) <default: <L3> [33.33%], case -1: <L2> [33.33%], case 9: <L2> [33.33%], case 32: <L2> [33.33%], case 35: <L0> [33.33%]>

=======is loop:1=========

 bb index 8 
<L0> [15.00%]:

=======is loop:1=========

 bb index 9 
# p_132 = PHI <p_131(8), p_133(11)>
<L1> [100.00%]:
_87 = p_132;
_88 = _1 + _87;
_89 = *_88;
if (_89 == 0)
  goto <bb 11>; [2.00%]
else
  goto <bb 10>; [98.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [98.00%]:
_90 = p_132;
_91 = _90 + 1;
p_139 = _91;
_92 = _1 + _90;
_93 = *_92;
_94 = (int) _93;

=======is loop:1=========

 bb index 11 
<bb 11> [100.00%]:
# _95 = PHI <-1(9), _94(10)>
# p_133 = PHI <p_132(9), p_139(10)>
_115 = _95;
ch_12 = _115;
if (ch_12 != -1)
  goto <bb 9> (<L1>); [85.00%]
else
  goto <bb 12> (<L2>); [15.00%]

=======is loop:1=========

 bb index 12 
# ch_29 = PHI <ch_11(7), ch_12(11)>
# p_134 = PHI <p_131(7), p_133(11)>
<L2> [30.00%]:
if (have_arg_13 != 0)
  goto <bb 13>; [33.00%]
else
  goto <bb 14>; [67.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [9.90%]:
_15 = len_14 + 1;
buf_17 = xrealloc (buf_16, 1, _15);
_18 = buf_17 + len_14;
*_18 = 0;
_20 = argc_19 + 1;
_21 = (long unsigned int) _20;
argv_23 = xrealloc (argv_22, _21, 8);
_24 = argc_19;
argc_25 = argc_19 + 1;
_26 = (long unsigned int) argc_19;
_27 = _26 * 8;
_28 = argv_23 + _27;
*_28 = buf_17;

=======is loop:1=========

 bb index 14 
<bb 14> [30.00%]:
# argc_70 = PHI <argc_19(12), argc_25(13)>
# have_arg_72 = PHI <have_arg_13(12), 0(13)>
# argv_30 = PHI <argv_22(12), argv_23(13)>
# buf_75 = PHI <buf_16(12), 0B(13)>
# len_77 = PHI <len_14(12), 0(13)>
if (ch_29 != -1)
  goto <bb 4>; [92.50%]
else
  goto <bb 17>; [7.50%]

=======is loop:1=========

 bb index 15 
<bb 15> [14.42%]:
_31 = *argv_30;
equals_32 = strchr (_31, 61);
_33 = *argv_30;
_34 = *argv_30;
_35 = strcspn (_34, " \t");
whitespace_36 = _33 + _35;
_37 = equals_32 == 0B;
_38 = equals_32 > whitespace_36;
_39 = _37 | _38;
if (_39 != 0)
  goto <bb 18>; [7.50%]
else
  goto <bb 16>; [92.50%]

=======is loop:1=========

 bb index 16 
<bb 16> [13.33%]:
argc_41 = argc_40 + -1;
_42 = (long unsigned int) argc_41;
_43 = _42 * 8;
_44 = argv_30 + 8;
memmove (argv_30, _44, _43);

=======is loop:1=========

 bb index 17 
<bb 17> [15.58%]:
# argc_40 = PHI <argc_70(14), argc_41(16)>
if (argc_40 != 0)
  goto <bb 15>; [92.50%]
else
  goto <bb 18>; [7.50%]

=======is loop:0=========

 bb index 18 
<bb 18> [2.25%]:
if (argc_40 == 0)
  goto <bb 22> (error); [2.00%]
else
  goto <bb 19>; [98.00%]

=======is loop:1=========

 bb index 19 
<bb 19> [14.70%]:
# argc_45 = PHI <argc_40(18), argc_51(19)>
_46 = (long unsigned int) argc_45;
_47 = _46 * 8;
_48 = _47 + 18446744073709551608;
_49 = argv_30 + _48;
_50 = *_49;
free (_50);
argc_51 = argc_45 + -1;
if (argc_51 > 0)
  goto <bb 19>; [85.00%]
else
  goto <bb 22> (error); [15.00%]

=======is loop:1=========

 bb index 20 
<L3> [15.00%]:
if (len_14 > 1073741821)
  goto <bb 22> (error); [7.50%]
else
  goto <bb 21>; [92.50%]

=======is loop:1=========

 bb index 21 
<bb 21> [13.88%]:
_52 = len_14 + 1;
buf_53 = xrealloc (buf_16, 1, _52);
_54 = len_14;
len_55 = len_14 + 1;
_56 = buf_53 + len_14;
_57 = (char) ch_11;
*_56 = _57;
goto <bb 4>; [100.00%]

=======is loop:0=========

 bb index 22 
# argc_60 = PHI <argc_40(18), argc_51(19), argc_19(20)>
# rval_67 = PHI <-1(18), 0(19), -1(20)>
# argv_59 = PHI <argv_30(18), argv_30(19), argv_22(20)>
# buf_58 = PHI <buf_75(18), buf_75(19), buf_16(20)>
error [3.38%]:
out [3.38%]:
if (buf_58 != 0B)
  goto <bb 23>; [53.47%]
else
  goto <bb 24>; [46.53%]

=======is loop:0=========

 bb index 23 
<bb 23> [1.80%]:
free (buf_58);

=======is loop:0=========

 bb index 24 
<bb 24> [3.38%]:
if (argv_59 != 0B)
  goto <bb 26>; [73.26%]
else
  goto <bb 28>; [26.74%]

=======is loop:1=========

 bb index 25 
<bb 25> [14.01%]:
_61 = (long unsigned int) argc_60;
_62 = _61 * 8;
_63 = argv_59 + _62;
_64 = *_63;
free (_64);
i_66 = i_65 + 1;

=======is loop:1=========

 bb index 26 
<bb 26> [16.48%]:
# i_65 = PHI <0(24), i_66(25)>
if (argc_60 > i_65)
  goto <bb 25>; [85.00%]
else
  goto <bb 27>; [15.00%]

=======is loop:0=========

 bb index 27 
<bb 27> [2.47%]:
free (argv_59);

=======is loop:0=========

 bb index 28 
<bb 28> [3.37%]:
_68 = rval_67;
_128 = rval_67;

=======is loop:0=========

 bb index 29 
<bb 29> [6.66%]:
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 5 [0m
[40;34m    used_stmt array stack totalsize of : 1448 [0m
[40;34m    collect time: : 0.000091 s [0m
[40;34m    algorithm time: 0.012281 s [0m
[40;34m    gimple stmt count : : 113 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
