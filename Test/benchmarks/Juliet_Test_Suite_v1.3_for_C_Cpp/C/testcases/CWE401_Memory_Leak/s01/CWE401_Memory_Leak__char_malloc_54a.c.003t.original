
;; Function getchar (null)
;; enabled by -tree-original


{
  return getc (stdin);
}


;; Function fgetc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__fp->_IO_read_ptr >= __fp->_IO_read_end, 0) != 0 ? __uflow (__fp) : (int) *(unsigned char *) __fp->_IO_read_ptr++ ;
}


;; Function getc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__fp->_IO_read_ptr >= __fp->_IO_read_end, 0) != 0 ? __uflow (__fp) : (int) *(unsigned char *) __fp->_IO_read_ptr++ ;
}


;; Function getchar_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (stdin->_IO_read_ptr >= stdin->_IO_read_end, 0) != 0 ? __uflow (stdin) : (int) *(unsigned char *) stdin->_IO_read_ptr++ ;
}


;; Function putchar (null)
;; enabled by -tree-original


{
  return putc (__c, stdout);
}


;; Function fputc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__stream->_IO_write_ptr >= __stream->_IO_write_end, 0) != 0 ? __overflow (__stream, (int) (unsigned char) __c) : (int) (unsigned char) (*__stream->_IO_write_ptr++  = (char) __c);
}


;; Function putc_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (__stream->_IO_write_ptr >= __stream->_IO_write_end, 0) != 0 ? __overflow (__stream, (int) (unsigned char) __c) : (int) (unsigned char) (*__stream->_IO_write_ptr++  = (char) __c);
}


;; Function putchar_unlocked (null)
;; enabled by -tree-original


{
  return __builtin_expect (stdout->_IO_write_ptr >= stdout->_IO_write_end, 0) != 0 ? __overflow (stdout, (int) (unsigned char) __c) : (int) (unsigned char) (*stdout->_IO_write_ptr++  = (char) __c);
}


;; Function feof_unlocked (null)
;; enabled by -tree-original


{
  return (__stream->_flags & 16) != 0;
}


;; Function ferror_unlocked (null)
;; enabled by -tree-original


{
  return (__stream->_flags & 32) != 0;
}


;; Function sprintf (null)
;; enabled by -tree-original


{
  return __builtin___sprintf_chk (__s, 1, __builtin_object_size ((const void *) __s, 1), __fmt, __builtin_va_arg_pack ());
}


;; Function vsprintf (null)
;; enabled by -tree-original


{
  return __builtin___vsprintf_chk (__s, 1, __builtin_object_size ((const void *) __s, 1), __fmt, __ap);
}


;; Function snprintf (null)
;; enabled by -tree-original


{
  return __builtin___snprintf_chk (__s, __n, 1, __builtin_object_size ((const void *) __s, 1), __fmt, __builtin_va_arg_pack ());
}


;; Function vsnprintf (null)
;; enabled by -tree-original


{
  return __builtin___vsnprintf_chk (__s, __n, 1, __builtin_object_size ((const void *) __s, 1), __fmt, __ap);
}


;; Function fprintf (null)
;; enabled by -tree-original


{
  return __fprintf_chk (__stream, 1, __fmt, __builtin_va_arg_pack ());
}


;; Function printf (null)
;; enabled by -tree-original


{
  return __printf_chk (1, __fmt, __builtin_va_arg_pack ());
}


;; Function vprintf (null)
;; enabled by -tree-original


{
  return __vfprintf_chk (stdout, 1, __fmt, __ap);
}


;; Function vfprintf (null)
;; enabled by -tree-original


{
  return __vfprintf_chk (__stream, 1, __fmt, __ap);
}


;; Function dprintf (null)
;; enabled by -tree-original


{
  return __dprintf_chk (__fd, 1, __fmt, __builtin_va_arg_pack ());
}


;; Function vdprintf (null)
;; enabled by -tree-original


{
  return __vdprintf_chk (__fd, 1, __fmt, __ap);
}


;; Function fgets (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __s, 1) != 18446744073709551615)
    {
      if (__builtin_constant_p (__n) == 0 || __n <= 0)
        {
          return __fgets_chk (__s, __builtin_object_size ((const void *) __s, 1), __n, __stream);
        }
      if ((long unsigned int) __n > __builtin_object_size ((const void *) __s, 1))
        {
          return __fgets_chk_warn (__s, __builtin_object_size ((const void *) __s, 1), __n, __stream);
        }
    }
  return __fgets_alias (__s, __n, __stream);
}


;; Function fread (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __ptr, 0) != 18446744073709551615)
    {
      if ((__builtin_constant_p (__size) == 0 || __builtin_constant_p (__n) == 0) || (__size | __n) > 4294967295)
        {
          return __fread_chk (__ptr, __builtin_object_size ((const void *) __ptr, 0), __size, __n, __stream);
        }
      if ((long unsigned int) (__size * __n) > __builtin_object_size ((const void *) __ptr, 0))
        {
          return __fread_chk_warn (__ptr, __builtin_object_size ((const void *) __ptr, 0), __size, __n, __stream);
        }
    }
  return __fread_alias (__ptr, __size, __n, __stream);
}


;; Function fread_unlocked (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __ptr, 0) != 18446744073709551615)
    {
      if ((__builtin_constant_p (__size) == 0 || __builtin_constant_p (__n) == 0) || (__size | __n) > 4294967295)
        {
          return __fread_unlocked_chk (__ptr, __builtin_object_size ((const void *) __ptr, 0), __size, __n, __stream);
        }
      if ((long unsigned int) (__size * __n) > __builtin_object_size ((const void *) __ptr, 0))
        {
          return __fread_unlocked_chk_warn (__ptr, __builtin_object_size ((const void *) __ptr, 0), __size, __n, __stream);
        }
    }
  if (((__builtin_constant_p (__size) != 0 && __builtin_constant_p (__n) != 0) && (__size | __n) <= 4294967295) && __size * __n <= 8)
    {
      {
        size_t __cnt = __size * __n;
        char * __cptr = (char *) __ptr;

                size_t __cnt = __size * __n;
                char * __cptr = (char *) __ptr;
        if (__cnt == 0)
          {
            return 0;
          }
        goto <D.2378>;
        <D.2377>:;
        {
          int __c = getc_unlocked (__stream);

                    int __c = getc_unlocked (__stream);
          if (__c == -1)
            {
              goto <D.2376>;
            }
          *__cptr++  = (char) __c;
        }
         --__cnt;
        <D.2378>:;
        if (__cnt != 0) goto <D.2377>; else goto <D.2376>;
        <D.2376>:;
        return (size_t) ((long unsigned int) ((long int) __cptr - (long int) __ptr) / (long unsigned int) __size);
      }
    }
  return __fread_unlocked_alias (__ptr, __size, __n, __stream);
}


;; Function atoi (null)
;; enabled by -tree-original


{
  return (int) strtol (__nptr, 0B, 10);
}


;; Function atol (null)
;; enabled by -tree-original


{
  return strtol (__nptr, 0B, 10);
}


;; Function atoll (null)
;; enabled by -tree-original


{
  return strtoll (__nptr, 0B, 10);
}


;; Function __bswap_16 (null)
;; enabled by -tree-original


{
  return (__uint16_t) __builtin_bswap16 ((int) __bsx);
}


;; Function __bswap_32 (null)
;; enabled by -tree-original


{
  return (__uint32_t) __builtin_bswap32 (__bsx);
}


;; Function __bswap_64 (null)
;; enabled by -tree-original


{
  return (__uint64_t) __builtin_bswap64 (__bsx);
}


;; Function __uint16_identity (null)
;; enabled by -tree-original


{
  return __x;
}


;; Function __uint32_identity (null)
;; enabled by -tree-original


{
  return __x;
}


;; Function __uint64_identity (null)
;; enabled by -tree-original


{
  return __x;
}


;; Function bsearch (null)
;; enabled by -tree-original


{
  size_t __l;
  size_t __u;
  size_t __idx;
  const void * __p;
  int __comparison;

    size_t __l;
    size_t __u;
    size_t __idx;
    const void * __p;
    int __comparison;
  __l = 0;
  __u = __nmemb;
  goto <D.2819>;
  <D.2818>:;
  __idx = (__l + __u) / 2;
  __p = __base + (sizetype) (__idx * __size);
  __comparison = __compar (__key, __p);
  if (__comparison < 0)
    {
      __u = __idx;
    }
  else
    {
      if (__comparison > 0)
        {
          __l = __idx + 1;
        }
      else
        {
          return (void *) __p;
        }
    }
  <D.2819>:;
  if (__l < __u) goto <D.2818>; else goto <D.2820>;
  <D.2820>:;
  return 0B;
}


;; Function atof (null)
;; enabled by -tree-original


{
  return strtod (__nptr, 0B);
}


;; Function realpath (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __resolved, 1) != 18446744073709551615)
    {
      return __realpath_chk (__name, __resolved, __builtin_object_size ((const void *) __resolved, 1));
    }
  return __realpath_alias (__name, __resolved);
}


;; Function ptsname_r (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __buf, 1) != 18446744073709551615)
    {
      if (__builtin_constant_p (__buflen) == 0)
        {
          return __ptsname_r_chk (__fd, __buf, __buflen, __builtin_object_size ((const void *) __buf, 1));
        }
      if (__builtin_object_size ((const void *) __buf, 1) < (long unsigned int) __buflen)
        {
          return __ptsname_r_chk_warn (__fd, __buf, __buflen, __builtin_object_size ((const void *) __buf, 1));
        }
    }
  return __ptsname_r_alias (__fd, __buf, __buflen);
}


;; Function wctomb (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __s, 1) != 18446744073709551615 && __builtin_object_size ((const void *) __s, 1) <= 15)
    {
      return __wctomb_chk (__s, __wchar, __builtin_object_size ((const void *) __s, 1));
    }
  return __wctomb_alias (__s, __wchar);
}


;; Function mbstowcs (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __dst, 1) != 18446744073709551615)
    {
      if (__builtin_constant_p (__len) == 0)
        {
          return __mbstowcs_chk (__dst, __src, __len, __builtin_object_size ((const void *) __dst, 1) / 4);
        }
      if (__builtin_object_size ((const void *) __dst, 1) / 4 < (long unsigned int) __len)
        {
          return __mbstowcs_chk_warn (__dst, __src, __len, __builtin_object_size ((const void *) __dst, 1) / 4);
        }
    }
  return __mbstowcs_alias (__dst, __src, __len);
}


;; Function wcstombs (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __dst, 1) != 18446744073709551615)
    {
      if (__builtin_constant_p (__len) == 0)
        {
          return __wcstombs_chk (__dst, __src, __len, __builtin_object_size ((const void *) __dst, 1));
        }
      if (__builtin_object_size ((const void *) __dst, 1) < (long unsigned int) __len)
        {
          return __wcstombs_chk_warn (__dst, __src, __len, __builtin_object_size ((const void *) __dst, 1));
        }
    }
  return __wcstombs_alias (__dst, __src, __len);
}


;; Function bcopy (null)
;; enabled by -tree-original


{
  (void) __builtin___memmove_chk (__dest, __src, __len, __builtin_object_size ((const void *) __dest, 0));
}


;; Function bzero (null)
;; enabled by -tree-original


{
  (void) __builtin___memset_chk (__dest, 0, __len, __builtin_object_size ((const void *) __dest, 0));
}


;; Function memcpy (null)
;; enabled by -tree-original


{
  return __builtin___memcpy_chk (__dest, __src, __len, __builtin_object_size ((const void *) __dest, 0));
}


;; Function memmove (null)
;; enabled by -tree-original


{
  return __builtin___memmove_chk (__dest, __src, __len, __builtin_object_size ((const void *) __dest, 0));
}


;; Function memset (null)
;; enabled by -tree-original


{
  return __builtin___memset_chk (__dest, __ch, __len, __builtin_object_size ((const void *) __dest, 0));
}


;; Function explicit_bzero (null)
;; enabled by -tree-original


{
  __explicit_bzero_chk (__dest, __len, __builtin_object_size ((const void *) __dest, 0));
}


;; Function strcpy (null)
;; enabled by -tree-original


{
  return __builtin___strcpy_chk (__dest, __src, __builtin_object_size ((const void *) __dest, 1));
}


;; Function strncpy (null)
;; enabled by -tree-original


{
  return __builtin___strncpy_chk (__dest, __src, __len, __builtin_object_size ((const void *) __dest, 1));
}


;; Function stpncpy (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __dest, 1) != 18446744073709551615 && (__builtin_constant_p (__n) == 0 || __builtin_object_size ((const void *) __dest, 1) < (long unsigned int) __n))
    {
      return __stpncpy_chk (__dest, __src, __n, __builtin_object_size ((const void *) __dest, 1));
    }
  return __stpncpy_alias (__dest, __src, __n);
}


;; Function strcat (null)
;; enabled by -tree-original


{
  return __builtin___strcat_chk (__dest, __src, __builtin_object_size ((const void *) __dest, 1));
}


;; Function strncat (null)
;; enabled by -tree-original


{
  return __builtin___strncat_chk (__dest, __src, __len, __builtin_object_size ((const void *) __dest, 1));
}


;; Function tolower (null)
;; enabled by -tree-original


{
  return (unsigned int) __c + 128 <= 383 ? (int) *(*__ctype_tolower_loc () + (sizetype) ((long unsigned int) __c * 4)) : __c;
}


;; Function toupper (null)
;; enabled by -tree-original


{
  return (unsigned int) __c + 128 <= 383 ? (int) *(*__ctype_toupper_loc () + (sizetype) ((long unsigned int) __c * 4)) : __c;
}


;; Function open (null)
;; enabled by -tree-original


{
  if (__builtin_va_arg_pack_len () > 1)
    {
      __open_too_many_args ();
    }
  if (__builtin_constant_p (__oflag) != 0)
    {
      if (((__oflag & 64) != 0 || (__oflag & 4259840) == 4259840) && __builtin_va_arg_pack_len () <= 0)
        {
          __open_missing_mode ();
          return __open_2 (__path, __oflag);
        }
      return __open_alias (__path, __oflag, __builtin_va_arg_pack ());
    }
  if (__builtin_va_arg_pack_len () <= 0)
    {
      return __open_2 (__path, __oflag);
    }
  return __open_alias (__path, __oflag, __builtin_va_arg_pack ());
}


;; Function openat (null)
;; enabled by -tree-original


{
  if (__builtin_va_arg_pack_len () > 1)
    {
      __openat_too_many_args ();
    }
  if (__builtin_constant_p (__oflag) != 0)
    {
      if (((__oflag & 64) != 0 || (__oflag & 4259840) == 4259840) && __builtin_va_arg_pack_len () <= 0)
        {
          __openat_missing_mode ();
          return __openat_2 (__fd, __path, __oflag);
        }
      return __openat_alias (__fd, __path, __oflag, __builtin_va_arg_pack ());
    }
  if (__builtin_va_arg_pack_len () <= 0)
    {
      return __openat_2 (__fd, __path, __oflag);
    }
  return __openat_alias (__fd, __path, __oflag, __builtin_va_arg_pack ());
}


;; Function stat (null)
;; enabled by -tree-original


{
  return __xstat (1, __path, __statbuf);
}


;; Function lstat (null)
;; enabled by -tree-original


{
  return __lxstat (1, __path, __statbuf);
}


;; Function fstat (null)
;; enabled by -tree-original


{
  return __fxstat (1, __fd, __statbuf);
}


;; Function fstatat (null)
;; enabled by -tree-original


{
  return __fxstatat (1, __fd, __filename, __statbuf, __flag);
}


;; Function mknod (null)
;; enabled by -tree-original


{
  return __xmknod (0, __path, __mode, &__dev);
}


;; Function mknodat (null)
;; enabled by -tree-original


{
  return __xmknodat (0, __fd, __path, __mode, &__dev);
}


;; Function btowc (null)
;; enabled by -tree-original


{
  return __builtin_constant_p (__c) == 0 || (unsigned int) __c > 127 ? __btowc_alias (__c) : (wint_t) __c;
}


;; Function wctob (null)
;; enabled by -tree-original


{
  return __builtin_constant_p (__wc) == 0 || __wc > 127 ? __wctob_alias (__wc) : (int) __wc;
}


;; Function mbrlen (null)
;; enabled by -tree-original


{
  return __ps != 0B ? mbrtowc (0B, __s, __n, __ps) : __mbrlen (__s, __n, 0B);
}


;; Function wmemcpy (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __s1, 0) != 18446744073709551615)
    {
      if (__builtin_constant_p (__n) == 0)
        {
          return __wmemcpy_chk (__s1, __s2, __n, __builtin_object_size ((const void *) __s1, 0) / 4);
        }
      if (__builtin_object_size ((const void *) __s1, 0) / 4 < (long unsigned int) __n)
        {
          return __wmemcpy_chk_warn (__s1, __s2, __n, __builtin_object_size ((const void *) __s1, 0) / 4);
        }
    }
  return __wmemcpy_alias (__s1, __s2, __n);
}


;; Function wmemmove (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __s1, 0) != 18446744073709551615)
    {
      if (__builtin_constant_p (__n) == 0)
        {
          return __wmemmove_chk (__s1, __s2, __n, __builtin_object_size ((const void *) __s1, 0) / 4);
        }
      if (__builtin_object_size ((const void *) __s1, 0) / 4 < (long unsigned int) __n)
        {
          return __wmemmove_chk_warn (__s1, __s2, __n, __builtin_object_size ((const void *) __s1, 0) / 4);
        }
    }
  return __wmemmove_alias (__s1, __s2, __n);
}


;; Function wmemset (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __s, 0) != 18446744073709551615)
    {
      if (__builtin_constant_p (__n) == 0)
        {
          return __wmemset_chk (__s, __c, __n, __builtin_object_size ((const void *) __s, 0) / 4);
        }
      if (__builtin_object_size ((const void *) __s, 0) / 4 < (long unsigned int) __n)
        {
          return __wmemset_chk_warn (__s, __c, __n, __builtin_object_size ((const void *) __s, 0) / 4);
        }
    }
  return __wmemset_alias (__s, __c, __n);
}


;; Function wcscpy (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __dest, 1) != 18446744073709551615)
    {
      return __wcscpy_chk (__dest, __src, __builtin_object_size ((const void *) __dest, 1) / 4);
    }
  return __wcscpy_alias (__dest, __src);
}


;; Function wcpcpy (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __dest, 1) != 18446744073709551615)
    {
      return __wcpcpy_chk (__dest, __src, __builtin_object_size ((const void *) __dest, 1) / 4);
    }
  return __wcpcpy_alias (__dest, __src);
}


;; Function wcsncpy (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __dest, 1) != 18446744073709551615)
    {
      if (__builtin_constant_p (__n) == 0)
        {
          return __wcsncpy_chk (__dest, __src, __n, __builtin_object_size ((const void *) __dest, 1) / 4);
        }
      if (__builtin_object_size ((const void *) __dest, 1) / 4 < (long unsigned int) __n)
        {
          return __wcsncpy_chk_warn (__dest, __src, __n, __builtin_object_size ((const void *) __dest, 1) / 4);
        }
    }
  return __wcsncpy_alias (__dest, __src, __n);
}


;; Function wcpncpy (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __dest, 1) != 18446744073709551615)
    {
      if (__builtin_constant_p (__n) == 0)
        {
          return __wcpncpy_chk (__dest, __src, __n, __builtin_object_size ((const void *) __dest, 1) / 4);
        }
      if (__builtin_object_size ((const void *) __dest, 1) / 4 < (long unsigned int) __n)
        {
          return __wcpncpy_chk_warn (__dest, __src, __n, __builtin_object_size ((const void *) __dest, 1) / 4);
        }
    }
  return __wcpncpy_alias (__dest, __src, __n);
}


;; Function wcscat (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __dest, 1) != 18446744073709551615)
    {
      return __wcscat_chk (__dest, __src, __builtin_object_size ((const void *) __dest, 1) / 4);
    }
  return __wcscat_alias (__dest, __src);
}


;; Function wcsncat (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __dest, 1) != 18446744073709551615)
    {
      return __wcsncat_chk (__dest, __src, __n, __builtin_object_size ((const void *) __dest, 1) / 4);
    }
  return __wcsncat_alias (__dest, __src, __n);
}


;; Function swprintf (null)
;; enabled by -tree-original


{
  if (1)
    {
      return __swprintf_chk (__s, __n, 1, __builtin_object_size ((const void *) __s, 1) / 4, __fmt, __builtin_va_arg_pack ());
    }
  return __swprintf_alias (__s, __n, __fmt, __builtin_va_arg_pack ());
}


;; Function vswprintf (null)
;; enabled by -tree-original


{
  if (1)
    {
      return __vswprintf_chk (__s, __n, 1, __builtin_object_size ((const void *) __s, 1) / 4, __fmt, __ap);
    }
  return __vswprintf_alias (__s, __n, __fmt, __ap);
}


;; Function wprintf (null)
;; enabled by -tree-original


{
  return __wprintf_chk (1, __fmt, __builtin_va_arg_pack ());
}


;; Function fwprintf (null)
;; enabled by -tree-original


{
  return __fwprintf_chk (__stream, 1, __fmt, __builtin_va_arg_pack ());
}


;; Function vwprintf (null)
;; enabled by -tree-original


{
  return __vwprintf_chk (1, __fmt, __ap);
}


;; Function vfwprintf (null)
;; enabled by -tree-original


{
  return __vfwprintf_chk (__stream, 1, __fmt, __ap);
}


;; Function fgetws (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __s, 1) != 18446744073709551615)
    {
      if (__builtin_constant_p (__n) == 0 || __n <= 0)
        {
          return __fgetws_chk (__s, __builtin_object_size ((const void *) __s, 1) / 4, __n, __stream);
        }
      if ((long unsigned int) __n > __builtin_object_size ((const void *) __s, 1) / 4)
        {
          return __fgetws_chk_warn (__s, __builtin_object_size ((const void *) __s, 1) / 4, __n, __stream);
        }
    }
  return __fgetws_alias (__s, __n, __stream);
}


;; Function wcrtomb (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __s, 1) != 18446744073709551615 && __builtin_object_size ((const void *) __s, 1) <= 15)
    {
      return __wcrtomb_chk (__s, __wchar, __ps, __builtin_object_size ((const void *) __s, 1));
    }
  return __wcrtomb_alias (__s, __wchar, __ps);
}


;; Function mbsrtowcs (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __dst, 1) != 18446744073709551615)
    {
      if (__builtin_constant_p (__len) == 0)
        {
          return __mbsrtowcs_chk (__dst, __src, __len, __ps, __builtin_object_size ((const void *) __dst, 1) / 4);
        }
      if (__builtin_object_size ((const void *) __dst, 1) / 4 < (long unsigned int) __len)
        {
          return __mbsrtowcs_chk_warn (__dst, __src, __len, __ps, __builtin_object_size ((const void *) __dst, 1) / 4);
        }
    }
  return __mbsrtowcs_alias (__dst, __src, __len, __ps);
}


;; Function wcsrtombs (null)
;; enabled by -tree-original


{
  if (__builtin_object_size ((const void *) __dst, 1) != 18446744073709551615)
    {
      if (__builtin_constant_p (__len) == 0)
        {
          return __wcsrtombs_chk (__dst, __src, __len, __ps, __builtin_object_size ((const void *) __dst, 1));
        }
      if (__builtin_object_size ((const void *) __dst, 1) < (long unsigned int) __len)
        {
          return __wcsrtombs_chk_warn (__dst, __src, __len, __ps, __builtin_object_size ((const void *) __dst, 1));
        }
    }
  return __wcsrtombs_alias (__dst, __src, __len, __ps);
}


;; Function CWE401_Memory_Leak__char_malloc_54_bad (null)
;; enabled by -tree-original


{
  char * data;

    char * data;
  data = 0B;
  data = (char *) malloc (100);
  if (data == 0B)
    {
      exit (-1);
    }
  strcpy (data, (const char * restrict) "A String");
  printLine ((const char *) data);
  CWE401_Memory_Leak__char_malloc_54b_badSink (data);
}


;; Function goodG2B (null)
;; enabled by -tree-original


{
  char * data;

    char * data;
  data = 0B;
  data = (char *) __builtin_alloca (100);
  strcpy (data, (const char * restrict) "A String");
  printLine ((const char *) data);
  CWE401_Memory_Leak__char_malloc_54b_goodG2BSink (data);
}


;; Function goodB2G (null)
;; enabled by -tree-original


{
  char * data;

    char * data;
  data = 0B;
  data = (char *) malloc (100);
  if (data == 0B)
    {
      exit (-1);
    }
  strcpy (data, (const char * restrict) "A String");
  printLine ((const char *) data);
  CWE401_Memory_Leak__char_malloc_54b_goodB2GSink (data);
}


;; Function CWE401_Memory_Leak__char_malloc_54_good (null)
;; enabled by -tree-original


{
  goodG2B ();
  goodB2G ();
}

