=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 7
succs:= 7
--------GIMPLE Cond -------
succs:= 9
succs:= 9
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_4 = VDEF <.MEM_3(D)>
_1 = time (0B);
# .MEM_5 = VDEF <.MEM_4>
srand (_2);
# .MEM_6 = VDEF <.MEM_5>
printLine ("Calling good()...");
# .MEM_7 = VDEF <.MEM_6>
CWE401_Memory_Leak__twoIntsStruct_malloc_21_good ();
# .MEM_8 = VDEF <.MEM_7>
printLine ("Finished good()");
# .MEM_11 = VDEF <.MEM_1(D)>
data_6 = malloc (800);
# .MEM_14 = VDEF <.MEM_13>
printStructLine (data_6);
# .MEM_17 = VDEF <.MEM_15>
printLine ("Benign, fixed string");
# .MEM_18 = VDEF <.MEM_9>
data_5 = malloc (800);
# .MEM_21 = VDEF <.MEM_20>
printStructLine (data_5);
# .MEM_4 = VDEF <.MEM_10>
goodG2B ();
# .MEM_2 = VDEF <.MEM_1(D)>
data_3 = __builtin_alloca (800);
# .MEM_6 = VDEF <.MEM_5>
printStructLine (data_3);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printLine========= [0m
[40;33m =======POP node_fun stack:printLine========= [0m
[40;42m =======pre add _ fucntion:CWE401_Memory_Leak__twoIntsStruct_malloc_21_good========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CWE401_Memory_Leak__twoIntsStruct_malloc_21_good  function_call count: 6 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:goodG2B========= [0m
[40;44m =======print_function_path goodG2B  function_call count: 2 level :2========  [0m
[40;42m =======pre add _ fucntion:printStructLine========= [0m
[40;33m =======POP node_fun stack:printStructLine========= [0m
[40;42m =======pre add _ fucntion:__builtin_alloca========= [0m
[40;33m =======POP node_fun stack:__builtin_alloca========= [0m
[40;42m =======pre_check_funciton:goodG2B========= [0m
[40;42m =======start_check_funciton:goodG2B========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd2e62d60d8
    type <pointer_type 0x7fd2e62bc150
        type <record_type 0x7fd2e626c3f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fd2e66f5cd8 constant 64>
            unit size <integer_cst 0x7fd2e66f5cf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fd2e626c348 fields <field_decl 0x7fd2e6252e40 intOne> context <translation_unit_decl 0x7fd2e62b2870 CWE401_Memory_Leak__twoIntsStruct_malloc_21.c>
            pointer_to_this <pointer_type 0x7fd2e62bc150> chain <type_decl 0x7fd2e6252da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fd2e66f5cd8 64> unit size <integer_cst 0x7fd2e66f5cf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd2e62bc1f8>
    var <var_decl 0x7fd2e623cbd0 data>
    def_stmt data_3 = __builtin_alloca (800);
    version 3
    ptr-info 0x7fd2e62c0ab0>
# .MEM_2 = VDEF <.MEM_1(D)>
data_3 = __builtin_alloca (800);

 ================== trace ptable================== 
trace fucntion name:__builtin_alloca 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__builtin_alloca-----
this other function ------__builtin_alloca-----

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:goodG2B========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printStructLine========= [0m
[40;33m =======POP node_fun stack:printStructLine========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printLine========= [0m
[40;33m =======POP node_fun stack:printLine========= [0m
[40;42m =======pre_check_funciton:CWE401_Memory_Leak__twoIntsStruct_malloc_21_good========= [0m
[40;42m =======start_check_funciton:CWE401_Memory_Leak__twoIntsStruct_malloc_21_good========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd2e62d66c0
    type <pointer_type 0x7fd2e62bc150
        type <record_type 0x7fd2e626c3f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fd2e66f5cd8 constant 64>
            unit size <integer_cst 0x7fd2e66f5cf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fd2e626c348 fields <field_decl 0x7fd2e6252e40 intOne> context <translation_unit_decl 0x7fd2e62b2870 CWE401_Memory_Leak__twoIntsStruct_malloc_21.c>
            pointer_to_this <pointer_type 0x7fd2e62bc150> chain <type_decl 0x7fd2e6252da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fd2e66f5cd8 64> unit size <integer_cst 0x7fd2e66f5cf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd2e62bc1f8>
    var <var_decl 0x7fd2e62ceea0 data>
    def_stmt data_6 = malloc (800);
    version 6
    ptr-info 0x7fd2e62c0b70>
# .MEM_11 = VDEF <.MEM_1(D)>
data_6 = malloc (800);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
free (data_6);
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c: In function â€˜mainâ€™:
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:71:9: warning: use location
         free(data);
         ^~~~~~~~~~
this stmt is child function---free-----

 ================== find ================== 
free (data_6);
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
printStructLine (data_6);
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:85:5: warning: use location
     printStructLine(&data[0]);
     ^~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---printStructLine-----

 ================== trace ================== 
 <ssa_name 0x7fd2e62d66c0
    type <pointer_type 0x7fd2e62bc150
        type <record_type 0x7fd2e626c3f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fd2e66f5cd8 constant 64>
            unit size <integer_cst 0x7fd2e66f5cf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fd2e626c348 fields <field_decl 0x7fd2e6252e40 intOne> context <translation_unit_decl 0x7fd2e62b2870 CWE401_Memory_Leak__twoIntsStruct_malloc_21.c>
            pointer_to_this <pointer_type 0x7fd2e62bc150> chain <type_decl 0x7fd2e6252da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fd2e66f5cd8 64> unit size <integer_cst 0x7fd2e66f5cf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd2e62bc1f8>
    var <var_decl 0x7fd2e62ceea0 data>
    def_stmt data_6 = malloc (800);
    version 6
    ptr-info 0x7fd2e62c0b70>
trace fucntion name:printStructLine 

 ================== trace ================== 
trace fucntion free:1 
data_6->intTwo = 0;
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:84:20: warning: use location
     data[0].intTwo = 0;
     ~~~~~~~~~~~~~~~^~~
data_6->intOne = 0;
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:83:20: warning: use location
     data[0].intOne = 0;
     ~~~~~~~~~~~~~~~^~~
if (data_6 == 0B)
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:81:8: warning: use location
     if (data == NULL) {exit(-1);}
        ^
if (data_6 == 0B)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:81:8: warning: use location
Cond in fucntion CWE401_Memory_Leak__twoIntsStruct_malloc_21_good basic block 2
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_malloc_21_good basic block 3
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_malloc_21_good basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd2e62d66c0
    type <pointer_type 0x7fd2e62bc150
        type <record_type 0x7fd2e626c3f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fd2e66f5cd8 constant 64>
            unit size <integer_cst 0x7fd2e66f5cf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fd2e626c348 fields <field_decl 0x7fd2e6252e40 intOne> context <translation_unit_decl 0x7fd2e62b2870 CWE401_Memory_Leak__twoIntsStruct_malloc_21.c>
            pointer_to_this <pointer_type 0x7fd2e62bc150> chain <type_decl 0x7fd2e6252da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fd2e66f5cd8 64> unit size <integer_cst 0x7fd2e66f5cf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd2e62bc1f8>
    var <var_decl 0x7fd2e62ceea0 data>
    def_stmt data_6 = malloc (800);
    version 6
    ptr-info 0x7fd2e62c0b70>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15>
free (data_6);
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:71:9: warning: use location
         free(data);
         ^~~~~~~~~~

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd2e62d6678
    type <pointer_type 0x7fd2e62bc150
        type <record_type 0x7fd2e626c3f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fd2e66f5cd8 constant 64>
            unit size <integer_cst 0x7fd2e66f5cf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fd2e626c348 fields <field_decl 0x7fd2e6252e40 intOne> context <translation_unit_decl 0x7fd2e62b2870 CWE401_Memory_Leak__twoIntsStruct_malloc_21.c>
            pointer_to_this <pointer_type 0x7fd2e62bc150> chain <type_decl 0x7fd2e6252da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fd2e66f5cd8 64> unit size <integer_cst 0x7fd2e66f5cf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd2e62bc1f8>
    var <var_decl 0x7fd2e62cebd0 data>
    def_stmt data_5 = malloc (800);
    version 5
    ptr-info 0x7fd2e62c0b58>
# .MEM_18 = VDEF <.MEM_9>
data_5 = malloc (800);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
free (data_5);
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:96:9: warning: use location
         free(data);
         ^~~~~~~~~~
this stmt is child function---free-----

 ================== find ================== 
free (data_5);
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:96:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return  [0m
# .MEM_21 = VDEF <.MEM_20>
printStructLine (data_5);
bb index := 7
# .MEM_24 = VDEF <.MEM_18>
exit (-1);
beacuse in succ := 8 have return 
gimple stmt in succ := 9 ,possiable got to succ := 8

======================================================================
printStructLine (data_5);
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:110:5: warning: use location
     printStructLine(&data[0]);
     ^~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---printStructLine-----

 ================== trace ================== 
 <ssa_name 0x7fd2e62d6678
    type <pointer_type 0x7fd2e62bc150
        type <record_type 0x7fd2e626c3f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fd2e66f5cd8 constant 64>
            unit size <integer_cst 0x7fd2e66f5cf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fd2e626c348 fields <field_decl 0x7fd2e6252e40 intOne> context <translation_unit_decl 0x7fd2e62b2870 CWE401_Memory_Leak__twoIntsStruct_malloc_21.c>
            pointer_to_this <pointer_type 0x7fd2e62bc150> chain <type_decl 0x7fd2e6252da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fd2e66f5cd8 64> unit size <integer_cst 0x7fd2e66f5cf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd2e62bc1f8>
    var <var_decl 0x7fd2e62cebd0 data>
    def_stmt data_5 = malloc (800);
    version 5
    ptr-info 0x7fd2e62c0b58>
trace fucntion name:printStructLine 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return  [0m
# .MEM_20 = VDEF <.MEM_19>
data_5->intTwo = 0;
bb index := 7
# .MEM_24 = VDEF <.MEM_18>
exit (-1);
beacuse in succ := 8 have return 
gimple stmt in succ := 9 ,possiable got to succ := 8

======================================================================
data_5->intTwo = 0;
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:109:20: warning: use location
     data[0].intTwo = 0;
     ~~~~~~~~~~~~~~~^~~

======================================================================
[40;31m    branch possiable have return  [0m
# .MEM_19 = VDEF <.MEM_18>
data_5->intOne = 0;
bb index := 7
# .MEM_24 = VDEF <.MEM_18>
exit (-1);
beacuse in succ := 8 have return 
gimple stmt in succ := 9 ,possiable got to succ := 8

======================================================================
data_5->intOne = 0;
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:108:20: warning: use location
     data[0].intOne = 0;
     ~~~~~~~~~~~~~~~^~~
if (data_5 == 0B)
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:106:8: warning: use location
     if (data == NULL) {exit(-1);}
        ^
if (data_5 == 0B)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:106:8: warning: use location
Cond in fucntion CWE401_Memory_Leak__twoIntsStruct_malloc_21_good basic block 7
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_malloc_21_good basic block 8
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_malloc_21_good basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd2e62d6678
    type <pointer_type 0x7fd2e62bc150
        type <record_type 0x7fd2e626c3f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fd2e66f5cd8 constant 64>
            unit size <integer_cst 0x7fd2e66f5cf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fd2e626c348 fields <field_decl 0x7fd2e6252e40 intOne> context <translation_unit_decl 0x7fd2e62b2870 CWE401_Memory_Leak__twoIntsStruct_malloc_21.c>
            pointer_to_this <pointer_type 0x7fd2e62bc150> chain <type_decl 0x7fd2e6252da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fd2e66f5cd8 64> unit size <integer_cst 0x7fd2e66f5cf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd2e62bc1f8>
    var <var_decl 0x7fd2e62cebd0 data>
    def_stmt data_5 = malloc (800);
    version 5
    ptr-info 0x7fd2e62c0b58>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_23 = VDEF <.MEM_22>
free (data_5);
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:96:9: warning: use location
         free(data);
         ^~~~~~~~~~

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd2e62c0078 type <integer_type 0x7fd2e670d7e0 long unsigned int> constant 800>

dot graph START

======================================================================
 <addr_expr 0x7fd2e62de0c0
    type <pointer_type 0x7fd2e62bc540
        type <array_type 0x7fd2e68962a0 type <integer_type 0x7fd2e670d3f0 char>
            BLK
            size <integer_cst 0x7fd2e6894390 constant 168>
            unit size <integer_cst 0x7fd2e6894360 constant 21>
            align 8 symtab 0 alias set -1 canonical type 0x7fd2e68962a0 domain <integer_type 0x7fd2e68961f8>
            pointer_to_this <pointer_type 0x7fd2e62bc540>>
        unsigned DI
        size <integer_cst 0x7fd2e66f5cd8 constant 64>
        unit size <integer_cst 0x7fd2e66f5cf0 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd2e62bc540>
    readonly constant
    arg 0 <string_cst 0x7fd2e62b8d20 type <array_type 0x7fd2e68962a0>
        readonly constant static "Benign, fixed string\000">
    CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:66:19 start: CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:66:19 finish: CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:66:40>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:CWE401_Memory_Leak__twoIntsStruct_malloc_21_good========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd2e62c07c8 type <pointer_type 0x7fd2e6206930> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7fd2e629d6c0
    type <integer_type 0x7fd2e670d690 unsigned int public unsigned SI
        size <integer_cst 0x7fd2e66f5f18 constant 32>
        unit size <integer_cst 0x7fd2e66f5f30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd2e670d690 precision 32 min <integer_cst 0x7fd2e66f5f48 0> max <integer_cst 0x7fd2e66f5f00 4294967295> context <translation_unit_decl 0x7fd2e62b2870 CWE401_Memory_Leak__twoIntsStruct_malloc_21.c>
        pointer_to_this <pointer_type 0x7fd2e671adc8>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
_2 = (unsigned int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4>
srand (_2);
srand (_2);
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:158:5: warning: use location
     srand( (unsigned)time(NULL) );
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7fd2e629d6c0
    type <integer_type 0x7fd2e670d690 unsigned int public unsigned SI
        size <integer_cst 0x7fd2e66f5f18 constant 32>
        unit size <integer_cst 0x7fd2e66f5f30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd2e670d690 precision 32 min <integer_cst 0x7fd2e66f5f48 0> max <integer_cst 0x7fd2e66f5f00 4294967295> context <translation_unit_decl 0x7fd2e62b2870 CWE401_Memory_Leak__twoIntsStruct_malloc_21.c>
        pointer_to_this <pointer_type 0x7fd2e671adc8>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd2e629d6c0
    type <integer_type 0x7fd2e670d690 unsigned int public unsigned SI
        size <integer_cst 0x7fd2e66f5f18 constant 32>
        unit size <integer_cst 0x7fd2e66f5f30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fd2e670d690 precision 32 min <integer_cst 0x7fd2e66f5f48 0> max <integer_cst 0x7fd2e66f5f00 4294967295> context <translation_unit_decl 0x7fd2e62b2870 CWE401_Memory_Leak__twoIntsStruct_malloc_21.c>
        pointer_to_this <pointer_type 0x7fd2e671adc8>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd2e62c55a0
    type <pointer_type 0x7fd2e62c4498
        type <array_type 0x7fd2e628f348 type <integer_type 0x7fd2e670d3f0 char>
            BLK
            size <integer_cst 0x7fd2e6846e70 constant 144>
            unit size <integer_cst 0x7fd2e625dd80 constant 18>
            align 8 symtab 0 alias set -1 canonical type 0x7fd2e628f348 domain <integer_type 0x7fd2e628f2a0>
            pointer_to_this <pointer_type 0x7fd2e62c4498>>
        unsigned DI
        size <integer_cst 0x7fd2e66f5cd8 constant 64>
        unit size <integer_cst 0x7fd2e66f5cf0 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd2e62c4498>
    readonly constant
    arg 0 <string_cst 0x7fd2e62c8320 type <array_type 0x7fd2e628f348>
        readonly constant static "Calling good()...\000">
    CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:160:15 start: CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:160:15 finish: CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:160:33>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fd2e62c5640
    type <pointer_type 0x7fd2e62c43f0
        type <array_type 0x7fd2e6863bd0 type <integer_type 0x7fd2e670d3f0 char>
            TI
            size <integer_cst 0x7fd2e66f5d20 constant 128>
            unit size <integer_cst 0x7fd2e66f5d38 constant 16>
            align 8 symtab 0 alias set -1 canonical type 0x7fd2e6863bd0 domain <integer_type 0x7fd2e6863b28>
            pointer_to_this <pointer_type 0x7fd2e62c43f0>>
        unsigned DI
        size <integer_cst 0x7fd2e66f5cd8 constant 64>
        unit size <integer_cst 0x7fd2e66f5cf0 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd2e62c43f0>
    readonly constant
    arg 0 <string_cst 0x7fd2e62c8348 type <array_type 0x7fd2e6863bd0>
        readonly constant static "Finished good()\000">
    CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:162:15 start: CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:162:15 finish: CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:162:31>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:CWE401_Memory_Leak__twoIntsStruct_malloc_21_good========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path CWE401_Memory_Leak__twoIntsStruct_malloc_21_good  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:goodG2B========= [0m
[40;44m =======print_function_path goodG2B  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:printStructLine========= [0m
[40;33m =======POP node_fun stack:printStructLine========= [0m
[40;42m =======pre add _ fucntion:__builtin_alloca========= [0m
[40;33m =======POP node_fun stack:__builtin_alloca========= [0m
[40;42m =======pre_check_funciton:goodG2B========= [0m
[40;42m =======start_check_funciton:goodG2B========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd2e62d60d8
    type <pointer_type 0x7fd2e62bc150
        type <record_type 0x7fd2e626c3f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fd2e66f5cd8 constant 64>
            unit size <integer_cst 0x7fd2e66f5cf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fd2e626c348 fields <field_decl 0x7fd2e6252e40 intOne> context <translation_unit_decl 0x7fd2e62b2870 CWE401_Memory_Leak__twoIntsStruct_malloc_21.c>
            pointer_to_this <pointer_type 0x7fd2e62bc150> chain <type_decl 0x7fd2e6252da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fd2e66f5cd8 64> unit size <integer_cst 0x7fd2e66f5cf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd2e62bc1f8>
    var <var_decl 0x7fd2e623cbd0 data>
    def_stmt data_3 = __builtin_alloca (800);
    version 3
    ptr-info 0x7fd2e62c0ab0>
# .MEM_2 = VDEF <.MEM_1(D)>
data_3 = __builtin_alloca (800);

 ================== trace ptable================== 
trace fucntion name:__builtin_alloca 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__builtin_alloca-----
this other function ------__builtin_alloca-----

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:goodG2B========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printStructLine========= [0m
[40;33m =======POP node_fun stack:printStructLine========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printLine========= [0m
[40;33m =======POP node_fun stack:printLine========= [0m
[40;42m =======pre_check_funciton:CWE401_Memory_Leak__twoIntsStruct_malloc_21_good========= [0m
[40;42m =======start_check_funciton:CWE401_Memory_Leak__twoIntsStruct_malloc_21_good========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd2e62d66c0
    type <pointer_type 0x7fd2e62bc150
        type <record_type 0x7fd2e626c3f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fd2e66f5cd8 constant 64>
            unit size <integer_cst 0x7fd2e66f5cf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fd2e626c348 fields <field_decl 0x7fd2e6252e40 intOne> context <translation_unit_decl 0x7fd2e62b2870 CWE401_Memory_Leak__twoIntsStruct_malloc_21.c>
            pointer_to_this <pointer_type 0x7fd2e62bc150> chain <type_decl 0x7fd2e6252da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fd2e66f5cd8 64> unit size <integer_cst 0x7fd2e66f5cf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd2e62bc1f8>
    var <var_decl 0x7fd2e62ceea0 data>
    def_stmt data_6 = malloc (800);
    version 6
    ptr-info 0x7fd2e62c0b70>
# .MEM_11 = VDEF <.MEM_1(D)>
data_6 = malloc (800);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
free (data_6);
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c: In function â€˜CWE401_Memory_Leak__twoIntsStruct_malloc_21_goodâ€™:
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:71:9: warning: use location
         free(data);
         ^~~~~~~~~~
this stmt is child function---free-----

 ================== find ================== 
free (data_6);
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:71:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
printStructLine (data_6);
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:85:5: warning: use location
     printStructLine(&data[0]);
     ^~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---printStructLine-----

 ================== trace ================== 
 <ssa_name 0x7fd2e62d66c0
    type <pointer_type 0x7fd2e62bc150
        type <record_type 0x7fd2e626c3f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fd2e66f5cd8 constant 64>
            unit size <integer_cst 0x7fd2e66f5cf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fd2e626c348 fields <field_decl 0x7fd2e6252e40 intOne> context <translation_unit_decl 0x7fd2e62b2870 CWE401_Memory_Leak__twoIntsStruct_malloc_21.c>
            pointer_to_this <pointer_type 0x7fd2e62bc150> chain <type_decl 0x7fd2e6252da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fd2e66f5cd8 64> unit size <integer_cst 0x7fd2e66f5cf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd2e62bc1f8>
    var <var_decl 0x7fd2e62ceea0 data>
    def_stmt data_6 = malloc (800);
    version 6
    ptr-info 0x7fd2e62c0b70>
trace fucntion name:printStructLine 

 ================== trace ================== 
trace fucntion free:1 
data_6->intTwo = 0;
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:84:20: warning: use location
     data[0].intTwo = 0;
     ~~~~~~~~~~~~~~~^~~
data_6->intOne = 0;
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:83:20: warning: use location
     data[0].intOne = 0;
     ~~~~~~~~~~~~~~~^~~
if (data_6 == 0B)
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:81:8: warning: use location
     if (data == NULL) {exit(-1);}
        ^
if (data_6 == 0B)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:81:8: warning: use location
Cond in fucntion CWE401_Memory_Leak__twoIntsStruct_malloc_21_good basic block 2
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_malloc_21_good basic block 3
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_malloc_21_good basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd2e62d66c0
    type <pointer_type 0x7fd2e62bc150
        type <record_type 0x7fd2e626c3f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fd2e66f5cd8 constant 64>
            unit size <integer_cst 0x7fd2e66f5cf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fd2e626c348 fields <field_decl 0x7fd2e6252e40 intOne> context <translation_unit_decl 0x7fd2e62b2870 CWE401_Memory_Leak__twoIntsStruct_malloc_21.c>
            pointer_to_this <pointer_type 0x7fd2e62bc150> chain <type_decl 0x7fd2e6252da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fd2e66f5cd8 64> unit size <integer_cst 0x7fd2e66f5cf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd2e62bc1f8>
    var <var_decl 0x7fd2e62ceea0 data>
    def_stmt data_6 = malloc (800);
    version 6
    ptr-info 0x7fd2e62c0b70>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15>
free (data_6);
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:71:9: warning: use location
         free(data);
         ^~~~~~~~~~

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd2e62d6678
    type <pointer_type 0x7fd2e62bc150
        type <record_type 0x7fd2e626c3f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fd2e66f5cd8 constant 64>
            unit size <integer_cst 0x7fd2e66f5cf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fd2e626c348 fields <field_decl 0x7fd2e6252e40 intOne> context <translation_unit_decl 0x7fd2e62b2870 CWE401_Memory_Leak__twoIntsStruct_malloc_21.c>
            pointer_to_this <pointer_type 0x7fd2e62bc150> chain <type_decl 0x7fd2e6252da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fd2e66f5cd8 64> unit size <integer_cst 0x7fd2e66f5cf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd2e62bc1f8>
    var <var_decl 0x7fd2e62cebd0 data>
    def_stmt data_5 = malloc (800);
    version 5
    ptr-info 0x7fd2e62c0b58>
# .MEM_18 = VDEF <.MEM_9>
data_5 = malloc (800);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
free (data_5);
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:96:9: warning: use location
         free(data);
         ^~~~~~~~~~
this stmt is child function---free-----

 ================== find ================== 
free (data_5);
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:96:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return  [0m
# .MEM_21 = VDEF <.MEM_20>
printStructLine (data_5);
bb index := 7
# .MEM_24 = VDEF <.MEM_18>
exit (-1);
beacuse in succ := 8 have return 
gimple stmt in succ := 9 ,possiable got to succ := 8

======================================================================
printStructLine (data_5);
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:110:5: warning: use location
     printStructLine(&data[0]);
     ^~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---printStructLine-----

 ================== trace ================== 
 <ssa_name 0x7fd2e62d6678
    type <pointer_type 0x7fd2e62bc150
        type <record_type 0x7fd2e626c3f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fd2e66f5cd8 constant 64>
            unit size <integer_cst 0x7fd2e66f5cf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fd2e626c348 fields <field_decl 0x7fd2e6252e40 intOne> context <translation_unit_decl 0x7fd2e62b2870 CWE401_Memory_Leak__twoIntsStruct_malloc_21.c>
            pointer_to_this <pointer_type 0x7fd2e62bc150> chain <type_decl 0x7fd2e6252da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fd2e66f5cd8 64> unit size <integer_cst 0x7fd2e66f5cf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd2e62bc1f8>
    var <var_decl 0x7fd2e62cebd0 data>
    def_stmt data_5 = malloc (800);
    version 5
    ptr-info 0x7fd2e62c0b58>
trace fucntion name:printStructLine 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return  [0m
# .MEM_20 = VDEF <.MEM_19>
data_5->intTwo = 0;
bb index := 7
# .MEM_24 = VDEF <.MEM_18>
exit (-1);
beacuse in succ := 8 have return 
gimple stmt in succ := 9 ,possiable got to succ := 8

======================================================================
data_5->intTwo = 0;
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:109:20: warning: use location
     data[0].intTwo = 0;
     ~~~~~~~~~~~~~~~^~~

======================================================================
[40;31m    branch possiable have return  [0m
# .MEM_19 = VDEF <.MEM_18>
data_5->intOne = 0;
bb index := 7
# .MEM_24 = VDEF <.MEM_18>
exit (-1);
beacuse in succ := 8 have return 
gimple stmt in succ := 9 ,possiable got to succ := 8

======================================================================
data_5->intOne = 0;
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:108:20: warning: use location
     data[0].intOne = 0;
     ~~~~~~~~~~~~~~~^~~
if (data_5 == 0B)
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:106:8: warning: use location
     if (data == NULL) {exit(-1);}
        ^
if (data_5 == 0B)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:106:8: warning: use location
Cond in fucntion CWE401_Memory_Leak__twoIntsStruct_malloc_21_good basic block 7
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_malloc_21_good basic block 8
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_malloc_21_good basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd2e62d6678
    type <pointer_type 0x7fd2e62bc150
        type <record_type 0x7fd2e626c3f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fd2e66f5cd8 constant 64>
            unit size <integer_cst 0x7fd2e66f5cf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fd2e626c348 fields <field_decl 0x7fd2e6252e40 intOne> context <translation_unit_decl 0x7fd2e62b2870 CWE401_Memory_Leak__twoIntsStruct_malloc_21.c>
            pointer_to_this <pointer_type 0x7fd2e62bc150> chain <type_decl 0x7fd2e6252da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fd2e66f5cd8 64> unit size <integer_cst 0x7fd2e66f5cf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd2e62bc1f8>
    var <var_decl 0x7fd2e62cebd0 data>
    def_stmt data_5 = malloc (800);
    version 5
    ptr-info 0x7fd2e62c0b58>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_23 = VDEF <.MEM_22>
free (data_5);
CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:96:9: warning: use location
         free(data);
         ^~~~~~~~~~

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fd2e62c0078 type <integer_type 0x7fd2e670d7e0 long unsigned int> constant 800>

dot graph START

======================================================================
 <addr_expr 0x7fd2e62de0c0
    type <pointer_type 0x7fd2e62bc540
        type <array_type 0x7fd2e68962a0 type <integer_type 0x7fd2e670d3f0 char>
            BLK
            size <integer_cst 0x7fd2e6894390 constant 168>
            unit size <integer_cst 0x7fd2e6894360 constant 21>
            align 8 symtab 0 alias set -1 canonical type 0x7fd2e68962a0 domain <integer_type 0x7fd2e68961f8>
            pointer_to_this <pointer_type 0x7fd2e62bc540>>
        unsigned DI
        size <integer_cst 0x7fd2e66f5cd8 constant 64>
        unit size <integer_cst 0x7fd2e66f5cf0 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd2e62bc540>
    readonly constant
    arg 0 <string_cst 0x7fd2e62b8d20 type <array_type 0x7fd2e68962a0>
        readonly constant static "Benign, fixed string\000">
    CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:66:19 start: CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:66:19 finish: CWE401_Memory_Leak__twoIntsStruct_malloc_21.c:66:40>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:CWE401_Memory_Leak__twoIntsStruct_malloc_21_good========= [0m
[40;44m =======node_fun:goodG2B========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path goodG2B  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:printStructLine========= [0m
[40;33m =======POP node_fun stack:printStructLine========= [0m
[40;42m =======pre add _ fucntion:__builtin_alloca========= [0m
[40;33m =======POP node_fun stack:__builtin_alloca========= [0m
[40;42m =======pre_check_funciton:goodG2B========= [0m
[40;42m =======start_check_funciton:goodG2B========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd2e62d60d8
    type <pointer_type 0x7fd2e62bc150
        type <record_type 0x7fd2e626c3f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fd2e66f5cd8 constant 64>
            unit size <integer_cst 0x7fd2e66f5cf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fd2e626c348 fields <field_decl 0x7fd2e6252e40 intOne> context <translation_unit_decl 0x7fd2e62b2870 CWE401_Memory_Leak__twoIntsStruct_malloc_21.c>
            pointer_to_this <pointer_type 0x7fd2e62bc150> chain <type_decl 0x7fd2e6252da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fd2e66f5cd8 64> unit size <integer_cst 0x7fd2e66f5cf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fd2e62bc1f8>
    var <var_decl 0x7fd2e623cbd0 data>
    def_stmt data_3 = __builtin_alloca (800);
    version 3
    ptr-info 0x7fd2e62c0ab0>
# .MEM_2 = VDEF <.MEM_1(D)>
data_3 = __builtin_alloca (800);

 ================== trace ptable================== 
trace fucntion name:__builtin_alloca 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__builtin_alloca-----
this other function ------__builtin_alloca-----

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:goodG2B========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
printLine ("Calling good()...");
CWE401_Memory_Leak__twoIntsStruct_malloc_21_good ();
printLine ("Finished good()");
return 0;

=======Mapping node_fun:CWE401_Memory_Leak__twoIntsStruct_malloc_21_good=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
data_6 = malloc (800);
if (data_6 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [0.04%]:
exit (-1);

=======is loop:0=========

 bb index 4 
<bb 4> [99.96%]:
data_6->intOne = 0;
data_6->intTwo = 0;
printStructLine (data_6);
goodB2G1Static = 0;
goodB2G1Static.0_7 = goodB2G1Static;
if (goodB2G1Static.0_7 != 0)
  goto <bb 5>; [46.00%]
else
  goto <bb 6>; [54.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [45.98%]:
printLine ("Benign, fixed string");
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [53.98%]:
free (data_6);

=======is loop:0=========

 bb index 7 
<bb 7> [99.96%]:
data_5 = malloc (800);
if (data_5 == 0B)
  goto <bb 8>; [0.04%]
else
  goto <bb 9>; [99.96%]

=======is loop:0=========

 bb index 8 
<bb 8> [0.04%]:
exit (-1);

=======is loop:0=========

 bb index 9 
<bb 9> [99.92%]:
data_5->intOne = 0;
data_5->intTwo = 0;
printStructLine (data_5);
goodB2G2Static = 1;
goodB2G2Static.1_8 = goodB2G2Static;
if (goodB2G2Static.1_8 != 0)
  goto <bb 10>; [36.64%]
else
  goto <bb 11>; [63.36%]

=======is loop:0=========

 bb index 10 
<bb 10> [36.61%]:
free (data_5);

=======is loop:0=========

 bb index 11 
<bb 11> [99.92%]:
goodG2B ();
return;

=======Mapping node_fun:goodG2B=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
data_3 = __builtin_alloca (800);
data_3->intOne = 0;
data_3->intTwo = 0;
printStructLine (data_3);
goodG2BStatic = 1;
goodG2BStatic.2_8 = goodG2BStatic;
return;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 3 [0m
[40;34m    used_stmt array stack totalsize of : 224 [0m
[40;34m    collect time: : 0.000085 s [0m
[40;34m    algorithm time: 0.008721 s [0m
[40;34m    gimple stmt count : : 37 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
