=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
succs:= 3
succs:= 2
--------GIMPLE Cond -------
succs:= 6
succs:= 6
--------GIMPLE Cond -------
succs:= 9
--------GIMPLE Cond -------
succs:= 10
succs:= 10
succs:= 9
--------GIMPLE Cond -------
succs:= 13
succs:= 13
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 2
succs:= 2
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_4 = VDEF <.MEM_3(D)>
_1 = time (0B);
# .MEM_5 = VDEF <.MEM_4>
srand (_2);
# .MEM_6 = VDEF <.MEM_5>
printLine ("Calling good()...");
# .MEM_7 = VDEF <.MEM_6>
CWE401_Memory_Leak__twoIntsStruct_realloc_11_good ();
# .MEM_8 = VDEF <.MEM_7>
printLine ("Finished good()");
# .MEM_18 = VDEF <.MEM_1(D)>
_10 = globalReturnsTrue ();
# .MEM_22 = VDEF <.MEM_21>
printStructLine (data_11);
# .MEM_24 = VDEF <.MEM_14>
_12 = globalReturnsFalse ();
# .MEM_26 = VDEF <.MEM_24>
printLine ("Benign, fixed string");
# .MEM_27 = VDEF <.MEM_15>
_6 = globalReturnsTrue ();
# .MEM_31 = VDEF <.MEM_30>
printStructLine (data_7);
# .MEM_33 = VDEF <.MEM_16>
_8 = globalReturnsTrue ();
# .MEM_4 = VDEF <.MEM_17>
goodG2B1 ();
# .MEM_5 = VDEF <.MEM_4>
goodG2B2 ();
# .MEM_5 = VDEF <.MEM_4(D)>
_1 = globalReturnsTrue ();
# .MEM_6 = VDEF <.MEM_5>
data_7 = __builtin_alloca (800);
# .MEM_10 = VDEF <.MEM_9>
printStructLine (data_7);
# .MEM_11 = VDEF <.MEM_3>
_2 = globalReturnsTrue ();
# .MEM_5 = VDEF <.MEM_4(D)>
_1 = globalReturnsFalse ();
# .MEM_11 = VDEF <.MEM_5>
printLine ("Benign, fixed string");
# .MEM_6 = VDEF <.MEM_5>
data_7 = __builtin_alloca (800);
# .MEM_10 = VDEF <.MEM_9>
printStructLine (data_7);
# .MEM_12 = VDEF <.MEM_3>
_2 = globalReturnsTrue ();
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printLine========= [0m
[40;33m =======POP node_fun stack:printLine========= [0m
[40;42m =======pre add _ fucntion:CWE401_Memory_Leak__twoIntsStruct_realloc_11_good========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path CWE401_Memory_Leak__twoIntsStruct_realloc_11_good  function_call count: 9 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:goodG2B2========= [0m
[40;44m =======print_function_path goodG2B2  function_call count: 3 level :2========  [0m
[40;42m =======pre add _ fucntion:globalReturnsTrue========= [0m
[40;33m =======POP node_fun stack:globalReturnsTrue========= [0m
[40;42m =======pre add _ fucntion:printStructLine========= [0m
[40;33m =======POP node_fun stack:printStructLine========= [0m
[40;42m =======pre add _ fucntion:__builtin_alloca========= [0m
[40;33m =======POP node_fun stack:__builtin_alloca========= [0m
[40;42m =======pre_check_funciton:goodG2B2========= [0m
[40;42m =======start_check_funciton:goodG2B2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc196193678
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _1 = globalReturnsTrue ();
    version 1>
# .MEM_5 = VDEF <.MEM_4(D)>
_1 = globalReturnsTrue ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsTrue 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsTrue-----
this other function ------globalReturnsTrue-----
 
 Start check Pointer Collect  

======================================================================
if (_1 != 0)
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c: In function â€˜mainâ€™:
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:129:7: warning: use location
     if(globalReturnsTrue())
       ^
if (_1 != 0)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:129:7: warning: use location
Cond in fucntion goodG2B2 basic block 2
 ================== possible direct basic block ================= 
from goodG2B2 basic block 3
 ================== possible direct basic block ================= 
from goodG2B2 basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc196193678
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _1 = globalReturnsTrue ();
    version 1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc1961b6078 type <integer_type 0x7fc1966037e0 long unsigned int> constant 800>

dot graph START

======================================================================
 <ssa_name 0x7fc1961cd510
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc196132ab0 data>
    def_stmt data_7 = __builtin_alloca (800);
    version 7
    ptr-info 0x7fc1961b6cc0>
# .MEM_6 = VDEF <.MEM_5>
data_7 = __builtin_alloca (800);

 ================== trace ptable================== 
trace fucntion name:__builtin_alloca 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__builtin_alloca-----
this other function ------__builtin_alloca-----
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
printStructLine (data_7);
printStructLine (data_7);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:136:9: warning: use location
         printStructLine(&data[0]);
         ^~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---printStructLine-----

 ================== trace ================== 
 <ssa_name 0x7fc1961cd510
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc196132ab0 data>
    def_stmt data_7 = __builtin_alloca (800);
    version 7
    ptr-info 0x7fc1961b6cc0>
trace fucntion name:printStructLine 

 ================== trace ================== 
trace fucntion free:0 
data_7->intTwo = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:135:24: warning: use location
         data[0].intTwo = 0;
         ~~~~~~~~~~~~~~~^~~
data_7->intOne = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:134:24: warning: use location
         data[0].intOne = 0;
         ~~~~~~~~~~~~~~~^~~

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961cd510
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc196132ab0 data>
    def_stmt data_7 = __builtin_alloca (800);
    version 7
    ptr-info 0x7fc1961b6cc0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc1961936c0
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _2 = globalReturnsTrue ();
    version 2>
# .MEM_11 = VDEF <.MEM_3>
_2 = globalReturnsTrue ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsTrue 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsTrue-----
this other function ------globalReturnsTrue-----
 
 Start check Pointer Collect  

======================================================================

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961936c0
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _2 = globalReturnsTrue ();
    version 2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:goodG2B2========= [0m
[40;42m =======pre add _ fucntion:goodG2B1========= [0m
[40;44m =======print_function_path goodG2B1  function_call count: 5 level :2========  [0m
[40;42m =======pre add _ fucntion:globalReturnsTrue========= [0m
[40;33m =======POP node_fun stack:globalReturnsTrue========= [0m
[40;42m =======pre add _ fucntion:printStructLine========= [0m
[40;33m =======POP node_fun stack:printStructLine========= [0m
[40;42m =======pre add _ fucntion:__builtin_alloca========= [0m
[40;33m =======POP node_fun stack:__builtin_alloca========= [0m
[40;42m =======pre add _ fucntion:printLine========= [0m
[40;33m =======POP node_fun stack:printLine========= [0m
[40;42m =======pre add _ fucntion:globalReturnsFalse========= [0m
[40;33m =======POP node_fun stack:globalReturnsFalse========= [0m
[40;42m =======pre_check_funciton:goodG2B1========= [0m
[40;42m =======start_check_funciton:goodG2B1========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc1961935a0
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _1 = globalReturnsFalse ();
    version 1>
# .MEM_5 = VDEF <.MEM_4(D)>
_1 = globalReturnsFalse ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsFalse 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsFalse-----
this other function ------globalReturnsFalse-----
 
 Start check Pointer Collect  

======================================================================
if (_1 != 0)
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:103:7: warning: use location
     if(globalReturnsFalse())
       ^
if (_1 != 0)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:103:7: warning: use location
Cond in fucntion goodG2B1 basic block 2
 ================== possible direct basic block ================= 
from goodG2B1 basic block 3
 ================== possible direct basic block ================= 
from goodG2B1 basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961935a0
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _1 = globalReturnsFalse ();
    version 1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc1961ba440
    type <pointer_type 0x7fc1961bb150
        type <array_type 0x7fc19678c2a0 type <integer_type 0x7fc1966033f0 char>
            BLK
            size <integer_cst 0x7fc19678a390 constant 168>
            unit size <integer_cst 0x7fc19678a360 constant 21>
            align 8 symtab 0 alias set -1 canonical type 0x7fc19678c2a0 domain <integer_type 0x7fc19678c1f8>
            pointer_to_this <pointer_type 0x7fc1961bb150>>
        unsigned DI
        size <integer_cst 0x7fc1965ebcd8 constant 64>
        unit size <integer_cst 0x7fc1965ebcf0 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961bb150>
    readonly constant
    arg 0 <string_cst 0x7fc1961bc090 type <array_type 0x7fc19678c2a0>
        readonly constant static "Benign, fixed string\000">
    CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:106:19 start: CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:106:19 finish: CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:106:40>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc1961cd1f8
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc196132a20 data>
    def_stmt data_7 = __builtin_alloca (800);
    version 7
    ptr-info 0x7fc1961b6ca8>
# .MEM_6 = VDEF <.MEM_5>
data_7 = __builtin_alloca (800);

 ================== trace ptable================== 
trace fucntion name:__builtin_alloca 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__builtin_alloca-----
this other function ------__builtin_alloca-----
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
printStructLine (data_7);
printStructLine (data_7);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:115:9: warning: use location
         printStructLine(&data[0]);
         ^~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---printStructLine-----

 ================== trace ================== 
 <ssa_name 0x7fc1961cd1f8
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc196132a20 data>
    def_stmt data_7 = __builtin_alloca (800);
    version 7
    ptr-info 0x7fc1961b6ca8>
trace fucntion name:printStructLine 

 ================== trace ================== 
trace fucntion free:0 
data_7->intTwo = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:114:24: warning: use location
         data[0].intTwo = 0;
         ~~~~~~~~~~~~~~~^~~
data_7->intOne = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:113:24: warning: use location
         data[0].intOne = 0;
         ~~~~~~~~~~~~~~~^~~

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961cd1f8
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc196132a20 data>
    def_stmt data_7 = __builtin_alloca (800);
    version 7
    ptr-info 0x7fc1961b6ca8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc1961935e8
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _2 = globalReturnsTrue ();
    version 2>
# .MEM_12 = VDEF <.MEM_3>
_2 = globalReturnsTrue ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsTrue 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsTrue-----
this other function ------globalReturnsTrue-----

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:goodG2B1========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:globalReturnsTrue========= [0m
[40;33m =======POP node_fun stack:globalReturnsTrue========= [0m
[40;42m =======pre add _ fucntion:printStructLine========= [0m
[40;33m =======POP node_fun stack:printStructLine========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:printLine========= [0m
[40;33m =======POP node_fun stack:printLine========= [0m
[40;42m =======pre add _ fucntion:globalReturnsFalse========= [0m
[40;33m =======POP node_fun stack:globalReturnsFalse========= [0m
[40;42m =======pre_check_funciton:CWE401_Memory_Leak__twoIntsStruct_realloc_11_good========= [0m
[40;42m =======start_check_funciton:CWE401_Memory_Leak__twoIntsStruct_realloc_11_good========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc1961cdb40
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc1961c4c60 data>
    def_stmt data_11 = realloc (0B, 800);
    version 11
    ptr-info 0x7fc1961b6d50>
# .MEM_19 = VDEF <.MEM_18>
data_11 = realloc (0B, 800);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
data_13 = PHI <0B(2), data_11(5)>
cc1: warning: use location
this stmt have mutiple branch ---exit-----
free (data_13);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:72:9: warning: use location
         free(data);
         ^~~~~~~~~~
this stmt is child function---free-----

 ================== find ================== 
free (data_13);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
printStructLine (data_11);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:62:9: warning: use location
         printStructLine(&data[0]);
         ^~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---printStructLine-----

 ================== trace ================== 
 <ssa_name 0x7fc1961cdb40
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc1961c4c60 data>
    def_stmt data_11 = realloc (0B, 800);
    version 11
    ptr-info 0x7fc1961b6d50>
trace fucntion name:printStructLine 

 ================== trace ================== 
trace fucntion free:1 
data_11->intTwo = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:61:24: warning: use location
         data[0].intTwo = 0;
         ~~~~~~~~~~~~~~~^~~
data_11->intOne = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:60:24: warning: use location
         data[0].intOne = 0;
         ~~~~~~~~~~~~~~~^~~
if (data_11 == 0B)
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:58:12: warning: use location
         if (data == NULL) {exit(-1);}
            ^
if (data_11 == 0B)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:58:12: warning: use location
Cond in fucntion CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 3
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 4
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961cdb40
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc1961c4c60 data>
    def_stmt data_11 = realloc (0B, 800);
    version 11
    ptr-info 0x7fc1961b6d50>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (data_13);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:72:9: warning: use location
         free(data);
         ^~~~~~~~~~

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc1961cda20
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc1961c4990 data>
    def_stmt data_7 = realloc (0B, 800);
    version 7
    ptr-info 0x7fc1961b6d20>
# .MEM_28 = VDEF <.MEM_27>
data_7 = realloc (0B, 800);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
data_9 = PHI <0B(9), data_7(12)>
cc1: warning: use location
this stmt have mutiple branch ---exit-----
free (data_9);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:94:9: warning: use location
         free(data);
         ^~~~~~~~~~
this stmt is child function---free-----

 ================== find ================== 
free (data_9);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:94:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return  [0m
# .MEM_31 = VDEF <.MEM_30>
printStructLine (data_7);
bb index := 10
# .MEM_32 = VDEF <.MEM_28>
exit (-1);
beacuse in succ := 11 have return 
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================
printStructLine (data_7);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:89:9: warning: use location
         printStructLine(&data[0]);
         ^~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---printStructLine-----

 ================== trace ================== 
 <ssa_name 0x7fc1961cda20
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc1961c4990 data>
    def_stmt data_7 = realloc (0B, 800);
    version 7
    ptr-info 0x7fc1961b6d20>
trace fucntion name:printStructLine 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return  [0m
# .MEM_30 = VDEF <.MEM_29>
data_7->intTwo = 0;
bb index := 10
# .MEM_32 = VDEF <.MEM_28>
exit (-1);
beacuse in succ := 11 have return 
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================
data_7->intTwo = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:88:24: warning: use location
         data[0].intTwo = 0;
         ~~~~~~~~~~~~~~~^~~

======================================================================
[40;31m    branch possiable have return  [0m
# .MEM_29 = VDEF <.MEM_28>
data_7->intOne = 0;
bb index := 10
# .MEM_32 = VDEF <.MEM_28>
exit (-1);
beacuse in succ := 11 have return 
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================
data_7->intOne = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:87:24: warning: use location
         data[0].intOne = 0;
         ~~~~~~~~~~~~~~~^~~
if (data_7 == 0B)
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:85:12: warning: use location
         if (data == NULL) {exit(-1);}
            ^
if (data_7 == 0B)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:85:12: warning: use location
Cond in fucntion CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 10
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 11
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961cda20
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc1961c4990 data>
    def_stmt data_7 = realloc (0B, 800);
    version 7
    ptr-info 0x7fc1961b6d20>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (data_9);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:94:9: warning: use location
         free(data);
         ^~~~~~~~~~

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc1961cdaf8
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _10 = globalReturnsTrue ();
    version 10>
# .MEM_18 = VDEF <.MEM_1(D)>
_10 = globalReturnsTrue ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsTrue 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsTrue-----
this other function ------globalReturnsTrue-----
 
 Start check Pointer Collect  

======================================================================
if (_10 != 0)
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:54:7: warning: use location
     if(globalReturnsTrue())
       ^
if (_10 != 0)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:54:7: warning: use location
Cond in fucntion CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 2
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 3
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961cdaf8
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _10 = globalReturnsTrue ();
    version 10>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (data_13);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:72:9: warning: use location
         free(data);
         ^~~~~~~~~~
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (data_9);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:94:9: warning: use location
         free(data);
         ^~~~~~~~~~

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc1961cdb88
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _12 = globalReturnsFalse ();
    version 12>
# .MEM_24 = VDEF <.MEM_14>
_12 = globalReturnsFalse ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsFalse 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsFalse-----
this other function ------globalReturnsFalse-----
 
 Start check Pointer Collect  

======================================================================
if (_12 != 0)
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:64:7: warning: use location
     if(globalReturnsFalse())
       ^
if (_12 != 0)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:64:7: warning: use location
Cond in fucntion CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 6
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 7
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961cdb88
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _12 = globalReturnsFalse ();
    version 12>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (data_13);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:72:9: warning: use location
         free(data);
         ^~~~~~~~~~
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (data_9);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:94:9: warning: use location
         free(data);
         ^~~~~~~~~~

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc1961c5ac0
    type <pointer_type 0x7fc1961bb150
        type <array_type 0x7fc19678c2a0 type <integer_type 0x7fc1966033f0 char>
            BLK
            size <integer_cst 0x7fc19678a390 constant 168>
            unit size <integer_cst 0x7fc19678a360 constant 21>
            align 8 symtab 0 alias set -1 canonical type 0x7fc19678c2a0 domain <integer_type 0x7fc19678c1f8>
            pointer_to_this <pointer_type 0x7fc1961bb150>>
        unsigned DI
        size <integer_cst 0x7fc1965ebcd8 constant 64>
        unit size <integer_cst 0x7fc1965ebcf0 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961bb150>
    readonly constant
    arg 0 <string_cst 0x7fc1961aede0 type <array_type 0x7fc19678c2a0>
        readonly constant static "Benign, fixed string\000">
    CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:67:19 start: CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:67:19 finish: CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:67:40>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc1961cd9d8
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _6 = globalReturnsTrue ();
    version 6>
# .MEM_27 = VDEF <.MEM_15>
_6 = globalReturnsTrue ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsTrue 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsTrue-----
this other function ------globalReturnsTrue-----
 
 Start check Pointer Collect  

======================================================================
if (_6 != 0)
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:81:7: warning: use location
     if(globalReturnsTrue())
       ^
if (_6 != 0)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:81:7: warning: use location
Cond in fucntion CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 9
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 10
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961cd9d8
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _6 = globalReturnsTrue ();
    version 6>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (data_13);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:72:9: warning: use location
         free(data);
         ^~~~~~~~~~
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (data_9);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:94:9: warning: use location
         free(data);
         ^~~~~~~~~~

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc1961cda68
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _8 = globalReturnsTrue ();
    version 8>
# .MEM_33 = VDEF <.MEM_16>
_8 = globalReturnsTrue ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsTrue 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsTrue-----
this other function ------globalReturnsTrue-----
 
 Start check Pointer Collect  

======================================================================
if (_8 != 0)
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:91:7: warning: use location
     if(globalReturnsTrue())
       ^
if (_8 != 0)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:91:7: warning: use location
Cond in fucntion CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 13
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 14
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961cda68
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _8 = globalReturnsTrue ();
    version 8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (data_13);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:72:9: warning: use location
         free(data);
         ^~~~~~~~~~
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (data_9);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:94:9: warning: use location
         free(data);
         ^~~~~~~~~~

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:CWE401_Memory_Leak__twoIntsStruct_realloc_11_good========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc1961b68d0 type <pointer_type 0x7fc1960fc930> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7fc196193798
    type <integer_type 0x7fc196603690 unsigned int public unsigned SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc196603690 precision 32 min <integer_cst 0x7fc1965ebf48 0> max <integer_cst 0x7fc1965ebf00 4294967295> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc196610dc8>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
_2 = (unsigned int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4>
srand (_2);
srand (_2);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:165:5: warning: use location
     srand( (unsigned)time(NULL) );
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7fc196193798
    type <integer_type 0x7fc196603690 unsigned int public unsigned SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc196603690 precision 32 min <integer_cst 0x7fc1965ebf48 0> max <integer_cst 0x7fc1965ebf00 4294967295> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc196610dc8>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc196193798
    type <integer_type 0x7fc196603690 unsigned int public unsigned SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc196603690 precision 32 min <integer_cst 0x7fc1965ebf48 0> max <integer_cst 0x7fc1965ebf00 4294967295> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc196610dc8>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc1961ba960
    type <pointer_type 0x7fc1961bb0a8
        type <array_type 0x7fc196185348 type <integer_type 0x7fc1966033f0 char>
            BLK
            size <integer_cst 0x7fc19673ce70 constant 144>
            unit size <integer_cst 0x7fc196153d80 constant 18>
            align 8 symtab 0 alias set -1 canonical type 0x7fc196185348 domain <integer_type 0x7fc1961852a0>
            pointer_to_this <pointer_type 0x7fc1961bb0a8>>
        unsigned DI
        size <integer_cst 0x7fc1965ebcd8 constant 64>
        unit size <integer_cst 0x7fc1965ebcf0 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961bb0a8>
    readonly constant
    arg 0 <string_cst 0x7fc1961bd488 type <array_type 0x7fc196185348>
        readonly constant static "Calling good()...\000">
    CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:167:15 start: CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:167:15 finish: CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:167:33>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc1961baa00
    type <pointer_type 0x7fc1961bb3f0
        type <array_type 0x7fc196759bd0 type <integer_type 0x7fc1966033f0 char>
            TI
            size <integer_cst 0x7fc1965ebd20 constant 128>
            unit size <integer_cst 0x7fc1965ebd38 constant 16>
            align 8 symtab 0 alias set -1 canonical type 0x7fc196759bd0 domain <integer_type 0x7fc196759b28>
            pointer_to_this <pointer_type 0x7fc1961bb3f0>>
        unsigned DI
        size <integer_cst 0x7fc1965ebcd8 constant 64>
        unit size <integer_cst 0x7fc1965ebcf0 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961bb3f0>
    readonly constant
    arg 0 <string_cst 0x7fc1961bd4b0 type <array_type 0x7fc196759bd0>
        readonly constant static "Finished good()\000">
    CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:169:15 start: CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:169:15 finish: CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:169:31>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:CWE401_Memory_Leak__twoIntsStruct_realloc_11_good========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path CWE401_Memory_Leak__twoIntsStruct_realloc_11_good  function_call count: 9 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:goodG2B2========= [0m
[40;44m =======print_function_path goodG2B2  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:globalReturnsTrue========= [0m
[40;33m =======POP node_fun stack:globalReturnsTrue========= [0m
[40;42m =======pre add _ fucntion:printStructLine========= [0m
[40;33m =======POP node_fun stack:printStructLine========= [0m
[40;42m =======pre add _ fucntion:__builtin_alloca========= [0m
[40;33m =======POP node_fun stack:__builtin_alloca========= [0m
[40;42m =======pre_check_funciton:goodG2B2========= [0m
[40;42m =======start_check_funciton:goodG2B2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc196193678
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _1 = globalReturnsTrue ();
    version 1>
# .MEM_5 = VDEF <.MEM_4(D)>
_1 = globalReturnsTrue ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsTrue 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsTrue-----
this other function ------globalReturnsTrue-----
 
 Start check Pointer Collect  

======================================================================
if (_1 != 0)
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c: In function â€˜CWE401_Memory_Leak__twoIntsStruct_realloc_11_goodâ€™:
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:129:7: warning: use location
     if(globalReturnsTrue())
       ^
if (_1 != 0)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:129:7: warning: use location
Cond in fucntion goodG2B2 basic block 2
 ================== possible direct basic block ================= 
from goodG2B2 basic block 3
 ================== possible direct basic block ================= 
from goodG2B2 basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc196193678
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _1 = globalReturnsTrue ();
    version 1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc1961b6078 type <integer_type 0x7fc1966037e0 long unsigned int> constant 800>

dot graph START

======================================================================
 <ssa_name 0x7fc1961cd510
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc196132ab0 data>
    def_stmt data_7 = __builtin_alloca (800);
    version 7
    ptr-info 0x7fc1961b6cc0>
# .MEM_6 = VDEF <.MEM_5>
data_7 = __builtin_alloca (800);

 ================== trace ptable================== 
trace fucntion name:__builtin_alloca 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__builtin_alloca-----
this other function ------__builtin_alloca-----
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
printStructLine (data_7);
printStructLine (data_7);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:136:9: warning: use location
         printStructLine(&data[0]);
         ^~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---printStructLine-----

 ================== trace ================== 
 <ssa_name 0x7fc1961cd510
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc196132ab0 data>
    def_stmt data_7 = __builtin_alloca (800);
    version 7
    ptr-info 0x7fc1961b6cc0>
trace fucntion name:printStructLine 

 ================== trace ================== 
trace fucntion free:0 
data_7->intTwo = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:135:24: warning: use location
         data[0].intTwo = 0;
         ~~~~~~~~~~~~~~~^~~
data_7->intOne = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:134:24: warning: use location
         data[0].intOne = 0;
         ~~~~~~~~~~~~~~~^~~

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961cd510
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc196132ab0 data>
    def_stmt data_7 = __builtin_alloca (800);
    version 7
    ptr-info 0x7fc1961b6cc0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc1961936c0
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _2 = globalReturnsTrue ();
    version 2>
# .MEM_11 = VDEF <.MEM_3>
_2 = globalReturnsTrue ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsTrue 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsTrue-----
this other function ------globalReturnsTrue-----
 
 Start check Pointer Collect  

======================================================================

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961936c0
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _2 = globalReturnsTrue ();
    version 2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:goodG2B2========= [0m
[40;42m =======pre add _ fucntion:goodG2B1========= [0m
[40;44m =======print_function_path goodG2B1  function_call count: 5 level :1========  [0m
[40;42m =======pre add _ fucntion:globalReturnsTrue========= [0m
[40;33m =======POP node_fun stack:globalReturnsTrue========= [0m
[40;42m =======pre add _ fucntion:printStructLine========= [0m
[40;33m =======POP node_fun stack:printStructLine========= [0m
[40;42m =======pre add _ fucntion:__builtin_alloca========= [0m
[40;33m =======POP node_fun stack:__builtin_alloca========= [0m
[40;42m =======pre add _ fucntion:printLine========= [0m
[40;33m =======POP node_fun stack:printLine========= [0m
[40;42m =======pre add _ fucntion:globalReturnsFalse========= [0m
[40;33m =======POP node_fun stack:globalReturnsFalse========= [0m
[40;42m =======pre_check_funciton:goodG2B1========= [0m
[40;42m =======start_check_funciton:goodG2B1========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc1961935a0
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _1 = globalReturnsFalse ();
    version 1>
# .MEM_5 = VDEF <.MEM_4(D)>
_1 = globalReturnsFalse ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsFalse 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsFalse-----
this other function ------globalReturnsFalse-----
 
 Start check Pointer Collect  

======================================================================
if (_1 != 0)
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:103:7: warning: use location
     if(globalReturnsFalse())
       ^
if (_1 != 0)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:103:7: warning: use location
Cond in fucntion goodG2B1 basic block 2
 ================== possible direct basic block ================= 
from goodG2B1 basic block 3
 ================== possible direct basic block ================= 
from goodG2B1 basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961935a0
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _1 = globalReturnsFalse ();
    version 1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc1961ba440
    type <pointer_type 0x7fc1961bb150
        type <array_type 0x7fc19678c2a0 type <integer_type 0x7fc1966033f0 char>
            BLK
            size <integer_cst 0x7fc19678a390 constant 168>
            unit size <integer_cst 0x7fc19678a360 constant 21>
            align 8 symtab 0 alias set -1 canonical type 0x7fc19678c2a0 domain <integer_type 0x7fc19678c1f8>
            pointer_to_this <pointer_type 0x7fc1961bb150>>
        unsigned DI
        size <integer_cst 0x7fc1965ebcd8 constant 64>
        unit size <integer_cst 0x7fc1965ebcf0 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961bb150>
    readonly constant
    arg 0 <string_cst 0x7fc1961bc090 type <array_type 0x7fc19678c2a0>
        readonly constant static "Benign, fixed string\000">
    CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:106:19 start: CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:106:19 finish: CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:106:40>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc1961cd1f8
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc196132a20 data>
    def_stmt data_7 = __builtin_alloca (800);
    version 7
    ptr-info 0x7fc1961b6ca8>
# .MEM_6 = VDEF <.MEM_5>
data_7 = __builtin_alloca (800);

 ================== trace ptable================== 
trace fucntion name:__builtin_alloca 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__builtin_alloca-----
this other function ------__builtin_alloca-----
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
printStructLine (data_7);
printStructLine (data_7);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:115:9: warning: use location
         printStructLine(&data[0]);
         ^~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---printStructLine-----

 ================== trace ================== 
 <ssa_name 0x7fc1961cd1f8
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc196132a20 data>
    def_stmt data_7 = __builtin_alloca (800);
    version 7
    ptr-info 0x7fc1961b6ca8>
trace fucntion name:printStructLine 

 ================== trace ================== 
trace fucntion free:0 
data_7->intTwo = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:114:24: warning: use location
         data[0].intTwo = 0;
         ~~~~~~~~~~~~~~~^~~
data_7->intOne = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:113:24: warning: use location
         data[0].intOne = 0;
         ~~~~~~~~~~~~~~~^~~

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961cd1f8
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc196132a20 data>
    def_stmt data_7 = __builtin_alloca (800);
    version 7
    ptr-info 0x7fc1961b6ca8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc1961935e8
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _2 = globalReturnsTrue ();
    version 2>
# .MEM_12 = VDEF <.MEM_3>
_2 = globalReturnsTrue ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsTrue 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsTrue-----
this other function ------globalReturnsTrue-----

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:goodG2B1========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:globalReturnsTrue========= [0m
[40;33m =======POP node_fun stack:globalReturnsTrue========= [0m
[40;42m =======pre add _ fucntion:printStructLine========= [0m
[40;33m =======POP node_fun stack:printStructLine========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre add _ fucntion:printLine========= [0m
[40;33m =======POP node_fun stack:printLine========= [0m
[40;42m =======pre add _ fucntion:globalReturnsFalse========= [0m
[40;33m =======POP node_fun stack:globalReturnsFalse========= [0m
[40;42m =======pre_check_funciton:CWE401_Memory_Leak__twoIntsStruct_realloc_11_good========= [0m
[40;42m =======start_check_funciton:CWE401_Memory_Leak__twoIntsStruct_realloc_11_good========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc1961cdb40
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc1961c4c60 data>
    def_stmt data_11 = realloc (0B, 800);
    version 11
    ptr-info 0x7fc1961b6d50>
# .MEM_19 = VDEF <.MEM_18>
data_11 = realloc (0B, 800);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
data_13 = PHI <0B(2), data_11(5)>
cc1: warning: use location
this stmt have mutiple branch ---exit-----
free (data_13);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:72:9: warning: use location
         free(data);
         ^~~~~~~~~~
this stmt is child function---free-----

 ================== find ================== 
free (data_13);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:72:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
printStructLine (data_11);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:62:9: warning: use location
         printStructLine(&data[0]);
         ^~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---printStructLine-----

 ================== trace ================== 
 <ssa_name 0x7fc1961cdb40
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc1961c4c60 data>
    def_stmt data_11 = realloc (0B, 800);
    version 11
    ptr-info 0x7fc1961b6d50>
trace fucntion name:printStructLine 

 ================== trace ================== 
trace fucntion free:1 
data_11->intTwo = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:61:24: warning: use location
         data[0].intTwo = 0;
         ~~~~~~~~~~~~~~~^~~
data_11->intOne = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:60:24: warning: use location
         data[0].intOne = 0;
         ~~~~~~~~~~~~~~~^~~
if (data_11 == 0B)
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:58:12: warning: use location
         if (data == NULL) {exit(-1);}
            ^
if (data_11 == 0B)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:58:12: warning: use location
Cond in fucntion CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 3
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 4
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961cdb40
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc1961c4c60 data>
    def_stmt data_11 = realloc (0B, 800);
    version 11
    ptr-info 0x7fc1961b6d50>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (data_13);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:72:9: warning: use location
         free(data);
         ^~~~~~~~~~

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc1961cda20
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc1961c4990 data>
    def_stmt data_7 = realloc (0B, 800);
    version 7
    ptr-info 0x7fc1961b6d20>
# .MEM_28 = VDEF <.MEM_27>
data_7 = realloc (0B, 800);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
data_9 = PHI <0B(9), data_7(12)>
cc1: warning: use location
this stmt have mutiple branch ---exit-----
free (data_9);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:94:9: warning: use location
         free(data);
         ^~~~~~~~~~
this stmt is child function---free-----

 ================== find ================== 
free (data_9);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:94:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return  [0m
# .MEM_31 = VDEF <.MEM_30>
printStructLine (data_7);
bb index := 10
# .MEM_32 = VDEF <.MEM_28>
exit (-1);
beacuse in succ := 11 have return 
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================
printStructLine (data_7);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:89:9: warning: use location
         printStructLine(&data[0]);
         ^~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---printStructLine-----

 ================== trace ================== 
 <ssa_name 0x7fc1961cda20
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc1961c4990 data>
    def_stmt data_7 = realloc (0B, 800);
    version 7
    ptr-info 0x7fc1961b6d20>
trace fucntion name:printStructLine 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return  [0m
# .MEM_30 = VDEF <.MEM_29>
data_7->intTwo = 0;
bb index := 10
# .MEM_32 = VDEF <.MEM_28>
exit (-1);
beacuse in succ := 11 have return 
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================
data_7->intTwo = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:88:24: warning: use location
         data[0].intTwo = 0;
         ~~~~~~~~~~~~~~~^~~

======================================================================
[40;31m    branch possiable have return  [0m
# .MEM_29 = VDEF <.MEM_28>
data_7->intOne = 0;
bb index := 10
# .MEM_32 = VDEF <.MEM_28>
exit (-1);
beacuse in succ := 11 have return 
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================
data_7->intOne = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:87:24: warning: use location
         data[0].intOne = 0;
         ~~~~~~~~~~~~~~~^~~
if (data_7 == 0B)
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:85:12: warning: use location
         if (data == NULL) {exit(-1);}
            ^
if (data_7 == 0B)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:85:12: warning: use location
Cond in fucntion CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 10
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 11
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961cda20
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc1961c4990 data>
    def_stmt data_7 = realloc (0B, 800);
    version 7
    ptr-info 0x7fc1961b6d20>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (data_9);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:94:9: warning: use location
         free(data);
         ^~~~~~~~~~

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc1961cdaf8
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _10 = globalReturnsTrue ();
    version 10>
# .MEM_18 = VDEF <.MEM_1(D)>
_10 = globalReturnsTrue ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsTrue 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsTrue-----
this other function ------globalReturnsTrue-----
 
 Start check Pointer Collect  

======================================================================
if (_10 != 0)
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:54:7: warning: use location
     if(globalReturnsTrue())
       ^
if (_10 != 0)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:54:7: warning: use location
Cond in fucntion CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 2
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 3
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961cdaf8
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _10 = globalReturnsTrue ();
    version 10>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (data_13);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:72:9: warning: use location
         free(data);
         ^~~~~~~~~~
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (data_9);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:94:9: warning: use location
         free(data);
         ^~~~~~~~~~

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc1961cdb88
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _12 = globalReturnsFalse ();
    version 12>
# .MEM_24 = VDEF <.MEM_14>
_12 = globalReturnsFalse ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsFalse 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsFalse-----
this other function ------globalReturnsFalse-----
 
 Start check Pointer Collect  

======================================================================
if (_12 != 0)
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:64:7: warning: use location
     if(globalReturnsFalse())
       ^
if (_12 != 0)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:64:7: warning: use location
Cond in fucntion CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 6
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 7
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961cdb88
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _12 = globalReturnsFalse ();
    version 12>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (data_13);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:72:9: warning: use location
         free(data);
         ^~~~~~~~~~
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (data_9);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:94:9: warning: use location
         free(data);
         ^~~~~~~~~~

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc1961c5ac0
    type <pointer_type 0x7fc1961bb150
        type <array_type 0x7fc19678c2a0 type <integer_type 0x7fc1966033f0 char>
            BLK
            size <integer_cst 0x7fc19678a390 constant 168>
            unit size <integer_cst 0x7fc19678a360 constant 21>
            align 8 symtab 0 alias set -1 canonical type 0x7fc19678c2a0 domain <integer_type 0x7fc19678c1f8>
            pointer_to_this <pointer_type 0x7fc1961bb150>>
        unsigned DI
        size <integer_cst 0x7fc1965ebcd8 constant 64>
        unit size <integer_cst 0x7fc1965ebcf0 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961bb150>
    readonly constant
    arg 0 <string_cst 0x7fc1961aede0 type <array_type 0x7fc19678c2a0>
        readonly constant static "Benign, fixed string\000">
    CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:67:19 start: CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:67:19 finish: CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:67:40>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc1961cd9d8
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _6 = globalReturnsTrue ();
    version 6>
# .MEM_27 = VDEF <.MEM_15>
_6 = globalReturnsTrue ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsTrue 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsTrue-----
this other function ------globalReturnsTrue-----
 
 Start check Pointer Collect  

======================================================================
if (_6 != 0)
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:81:7: warning: use location
     if(globalReturnsTrue())
       ^
if (_6 != 0)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:81:7: warning: use location
Cond in fucntion CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 9
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 10
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961cd9d8
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _6 = globalReturnsTrue ();
    version 6>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (data_13);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:72:9: warning: use location
         free(data);
         ^~~~~~~~~~
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (data_9);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:94:9: warning: use location
         free(data);
         ^~~~~~~~~~

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc1961cda68
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _8 = globalReturnsTrue ();
    version 8>
# .MEM_33 = VDEF <.MEM_16>
_8 = globalReturnsTrue ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsTrue 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsTrue-----
this other function ------globalReturnsTrue-----
 
 Start check Pointer Collect  

======================================================================
if (_8 != 0)
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:91:7: warning: use location
     if(globalReturnsTrue())
       ^
if (_8 != 0)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:91:7: warning: use location
Cond in fucntion CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 13
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 14
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_11_good basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961cda68
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _8 = globalReturnsTrue ();
    version 8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_25 = VDEF <.MEM_24>
free (data_13);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:72:9: warning: use location
         free(data);
         ^~~~~~~~~~
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_33>
free (data_9);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:94:9: warning: use location
         free(data);
         ^~~~~~~~~~

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:CWE401_Memory_Leak__twoIntsStruct_realloc_11_good========= [0m
[40;44m =======node_fun:goodG2B2========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path goodG2B2  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:globalReturnsTrue========= [0m
[40;33m =======POP node_fun stack:globalReturnsTrue========= [0m
[40;42m =======pre add _ fucntion:printStructLine========= [0m
[40;33m =======POP node_fun stack:printStructLine========= [0m
[40;42m =======pre add _ fucntion:__builtin_alloca========= [0m
[40;33m =======POP node_fun stack:__builtin_alloca========= [0m
[40;42m =======pre_check_funciton:goodG2B2========= [0m
[40;42m =======start_check_funciton:goodG2B2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc196193678
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _1 = globalReturnsTrue ();
    version 1>
# .MEM_5 = VDEF <.MEM_4(D)>
_1 = globalReturnsTrue ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsTrue 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsTrue-----
this other function ------globalReturnsTrue-----
 
 Start check Pointer Collect  

======================================================================
if (_1 != 0)
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c: In function â€˜goodG2B2â€™:
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:129:7: warning: use location
     if(globalReturnsTrue())
       ^
if (_1 != 0)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:129:7: warning: use location
Cond in fucntion goodG2B2 basic block 2
 ================== possible direct basic block ================= 
from goodG2B2 basic block 3
 ================== possible direct basic block ================= 
from goodG2B2 basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc196193678
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _1 = globalReturnsTrue ();
    version 1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fc1961b6078 type <integer_type 0x7fc1966037e0 long unsigned int> constant 800>

dot graph START

======================================================================
 <ssa_name 0x7fc1961cd510
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc196132ab0 data>
    def_stmt data_7 = __builtin_alloca (800);
    version 7
    ptr-info 0x7fc1961b6cc0>
# .MEM_6 = VDEF <.MEM_5>
data_7 = __builtin_alloca (800);

 ================== trace ptable================== 
trace fucntion name:__builtin_alloca 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__builtin_alloca-----
this other function ------__builtin_alloca-----
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
printStructLine (data_7);
printStructLine (data_7);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:136:9: warning: use location
         printStructLine(&data[0]);
         ^~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---printStructLine-----

 ================== trace ================== 
 <ssa_name 0x7fc1961cd510
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc196132ab0 data>
    def_stmt data_7 = __builtin_alloca (800);
    version 7
    ptr-info 0x7fc1961b6cc0>
trace fucntion name:printStructLine 

 ================== trace ================== 
trace fucntion free:0 
data_7->intTwo = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:135:24: warning: use location
         data[0].intTwo = 0;
         ~~~~~~~~~~~~~~~^~~
data_7->intOne = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:134:24: warning: use location
         data[0].intOne = 0;
         ~~~~~~~~~~~~~~~^~~

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961cd510
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc196132ab0 data>
    def_stmt data_7 = __builtin_alloca (800);
    version 7
    ptr-info 0x7fc1961b6cc0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc1961936c0
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _2 = globalReturnsTrue ();
    version 2>
# .MEM_11 = VDEF <.MEM_3>
_2 = globalReturnsTrue ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsTrue 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsTrue-----
this other function ------globalReturnsTrue-----
 
 Start check Pointer Collect  

======================================================================

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961936c0
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _2 = globalReturnsTrue ();
    version 2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:goodG2B2========= [0m
[40;44m =======node_fun:goodG2B1========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path goodG2B1  function_call count: 5 level :0========  [0m
[40;42m =======pre add _ fucntion:globalReturnsTrue========= [0m
[40;33m =======POP node_fun stack:globalReturnsTrue========= [0m
[40;42m =======pre add _ fucntion:printStructLine========= [0m
[40;33m =======POP node_fun stack:printStructLine========= [0m
[40;42m =======pre add _ fucntion:__builtin_alloca========= [0m
[40;33m =======POP node_fun stack:__builtin_alloca========= [0m
[40;42m =======pre add _ fucntion:printLine========= [0m
[40;33m =======POP node_fun stack:printLine========= [0m
[40;42m =======pre add _ fucntion:globalReturnsFalse========= [0m
[40;33m =======POP node_fun stack:globalReturnsFalse========= [0m
[40;42m =======pre_check_funciton:goodG2B1========= [0m
[40;42m =======start_check_funciton:goodG2B1========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc1961935a0
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _1 = globalReturnsFalse ();
    version 1>
# .MEM_5 = VDEF <.MEM_4(D)>
_1 = globalReturnsFalse ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsFalse 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsFalse-----
this other function ------globalReturnsFalse-----
 
 Start check Pointer Collect  

======================================================================
if (_1 != 0)
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c: In function â€˜goodG2B1â€™:
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:103:7: warning: use location
     if(globalReturnsFalse())
       ^
if (_1 != 0)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:103:7: warning: use location
Cond in fucntion goodG2B1 basic block 2
 ================== possible direct basic block ================= 
from goodG2B1 basic block 3
 ================== possible direct basic block ================= 
from goodG2B1 basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961935a0
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _1 = globalReturnsFalse ();
    version 1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fc1961ba440
    type <pointer_type 0x7fc1961bb150
        type <array_type 0x7fc19678c2a0 type <integer_type 0x7fc1966033f0 char>
            BLK
            size <integer_cst 0x7fc19678a390 constant 168>
            unit size <integer_cst 0x7fc19678a360 constant 21>
            align 8 symtab 0 alias set -1 canonical type 0x7fc19678c2a0 domain <integer_type 0x7fc19678c1f8>
            pointer_to_this <pointer_type 0x7fc1961bb150>>
        unsigned DI
        size <integer_cst 0x7fc1965ebcd8 constant 64>
        unit size <integer_cst 0x7fc1965ebcf0 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961bb150>
    readonly constant
    arg 0 <string_cst 0x7fc1961bc090 type <array_type 0x7fc19678c2a0>
        readonly constant static "Benign, fixed string\000">
    CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:106:19 start: CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:106:19 finish: CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:106:40>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc1961cd1f8
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc196132a20 data>
    def_stmt data_7 = __builtin_alloca (800);
    version 7
    ptr-info 0x7fc1961b6ca8>
# .MEM_6 = VDEF <.MEM_5>
data_7 = __builtin_alloca (800);

 ================== trace ptable================== 
trace fucntion name:__builtin_alloca 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__builtin_alloca-----
this other function ------__builtin_alloca-----
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
printStructLine (data_7);
printStructLine (data_7);
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:115:9: warning: use location
         printStructLine(&data[0]);
         ^~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---printStructLine-----

 ================== trace ================== 
 <ssa_name 0x7fc1961cd1f8
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc196132a20 data>
    def_stmt data_7 = __builtin_alloca (800);
    version 7
    ptr-info 0x7fc1961b6ca8>
trace fucntion name:printStructLine 

 ================== trace ================== 
trace fucntion free:0 
data_7->intTwo = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:114:24: warning: use location
         data[0].intTwo = 0;
         ~~~~~~~~~~~~~~~^~~
data_7->intOne = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_11.c:113:24: warning: use location
         data[0].intOne = 0;
         ~~~~~~~~~~~~~~~^~~

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc1961cd1f8
    type <pointer_type 0x7fc1961b2150
        type <record_type 0x7fc1961623f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7fc1965ebcd8 constant 64>
            unit size <integer_cst 0x7fc1965ebcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7fc196162348 fields <field_decl 0x7fc196148e40 intOne> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
            pointer_to_this <pointer_type 0x7fc1961b2150> chain <type_decl 0x7fc196148da8 D.3631>>
        sizes-gimplified public unsigned DI size <integer_cst 0x7fc1965ebcd8 64> unit size <integer_cst 0x7fc1965ebcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fc1961b23f0>
    var <var_decl 0x7fc196132a20 data>
    def_stmt data_7 = __builtin_alloca (800);
    version 7
    ptr-info 0x7fc1961b6ca8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc1961935e8
    type <integer_type 0x7fc1966035e8 int public SI
        size <integer_cst 0x7fc1965ebf18 constant 32>
        unit size <integer_cst 0x7fc1965ebf30 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fc1966035e8 precision 32 min <integer_cst 0x7fc1965ebed0 -2147483648> max <integer_cst 0x7fc1965ebee8 2147483647> context <translation_unit_decl 0x7fc1961a8780 CWE401_Memory_Leak__twoIntsStruct_realloc_11.c>
        pointer_to_this <pointer_type 0x7fc19660ba80>>
   
    def_stmt _2 = globalReturnsTrue ();
    version 2>
# .MEM_12 = VDEF <.MEM_3>
_2 = globalReturnsTrue ();

 ================== trace ptable================== 
trace fucntion name:globalReturnsTrue 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---globalReturnsTrue-----
this other function ------globalReturnsTrue-----

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:goodG2B1========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
printLine ("Calling good()...");
CWE401_Memory_Leak__twoIntsStruct_realloc_11_good ();
printLine ("Finished good()");
return 0;

=======Mapping node_fun:CWE401_Memory_Leak__twoIntsStruct_realloc_11_good=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_10 = globalReturnsTrue ();
if (_10 != 0)
  goto <bb 3>; [50.00%]
else
  goto <bb 6>; [50.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [50.00%]:
data_11 = realloc (0B, 800);
if (data_11 == 0B)
  goto <bb 4>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:0=========

 bb index 4 
<bb 4> [0.02%]:
exit (-1);

=======is loop:0=========

 bb index 5 
<bb 5> [49.98%]:
data_11->intOne = 0;
data_11->intTwo = 0;
printStructLine (data_11);

=======is loop:0=========

 bb index 6 
<bb 6> [99.98%]:
# data_13 = PHI <0B(2), data_11(5)>
_12 = globalReturnsFalse ();
if (_12 != 0)
  goto <bb 7>; [46.00%]
else
  goto <bb 8>; [54.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [45.99%]:
printLine ("Benign, fixed string");
goto <bb 9>; [100.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [53.99%]:
free (data_13);

=======is loop:0=========

 bb index 9 
<bb 9> [99.98%]:
_6 = globalReturnsTrue ();
if (_6 != 0)
  goto <bb 10>; [50.00%]
else
  goto <bb 13>; [50.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [49.99%]:
data_7 = realloc (0B, 800);
if (data_7 == 0B)
  goto <bb 11>; [0.04%]
else
  goto <bb 12>; [99.96%]

=======is loop:0=========

 bb index 11 
<bb 11> [0.02%]:
exit (-1);

=======is loop:0=========

 bb index 12 
<bb 12> [49.97%]:
data_7->intOne = 0;
data_7->intTwo = 0;
printStructLine (data_7);

=======is loop:0=========

 bb index 13 
<bb 13> [99.96%]:
# data_9 = PHI <0B(9), data_7(12)>
_8 = globalReturnsTrue ();
if (_8 != 0)
  goto <bb 14>; [36.64%]
else
  goto <bb 15>; [63.36%]

=======is loop:0=========

 bb index 14 
<bb 14> [36.63%]:
free (data_9);

=======is loop:0=========

 bb index 15 
<bb 15> [99.96%]:
goodG2B1 ();
goodG2B2 ();
return;

=======Mapping node_fun:goodG2B2=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = globalReturnsTrue ();
if (_1 != 0)
  goto <bb 3>; [36.64%]
else
  goto <bb 4>; [63.36%]

=======is loop:0=========

 bb index 3 
<bb 3> [36.64%]:
data_7 = __builtin_alloca (800);
data_7->intOne = 0;
data_7->intTwo = 0;
printStructLine (data_7);

=======is loop:0=========

 bb index 4 
<bb 4> [100.00%]:
_2 = globalReturnsTrue ();
return;

=======Mapping node_fun:goodG2B1=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = globalReturnsFalse ();
if (_1 != 0)
  goto <bb 3>; [46.00%]
else
  goto <bb 4>; [54.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [46.00%]:
printLine ("Benign, fixed string");
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [54.00%]:
data_7 = __builtin_alloca (800);
data_7->intOne = 0;
data_7->intTwo = 0;
printStructLine (data_7);

=======is loop:0=========

 bb index 5 
<bb 5> [100.00%]:
_2 = globalReturnsTrue ();
return;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 12 [0m
[40;34m    used_stmt array stack totalsize of : 512 [0m
[40;34m    collect time: : 0.000121 s [0m
[40;34m    algorithm time: 0.020451 s [0m
[40;34m    gimple stmt count : : 50 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
