=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
succs:= 2
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 0 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_7 = VDEF <.MEM_6>
printStructLine (data_4);
# .MEM_2 = VDEF <.MEM_1(D)>
data_3 = __builtin_alloca (800);
# .MEM_6 = VDEF <.MEM_5>
printStructLine (data_3);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodB2GSource========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodB2GSource  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printStructLine========= [0m
[40;33m =======POP node_fun stack:printStructLine========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodB2GSource========= [0m
[40;42m =======start_check_funciton:CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodB2GSource========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f85b4a57708
    type <pointer_type 0x7f85b4a76150
        type <record_type 0x7f85b4a263f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7f85b4eafcd8 constant 64>
            unit size <integer_cst 0x7f85b4eafcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7f85b4a26348 fields <field_decl 0x7f85b4a0ce40 intOne> context <translation_unit_decl 0x7f85b4a6c5a0 CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c>
            pointer_to_this <pointer_type 0x7f85b4a76150> chain <type_decl 0x7f85b4a0cda8 D.3631>>
        public unsigned DI size <integer_cst 0x7f85b4eafcd8 64> unit size <integer_cst 0x7f85b4eafcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f85b4a761f8>
    var <parm_decl 0x7f85b4a7b280 data>
    def_stmt data_4 = realloc (data_2(D), 800);
    version 4
    ptr-info 0x7f85b4a7a588>
# .MEM_3 = VDEF <.MEM_1(D)>
data_4 = realloc (data_2(D), 800);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
data_4 = realloc (data_2(D), 800);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c: In function â€˜CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodB2GSourceâ€™:
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:56:10: warning: use location
     data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---realloc-----

 ================== find ================== 
data_4 = realloc (data_2(D), 800);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:56:10: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return  [0m
_8 = data_4;
bb index := 2
# .MEM_9 = VDEF <.MEM_3>
exit (-1);
beacuse in succ := 3 have return 
gimple stmt in succ := 4 ,possiable got to succ := 3

======================================================================
_8 = data_4;
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:62:12: warning: use location
     return data;
            ^~~~

======================================================================
[40;31m    branch possiable have return  [0m
# .MEM_7 = VDEF <.MEM_6>
printStructLine (data_4);
bb index := 2
# .MEM_9 = VDEF <.MEM_3>
exit (-1);
beacuse in succ := 3 have return 
gimple stmt in succ := 4 ,possiable got to succ := 3

======================================================================
printStructLine (data_4);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:61:5: warning: use location
     printStructLine(&data[0]);
     ^~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---printStructLine-----

 ================== trace ================== 
 <ssa_name 0x7f85b4a57708
    type <pointer_type 0x7f85b4a76150
        type <record_type 0x7f85b4a263f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7f85b4eafcd8 constant 64>
            unit size <integer_cst 0x7f85b4eafcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7f85b4a26348 fields <field_decl 0x7f85b4a0ce40 intOne> context <translation_unit_decl 0x7f85b4a6c5a0 CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c>
            pointer_to_this <pointer_type 0x7f85b4a76150> chain <type_decl 0x7f85b4a0cda8 D.3631>>
        public unsigned DI size <integer_cst 0x7f85b4eafcd8 64> unit size <integer_cst 0x7f85b4eafcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f85b4a761f8>
    var <parm_decl 0x7f85b4a7b280 data>
    def_stmt data_4 = realloc (data_2(D), 800);
    version 4
    ptr-info 0x7f85b4a7a588>
trace fucntion name:printStructLine 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return  [0m
# .MEM_6 = VDEF <.MEM_5>
data_4->intTwo = 0;
bb index := 2
# .MEM_9 = VDEF <.MEM_3>
exit (-1);
beacuse in succ := 3 have return 
gimple stmt in succ := 4 ,possiable got to succ := 3

======================================================================
data_4->intTwo = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:60:20: warning: use location
     data[0].intTwo = 0;
     ~~~~~~~~~~~~~~~^~~

======================================================================
[40;31m    branch possiable have return  [0m
# .MEM_5 = VDEF <.MEM_3>
data_4->intOne = 0;
bb index := 2
# .MEM_9 = VDEF <.MEM_3>
exit (-1);
beacuse in succ := 3 have return 
gimple stmt in succ := 4 ,possiable got to succ := 3

======================================================================
data_4->intOne = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:59:20: warning: use location
     data[0].intOne = 0;
     ~~~~~~~~~~~~~~~^~~
if (data_4 == 0B)
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:57:8: warning: use location
     if (data == NULL) {exit(-1);}
        ^
if (data_4 == 0B)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:57:8: warning: use location
Cond in fucntion CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodB2GSource basic block 2
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodB2GSource basic block 3
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodB2GSource basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f85b4a57708
    type <pointer_type 0x7f85b4a76150
        type <record_type 0x7f85b4a263f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7f85b4eafcd8 constant 64>
            unit size <integer_cst 0x7f85b4eafcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7f85b4a26348 fields <field_decl 0x7f85b4a0ce40 intOne> context <translation_unit_decl 0x7f85b4a6c5a0 CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c>
            pointer_to_this <pointer_type 0x7f85b4a76150> chain <type_decl 0x7f85b4a0cda8 D.3631>>
        public unsigned DI size <integer_cst 0x7f85b4eafcd8 64> unit size <integer_cst 0x7f85b4eafcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f85b4a761f8>
    var <parm_decl 0x7f85b4a7b280 data>
    def_stmt data_4 = realloc (data_2(D), 800);
    version 4
    ptr-info 0x7f85b4a7a588>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_3 = VDEF <.MEM_1(D)>
data_4 = realloc (data_2(D), 800);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:56:10: warning: use location
     data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 ================== Start Use after free Check ================== 

============================================================
# .MEM_3 = VDEF <.MEM_1(D)>
data_4 = realloc (data_2(D), 800);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:56:10: warning: Use after free error!: free location 
_8 = data_4;
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:62:12: warning: use location
     return data;
            ^~~~

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_3 = VDEF <.MEM_1(D)>
data_4 = realloc (data_2(D), 800);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:56:10: warning: Use after free error!: free location 
     data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# .MEM_7 = VDEF <.MEM_6>
printStructLine (data_4);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:61:5: warning: use location
     printStructLine(&data[0]);
     ^~~~~~~~~~~~~~~~~~~~~~~~~

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_3 = VDEF <.MEM_1(D)>
data_4 = realloc (data_2(D), 800);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:56:10: warning: Use after free error!: free location 
     data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# .MEM_6 = VDEF <.MEM_5>
data_4->intTwo = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:60:20: warning: use location
     data[0].intTwo = 0;
     ~~~~~~~~~~~~~~~^~~

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_3 = VDEF <.MEM_1(D)>
data_4 = realloc (data_2(D), 800);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:56:10: warning: Use after free error!: free location 
     data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# .MEM_5 = VDEF <.MEM_3>
data_4->intOne = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:59:20: warning: use location
     data[0].intOne = 0;
     ~~~~~~~~~~~~~~~^~~

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_3 = VDEF <.MEM_1(D)>
data_4 = realloc (data_2(D), 800);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:56:10: warning: Use after free error!: free location 
     data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
if (data_4 == 0B)
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:57:8: warning: use location
     if (data == NULL) {exit(-1);}
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f85b4a57708
    type <pointer_type 0x7f85b4a76150
        type <record_type 0x7f85b4a263f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7f85b4eafcd8 constant 64>
            unit size <integer_cst 0x7f85b4eafcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7f85b4a26348 fields <field_decl 0x7f85b4a0ce40 intOne> context <translation_unit_decl 0x7f85b4a6c5a0 CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c>
            pointer_to_this <pointer_type 0x7f85b4a76150> chain <type_decl 0x7f85b4a0cda8 D.3631>>
        public unsigned DI size <integer_cst 0x7f85b4eafcd8 64> unit size <integer_cst 0x7f85b4eafcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f85b4a761f8>
    var <parm_decl 0x7f85b4a7b280 data>
    def_stmt data_4 = realloc (data_2(D), 800);
    version 4
    ptr-info 0x7f85b4a7a588>
# .MEM_3 = VDEF <.MEM_1(D)>
data_4 = realloc (data_2(D), 800);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================
data_4 = realloc (data_2(D), 800);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:56:10: warning: use location
     data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---realloc-----

 ================== find ================== 
data_4 = realloc (data_2(D), 800);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:56:10: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return  [0m
_8 = data_4;
bb index := 2
# .MEM_9 = VDEF <.MEM_3>
exit (-1);
beacuse in succ := 3 have return 
gimple stmt in succ := 4 ,possiable got to succ := 3

======================================================================
_8 = data_4;
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:62:12: warning: use location
     return data;
            ^~~~

======================================================================
[40;31m    branch possiable have return  [0m
# .MEM_7 = VDEF <.MEM_6>
printStructLine (data_4);
bb index := 2
# .MEM_9 = VDEF <.MEM_3>
exit (-1);
beacuse in succ := 3 have return 
gimple stmt in succ := 4 ,possiable got to succ := 3

======================================================================
# .MEM_7 = VDEF <.MEM_6>
printStructLine (data_4);
printStructLine (data_4);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:61:5: warning: use location
     printStructLine(&data[0]);
     ^~~~~~~~~~~~~~~~~~~~~~~~~
this stmt is child function---printStructLine-----

 ================== trace ================== 
 <ssa_name 0x7f85b4a57708
    type <pointer_type 0x7f85b4a76150
        type <record_type 0x7f85b4a263f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7f85b4eafcd8 constant 64>
            unit size <integer_cst 0x7f85b4eafcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7f85b4a26348 fields <field_decl 0x7f85b4a0ce40 intOne> context <translation_unit_decl 0x7f85b4a6c5a0 CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c>
            pointer_to_this <pointer_type 0x7f85b4a76150> chain <type_decl 0x7f85b4a0cda8 D.3631>>
        public unsigned DI size <integer_cst 0x7f85b4eafcd8 64> unit size <integer_cst 0x7f85b4eafcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f85b4a761f8>
    var <parm_decl 0x7f85b4a7b280 data>
    def_stmt data_4 = realloc (data_2(D), 800);
    version 4
    ptr-info 0x7f85b4a7a588>
trace fucntion name:printStructLine 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return  [0m
# .MEM_6 = VDEF <.MEM_5>
data_4->intTwo = 0;
bb index := 2
# .MEM_9 = VDEF <.MEM_3>
exit (-1);
beacuse in succ := 3 have return 
gimple stmt in succ := 4 ,possiable got to succ := 3

======================================================================
data_4->intTwo = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:60:20: warning: use location
     data[0].intTwo = 0;
     ~~~~~~~~~~~~~~~^~~

======================================================================
[40;31m    branch possiable have return  [0m
# .MEM_5 = VDEF <.MEM_3>
data_4->intOne = 0;
bb index := 2
# .MEM_9 = VDEF <.MEM_3>
exit (-1);
beacuse in succ := 3 have return 
gimple stmt in succ := 4 ,possiable got to succ := 3

======================================================================
data_4->intOne = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:59:20: warning: use location
     data[0].intOne = 0;
     ~~~~~~~~~~~~~~~^~~
if (data_4 == 0B)
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:57:8: warning: use location
     if (data == NULL) {exit(-1);}
        ^
if (data_4 == 0B)

 ================== find cond branch ================= 
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:57:8: warning: use location
Cond in fucntion CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodB2GSource basic block 2
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodB2GSource basic block 3
 ================== possible direct basic block ================= 
from CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodB2GSource basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f85b4a57708
    type <pointer_type 0x7f85b4a76150
        type <record_type 0x7f85b4a263f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7f85b4eafcd8 constant 64>
            unit size <integer_cst 0x7f85b4eafcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7f85b4a26348 fields <field_decl 0x7f85b4a0ce40 intOne> context <translation_unit_decl 0x7f85b4a6c5a0 CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c>
            pointer_to_this <pointer_type 0x7f85b4a76150> chain <type_decl 0x7f85b4a0cda8 D.3631>>
        public unsigned DI size <integer_cst 0x7f85b4eafcd8 64> unit size <integer_cst 0x7f85b4eafcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f85b4a761f8>
    var <parm_decl 0x7f85b4a7b280 data>
    def_stmt data_4 = realloc (data_2(D), 800);
    version 4
    ptr-info 0x7f85b4a7a588>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_3 = VDEF <.MEM_1(D)>
data_4 = realloc (data_2(D), 800);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:56:10: warning: use location
     data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 ================== Start Use after free Check ================== 

============================================================
# .MEM_3 = VDEF <.MEM_1(D)>
data_4 = realloc (data_2(D), 800);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:56:10: warning: Use after free error!: free location 
_8 = data_4;
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:62:12: warning: use location
     return data;
            ^~~~

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_3 = VDEF <.MEM_1(D)>
data_4 = realloc (data_2(D), 800);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:56:10: warning: Use after free error!: free location 
     data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# .MEM_7 = VDEF <.MEM_6>
printStructLine (data_4);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:61:5: warning: use location
     printStructLine(&data[0]);
     ^~~~~~~~~~~~~~~~~~~~~~~~~

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_3 = VDEF <.MEM_1(D)>
data_4 = realloc (data_2(D), 800);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:56:10: warning: Use after free error!: free location 
     data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# .MEM_6 = VDEF <.MEM_5>
data_4->intTwo = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:60:20: warning: use location
     data[0].intTwo = 0;
     ~~~~~~~~~~~~~~~^~~

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_3 = VDEF <.MEM_1(D)>
data_4 = realloc (data_2(D), 800);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:56:10: warning: Use after free error!: free location 
     data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# .MEM_5 = VDEF <.MEM_3>
data_4->intOne = 0;
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:59:20: warning: use location
     data[0].intOne = 0;
     ~~~~~~~~~~~~~~~^~~

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_3 = VDEF <.MEM_1(D)>
data_4 = realloc (data_2(D), 800);
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:56:10: warning: Use after free error!: free location 
     data = (twoIntsStruct *)realloc(data, 100*sizeof(twoIntsStruct));
     ~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
if (data_4 == 0B)
CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c:57:8: warning: use location
     if (data == NULL) {exit(-1);}
        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================
[40;33m =======POP node_fun stack:CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodB2GSource========= [0m
[40;44m =======node_fun:CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodG2BSource========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodG2BSource  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printStructLine========= [0m
[40;33m =======POP node_fun stack:printStructLine========= [0m
[40;42m =======pre add _ fucntion:__builtin_alloca========= [0m
[40;33m =======POP node_fun stack:__builtin_alloca========= [0m
[40;42m =======pre_check_funciton:CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodG2BSource========= [0m
[40;42m =======start_check_funciton:CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodG2BSource========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f85b4a7a078 type <integer_type 0x7f85b4ec77e0 long unsigned int> constant 800>

dot graph START

======================================================================
 <ssa_name 0x7f85b4a574c8
    type <pointer_type 0x7f85b4a76150
        type <record_type 0x7f85b4a263f0 twoIntsStruct type_0 DI
            size <integer_cst 0x7f85b4eafcd8 constant 64>
            unit size <integer_cst 0x7f85b4eafcf0 constant 8>
            align 32 symtab 0 alias set -1 canonical type 0x7f85b4a26348 fields <field_decl 0x7f85b4a0ce40 intOne> context <translation_unit_decl 0x7f85b4a6c5a0 CWE401_Memory_Leak__twoIntsStruct_realloc_61b.c>
            pointer_to_this <pointer_type 0x7f85b4a76150> chain <type_decl 0x7f85b4a0cda8 D.3631>>
        public unsigned DI size <integer_cst 0x7f85b4eafcd8 64> unit size <integer_cst 0x7f85b4eafcf0 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f85b4a761f8>
    var <parm_decl 0x7f85b4a7b200 data>
    def_stmt data_3 = __builtin_alloca (800);
    version 3
    ptr-info 0x7f85b4a7a528>
# .MEM_2 = VDEF <.MEM_1(D)>
data_3 = __builtin_alloca (800);

 ================== trace ptable================== 
trace fucntion name:__builtin_alloca 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---__builtin_alloca-----
this other function ------__builtin_alloca-----

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodG2BSource========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodB2GSource=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
data_4 = realloc (data_2(D), 800);
if (data_4 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [0.04%]:
exit (-1);

=======is loop:0=========

 bb index 4 
<bb 4> [99.96%]:
data_4->intOne = 0;
data_4->intTwo = 0;
printStructLine (data_4);
_8 = data_4;
return data_4;

=======Mapping node_fun:CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodG2BSource=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
data_3 = __builtin_alloca (800);
data_3->intOne = 0;
data_3->intTwo = 0;
printStructLine (data_3);
_7 = data_3;
return data_3;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 1 [0m
[40;34m    used_stmt array stack totalsize of : 168 [0m
[40;34m    collect time: : 0.000048 s [0m
[40;34m    algorithm time: 0.002963 s [0m
[40;34m    gimple stmt count : : 14 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
