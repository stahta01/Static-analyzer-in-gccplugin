
;; Function __find_if (_ZSt9__find_ifIPhN9__gnu_cxx5__ops17_Iter_equals_iterINS1_17__normal_iteratorIS0_NSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEEEEEEEET_SD_SD_T0_St26random_access_iterator_tag, funcdef_no=106, decl_uid=4048, cgraph_uid=6, symbol_order=3591) (unlikely executed)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;;
;; Loop 1
;;  header 3, latch 8
;;  depth 1, outer 0
;;  nodes: 3 8 7 6 5 4
;; 2 succs { 3 }
;; 3 succs { 9 4 }
;; 4 succs { 16 5 }
;; 5 succs { 16 6 }
;; 6 succs { 16 7 }
;; 7 succs { 16 8 }
;; 8 succs { 3 }
;; 9 succs { 16 14 12 10 }
;; 10 succs { 16 11 }
;; 11 succs { 12 }
;; 12 succs { 16 13 }
;; 13 succs { 14 }
;; 14 succs { 16 15 }
;; 15 succs { 16 }
;; 16 succs { 1 }
__find_if (unsigned char * __first, unsigned char * __last, struct _Iter_equals_iter __pred, struct random_access_iterator_tag D.6106)
{
  unsigned char * const __pred$_M_current;
  difference_type __trip_count;
  long int _1;
  long int _2;
  long int _3;
  long int _4;
  long int _5;
  unsigned char * _10;
  unsigned char _18;
  unsigned char _22;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;

  <bb 2> [14.13%]:
  __pred$_M_current_34 = MEM[(struct _Iter_equals_iter *)&__pred];
  _1 = (long int) __last_12(D);
  _2 = (long int) __first_13(D);
  _3 = _1 - _2;
  __trip_count_14 = _3 >> 2;

  <bb 3> [100.00%]:
  # __first_6 = PHI <__first_13(D)(2), __first_20(8)>
  # __trip_count_9 = PHI <__trip_count_14(2), __trip_count_21(8)>
  if (__trip_count_9 <= 0)
    goto <bb 9>; [3.00%]
  else
    goto <bb 4>; [97.00%]

  <bb 4> [97.00%]:
  _25 = *__first_6;
  _22 = *__pred$_M_current_34;
  if (_22 == _25)
    goto <bb 16> (<L3>); [3.00%]
  else
    goto <bb 5>; [97.00%]

  <bb 5> [94.09%]:
  __first_16 = __first_6 + 1;
  _18 = MEM[(unsigned char *)__first_6 + 1B];
  if (_18 == _22)
    goto <bb 16> (<L3>); [3.00%]
  else
    goto <bb 6>; [97.00%]

  <bb 6> [91.27%]:
  __first_17 = &MEM[(void *)__first_6 + 2B];
  _26 = MEM[(unsigned char *)__first_6 + 2B];
  if (_22 == _26)
    goto <bb 16> (<L3>); [3.00%]
  else
    goto <bb 7>; [97.00%]

  <bb 7> [88.53%]:
  __first_19 = &MEM[(void *)__first_6 + 3B];
  _27 = MEM[(unsigned char *)__first_6 + 3B];
  if (_22 == _27)
    goto <bb 16> (<L3>); [3.00%]
  else
    goto <bb 8>; [97.00%]

  <bb 8> [85.87%]:
  __first_20 = &MEM[(void *)__first_6 + 4B];
  __trip_count_21 = __trip_count_9 + -1;
  goto <bb 3>; [100.00%]

  <bb 9> [3.00%]:
  _4 = (long int) __first_6;
  _5 = _1 - _4;
  switch (_5) <default: <L3> [25.00%], case 1: <L2> [25.00%], case 2: <L1> [25.00%], case 3: <L0> [25.00%]>

<L0> [0.75%]:
  _28 = *__first_6;
  _29 = *__pred$_M_current_34;
  if (_28 == _29)
    goto <bb 16> (<L3>); [30.50%]
  else
    goto <bb 11>; [69.50%]

  <bb 11> [0.52%]:
  __first_23 = __first_6 + 1;

  # __first_7 = PHI <__first_6(9), __first_23(11)>
<L1> [1.27%]:
  _30 = *__first_7;
  _31 = *__pred$_M_current_34;
  if (_30 == _31)
    goto <bb 16> (<L3>); [30.50%]
  else
    goto <bb 13>; [69.50%]

  <bb 13> [0.88%]:
  __first_24 = __first_7 + 1;

  # __first_8 = PHI <__first_6(9), __first_24(13)>
<L2> [1.63%]:
  _32 = *__first_8;
  _33 = *__pred$_M_current_34;
  if (_32 == _33)
    goto <bb 16> (<L3>); [30.50%]
  else
    goto <bb 15>; [69.50%]

  <bb 15> [1.14%]:

  # _10 = PHI <__first_6(4), __first_16(5), __first_17(6), __first_19(7), __last_12(D)(9), __first_6(10), __first_7(12), __first_8(14), __last_12(D)(15)>
<L3> [14.13%]:
  return _10;

}



;; Function __find_if (_ZSt9__find_ifIPhN9__gnu_cxx5__ops17_Iter_equals_iterIS0_EEET_S5_S5_T0_St26random_access_iterator_tag, funcdef_no=83, decl_uid=4145, cgraph_uid=37, symbol_order=1395) (unlikely executed)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;;
;; Loop 1
;;  header 3, latch 8
;;  depth 1, outer 0
;;  nodes: 3 8 7 6 5 4
;; 2 succs { 3 }
;; 3 succs { 9 4 }
;; 4 succs { 16 5 }
;; 5 succs { 16 6 }
;; 6 succs { 16 7 }
;; 7 succs { 16 8 }
;; 8 succs { 3 }
;; 9 succs { 16 14 12 10 }
;; 10 succs { 16 11 }
;; 11 succs { 12 }
;; 12 succs { 16 13 }
;; 13 succs { 14 }
;; 14 succs { 16 15 }
;; 15 succs { 16 }
;; 16 succs { 1 }
__find_if (unsigned char * __first, unsigned char * __last, struct _Iter_equals_iter __pred, struct random_access_iterator_tag D.5876)
{
  unsigned char * __pred$_M_it1;
  difference_type __trip_count;
  long int _1;
  long int _2;
  long int _3;
  long int _4;
  long int _5;
  unsigned char * _10;
  unsigned char _18;
  unsigned char _22;
  unsigned char _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  unsigned char _29;
  unsigned char _30;
  unsigned char _31;
  unsigned char _32;
  unsigned char _33;

  <bb 2> [14.13%]:
  __pred$_M_it1_34 = MEM[(struct _Iter_equals_iter *)&__pred];
  _1 = (long int) __last_12(D);
  _2 = (long int) __first_13(D);
  _3 = _1 - _2;
  __trip_count_14 = _3 >> 2;

  <bb 3> [100.00%]:
  # __first_6 = PHI <__first_13(D)(2), __first_20(8)>
  # __trip_count_9 = PHI <__trip_count_14(2), __trip_count_21(8)>
  if (__trip_count_9 <= 0)
    goto <bb 9>; [3.00%]
  else
    goto <bb 4>; [97.00%]

  <bb 4> [97.00%]:
  _25 = *__first_6;
  _22 = *__pred$_M_it1_34;
  if (_22 == _25)
    goto <bb 16> (<L3>); [3.00%]
  else
    goto <bb 5>; [97.00%]

  <bb 5> [94.09%]:
  __first_16 = __first_6 + 1;
  _18 = MEM[(unsigned char *)__first_6 + 1B];
  if (_18 == _22)
    goto <bb 16> (<L3>); [3.00%]
  else
    goto <bb 6>; [97.00%]

  <bb 6> [91.27%]:
  __first_17 = &MEM[(void *)__first_6 + 2B];
  _26 = MEM[(unsigned char *)__first_6 + 2B];
  if (_22 == _26)
    goto <bb 16> (<L3>); [3.00%]
  else
    goto <bb 7>; [97.00%]

  <bb 7> [88.53%]:
  __first_19 = &MEM[(void *)__first_6 + 3B];
  _27 = MEM[(unsigned char *)__first_6 + 3B];
  if (_22 == _27)
    goto <bb 16> (<L3>); [3.00%]
  else
    goto <bb 8>; [97.00%]

  <bb 8> [85.87%]:
  __first_20 = &MEM[(void *)__first_6 + 4B];
  __trip_count_21 = __trip_count_9 + -1;
  goto <bb 3>; [100.00%]

  <bb 9> [3.00%]:
  _4 = (long int) __first_6;
  _5 = _1 - _4;
  switch (_5) <default: <L3> [25.00%], case 1: <L2> [25.00%], case 2: <L1> [25.00%], case 3: <L0> [25.00%]>

<L0> [0.75%]:
  _28 = *__first_6;
  _29 = *__pred$_M_it1_34;
  if (_28 == _29)
    goto <bb 16> (<L3>); [30.50%]
  else
    goto <bb 11>; [69.50%]

  <bb 11> [0.52%]:
  __first_23 = __first_6 + 1;

  # __first_7 = PHI <__first_6(9), __first_23(11)>
<L1> [1.27%]:
  _30 = *__first_7;
  _31 = *__pred$_M_it1_34;
  if (_30 == _31)
    goto <bb 16> (<L3>); [30.50%]
  else
    goto <bb 13>; [69.50%]

  <bb 13> [0.88%]:
  __first_24 = __first_7 + 1;

  # __first_8 = PHI <__first_6(9), __first_24(13)>
<L2> [1.63%]:
  _32 = *__first_8;
  _33 = *__pred$_M_it1_34;
  if (_32 == _33)
    goto <bb 16> (<L3>); [30.50%]
  else
    goto <bb 15>; [69.50%]

  <bb 15> [1.14%]:

  # _10 = PHI <__first_6(4), __first_16(5), __first_17(6), __first_19(7), __last_12(D)(9), __first_6(10), __first_7(12), __first_8(14), __last_12(D)(15)>
<L3> [14.13%]:
  return _10;

}



;; Function __find_if (_ZSt9__find_ifIPhN9__gnu_cxx5__ops17_Iter_equals_iterIPcEEET_S6_S6_T0_St26random_access_iterator_tag, funcdef_no=82, decl_uid=4148, cgraph_uid=38, symbol_order=1391)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;;
;; Loop 1
;;  header 3, latch 8
;;  depth 1, outer 0
;;  nodes: 3 8 7 6 5 4
;; 2 succs { 3 }
;; 3 succs { 9 4 }
;; 4 succs { 16 5 }
;; 5 succs { 16 6 }
;; 6 succs { 16 7 }
;; 7 succs { 16 8 }
;; 8 succs { 3 }
;; 9 succs { 16 14 12 10 }
;; 10 succs { 16 11 }
;; 11 succs { 12 }
;; 12 succs { 16 13 }
;; 13 succs { 14 }
;; 14 succs { 16 15 }
;; 15 succs { 16 }
;; 16 succs { 1 }
__find_if (unsigned char * __first, unsigned char * __last, struct _Iter_equals_iter __pred, struct random_access_iterator_tag D.5868)
{
  char * __pred$_M_it1;
  difference_type __trip_count;
  long int _1;
  long int _2;
  long int _3;
  long int _4;
  long int _5;
  unsigned char * _10;
  unsigned char _16;
  int _19;
  char _21;
  int _25;
  unsigned char _27;
  int _28;
  unsigned char _29;
  int _30;
  unsigned char _31;
  int _32;
  unsigned char _33;
  int _34;
  char _35;
  int _36;
  unsigned char _37;
  int _38;
  char _39;
  int _40;
  unsigned char _41;
  int _42;
  char _43;
  int _44;

  <bb 2> [14.13%]:
  __pred$_M_it1_45 = MEM[(struct _Iter_equals_iter *)&__pred];
  _1 = (long int) __last_12(D);
  _2 = (long int) __first_13(D);
  _3 = _1 - _2;
  __trip_count_14 = _3 >> 2;

  <bb 3> [100.00%]:
  # __first_6 = PHI <__first_13(D)(2), __first_22(8)>
  # __trip_count_9 = PHI <__trip_count_14(2), __trip_count_23(8)>
  if (__trip_count_9 <= 0)
    goto <bb 9>; [3.00%]
  else
    goto <bb 4>; [97.00%]

  <bb 4> [97.00%]:
  _27 = *__first_6;
  _25 = (int) _27;
  _21 = *__pred$_M_it1_45;
  _19 = (int) _21;
  if (_19 == _25)
    goto <bb 16> (<L3>); [3.00%]
  else
    goto <bb 5>; [97.00%]

  <bb 5> [94.09%]:
  __first_17 = __first_6 + 1;
  _16 = MEM[(unsigned char *)__first_6 + 1B];
  _28 = (int) _16;
  if (_19 == _28)
    goto <bb 16> (<L3>); [3.00%]
  else
    goto <bb 6>; [97.00%]

  <bb 6> [91.27%]:
  __first_18 = &MEM[(void *)__first_6 + 2B];
  _29 = MEM[(unsigned char *)__first_6 + 2B];
  _30 = (int) _29;
  if (_19 == _30)
    goto <bb 16> (<L3>); [3.00%]
  else
    goto <bb 7>; [97.00%]

  <bb 7> [88.53%]:
  __first_20 = &MEM[(void *)__first_6 + 3B];
  _31 = MEM[(unsigned char *)__first_6 + 3B];
  _32 = (int) _31;
  if (_19 == _32)
    goto <bb 16> (<L3>); [3.00%]
  else
    goto <bb 8>; [97.00%]

  <bb 8> [85.87%]:
  __first_22 = &MEM[(void *)__first_6 + 4B];
  __trip_count_23 = __trip_count_9 + -1;
  goto <bb 3>; [100.00%]

  <bb 9> [3.00%]:
  _4 = (long int) __first_6;
  _5 = _1 - _4;
  switch (_5) <default: <L3> [25.00%], case 1: <L2> [25.00%], case 2: <L1> [25.00%], case 3: <L0> [25.00%]>

<L0> [0.75%]:
  _33 = *__first_6;
  _34 = (int) _33;
  _35 = *__pred$_M_it1_45;
  _36 = (int) _35;
  if (_34 == _36)
    goto <bb 16> (<L3>); [30.50%]
  else
    goto <bb 11>; [69.50%]

  <bb 11> [0.52%]:
  __first_24 = __first_6 + 1;

  # __first_7 = PHI <__first_6(9), __first_24(11)>
<L1> [1.27%]:
  _37 = *__first_7;
  _38 = (int) _37;
  _39 = *__pred$_M_it1_45;
  _40 = (int) _39;
  if (_38 == _40)
    goto <bb 16> (<L3>); [30.50%]
  else
    goto <bb 13>; [69.50%]

  <bb 13> [0.88%]:
  __first_26 = __first_7 + 1;

  # __first_8 = PHI <__first_6(9), __first_26(13)>
<L2> [1.63%]:
  _41 = *__first_8;
  _42 = (int) _41;
  _43 = *__pred$_M_it1_45;
  _44 = (int) _43;
  if (_42 == _44)
    goto <bb 16> (<L3>); [30.50%]
  else
    goto <bb 15>; [69.50%]

  <bb 15> [1.14%]:

  # _10 = PHI <__first_6(4), __first_17(5), __first_18(6), __first_20(7), __last_12(D)(9), __first_6(10), __first_7(12), __first_8(14), __last_12(D)(15)>
<L3> [14.13%]:
  return _10;

}



;; Function memstr (_Z6memstrIPhPcET_S2_iT0_i, funcdef_no=78, decl_uid=4170, cgraph_uid=41, symbol_order=1053)

Created preheader block for loop 1
Created preheader block for loop 2
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 13 5 6 14 7 15 8 9 16 10 11 12
;;
;; Loop 1
;;  header 5, latch 15
;;  depth 1, outer 0
;;  nodes: 5 15 7 14 16 9 8 6
;;
;; Loop 2
;;  header 7, latch 16
;;  depth 2, outer 1
;;  nodes: 7 16 9 8
;; 2 succs { 10 3 }
;; 3 succs { 4 13 }
;; 4 succs { 10 }
;; 13 succs { 5 }
;; 5 succs { 10 6 }
;; 6 succs { 10 14 }
;; 14 succs { 7 }
;; 7 succs { 8 15 }
;; 15 succs { 5 }
;; 8 succs { 10 9 }
;; 9 succs { 10 16 }
;; 16 succs { 7 }
;; 10 succs { 12 11 }
;; 11 succs { 12 }
;; 12 succs { 1 }
memstr (unsigned char * searchBuf, int searchBufSize, char * searchString, int searchStringSize)
{
  char * __p1;
  char * __p;
  unsigned char * __current;
  struct _Iter_equals_iter __pred;
  struct random_access_iterator_tag D.5853;
  struct _Iter_equals_iter __pred;
  struct random_access_iterator_tag D.5852;
  unsigned char * D.5851;
  unsigned char * __first1;
  struct _Iter_equal_to_iter __predicate;
  struct _Iter_equal_to_iter D.5825;
  unsigned char * searchBufEnd;
  sizetype _1;
  sizetype _2;
  char * _3;
  unsigned char * _4;
  bool _14;
  bool _15;
  bool _16;
  unsigned char * _18;
  unsigned char * _20;
  unsigned char _23;
  int _24;
  char _26;
  int _27;
  unsigned char * _30;

  <bb 2> [26.28%]:
  _1 = (sizetype) searchBufSize_5(D);
  searchBufEnd_7 = searchBuf_6(D) + _1;
  _2 = (sizetype) searchStringSize_8(D);
  _3 = searchString_9(D) + _2;
  _14 = searchBuf_6(D) == searchBufEnd_7;
  _15 = _3 == searchString_9(D);
  _16 = _14 | _15;
  if (_16 != 0)
    goto <bb 10>; [46.00%]
  else
    goto <bb 3>; [54.00%]

  <bb 3> [14.19%]:
  __p1_17 = searchString_9(D) + 1;
  if (_3 == __p1_17)
    goto <bb 4>; [26.74%]
  else
    goto <bb 13>; [73.26%]

  <bb 4> [3.79%]:
  MEM[(struct _Iter_equals_iter *)&__pred] = searchString_9(D);
  _18 = __find_if (searchBuf_6(D), searchBufEnd_7, __pred, D.5853);
  goto <bb 10>; [100.00%]

  <bb 13> [10.40%]:

  <bb 5> [15.40%]:
  # __first1_19 = PHI <searchBuf_6(D)(13), __current_21(15)>
  MEM[(struct _Iter_equals_iter *)&__pred] = searchString_9(D);
  _20 = __find_if (__first1_19, searchBufEnd_7, __pred, D.5852);
  if (searchBufEnd_7 == _20)
    goto <bb 10>; [3.75%]
  else
    goto <bb 6>; [96.25%]

  <bb 6> [14.82%]:
  __current_21 = _20 + 1;
  if (searchBufEnd_7 == __current_21)
    goto <bb 10>; [3.75%]
  else
    goto <bb 14>; [96.25%]

  <bb 14> [14.26%]:

  <bb 7> [100.00%]:
  # __p_25 = PHI <__p1_17(14), __p_28(16)>
  # __current_22 = PHI <__current_21(14), __current_29(16)>
  _23 = *__current_22;
  _24 = (int) _23;
  _26 = *__p_25;
  _27 = (int) _26;
  if (_24 == _27)
    goto <bb 8>; [95.00%]
  else
    goto <bb 15>; [5.00%]

  <bb 15> [5.00%]:
  goto <bb 5>; [100.00%]

  <bb 8> [95.00%]:
  __p_28 = __p_25 + 1;
  if (_3 == __p_28)
    goto <bb 10>; [5.00%]
  else
    goto <bb 9>; [95.00%]

  <bb 9> [90.25%]:
  __current_29 = __current_22 + 1;
  if (searchBufEnd_7 == __current_29)
    goto <bb 10>; [5.00%]
  else
    goto <bb 16>; [95.00%]

  <bb 16> [85.74%]:
  goto <bb 7>; [100.00%]

  <bb 10> [26.28%]:
  # _30 = PHI <searchBuf_6(D)(2), _18(4), searchBufEnd_7(5), searchBufEnd_7(6), _20(8), searchBufEnd_7(9)>
  if (searchBufEnd_7 != _30)
    goto <bb 12>; [95.93%]
  else
    goto <bb 11>; [4.07%]

  <bb 11> [1.07%]:

  <bb 12> [26.28%]:
  # _4 = PHI <_30(10), 0B(11)>
  return _4;

}



;; Function add (_ZN5queue3addEP7outBuff, funcdef_no=31, decl_uid=4248, cgraph_uid=65, symbol_order=366) (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;; 2 succs { 3 4 }
;; 3 succs { 9 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
add (struct queue * const this, struct ElementType * element)
{
  int _1;
  struct ElementType * _2;
  struct ElementType * * _3;
  long int _4;
  long unsigned int _5;
  long unsigned int _6;
  struct ElementType * * _7;
  long int _8;
  long int _9;
  long int _10;
  long int _11;
  long int _12;
  long int _13;
  long int _14;
  long int _15;

  <bb 2> [100.00%]:
  _1 = element_21(D)->sequenceNumber;
  if (_1 > 1)
    goto <bb 3>; [64.00%]
  else
    goto <bb 4>; [36.00%]

  <bb 3> [64.00%]:
  _2 = this_22(D)->lastElement;
  _2->next = element_21(D);
  goto <bb 9>; [100.00%]

  <bb 4> [36.00%]:
  _3 = this_22(D)->qData;
  _4 = this_22(D)->tail;
  _5 = (long unsigned int) _4;
  _6 = _5 * 8;
  _7 = _3 + _6;
  *_7 = element_21(D);
  _8 = this_22(D)->tail;
  _9 = _8 + 1;
  this_22(D)->tail = _9;
  _10 = this_22(D)->size;
  if (_9 == _10)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> [12.24%]:
  this_22(D)->tail = 0;

  <bb 6> [36.00%]:
  _11 = this_22(D)->tail;
  _12 = this_22(D)->head;
  if (_11 == _12)
    goto <bb 7>; [34.00%]
  else
    goto <bb 8>; [66.00%]

  <bb 7> [12.24%]:
  this_22(D)->topLevelFull = 1;

  <bb 8> [36.00%]:
  this_22(D)->topLevelEmpty = 0;

  <bb 9> [100.00%]:
  this_22(D)->lastElement = element_21(D);
  _13 = this_22(D)->count;
  _14 = _13 + 1;
  this_22(D)->count = _14;
  _15 = this_22(D)->size;
  if (_14 == _15)
    goto <bb 10>; [37.68%]
  else
    goto <bb 11>; [62.32%]

  <bb 10> [37.68%]:
  this_22(D)->full = 1;

  <bb 11> [100.00%]:
  this_22(D)->empty = 0;
  return;

}



;; Function saveError (_ZN6pbzip212ErrorContext9saveErrorEv, funcdef_no=112, decl_uid=3989, cgraph_uid=0, symbol_order=4641)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
saveError (struct ErrorContext * const this)
{
  int newerr;
  int * _1;
  int _2;
  int _3;
  int * _4;
  int * _10;
  int * _11;

  <bb 2> [100.00%]:
  _1 = __errno_location ();
  newerr_7 = *_1;
  pthread_mutex_lock (&_err_ctx_mutex);
  if (newerr_7 != 0)
    goto <bb 3>; [54.00%]
  else
    goto <bb 7>; [46.00%]

  <bb 3> [54.00%]:
  _2 = this_9(D)->_first_kernel_err_no;
  if (_2 == 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [27.00%]:
  _11 = &this_9(D)->_first_kernel_err_no;
  goto <bb 6>; [100.00%]

  <bb 5> [27.00%]:
  _10 = &this_9(D)->_last_kernel_err_no;

  <bb 6> [54.00%]:
  # _4 = PHI <_11(4), _10(5)>
  *_4 = newerr_7;

  <bb 7> [100.00%]:
  _3 = *_1;
  this_9(D)->_last_kernel_err_no = _3;
  pthread_mutex_unlock (&_err_ctx_mutex);
  return;

}



;; Function banner (_Z6bannerv, funcdef_no=24, decl_uid=4290, cgraph_uid=125, symbol_order=791) (executed once)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
banner ()
{
  struct FILE * _1;
  struct FILE * _2;
  struct FILE * _3;
  struct FILE * _4;

  <bb 2> [100.00%]:
  _1 = stderr;
  __builtin_fwrite ("Parallel BZIP2 v1.1.11 [Dec 12, 2014]\n", 1, 38, _1);
  _2 = stderr;
  __builtin_fwrite ("By: Jeff Gilchrist [http://compression.ca]\n", 1, 43, _2);
  _3 = stderr;
  __builtin_fwrite ("Major contributions: Yavor Nikolov [http://javornikolov.wordpress.com]\n", 1, 71, _3);
  _4 = stderr;
  __builtin_fwrite ("Uses libbzip2 by Julian Seward\n", 1, 31, _4);
  return;

}



;; Function printErrnoMsg (_ZN6pbzip212ErrorContext13printErrnoMsgEP8_IO_FILEi, funcdef_no=109, decl_uid=4031, cgraph_uid=3, symbol_order=4638)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
printErrnoMsg (struct FILE * out, int err)
{
  char * _1;

  <bb 2> [100.00%]:
  if (err_3(D) != 0)
    goto <bb 3>; [36.64%]
  else
    goto <bb 4>; [63.36%]

  <bb 3> [36.64%]:
  _1 = strerror (err_3(D));
  __fprintf_chk (out_6(D), 1, "pbzip2: *ERROR: system call failed with errno=[%d: %s]!\n", err_3(D), _1);

  <bb 4> [100.00%]:
  return;

}



;; Function syncPrintErrnoMsg (_ZN6pbzip212ErrorContext17syncPrintErrnoMsgEP8_IO_FILEi, funcdef_no=110, decl_uid=4030, cgraph_uid=2, symbol_order=4639)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
syncPrintErrnoMsg (struct FILE * out, int err)
{
  <bb 2> [100.00%]:
  pthread_mutex_lock (&_err_ctx_mutex);
  printErrnoMsg (out_3(D), err_4(D));
  pthread_mutex_unlock (&_err_ctx_mutex);
  return;

}



;; Function printErrorMessages (_ZN6pbzip212ErrorContext18printErrorMessagesEP8_IO_FILE, funcdef_no=111, decl_uid=4029, cgraph_uid=1, symbol_order=4640)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
printErrorMessages (struct ErrorContext * const this, struct FILE * out)
{
  int _1;
  int _2;

  <bb 2> [100.00%]:
  pthread_mutex_lock (&_err_ctx_mutex);
  _1 = this_5(D)->_first_kernel_err_no;
  printErrnoMsg (out_6(D), _1);
  _2 = this_5(D)->_last_kernel_err_no;
  printErrnoMsg (out_6(D), _2);
  pthread_mutex_unlock (&_err_ctx_mutex);
  return;

}



;; Function getInstance (_ZN6pbzip212ErrorContext11getInstanceEv, funcdef_no=108, decl_uid=4032, cgraph_uid=4, symbol_order=4637)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 7 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
getInstance ()
{
  struct ErrorContext * _1;
  struct FILE * _2;
  void * _8;
  struct ErrorContext * _11;

  <bb 2> [100.00%]:
  pthread_mutex_lock (&_err_ctx_mutex);
  _1 = _instance;
  if (_1 == 0B)
    goto <bb 3>; [19.86%]
  else
    goto <bb 7>; [80.14%]

  <bb 3> [19.86%]:
  _8 = operator new (8, &nothrow);
  if (_8 != 0B)
    goto <bb 4>; [70.00%]
  else
    goto <bb 5>; [30.00%]

  <bb 4> [13.90%]:
  MEM[(struct  &)_8] ={v} {CLOBBER};
  MEM[(struct ErrorContext *)_8]._first_kernel_err_no = 0;
  MEM[(struct ErrorContext *)_8]._last_kernel_err_no = 0;

  <bb 5> [19.86%]:
  _instance = _8;
  if (_8 == 0B)
    goto <bb 6>; [19.86%]
  else
    goto <bb 7>; [80.14%]

  <bb 6> [3.94%]:
  _2 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Can\'t initialize error context - out of memory!\n", 1, 64, _2);

  <bb 7> [100.00%]:
  pthread_mutex_unlock (&_err_ctx_mutex);
  _11 = _instance;
  return _11;

}



;; Function copy (_ZN9__gnu_cxx11char_traitsIhE4copyEPhPKhm, funcdef_no=107, decl_uid=4038, cgraph_uid=5, symbol_order=3634) (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
copy (char_type * __s1, const char_type * __s2, size_t __n)
{
  const ptrdiff_t _Num;

  <bb 2> [100.00%]:
  if (__n_2(D) != 0)
    goto <bb 3>; [36.64%]
  else
    goto <bb 4>; [63.36%]

  <bb 3> [36.64%]:
  __builtin_memmove (__s1_4(D), __s2_1(D), __n_2(D));

  <bb 4> [100.00%]:
  return __s1_4(D);

}



;; Function __base_dtor  (_ZNSt6vectorI7outBuffSaIS0_EED2Ev, funcdef_no=81, decl_uid=4149, cgraph_uid=39, symbol_order=1255)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
__base_dtor  (struct vector * const this)
{
  struct outBuff * _1;

  <bb 2> [100.00%]:
  _1 = this_2(D)->D.4140._M_impl._M_start;
  if (_1 != 0B)
    goto <bb 3>; [57.44%]
  else
    goto <bb 4>; [42.56%]

  <bb 3> [57.44%]:
  operator delete (_1);

  <bb 4> [100.00%]:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}



;; Function assign (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE6assignEPKh, funcdef_no=101, decl_uid=4070, cgraph_uid=7, symbol_order=3469) (unlikely executed)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
;;
;; Loop 1
;;  header 3, latch 4
;;  depth 1, outer 0
;;  nodes: 3 4
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 3 }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 9 8 }
;; 8 succs { 9 }
;; 9 succs { 10 35 }
;; 10 succs { 13 11 }
;; 11 succs { 13 12 }
;; 12 succs { 17 20 }
;; 13 succs { 14 47 }
;; 14 succs { 15 16 }
;; 15 succs { 47 }
;; 16 succs { 47 }
;; 17 succs { 18 19 }
;; 18 succs { 20 }
;; 19 succs { 20 }
;; 20 succs { 21 47 }
;; 21 succs { 22 25 }
;; 22 succs { 23 24 }
;; 23 succs { 47 }
;; 24 succs { 47 }
;; 25 succs { 26 29 }
;; 26 succs { 27 28 }
;; 27 succs { 47 }
;; 28 succs { 47 }
;; 29 succs { 30 31 }
;; 30 succs { 32 }
;; 31 succs { 32 }
;; 32 succs { 33 34 }
;; 33 succs { 47 }
;; 34 succs { 47 }
;; 35 succs { 36 37 }
;; 36 succs { }
;; 37 succs { 38 40 }
;; 38 succs { 39 40 }
;; 39 succs { 40 }
;; 40 succs { 41 44 }
;; 41 succs { 42 43 }
;; 42 succs { 44 }
;; 43 succs { 44 }
;; 44 succs { 45 46 }
;; 45 succs { 46 }
;; 46 succs { 47 }
;; 47 succs { 1 }
assign (struct basic_string * const this, const unsigned char * __s)
{
  unsigned char * D.6101;
  const size_type __how_much;
  size_type __new_capacity;
  char_type * D.6076;
  char_type * D.6072;
  char_type * D.6068;
  char_type * D.6064;
  char_type * D.6060;
  const size_type __new_size;
  unsigned char * __p;
  const size_type __how_much;
  const size_type __nleft;
  struct basic_string & D.6051;
  size_t __i;
  long unsigned int _5;
  const char_type * _8;
  unsigned char _9;
  unsigned char * _18;
  const unsigned char[16] * _19;
  long unsigned int _20;
  long unsigned int _21;
  unsigned char * _25;
  bool _26;
  bool _27;
  bool _28;
  unsigned char _35;
  unsigned char _36;
  unsigned char _45;
  sizetype _46;
  const unsigned char * _47;
  unsigned char _48;
  long int _49;
  long int _50;
  long int _51;
  unsigned char _53;
  long unsigned int _54;
  unsigned char * _55;
  unsigned char * _56;
  unsigned char _57;
  unsigned char * _58;
  unsigned char * _59;
  signed long _66;
  bool _77;
  bool _78;
  bool _79;
  unsigned char _81;
  unsigned char * _88;
  signed long _91;
  long unsigned int _92;
  signed long _93;
  long unsigned int _95;
  unsigned char * _96;

  <bb 2> [15.00%]:

  <bb 3> [100.00%]:
  # __i_3 = PHI <0(2), __i_10(4)>
  _8 = __s_2(D) + __i_3;
  _9 = *_8;
  if (_9 != 0)
    goto <bb 4>; [85.00%]
  else
    goto <bb 5>; [15.00%]

  <bb 4> [85.00%]:
  __i_10 = __i_3 + 1;
  goto <bb 3>; [100.00%]

  <bb 5> [15.00%]:
  _5 = MEM[(const struct basic_string *)this_4(D)]._M_string_length;
  _66 = (signed long) __i_3;
  if (_66 < 0)
    goto <bb 6>; [0.04%]
  else
    goto <bb 7>; [99.96%]

  <bb 6> [0.01%]:
  __throw_length_error ("basic_string::_M_replace");

  <bb 7> [14.99%]:
  _18 = MEM[(const struct basic_string *)this_4(D)]._M_dataplus._M_p;
  _19 = &MEM[(const struct basic_string *)this_4(D)].D.4058._M_local_buf;
  if (_18 == _19)
    goto <bb 9>; [30.00%]
  else
    goto <bb 8>; [70.00%]

  <bb 8> [10.50%]:
  _20 = MEM[(const struct basic_string *)this_4(D)].D.4058._M_allocated_capacity;

  <bb 9> [14.99%]:
  # _21 = PHI <15(7), _20(8)>
  if (__i_3 <= _21)
    goto <bb 10>; [67.00%]
  else
    goto <bb 35>; [33.00%]

  <bb 10> [10.05%]:
  if (__s_2(D) < _18)
    goto <bb 13>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 11> [5.02%]:
  _25 = _18 + _5;
  if (__s_2(D) > _25)
    goto <bb 13>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 12> [2.51%]:
  _26 = __i_3 != 0;
  _27 = __i_3 <= _5;
  _28 = _26 & _27;
  if (_28 != 0)
    goto <bb 17>; [50.00%]
  else
    goto <bb 20>; [50.00%]

  <bb 13> [7.53%]:
  if (__i_3 != 0)
    goto <bb 14>; [54.00%]
  else
    goto <bb 47>; [46.00%]

  <bb 14> [4.07%]:
  if (__i_3 == 1)
    goto <bb 15>; [51.12%]
  else
    goto <bb 16>; [48.88%]

  <bb 15> [2.08%]:
  _35 = MEM[(const char_type &)__s_2(D)];
  MEM[(char_type &)_18] = _35;
  goto <bb 47>; [100.00%]

  <bb 16> [1.99%]:
  copy (_18, __s_2(D), __i_3);
  goto <bb 47>; [100.00%]

  <bb 17> [1.26%]:
  if (__i_3 == 1)
    goto <bb 18>; [51.12%]
  else
    goto <bb 19>; [48.88%]

  <bb 18> [0.64%]:
  _36 = MEM[(const char_type &)__s_2(D)];
  MEM[(char_type &)_18] = _36;
  goto <bb 20>; [100.00%]

  <bb 19> [0.61%]:
  __builtin_memmove (_18, __s_2(D), __i_3);

  <bb 20> [2.51%]:
  if (__i_3 > _5)
    goto <bb 21>; [54.00%]
  else
    goto <bb 47>; [46.00%]

  <bb 21> [1.36%]:
  if (_8 <= _25)
    goto <bb 22>; [50.00%]
  else
    goto <bb 25>; [50.00%]

  <bb 22> [0.68%]:
  if (__i_3 == 1)
    goto <bb 23>; [51.12%]
  else
    goto <bb 24>; [48.88%]

  <bb 23> [0.35%]:
  _45 = MEM[(const char_type &)__s_2(D)];
  MEM[(char_type &)_18] = _45;
  goto <bb 47>; [100.00%]

  <bb 24> [0.33%]:
  __builtin_memmove (_18, __s_2(D), __i_3);
  goto <bb 47>; [100.00%]

  <bb 25> [0.68%]:
  if (__s_2(D) >= _25)
    goto <bb 26>; [50.00%]
  else
    goto <bb 29>; [50.00%]

  <bb 26> [0.34%]:
  _46 = __i_3 - _5;
  _47 = __s_2(D) + _46;
  if (__i_3 == 1)
    goto <bb 27>; [51.12%]
  else
    goto <bb 28>; [48.88%]

  <bb 27> [0.17%]:
  _48 = MEM[(const char_type &)_47];
  MEM[(char_type &)_18] = _48;
  goto <bb 47>; [100.00%]

  <bb 28> [0.17%]:
  copy (_18, _47, __i_3);
  goto <bb 47>; [100.00%]

  <bb 29> [0.34%]:
  _49 = (long int) _25;
  _50 = (long int) __s_2(D);
  _51 = _49 - _50;
  __nleft_52 = (const size_type) _51;
  if (__nleft_52 == 1)
    goto <bb 30>; [51.12%]
  else
    goto <bb 31>; [48.88%]

  <bb 30> [0.17%]:
  _53 = MEM[(const char_type &)__s_2(D)];
  MEM[(char_type &)_18] = _53;
  goto <bb 32>; [100.00%]

  <bb 31> [0.17%]:
  __builtin_memmove (_18, __s_2(D), __nleft_52);

  <bb 32> [0.34%]:
  _54 = __i_3 - __nleft_52;
  _55 = _18 + __i_3;
  _56 = _18 + __nleft_52;
  if (_54 == 1)
    goto <bb 33>; [51.12%]
  else
    goto <bb 34>; [48.88%]

  <bb 33> [0.17%]:
  _57 = MEM[(const char_type &)_55];
  MEM[(char_type &)_56] = _57;
  goto <bb 47>; [100.00%]

  <bb 34> [0.17%]:
  copy (_56, _55, _54);
  goto <bb 47>; [100.00%]

  <bb 35> [4.95%]:
  _91 = (signed long) __i_3;
  if (_91 < 0)
    goto <bb 36>; [0.04%]
  else
    goto <bb 37>; [99.96%]

  <bb 36> [0.00%]:
  __throw_length_error ("basic_string::_M_create");

  <bb 37> [2.67%]:
  _92 = _21 * 2;
  if (__i_3 < _92)
    goto <bb 38>; [54.00%]
  else
    goto <bb 40>; [46.00%]

  <bb 38> [1.44%]:
  _93 = (signed long) _92;
  if (_93 < 0)
    goto <bb 39>; [39.77%]
  else
    goto <bb 40>; [60.23%]

  <bb 39> [0.57%]:

  <bb 40> [4.95%]:
  # __new_capacity_145 = PHI <9223372036854775807(39), __i_3(37), _92(38)>
  _95 = __new_capacity_145 + 1;
  _96 = operator new (_95);
  _77 = __s_2(D) != 0B;
  _78 = __i_3 != 0;
  _79 = _77 & _78;
  if (_79 != 0)
    goto <bb 41>; [50.00%]
  else
    goto <bb 44>; [50.00%]

  <bb 41> [2.47%]:
  if (__i_3 == 1)
    goto <bb 42>; [51.12%]
  else
    goto <bb 43>; [48.88%]

  <bb 42> [1.26%]:
  _81 = MEM[(const char_type &)__s_2(D)];
  MEM[(char_type &)_96] = _81;
  goto <bb 44>; [100.00%]

  <bb 43> [1.21%]:
  copy (_96, __s_2(D), __i_3);

  <bb 44> [4.95%]:
  _88 = MEM[(const struct basic_string *)this_4(D)]._M_dataplus._M_p;
  if (_19 != _88)
    goto <bb 45>; [57.44%]
  else
    goto <bb 46>; [42.56%]

  <bb 45> [2.84%]:
  operator delete (_88);

  <bb 46> [4.95%]:
  this_4(D)->_M_dataplus._M_p = _96;
  this_4(D)->D.4058._M_allocated_capacity = __new_capacity_145;

  <bb 47> [14.99%]:
  this_4(D)->_M_string_length = __i_3;
  _58 = MEM[(const struct basic_string *)this_4(D)]._M_dataplus._M_p;
  _59 = _58 + __i_3;
  MEM[(char_type &)_59] = 0;
  return this_4(D);

}



;; Function compare (_ZNKSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE7compareEmmPKhm, funcdef_no=100, decl_uid=4075, cgraph_uid=16, symbol_order=3349) (unlikely executed)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
;;
;; Loop 1
;;  header 9, latch 12
;;  depth 1, outer 0
;;  nodes: 9 12 11 10
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 6 5 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 13 10 }
;; 10 succs { 13 11 }
;; 11 succs { 13 12 }
;; 12 succs { 9 }
;; 13 succs { 14 17 }
;; 14 succs { 17 15 }
;; 15 succs { 17 16 }
;; 16 succs { 17 }
;; 17 succs { 1 }
compare (const struct basic_string * const this, size_type __pos, size_type __n1, const unsigned char * __s, size_type __n2)
{
  const difference_type __d;
  size_t __i;
  int __r;
  const size_type __len;
  long unsigned int _1;
  unsigned char _6;
  unsigned char _8;
  const char_type * _10;
  const char_type * _12;
  int _15;
  unsigned char * _16;
  long unsigned int _17;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  int _24;
  long unsigned int _25;

  <bb 2> [14.27%]:
  _21 = this_4(D)->_M_string_length;
  if (__pos_5(D) > _21)
    goto <bb 3>; [0.04%]
  else
    goto <bb 4>; [99.96%]

  <bb 3> [0.01%]:
  __throw_out_of_range_fmt ("%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::compare", __pos_5(D), _21);

  <bb 4> [14.26%]:
  _1 = __n1;
  _19 = _21 - __pos_5(D);
  if (_1 < _19)
    goto <bb 6>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [7.13%]:

  <bb 6> [14.26%]:
  # _20 = PHI <_1(4), _19(5)>
  __n1 = _20;
  _17 = __n2;
  if (_17 < _20)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [7.13%]:

  <bb 8> [14.26%]:
  # __len_9 = PHI <_17(7), _20(6)>
  _16 = this_4(D)->_M_dataplus._M_p;

  <bb 9> [100.00%]:
  # __i_13 = PHI <0(8), __i_14(12)>
  if (__len_9 <= __i_13)
    goto <bb 13>; [5.00%]
  else
    goto <bb 10>; [95.00%]

  <bb 10> [95.00%]:
  _12 = __s_11(D) + __i_13;
  _25 = __pos_5(D) + __i_13;
  _10 = _16 + _25;
  _8 = *_10;
  _6 = *_12;
  if (_6 > _8)
    goto <bb 13>; [5.00%]
  else
    goto <bb 11>; [95.00%]

  <bb 11> [90.25%]:
  if (_6 < _8)
    goto <bb 13>; [5.00%]
  else
    goto <bb 12>; [95.00%]

  <bb 12> [85.74%]:
  __i_14 = __i_13 + 1;
  goto <bb 9>; [100.00%]

  <bb 13> [14.26%]:
  # _15 = PHI <0(9), -1(10), 1(11)>
  if (_15 == 0)
    goto <bb 14>; [54.00%]
  else
    goto <bb 17>; [46.00%]

  <bb 14> [7.70%]:
  _22 = _20 - _17;
  __d_23 = (const difference_type) _22;
  if (__d_23 > 2147483647)
    goto <bb 17>; [31.00%]
  else
    goto <bb 15>; [69.00%]

  <bb 15> [5.31%]:
  if (__d_23 < -2147483648)
    goto <bb 17>; [2.00%]
  else
    goto <bb 16>; [98.00%]

  <bb 16> [5.21%]:
  _24 = (int) _22;

  <bb 17> [14.26%]:
  # __r_2 = PHI <_15(13), 2147483647(14), -2147483648(15), _24(16)>
  return __r_2;

}



;; Function locateHeaderPrefixInBuff (_ZN6pbzip216BZ2StreamScanner24locateHeaderPrefixInBuffEv, funcdef_no=92, decl_uid=4116, cgraph_uid=26, symbol_order=3097) (unlikely executed)

Created preheader block for loop 1
Created preheader block for loop 2
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 19 12 13 20 14 21 15 16 22 17 18
;;
;; Loop 1
;;  header 12, latch 21
;;  depth 1, outer 0
;;  nodes: 12 21 14 20 22 16 15 13
;;
;; Loop 2
;;  header 14, latch 22
;;  depth 2, outer 1
;;  nodes: 14 22 16 15
;; 2 succs { 3 8 }
;; 3 succs { 5 4 }
;; 4 succs { 5 6 }
;; 5 succs { 18 }
;; 6 succs { 18 7 }
;; 7 succs { 18 }
;; 8 succs { 17 9 }
;; 9 succs { 17 10 }
;; 10 succs { 11 19 }
;; 11 succs { 17 }
;; 19 succs { 12 }
;; 12 succs { 17 13 }
;; 13 succs { 17 20 }
;; 20 succs { 14 }
;; 14 succs { 15 21 }
;; 21 succs { 12 }
;; 15 succs { 17 16 }
;; 16 succs { 17 22 }
;; 22 succs { 14 }
;; 17 succs { 18 }
;; 18 succs { 1 }
locateHeaderPrefixInBuff (struct BZ2StreamScanner * const this)
{
  unsigned char * __current;
  struct _Iter_equals_iter __pred;
  struct random_access_iterator_tag D.5956;
  struct _Iter_equals_iter __pred;
  struct random_access_iterator_tag D.5955;
  unsigned char * const __last2;
  unsigned char * __p$_M_current;
  unsigned char * D.5951;
  unsigned char * __first1;
  struct __normal_iterator __first2;
  struct __normal_iterator __last2;
  struct _Iter_equal_to_iter __predicate;
  struct _Iter_equal_to_iter D.5926;
  struct __normal_iterator __first2;
  struct __normal_iterator __last2;
  unsigned int _1;
  unsigned int _2;
  struct basic_string * _3;
  unsigned int _4;
  unsigned int _5;
  CharType * _9;
  CharType * _10;
  CharType * _11;
  long unsigned int _13;
  long int _14;
  long int _15;
  CharType * _16;
  int _18;
  long unsigned int _20;
  long int _23;
  bool _25;
  CharType * _26;
  CharType * _28;
  CharType * _29;
  unsigned char * _30;
  unsigned char * _31;
  CharType * _32;
  unsigned char * _46;
  unsigned char * _47;
  unsigned char * _49;
  unsigned char _52;
  unsigned char _54;
  unsigned char * _55;
  unsigned char * _57;

  <bb 2> [80.12%]:
  _25 = MEM[(const struct BZ2StreamScanner *)this_8(D)]._bz2HeaderFound;
  if (_25 != 0)
    goto <bb 8>; [33.00%]
  else
    goto <bb 3>; [67.00%]

  <bb 3> [53.68%]:
  _10 = this_8(D)->_inBuffSearchPtr;
  _11 = this_8(D)->_inBuff;
  if (_10 != _11)
    goto <bb 5>; [66.53%]
  else
    goto <bb 4>; [33.47%]

  <bb 4> [17.97%]:
  _16 = MEM[(const struct BZ2StreamScanner *)this_8(D)]._inBuffEnd;
  _23 = (long int) _16;
  _15 = (long int) _11;
  _14 = _23 - _15;
  _13 = (long unsigned int) _14;
  _20 = MEM[(const struct basic_string *)this_8(D) + 16B]._M_string_length;
  if (_13 < _20)
    goto <bb 5>; [63.36%]
  else
    goto <bb 6>; [36.64%]

  <bb 5> [47.10%]:
  _1 = this_8(D)->_errState;
  _2 = _1 | 32;
  this_8(D)->_errState = _2;
  _9 = this_8(D)->_inBuffEnd;
  this_8(D)->_inBuffSearchPtr = _9;
  goto <bb 18>; [100.00%]

  <bb 6> [6.58%]:
  _3 = &this_8(D)->_bz2Header;
  _18 = compare (_3, 0, 3, _10, 3);
  if (_18 == 0)
    goto <bb 18>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 7> [3.29%]:
  _4 = this_8(D)->_errState;
  _5 = _4 | 32;
  this_8(D)->_errState = _5;
  _26 = this_8(D)->_inBuffEnd;
  this_8(D)->_inBuffSearchPtr = _26;
  goto <bb 18>; [100.00%]

  <bb 8> [26.44%]:
  _31 = MEM[(const struct basic_string *)this_8(D) + 16B]._M_dataplus._M_p;
  _30 = _31 + 3;
  _29 = this_8(D)->_inBuffEnd;
  _28 = this_8(D)->_inBuffSearchPtr;
  if (_28 == _29)
    goto <bb 17>; [26.74%]
  else
    goto <bb 9>; [73.26%]

  <bb 9> [19.37%]:
  if (_30 == _31)
    goto <bb 17>; [26.74%]
  else
    goto <bb 10>; [73.26%]

  <bb 10> [14.19%]:
  _46 = _31 + 1;
  if (_30 == _46)
    goto <bb 11>; [26.74%]
  else
    goto <bb 19>; [73.26%]

  <bb 11> [3.79%]:
  MEM[(struct _Iter_equals_iter *)&__pred] = _31;
  _47 = __find_if (_28, _29, __pred, D.5956);
  goto <bb 17>; [100.00%]

  <bb 19> [10.40%]:

  <bb 12> [15.40%]:
  # __first1_48 = PHI <_28(19), __current_50(21)>
  MEM[(struct _Iter_equals_iter *)&__pred] = _31;
  _49 = __find_if (__first1_48, _29, __pred, D.5955);
  if (_29 == _49)
    goto <bb 17>; [3.75%]
  else
    goto <bb 13>; [96.25%]

  <bb 13> [14.82%]:
  __current_50 = _49 + 1;
  if (_29 == __current_50)
    goto <bb 17>; [3.75%]
  else
    goto <bb 20>; [96.25%]

  <bb 20> [14.26%]:

  <bb 14> [100.00%]:
  # __current_51 = PHI <__current_50(20), __current_56(22)>
  # __p$_M_current_53 = PHI <_46(20), _55(22)>
  _52 = *__current_51;
  _54 = *__p$_M_current_53;
  if (_52 == _54)
    goto <bb 15>; [95.00%]
  else
    goto <bb 21>; [5.00%]

  <bb 21> [5.00%]:
  goto <bb 12>; [100.00%]

  <bb 15> [95.00%]:
  _55 = __p$_M_current_53 + 1;
  if (_30 == _55)
    goto <bb 17>; [5.00%]
  else
    goto <bb 16>; [95.00%]

  <bb 16> [90.25%]:
  __current_56 = __current_51 + 1;
  if (_29 == __current_56)
    goto <bb 17>; [5.00%]
  else
    goto <bb 22>; [95.00%]

  <bb 22> [85.74%]:
  goto <bb 14>; [100.00%]

  <bb 17> [26.44%]:
  # _57 = PHI <_28(8), _28(9), _47(11), _29(12), _29(13), _49(15), _29(16)>
  this_8(D)->_inBuffSearchPtr = _57;

  <bb 18> [80.12%]:
  _32 = this_8(D)->_inBuffSearchPtr;
  return _32;

}



;; Function searchNextHeaderInBuff (_ZN6pbzip216BZ2StreamScanner22searchNextHeaderInBuffEv, funcdef_no=94, decl_uid=4115, cgraph_uid=25, symbol_order=3098) (unlikely executed)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
;;
;; Loop 1
;;  header 3, latch 15
;;  depth 1, outer 0
;;  nodes: 3 15 13 7 9 10 11 6 8 5 4
;; 2 succs { 3 }
;; 3 succs { 4 16 }
;; 4 succs { 5 16 }
;; 5 succs { 6 7 }
;; 6 succs { 9 }
;; 7 succs { 8 13 }
;; 8 succs { 9 }
;; 9 succs { 10 13 }
;; 10 succs { 11 13 }
;; 11 succs { 12 13 }
;; 12 succs { 17 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 3 }
;; 16 succs { 17 }
;; 17 succs { 1 }
searchNextHeaderInBuff (struct BZ2StreamScanner * const this)
{
  CharType bwtSizeChar;
  struct basic_string * pHdr;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  unsigned char _4;
  long unsigned int _5;
  CharType * _6;
  unsigned int _7;
  unsigned int _8;
  CharType * _9;
  CharType * _10;
  CharType * _12;
  unsigned char * _21;
  unsigned char * _22;
  long unsigned int _23;
  long int _24;
  long int _27;
  CharType * _29;
  long int _31;
  CharType * _32;
  long unsigned int _33;
  int _35;
  CharType * _37;
  unsigned int _41;
  CharType * _43;
  long unsigned int _44;
  unsigned char * _45;
  bool _46;
  CharType * _47;

  <bb 2> [11.27%]:
  this_18(D)->_searchStatus = 0;
  locateHeaderPrefixInBuff (this_18(D));

  <bb 3> [100.00%]:
  _41 = this_18(D)->_errState;
  if (_41 == 0)
    goto <bb 4>; [96.25%]
  else
    goto <bb 16>; [3.75%]

  <bb 4> [96.25%]:
  _32 = MEM[(const struct BZ2StreamScanner *)this_18(D)]._inBuffEnd;
  _31 = (long int) _32;
  _29 = MEM[(const struct BZ2StreamScanner *)this_18(D)]._inBuffSearchPtr;
  _27 = (long int) _29;
  _24 = _31 - _27;
  _23 = (long unsigned int) _24;
  _33 = MEM[(const struct basic_string *)this_18(D) + 16B]._M_string_length;
  if (_23 >= _33)
    goto <bb 5>; [96.25%]
  else
    goto <bb 16>; [3.75%]

  <bb 5> [92.64%]:
  _1 = MEM[(CharType *)_29 + 4B];
  _22 = MEM[(const struct basic_string *)this_18(D) + 16B]._M_dataplus._M_p;
  _2 = MEM[(value_type &)_22 + 4];
  if (_1 == _2)
    goto <bb 6>; [34.00%]
  else
    goto <bb 7>; [66.00%]

  <bb 6> [31.50%]:
  pHdr_26 = &this_18(D)->_bz2Header;
  goto <bb 9>; [100.00%]

  <bb 7> [61.14%]:
  _21 = MEM[(const struct basic_string *)this_18(D) + 48B]._M_dataplus._M_p;
  _3 = MEM[(value_type &)_21 + 4];
  if (_1 == _3)
    goto <bb 8>; [34.00%]
  else
    goto <bb 13>; [66.00%]

  <bb 8> [20.79%]:
  pHdr_25 = &this_18(D)->_bz2HeaderZero;

  <bb 9> [52.29%]:
  # pHdr_11 = PHI <pHdr_26(6), pHdr_25(8)>
  if (pHdr_11 != 0B)
    goto <bb 10>; [70.00%]
  else
    goto <bb 13>; [30.00%]

  <bb 10> [36.60%]:
  bwtSizeChar_28 = MEM[(CharType *)_29 + 3B];
  _4 = bwtSizeChar_28 + 207;
  if (_4 <= 8)
    goto <bb 11>; [33.00%]
  else
    goto <bb 13>; [67.00%]

  <bb 11> [12.08%]:
  _45 = MEM[(const struct basic_string *)pHdr_11]._M_dataplus._M_p;
  MEM[(value_type &)_45 + 3] = bwtSizeChar_28;
  _44 = MEM[(const struct basic_string *)pHdr_11]._M_string_length;
  _5 = _44 + 18446744073709551612;
  _43 = this_18(D)->_inBuffSearchPtr;
  _6 = _43 + 4;
  _35 = compare (pHdr_11, 4, _5, _6, _5);
  if (_35 == 0)
    goto <bb 12>; [3.75%]
  else
    goto <bb 13>; [96.25%]

  <bb 12> [0.45%]:
  this_18(D)->_searchStatus = 1;
  _37 = this_18(D)->_inBuffSearchPtr;
  goto <bb 17>; [100.00%]

  <bb 13> [92.19%]:
  _46 = MEM[(const struct BZ2StreamScanner *)this_18(D)]._bz2HeaderFound;
  if (_46 != 0)
    goto <bb 15>; [96.25%]
  else
    goto <bb 14>; [3.75%]

  <bb 14> [3.46%]:
  _7 = this_18(D)->_errState;
  _8 = _7 | 32;
  this_18(D)->_errState = _8;
  goto <bb 16>; [100.00%]

  <bb 15> [88.73%]:
  _9 = this_18(D)->_inBuffSearchPtr;
  _10 = _9 + 3;
  this_18(D)->_inBuffSearchPtr = _10;
  locateHeaderPrefixInBuff (this_18(D));
  goto <bb 3>; [100.00%]

  <bb 16> [10.82%]:
  _47 = this_18(D)->_inBuffEnd;
  this_18(D)->_inBuffSearchPtr = _47;

  <bb 17> [11.27%]:
  # _12 = PHI <_37(12), _47(16)>
  return _12;

}



;; Function dispose (_ZN6pbzip216BZ2StreamScanner7disposeEv, funcdef_no=86, decl_uid=4124, cgraph_uid=33, symbol_order=3086)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
dispose (struct BZ2StreamScanner * const this)
{
  unsigned char * _5;
  char * _6;

  <bb 2> [100.00%]:
  _6 = MEM[(char * &)this_1(D) + 128];
  if (_6 != 0B)
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> [53.47%]:
  operator delete [] (_6);
  MEM[(char * &)this_1(D) + 128] = 0B;

  <bb 4> [100.00%]:
  this_1(D)->_outBuff.bufSize = 0;
  _5 = MEM[(unsigned char * &)this_1(D) + 88];
  if (_5 != 0B)
    goto <bb 5>; [57.44%]
  else
    goto <bb 6>; [42.56%]

  <bb 5> [57.44%]:
  operator delete [] (_5);
  MEM[(unsigned char * &)this_1(D) + 88] = 0B;

  <bb 6> [100.00%]:
  this_1(D)->_inBuffCapacity = 0;
  return;

}



;; Function __base_dtor  (_ZN6pbzip216BZ2StreamScannerD2Ev, funcdef_no=87, decl_uid=4122, cgraph_uid=31, symbol_order=3088)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
__base_dtor  (struct BZ2StreamScanner * const this)
{
  unsigned char * _6;
  const unsigned char[16] * _7;
  unsigned char * _8;
  const unsigned char[16] * _9;

  <bb 2> [100.00%]:
  this_2(D)->_vptr.BZ2StreamScanner = &MEM[(void *)&_ZTVN6pbzip216BZ2StreamScannerE + 16B];
  dispose (this_2(D));
  _8 = MEM[(const struct basic_string *)this_2(D) + 48B]._M_dataplus._M_p;
  _9 = &MEM[(const struct basic_string *)this_2(D) + 48B].D.4058._M_local_buf;
  if (_8 != _9)
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> [53.47%]:
  operator delete (_8);

  <bb 4> [100.00%]:
  MEM[(struct  &)this_2(D) + 48] ={v} {CLOBBER};
  _6 = MEM[(const struct basic_string *)this_2(D) + 16B]._M_dataplus._M_p;
  _7 = &MEM[(const struct basic_string *)this_2(D) + 16B].D.4058._M_local_buf;
  if (_6 != _7)
    goto <bb 5>; [57.44%]
  else
    goto <bb 6>; [42.56%]

  <bb 5> [57.44%]:
  operator delete (_6);

  <bb 6> [100.00%]:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}



;; Function __deleting_dtor  (_ZN6pbzip216BZ2StreamScannerD0Ev, funcdef_no=88, decl_uid=4121, cgraph_uid=30, symbol_order=3090)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__deleting_dtor  (struct BZ2StreamScanner * const this)
{
  <bb 2> [100.00%]:
  __comp_dtor  (this_2(D));
  operator delete (this_2(D), 208);
  return;

}



;; Function ends_with_icase (_Z15ends_with_icaseIcEbRKNSt7__cxx1112basic_stringIT_St11char_traitsIS2_ESaIS2_EEES8_, funcdef_no=80, decl_uid=4169, cgraph_uid=40, symbol_order=1055)

Created preheader block for loop 1
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 7 3 4 5 6
;;
;; Loop 1
;;  header 3, latch 5
;;  depth 1, outer 0
;;  nodes: 3 5 4
;; 2 succs { 6 7 }
;; 7 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 6 5 }
;; 5 succs { 3 }
;; 6 succs { 1 }
ends_with_icase (const struct basic_string & str, const struct basic_string & suffix)
{
  size_t si;
  int ti;
  unsigned int _1;
  unsigned int _2;
  unsigned int _3;
  long unsigned int _4;
  char _5;
  int _6;
  int _7;
  char _8;
  int _9;
  int _10;
  bool _13;
  const value_type & _18;
  char * _20;
  long unsigned int _22;
  long unsigned int _23;
  char * _26;
  const value_type & _27;

  <bb 2> [21.35%]:
  _22 = str_17(D)->_M_string_length;
  _1 = (unsigned int) _22;
  _23 = suffix_19(D)->_M_string_length;
  _2 = (unsigned int) _23;
  _3 = _1 - _2;
  ti_21 = (int) _3;
  if (ti_21 < 0)
    goto <bb 6>; [32.39%]
  else
    goto <bb 7>; [67.61%]

  <bb 7> [14.43%]:

  <bb 3> [100.00%]:
  # ti_11 = PHI <ti_21(7), ti_25(5)>
  # si_12 = PHI <0(7), si_24(5)>
  if (si_12 < _23)
    goto <bb 4>; [92.50%]
  else
    goto <bb 6>; [7.50%]

  <bb 4> [92.50%]:
  _4 = (long unsigned int) ti_11;
  _26 = str_17(D)->_M_dataplus._M_p;
  _27 = _26 + _4;
  _5 = *_27;
  _6 = (int) _5;
  _7 = tolower (_6);
  _20 = suffix_19(D)->_M_dataplus._M_p;
  _18 = _20 + si_12;
  _8 = *_18;
  _9 = (int) _8;
  _10 = tolower (_9);
  if (_7 != _10)
    goto <bb 6>; [7.50%]
  else
    goto <bb 5>; [92.50%]

  <bb 5> [85.56%]:
  si_24 = si_12 + 1;
  ti_25 = ti_11 + 1;
  goto <bb 3>; [100.00%]

  <bb 6> [21.35%]:
  # _13 = PHI <0(2), 1(3), 0(4)>
  return _13;

}



;; Function do_close (_Z8do_closei, funcdef_no=5, decl_uid=4331, cgraph_uid=251, symbol_order=738)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
do_close (int fd)
{
  int _5;
  struct ErrorContext * _7;

  <bb 2> [100.00%]:
  _5 = close (fd_3(D));
  if (_5 == -1)
    goto <bb 3>; [22.95%]
  else
    goto <bb 4>; [77.05%]

  <bb 3> [22.95%]:
  _7 = getInstance ();
  saveError (_7);

  <bb 4> [100.00%]:
  return _5;

}



;; Function do_remove (_Z9do_removePKc, funcdef_no=6, decl_uid=4330, cgraph_uid=250, symbol_order=742)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
do_remove (const char * pathname)
{
  int ret;
  struct ErrorContext * _7;

  <bb 2> [100.00%]:
  ret_5 = remove (pathname_3(D));
  if (ret_5 == -1)
    goto <bb 3>; [22.95%]
  else
    goto <bb 4>; [77.05%]

  <bb 3> [22.95%]:
  _7 = getInstance ();
  saveError (_7);

  <bb 4> [100.00%]:
  return ret_5;

}



;; Function safe_open_output (_Z16safe_open_outputPKc, funcdef_no=3, decl_uid=4333, cgraph_uid=253, symbol_order=736)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
safe_open_output (const char * path)
{
  struct ErrorContext * _5;
  int _7;

  <bb 2> [100.00%]:
  _7 = __open_alias (path_3(D), 193, 384);
  if (_7 == -1)
    goto <bb 3>; [22.95%]
  else
    goto <bb 4>; [77.05%]

  <bb 3> [22.95%]:
  _5 = getInstance ();
  saveError (_5);

  <bb 4> [100.00%]:
  return _7;

}



;; Function do_read (_Z7do_readiPvm, funcdef_no=2, decl_uid=4334, cgraph_uid=254, symbol_order=735)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 3, latch 5
;;  depth 1, outer 0
;;  nodes: 3 5 4
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 3 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 1 }
do_read (int fd, void * buf, size_t count)
{
  char * pbuf;
  ssize_t nbytes;
  ssize_t bytesRemaining;
  long unsigned int _1;
  sizetype _2;
  long unsigned int _3;
  long unsigned int _4;
  long int _9;
  long int _18;
  struct ErrorContext * _20;
  long int _28;

  <bb 2> [14.44%]:
  bytesRemaining_14 = (ssize_t) count_13(D);

  <bb 3> [100.00%]:
  # bytesRemaining_5 = PHI <bytesRemaining_14(2), bytesRemaining_22(5)>
  # nbytes_6 = PHI <0(2), _28(5)>
  # pbuf_8 = PHI <buf_15(D)(2), pbuf_23(5)>
  if (bytesRemaining_5 > 0)
    goto <bb 4>; [92.50%]
  else
    goto <bb 6>; [7.50%]

  <bb 4> [92.50%]:
  _1 = (long unsigned int) bytesRemaining_5;
  _28 = __read_alias (fd_17(D), pbuf_8, _1);
  if (_28 > 0)
    goto <bb 5>; [92.50%]
  else
    goto <bb 6>; [7.50%]

  <bb 5> [85.56%]:
  bytesRemaining_22 = bytesRemaining_5 - _28;
  _2 = (sizetype) _28;
  pbuf_23 = pbuf_8 + _2;
  goto <bb 3>; [100.00%]

  <bb 6> [14.44%]:
  # nbytes_7 = PHI <nbytes_6(3), _28(4)>
  if (nbytes_7 < 0)
    goto <bb 7>; [19.09%]
  else
    goto <bb 8>; [80.91%]

  <bb 7> [2.76%]:
  _20 = getInstance ();
  saveError (_20);
  goto <bb 9>; [100.00%]

  <bb 8> [11.68%]:
  _3 = (long unsigned int) bytesRemaining_5;
  _4 = count_13(D) - _3;
  _18 = (long int) _4;

  <bb 9> [14.44%]:
  # _9 = PHI <nbytes_7(7), _18(8)>
  return _9;

}



;; Function testBZ2ErrorHandling (_Z20testBZ2ErrorHandlingiPvi, funcdef_no=22, decl_uid=4293, cgraph_uid=127, symbol_order=786)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 11 3 7 4 8 5 6 }
;; 3 succs { }
;; 4 succs { 12 }
;; 5 succs { 12 }
;; 6 succs { 12 }
;; 7 succs { 12 }
;; 8 succs { 9 10 }
;; 9 succs { 12 }
;; 10 succs { 12 }
;; 11 succs { }
;; 12 succs { 1 }
testBZ2ErrorHandling (int bzerr, BZFILE * bzf, int streamNo)
{
  int bzerr_dummy;
  struct FILE * _1;
  struct FILE * _2;
  struct FILE * _3;
  struct FILE * _4;
  struct FILE * _5;
  struct FILE * _6;
  struct FILE * _7;
  struct FILE * _8;
  int _9;

  <bb 2> [100.00%]:
  BZ2_bzReadClose (&bzerr_dummy, bzf_12(D));
  switch (bzerr_14(D)) <default: <L6> [0.04%], case -9: <L0> [0.04%], case -7: <L4> [20.00%], case -6: <L1> [20.00%], case -5: <L5> [20.00%], case -4: <L2> [20.00%], case -3: <L3> [20.00%]>

<L0> [0.04%]:
  _1 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Integers are not the right size for libbzip2. Aborting!\n", 1, 72, _1);
  exit (3);

<L1> [20.00%]:
  _2 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Integers are not the right size for libbzip2. Aborting!\n", 1, 72, _2);
  goto <bb 12>; [100.00%]

<L2> [20.00%]:
  _3 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Data integrity (CRC) error in data!  Skipping...\n", 1, 65, _3);
  goto <bb 12>; [100.00%]

<L3> [20.00%]:
  _4 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Could NOT allocate enough memory. Aborting!\n", 1, 60, _4);
  goto <bb 12>; [100.00%]

<L4> [20.00%]:
  _5 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: File ends unexpectedly!  Skipping...\n", 1, 53, _5);
  goto <bb 12>; [100.00%]

<L5> [20.00%]:
  if (streamNo_15(D) == 1)
    goto <bb 9>; [1.04%]
  else
    goto <bb 10>; [98.96%]

  <bb 9> [0.21%]:
  _6 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Bad magic number (file not created by bzip2)!  Skipping...\n", 1, 75, _6);
  goto <bb 12>; [100.00%]

  <bb 10> [19.79%]:
  _7 = stderr;
  __builtin_fwrite ("pbzip2: *WARNING: Trailing garbage after EOF ignored!\n", 1, 54, _7);
  goto <bb 12>; [100.00%]

<L6> [0.04%]:
  _8 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Unexpected error. Aborting!\n", 1, 44, _8);
  exit (3);

  <bb 12> [100.00%]:
  # _9 = PHI <1(4), -1(5), 1(6), -1(7), -1(9), 0(10)>
  bzerr_dummy ={v} {CLOBBER};
  return _9;

}



;; Function usage (_Z5usagePcPKc, funcdef_no=25, decl_uid=4289, cgraph_uid=124, symbol_order=792) (executed once)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { }
usage (char * progname, const char * reason)
{
  int ncpu;
  int D.5066;
  int _1;
  struct FILE * _2;
  struct FILE * _3;
  struct FILE * _4;
  struct FILE * _5;
  struct FILE * _6;
  struct FILE * _7;
  struct FILE * _8;
  struct FILE * _9;
  struct FILE * _10;
  struct FILE * _11;
  struct FILE * _12;
  struct FILE * _13;
  struct FILE * _14;
  struct FILE * _16;
  struct FILE * _17;
  struct FILE * _18;
  struct FILE * _19;
  struct FILE * _20;
  struct FILE * _21;
  struct FILE * _22;
  struct FILE * _23;
  struct FILE * _24;
  struct FILE * _25;
  struct FILE * _26;
  struct FILE * _27;
  struct FILE * _28;
  struct FILE * _29;
  struct FILE * _30;
  struct FILE * _31;
  struct FILE * _32;
  struct FILE * _33;
  struct FILE * _34;
  long int _77;

  <bb 2> [100.00%]:
  banner ();
  _1 = strncmp (reason_38(D), "HELP", 4);
  if (_1 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [50.00%]:
  _2 = stderr;
  __builtin_fputc (10, _2);
  goto <bb 5>; [100.00%]

  <bb 4> [50.00%]:
  _3 = stderr;
  __fprintf_chk (_3, 1, "\nInvalid command line: %s.  Aborting...\n\n", reason_38(D));

  <bb 5> [100.00%]:
  _4 = stderr;
  __fprintf_chk (_4, 1, "Usage: %s [-1 .. -9] [-b#cdfhklm#p#qrS#tVz] <filename> <filename2> <filenameN>\n", progname_39(D));
  _5 = stderr;
  __builtin_fwrite (" -1 .. -9        set BWT block size to 100k .. 900k (default 900k)\n", 1, 67, _5);
  _6 = stderr;
  __builtin_fwrite (" -b#             Block size in 100k steps (default 9 = 900k)\n", 1, 61, _6);
  _7 = stderr;
  __builtin_fwrite (" -c,--stdout     Output to standard out (stdout)\n", 1, 49, _7);
  _8 = stderr;
  __builtin_fwrite (" -d,--decompress Decompress file\n", 1, 33, _8);
  _9 = stderr;
  __builtin_fwrite (" -f,--force      Overwrite existing output file\n", 1, 48, _9);
  _10 = stderr;
  __builtin_fwrite (" -h,--help       Print this help message\n", 1, 41, _10);
  _11 = stderr;
  __builtin_fwrite (" -k,--keep       Keep input file, don\'t delete\n", 1, 47, _11);
  _12 = stderr;
  __builtin_fwrite (" -l,--loadavg    Load average determines max number processors to use\n", 1, 70, _12);
  _13 = stderr;
  __builtin_fwrite (" -m#             Maximum memory usage in 1MB steps (default 100 = 100MB)\n", 1, 73, _13);
  _14 = stderr;
  __builtin_fwrite (" -p#             Number of processors to use (default", 1, 53, _14);
  _77 = sysconf (84);
  ncpu_78 = (int) _77;
  if (ncpu_78 <= 0)
    goto <bb 6>; [39.77%]
  else
    goto <bb 7>; [60.23%]

  <bb 6> [39.77%]:

  <bb 7> [100.00%]:
  # ncpu_79 = PHI <ncpu_78(5), 1(6)>
  _16 = stderr;
  __fprintf_chk (_16, 1, ": autodetect [%d])\n", ncpu_79);
  _17 = stderr;
  __builtin_fwrite (" -q,--quiet      Quiet mode (default)\n", 1, 38, _17);
  _18 = stderr;
  __builtin_fwrite (" -r,--read       Read entire input file into RAM and split between processors\n", 1, 78, _18);
  _19 = stderr;
  __builtin_fwrite (" -S#             Child thread stack size in 1KB steps (default stack size if unspecified)\n", 1, 90, _19);
  _20 = stderr;
  __builtin_fwrite (" -t,--test       Test compressed file integrity\n", 1, 48, _20);
  _21 = stderr;
  __builtin_fwrite (" -v,--verbose    Verbose mode\n", 1, 30, _21);
  _22 = stderr;
  __builtin_fwrite (" -V,--version    Display version info for pbzip2 then exit\n", 1, 59, _22);
  _23 = stderr;
  __builtin_fwrite (" -z,--compress   Compress file (default)\n", 1, 41, _23);
  _24 = stderr;
  __builtin_fwrite (" --ignore-trailing-garbage=# Ignore trailing garbage flag (1 - ignored; 0 - forbidden)\n", 1, 87, _24);
  _25 = stderr;
  __builtin_fputc (10, _25);
  _26 = stderr;
  __builtin_fwrite ("If no file names are given, pbzip2 compresses or decompresses from standard input to standard output.\n", 1, 102, _26);
  _27 = stderr;
  __builtin_fputc (10, _27);
  _28 = stderr;
  __builtin_fwrite ("Example: pbzip2 -b15vk myfile.tar\n", 1, 34, _28);
  _29 = stderr;
  __builtin_fwrite ("Example: pbzip2 -p4 -r -5 myfile.tar second*.txt\n", 1, 49, _29);
  _30 = stderr;
  __builtin_fwrite ("Example: tar cf myfile.tar.bz2 --use-compress-prog=pbzip2 dir_to_compress/\n", 1, 75, _30);
  _31 = stderr;
  __builtin_fwrite ("Example: pbzip2 -d -m500 myfile.tar.bz2\n", 1, 40, _31);
  _32 = stderr;
  __builtin_fwrite ("Example: pbzip2 -dc myfile.tar.bz2 | tar x\n", 1, 43, _32);
  _33 = stderr;
  __builtin_fwrite ("Example: pbzip2 -c < myfile.txt > myfile.txt.bz2 \n", 1, 50, _33);
  _34 = stderr;
  __builtin_fputc (10, _34);
  exit (-1);

}



;; Function writeFileMetaData (_Z17writeFileMetaDataPKc, funcdef_no=23, decl_uid=4291, cgraph_uid=126, symbol_order=789)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { 9 }
;; 4 succs { 5 6 }
;; 5 succs { 9 }
;; 6 succs { 7 9 }
;; 7 succs { 9 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
writeFileMetaData (const char * fileName)
{
  struct utimbuf uTimBuf;
  int ret;
  long int _1;
  long int _2;
  unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  struct ErrorContext * _20;
  struct ErrorContext * _24;
  struct ErrorContext * _27;

  <bb 2> [100.00%]:
  _1 = fileMetaData.st_atim.tv_sec;
  uTimBuf.actime = _1;
  _2 = fileMetaData.st_mtim.tv_sec;
  uTimBuf.modtime = _2;
  _3 = fileMetaData.st_mode;
  ret_14 = chmod (fileName_12(D), _3);
  if (ret_14 != 0)
    goto <bb 3>; [46.00%]
  else
    goto <bb 4>; [54.00%]

  <bb 3> [46.00%]:
  _27 = getInstance ();
  saveError (_27);
  goto <bb 9>; [100.00%]

  <bb 4> [54.00%]:
  ret_16 = utime (fileName_12(D), &uTimBuf);
  if (ret_16 != 0)
    goto <bb 5>; [46.00%]
  else
    goto <bb 6>; [54.00%]

  <bb 5> [24.84%]:
  _24 = getInstance ();
  saveError (_24);
  goto <bb 9>; [100.00%]

  <bb 6> [29.16%]:
  _4 = fileMetaData.st_gid;
  _5 = fileMetaData.st_uid;
  ret_18 = chown (fileName_12(D), _5, _4);
  if (ret_18 != 0)
    goto <bb 7>; [36.64%]
  else
    goto <bb 9>; [63.36%]

  <bb 7> [10.68%]:
  _20 = getInstance ();
  saveError (_20);
  _6 = geteuid ();
  if (_6 == 0)
    goto <bb 9>; [46.00%]
  else
    goto <bb 8>; [54.00%]

  <bb 8> [5.77%]:

  <bb 9> [100.00%]:
  # _7 = PHI <ret_14(3), ret_16(5), 0(6), ret_18(7), 0(8)>
  uTimBuf ={v} {CLOBBER};
  return _7;

}



;; Function safe_fopen_output (_Z17safe_fopen_outputPKcS0_, funcdef_no=4, decl_uid=4332, cgraph_uid=252, symbol_order=737) (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 6
;; 2 succs { 6 3 }
;; 3 succs { 4 6 }
;; 4 succs { 6 }
;; 6 succs { 1 }
safe_fopen_output (const char * path, const char * mode)
{
  struct FILE * fp;
  struct FILE * _1;
  int _6;
  struct ErrorContext * _11;

  <bb 2> [100.00%]:
  _6 = safe_open_output (path_4(D));
  if (_6 == -1)
    goto <bb 6>; [9.37%]
  else
    goto <bb 3>; [90.63%]

  <bb 3> [90.63%]:
  fp_9 = fdopen (_6, mode_7(D));
  if (fp_9 == 0B)
    goto <bb 4>; [19.86%]
  else
    goto <bb 6>; [80.14%]

  <bb 4> [18.00%]:
  _11 = getInstance ();
  saveError (_11);
  close (_6);

  <bb 6> [100.00%]:
  # _1 = PHI <0B(2), fp_9(3), fp_9(4)>
  return _1;

}



;; Function do_write (_Z8do_writeiPKvm, funcdef_no=1, decl_uid=4335, cgraph_uid=255, symbol_order=734)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 3, latch 5
;;  depth 1, outer 0
;;  nodes: 3 5 4
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 3 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 1 }
do_write (int fd, const void * buf, size_t count)
{
  const char * pbuf;
  ssize_t nbytes;
  ssize_t bytesRemaining;
  long unsigned int _1;
  sizetype _2;
  long unsigned int _3;
  long unsigned int _4;
  long int _9;
  long int _19;
  long int _20;
  struct ErrorContext * _22;

  <bb 2> [14.44%]:
  bytesRemaining_14 = (ssize_t) count_13(D);

  <bb 3> [100.00%]:
  # bytesRemaining_5 = PHI <bytesRemaining_14(2), bytesRemaining_24(5)>
  # nbytes_6 = PHI <0(2), _19(5)>
  # pbuf_8 = PHI <buf_15(D)(2), pbuf_25(5)>
  if (bytesRemaining_5 > 0)
    goto <bb 4>; [92.50%]
  else
    goto <bb 6>; [7.50%]

  <bb 4> [92.50%]:
  _1 = (long unsigned int) bytesRemaining_5;
  _19 = write (fd_17(D), pbuf_8, _1);
  if (_19 > 0)
    goto <bb 5>; [92.50%]
  else
    goto <bb 6>; [7.50%]

  <bb 5> [85.56%]:
  bytesRemaining_24 = bytesRemaining_5 - _19;
  _2 = (sizetype) _19;
  pbuf_25 = pbuf_8 + _2;
  goto <bb 3>; [100.00%]

  <bb 6> [14.44%]:
  # nbytes_7 = PHI <nbytes_6(3), _19(4)>
  if (nbytes_7 < 0)
    goto <bb 7>; [19.09%]
  else
    goto <bb 8>; [80.91%]

  <bb 7> [2.76%]:
  _22 = getInstance ();
  saveError (_22);
  goto <bb 9>; [100.00%]

  <bb 8> [11.68%]:
  _3 = (long unsigned int) bytesRemaining_5;
  _4 = count_13(D) - _3;
  _20 = (long int) _4;

  <bb 9> [14.44%]:
  # _9 = PHI <nbytes_7(7), _20(8)>
  return _9;

}



;; Function cleanupAndQuit (_Z14cleanupAndQuiti, funcdef_no=16, decl_uid=4318, cgraph_uid=205, symbol_order=767) (executed once)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 19 5 }
;; 5 succs { 8 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 9 }
;; 8 succs { 19 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 17 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 16 }
;; 15 succs { 18 }
;; 16 succs { 18 }
;; 17 succs { 18 }
;; 18 succs { 20 }
;; 19 succs { 20 }
;; 20 succs { }
cleanupAndQuit (int exitCode)
{
  struct stat statBuf;
  int ret;
  int ret;
  struct FILE * _1;
  int _16;
  const char * _17;
  const char * _18;
  int _19;
  int _20;
  struct FILE * _21;
  const char * _22;
  int _23;
  int _24;
  const char * _25;
  struct FILE * _26;
  const char * _27;
  int * _29;
  int _30;
  struct FILE * _31;
  struct FILE * _32;
  struct FILE * _33;
  struct FILE * _34;
  const char * _35;
  struct FILE * _36;

  <bb 2> [100.00%]:
  ret_5 = pthread_mutex_lock (&ErrorHandlerMutex);
  if (ret_5 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [33.00%]:
  _1 = stderr;
  __builtin_fwrite ("Cleanup Handler: Failed to lock ErrorHandlerMutex! May double cleanup...\n", 1, 73, _1);

  <bb 4> [100.00%]:
  _16 = unfinishedWorkCleaned;
  if (_16 != 0)
    goto <bb 19>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [50.00%]:
  _17 = sigInFilename;
  if (_17 == 0B)
    goto <bb 8>; [30.00%]
  else
    goto <bb 6>; [70.00%]

  <bb 6> [35.00%]:
  _18 = sigOutFilename;
  if (_18 == 0B)
    goto <bb 8>; [30.00%]
  else
    goto <bb 7>; [70.00%]

  <bb 7> [24.50%]:
  _19 = OutputStdOut;
  if (_19 == 1)
    goto <bb 8>; [34.00%]
  else
    goto <bb 9>; [66.00%]

  <bb 8> [33.83%]:
  unfinishedWorkCleaned = 1;
  goto <bb 19>; [100.00%]

  <bb 9> [16.17%]:
  _20 = QuietMode;
  if (_20 != 1)
    goto <bb 10>; [48.88%]
  else
    goto <bb 11>; [51.12%]

  <bb 10> [7.90%]:
  _21 = stderr;
  __fprintf_chk (_21, 1, "Cleanup unfinished work [Outfile: %s]...\n", _18);

  <bb 11> [16.17%]:
  _22 = sigInFilename;
  _23 = __xstat (1, _22, &statBuf);
  if (_23 == 0)
    goto <bb 12>; [67.00%]
  else
    goto <bb 17>; [33.00%]

  <bb 12> [10.83%]:
  _24 = QuietMode;
  if (_24 != 1)
    goto <bb 13>; [48.88%]
  else
    goto <bb 14>; [51.12%]

  <bb 13> [5.30%]:
  _25 = sigOutFilename;
  _26 = stderr;
  __fprintf_chk (_26, 1, "Deleting output file: %s, if it exists...\n", _25);

  <bb 14> [10.83%]:
  _27 = sigOutFilename;
  ret_28 = remove (_27);
  if (ret_28 != 0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 15> [5.42%]:
  _29 = __errno_location ();
  _30 = *_29;
  _31 = stderr;
  syncPrintErrnoMsg (_31, _30);
  _32 = stderr;
  __builtin_fwrite ("pbzip2:  *WARNING: Deletion of output file (apparently) failed.\n", 1, 64, _32);
  goto <bb 18>; [100.00%]

  <bb 16> [5.42%]:
  _33 = stderr;
  __builtin_fwrite ("pbzip2:  *INFO: Deletion of output file succeeded.\n", 1, 51, _33);
  sigOutFilename = 0B;
  goto <bb 18>; [100.00%]

  <bb 17> [5.34%]:
  _34 = stderr;
  __builtin_fwrite ("pbzip2:  *WARNING: Output file was not deleted since input file no longer exists.\n", 1, 82, _34);
  _35 = sigOutFilename;
  _36 = stderr;
  __fprintf_chk (_36, 1, "pbzip2:  *WARNING: Output file: %s, may be incomplete!\n", _35);

  <bb 18> [16.17%]:
  unfinishedWorkCleaned = 1;
  statBuf ={v} {CLOBBER};
  goto <bb 20>; [100.00%]

  <bb 19> [83.83%]:
  statBuf ={v} {CLOBBER};

  <bb 20> [100.00%]:
  pthread_mutex_unlock (&ErrorHandlerMutex);
  exit (exitCode_8(D));

}



;; Function syncSetTerminateFlag (_Z20syncSetTerminateFlagi, funcdef_no=8, decl_uid=4320, cgraph_uid=207, symbol_order=747) (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 16 }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 8 9 }
;; 8 succs { }
;; 9 succs { 10 11 }
;; 10 succs { }
;; 11 succs { 12 18 }
;; 12 succs { 13 14 }
;; 13 succs { }
;; 14 succs { 15 18 }
;; 15 succs { }
;; 16 succs { 17 18 }
;; 17 succs { }
;; 18 succs { 1 }
syncSetTerminateFlag (int newValue)
{
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  union pthread_mutex_t * _1;
  union pthread_cond_t * _2;
  union pthread_mutex_t * _3;
  struct queue * _4;
  union pthread_mutex_t * _5;
  struct queue * _6;
  union pthread_cond_t * _7;
  struct queue * _8;
  union pthread_cond_t * _9;
  struct queue * _10;
  union pthread_mutex_t * _11;
  struct FILE * _31;
  struct FILE * _33;
  struct FILE * _35;
  struct FILE * _37;
  struct FILE * _39;
  struct FILE * _41;
  struct FILE * _43;

  <bb 2> [100.00%]:
  ret_30 = pthread_mutex_lock (&TerminateFlagMutex);
  if (ret_30 != 0)
    goto <bb 3>; [0.04%]
  else
    goto <bb 4>; [99.96%]

  <bb 3> [0.04%]:
  _31 = stderr;
  __fprintf_chk (_31, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_30);
  cleanupAndQuit (-5);

  <bb 4> [99.96%]:
  terminateFlag = newValue_15(D);
  if (newValue_15(D) != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 5> [49.98%]:
  pthread_cond_signal (&TerminateCond);
  ret_36 = pthread_mutex_unlock (&TerminateFlagMutex);
  if (ret_36 != 0)
    goto <bb 6>; [0.04%]
  else
    goto <bb 7>; [99.96%]

  <bb 6> [0.02%]:
  _37 = stderr;
  __fprintf_chk (_37, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_36);
  cleanupAndQuit (-6);

  <bb 7> [49.96%]:
  _1 = OutMutex;
  ret_34 = pthread_mutex_lock (_1);
  if (ret_34 != 0)
    goto <bb 8>; [0.04%]
  else
    goto <bb 9>; [99.96%]

  <bb 8> [0.02%]:
  _35 = stderr;
  __fprintf_chk (_35, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_34);
  cleanupAndQuit (-5);

  <bb 9> [49.94%]:
  _2 = notTooMuchNumBuffered;
  pthread_cond_broadcast (_2);
  _3 = OutMutex;
  ret_32 = pthread_mutex_unlock (_3);
  if (ret_32 != 0)
    goto <bb 10>; [0.04%]
  else
    goto <bb 11>; [99.96%]

  <bb 10> [0.02%]:
  _33 = stderr;
  __fprintf_chk (_33, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_32);
  cleanupAndQuit (-6);

  <bb 11> [49.92%]:
  _4 = FifoQueue;
  if (_4 != 0B)
    goto <bb 12>; [53.47%]
  else
    goto <bb 18>; [46.53%]

  <bb 12> [26.69%]:
  _5 = _4->mut;
  ret_40 = pthread_mutex_lock (_5);
  if (ret_40 != 0)
    goto <bb 13>; [0.04%]
  else
    goto <bb 14>; [99.96%]

  <bb 13> [0.01%]:
  _41 = stderr;
  __fprintf_chk (_41, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_40);
  cleanupAndQuit (-5);

  <bb 14> [26.68%]:
  _6 = FifoQueue;
  _7 = _6->notFull;
  pthread_cond_broadcast (_7);
  _8 = FifoQueue;
  _9 = _8->notEmpty;
  pthread_cond_broadcast (_9);
  _10 = FifoQueue;
  _11 = _10->mut;
  ret_38 = pthread_mutex_unlock (_11);
  if (ret_38 != 0)
    goto <bb 15>; [0.04%]
  else
    goto <bb 18>; [99.96%]

  <bb 15> [0.01%]:
  _39 = stderr;
  __fprintf_chk (_39, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_38);
  cleanupAndQuit (-6);

  <bb 16> [49.98%]:
  ret_42 = pthread_mutex_unlock (&TerminateFlagMutex);
  if (ret_42 != 0)
    goto <bb 17>; [0.04%]
  else
    goto <bb 18>; [99.96%]

  <bb 17> [0.02%]:
  _43 = stderr;
  __fprintf_chk (_43, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_42);
  cleanupAndQuit (-6);

  <bb 18> [99.86%]:
  return;

}



;; Function handle_error (_Z12handle_error8ExitFlagiPKcz, funcdef_no=7, decl_uid=4329, cgraph_uid=239, symbol_order=753)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 18 }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 8 9 }
;; 8 succs { }
;; 9 succs { 10 11 }
;; 10 succs { }
;; 11 succs { 12 13 }
;; 12 succs { }
;; 13 succs { 14 18 }
;; 14 succs { 15 16 }
;; 15 succs { }
;; 16 succs { 17 18 }
;; 17 succs { }
;; 18 succs { 1 }
handle_error (ExitFlag exitFlag, int exitCode, const char * fmt)
{
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  struct  args[1];
  struct FILE * _1;
  struct FILE * _2;
  struct FILE * _3;
  struct ErrorContext * _9;
  union pthread_mutex_t * _28;
  union pthread_cond_t * _29;
  union pthread_mutex_t * _30;
  struct queue * _31;
  union pthread_mutex_t * _32;
  struct queue * _33;
  union pthread_cond_t * _34;
  struct queue * _35;
  union pthread_cond_t * _36;
  struct queue * _37;
  union pthread_mutex_t * _38;
  struct FILE * _40;
  struct FILE * _42;
  struct FILE * _44;
  struct FILE * _46;
  struct FILE * _48;
  struct FILE * _50;

  <bb 2> [100.00%]:
  __builtin_va_start (&args, 0);
  _1 = stderr;
  __vfprintf_chk (_1, 1, fmt_7(D), &args);
  _9 = getInstance ();
  _2 = stderr;
  printErrorMessages (_9, _2);
  _3 = stderr;
  fflush (_3);
  __builtin_va_end (&args);
  if (exitFlag_13(D) == 2)
    goto <bb 3>; [0.04%]
  else
    goto <bb 4>; [99.96%]

  <bb 3> [0.04%]:
  syncSetTerminateFlag (1);
  abort ();

  <bb 4> [99.96%]:
  if (exitFlag_13(D) == 1)
    goto <bb 5>; [22.95%]
  else
    goto <bb 18>; [77.05%]

  <bb 5> [22.94%]:
  ret_39 = pthread_mutex_lock (&TerminateFlagMutex);
  if (ret_39 != 0)
    goto <bb 6>; [0.04%]
  else
    goto <bb 7>; [99.96%]

  <bb 6> [0.01%]:
  _40 = stderr;
  __fprintf_chk (_40, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_39);
  cleanupAndQuit (-5);

  <bb 7> [22.93%]:
  terminateFlag = 1;
  pthread_cond_signal (&TerminateCond);
  ret_45 = pthread_mutex_unlock (&TerminateFlagMutex);
  if (ret_45 != 0)
    goto <bb 8>; [0.04%]
  else
    goto <bb 9>; [99.96%]

  <bb 8> [0.01%]:
  _46 = stderr;
  __fprintf_chk (_46, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_45);
  cleanupAndQuit (-6);

  <bb 9> [22.92%]:
  _28 = OutMutex;
  ret_43 = pthread_mutex_lock (_28);
  if (ret_43 != 0)
    goto <bb 10>; [0.04%]
  else
    goto <bb 11>; [99.96%]

  <bb 10> [0.01%]:
  _44 = stderr;
  __fprintf_chk (_44, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_43);
  cleanupAndQuit (-5);

  <bb 11> [22.91%]:
  _29 = notTooMuchNumBuffered;
  pthread_cond_broadcast (_29);
  _30 = OutMutex;
  ret_41 = pthread_mutex_unlock (_30);
  if (ret_41 != 0)
    goto <bb 12>; [0.04%]
  else
    goto <bb 13>; [99.96%]

  <bb 12> [0.01%]:
  _42 = stderr;
  __fprintf_chk (_42, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_41);
  cleanupAndQuit (-6);

  <bb 13> [22.90%]:
  _31 = FifoQueue;
  if (_31 != 0B)
    goto <bb 14>; [53.47%]
  else
    goto <bb 18>; [46.53%]

  <bb 14> [12.25%]:
  _32 = _31->mut;
  ret_49 = pthread_mutex_lock (_32);
  if (ret_49 != 0)
    goto <bb 15>; [0.04%]
  else
    goto <bb 16>; [99.96%]

  <bb 15> [0.00%]:
  _50 = stderr;
  __fprintf_chk (_50, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_49);
  cleanupAndQuit (-5);

  <bb 16> [12.24%]:
  _33 = FifoQueue;
  _34 = _33->notFull;
  pthread_cond_broadcast (_34);
  _35 = FifoQueue;
  _36 = _35->notEmpty;
  pthread_cond_broadcast (_36);
  _37 = FifoQueue;
  _38 = _37->mut;
  ret_47 = pthread_mutex_unlock (_38);
  if (ret_47 != 0)
    goto <bb 17>; [0.04%]
  else
    goto <bb 18>; [99.96%]

  <bb 17> [0.00%]:
  _48 = stderr;
  __fprintf_chk (_48, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_47);
  cleanupAndQuit (-6);

  <bb 18> [99.91%]:
  args ={v} {CLOBBER};
  return exitCode_15(D);

}



;; Function safe_cond_timed_wait (_Z20safe_cond_timed_waitP14pthread_cond_tP15pthread_mutex_tiPKc, funcdef_no=0, decl_uid=4336, cgraph_uid=256, symbol_order=733)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { 1 }
safe_cond_timed_wait (union pthread_cond_t * cond, union pthread_mutex_t * mutex, int seconds, const char * caller)
{
  struct timezone tz;
  struct timeval tv;
  struct timespec waitTimer;
  long int _1;
  long int _2;
  long int _3;
  long int _4;
  long int _5;
  bool _6;
  bool _7;
  bool _8;
  bool _9;
  bool _10;
  bool _11;
  int _20;
  struct ErrorContext * _22;

  <bb 2> [100.00%]:
  gettimeofday (&tv, &tz);
  _1 = tv.tv_sec;
  _2 = (long int) seconds_14(D);
  _3 = _1 + _2;
  waitTimer.tv_sec = _3;
  _4 = tv.tv_usec;
  _5 = _4 * 1000;
  waitTimer.tv_nsec = _5;
  _20 = pthread_cond_timedwait (cond_17(D), mutex_18(D), &waitTimer);
  _6 = _20 != 0;
  _7 = _20 != 4;
  _8 = _6 & _7;
  if (_8 != 0)
    goto <bb 3>; [54.00%]
  else
    goto <bb 5>; [46.00%]

  <bb 3> [54.00%]:
  _9 = _20 != 16;
  _10 = _20 != 110;
  _11 = _9 & _10;
  if (_11 != 0)
    goto <bb 4>; [0.04%]
  else
    goto <bb 5>; [99.96%]

  <bb 4> [0.02%]:
  _22 = getInstance ();
  saveError (_22);
  pthread_mutex_unlock (mutex_18(D));
  handle_error (1, 1, "pbzip2: *ERROR: %s:  pthread_cond_timedwait() call invalid [pret=%d].  This machine\n         does not have compatible pthreads library.  Aborting.\n", caller_25(D), _20);
  cleanupAndQuit (-9);

  <bb 5> [99.98%]:
  waitTimer ={v} {CLOBBER};
  tv ={v} {CLOBBER};
  tz ={v} {CLOBBER};
  return 0;

}



;; Function decompressErrCheckSingle (_Z24decompressErrCheckSingleiPK7outBuffiRK9bz_streamPKcb, funcdef_no=11, decl_uid=4321, cgraph_uid=223, symbol_order=757)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 53 45 46 47 48 49 50 51 52
;;
;; Loop 1
;;  header 30, latch 53
;;  depth 1, outer 0
;;  nodes: 30 53 44 41 37 38 35 34 32
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 6 5 }
;; 5 succs { 6 7 }
;; 6 succs { 52 }
;; 7 succs { 8 9 }
;; 8 succs { }
;; 9 succs { 11 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 14 13 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 27 }
;; 16 succs { 17 18 }
;; 17 succs { }
;; 18 succs { 19 20 }
;; 19 succs { }
;; 20 succs { 21 22 }
;; 21 succs { }
;; 22 succs { 23 29 }
;; 23 succs { 24 25 }
;; 24 succs { }
;; 25 succs { 26 29 }
;; 26 succs { }
;; 27 succs { 28 29 }
;; 28 succs { }
;; 29 succs { 30 }
;; 30 succs { 31 32 }
;; 31 succs { }
;; 32 succs { 33 34 }
;; 33 succs { }
;; 34 succs { 46 35 }
;; 35 succs { 36 37 }
;; 36 succs { }
;; 37 succs { 38 41 }
;; 38 succs { 39 41 }
;; 39 succs { 40 46 }
;; 40 succs { }
;; 41 succs { 42 44 }
;; 42 succs { 43 46 }
;; 43 succs { }
;; 44 succs { 45 53 }
;; 53 succs { 30 }
;; 45 succs { }
;; 46 succs { 47 50 }
;; 47 succs { 48 49 }
;; 48 succs { 52 }
;; 49 succs { 52 }
;; 50 succs { 52 51 }
;; 51 succs { 52 }
;; 52 succs { 1 }
decompressErrCheckSingle (int bzret, const struct outBuff * fileData, int outSequenceNumber, const struct bz_stream & strm, const char * errmsg, bool isTrailingGarbageErr)
{
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  bool changed;
  int ret;
  int D.4943;
  int _1;
  int _2;
  struct FILE * _3;
  int _4;
  int _9;
  int _17;
  int _18;
  unsigned int _19;
  bool _20;
  int _21;
  unsigned int _22;
  bool _23;
  int _24;
  int _25;
  union pthread_mutex_t * _34;
  int _35;
  union pthread_mutex_t * _36;
  int _37;
  union pthread_mutex_t * _38;
  union pthread_mutex_t * _39;
  union pthread_mutex_t * _40;
  int _41;
  union pthread_mutex_t * _42;
  int _43;
  int _44;
  union pthread_cond_t * _46;
  union pthread_mutex_t * _47;
  struct queue * _48;
  union pthread_mutex_t * _49;
  struct queue * _50;
  union pthread_cond_t * _51;
  struct queue * _52;
  union pthread_cond_t * _53;
  struct queue * _54;
  union pthread_mutex_t * _55;
  union pthread_mutex_t * _56;
  struct FILE * _58;
  struct FILE * _60;
  struct FILE * _62;
  struct FILE * _64;
  struct FILE * _66;
  struct FILE * _68;
  struct FILE * _70;
  struct FILE * _72;
  struct FILE * _74;
  struct FILE * _76;
  struct FILE * _78;
  struct FILE * _80;
  struct FILE * _82;

  <bb 2> [13.50%]:
  _1 = fileData_7(D)->blockNumber;
  if (outSequenceNumber_8(D) != -1)
    goto <bb 4>; [66.00%]
  else
    goto <bb 3>; [34.00%]

  <bb 3> [4.59%]:
  _9 = _1 + -1;

  <bb 4> [13.50%]:
  # _17 = PHI <_1(2), _9(3)>
  if (_17 == -1)
    goto <bb 6>; [0.52%]
  else
    goto <bb 5>; [99.48%]

  <bb 5> [13.43%]:
  _18 = IgnoreTrailingGarbageFlag;
  if (_18 == 0)
    goto <bb 6>; [3.98%]
  else
    goto <bb 7>; [96.02%]

  <bb 6> [0.60%]:
  _19 = strm_15(D)->avail_in;
  _20 = fileData_7(D)->isLastInSequence;
  _21 = (int) _20;
  handle_error (1, -1, "pbzip2: %s: ret=%d; block=%d; seq=%d; isLastInSeq=%d; avail_in=%d\n", errmsg_16(D), bzret_14(D), _1, outSequenceNumber_8(D), _21, _19);
  goto <bb 52>; [100.00%]

  <bb 7> [12.89%]:
  _42 = OutMutex;
  ret_57 = pthread_mutex_lock (_42);
  if (ret_57 != 0)
    goto <bb 8>; [0.04%]
  else
    goto <bb 9>; [99.96%]

  <bb 8> [0.01%]:
  _58 = stderr;
  __fprintf_chk (_58, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_57);
  cleanupAndQuit (-5);

  <bb 9> [12.89%]:
  _43 = LastGoodBlock;
  if (_43 == -1)
    goto <bb 11>; [34.00%]
  else
    goto <bb 10>; [66.00%]

  <bb 10> [8.51%]:
  if (_17 < _43)
    goto <bb 11>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 11> [8.63%]:
  LastGoodBlock = _17;

  <bb 12> [12.89%]:
  # changed_45 = PHI <0(10), 1(11)>
  _44 = MinErrorBlock;
  if (_44 == -1)
    goto <bb 14>; [34.00%]
  else
    goto <bb 13>; [66.00%]

  <bb 13> [8.51%]:
  if (_1 < _44)
    goto <bb 14>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 14> [8.63%]:
  MinErrorBlock = _1;
  goto <bb 16>; [100.00%]

  <bb 15> [4.25%]:
  if (changed_45 != 0)
    goto <bb 16>; [67.00%]
  else
    goto <bb 27>; [33.00%]

  <bb 16> [11.48%]:
  ret_63 = pthread_cond_signal (&ErrStateChangeCond);
  if (ret_63 != 0)
    goto <bb 17>; [0.04%]
  else
    goto <bb 18>; [99.96%]

  <bb 17> [0.00%]:
  _64 = stderr;
  __fprintf_chk (_64, 1, "pthread_cond_signal error [%d]! Aborting immediately!\n", ret_63);
  cleanupAndQuit (-7);

  <bb 18> [11.48%]:
  ret_61 = pthread_cond_signal (&OutBufferHeadNotEmpty);
  if (ret_61 != 0)
    goto <bb 19>; [0.04%]
  else
    goto <bb 20>; [99.96%]

  <bb 19> [0.00%]:
  _62 = stderr;
  __fprintf_chk (_62, 1, "pthread_cond_signal error [%d]! Aborting immediately!\n", ret_61);
  cleanupAndQuit (-7);

  <bb 20> [11.47%]:
  _46 = notTooMuchNumBuffered;
  pthread_cond_broadcast (_46);
  _47 = OutMutex;
  ret_59 = pthread_mutex_unlock (_47);
  if (ret_59 != 0)
    goto <bb 21>; [0.04%]
  else
    goto <bb 22>; [99.96%]

  <bb 21> [0.00%]:
  _60 = stderr;
  __fprintf_chk (_60, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_59);
  cleanupAndQuit (-6);

  <bb 22> [11.47%]:
  _48 = FifoQueue;
  if (_48 != 0B)
    goto <bb 23>; [53.47%]
  else
    goto <bb 29>; [46.53%]

  <bb 23> [6.13%]:
  _49 = _48->mut;
  ret_67 = pthread_mutex_lock (_49);
  if (ret_67 != 0)
    goto <bb 24>; [0.04%]
  else
    goto <bb 25>; [99.96%]

  <bb 24> [0.00%]:
  _68 = stderr;
  __fprintf_chk (_68, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_67);
  cleanupAndQuit (-5);

  <bb 25> [6.13%]:
  _50 = FifoQueue;
  _51 = _50->notFull;
  pthread_cond_broadcast (_51);
  _52 = FifoQueue;
  _53 = _52->notEmpty;
  pthread_cond_broadcast (_53);
  _54 = FifoQueue;
  _55 = _54->mut;
  ret_65 = pthread_mutex_unlock (_55);
  if (ret_65 != 0)
    goto <bb 26>; [0.04%]
  else
    goto <bb 29>; [99.96%]

  <bb 26> [0.00%]:
  _66 = stderr;
  __fprintf_chk (_66, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_65);
  cleanupAndQuit (-6);

  <bb 27> [1.40%]:
  _56 = OutMutex;
  ret_69 = pthread_mutex_unlock (_56);
  if (ret_69 != 0)
    goto <bb 28>; [0.04%]
  else
    goto <bb 29>; [99.96%]

  <bb 28> [0.00%]:
  _70 = stderr;
  __fprintf_chk (_70, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_69);
  cleanupAndQuit (-6);

  <bb 29> [12.87%]:
  _2 = fileData_7(D)->blockNumber;

  <bb 30> [100.00%]:
  ret_73 = pthread_mutex_lock (&TerminateFlagMutex);
  if (ret_73 != 0)
    goto <bb 31>; [0.04%]
  else
    goto <bb 32>; [99.96%]

  <bb 31> [0.04%]:
  _74 = stderr;
  __fprintf_chk (_74, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_73);
  cleanupAndQuit (-5);

  <bb 32> [99.96%]:
  ret_33 = terminateFlag;
  ret_71 = pthread_mutex_unlock (&TerminateFlagMutex);
  if (ret_71 != 0)
    goto <bb 33>; [0.04%]
  else
    goto <bb 34>; [99.96%]

  <bb 33> [0.04%]:
  _72 = stderr;
  __fprintf_chk (_72, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_71);
  cleanupAndQuit (-6);

  <bb 34> [99.92%]:
  if (ret_33 != 0)
    goto <bb 46>; [5.00%]
  else
    goto <bb 35>; [95.00%]

  <bb 35> [94.92%]:
  _34 = OutMutex;
  ret_75 = pthread_mutex_lock (_34);
  if (ret_75 != 0)
    goto <bb 36>; [0.04%]
  else
    goto <bb 37>; [99.96%]

  <bb 36> [0.04%]:
  _76 = stderr;
  __fprintf_chk (_76, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_75);
  cleanupAndQuit (-5);

  <bb 37> [94.89%]:
  _35 = MinErrorBlock;
  if (_35 != -1)
    goto <bb 38>; [66.00%]
  else
    goto <bb 41>; [34.00%]

  <bb 38> [62.62%]:
  if (_2 > _35)
    goto <bb 39>; [5.00%]
  else
    goto <bb 41>; [95.00%]

  <bb 39> [3.13%]:
  _36 = OutMutex;
  ret_77 = pthread_mutex_unlock (_36);
  if (ret_77 != 0)
    goto <bb 40>; [0.04%]
  else
    goto <bb 46>; [99.96%]

  <bb 40> [0.00%]:
  _78 = stderr;
  __fprintf_chk (_78, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_77);
  cleanupAndQuit (-6);

  <bb 41> [91.75%]:
  _37 = NextBlockToWrite;
  if (_2 <= _37)
    goto <bb 42>; [5.00%]
  else
    goto <bb 44>; [95.00%]

  <bb 42> [4.59%]:
  _38 = OutMutex;
  ret_79 = pthread_mutex_unlock (_38);
  if (ret_79 != 0)
    goto <bb 43>; [0.04%]
  else
    goto <bb 46>; [99.96%]

  <bb 43> [0.00%]:
  _80 = stderr;
  __fprintf_chk (_80, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_79);
  cleanupAndQuit (-6);

  <bb 44> [87.17%]:
  _39 = OutMutex;
  safe_cond_timed_wait (&ErrStateChangeCond, _39, 1, "waitForPreviousBlock");
  _40 = OutMutex;
  ret_81 = pthread_mutex_unlock (_40);
  if (ret_81 != 0)
    goto <bb 45>; [0.04%]
  else
    goto <bb 53>; [99.96%]

  <bb 53> [87.14%]:
  goto <bb 30>; [100.00%]

  <bb 45> [0.03%]:
  _82 = stderr;
  __fprintf_chk (_82, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_81);
  cleanupAndQuit (-6);

  <bb 46> [12.71%]:
  # _41 = PHI <-1(34), 2(39), 0(42)>
  if (_41 == 0)
    goto <bb 47>; [50.00%]
  else
    goto <bb 50>; [50.00%]

  <bb 47> [6.36%]:
  if (isTrailingGarbageErr_13(D) != 0)
    goto <bb 48>; [98.00%]
  else
    goto <bb 49>; [2.00%]

  <bb 48> [6.23%]:
  _3 = stderr;
  __builtin_fwrite ("pbzip2: *WARNING: Trailing garbage after EOF ignored!\n", 1, 54, _3);
  goto <bb 52>; [100.00%]

  <bb 49> [0.13%]:
  _22 = strm_15(D)->avail_in;
  _23 = fileData_7(D)->isLastInSequence;
  _24 = (int) _23;
  _25 = fileData_7(D)->blockNumber;
  handle_error (1, -1, "pbzip2: %s: ret=%d; block=%d; seq=%d; isLastInSeq=%d; avail_in=%d\n", errmsg_16(D), bzret_14(D), _25, outSequenceNumber_8(D), _24, _22);
  goto <bb 52>; [100.00%]

  <bb 50> [6.36%]:
  if (_41 == 2)
    goto <bb 52>; [91.90%]
  else
    goto <bb 51>; [8.10%]

  <bb 51> [0.51%]:

  <bb 52> [13.32%]:
  # _4 = PHI <-1(6), 1(48), -1(49), 2(50), -1(51)>
  return _4;

}



;; Function appendOutBuffData (_ZN6pbzip216BZ2StreamScanner17appendOutBuffDataEPh, funcdef_no=89, decl_uid=4119, cgraph_uid=28, symbol_order=3092) (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 18 3 }
;; 3 succs { 4 17 }
;; 4 succs { 15 5 }
;; 5 succs { 6 9 }
;; 6 succs { 7 9 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 15 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 15 }
;; 15 succs { 18 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 1 }
appendOutBuffData (struct BZ2StreamScanner * const this, CharType * end)
{
  char * newBuff;
  int D.5911;
  size_t newSize;
  int additionSize;
  long int _1;
  long int _2;
  long int _3;
  unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  long unsigned int _7;
  unsigned int _8;
  unsigned int _9;
  int _10;
  bool _16;
  CharType * _18;
  char * _25;
  unsigned int _26;
  sizetype _27;
  char * _28;
  CharType * _29;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _44;
  unsigned int _45;
  unsigned int _46;
  char * _47;
  unsigned int _48;
  long unsigned int _49;
  char * _51;
  long unsigned int _52;
  int _55;

  <bb 2> [100.00%]:
  _1 = (long int) end_13(D);
  _18 = this_15(D)->_inBuffCurrent;
  _2 = (long int) _18;
  _3 = _1 - _2;
  additionSize_17 = (int) _3;
  if (additionSize_17 <= 0)
    goto <bb 18>; [32.39%]
  else
    goto <bb 3>; [67.61%]

  <bb 3> [67.61%]:
  _16 = MEM[(const struct BZ2StreamScanner *)this_15(D)]._bz2HeaderFound;
  if (_16 != 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 17>; [67.00%]

  <bb 4> [22.31%]:
  _4 = this_15(D)->_outBuff.bufSize;
  _5 = (unsigned int) _3;
  _6 = _4 + _5;
  newSize_19 = (size_t) _6;
  _37 = this_15(D)->_outBuffCapacity;
  if (newSize_19 <= _37)
    goto <bb 15>; [46.00%]
  else
    goto <bb 5>; [54.00%]

  <bb 5> [12.05%]:
  _38 = this_15(D)->_outBuffCapacityHint;
  if (newSize_19 > _38)
    goto <bb 6>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 6> [6.02%]:
  _39 = newSize_19 * 11;
  _40 = _39 / 10;
  this_15(D)->_outBuffCapacityHint = _40;
  _41 = MEM[(const struct BZ2StreamScanner *)this_15(D)]._outBuffCapacityLimit;
  if (newSize_19 <= _41)
    goto <bb 7>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 7> [3.01%]:
  if (_40 > _41)
    goto <bb 8>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 8> [1.51%]:
  this_15(D)->_outBuffCapacityHint = _41;

  <bb 9> [12.05%]:
  _42 = this_15(D)->_outBuffCapacityHint;
  newBuff_43 = operator new [] (_42, &nothrow);
  if (newBuff_43 == 0B)
    goto <bb 10>; [0.43%]
  else
    goto <bb 11>; [99.57%]

  <bb 10> [0.05%]:
  _44 = this_15(D)->_outBuffCapacityHint;
  handle_error (1, -1, "pbzip2: *ERROR: Could not allocate memory (ensureOutBuffCapacity/%u)!Aborting...\n", _44);
  _45 = this_15(D)->_errState;
  _46 = _45 | 2;
  this_15(D)->_errState = _46;
  goto <bb 15>; [100.00%]

  <bb 11> [12.00%]:
  _47 = this_15(D)->_outBuff.buf;
  if (_47 != 0B)
    goto <bb 12>; [53.47%]
  else
    goto <bb 14>; [46.53%]

  <bb 12> [6.41%]:
  _48 = this_15(D)->_outBuff.bufSize;
  _49 = (long unsigned int) _48;
  __builtin_memcpy (newBuff_43, _47, _49);
  _51 = this_15(D)->_outBuff.buf;
  if (_51 != 0B)
    goto <bb 13>; [53.47%]
  else
    goto <bb 14>; [46.53%]

  <bb 13> [3.43%]:
  operator delete [] (_51);

  <bb 14> [12.00%]:
  _52 = this_15(D)->_outBuffCapacityHint;
  this_15(D)->_outBuff.buf = newBuff_43;
  this_15(D)->_outBuffCapacity = _52;
  this_15(D)->_outBuff.inSize = 0;

  <bb 15> [22.31%]:
  # _55 = PHI <0(4), -1(10), 0(14)>
  if (_55 != 0)
    goto <bb 18>; [3.98%]
  else
    goto <bb 16>; [96.02%]

  <bb 16> [21.42%]:
  _7 = (long unsigned int) additionSize_17;
  _29 = this_15(D)->_inBuffCurrent;
  _25 = this_15(D)->_outBuff.buf;
  _26 = this_15(D)->_outBuff.bufSize;
  _27 = (sizetype) _26;
  _28 = _25 + _27;
  __builtin_memcpy (_28, _29, _7);
  _8 = this_15(D)->_outBuff.bufSize;
  _9 = _5 + _8;
  this_15(D)->_outBuff.bufSize = _9;

  <bb 17> [66.72%]:
  this_15(D)->_inBuffCurrent = end_13(D);

  <bb 18> [100.00%]:
  # _10 = PHI <0(2), -1(15), additionSize_17(17)>
  return _10;

}



;; Function searchNextHeader (_ZN6pbzip216BZ2StreamScanner16searchNextHeaderEv, funcdef_no=95, decl_uid=4112, cgraph_uid=22, symbol_order=3099) (unlikely executed)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
;;
;; Loop 1
;;  header 5, latch 27
;;  depth 1, outer 0
;;  nodes: 5 27 24 16 18 20 22 23 21 19 17 9 10 15 13 14 11 12 8 7 6
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 6 25 }
;; 6 succs { 7 25 }
;; 7 succs { 8 25 }
;; 8 succs { 9 25 }
;; 9 succs { 16 10 }
;; 10 succs { 16 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 24 17 }
;; 17 succs { 18 19 }
;; 18 succs { 24 }
;; 19 succs { 20 21 }
;; 20 succs { 24 }
;; 21 succs { 22 23 }
;; 22 succs { 24 }
;; 23 succs { 24 }
;; 24 succs { 26 27 }
;; 25 succs { 28 29 }
;; 26 succs { 32 }
;; 27 succs { 5 }
;; 28 succs { 29 }
;; 29 succs { 30 31 }
;; 30 succs { 32 }
;; 31 succs { 32 }
;; 32 succs { 1 }
searchNextHeader (struct BZ2StreamScanner * const this)
{
  int tailSize;
  int D.5980;
  int bytesRead;
  int D.5971;
  CharType * _1;
  unsigned int _8;
  bool _9;
  bool _10;
  CharType * _11;
  long int _13;
  CharType * _14;
  CharType * _15;
  long int _19;
  unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  unsigned int _24;
  CharType * _25;
  unsigned int _26;
  CharType * _27;
  unsigned int _38;
  CharType * _39;
  long int _40;
  CharType * _41;
  long int _42;
  long int _43;
  long unsigned int _44;
  long unsigned int _45;
  unsigned int _46;
  unsigned int _47;
  long unsigned int _48;
  int _49;
  long int _50;
  CharType * _52;
  sizetype _53;
  CharType * _54;
  unsigned int _55;
  unsigned int _56;
  CharType * _58;
  long unsigned int _59;
  sizetype _60;
  CharType * _61;
  int _62;
  unsigned int _63;
  CharType * _64;
  CharType * _65;
  long int _66;
  CharType * _67;
  long int _68;
  long int _69;
  CharType * _71;
  long unsigned int _72;
  CharType * _73;
  sizetype _74;
  CharType * _75;

  <bb 2> [14.13%]:
  _15 = MEM[(const struct BZ2StreamScanner *)this_6(D)]._inBuffEnd;
  _13 = (long int) _15;
  _11 = MEM[(const struct BZ2StreamScanner *)this_6(D)]._inBuffSearchPtr;
  _19 = (long int) _11;
  if (_13 != _19)
    goto <bb 3>; [48.88%]
  else
    goto <bb 4>; [51.12%]

  <bb 3> [6.91%]:
  searchNextHeaderInBuff (this_6(D));

  <bb 4> [14.13%]:

  <bb 5> [100.00%]:
  _10 = MEM[(const struct BZ2StreamScanner *)this_6(D)]._searchStatus;
  if (_10 != 0)
    goto <bb 25>; [3.00%]
  else
    goto <bb 6>; [97.00%]

  <bb 6> [97.00%]:
  _9 = MEM[(const struct BZ2StreamScanner *)this_6(D)]._eof;
  if (_9 != 0)
    goto <bb 25>; [3.00%]
  else
    goto <bb 7>; [97.00%]

  <bb 7> [94.09%]:
  _8 = this_6(D)->_errState;
  if (_8 == 0)
    goto <bb 8>; [97.00%]
  else
    goto <bb 25>; [3.00%]

  <bb 8> [91.27%]:
  _21 = MEM[(const struct BZ2StreamScanner *)this_6(D)]._outBuff.bufSize;
  _22 = (long unsigned int) _21;
  _23 = MEM[(const struct BZ2StreamScanner *)this_6(D)]._outBuffCapacityLimit;
  if (_22 < _23)
    goto <bb 9>; [97.00%]
  else
    goto <bb 25>; [3.00%]

  <bb 9> [88.53%]:
  _58 = this_6(D)->_inBuffEnd;
  _59 = MEM[(const struct basic_string *)this_6(D) + 16B]._M_string_length;
  _60 = 1 - _59;
  _61 = _58 + _60;
  this_6(D)->_inBuffSearchPtr = _61;
  _62 = appendOutBuffData (this_6(D), _61);
  _63 = this_6(D)->_errState;
  if (_63 != 0)
    goto <bb 16>; [2.00%]
  else
    goto <bb 10>; [98.00%]

  <bb 10> [86.76%]:
  if (_62 < 0)
    goto <bb 16>; [1.13%]
  else
    goto <bb 11>; [98.87%]

  <bb 11> [85.78%]:
  if (_62 == 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [42.89%]:
  _64 = this_6(D)->_inBuffCurrent;
  this_6(D)->_inBuffSearchPtr = _64;

  <bb 13> [85.78%]:
  _65 = this_6(D)->_inBuffEnd;
  _66 = (long int) _65;
  _67 = this_6(D)->_inBuffSearchPtr;
  _68 = (long int) _67;
  _69 = _66 - _68;
  tailSize_70 = (int) _69;
  _71 = this_6(D)->_inBuff;
  if (_69 != 0)
    goto <bb 14>; [33.00%]
  else
    goto <bb 15>; [67.00%]

  <bb 14> [28.31%]:
  _72 = (long unsigned int) _69;
  __builtin_memmove (_71, _67, _72);

  <bb 15> [85.78%]:
  _73 = this_6(D)->_inBuff;
  _74 = (sizetype) tailSize_70;
  _75 = _73 + _74;
  this_6(D)->_inBuffEnd = _75;
  this_6(D)->_inBuffCurrent = _73;
  this_6(D)->_inBuffSearchPtr = _73;

  <bb 16> [88.53%]:
  _38 = this_6(D)->_errState;
  if (_38 != 0)
    goto <bb 24>; [2.00%]
  else
    goto <bb 17>; [98.00%]

  <bb 17> [86.76%]:
  _39 = MEM[(const struct BZ2StreamScanner *)this_6(D)]._inBuffEnd;
  _40 = (long int) _39;
  _41 = MEM[(const struct BZ2StreamScanner *)this_6(D)]._inBuff;
  _42 = (long int) _41;
  _43 = _40 - _42;
  _44 = (long unsigned int) _43;
  _45 = MEM[(const struct BZ2StreamScanner *)this_6(D)]._inBuffCapacity;
  if (_44 >= _45)
    goto <bb 18>; [2.00%]
  else
    goto <bb 19>; [98.00%]

  <bb 18> [1.74%]:
  handle_error (1, -1, "pbzip2: *ERROR: BZ2StreamScanner::readData not enough buffer free space! inBuffSize=%u, _inBuffCapacity=%u! Aborting...\n", _44, _45);
  _46 = this_6(D)->_errState;
  _47 = _46 | 8;
  this_6(D)->_errState = _47;
  goto <bb 24>; [100.00%]

  <bb 19> [85.02%]:
  _48 = _45 - _44;
  _49 = this_6(D)->_hInFile;
  _50 = do_read (_49, _39, _48);
  bytesRead_51 = (int) _50;
  if (bytesRead_51 > 0)
    goto <bb 20>; [60.23%]
  else
    goto <bb 21>; [39.77%]

  <bb 20> [51.21%]:
  _52 = this_6(D)->_inBuffEnd;
  _53 = (sizetype) bytesRead_51;
  _54 = _52 + _53;
  this_6(D)->_inBuffEnd = _54;
  goto <bb 24>; [100.00%]

  <bb 21> [33.81%]:
  if (bytesRead_51 < 0)
    goto <bb 22>; [19.09%]
  else
    goto <bb 23>; [80.91%]

  <bb 22> [6.46%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not read from input file [err=%d]! Aborting...\n", bytesRead_51);
  _55 = this_6(D)->_errState;
  _56 = _55 | 4;
  this_6(D)->_errState = _56;
  goto <bb 24>; [100.00%]

  <bb 23> [27.36%]:
  this_6(D)->_eof = 1;

  <bb 24> [88.53%]:
  _24 = this_6(D)->_errState;
  if (_24 != 0)
    goto <bb 26>; [3.00%]
  else
    goto <bb 27>; [97.00%]

  <bb 25> [11.47%]:
  if (_10 != 0)
    goto <bb 28>; [50.00%]
  else
    goto <bb 29>; [50.00%]

  <bb 26> [2.66%]:
  _25 = this_6(D)->_inBuffEnd;
  goto <bb 32>; [100.00%]

  <bb 27> [85.87%]:
  searchNextHeaderInBuff (this_6(D));
  goto <bb 5>; [100.00%]

  <bb 28> [5.74%]:
  this_6(D)->_bz2HeaderFound = 1;

  <bb 29> [11.47%]:
  _26 = this_6(D)->_errState;
  if (_26 != 0)
    goto <bb 30>; [46.00%]
  else
    goto <bb 31>; [54.00%]

  <bb 30> [5.28%]:
  _27 = this_6(D)->_inBuffEnd;
  this_6(D)->_inBuffSearchPtr = _27;
  goto <bb 32>; [100.00%]

  <bb 31> [6.19%]:
  _14 = this_6(D)->_inBuffSearchPtr;

  <bb 32> [14.13%]:
  # _1 = PHI <_25(26), _27(30), _14(31)>
  return _1;

}



;; Function getNextStream (_ZN6pbzip216BZ2StreamScanner13getNextStreamEv, funcdef_no=98, decl_uid=4109, cgraph_uid=17, symbol_order=3100) (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 40 }
;; 6 succs { 7 9 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 40 10 }
;; 10 succs { 11 12 }
;; 11 succs { 13 12 }
;; 12 succs { 16 14 }
;; 13 succs { 40 }
;; 14 succs { 15 19 }
;; 15 succs { 16 19 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 }
;; 19 succs { 40 20 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 31 23 }
;; 23 succs { 24 25 }
;; 24 succs { 28 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 28 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 31 }
;; 31 succs { 40 32 }
;; 32 succs { 33 34 }
;; 33 succs { 36 }
;; 34 succs { 35 36 }
;; 35 succs { 36 }
;; 36 succs { 37 38 }
;; 37 succs { 39 }
;; 38 succs { 39 }
;; 39 succs { 40 }
;; 40 succs { 1 }
getNextStream (struct BZ2StreamScanner * const this)
{
  const long unsigned int D.6010;
  unsigned char * const D.6009;
  unsigned char * const D.6008;
  size_t maxCapacity;
  int maxAddition;
  CharType * end1;
  CharType * end2;
  CharType * end;
  int D.6007;
  unsigned char * const D.5984;
  unsigned char * const D.5983;
  unsigned int _1;
  unsigned int _2;
  CharType * _3;
  unsigned char * _4;
  int _5;
  int _6;
  int _7;
  unsigned int _8;
  int _9;
  int _10;
  void * _21;
  unsigned int _24;
  long unsigned int _27;
  bool _29;
  bool _30;
  CharType * _32;
  bool _33;
  CharType * _35;
  CharType * _41;
  unsigned int _43;
  bool _44;
  unsigned int _50;
  unsigned int _60;
  CharType * _61;
  CharType * _62;
  CharType * _63;
  CharType * _64;
  long unsigned int _110;
  long unsigned int _111;
  unsigned int _114;
  unsigned int _115;
  unsigned int _116;
  bool _118;
  CharType * _119;
  CharType * _120;
  long unsigned int _121;
  sizetype _122;
  CharType * _123;
  CharType * _124;
  unsigned char * _126;
  CharType * _127;
  sizetype _128;
  CharType * _129;
  unsigned char * _130;

  <bb 2> [100.00%]:
  this_18(D)->_outBuff.buf = 0B;
  this_18(D)->_outBuff.bufSize = 0;
  this_18(D)->_outBuffCapacity = 0;
  this_18(D)->_outBuff.inSize = 0;
  _21 = operator new (40, &nothrow);
  if (_21 != 0B)
    goto <bb 3>; [70.00%]
  else
    goto <bb 4>; [30.00%]

  <bb 3> [70.00%]:
  MEM[(struct  &)_21] ={v} {CLOBBER};
  MEM[(struct outBuff *)_21].buf = 0B;
  MEM[(struct outBuff *)_21].bufSize = 0;
  MEM[(struct outBuff *)_21].blockNumber = 0;
  MEM[(struct outBuff *)_21].sequenceNumber = 0;
  MEM[(struct outBuff *)_21].inSize = 0;
  MEM[(struct outBuff *)_21].isLastInSequence = 1;
  MEM[(struct outBuff *)_21].next = 0B;

  <bb 4> [100.00%]:
  if (_21 == 0B)
    goto <bb 5>; [15.24%]
  else
    goto <bb 6>; [84.76%]

  <bb 5> [15.24%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not allocate memory (getNextStream/%u)!Aborting...\n", 40);
  _1 = this_18(D)->_errState;
  _2 = _1 | 2;
  this_18(D)->_errState = _2;
  goto <bb 40>; [100.00%]

  <bb 6> [84.76%]:
  MEM[(struct outBuff *)_21].buf = 0B;
  MEM[(struct outBuff *)_21].bufSize = 4294967295;
  _50 = this_18(D)->_errState;
  if (_50 == 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 7> [42.38%]:
  _44 = MEM[(const struct BZ2StreamScanner *)this_18(D)]._bz2HeaderFound;
  if (_44 != 0)
    goto <bb 9>; [67.00%]
  else
    goto <bb 8>; [33.00%]

  <bb 8> [13.99%]:
  this_18(D)->_searchStatus = 0;
  searchNextHeader (this_18(D));

  <bb 9> [84.76%]:
  _43 = this_18(D)->_errState;
  if (_43 != 0)
    goto <bb 40>; [46.00%]
  else
    goto <bb 10>; [54.00%]

  <bb 10> [45.77%]:
  _35 = this_18(D)->_inBuffCurrent;
  _41 = this_18(D)->_inBuffEnd;
  if (_35 == _41)
    goto <bb 11>; [30.00%]
  else
    goto <bb 12>; [70.00%]

  <bb 11> [13.73%]:
  _33 = MEM[(const struct BZ2StreamScanner *)this_18(D)]._eof;
  if (_33 != 0)
    goto <bb 13>; [46.00%]
  else
    goto <bb 12>; [54.00%]

  <bb 12> [39.45%]:
  _32 = this_18(D)->_inBuffSearchPtr;
  if (_32 == _35)
    goto <bb 16>; [30.00%]
  else
    goto <bb 14>; [70.00%]

  <bb 13> [6.32%]:
  MEM[(struct outBuff *)_21].bufSize = 0;
  goto <bb 40>; [100.00%]

  <bb 14> [27.62%]:
  _30 = MEM[(const struct BZ2StreamScanner *)this_18(D)]._searchStatus;
  if (_30 != 0)
    goto <bb 19>; [50.00%]
  else
    goto <bb 15>; [50.00%]

  <bb 15> [13.81%]:
  _29 = MEM[(const struct BZ2StreamScanner *)this_18(D)]._eof;
  if (_29 != 0)
    goto <bb 19>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 16> [18.74%]:
  D.5983 = _41;
  _27 = MEM[(const struct basic_string *)this_18(D) + 16B]._M_string_length;
  _3 = _32 + _27;
  D.5984 = _3;
  if (_3 > _41)
    goto <bb 17>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 17> [9.37%]:

  <bb 18> [18.74%]:
  # _4 = PHI <_41(17), _3(16)>
  this_18(D)->_inBuffSearchPtr = _4;
  D.5984 ={v} {CLOBBER};
  D.5983 ={v} {CLOBBER};
  this_18(D)->_searchStatus = 0;
  searchNextHeader (this_18(D));

  <bb 19> [39.45%]:
  _24 = this_18(D)->_errState;
  if (_24 != 0)
    goto <bb 40>; [63.36%]
  else
    goto <bb 20>; [36.64%]

  <bb 20> [14.46%]:
  _110 = MEM[(const struct BZ2StreamScanner *)this_18(D)]._outBuffCapacityLimit;
  D.6010 = _110;
  _111 = MEM[(const long unsigned int &)this_18(D) + 168];
  if (_110 < _111)
    goto <bb 21>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 21> [7.23%]:

  <bb 22> [14.46%]:
  # maxCapacity_113 = PHI <_111(21), _110(20)>
  D.6010 ={v} {CLOBBER};
  _114 = (unsigned int) maxCapacity_113;
  _115 = this_18(D)->_outBuff.bufSize;
  _116 = _114 - _115;
  maxAddition_117 = (int) _116;
  if (maxAddition_117 <= 0)
    goto <bb 31>; [32.39%]
  else
    goto <bb 23>; [67.61%]

  <bb 23> [9.77%]:
  _118 = MEM[(const struct BZ2StreamScanner *)this_18(D)]._eof;
  if (_118 != 0)
    goto <bb 24>; [50.00%]
  else
    goto <bb 25>; [50.00%]

  <bb 24> [4.89%]:
  _119 = this_18(D)->_inBuffEnd;
  end1 = _119;
  goto <bb 28>; [100.00%]

  <bb 25> [4.89%]:
  _120 = this_18(D)->_inBuffEnd;
  _121 = MEM[(const struct basic_string *)this_18(D) + 16B]._M_string_length;
  _122 = 1 - _121;
  _123 = _120 + _122;
  D.6009 = _123;
  _124 = this_18(D)->_inBuffSearchPtr;
  D.6008 = _124;
  if (_123 < _124)
    goto <bb 26>; [50.00%]
  else
    goto <bb 27>; [50.00%]

  <bb 26> [2.45%]:

  <bb 27> [4.89%]:
  # _126 = PHI <_123(26), _124(25)>
  end1 = _126;
  D.6008 ={v} {CLOBBER};
  D.6009 ={v} {CLOBBER};

  <bb 28> [9.77%]:
  _127 = this_18(D)->_inBuffCurrent;
  _128 = (sizetype) maxAddition_117;
  _129 = _127 + _128;
  end2 = _129;
  _130 = MEM[(unsigned char * const &)&end1];
  if (_129 < _130)
    goto <bb 29>; [50.00%]
  else
    goto <bb 30>; [50.00%]

  <bb 29> [4.89%]:

  <bb 30> [9.77%]:
  # end_132 = PHI <_129(29), _130(28)>
  appendOutBuffData (this_18(D), end_132);

  <bb 31> [14.46%]:
  end1 ={v} {CLOBBER};
  end2 ={v} {CLOBBER};
  _60 = this_18(D)->_errState;
  if (_60 != 0)
    goto <bb 40>; [46.00%]
  else
    goto <bb 32>; [54.00%]

  <bb 32> [7.81%]:
  _5 = this_18(D)->_outSequenceNumber;
  if (_5 > 0)
    goto <bb 33>; [64.00%]
  else
    goto <bb 34>; [36.00%]

  <bb 33> [5.00%]:
  _6 = _5 + 1;
  this_18(D)->_outSequenceNumber = _6;
  goto <bb 36>; [100.00%]

  <bb 34> [2.81%]:
  _62 = this_18(D)->_inBuffCurrent;
  _61 = this_18(D)->_inBuffSearchPtr;
  if (_61 != _62)
    goto <bb 35>; [70.00%]
  else
    goto <bb 36>; [30.00%]

  <bb 35> [1.97%]:
  this_18(D)->_outSequenceNumber = 1;

  <bb 36> [7.81%]:
  _7 = this_18(D)->_outSequenceNumber;
  this_18(D)->_outBuff.sequenceNumber = _7;
  _8 = this_18(D)->_outBuff.bufSize;
  this_18(D)->_outBuff.inSize = _8;
  _9 = this_18(D)->_streamNumber;
  this_18(D)->_outBuff.blockNumber = _9;
  _64 = this_18(D)->_inBuffCurrent;
  _63 = this_18(D)->_inBuffSearchPtr;
  if (_63 == _64)
    goto <bb 37>; [30.00%]
  else
    goto <bb 38>; [70.00%]

  <bb 37> [2.34%]:
  this_18(D)->_outBuff.isLastInSequence = 1;
  this_18(D)->_outSequenceNumber = 0;
  _10 = _9 + 1;
  this_18(D)->_streamNumber = _10;
  goto <bb 39>; [100.00%]

  <bb 38> [5.46%]:
  this_18(D)->_outBuff.isLastInSequence = 0;

  <bb 39> [7.81%]:
  MEM[(struct outBuff *)_21] = this_18(D)->_outBuff;
  this_18(D)->_outBuff.buf = 0B;
  this_18(D)->_outBuff.bufSize = 0;
  this_18(D)->_outBuffCapacity = 0;
  this_18(D)->_outBuff.inSize = 0;

  <bb 40> [100.00%]:
  return _21;

}



;; Function outputBufferAdd (_Z15outputBufferAddRK7outBuffPKc, funcdef_no=20, decl_uid=4294, cgraph_uid=128, symbol_order=785)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 26 16 17 18 19 20 21 22 23 24 25
;;
;; Loop 1
;;  header 5, latch 26
;;  depth 1, outer 0
;;  nodes: 5 26 15 12 13 10 8 6
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 }
;; 5 succs { 17 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 9 10 }
;; 9 succs { }
;; 10 succs { 11 12 }
;; 11 succs { 25 }
;; 12 succs { 13 15 }
;; 13 succs { 14 15 }
;; 14 succs { 25 }
;; 15 succs { 16 26 }
;; 26 succs { 5 }
;; 16 succs { }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 22 }
;; 20 succs { 21 22 }
;; 21 succs { }
;; 22 succs { 23 24 }
;; 23 succs { }
;; 24 succs { 25 }
;; 25 succs { 1 }
outputBufferAdd (const struct outBuff & element, const char * caller)
{
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  size_t outBuffPos;
  int ret;
  int dist;
  union pthread_mutex_t * _1;
  int _2;
  unsigned int _3;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _7;
  union pthread_mutex_t * _8;
  int _9;
  int _10;
  union pthread_mutex_t * _11;
  union pthread_mutex_t * _12;
  union pthread_cond_t * _13;
  int _14;
  int _15;
  int _16;
  int _17;
  union pthread_mutex_t * _18;
  struct outBuff * _19;
  long unsigned int _30;
  struct outBuff * _31;
  struct value_type & _37;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _43;
  struct outBuff * _46;
  struct value_type & _47;
  struct FILE * _63;
  struct FILE * _65;
  struct FILE * _67;
  int _68;
  struct FILE * _69;
  struct FILE * _71;
  struct FILE * _73;

  <bb 2> [13.46%]:
  _1 = OutMutex;
  ret_62 = pthread_mutex_lock (_1);
  if (ret_62 != 0)
    goto <bb 3>; [0.04%]
  else
    goto <bb 4>; [99.96%]

  <bb 3> [0.01%]:
  _63 = stderr;
  __fprintf_chk (_63, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_62);
  cleanupAndQuit (-5);

  <bb 4> [13.45%]:
  _2 = element_25(D)->blockNumber;
  _3 = (unsigned int) _2;
  _4 = NumBufferedBlocksMax;
  _5 = (unsigned int) _4;
  _6 = _3 - _5;
  dist_26 = (int) _6;

  <bb 5> [100.00%]:
  _7 = NextBlockToWrite;
  if (_7 > dist_26)
    goto <bb 17>; [5.00%]
  else
    goto <bb 6>; [95.00%]

  <bb 6> [95.00%]:
  ret_66 = pthread_mutex_lock (&TerminateFlagMutex);
  if (ret_66 != 0)
    goto <bb 7>; [0.04%]
  else
    goto <bb 8>; [99.96%]

  <bb 7> [0.04%]:
  _67 = stderr;
  __fprintf_chk (_67, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_66);
  cleanupAndQuit (-5);

  <bb 8> [94.96%]:
  ret_36 = terminateFlag;
  ret_64 = pthread_mutex_unlock (&TerminateFlagMutex);
  if (ret_64 != 0)
    goto <bb 9>; [0.04%]
  else
    goto <bb 10>; [99.96%]

  <bb 9> [0.04%]:
  _65 = stderr;
  __fprintf_chk (_65, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_64);
  cleanupAndQuit (-6);

  <bb 10> [94.92%]:
  if (ret_36 != 0)
    goto <bb 11>; [5.00%]
  else
    goto <bb 12>; [95.00%]

  <bb 11> [4.75%]:
  _8 = OutMutex;
  pthread_mutex_unlock (_8);
  goto <bb 25>; [100.00%]

  <bb 12> [90.18%]:
  _9 = LastGoodBlock;
  if (_9 != -1)
    goto <bb 13>; [79.76%]
  else
    goto <bb 15>; [20.24%]

  <bb 13> [71.93%]:
  _10 = element_25(D)->blockNumber;
  if (_9 < _10)
    goto <bb 14>; [5.00%]
  else
    goto <bb 15>; [95.00%]

  <bb 14> [3.60%]:
  _11 = OutMutex;
  pthread_mutex_unlock (_11);
  goto <bb 25>; [100.00%]

  <bb 15> [86.58%]:
  _12 = OutMutex;
  _13 = notTooMuchNumBuffered;
  _68 = pthread_cond_wait (_13, _12);
  if (_68 != 0)
    goto <bb 16>; [0.04%]
  else
    goto <bb 26>; [99.96%]

  <bb 26> [86.55%]:
  goto <bb 5>; [100.00%]

  <bb 16> [0.03%]:
  _69 = stderr;
  __fprintf_chk (_69, 1, "pthread_cond_wait error [%d]! Aborting immediately!\n", _68);
  pthread_mutex_unlock (_12);
  cleanupAndQuit (-8);

  <bb 17> [5.00%]:
  _14 = element_25(D)->blockNumber;
  _38 = (long unsigned int) _14;
  _39 = OutBufferPosToWrite;
  _40 = _38 + _39;
  _41 = (long unsigned int) _7;
  outBuffPos_42 = _40 - _41;
  _43 = NumBufferedBlocksMax;
  if (outBuffPos_42 >= _43)
    goto <bb 18>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 18> [2.50%]:
  outBuffPos_44 = outBuffPos_42 - _43;

  <bb 19> [5.00%]:
  # outBuffPos_45 = PHI <outBuffPos_42(17), outBuffPos_44(18)>
  _31 = OutputBuffer.D.4140._M_impl._M_start;
  _30 = outBuffPos_45 * 40;
  _37 = _31 + _30;
  *_37 = MEM[(const struct outBuff &)element_25(D)];
  _15 = NumBufferedBlocks;
  _16 = _15 + 1;
  NumBufferedBlocks = _16;
  _17 = element_25(D)->blockNumber;
  if (_7 == _17)
    goto <bb 20>; [20.24%]
  else
    goto <bb 22>; [79.76%]

  <bb 20> [1.01%]:
  ret_70 = pthread_cond_signal (&OutBufferHeadNotEmpty);
  if (ret_70 != 0)
    goto <bb 21>; [0.04%]
  else
    goto <bb 22>; [99.96%]

  <bb 21> [0.00%]:
  _71 = stderr;
  __fprintf_chk (_71, 1, "pthread_cond_signal error [%d]! Aborting immediately!\n", ret_70);
  cleanupAndQuit (-7);

  <bb 22> [5.00%]:
  _18 = OutMutex;
  ret_72 = pthread_mutex_unlock (_18);
  if (ret_72 != 0)
    goto <bb 23>; [0.04%]
  else
    goto <bb 24>; [99.96%]

  <bb 23> [0.00%]:
  _73 = stderr;
  __fprintf_chk (_73, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_72);
  cleanupAndQuit (-6);

  <bb 24> [5.00%]:
  _46 = OutputBuffer.D.4140._M_impl._M_start;
  _47 = _46 + _30;

  <bb 25> [13.34%]:
  # _19 = PHI <0B(11), 0B(14), _47(24)>
  return _19;

}



;; Function signalHandlerProc (signalHandlerProc, funcdef_no=27, decl_uid=4285, cgraph_uid=119, symbol_order=766)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;; 2 succs { 3 4 }
;; 3 succs { 18 }
;; 4 succs { 18 5 }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 8 9 }
;; 8 succs { }
;; 9 succs { 10 11 }
;; 10 succs { }
;; 11 succs { 12 13 }
;; 12 succs { }
;; 13 succs { 14 18 }
;; 14 succs { 15 16 }
;; 15 succs { }
;; 16 succs { 17 18 }
;; 17 succs { }
;; 18 succs { 1 }
signalHandlerProc (void * arg)
{
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int signalCaught;
  struct FILE * _1;
  int _2;
  struct FILE * _4;
  int _8;
  union pthread_mutex_t * _16;
  union pthread_cond_t * _17;
  union pthread_mutex_t * _18;
  struct queue * _19;
  union pthread_mutex_t * _20;
  struct queue * _21;
  union pthread_cond_t * _22;
  struct queue * _23;
  union pthread_cond_t * _24;
  struct queue * _25;
  union pthread_mutex_t * _26;
  struct FILE * _28;
  struct FILE * _30;
  struct FILE * _32;
  struct FILE * _34;
  struct FILE * _36;
  struct FILE * _38;

  <bb 2> [100.00%]:
  _8 = sigwait (&SignalMask, &signalCaught);
  if (_8 != 0)
    goto <bb 3>; [29.56%]
  else
    goto <bb 4>; [70.44%]

  <bb 3> [29.56%]:
  _1 = stderr;
  __fprintf_chk (_1, 1, "\n *signalHandlerProc - sigwait error: %d\n", _8);
  goto <bb 18>; [100.00%]

  <bb 4> [70.44%]:
  _2 = signalCaught;
  if (_2 == 10)
    goto <bb 18>; [47.11%]
  else
    goto <bb 5>; [52.89%]

  <bb 5> [37.26%]:
  _4 = stderr;
  __fprintf_chk (_4, 1, "\n *Control-C or similar caught [sig=%d], quitting...\n", _2);
  ret_27 = pthread_mutex_lock (&TerminateFlagMutex);
  if (ret_27 != 0)
    goto <bb 6>; [0.04%]
  else
    goto <bb 7>; [99.96%]

  <bb 6> [0.01%]:
  _28 = stderr;
  __fprintf_chk (_28, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_27);
  cleanupAndQuit (-5);

  <bb 7> [37.24%]:
  terminateFlag = 1;
  pthread_cond_signal (&TerminateCond);
  ret_33 = pthread_mutex_unlock (&TerminateFlagMutex);
  if (ret_33 != 0)
    goto <bb 8>; [0.04%]
  else
    goto <bb 9>; [99.96%]

  <bb 8> [0.01%]:
  _34 = stderr;
  __fprintf_chk (_34, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_33);
  cleanupAndQuit (-6);

  <bb 9> [37.23%]:
  _16 = OutMutex;
  ret_31 = pthread_mutex_lock (_16);
  if (ret_31 != 0)
    goto <bb 10>; [0.04%]
  else
    goto <bb 11>; [99.96%]

  <bb 10> [0.01%]:
  _32 = stderr;
  __fprintf_chk (_32, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_31);
  cleanupAndQuit (-5);

  <bb 11> [37.21%]:
  _17 = notTooMuchNumBuffered;
  pthread_cond_broadcast (_17);
  _18 = OutMutex;
  ret_29 = pthread_mutex_unlock (_18);
  if (ret_29 != 0)
    goto <bb 12>; [0.04%]
  else
    goto <bb 13>; [99.96%]

  <bb 12> [0.01%]:
  _30 = stderr;
  __fprintf_chk (_30, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_29);
  cleanupAndQuit (-6);

  <bb 13> [37.20%]:
  _19 = FifoQueue;
  if (_19 != 0B)
    goto <bb 14>; [53.47%]
  else
    goto <bb 18>; [46.53%]

  <bb 14> [19.89%]:
  _20 = _19->mut;
  ret_37 = pthread_mutex_lock (_20);
  if (ret_37 != 0)
    goto <bb 15>; [0.04%]
  else
    goto <bb 16>; [99.96%]

  <bb 15> [0.01%]:
  _38 = stderr;
  __fprintf_chk (_38, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_37);
  cleanupAndQuit (-5);

  <bb 16> [19.88%]:
  _21 = FifoQueue;
  _22 = _21->notFull;
  pthread_cond_broadcast (_22);
  _23 = FifoQueue;
  _24 = _23->notEmpty;
  pthread_cond_broadcast (_24);
  _25 = FifoQueue;
  _26 = _25->mut;
  ret_35 = pthread_mutex_unlock (_26);
  if (ret_35 != 0)
    goto <bb 17>; [0.04%]
  else
    goto <bb 18>; [99.96%]

  <bb 17> [0.01%]:
  _36 = stderr;
  __fprintf_chk (_36, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_35);
  cleanupAndQuit (-6);

  <bb 18> [99.92%]:
  signalCaught ={v} {CLOBBER};
  return 0B;

}



;; Function terminatorThreadProc (terminatorThreadProc, funcdef_no=28, decl_uid=4283, cgraph_uid=117, symbol_order=765)

Created preheader block for loop 1
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 10 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 4, latch 6
;;  depth 1, outer 0
;;  nodes: 4 6 5
;; 2 succs { 3 10 }
;; 10 succs { 4 }
;; 3 succs { }
;; 4 succs { 7 5 }
;; 5 succs { 7 6 }
;; 6 succs { 4 }
;; 7 succs { 8 9 }
;; 8 succs { 1 }
;; 9 succs { }
terminatorThreadProc (void * arg)
{
  int ret;
  int * _1;
  int _2;
  struct FILE * _3;
  struct FILE * _4;
  int _5;
  int _6;
  struct FILE * _7;

  <bb 2> [14.44%]:
  ret_11 = pthread_mutex_lock (&TerminateFlagMutex);
  if (ret_11 != 0)
    goto <bb 3>; [0.04%]
  else
    goto <bb 10>; [99.96%]

  <bb 10> [14.43%]:
  goto <bb 4>; [100.00%]

  <bb 3> [0.01%]:
  _1 = __errno_location ();
  _2 = *_1;
  _3 = stderr;
  syncPrintErrnoMsg (_3, _2);
  _4 = stderr;
  __fprintf_chk (_4, 1, "Terminator thread: pthread_mutex_lock error [%d]! Aborting...\n", ret_11);
  syncSetTerminateFlag (1);
  cleanupAndQuit (1);

  <bb 4> [100.00%]:
  _5 = finishedFlag;
  if (_5 != 0)
    goto <bb 7>; [7.50%]
  else
    goto <bb 5>; [92.50%]

  <bb 5> [92.50%]:
  _6 = terminateFlag;
  if (_6 != 0)
    goto <bb 7>; [7.50%]
  else
    goto <bb 6>; [92.50%]

  <bb 6> [85.56%]:
  pthread_cond_wait (&TerminateCond, &TerminateFlagMutex);
  goto <bb 4>; [100.00%]

  <bb 7> [14.44%]:
  if (_5 != 0)
    goto <bb 8>; [99.96%]
  else
    goto <bb 9>; [0.04%]

  <bb 8> [14.43%]:
  pthread_mutex_unlock (&TerminateFlagMutex);
  return 0B;

  <bb 9> [0.01%]:
  pthread_mutex_unlock (&TerminateFlagMutex);
  _7 = stderr;
  __builtin_fwrite ("Terminator thread: premature exit requested - quitting...\n", 1, 58, _7);
  cleanupAndQuit (1);

}



;; Function safe_cond_broadcast (_Z19safe_cond_broadcastP14pthread_cond_t, funcdef_no=29, decl_uid=4250, cgraph_uid=73, symbol_order=731) (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
safe_cond_broadcast (union pthread_cond_t * cond)
{
  int ret;
  struct FILE * _1;

  <bb 2> [100.00%]:
  ret_5 = pthread_cond_broadcast (cond_3(D));
  if (ret_5 != 0)
    goto <bb 3>; [0.04%]
  else
    goto <bb 4>; [99.96%]

  <bb 3> [0.04%]:
  _1 = stderr;
  __fprintf_chk (_1, 1, "pthread_cond_broadcast error [%d]! Aborting immediately!\n", ret_5);
  cleanupAndQuit (-7);

  <bb 4> [99.96%]:
  return;

}



;; Function safe_mutex_unlock (_Z17safe_mutex_unlockP15pthread_mutex_t, funcdef_no=10, decl_uid=4245, cgraph_uid=55, symbol_order=729)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
safe_mutex_unlock (union pthread_mutex_t * mutex)
{
  int ret;
  struct FILE * _1;

  <bb 2> [100.00%]:
  ret_5 = pthread_mutex_unlock (mutex_3(D));
  if (ret_5 != 0)
    goto <bb 3>; [0.04%]
  else
    goto <bb 4>; [99.96%]

  <bb 3> [0.04%]:
  _1 = stderr;
  __fprintf_chk (_1, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_5);
  cleanupAndQuit (-6);

  <bb 4> [99.96%]:
  return;

}



;; Function safe_mutex_lock (_Z15safe_mutex_lockP15pthread_mutex_t, funcdef_no=9, decl_uid=4244, cgraph_uid=53, symbol_order=728)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
safe_mutex_lock (union pthread_mutex_t * mutex)
{
  int ret;
  struct FILE * _1;

  <bb 2> [100.00%]:
  ret_5 = pthread_mutex_lock (mutex_3(D));
  if (ret_5 != 0)
    goto <bb 3>; [0.04%]
  else
    goto <bb 4>; [99.96%]

  <bb 3> [0.04%]:
  _1 = stderr;
  __fprintf_chk (_1, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_5);
  cleanupAndQuit (-5);

  <bb 4> [99.96%]:
  return;

}



;; Function producerDecompressCheckInterrupt (_Z32producerDecompressCheckInterruptiRP7outBuffi, funcdef_no=18, decl_uid=4316, cgraph_uid=203, symbol_order=768) (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 6 5 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
producerDecompressCheckInterrupt (int hInfile, struct outBuff * & fileData, int lastBlock)
{
  int ret;
  int D.5021;
  int ret;
  bool isInterrupted;
  int _2;
  struct outBuff * _11;
  union pthread_mutex_t * _20;
  union pthread_mutex_t * _22;

  <bb 2> [100.00%]:
  _20 = OutMutex;
  safe_mutex_lock (_20);
  ret_21 = LastGoodBlock;
  _22 = OutMutex;
  safe_mutex_unlock (_22);
  if (ret_21 != -1)
    goto <bb 3>; [66.00%]
  else
    goto <bb 4>; [34.00%]

  <bb 3> [66.00%]:

  <bb 4> [100.00%]:
  # isInterrupted_1 = PHI <0(2), 1(3)>
  safe_mutex_lock (&TerminateFlagMutex);
  ret_10 = terminateFlag;
  safe_mutex_unlock (&TerminateFlagMutex);
  if (ret_10 != 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 5>; [67.00%]

  <bb 5> [67.00%]:
  if (isInterrupted_1 != 0)
    goto <bb 6>; [54.00%]
  else
    goto <bb 8>; [46.00%]

  <bb 6> [69.18%]:
  close (hInfile_7(D));
  _11 = MEM[(struct outBuff * &)fileData_9(D)];
  if (_11 != 0B)
    goto <bb 7>; [57.44%]
  else
    goto <bb 8>; [42.56%]

  <bb 7> [39.74%]:
  operator delete (_11, 40);
  MEM[(struct outBuff * &)fileData_9(D)] = 0B;

  <bb 8> [100.00%]:
  # _2 = PHI <0(5), 1(6), 1(7)>
  return _2;

}



;; Function syncSetProducerDone (_Z19syncSetProducerDonei, funcdef_no=35, decl_uid=4243, cgraph_uid=51, symbol_order=745) (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 6 }
;; 5 succs { }
;; 6 succs { 1 }
syncSetProducerDone (int newValue)
{
  int ret;
  int ret;
  union pthread_mutex_t * _1;
  union pthread_mutex_t * _2;
  struct FILE * _11;
  struct FILE * _13;

  <bb 2> [100.00%]:
  _1 = ProducerDoneMutex;
  ret_12 = pthread_mutex_lock (_1);
  if (ret_12 != 0)
    goto <bb 3>; [0.04%]
  else
    goto <bb 4>; [99.96%]

  <bb 3> [0.04%]:
  _13 = stderr;
  __fprintf_chk (_13, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_12);
  cleanupAndQuit (-5);

  <bb 4> [99.96%]:
  producerDone = newValue_5(D);
  _2 = ProducerDoneMutex;
  ret_10 = pthread_mutex_unlock (_2);
  if (ret_10 != 0)
    goto <bb 5>; [0.04%]
  else
    goto <bb 6>; [99.96%]

  <bb 5> [0.04%]:
  _11 = stderr;
  __fprintf_chk (_11, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_10);
  cleanupAndQuit (-6);

  <bb 6> [99.92%]:
  return;

}



;; Function consumer (consumer, funcdef_no=37, decl_uid=4175, cgraph_uid=46, symbol_order=777)

Created preheader block for loop 2
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 67 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 68 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
;;
;; Loop 1
;;  header 3, latch 64
;;  depth 1, outer 0
;;  nodes: 3 64 63 62 60 61 58 57 55 52 27 26 16 17 25 23 24 22 20 21 18 19 14 15 13 67 68 49 48 30 44 41 38 37 34 31 10 9 6
;;
;; Loop 2
;;  header 13, latch 68
;;  depth 2, outer 1
;;  nodes: 13 68 49 48 30 44 41 38 37 34 31 26 16 17 25 23 24 22 20 21 18 19 14 15
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 66 }
;; 5 succs { 66 }
;; 6 succs { 7 9 }
;; 7 succs { 8 66 }
;; 8 succs { 66 }
;; 9 succs { 65 10 }
;; 10 succs { 11 67 }
;; 11 succs { 12 66 }
;; 12 succs { 66 }
;; 67 succs { 13 }
;; 13 succs { 14 30 }
;; 14 succs { 15 17 }
;; 15 succs { 16 17 }
;; 16 succs { 23 26 }
;; 17 succs { 26 18 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 }
;; 26 succs { 27 30 }
;; 27 succs { 28 52 }
;; 28 succs { 29 66 }
;; 29 succs { 66 }
;; 30 succs { 31 48 }
;; 31 succs { 32 34 }
;; 32 succs { 33 66 }
;; 33 succs { 66 }
;; 34 succs { 35 37 }
;; 35 succs { 36 66 }
;; 36 succs { 66 }
;; 37 succs { 45 38 }
;; 38 succs { 39 41 }
;; 39 succs { 40 66 }
;; 40 succs { 66 }
;; 41 succs { 42 44 }
;; 42 succs { 43 66 }
;; 43 succs { 66 }
;; 44 succs { 45 48 }
;; 45 succs { 46 65 }
;; 46 succs { 47 66 }
;; 47 succs { 66 }
;; 48 succs { 49 66 }
;; 49 succs { 50 68 }
;; 68 succs { 13 }
;; 50 succs { 51 66 }
;; 51 succs { 66 }
;; 52 succs { 53 55 }
;; 53 succs { 54 66 }
;; 54 succs { 66 }
;; 55 succs { 56 57 }
;; 56 succs { 66 65 }
;; 57 succs { 66 58 }
;; 58 succs { 59 60 }
;; 59 succs { 66 65 }
;; 60 succs { 61 62 }
;; 61 succs { 62 }
;; 62 succs { 66 63 }
;; 63 succs { 65 64 }
;; 64 succs { 3 }
;; 65 succs { 1 }
;; 66 succs { }
consumer (void * q)
{
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int D.5159;
  int ret;
  struct ElementType * & headElem;
  int D.5152;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  struct outBuff outBlock;
  unsigned int outSize;
  char * CompressedData;
  struct outBuff * fileData;
  union pthread_mutex_t * _1;
  int _2;
  int _4;
  union pthread_mutex_t * _5;
  union pthread_mutex_t * _6;
  union pthread_cond_t * _7;
  union pthread_cond_t * _8;
  union pthread_mutex_t * _9;
  unsigned int _11;
  double _12;
  double _13;
  double _14;
  unsigned int _15;
  int _17;
  unsigned int _19;
  char * _20;
  unsigned int _23;
  int _24;
  unsigned int _25;
  sizetype _47;
  int _51;
  struct outBuff * _53;
  char * _67;
  struct FILE * _116;
  struct FILE * _118;
  struct FILE * _120;
  struct ElementType * * _121;
  long int _122;
  long unsigned int _123;
  long unsigned int _124;
  bool _127;
  struct outBuff * _128;
  int _129;
  struct ElementType * _130;
  long int _132;
  long int _133;
  long int _134;
  long int _135;
  long int _136;
  long int _137;
  int _138;
  struct FILE * _140;
  union pthread_mutex_t * _141;
  union pthread_mutex_t * _143;
  struct FILE * _145;
  struct FILE * _147;
  struct FILE * _149;
  struct FILE * _151;
  struct FILE * _153;
  int _154;
  struct FILE * _155;
  struct FILE * _157;

  <bb 2> [5.20%]:
  outSize = 0;

  <bb 3> [6.73%]:
  ret_115 = pthread_mutex_lock (&TerminateFlagMutex);
  if (ret_115 != 0)
    goto <bb 4>; [0.04%]
  else
    goto <bb 6>; [99.96%]

  <bb 4> [0.00%]:
  _116 = stderr;
  __fprintf_chk (_116, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_115);

  <bb 5> [0.00%]:
  cleanupAndQuit (-5);

  <bb 6> [6.73%]:
  ret_65 = terminateFlag;
  ret_117 = pthread_mutex_unlock (&TerminateFlagMutex);
  if (ret_117 != 0)
    goto <bb 7>; [0.04%]
  else
    goto <bb 9>; [99.96%]

  <bb 7> [0.00%]:
  _118 = stderr;
  __fprintf_chk (_118, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_117);

  <bb 8> [0.00%]:
  cleanupAndQuit (-6);

  <bb 9> [6.72%]:
  if (ret_65 != 0)
    goto <bb 65>; [2.50%]
  else
    goto <bb 10>; [97.50%]

  <bb 10> [6.56%]:
  _1 = MEM[(struct queue *)q_37(D)].mut;
  ret_119 = pthread_mutex_lock (_1);
  if (ret_119 != 0)
    goto <bb 11>; [0.04%]
  else
    goto <bb 67>; [99.96%]

  <bb 11> [0.00%]:
  _120 = stderr;
  __fprintf_chk (_120, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_119);

  <bb 12> [0.00%]:
  cleanupAndQuit (-5);

  <bb 67> [6.56%]:

  <bb 13> [100.00%]:
  # fileData_209 = PHI <0B(67), fileData_212(68)>
  _2 = MEM[(struct queue *)q_37(D)].empty;
  if (_2 == 0)
    goto <bb 14>; [33.00%]
  else
    goto <bb 30>; [67.00%]

  <bb 14> [33.00%]:
  _121 = MEM[(struct queue *)q_37(D)].qData;
  _122 = MEM[(struct queue *)q_37(D)].head;
  _123 = (long unsigned int) _122;
  _124 = _123 * 8;
  headElem_125 = _121 + _124;
  if (fileData_209 != 0B)
    goto <bb 15>; [70.00%]
  else
    goto <bb 17>; [30.00%]

  <bb 15> [23.10%]:
  _127 = MEM[(struct ElementType *)fileData_209].isLastInSequence;
  if (_127 != 0)
    goto <bb 17>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 16> [11.55%]:
  _128 = MEM[(struct ElementType *)fileData_209].next;
  if (_128 != 0B)
    goto <bb 23>; [73.26%]
  else
    goto <bb 26>; [26.74%]

  <bb 17> [21.45%]:
  _129 = MEM[(struct queue *)q_37(D)].topLevelEmpty;
  if (_129 != 0)
    goto <bb 26>; [46.00%]
  else
    goto <bb 18>; [54.00%]

  <bb 18> [11.58%]:
  _130 = *headElem_125;
  _132 = _122 + 1;
  MEM[(struct queue *)q_37(D)].head = _132;
  _133 = MEM[(struct queue *)q_37(D)].size;
  if (_132 == _133)
    goto <bb 19>; [34.00%]
  else
    goto <bb 20>; [66.00%]

  <bb 19> [3.94%]:
  MEM[(struct queue *)q_37(D)].head = 0;

  <bb 20> [11.58%]:
  _134 = MEM[(struct queue *)q_37(D)].head;
  _135 = MEM[(struct queue *)q_37(D)].tail;
  if (_134 == _135)
    goto <bb 21>; [34.00%]
  else
    goto <bb 22>; [66.00%]

  <bb 21> [3.94%]:
  MEM[(struct queue *)q_37(D)].topLevelEmpty = 1;

  <bb 22> [11.58%]:
  MEM[(struct queue *)q_37(D)].topLevelFull = 0;

  <bb 23> [20.04%]:
  # fileData_210 = PHI <_128(16), _130(22)>
  _136 = MEM[(struct queue *)q_37(D)].count;
  _137 = _136 + -1;
  MEM[(struct queue *)q_37(D)].count = _137;
  if (_137 == 0)
    goto <bb 24>; [50.00%]
  else
    goto <bb 25>; [50.00%]

  <bb 24> [10.02%]:
  MEM[(struct queue *)q_37(D)].empty = 1;

  <bb 25> [20.04%]:
  MEM[(struct queue *)q_37(D)].full = 0;

  <bb 26> [33.00%]:
  # _138 = PHI <0(16), 0(17), 1(25)>
  # fileData_211 = PHI <fileData_209(16), fileData_209(17), fileData_210(25)>
  if (_138 == 1)
    goto <bb 27>; [5.00%]
  else
    goto <bb 30>; [95.00%]

  <bb 27> [1.65%]:
  _8 = MEM[(struct queue *)q_37(D)].notFull;
  ret_139 = pthread_cond_signal (_8);
  if (ret_139 != 0)
    goto <bb 28>; [0.04%]
  else
    goto <bb 52>; [99.96%]

  <bb 28> [0.00%]:
  _140 = stderr;
  __fprintf_chk (_140, 1, "pthread_cond_signal error [%d]! Aborting immediately!\n", ret_139);

  <bb 29> [0.00%]:
  cleanupAndQuit (-7);

  <bb 30> [98.35%]:
  # fileData_212 = PHI <fileData_209(13), fileData_211(26)>
  _4 = MEM[(struct queue *)q_37(D)].empty;
  if (_4 != 0)
    goto <bb 31>; [50.00%]
  else
    goto <bb 48>; [50.00%]

  <bb 31> [49.17%]:
  _141 = ProducerDoneMutex;
  ret_144 = pthread_mutex_lock (_141);
  if (ret_144 != 0)
    goto <bb 32>; [0.04%]
  else
    goto <bb 34>; [99.96%]

  <bb 32> [0.02%]:
  _145 = stderr;
  __fprintf_chk (_145, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_144);

  <bb 33> [0.02%]:
  cleanupAndQuit (-5);

  <bb 34> [49.16%]:
  ret_142 = producerDone;
  _143 = ProducerDoneMutex;
  ret_146 = pthread_mutex_unlock (_143);
  if (ret_146 != 0)
    goto <bb 35>; [0.04%]
  else
    goto <bb 37>; [99.96%]

  <bb 35> [0.02%]:
  _147 = stderr;
  __fprintf_chk (_147, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_146);

  <bb 36> [0.02%]:
  cleanupAndQuit (-6);

  <bb 37> [49.14%]:
  if (ret_142 == 1)
    goto <bb 45>; [5.00%]
  else
    goto <bb 38>; [95.00%]

  <bb 38> [46.68%]:
  ret_148 = pthread_mutex_lock (&TerminateFlagMutex);
  if (ret_148 != 0)
    goto <bb 39>; [0.04%]
  else
    goto <bb 41>; [99.96%]

  <bb 39> [0.02%]:
  _149 = stderr;
  __fprintf_chk (_149, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_148);

  <bb 40> [0.02%]:
  cleanupAndQuit (-5);

  <bb 41> [46.66%]:
  ret_66 = terminateFlag;
  ret_150 = pthread_mutex_unlock (&TerminateFlagMutex);
  if (ret_150 != 0)
    goto <bb 42>; [0.04%]
  else
    goto <bb 44>; [99.96%]

  <bb 42> [0.02%]:
  _151 = stderr;
  __fprintf_chk (_151, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_150);

  <bb 43> [0.02%]:
  cleanupAndQuit (-6);

  <bb 44> [46.64%]:
  if (ret_66 != 0)
    goto <bb 45>; [5.00%]
  else
    goto <bb 48>; [95.00%]

  <bb 45> [4.79%]:
  _5 = MEM[(struct queue *)q_37(D)].mut;
  ret_152 = pthread_mutex_unlock (_5);
  if (ret_152 != 0)
    goto <bb 46>; [0.04%]
  else
    goto <bb 65>; [99.96%]

  <bb 46> [0.00%]:
  _153 = stderr;
  __fprintf_chk (_153, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_152);

  <bb 47> [0.00%]:
  cleanupAndQuit (-6);

  <bb 48> [93.48%]:
  _6 = MEM[(struct queue *)q_37(D)].mut;
  _7 = MEM[(struct queue *)q_37(D)].notEmpty;
  _154 = pthread_cond_wait (_7, _6);

  <bb 49> [93.48%]:
  if (_154 != 0)
    goto <bb 50>; [0.04%]
  else
    goto <bb 68>; [99.96%]

  <bb 68> [93.44%]:
  goto <bb 13>; [100.00%]

  <bb 50> [0.04%]:
  _155 = stderr;
  __fprintf_chk (_155, 1, "pthread_cond_wait error [%d]! Aborting immediately!\n", _154);

  <bb 51> [0.04%]:
  pthread_mutex_unlock (_6);
  cleanupAndQuit (-8);

  <bb 52> [1.65%]:
  _9 = MEM[(struct queue *)q_37(D)].mut;
  ret_156 = pthread_mutex_unlock (_9);
  if (ret_156 != 0)
    goto <bb 53>; [0.04%]
  else
    goto <bb 55>; [99.96%]

  <bb 53> [0.00%]:
  _157 = stderr;
  __fprintf_chk (_157, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_156);

  <bb 54> [0.00%]:
  cleanupAndQuit (-6);

  <bb 55> [1.65%]:
  _11 = fileData_211->bufSize;
  _12 = (double) _11;
  _13 = _12 * 1.0100000000000000088817841970012523233890533447265625e+0;
  _14 = _13 + 6.0e+2;
  _15 = (unsigned int) _14;
  outSize = _15;
  _47 = (sizetype) _15;
  CompressedData_49 = operator new [] (_47, &nothrow);
  if (CompressedData_49 == 0B)
    goto <bb 56>; [2.50%]
  else
    goto <bb 57>; [97.50%]

  <bb 56> [0.04%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not allocate memory (CompressedData)!  Aborting...\n");
  goto <bb 65>; [100.00%]

  <bb 57> [1.61%]:
  _17 = BWTblockSize;
  _19 = fileData_211->bufSize;
  _20 = fileData_211->buf;
  _51 = BZ2_bzBuffToBuffCompress (CompressedData_49, &outSize, _20, _19, _17, 0, 30);

  <bb 58> [1.61%]:
  if (_51 != 0)
    goto <bb 59>; [2.50%]
  else
    goto <bb 60>; [97.50%]

  <bb 59> [0.04%]:
  handle_error (1, -1, "pbzip2: *ERROR during compression: %d!  Aborting...\n", _51);
  goto <bb 65>; [100.00%]

  <bb 60> [1.57%]:
  _67 = MEM[(char * &)fileData_211];
  if (_67 != 0B)
    goto <bb 61>; [53.47%]
  else
    goto <bb 62>; [46.53%]

  <bb 61> [0.84%]:
  operator delete [] (_67);
  MEM[(char * &)fileData_211] = 0B;

  <bb 62> [1.57%]:
  _23 = fileData_211->bufSize;
  _24 = fileData_211->blockNumber;
  _25 = outSize;
  MEM[(struct  &)&outBlock] ={v} {CLOBBER};
  outBlock.buf = CompressedData_49;
  outBlock.bufSize = _25;
  outBlock.blockNumber = _24;
  outBlock.sequenceNumber = 0;
  outBlock.inSize = _23;
  outBlock.isLastInSequence = 1;
  outBlock.next = 0B;
  _53 = outputBufferAdd (&outBlock, "consumer");

  <bb 63> [1.57%]:
  if (_53 == 0B)
    goto <bb 65>; [2.50%]
  else
    goto <bb 64>; [97.50%]

  <bb 64> [1.53%]:
  operator delete (fileData_211, 40);
  outBlock ={v} {CLOBBER};
  goto <bb 3>; [100.00%]

  <bb 65> [5.08%]:
  outBlock ={v} {CLOBBER};
  outSize ={v} {CLOBBER};
  return 0B;

<L0> [0.00%]:
  resx 1

}



;; Function fileWriter (fileWriter, funcdef_no=40, decl_uid=4174, cgraph_uid=45, symbol_order=772)

Disambiguating loop 1 with multiple latches
Merged latch edges of loop 1
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 7 93 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92
;;
;; Loop 1
;;  header 93, latch 7
;;  depth 1, outer 0
;;  nodes: 93 7 65 62 31 66 26 27 25 21 22 19 18 16 14 11 12 13 9 59 60 61 57 58 55 53 51 49 50 47 48 45 41 44 42 43 39 40 35 33 34 30 28 63 64
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 92 }
;; 5 succs { 93 }
;; 7 succs { 93 }
;; 93 succs { 8 9 }
;; 8 succs { }
;; 9 succs { 10 11 }
;; 10 succs { }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 67 14 }
;; 14 succs { 15 16 }
;; 15 succs { }
;; 16 succs { 17 18 }
;; 17 succs { }
;; 18 succs { 67 19 }
;; 19 succs { 20 21 }
;; 20 succs { }
;; 21 succs { 22 25 }
;; 22 succs { 23 25 }
;; 23 succs { 24 67 }
;; 24 succs { }
;; 25 succs { 26 28 }
;; 26 succs { 31 27 }
;; 27 succs { 31 28 }
;; 28 succs { 29 30 }
;; 29 succs { }
;; 30 succs { 33 34 }
;; 31 succs { 32 7 }
;; 32 succs { }
;; 33 succs { 35 }
;; 34 succs { 35 }
;; 35 succs { 36 39 }
;; 36 succs { 37 38 }
;; 37 succs { 38 }
;; 38 succs { 92 }
;; 39 succs { 40 41 }
;; 40 succs { 41 }
;; 41 succs { 42 45 }
;; 42 succs { 43 44 }
;; 43 succs { 44 }
;; 44 succs { 45 }
;; 45 succs { 46 47 }
;; 46 succs { }
;; 47 succs { 48 49 }
;; 48 succs { 49 }
;; 49 succs { 50 51 }
;; 50 succs { 51 }
;; 51 succs { 52 53 }
;; 52 succs { }
;; 53 succs { 54 55 }
;; 54 succs { }
;; 55 succs { 56 57 }
;; 56 succs { }
;; 57 succs { 58 59 }
;; 58 succs { 59 }
;; 59 succs { 60 62 }
;; 60 succs { 61 62 }
;; 61 succs { 62 }
;; 62 succs { 63 7 }
;; 63 succs { 64 65 }
;; 64 succs { 65 }
;; 65 succs { 66 7 }
;; 66 succs { 7 }
;; 67 succs { 68 70 }
;; 68 succs { 69 70 }
;; 69 succs { 92 }
;; 70 succs { 71 73 }
;; 71 succs { 72 73 }
;; 72 succs { 92 }
;; 73 succs { 74 75 }
;; 74 succs { 75 }
;; 75 succs { 76 84 }
;; 76 succs { 77 78 }
;; 77 succs { }
;; 78 succs { 79 80 }
;; 79 succs { }
;; 80 succs { 81 82 }
;; 81 succs { }
;; 82 succs { 83 84 }
;; 83 succs { }
;; 84 succs { 85 86 }
;; 85 succs { }
;; 86 succs { 87 88 }
;; 87 succs { }
;; 88 succs { 89 90 }
;; 89 succs { }
;; 90 succs { 91 92 }
;; 91 succs { 92 }
;; 92 succs { 1 }
fileWriter (void * outname)
{
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int D.5188;
  int ret;
  struct outBuff * outBlock;
  struct outBuff * prevBlockInSequence;
  off_t bytesProcessed;
  int ret;
  size_t outBufferPos;
  int currBlock;
  int hOutfile;
  int percentComplete;
  off_t CompressedSize;
  int _1;
  int _2;
  union pthread_mutex_t * _3;
  int _4;
  int _5;
  union pthread_mutex_t * _6;
  char * _7;
  struct outBuff * _8;
  union pthread_mutex_t * _9;
  union pthread_mutex_t * _10;
  union pthread_mutex_t * _11;
  unsigned int _12;
  long unsigned int _13;
  char * _14;
  int _15;
  unsigned int _16;
  long int _17;
  unsigned int _18;
  long int _19;
  char * _20;
  bool _21;
  long unsigned int _22;
  union pthread_mutex_t * _23;
  bool _24;
  int _25;
  int _26;
  int _27;
  long unsigned int _28;
  long unsigned int _29;
  union pthread_cond_t * _30;
  union pthread_mutex_t * _31;
  int _32;
  bool _33;
  int _34;
  int _35;
  long int _36;
  double _37;
  double _38;
  double _39;
  double _40;
  struct FILE * _41;
  struct FILE * _42;
  int _43;
  int _44;
  long unsigned int _45;
  struct FILE * _46;
  struct queue * _47;
  union pthread_mutex_t * _48;
  struct queue * _49;
  union pthread_cond_t * _50;
  struct queue * _51;
  union pthread_cond_t * _52;
  struct queue * _53;
  union pthread_mutex_t * _54;
  union pthread_mutex_t * _55;
  union pthread_cond_t * _56;
  union pthread_mutex_t * _57;
  int _58;
  struct FILE * _59;
  struct FILE * _60;
  int _92;
  long int _103;
  long int _129;
  int _133;
  struct ErrorContext * _135;
  struct outBuff * _150;
  long unsigned int _151;
  struct value_type & _152;
  struct outBuff * _153;
  struct value_type & _154;
  union pthread_mutex_t * _214;
  union pthread_mutex_t * _216;
  struct FILE * _218;
  struct FILE * _220;
  struct FILE * _222;
  struct FILE * _224;
  struct FILE * _226;
  struct FILE * _228;
  struct FILE * _230;
  struct FILE * _232;
  struct FILE * _234;
  struct FILE * _236;
  struct FILE * _238;
  struct FILE * _240;
  struct FILE * _242;
  struct FILE * _244;
  struct FILE * _246;
  struct FILE * _248;
  struct FILE * _250;
  struct FILE * _252;
  struct FILE * _254;

  <bb 2> [33.59%]:
  _1 = OutputStdOut;
  if (_1 == 0)
    goto <bb 3>; [83.00%]
  else
    goto <bb 5>; [17.00%]

  <bb 3> [27.88%]:
  _92 = safe_open_output (outname_89(D));
  if (_92 == -1)
    goto <bb 4>; [83.00%]
  else
    goto <bb 5>; [17.00%]

  <bb 4> [23.14%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not create output file [%s]!\n", outname_89(D));
  goto <bb 92>; [100.00%]

  <bb 5> [10.45%]:
  # hOutfile_146 = PHI <1(2), _92(3)>
  goto <bb 93>; [100.00%]

  <bb 7> [89.55%]:
  # CompressedSize_156 = PHI <CompressedSize_105(65), CompressedSize_105(62), CompressedSize_61(31), CompressedSize_105(66)>
  # percentComplete_111 = PHI <percentComplete_63(65), percentComplete_62(62), percentComplete_62(31), percentComplete_63(66)>
  # currBlock_86 = PHI <currBlock_65(65), currBlock_65(62), currBlock_64(31), currBlock_65(66)>
  # outBufferPos_100 = PHI <outBufferPos_68(65), outBufferPos_68(62), outBufferPos_66(31), outBufferPos_68(66)>
  # bytesProcessed_148 = PHI <bytesProcessed_106(65), bytesProcessed_106(62), bytesProcessed_69(31), bytesProcessed_106(66)>
  # prevBlockInSequence_98 = PHI <prevBlockInSequence_71(65), prevBlockInSequence_71(62), prevBlockInSequence_70(31), prevBlockInSequence_71(66)>

  <bb 93> [100.00%]:
  # CompressedSize_61 = PHI <CompressedSize_156(7), 0(5)>
  # percentComplete_62 = PHI <percentComplete_111(7), 0(5)>
  # currBlock_64 = PHI <currBlock_86(7), 0(5)>
  # outBufferPos_66 = PHI <outBufferPos_100(7), 0(5)>
  # bytesProcessed_69 = PHI <bytesProcessed_148(7), 0(5)>
  # prevBlockInSequence_70 = PHI <prevBlockInSequence_98(7), 0B(5)>
  _214 = ProducerDoneMutex;
  ret_219 = pthread_mutex_lock (_214);
  if (ret_219 != 0)
    goto <bb 8>; [0.04%]
  else
    goto <bb 9>; [99.96%]

  <bb 8> [0.04%]:
  _220 = stderr;
  __fprintf_chk (_220, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_219);
  cleanupAndQuit (-5);

  <bb 9> [99.96%]:
  ret_215 = producerDone;
  _216 = ProducerDoneMutex;
  ret_217 = pthread_mutex_unlock (_216);
  if (ret_217 != 0)
    goto <bb 10>; [0.04%]
  else
    goto <bb 11>; [99.96%]

  <bb 10> [0.04%]:
  _218 = stderr;
  __fprintf_chk (_218, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_217);
  cleanupAndQuit (-6);

  <bb 11> [99.92%]:
  if (ret_215 == 1)
    goto <bb 12>; [51.12%]
  else
    goto <bb 14>; [48.88%]

  <bb 12> [51.08%]:
  _2 = NumBlocks;
  if (_2 <= currBlock_64)
    goto <bb 13>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 13> [25.54%]:
  if (prevBlockInSequence_70 == 0B)
    goto <bb 67>; [3.75%]
  else
    goto <bb 14>; [96.25%]

  <bb 14> [98.96%]:
  ret_223 = pthread_mutex_lock (&TerminateFlagMutex);
  if (ret_223 != 0)
    goto <bb 15>; [0.04%]
  else
    goto <bb 16>; [99.96%]

  <bb 15> [0.04%]:
  _224 = stderr;
  __fprintf_chk (_224, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_223);
  cleanupAndQuit (-5);

  <bb 16> [98.92%]:
  ret_149 = terminateFlag;
  ret_221 = pthread_mutex_unlock (&TerminateFlagMutex);
  if (ret_221 != 0)
    goto <bb 17>; [0.04%]
  else
    goto <bb 18>; [99.96%]

  <bb 17> [0.04%]:
  _222 = stderr;
  __fprintf_chk (_222, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_221);
  cleanupAndQuit (-6);

  <bb 18> [98.88%]:
  if (ret_149 != 0)
    goto <bb 67>; [3.75%]
  else
    goto <bb 19>; [96.25%]

  <bb 19> [95.18%]:
  _3 = OutMutex;
  ret_225 = pthread_mutex_lock (_3);
  if (ret_225 != 0)
    goto <bb 20>; [0.04%]
  else
    goto <bb 21>; [99.96%]

  <bb 20> [0.04%]:
  _226 = stderr;
  __fprintf_chk (_226, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_225);
  cleanupAndQuit (-5);

  <bb 21> [95.14%]:
  _4 = LastGoodBlock;
  if (_4 != -1)
    goto <bb 22>; [66.00%]
  else
    goto <bb 25>; [34.00%]

  <bb 22> [62.79%]:
  _5 = NextBlockToWrite;
  if (_4 < _5)
    goto <bb 23>; [3.75%]
  else
    goto <bb 25>; [96.25%]

  <bb 23> [2.35%]:
  _6 = OutMutex;
  ret_227 = pthread_mutex_unlock (_6);
  if (ret_227 != 0)
    goto <bb 24>; [0.04%]
  else
    goto <bb 67>; [99.96%]

  <bb 24> [0.00%]:
  _228 = stderr;
  __fprintf_chk (_228, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_227);
  cleanupAndQuit (-6);

  <bb 25> [92.78%]:
  _150 = OutputBuffer.D.4140._M_impl._M_start;
  _151 = outBufferPos_66 * 40;
  _152 = _150 + _151;
  _7 = _152->buf;
  if (_7 == 0B)
    goto <bb 26>; [46.53%]
  else
    goto <bb 28>; [53.47%]

  <bb 26> [43.17%]:
  if (prevBlockInSequence_70 == 0B)
    goto <bb 31>; [9.42%]
  else
    goto <bb 27>; [90.58%]

  <bb 27> [39.10%]:
  _8 = prevBlockInSequence_70->next;
  if (_8 == 0B)
    goto <bb 31>; [17.43%]
  else
    goto <bb 28>; [82.57%]

  <bb 28> [81.90%]:
  _11 = OutMutex;
  ret_229 = pthread_mutex_unlock (_11);
  if (ret_229 != 0)
    goto <bb 29>; [0.04%]
  else
    goto <bb 30>; [99.96%]

  <bb 29> [0.03%]:
  _230 = stderr;
  __fprintf_chk (_230, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_229);
  cleanupAndQuit (-6);

  <bb 30> [81.87%]:
  if (prevBlockInSequence_70 != 0B)
    goto <bb 33>; [70.00%]
  else
    goto <bb 34>; [30.00%]

  <bb 31> [10.88%]:
  _9 = OutMutex;
  safe_cond_timed_wait (&OutBufferHeadNotEmpty, _9, 1, "fileWriter");
  _10 = OutMutex;
  ret_231 = pthread_mutex_unlock (_10);
  if (ret_231 != 0)
    goto <bb 32>; [0.04%]
  else
    goto <bb 7>; [99.96%]

  <bb 32> [0.00%]:
  _232 = stderr;
  __fprintf_chk (_232, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_231);
  cleanupAndQuit (-6);

  <bb 33> [57.31%]:
  outBlock_101 = prevBlockInSequence_70->next;
  goto <bb 35>; [100.00%]

  <bb 34> [24.56%]:
  _153 = OutputBuffer.D.4140._M_impl._M_start;
  _154 = _153 + _151;

  <bb 35> [81.87%]:
  # outBlock_72 = PHI <outBlock_101(33), _154(34)>
  _12 = outBlock_72->bufSize;
  _13 = (long unsigned int) _12;
  _14 = outBlock_72->buf;
  _103 = do_write (hOutfile_146, _14, _13);
  ret_104 = (int) _103;
  if (ret_104 < 0)
    goto <bb 36>; [3.75%]
  else
    goto <bb 39>; [96.25%]

  <bb 36> [3.07%]:
  _15 = OutputStdOut;
  if (_15 == 0)
    goto <bb 37>; [36.64%]
  else
    goto <bb 38>; [63.36%]

  <bb 37> [1.12%]:
  close (hOutfile_146);

  <bb 38> [3.07%]:
  _16 = outBlock_72->bufSize;
  handle_error (1, -1, "pbzip2: *ERROR: Could not write %d bytes to file [ret=%d]!  Aborting...\n", _16, ret_104);
  goto <bb 92>; [100.00%]

  <bb 39> [78.80%]:
  _17 = (long int) ret_104;
  CompressedSize_105 = _17 + CompressedSize_61;
  _18 = outBlock_72->inSize;
  _19 = (long int) _18;
  bytesProcessed_106 = _19 + bytesProcessed_69;
  _20 = outBlock_72->buf;
  if (_20 != 0B)
    goto <bb 40>; [53.47%]
  else
    goto <bb 41>; [46.53%]

  <bb 40> [42.13%]:
  operator delete [] (_20);

  <bb 41> [78.80%]:
  outBlock_72->buf = 0B;
  outBlock_72->bufSize = 0;
  _21 = outBlock_72->isLastInSequence;
  if (_21 != 0)
    goto <bb 42>; [50.00%]
  else
    goto <bb 45>; [50.00%]

  <bb 42> [39.40%]:
  outBufferPos_110 = outBufferPos_66 + 1;
  _22 = NumBufferedBlocksMax;
  if (_22 == outBufferPos_110)
    goto <bb 43>; [34.00%]
  else
    goto <bb 44>; [66.00%]

  <bb 43> [13.40%]:

  <bb 44> [39.40%]:
  # outBufferPos_67 = PHI <outBufferPos_110(42), 0(43)>
  currBlock_112 = currBlock_64 + 1;

  <bb 45> [78.80%]:
  # currBlock_65 = PHI <currBlock_64(41), currBlock_112(44)>
  # outBufferPos_68 = PHI <outBufferPos_66(41), outBufferPos_67(44)>
  _23 = OutMutex;
  ret_233 = pthread_mutex_lock (_23);
  if (ret_233 != 0)
    goto <bb 46>; [0.04%]
  else
    goto <bb 47>; [99.96%]

  <bb 46> [0.03%]:
  _234 = stderr;
  __fprintf_chk (_234, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_233);
  cleanupAndQuit (-5);

  <bb 47> [78.77%]:
  _24 = outBlock_72->isLastInSequence;
  if (_24 != 0)
    goto <bb 48>; [50.00%]
  else
    goto <bb 49>; [50.00%]

  <bb 48> [39.38%]:
  _25 = NextBlockToWrite;
  _26 = _25 + 1;
  NextBlockToWrite = _26;
  OutBufferPosToWrite = outBufferPos_68;

  <bb 49> [78.77%]:
  _27 = outBlock_72->sequenceNumber;
  if (_27 > 1)
    goto <bb 50>; [64.00%]
  else
    goto <bb 51>; [36.00%]

  <bb 50> [50.41%]:
  _28 = NumBufferedTailBlocks;
  _29 = _28 + 18446744073709551615;
  NumBufferedTailBlocks = _29;

  <bb 51> [78.77%]:
  _30 = notTooMuchNumBuffered;
  ret_239 = pthread_cond_broadcast (_30);
  if (ret_239 != 0)
    goto <bb 52>; [0.04%]
  else
    goto <bb 53>; [99.96%]

  <bb 52> [0.03%]:
  _240 = stderr;
  __fprintf_chk (_240, 1, "pthread_cond_broadcast error [%d]! Aborting immediately!\n", ret_239);
  cleanupAndQuit (-7);

  <bb 53> [78.73%]:
  ret_237 = pthread_cond_broadcast (&ErrStateChangeCond);
  if (ret_237 != 0)
    goto <bb 54>; [0.04%]
  else
    goto <bb 55>; [99.96%]

  <bb 54> [0.03%]:
  _238 = stderr;
  __fprintf_chk (_238, 1, "pthread_cond_broadcast error [%d]! Aborting immediately!\n", ret_237);
  cleanupAndQuit (-7);

  <bb 55> [78.70%]:
  _31 = OutMutex;
  ret_235 = pthread_mutex_unlock (_31);
  if (ret_235 != 0)
    goto <bb 56>; [0.04%]
  else
    goto <bb 57>; [99.96%]

  <bb 56> [0.03%]:
  _236 = stderr;
  __fprintf_chk (_236, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_235);
  cleanupAndQuit (-6);

  <bb 57> [78.67%]:
  _32 = outBlock_72->sequenceNumber;
  if (_32 > 2)
    goto <bb 58>; [33.00%]
  else
    goto <bb 59>; [67.00%]

  <bb 58> [25.96%]:
  operator delete (prevBlockInSequence_70, 40);

  <bb 59> [78.67%]:
  _33 = outBlock_72->isLastInSequence;
  if (_33 != 0)
    goto <bb 60>; [50.00%]
  else
    goto <bb 62>; [50.00%]

  <bb 60> [39.34%]:
  _34 = outBlock_72->sequenceNumber;
  if (_34 > 1)
    goto <bb 61>; [46.68%]
  else
    goto <bb 62>; [53.32%]

  <bb 61> [18.36%]:
  operator delete (outBlock_72, 40);

  <bb 62> [78.67%]:
  # prevBlockInSequence_71 = PHI <outBlock_72(59), 0B(60), 0B(61)>
  _35 = QuietMode;
  if (_35 != 1)
    goto <bb 63>; [66.00%]
  else
    goto <bb 7>; [34.00%]

  <bb 63> [51.92%]:
  _36 = InFileSize;
  if (_36 > 0)
    goto <bb 64>; [64.00%]
  else
    goto <bb 65>; [36.00%]

  <bb 64> [33.23%]:
  _37 = (double) bytesProcessed_106;
  _38 = _37 * 1.0e+2;
  _39 = (double) _36;
  _40 = _38 / _39;
  percentComplete_122 = (int) _40;

  <bb 65> [51.92%]:
  # percentComplete_63 = PHI <percentComplete_62(63), percentComplete_122(64)>
  if (percentComplete_62 != percentComplete_63)
    goto <bb 66>; [48.88%]
  else
    goto <bb 7>; [51.12%]

  <bb 66> [25.38%]:
  _41 = stderr;
  __fprintf_chk (_41, 1, "Completed: %d%%             \r", percentComplete_63);
  _42 = stderr;
  fflush (_42);
  goto <bb 7>; [100.00%]

  <bb 67> [7.02%]:
  if (currBlock_64 == 0)
    goto <bb 68>; [33.00%]
  else
    goto <bb 70>; [67.00%]

  <bb 68> [2.32%]:
  _129 = do_write (hOutfile_146, &Bz2HeaderZero, 14);
  ret_130 = (int) _129;
  if (ret_130 < 0)
    goto <bb 69>; [19.09%]
  else
    goto <bb 70>; [80.91%]

  <bb 69> [0.44%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not write to file!  Aborting...\n");
  goto <bb 92>; [100.00%]

  <bb 70> [6.58%]:
  _43 = OutputStdOut;
  if (_43 == 0)
    goto <bb 71>; [33.00%]
  else
    goto <bb 73>; [67.00%]

  <bb 71> [2.17%]:
  _133 = close (hOutfile_146);
  if (_133 == -1)
    goto <bb 72>; [17.77%]
  else
    goto <bb 73>; [82.23%]

  <bb 72> [0.39%]:
  _135 = getInstance ();
  saveError (_135);
  handle_error (1, -1, "pbzip2: *ERROR: Could not close output file!  Aborting...\n");
  goto <bb 92>; [100.00%]

  <bb 73> [6.19%]:
  _44 = QuietMode;
  if (_44 != 1)
    goto <bb 74>; [48.88%]
  else
    goto <bb 75>; [51.12%]

  <bb 74> [3.03%]:
  _45 = (long unsigned int) CompressedSize_61;
  _46 = stderr;
  __fprintf_chk (_46, 1, "    Output Size: %lu bytes\n", _45);

  <bb 75> [6.19%]:
  _47 = FifoQueue;
  if (_47 != 0B)
    goto <bb 76>; [53.47%]
  else
    goto <bb 84>; [46.53%]

  <bb 76> [3.31%]:
  _48 = _47->mut;
  ret_247 = pthread_mutex_lock (_48);
  if (ret_247 != 0)
    goto <bb 77>; [0.04%]
  else
    goto <bb 78>; [99.96%]

  <bb 77> [0.00%]:
  _248 = stderr;
  __fprintf_chk (_248, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_247);
  cleanupAndQuit (-5);

  <bb 78> [3.31%]:
  _49 = FifoQueue;
  _50 = _49->notEmpty;
  ret_245 = pthread_cond_broadcast (_50);
  if (ret_245 != 0)
    goto <bb 79>; [0.04%]
  else
    goto <bb 80>; [99.96%]

  <bb 79> [0.00%]:
  _246 = stderr;
  __fprintf_chk (_246, 1, "pthread_cond_broadcast error [%d]! Aborting immediately!\n", ret_245);
  cleanupAndQuit (-7);

  <bb 80> [3.31%]:
  _51 = FifoQueue;
  _52 = _51->notFull;
  ret_243 = pthread_cond_broadcast (_52);
  if (ret_243 != 0)
    goto <bb 81>; [0.04%]
  else
    goto <bb 82>; [99.96%]

  <bb 81> [0.00%]:
  _244 = stderr;
  __fprintf_chk (_244, 1, "pthread_cond_broadcast error [%d]! Aborting immediately!\n", ret_243);
  cleanupAndQuit (-7);

  <bb 82> [3.31%]:
  _53 = FifoQueue;
  _54 = _53->mut;
  ret_241 = pthread_mutex_unlock (_54);
  if (ret_241 != 0)
    goto <bb 83>; [0.04%]
  else
    goto <bb 84>; [99.96%]

  <bb 83> [0.00%]:
  _242 = stderr;
  __fprintf_chk (_242, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_241);
  cleanupAndQuit (-6);

  <bb 84> [6.19%]:
  _55 = OutMutex;
  ret_253 = pthread_mutex_lock (_55);
  if (ret_253 != 0)
    goto <bb 85>; [0.04%]
  else
    goto <bb 86>; [99.96%]

  <bb 85> [0.00%]:
  _254 = stderr;
  __fprintf_chk (_254, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_253);
  cleanupAndQuit (-5);

  <bb 86> [6.18%]:
  _56 = notTooMuchNumBuffered;
  ret_251 = pthread_cond_broadcast (_56);
  if (ret_251 != 0)
    goto <bb 87>; [0.04%]
  else
    goto <bb 88>; [99.96%]

  <bb 87> [0.00%]:
  _252 = stderr;
  __fprintf_chk (_252, 1, "pthread_cond_broadcast error [%d]! Aborting immediately!\n", ret_251);
  cleanupAndQuit (-7);

  <bb 88> [6.18%]:
  _57 = OutMutex;
  ret_249 = pthread_mutex_unlock (_57);
  if (ret_249 != 0)
    goto <bb 89>; [0.04%]
  else
    goto <bb 90>; [99.96%]

  <bb 89> [0.00%]:
  _250 = stderr;
  __fprintf_chk (_250, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_249);
  cleanupAndQuit (-6);

  <bb 90> [6.18%]:
  _58 = QuietMode;
  if (_58 != 1)
    goto <bb 91>; [52.88%]
  else
    goto <bb 92>; [47.12%]

  <bb 91> [3.27%]:
  _59 = stderr;
  __fprintf_chk (_59, 1, "Completed: %d%%             \r", 100);
  _60 = stderr;
  fflush (_60);

  <bb 92> [33.22%]:
  return 0B;

}



;; Function consumer_decompress (consumer_decompress, funcdef_no=41, decl_uid=4173, cgraph_uid=44, symbol_order=771)

Disambiguating loop 3 with multiple latches
Merged latch edges of loop 3
Created preheader block for loop 4
Created preheader block for loop 2
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 156 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 159 60 61 62 63 64 65 66 67 68 69 71 154 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 155 112 113 114 115 116 117 118 119 120 121 122 123 158 124 125 126 127 128 129 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 157 153
;;
;; Loop 1
;;  header 3, latch 157
;;  depth 1, outer 0
;;  nodes: 3 157 152 150 151 147 148 140 141 143 144 145 146 142 139 136 138 137 154 72 71 69 66 67 42 65 40 38 37 27 28 36 34 35 33 31 32 29 30 25 26 24 21 16 17 18 19 20 15 13 11 9 10 7 5 156 159 59 43 53 51 49 48 46 44 79 134 122 133 119 128 125 126 112 113 155 158 123 120 121 118 116 114 110 108 106 107 105 80 82 101 98 103 91 89 88 86 87 85 83 81 96 94 92 90 99 78 77 73 76 74 131 132
;;
;; Loop 3
;;  header 154, latch 71
;;  depth 2, outer 1
;;  nodes: 154 71 79 134 122 133 119 128 125 126 112 113 155 158 123 120 121 118 116 114 110 108 106 107 105 80 82 101 98 103 91 89 88 86 87 85 83 81 96 94 92 90 99 78 77 73 76 74 72 131 132
;;
;; Loop 4
;;  header 112, latch 158
;;  depth 3, outer 3
;;  nodes: 112 158 123 120 121 118 116 114 113
;;
;; Loop 2
;;  header 5, latch 159
;;  depth 2, outer 1
;;  nodes: 5 159 59 43 53 51 49 48 46 44 24 37 27 28 36 34 35 33 31 32 29 30 25 26 21 16 17 18 19 20 15 13 11 9 10 7
;; 2 succs { 3 }
;; 3 succs { 4 156 }
;; 4 succs { }
;; 156 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 8 9 }
;; 8 succs { }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { }
;; 13 succs { 14 15 }
;; 14 succs { }
;; 15 succs { 16 19 }
;; 16 succs { 21 17 }
;; 17 succs { 21 18 }
;; 18 succs { 21 19 }
;; 19 succs { 21 20 }
;; 20 succs { 21 }
;; 21 succs { 22 24 }
;; 22 succs { 23 153 }
;; 23 succs { }
;; 24 succs { 25 43 }
;; 25 succs { 26 28 }
;; 26 succs { 27 28 }
;; 27 succs { 34 37 }
;; 28 succs { 37 29 }
;; 29 succs { 30 31 }
;; 30 succs { 31 }
;; 31 succs { 32 33 }
;; 32 succs { 33 }
;; 33 succs { 34 }
;; 34 succs { 35 36 }
;; 35 succs { 36 }
;; 36 succs { 37 }
;; 37 succs { 38 43 }
;; 38 succs { 39 40 }
;; 39 succs { }
;; 40 succs { 41 42 }
;; 41 succs { }
;; 42 succs { 65 66 }
;; 43 succs { 44 59 }
;; 44 succs { 45 46 }
;; 45 succs { }
;; 46 succs { 47 48 }
;; 47 succs { }
;; 48 succs { 54 49 }
;; 49 succs { 50 51 }
;; 50 succs { }
;; 51 succs { 52 53 }
;; 52 succs { }
;; 53 succs { 54 59 }
;; 54 succs { 55 56 }
;; 55 succs { }
;; 56 succs { 57 58 }
;; 57 succs { }
;; 58 succs { 61 63 }
;; 59 succs { 60 159 }
;; 159 succs { 5 }
;; 60 succs { }
;; 61 succs { 62 63 }
;; 62 succs { 63 }
;; 63 succs { 64 153 }
;; 64 succs { 153 }
;; 65 succs { 66 }
;; 66 succs { 67 69 }
;; 67 succs { 68 69 }
;; 68 succs { 153 }
;; 69 succs { 154 }
;; 71 succs { 154 }
;; 154 succs { 136 72 }
;; 72 succs { 136 73 }
;; 73 succs { 74 77 }
;; 74 succs { 75 76 }
;; 75 succs { 153 }
;; 76 succs { 77 }
;; 77 succs { 78 79 }
;; 78 succs { 80 79 }
;; 79 succs { 80 71 }
;; 80 succs { 81 105 }
;; 81 succs { 83 82 }
;; 82 succs { 83 105 }
;; 83 succs { 84 85 }
;; 84 succs { }
;; 85 succs { 87 86 }
;; 86 succs { 87 88 }
;; 87 succs { 88 }
;; 88 succs { 90 89 }
;; 89 succs { 90 91 }
;; 90 succs { 92 }
;; 91 succs { 92 103 }
;; 92 succs { 93 94 }
;; 93 succs { }
;; 94 succs { 95 96 }
;; 95 succs { }
;; 96 succs { 97 98 }
;; 97 succs { }
;; 98 succs { 99 105 }
;; 99 succs { 100 101 }
;; 100 succs { }
;; 101 succs { 102 105 }
;; 102 succs { }
;; 103 succs { 104 105 }
;; 104 succs { }
;; 105 succs { 106 131 }
;; 106 succs { 107 108 }
;; 107 succs { 108 }
;; 108 succs { 109 110 }
;; 109 succs { 153 }
;; 110 succs { 111 155 }
;; 111 succs { }
;; 155 succs { 112 }
;; 112 succs { 125 113 }
;; 113 succs { 125 114 }
;; 114 succs { 115 116 }
;; 115 succs { }
;; 116 succs { 117 118 }
;; 117 succs { }
;; 118 succs { 119 120 }
;; 119 succs { 134 }
;; 120 succs { 121 123 }
;; 121 succs { 122 123 }
;; 122 succs { 134 }
;; 123 succs { 124 158 }
;; 158 succs { 112 }
;; 124 succs { }
;; 125 succs { 126 128 }
;; 126 succs { 127 128 }
;; 127 succs { }
;; 128 succs { 129 134 }
;; 129 succs { }
;; 131 succs { 133 132 }
;; 132 succs { 133 }
;; 133 succs { 134 }
;; 134 succs { 135 71 }
;; 135 succs { 153 }
;; 136 succs { 137 139 }
;; 137 succs { 140 138 }
;; 138 succs { 140 139 }
;; 139 succs { 141 142 }
;; 140 succs { 147 }
;; 141 succs { 147 }
;; 142 succs { 143 144 }
;; 143 succs { 147 }
;; 144 succs { 145 147 }
;; 145 succs { 146 147 }
;; 146 succs { 147 }
;; 147 succs { 148 150 }
;; 148 succs { 149 150 }
;; 149 succs { 153 }
;; 150 succs { 151 152 }
;; 151 succs { 152 }
;; 152 succs { 153 157 }
;; 157 succs { 3 }
;; 153 succs { 1 }
consumer_decompress (void * q)
{
  int D.5343;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  struct outBuff * D.5320;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  bool changed;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int D.5280;
  int ret;
  int ret;
  struct ElementType * & headElem;
  int D.5274;
  int ret;
  int ret;
  int ret;
  int ret;
  int D.5264;
  int ret;
  int ret;
  bool isInterrupted;
  int ret;
  int D.5255;
  int ret;
  int ret;
  int ret;
  bool isLast;
  unsigned int len;
  struct outBuff * addret;
  unsigned int availIn;
  int bzret;
  struct bz_stream strm;
  unsigned int processedIn;
  int outSequenceNumber;
  struct outBuff * prevOutBlockInSequence;
  char * DecompressedData;
  struct outBuff * lastFileData;
  struct outBuff * fileData;
  struct outBuff D.5237;
  union pthread_mutex_t * _1;
  union pthread_mutex_t * _3;
  int _4;
  int _6;
  union pthread_mutex_t * _7;
  int _8;
  int _9;
  union pthread_mutex_t * _10;
  union pthread_cond_t * _11;
  union pthread_cond_t * _12;
  union pthread_mutex_t * _13;
  int _15;
  unsigned int _18;
  char * _19;
  unsigned int _20;
  unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  unsigned int _24;
  int _26;
  int _28;
  int _30;
  bool _32;
  unsigned int _33;
  bool _34;
  bool _35;
  int _54;
  int _91;
  int _102;
  struct outBuff * _109;
  void * _114;
  int _123;
  bool _131;
  char * _132;
  struct FILE * _238;
  int _241;
  bool _242;
  int _244;
  struct FILE * _246;
  struct FILE * _248;
  union pthread_mutex_t * _249;
  union pthread_mutex_t * _251;
  struct FILE * _253;
  struct FILE * _255;
  struct FILE * _257;
  struct ElementType * * _258;
  long int _259;
  long unsigned int _260;
  long unsigned int _261;
  bool _264;
  struct outBuff * _265;
  int _266;
  struct ElementType * _267;
  long int _269;
  long int _270;
  long int _271;
  long int _272;
  long int _273;
  long int _274;
  int _275;
  struct FILE * _277;
  struct FILE * _279;
  union pthread_mutex_t * _280;
  union pthread_mutex_t * _282;
  struct FILE * _284;
  struct FILE * _286;
  struct FILE * _288;
  struct FILE * _290;
  struct FILE * _292;
  struct FILE * _294;
  int _295;
  struct FILE * _296;
  union pthread_mutex_t * _297;
  int _298;
  int _299;
  union pthread_cond_t * _301;
  union pthread_mutex_t * _302;
  struct queue * _303;
  union pthread_mutex_t * _304;
  struct queue * _305;
  union pthread_cond_t * _306;
  struct queue * _307;
  union pthread_cond_t * _308;
  struct queue * _309;
  union pthread_mutex_t * _310;
  union pthread_mutex_t * _311;
  struct FILE * _313;
  struct FILE * _315;
  struct FILE * _317;
  struct FILE * _319;
  struct FILE * _321;
  struct FILE * _323;
  struct FILE * _325;
  union pthread_mutex_t * _326;
  long unsigned int _327;
  long unsigned int _328;
  char * _329;
  union pthread_mutex_t * _331;
  int _332;
  int _333;
  union pthread_mutex_t * _334;
  union pthread_mutex_t * _335;
  union pthread_cond_t * _336;
  long unsigned int _337;
  char * _338;
  union pthread_mutex_t * _339;
  struct FILE * _342;
  struct FILE * _344;
  struct FILE * _346;
  int _347;
  struct FILE * _348;
  struct FILE * _350;
  struct FILE * _352;
  unsigned int _353;
  bool _354;
  bool _355;
  bool _356;
  bool _357;
  int _358;
  int _359;
  unsigned int _360;
  int _361;
  bool _362;
  int _363;
  int _364;

  <bb 2> [7.94%]:
  strm.bzalloc = 0B;
  strm.bzfree = 0B;
  strm.opaque = 0B;

  <bb 3> [8.70%]:
  # DecompressedData_38 = PHI <0B(2), DecompressedData_39(157)>
  # prevOutBlockInSequence_41 = PHI <0B(2), prevOutBlockInSequence_43(157)>
  # outSequenceNumber_44 = PHI <-1(2), outSequenceNumber_47(157)>
  # processedIn_48 = PHI <0(2), processedIn_49(157)>
  # lastFileData_157 = PHI <0B(2), fileData_493(157)>
  _1 = MEM[(struct queue *)q_71(D)].mut;
  ret_237 = pthread_mutex_lock (_1);
  if (ret_237 != 0)
    goto <bb 4>; [0.04%]
  else
    goto <bb 156>; [99.96%]

  <bb 4> [0.00%]:
  _238 = stderr;
  __fprintf_chk (_238, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_237);
  cleanupAndQuit (-5);

  <bb 156> [8.70%]:

  <bb 5> [100.00%]:
  # fileData_491 = PHI <lastFileData_157(156), fileData_494(159)>
  ret_247 = pthread_mutex_lock (&TerminateFlagMutex);
  if (ret_247 != 0)
    goto <bb 6>; [0.04%]
  else
    goto <bb 7>; [99.96%]

  <bb 6> [0.04%]:
  _248 = stderr;
  __fprintf_chk (_248, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_247);
  cleanupAndQuit (-5);

  <bb 7> [99.96%]:
  ret_239 = terminateFlag;
  ret_245 = pthread_mutex_unlock (&TerminateFlagMutex);
  if (ret_245 != 0)
    goto <bb 8>; [0.04%]
  else
    goto <bb 9>; [99.96%]

  <bb 8> [0.04%]:
  _246 = stderr;
  __fprintf_chk (_246, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_245);
  cleanupAndQuit (-6);

  <bb 9> [99.92%]:
  if (ret_239 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [49.96%]:

  <bb 11> [99.92%]:
  # isInterrupted_243 = PHI <0(9), 1(10)>
  _249 = OutMutex;
  ret_254 = pthread_mutex_lock (_249);
  if (ret_254 != 0)
    goto <bb 12>; [0.04%]
  else
    goto <bb 13>; [99.96%]

  <bb 12> [0.04%]:
  _255 = stderr;
  __fprintf_chk (_255, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_254);
  cleanupAndQuit (-5);

  <bb 13> [99.88%]:
  ret_250 = MinErrorBlock;
  _251 = OutMutex;
  ret_252 = pthread_mutex_unlock (_251);
  if (ret_252 != 0)
    goto <bb 14>; [0.04%]
  else
    goto <bb 15>; [99.96%]

  <bb 14> [0.04%]:
  _253 = stderr;
  __fprintf_chk (_253, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_252);
  cleanupAndQuit (-6);

  <bb 15> [99.84%]:
  if (ret_250 != -1)
    goto <bb 16>; [66.00%]
  else
    goto <bb 19>; [34.00%]

  <bb 16> [65.89%]:
  if (fileData_491 == 0B)
    goto <bb 21>; [26.74%]
  else
    goto <bb 17>; [73.26%]

  <bb 17> [48.27%]:
  _241 = MEM[(const struct outBuff *)fileData_491].blockNumber;
  if (_241 >= ret_250)
    goto <bb 21>; [46.00%]
  else
    goto <bb 18>; [54.00%]

  <bb 18> [26.07%]:
  _242 = MEM[(const struct outBuff *)fileData_491].isLastInSequence;
  if (_242 != 0)
    goto <bb 21>; [46.00%]
  else
    goto <bb 19>; [54.00%]

  <bb 19> [48.02%]:
  if (isInterrupted_243 != 0)
    goto <bb 21>; [46.00%]
  else
    goto <bb 20>; [54.00%]

  <bb 20> [25.93%]:

  <bb 21> [99.84%]:
  # _244 = PHI <1(16), 1(17), 1(18), 1(19), 0(20)>
  if (_244 != 0)
    goto <bb 22>; [3.75%]
  else
    goto <bb 24>; [96.25%]

  <bb 22> [3.74%]:
  _3 = MEM[(struct queue *)q_71(D)].mut;
  ret_256 = pthread_mutex_unlock (_3);
  if (ret_256 != 0)
    goto <bb 23>; [0.04%]
  else
    goto <bb 153>; [99.96%]

  <bb 23> [0.00%]:
  _257 = stderr;
  __fprintf_chk (_257, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_256);
  cleanupAndQuit (-6);

  <bb 24> [96.10%]:
  _4 = MEM[(struct queue *)q_71(D)].empty;
  if (_4 == 0)
    goto <bb 25>; [33.00%]
  else
    goto <bb 43>; [67.00%]

  <bb 25> [31.71%]:
  _258 = MEM[(struct queue *)q_71(D)].qData;
  _259 = MEM[(struct queue *)q_71(D)].head;
  _260 = (long unsigned int) _259;
  _261 = _260 * 8;
  headElem_262 = _258 + _261;
  if (fileData_491 != 0B)
    goto <bb 26>; [70.00%]
  else
    goto <bb 28>; [30.00%]

  <bb 26> [22.20%]:
  _264 = MEM[(struct ElementType *)fileData_491].isLastInSequence;
  if (_264 != 0)
    goto <bb 28>; [50.00%]
  else
    goto <bb 27>; [50.00%]

  <bb 27> [11.10%]:
  _265 = MEM[(struct ElementType *)fileData_491].next;
  if (_265 != 0B)
    goto <bb 34>; [73.26%]
  else
    goto <bb 37>; [26.74%]

  <bb 28> [20.61%]:
  _266 = MEM[(struct queue *)q_71(D)].topLevelEmpty;
  if (_266 != 0)
    goto <bb 37>; [46.00%]
  else
    goto <bb 29>; [54.00%]

  <bb 29> [11.13%]:
  _267 = *headElem_262;
  _269 = _259 + 1;
  MEM[(struct queue *)q_71(D)].head = _269;
  _270 = MEM[(struct queue *)q_71(D)].size;
  if (_269 == _270)
    goto <bb 30>; [34.00%]
  else
    goto <bb 31>; [66.00%]

  <bb 30> [3.78%]:
  MEM[(struct queue *)q_71(D)].head = 0;

  <bb 31> [11.13%]:
  _271 = MEM[(struct queue *)q_71(D)].head;
  _272 = MEM[(struct queue *)q_71(D)].tail;
  if (_271 == _272)
    goto <bb 32>; [34.00%]
  else
    goto <bb 33>; [66.00%]

  <bb 32> [3.78%]:
  MEM[(struct queue *)q_71(D)].topLevelEmpty = 1;

  <bb 33> [11.13%]:
  MEM[(struct queue *)q_71(D)].topLevelFull = 0;

  <bb 34> [19.26%]:
  # fileData_492 = PHI <_265(27), _267(33)>
  _273 = MEM[(struct queue *)q_71(D)].count;
  _274 = _273 + -1;
  MEM[(struct queue *)q_71(D)].count = _274;
  if (_274 == 0)
    goto <bb 35>; [50.00%]
  else
    goto <bb 36>; [50.00%]

  <bb 35> [9.63%]:
  MEM[(struct queue *)q_71(D)].empty = 1;

  <bb 36> [19.26%]:
  MEM[(struct queue *)q_71(D)].full = 0;

  <bb 37> [31.71%]:
  # _275 = PHI <0(27), 0(28), 1(36)>
  # fileData_493 = PHI <fileData_491(27), fileData_491(28), fileData_492(36)>
  if (_275 == 1)
    goto <bb 38>; [3.75%]
  else
    goto <bb 43>; [96.25%]

  <bb 38> [1.19%]:
  _12 = MEM[(struct queue *)q_71(D)].notFull;
  ret_278 = pthread_cond_signal (_12);
  if (ret_278 != 0)
    goto <bb 39>; [0.04%]
  else
    goto <bb 40>; [99.96%]

  <bb 39> [0.00%]:
  _279 = stderr;
  __fprintf_chk (_279, 1, "pthread_cond_signal error [%d]! Aborting immediately!\n", ret_278);
  cleanupAndQuit (-7);

  <bb 40> [1.19%]:
  _13 = MEM[(struct queue *)q_71(D)].mut;
  ret_276 = pthread_mutex_unlock (_13);
  if (ret_276 != 0)
    goto <bb 41>; [0.04%]
  else
    goto <bb 42>; [99.96%]

  <bb 41> [0.00%]:
  _277 = stderr;
  __fprintf_chk (_277, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_276);
  cleanupAndQuit (-6);

  <bb 42> [1.19%]:
  if (lastFileData_157 != 0B)
    goto <bb 65>; [53.47%]
  else
    goto <bb 66>; [46.53%]

  <bb 43> [94.91%]:
  # fileData_494 = PHI <fileData_491(24), fileData_493(37)>
  _6 = MEM[(struct queue *)q_71(D)].empty;
  if (_6 != 0)
    goto <bb 44>; [50.00%]
  else
    goto <bb 59>; [50.00%]

  <bb 44> [47.45%]:
  _280 = ProducerDoneMutex;
  ret_285 = pthread_mutex_lock (_280);
  if (ret_285 != 0)
    goto <bb 45>; [0.04%]
  else
    goto <bb 46>; [99.96%]

  <bb 45> [0.02%]:
  _286 = stderr;
  __fprintf_chk (_286, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_285);
  cleanupAndQuit (-5);

  <bb 46> [47.43%]:
  ret_281 = producerDone;
  _282 = ProducerDoneMutex;
  ret_283 = pthread_mutex_unlock (_282);
  if (ret_283 != 0)
    goto <bb 47>; [0.04%]
  else
    goto <bb 48>; [99.96%]

  <bb 47> [0.02%]:
  _284 = stderr;
  __fprintf_chk (_284, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_283);
  cleanupAndQuit (-6);

  <bb 48> [47.42%]:
  if (ret_281 == 1)
    goto <bb 54>; [3.75%]
  else
    goto <bb 49>; [96.25%]

  <bb 49> [45.64%]:
  ret_289 = pthread_mutex_lock (&TerminateFlagMutex);
  if (ret_289 != 0)
    goto <bb 50>; [0.04%]
  else
    goto <bb 51>; [99.96%]

  <bb 50> [0.02%]:
  _290 = stderr;
  __fprintf_chk (_290, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_289);
  cleanupAndQuit (-5);

  <bb 51> [45.62%]:
  ret_106 = terminateFlag;
  ret_287 = pthread_mutex_unlock (&TerminateFlagMutex);
  if (ret_287 != 0)
    goto <bb 52>; [0.04%]
  else
    goto <bb 53>; [99.96%]

  <bb 52> [0.02%]:
  _288 = stderr;
  __fprintf_chk (_288, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_287);
  cleanupAndQuit (-6);

  <bb 53> [45.60%]:
  if (ret_106 != 0)
    goto <bb 54>; [3.75%]
  else
    goto <bb 59>; [96.25%]

  <bb 54> [3.49%]:
  _7 = MEM[(struct queue *)q_71(D)].mut;
  pthread_mutex_unlock (_7);
  ret_293 = pthread_mutex_lock (&TerminateFlagMutex);
  if (ret_293 != 0)
    goto <bb 55>; [0.04%]
  else
    goto <bb 56>; [99.96%]

  <bb 55> [0.00%]:
  _294 = stderr;
  __fprintf_chk (_294, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_293);
  cleanupAndQuit (-5);

  <bb 56> [3.49%]:
  ret_130 = terminateFlag;
  ret_291 = pthread_mutex_unlock (&TerminateFlagMutex);
  if (ret_291 != 0)
    goto <bb 57>; [0.04%]
  else
    goto <bb 58>; [99.96%]

  <bb 57> [0.00%]:
  _292 = stderr;
  __fprintf_chk (_292, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_291);
  cleanupAndQuit (-6);

  <bb 58> [3.49%]:
  if (ret_130 == 0)
    goto <bb 61>; [50.00%]
  else
    goto <bb 63>; [50.00%]

  <bb 59> [91.34%]:
  _10 = MEM[(struct queue *)q_71(D)].mut;
  _11 = MEM[(struct queue *)q_71(D)].notEmpty;
  _295 = pthread_cond_wait (_11, _10);
  if (_295 != 0)
    goto <bb 60>; [0.04%]
  else
    goto <bb 159>; [99.96%]

  <bb 159> [91.30%]:
  goto <bb 5>; [100.00%]

  <bb 60> [0.04%]:
  _296 = stderr;
  __fprintf_chk (_296, 1, "pthread_cond_wait error [%d]! Aborting immediately!\n", _295);
  pthread_mutex_unlock (_10);
  cleanupAndQuit (-8);

  <bb 61> [1.74%]:
  if (outSequenceNumber_44 != -1)
    goto <bb 62>; [48.88%]
  else
    goto <bb 63>; [51.12%]

  <bb 62> [0.85%]:
  _8 = lastFileData_157->sequenceNumber;
  _9 = lastFileData_157->blockNumber;
  handle_error (1, -1, "pbzip2: *ERROR on decompress - premature end of archive stream (block=%d; seq=%d; outseq=%d)!\n", _9, _8, outSequenceNumber_44);

  <bb 63> [3.49%]:
  if (lastFileData_157 != 0B)
    goto <bb 64>; [53.47%]
  else
    goto <bb 153>; [46.53%]

  <bb 64> [1.86%]:
  operator delete (lastFileData_157, 40);
  goto <bb 153>; [100.00%]

  <bb 65> [0.64%]:
  operator delete (lastFileData_157, 40);

  <bb 66> [1.19%]:
  _15 = fileData_493->sequenceNumber;
  if (_15 <= 1)
    goto <bb 67>; [21.69%]
  else
    goto <bb 69>; [78.31%]

  <bb 67> [0.26%]:
  _91 = BZ2_bzDecompressInit (&strm, 0, 0);
  if (_91 != 0)
    goto <bb 68>; [2.00%]
  else
    goto <bb 69>; [98.00%]

  <bb 68> [0.01%]:
  handle_error (1, -1, "pbzip2: *ERROR during BZ2_bzDecompressInit: %d\n", _91);
  goto <bb 153>; [100.00%]

  <bb 69> [1.18%]:
  # bzret_51 = PHI <0(66), _91(67)>
  _18 = fileData_493->bufSize;
  strm.avail_in = _18;
  _19 = fileData_493->buf;
  strm.next_in = _19;
  goto <bb 154>; [100.00%]

  <bb 71> [11.96%]:
  # DecompressedData_167 = PHI <DecompressedData_40(79), 0B(134)>
  # prevOutBlockInSequence_128 = PHI <prevOutBlockInSequence_42(79), addret_53(134)>
  # outSequenceNumber_111 = PHI <outSequenceNumber_45(79), outSequenceNumber_46(134)>
  # processedIn_70 = PHI <processedIn_103(79), processedIn_103(134)>
  # bzret_374 = PHI <_102(79), _102(134)>

  <bb 154> [13.14%]:
  # DecompressedData_39 = PHI <DecompressedData_167(71), DecompressedData_38(69)>
  # prevOutBlockInSequence_42 = PHI <prevOutBlockInSequence_128(71), prevOutBlockInSequence_41(69)>
  # outSequenceNumber_45 = PHI <outSequenceNumber_111(71), outSequenceNumber_44(69)>
  # processedIn_49 = PHI <processedIn_70(71), processedIn_48(69)>
  # bzret_52 = PHI <bzret_374(71), bzret_51(69)>
  if (bzret_52 != 0)
    goto <bb 136>; [3.00%]
  else
    goto <bb 72>; [97.00%]

  <bb 72> [12.74%]:
  _20 = strm.avail_in;
  if (_20 == 0)
    goto <bb 136>; [3.00%]
  else
    goto <bb 73>; [97.00%]

  <bb 73> [12.36%]:
  if (DecompressedData_39 == 0B)
    goto <bb 74>; [30.00%]
  else
    goto <bb 77>; [70.00%]

  <bb 74> [3.71%]:
  DecompressedData_96 = operator new [] (900000, &nothrow);
  if (DecompressedData_96 == 0B)
    goto <bb 75>; [3.00%]
  else
    goto <bb 76>; [97.00%]

  <bb 75> [0.11%]:
  handle_error (1, -1, " *ERROR: Could not allocate memory (DecompressedData)!  Aborting...\n");
  goto <bb 153>; [100.00%]

  <bb 76> [3.60%]:
  strm.avail_out = 900000;
  strm.next_out = DecompressedData_96;

  <bb 77> [12.25%]:
  # DecompressedData_40 = PHI <DecompressedData_39(73), DecompressedData_96(76)>
  # processedIn_50 = PHI <processedIn_49(73), 0(76)>
  availIn_100 = strm.avail_in;
  _102 = BZ2_bzDecompress (&strm);
  _21 = strm.avail_in;
  _22 = availIn_100 - _21;
  processedIn_103 = _22 + processedIn_50;
  if (_102 == 0)
    goto <bb 78>; [50.00%]
  else
    goto <bb 79>; [50.00%]

  <bb 78> [6.12%]:
  _23 = strm.avail_out;
  if (_23 == 0)
    goto <bb 80>; [50.00%]
  else
    goto <bb 79>; [50.00%]

  <bb 79> [9.19%]:
  if (_102 == 4)
    goto <bb 80>; [34.00%]
  else
    goto <bb 71>; [66.00%]

  <bb 80> [6.19%]:
  _24 = strm.avail_out;
  len_104 = 900000 - _24;
  isLast_105 = _102 == 4;
  if (_102 == 4)
    goto <bb 81>; [34.00%]
  else
    goto <bb 105>; [66.00%]

  <bb 81> [2.10%]:
  if (_21 != 0)
    goto <bb 83>; [33.00%]
  else
    goto <bb 82>; [67.00%]

  <bb 82> [1.41%]:
  _131 = MEM[(const struct outBuff *)fileData_493].isLastInSequence;
  if (_131 != 0)
    goto <bb 105>; [50.00%]
  else
    goto <bb 83>; [50.00%]

  <bb 83> [1.40%]:
  _26 = fileData_493->blockNumber;
  _297 = OutMutex;
  ret_312 = pthread_mutex_lock (_297);
  if (ret_312 != 0)
    goto <bb 84>; [0.04%]
  else
    goto <bb 85>; [99.96%]

  <bb 84> [0.00%]:
  _313 = stderr;
  __fprintf_chk (_313, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_312);
  cleanupAndQuit (-5);

  <bb 85> [1.40%]:
  _298 = LastGoodBlock;
  if (_298 == -1)
    goto <bb 87>; [34.00%]
  else
    goto <bb 86>; [66.00%]

  <bb 86> [0.92%]:
  if (_26 < _298)
    goto <bb 87>; [50.00%]
  else
    goto <bb 88>; [50.00%]

  <bb 87> [0.94%]:
  LastGoodBlock = _26;

  <bb 88> [1.40%]:
  # changed_300 = PHI <0(86), 1(87)>
  _299 = MinErrorBlock;
  if (_299 == -1)
    goto <bb 90>; [34.00%]
  else
    goto <bb 89>; [66.00%]

  <bb 89> [0.92%]:
  if (_26 < _299)
    goto <bb 90>; [50.00%]
  else
    goto <bb 91>; [50.00%]

  <bb 90> [0.94%]:
  MinErrorBlock = _26;
  goto <bb 92>; [100.00%]

  <bb 91> [0.46%]:
  if (changed_300 != 0)
    goto <bb 92>; [67.00%]
  else
    goto <bb 103>; [33.00%]

  <bb 92> [1.25%]:
  ret_318 = pthread_cond_signal (&ErrStateChangeCond);
  if (ret_318 != 0)
    goto <bb 93>; [0.04%]
  else
    goto <bb 94>; [99.96%]

  <bb 93> [0.00%]:
  _319 = stderr;
  __fprintf_chk (_319, 1, "pthread_cond_signal error [%d]! Aborting immediately!\n", ret_318);
  cleanupAndQuit (-7);

  <bb 94> [1.25%]:
  ret_316 = pthread_cond_signal (&OutBufferHeadNotEmpty);
  if (ret_316 != 0)
    goto <bb 95>; [0.04%]
  else
    goto <bb 96>; [99.96%]

  <bb 95> [0.00%]:
  _317 = stderr;
  __fprintf_chk (_317, 1, "pthread_cond_signal error [%d]! Aborting immediately!\n", ret_316);
  cleanupAndQuit (-7);

  <bb 96> [1.24%]:
  _301 = notTooMuchNumBuffered;
  pthread_cond_broadcast (_301);
  _302 = OutMutex;
  ret_314 = pthread_mutex_unlock (_302);
  if (ret_314 != 0)
    goto <bb 97>; [0.04%]
  else
    goto <bb 98>; [99.96%]

  <bb 97> [0.00%]:
  _315 = stderr;
  __fprintf_chk (_315, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_314);
  cleanupAndQuit (-6);

  <bb 98> [1.24%]:
  _303 = FifoQueue;
  if (_303 != 0B)
    goto <bb 99>; [53.47%]
  else
    goto <bb 105>; [46.53%]

  <bb 99> [0.67%]:
  _304 = _303->mut;
  ret_322 = pthread_mutex_lock (_304);
  if (ret_322 != 0)
    goto <bb 100>; [0.04%]
  else
    goto <bb 101>; [99.96%]

  <bb 100> [0.00%]:
  _323 = stderr;
  __fprintf_chk (_323, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_322);
  cleanupAndQuit (-5);

  <bb 101> [0.66%]:
  _305 = FifoQueue;
  _306 = _305->notFull;
  pthread_cond_broadcast (_306);
  _307 = FifoQueue;
  _308 = _307->notEmpty;
  pthread_cond_broadcast (_308);
  _309 = FifoQueue;
  _310 = _309->mut;
  ret_320 = pthread_mutex_unlock (_310);
  if (ret_320 != 0)
    goto <bb 102>; [0.04%]
  else
    goto <bb 105>; [99.96%]

  <bb 102> [0.00%]:
  _321 = stderr;
  __fprintf_chk (_321, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_320);
  cleanupAndQuit (-6);

  <bb 103> [0.15%]:
  _311 = OutMutex;
  ret_324 = pthread_mutex_unlock (_311);
  if (ret_324 != 0)
    goto <bb 104>; [0.04%]
  else
    goto <bb 105>; [99.96%]

  <bb 104> [0.00%]:
  _325 = stderr;
  __fprintf_chk (_325, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_324);
  cleanupAndQuit (-6);

  <bb 105> [6.18%]:
  if (outSequenceNumber_45 > 0)
    goto <bb 106>; [46.68%]
  else
    goto <bb 131>; [53.32%]

  <bb 106> [2.89%]:
  outSequenceNumber_112 = outSequenceNumber_45 + 1;
  _114 = operator new (40, &nothrow);
  if (_114 != 0B)
    goto <bb 107>; [70.00%]
  else
    goto <bb 108>; [30.00%]

  <bb 107> [2.02%]:
  _28 = fileData_493->blockNumber;
  MEM[(struct  &)_114] ={v} {CLOBBER};
  MEM[(struct outBuff *)_114].buf = DecompressedData_40;
  MEM[(struct outBuff *)_114].bufSize = len_104;
  MEM[(struct outBuff *)_114].blockNumber = _28;
  MEM[(struct outBuff *)_114].sequenceNumber = outSequenceNumber_112;
  MEM[(struct outBuff *)_114].inSize = processedIn_103;
  MEM[(struct outBuff *)_114].isLastInSequence = isLast_105;
  MEM[(struct outBuff *)_114].next = 0B;

  <bb 108> [2.89%]:
  if (_114 == 0B)
    goto <bb 109>; [3.00%]
  else
    goto <bb 110>; [97.00%]

  <bb 109> [0.09%]:
  BZ2_bzDecompressEnd (&strm);
  handle_error (1, -1, " *ERROR: Could not allocate memory (nextOutBlock)!  Aborting...\n");
  goto <bb 153>; [100.00%]

  <bb 110> [2.80%]:
  _326 = OutMutex;
  ret_341 = pthread_mutex_lock (_326);
  if (ret_341 != 0)
    goto <bb 111>; [0.04%]
  else
    goto <bb 155>; [99.96%]

  <bb 111> [0.00%]:
  _342 = stderr;
  __fprintf_chk (_342, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_341);
  cleanupAndQuit (-5);

  <bb 155> [2.80%]:

  <bb 112> [20.57%]:
  _327 = NumBufferedTailBlocks;
  _328 = NumBufferedBlocksMax;
  if (_327 < _328)
    goto <bb 125>; [3.75%]
  else
    goto <bb 113>; [96.25%]

  <bb 113> [19.80%]:
  _329 = prevOutBlockInSequence_42->buf;
  if (_329 == 0B)
    goto <bb 125>; [3.75%]
  else
    goto <bb 114>; [96.25%]

  <bb 114> [19.06%]:
  ret_345 = pthread_mutex_lock (&TerminateFlagMutex);
  if (ret_345 != 0)
    goto <bb 115>; [0.04%]
  else
    goto <bb 116>; [99.96%]

  <bb 115> [0.01%]:
  _346 = stderr;
  __fprintf_chk (_346, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_345);
  cleanupAndQuit (-5);

  <bb 116> [19.05%]:
  ret_330 = terminateFlag;
  ret_343 = pthread_mutex_unlock (&TerminateFlagMutex);
  if (ret_343 != 0)
    goto <bb 117>; [0.04%]
  else
    goto <bb 118>; [99.96%]

  <bb 117> [0.01%]:
  _344 = stderr;
  __fprintf_chk (_344, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_343);
  cleanupAndQuit (-6);

  <bb 118> [19.04%]:
  if (ret_330 != 0)
    goto <bb 119>; [3.75%]
  else
    goto <bb 120>; [96.25%]

  <bb 119> [0.71%]:
  _331 = OutMutex;
  pthread_mutex_unlock (_331);
  goto <bb 134>; [100.00%]

  <bb 120> [18.33%]:
  _332 = LastGoodBlock;
  if (_332 != -1)
    goto <bb 121>; [79.76%]
  else
    goto <bb 123>; [20.24%]

  <bb 121> [14.62%]:
  _333 = MEM[(struct outBuff *)_114].blockNumber;
  if (_332 < _333)
    goto <bb 122>; [3.75%]
  else
    goto <bb 123>; [96.25%]

  <bb 122> [0.55%]:
  _334 = OutMutex;
  pthread_mutex_unlock (_334);
  goto <bb 134>; [100.00%]

  <bb 123> [17.78%]:
  _335 = OutMutex;
  _336 = notTooMuchNumBuffered;
  _347 = pthread_cond_wait (_336, _335);
  if (_347 != 0)
    goto <bb 124>; [0.04%]
  else
    goto <bb 158>; [99.96%]

  <bb 158> [17.77%]:
  goto <bb 112>; [100.00%]

  <bb 124> [0.01%]:
  _348 = stderr;
  __fprintf_chk (_348, 1, "pthread_cond_wait error [%d]! Aborting immediately!\n", _347);
  pthread_mutex_unlock (_335);
  cleanupAndQuit (-8);

  <bb 125> [1.51%]:
  prevOutBlockInSequence_42->next = _114;
  _337 = _327 + 1;
  NumBufferedTailBlocks = _337;
  _338 = prevOutBlockInSequence_42->buf;
  if (_338 == 0B)
    goto <bb 126>; [17.43%]
  else
    goto <bb 128>; [82.57%]

  <bb 126> [0.26%]:
  ret_349 = pthread_cond_signal (&OutBufferHeadNotEmpty);
  if (ret_349 != 0)
    goto <bb 127>; [0.04%]
  else
    goto <bb 128>; [99.96%]

  <bb 127> [0.00%]:
  _350 = stderr;
  __fprintf_chk (_350, 1, "pthread_cond_signal error [%d]! Aborting immediately!\n", ret_349);
  cleanupAndQuit (-7);

  <bb 128> [1.51%]:
  _339 = OutMutex;
  ret_351 = pthread_mutex_unlock (_339);
  if (ret_351 != 0)
    goto <bb 129>; [0.04%]
  else
    goto <bb 134>; [99.96%]

  <bb 129> [0.00%]:
  _352 = stderr;
  __fprintf_chk (_352, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_351);
  cleanupAndQuit (-6);

  <bb 131> [3.30%]:
  if (_102 == 0)
    goto <bb 133>; [50.00%]
  else
    goto <bb 132>; [50.00%]

  <bb 132> [1.65%]:

  <bb 133> [3.30%]:
  # _54 = PHI <1(131), 0(132)>
  _30 = fileData_493->blockNumber;
  MEM[(struct  &)&D.5237] ={v} {CLOBBER};
  D.5237.buf = DecompressedData_40;
  D.5237.bufSize = len_104;
  D.5237.blockNumber = _30;
  D.5237.sequenceNumber = _54;
  D.5237.inSize = processedIn_103;
  D.5237.isLastInSequence = isLast_105;
  D.5237.next = 0B;
  _109 = outputBufferAdd (&D.5237, "consumer_decompress");
  D.5237 ={v} {CLOBBER};

  <bb 134> [6.07%]:
  # outSequenceNumber_46 = PHI <outSequenceNumber_112(122), _54(133), outSequenceNumber_112(119), outSequenceNumber_112(128)>
  # addret_53 = PHI <0B(122), _109(133), 0B(119), _114(128)>
  if (addret_53 == 0B)
    goto <bb 135>; [3.00%]
  else
    goto <bb 71>; [97.00%]

  <bb 135> [0.18%]:
  BZ2_bzDecompressEnd (&strm);
  goto <bb 153>; [100.00%]

  <bb 136> [0.78%]:
  if (bzret_52 == 4)
    goto <bb 137>; [34.00%]
  else
    goto <bb 139>; [66.00%]

  <bb 137> [0.26%]:
  _353 = strm.avail_in;
  if (_353 != 0)
    goto <bb 140>; [29.56%]
  else
    goto <bb 138>; [70.44%]

  <bb 138> [0.19%]:
  _354 = MEM[(const struct outBuff *)fileData_493].isLastInSequence;
  if (_354 != 0)
    goto <bb 139>; [54.00%]
  else
    goto <bb 140>; [46.00%]

  <bb 139> [0.61%]:
  _355 = bzret_52 != 4;
  _356 = bzret_52 != 0;
  _357 = _355 & _356;
  if (_357 != 0)
    goto <bb 141>; [29.56%]
  else
    goto <bb 142>; [70.44%]

  <bb 140> [0.16%]:
  _358 = decompressErrCheckSingle (bzret_52, fileData_493, outSequenceNumber_45, &strm, "*ERROR during BZ2_bzDecompress - trailing garbage", 1);
  goto <bb 147>; [100.00%]

  <bb 141> [0.18%]:
  _359 = decompressErrCheckSingle (bzret_52, fileData_493, outSequenceNumber_45, &strm, "*ERROR during BZ2_bzDecompress - failure exit code", 0);
  goto <bb 147>; [100.00%]

  <bb 142> [0.43%]:
  _360 = strm.avail_in;
  if (_360 != 0)
    goto <bb 143>; [29.56%]
  else
    goto <bb 144>; [70.44%]

  <bb 143> [0.13%]:
  _361 = decompressErrCheckSingle (bzret_52, fileData_493, outSequenceNumber_45, &strm, "*ERROR unconsumed in after BZ2_bzDecompress loop", 0);
  goto <bb 147>; [100.00%]

  <bb 144> [0.30%]:
  if (bzret_52 != 4)
    goto <bb 145>; [69.50%]
  else
    goto <bb 147>; [30.50%]

  <bb 145> [0.21%]:
  _362 = MEM[(const struct outBuff *)fileData_493].isLastInSequence;
  if (_362 != 0)
    goto <bb 146>; [36.64%]
  else
    goto <bb 147>; [63.36%]

  <bb 146> [0.08%]:
  _363 = decompressErrCheckSingle (bzret_52, fileData_493, outSequenceNumber_45, &strm, "*ERROR on decompress - last in segment reached before BZ_STREAM_END", 0);

  <bb 147> [0.78%]:
  # _364 = PHI <_358(140), _359(141), _361(143), 0(144), 0(145), _363(146)>
  if (bzret_52 == 4)
    goto <bb 148>; [20.24%]
  else
    goto <bb 150>; [79.76%]

  <bb 148> [0.16%]:
  _123 = BZ2_bzDecompressEnd (&strm);
  _32 = _123 != 0;
  _33 = (unsigned int) _364;
  _34 = _33 <= 1;
  _35 = _32 & _34;
  if (_35 != 0)
    goto <bb 149>; [2.00%]
  else
    goto <bb 150>; [98.00%]

  <bb 149> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR during BZ2_bzDecompressEnd: %d\n", _123);
  goto <bb 153>; [100.00%]

  <bb 150> [0.77%]:
  # prevOutBlockInSequence_43 = PHI <prevOutBlockInSequence_42(147), 0B(148)>
  # outSequenceNumber_47 = PHI <outSequenceNumber_45(147), -1(148)>
  _132 = MEM[(char * &)fileData_493];
  if (_132 != 0B)
    goto <bb 151>; [53.47%]
  else
    goto <bb 152>; [46.53%]

  <bb 151> [0.41%]:
  operator delete [] (_132);
  MEM[(char * &)fileData_493] = 0B;

  <bb 152> [0.77%]:
  if (_364 != 0)
    goto <bb 153>; [2.00%]
  else
    goto <bb 157>; [98.00%]

  <bb 157> [0.75%]:
  goto <bb 3>; [100.00%]

  <bb 153> [7.63%]:
  strm ={v} {CLOBBER};
  return 0B;

}



;; Function _GLOBAL__sub_I__Z20safe_cond_timed_waitP14pthread_cond_tP15pthread_mutex_tiPKc (_GLOBAL__sub_I__Z20safe_cond_timed_waitP14pthread_cond_tP15pthread_mutex_tiPKc, funcdef_no=84, decl_uid=4125, cgraph_uid=34, symbol_order=1959) (executed once)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
_GLOBAL__sub_I__Z20safe_cond_timed_waitP14pthread_cond_tP15pthread_mutex_tiPKc ()
{
  <bb 2> [100.00%]:
  MEM[(struct  &)&OutputBuffer] ={v} {CLOBBER};
  MEM[(struct _Vector_impl *)&OutputBuffer]._M_start = 0B;
  MEM[(struct _Vector_impl *)&OutputBuffer]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&OutputBuffer]._M_end_of_storage = 0B;
  __cxa_atexit (__comp_dtor , &OutputBuffer, &__dso_handle);
  return;

}



;; Function main (main, funcdef_no=46, decl_uid=4172, cgraph_uid=43, symbol_order=796) (executed once)

Disambiguating loop 12 with multiple latches
Merged latch edges of loop 12
Disambiguating loop 24 with multiple latches
Merged latch edges of loop 24
Created preheader block for loop 8
Created preheader block for loop 12
Created preheader block for loop 13
Created preheader block for loop 11
Created preheader block for loop 23
Created preheader block for loop 24
Created preheader block for loop 25
Created preheader block for loop 22
Created preheader block for loop 27
Created preheader block for loop 28
Created preheader block for loop 29
Created preheader block for loop 18
Created preheader block for loop 15
Created preheader block for loop 16
Created preheader block for loop 3
;; 31 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 8
;;  header 227, latch 933
;;  depth 1, outer 0
;;  nodes
;;
;; Loop 12
;;  header 988, latch 248
;;  depth 2, outer 8
;;  nodes: 988 248 284 287 286 285 281 280 278 992 279 275 274 267 258 257 1005 260 259 250 249
;;
;; Loop 13
;;  header 278, latch 279
;;  depth 3, outer 12
;;  nodes: 278 279
;;
;; Loop 14
;;  header 258, latch 1005
;;  depth 3, outer 12
;;  nodes: 258 1005 260 259
;;
;; Loop 11
;;  header 903, latch 907
;;  depth 2, outer 8
;;  nodes: 903 907 905 906 904
;;
;; Loop 23
;;  header 641, latch 1006
;;  depth 2, outer 8
;;  nodes: 641 1006 655 653 654 645 644 643 642
;;
;; Loop 24
;;  header 989, latch 609
;;  depth 2, outer 8
;;  nodes: 989 609 691 694 693 692 689 688 686 996 687 684 683 675 628 627 1007 667 664 665 666 663 638 639 637 631 630 629 619 618 617 611 610
;;
;; Loop 25
;;  header 686, latch 687
;;  depth 3, outer 24
;;  nodes: 686 687
;;
;; Loop 26
;;  header 628, latch 1007
;;  depth 3, outer 24
;;  nodes: 628 1007 667 664 665 666 663 638 639 637 631 630 629
;;
;; Loop 21
;;  header 536, latch 567
;;  depth 2, outer 8
;;  nodes: 536 567 566 565 564 563 560 550 997 1008 556 555 552 551 549 545 546 548 547 540 538 537
;;
;; Loop 22
;;  header 550, latch 1008
;;  depth 3, outer 21
;;  nodes: 550 1008 556 555 552 551
;;
;; Loop 10
;;  header 510, latch 515
;;  depth 2, outer 8
;;  nodes: 510 515 511
;;
;; Loop 27
;;  header 748, latch 1009
;;  depth 2, outer 8
;;  nodes: 748 1009 828 825 822 819 817 818 811 816 814 815 812 813 810 807 805 806 792 999 1010 803 800 797 794 793 789 787 788 784 767 761 763 765 764 762 760 759 1000 766 756 754 751
;;
;; Loop 28
;;  header 792, latch 1010
;;  depth 3, outer 27
;;  nodes: 792 1010 803 800 797 794 793
;;
;; Loop 29
;;  header 759, latch 766
;;  depth 3, outer 27
;;  nodes: 759 766 764 762 760
;;
;; Loop 9
;;  header 733, latch 738
;;  depth 2, outer 8
;;  nodes: 733 738 734
;;
;; Loop 30
;;  header 840, latch 884
;;  depth 2, outer 8
;;  nodes: 840 884 880 881 883 882 875 874 871 870 867 862 860 859 854 852 853 847 844 841
;;
;; Loop 19
;;  header 478, latch 481
;;  depth 2, outer 8
;;  nodes: 478 481 479 480
;;
;; Loop 17
;;  header 490, latch 493
;;  depth 2, outer 8
;;  nodes: 490 493 491 492
;;
;; Loop 20
;;  header 487, latch 488
;;  depth 2, outer 8
;;  nodes: 487 488
;;
;; Loop 18
;;  header 495, latch 496
;;  depth 2, outer 8
;;  nodes: 495 496
;;
;; Loop 15
;;  header 333, latch 1011
;;  depth 2, outer 8
;;  nodes: 333 1011 335 1003 1012 337 336 334
;;
;; Loop 16
;;  header 335, latch 1012
;;  depth 3, outer 15
;;  nodes: 335 1012 337 336
;;
;; Loop 2
;;  header 31, latch 140
;;  depth 1, outer 0
;;  nodes: 31 140 34 38 67 139 37 66 65 64 62 57 55 54 52 51 49 46 43 41 39 40 42 44 47 50 53 56 61 58 63 36 35 33 32 1004 138 68 80 90 100 113 114 115 116 118 119 122 123 124 125 128 129 130 131 132 133 134 135 136 137 109 110 112 111 108 106 102 103 104 101 105 98 96 92 93 94 91 95 88 86 82 83 84 81 85 78 76 74 70 71 72 69 73
;;
;; Loop 3
;;  header 67, latch 138
;;  depth 2, outer 2
;;  nodes: 67 138 68 80 90 100 113 114 115 116 118 119 122 123 124 125 128 129 130 131 132 133 134 135 136 137 109 110 112 111 108 106 102 103 104 101 105 98 96 92 93 94 91 95 88 86 82 83 84 81 85 78 76 74 70 71 72 69 73
;;
;; Loop 7
;;  header 102, latch 105
;;  depth 3, outer 3
;;  nodes: 102 105 104 103
;;
;; Loop 6
;;  header 82, latch 85
;;  depth 3, outer 3
;;  nodes: 82 85 84 83
;;
;; Loop 5
;;  header 92, latch 95
;;  depth 3, outer 3
;;  nodes: 92 95 94 93
;;
;; Loop 4
;;  header 70, latch 73
;;  depth 3, outer 3
;;  nodes: 70 73 72 71
;;
;; Loop 1
;;  header 7, latch 10
;;  depth 1, outer 0
;;  nodes: 7 10 8 9
;; 2 succs { 985 3 }
;; 3 succs { 973 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 11 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 7 }
;; 11 succs { 13 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 16 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 23 18 }
;; 18 succs { 23 19 }
;; 19 succs { 23 20 }
;; 20 succs { 23 21 }
;; 21 succs { 23 22 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 25 26 }
;; 25 succs { 27 28 }
;; 26 succs { 985 }
;; 27 succs { 973 985 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 31 }
;; 31 succs { 141 32 }
;; 32 succs { 33 139 }
;; 33 succs { 34 35 }
;; 34 succs { 140 }
;; 35 succs { 36 1004 }
;; 1004 succs { 67 }
;; 36 succs { 37 38 }
;; 37 succs { 140 }
;; 38 succs { 140 39 }
;; 39 succs { 140 40 }
;; 40 succs { 41 42 }
;; 41 succs { 140 }
;; 42 succs { 43 44 }
;; 43 succs { 140 }
;; 44 succs { 45 46 }
;; 45 succs { 985 }
;; 46 succs { 140 47 }
;; 47 succs { 48 49 }
;; 48 succs { 985 }
;; 49 succs { 140 50 }
;; 50 succs { 51 52 }
;; 51 succs { 140 }
;; 52 succs { 140 53 }
;; 53 succs { 54 55 }
;; 54 succs { 140 }
;; 55 succs { 140 56 }
;; 56 succs { 57 58 }
;; 57 succs { 140 }
;; 58 succs { 59 61 }
;; 59 succs { 985 60 }
;; 60 succs { }
;; 61 succs { 62 63 }
;; 62 succs { 140 }
;; 63 succs { 64 65 }
;; 64 succs { 140 }
;; 65 succs { 66 140 }
;; 66 succs { 140 }
;; 67 succs { 140 68 }
;; 68 succs { 138 129 130 131 132 133 134 135 136 137 120 101 126 81 115 114 116 117 118 119 91 69 122 123 124 125 128 }
;; 69 succs { 70 }
;; 70 succs { 74 71 }
;; 71 succs { 74 72 }
;; 72 succs { 74 73 }
;; 73 succs { 70 }
;; 74 succs { 75 76 }
;; 75 succs { 985 }
;; 76 succs { 77 78 }
;; 77 succs { 973 985 }
;; 78 succs { 79 80 }
;; 79 succs { 973 985 }
;; 80 succs { 138 }
;; 81 succs { 82 }
;; 82 succs { 86 83 }
;; 83 succs { 86 84 }
;; 84 succs { 86 85 }
;; 85 succs { 82 }
;; 86 succs { 87 88 }
;; 87 succs { 985 }
;; 88 succs { 89 90 }
;; 89 succs { 973 985 }
;; 90 succs { 138 }
;; 91 succs { 92 }
;; 92 succs { 96 93 }
;; 93 succs { 96 94 }
;; 94 succs { 96 95 }
;; 95 succs { 92 }
;; 96 succs { 97 98 }
;; 97 succs { 985 }
;; 98 succs { 99 100 }
;; 99 succs { 973 985 }
;; 100 succs { 138 }
;; 101 succs { 102 }
;; 102 succs { 106 103 }
;; 103 succs { 106 104 }
;; 104 succs { 106 105 }
;; 105 succs { 102 }
;; 106 succs { 107 108 }
;; 107 succs { 985 }
;; 108 succs { 109 110 }
;; 109 succs { 113 985 }
;; 110 succs { 111 113 }
;; 111 succs { 112 985 }
;; 112 succs { 113 }
;; 113 succs { 138 }
;; 114 succs { 138 }
;; 115 succs { 138 }
;; 116 succs { 138 }
;; 117 succs { 985 }
;; 118 succs { 138 }
;; 119 succs { 138 }
;; 120 succs { 985 121 }
;; 121 succs { }
;; 122 succs { 138 }
;; 123 succs { 138 }
;; 124 succs { 138 }
;; 125 succs { 138 }
;; 126 succs { 985 127 }
;; 127 succs { }
;; 128 succs { 138 }
;; 129 succs { 138 }
;; 130 succs { 138 }
;; 131 succs { 138 }
;; 132 succs { 138 }
;; 133 succs { 138 }
;; 134 succs { 138 }
;; 135 succs { 138 }
;; 136 succs { 138 }
;; 137 succs { 138 }
;; 138 succs { 67 }
;; 139 succs { 140 }
;; 140 succs { 31 }
;; 141 succs { 142 144 }
;; 142 succs { 143 985 }
;; 143 succs { 973 985 }
;; 144 succs { 145 163 }
;; 145 succs { 146 150 }
;; 146 succs { 147 149 }
;; 147 succs { 148 985 }
;; 148 succs { 973 985 }
;; 149 succs { 163 }
;; 150 succs { 151 155 }
;; 151 succs { 152 154 }
;; 152 succs { 153 985 }
;; 153 succs { 973 985 }
;; 154 succs { 163 }
;; 155 succs { 156 159 }
;; 156 succs { 157 158 }
;; 157 succs { 158 985 }
;; 158 succs { 159 }
;; 159 succs { 160 162 }
;; 160 succs { 161 985 }
;; 161 succs { 973 985 }
;; 162 succs { 163 }
;; 163 succs { 164 165 }
;; 164 succs { 985 165 }
;; 165 succs { 166 173 }
;; 166 succs { 167 169 }
;; 167 succs { 168 173 }
;; 168 succs { 173 985 }
;; 169 succs { 170 171 }
;; 170 succs { 171 }
;; 171 succs { 172 173 }
;; 172 succs { 173 }
;; 173 succs { 174 176 }
;; 174 succs { 175 985 }
;; 175 succs { }
;; 176 succs { 177 179 }
;; 177 succs { 178 179 }
;; 178 succs { 179 985 }
;; 179 succs { 180 181 }
;; 180 succs { 181 }
;; 181 succs { 182 183 }
;; 182 succs { 183 }
;; 183 succs { 184 185 }
;; 184 succs { 973 985 }
;; 185 succs { 186 187 }
;; 186 succs { 973 985 }
;; 187 succs { 188 189 }
;; 188 succs { 189 }
;; 189 succs { 190 207 }
;; 190 succs { 191 206 }
;; 191 succs { 192 985 }
;; 192 succs { 193 194 }
;; 193 succs { 194 985 }
;; 194 succs { 195 199 }
;; 195 succs { 196 985 }
;; 196 succs { 197 198 }
;; 197 succs { 199 985 }
;; 198 succs { 199 985 }
;; 199 succs { 200 985 }
;; 200 succs { 201 202 }
;; 201 succs { 202 985 }
;; 202 succs { 203 206 }
;; 203 succs { 205 204 }
;; 204 succs { 205 }
;; 205 succs { 206 985 }
;; 206 succs { 207 985 }
;; 207 succs { 208 209 }
;; 208 succs { 212 985 }
;; 209 succs { 210 211 }
;; 210 succs { 212 985 }
;; 211 succs { 212 }
;; 212 succs { 973 213 }
;; 213 succs { 214 215 }
;; 214 succs { 215 }
;; 215 succs { 225 216 }
;; 216 succs { 217 218 }
;; 217 succs { 225 219 }
;; 218 succs { 985 }
;; 219 succs { 225 220 }
;; 220 succs { 225 221 }
;; 221 succs { 225 222 }
;; 222 succs { 225 223 }
;; 223 succs { 225 224 }
;; 224 succs { 225 }
;; 225 succs { 226 990 }
;; 990 succs { 227 }
;; 226 succs { 973 985 }
;; 227 succs { 934 228 }
;; 228 succs { 985 229 }
;; 229 succs { 230 308 }
;; 230 succs { 231 235 }
;; 231 succs { 232 985 }
;; 232 succs { 233 234 }
;; 233 succs { 235 985 }
;; 234 succs { 235 985 }
;; 235 succs { 236 240 }
;; 236 succs { 237 985 }
;; 237 succs { 238 241 }
;; 238 succs { 239 985 }
;; 239 succs { 302 985 }
;; 240 succs { 241 }
;; 241 succs { 242 991 }
;; 991 succs { 988 }
;; 242 succs { 243 985 }
;; 243 succs { 244 302 }
;; 244 succs { 245 985 }
;; 245 succs { 246 302 }
;; 246 succs { 247 985 }
;; 247 succs { 302 985 }
;; 248 succs { 988 }
;; 988 succs { 249 985 }
;; 249 succs { 251 250 }
;; 250 succs { 251 257 }
;; 251 succs { 252 985 }
;; 252 succs { 253 302 }
;; 253 succs { 254 985 }
;; 254 succs { 255 302 }
;; 255 succs { 256 985 }
;; 256 succs { 302 985 }
;; 257 succs { 258 }
;; 258 succs { 267 259 }
;; 259 succs { 260 985 }
;; 260 succs { 261 1005 }
;; 1005 succs { 258 }
;; 261 succs { 262 985 }
;; 262 succs { 263 302 }
;; 263 succs { 264 985 }
;; 264 succs { 265 302 }
;; 265 succs { 266 985 }
;; 266 succs { 302 985 }
;; 267 succs { 268 274 }
;; 268 succs { 269 985 }
;; 269 succs { 270 302 }
;; 270 succs { 271 985 }
;; 271 succs { 272 302 }
;; 272 succs { 273 985 }
;; 273 succs { 302 985 }
;; 274 succs { 275 985 }
;; 275 succs { 276 992 }
;; 992 succs { 278 }
;; 276 succs { 277 985 }
;; 277 succs { }
;; 278 succs { 280 279 }
;; 279 succs { 278 }
;; 280 succs { 281 985 }
;; 281 succs { 282 284 }
;; 282 succs { 283 985 }
;; 283 succs { }
;; 284 succs { 285 248 }
;; 285 succs { 286 985 }
;; 286 succs { 288 287 }
;; 287 succs { 248 985 }
;; 288 succs { 289 296 }
;; 289 succs { 290 985 }
;; 290 succs { 291 985 }
;; 291 succs { 292 302 }
;; 292 succs { 293 985 }
;; 293 succs { 294 302 }
;; 294 succs { 295 985 }
;; 295 succs { 302 985 }
;; 296 succs { 297 985 }
;; 297 succs { 298 300 }
;; 298 succs { 299 985 }
;; 299 succs { 300 985 }
;; 300 succs { 301 302 }
;; 301 succs { 302 985 }
;; 302 succs { 973 303 }
;; 303 succs { 304 306 }
;; 304 succs { 305 306 }
;; 305 succs { 306 985 }
;; 306 succs { 307 933 }
;; 307 succs { 933 985 }
;; 308 succs { 985 309 }
;; 309 succs { 310 311 }
;; 310 succs { 311 }
;; 311 succs { 312 360 }
;; 312 succs { 313 360 }
;; 313 succs { 314 985 }
;; 314 succs { 315 318 }
;; 315 succs { 985 316 }
;; 316 succs { 317 985 }
;; 317 succs { 359 985 }
;; 318 succs { 985 319 }
;; 319 succs { 985 320 }
;; 320 succs { 322 321 }
;; 321 succs { 322 326 }
;; 322 succs { 985 323 }
;; 323 succs { 985 324 }
;; 324 succs { 325 985 }
;; 325 succs { 359 985 }
;; 326 succs { 327 329 }
;; 327 succs { 328 985 }
;; 328 succs { 359 985 }
;; 329 succs { 330 343 }
;; 330 succs { 338 331 }
;; 331 succs { 332 1002 }
;; 332 succs { 338 }
;; 1002 succs { 333 }
;; 333 succs { 338 334 }
;; 334 succs { 338 1003 }
;; 1003 succs { 335 }
;; 335 succs { 336 1011 }
;; 1011 succs { 333 }
;; 336 succs { 338 337 }
;; 337 succs { 338 1012 }
;; 1012 succs { 335 }
;; 338 succs { 340 339 }
;; 339 succs { 340 }
;; 340 succs { 341 343 }
;; 341 succs { 342 985 }
;; 342 succs { 359 985 }
;; 343 succs { 344 345 }
;; 344 succs { 985 347 }
;; 345 succs { 346 985 }
;; 346 succs { 359 985 }
;; 347 succs { 979 348 }
;; 348 succs { 349 350 }
;; 349 succs { 354 976 }
;; 350 succs { 351 353 }
;; 351 succs { 352 976 }
;; 352 succs { 354 976 }
;; 353 succs { 354 976 }
;; 354 succs { 355 356 }
;; 355 succs { 356 }
;; 356 succs { 357 358 }
;; 357 succs { 358 }
;; 358 succs { 374 }
;; 359 succs { 933 }
;; 360 succs { 985 361 }
;; 361 succs { 982 362 }
;; 362 succs { 363 364 }
;; 363 succs { 364 }
;; 364 succs { 365 370 }
;; 365 succs { 366 982 }
;; 366 succs { 367 982 }
;; 367 succs { 368 369 }
;; 368 succs { 369 }
;; 369 succs { 933 }
;; 370 succs { 371 982 }
;; 371 succs { 372 373 }
;; 372 succs { 373 }
;; 373 succs { 374 }
;; 374 succs { 985 375 }
;; 375 succs { 985 376 }
;; 376 succs { 377 396 }
;; 377 succs { 378 985 }
;; 378 succs { 379 381 }
;; 379 succs { 380 985 }
;; 380 succs { 395 985 }
;; 381 succs { 382 384 }
;; 382 succs { 383 985 }
;; 383 succs { 395 985 }
;; 384 succs { 385 387 }
;; 385 succs { 386 985 }
;; 386 succs { 395 985 }
;; 387 succs { 388 391 }
;; 388 succs { 389 391 }
;; 389 succs { 390 985 }
;; 390 succs { 395 985 }
;; 391 succs { 392 394 }
;; 392 succs { 393 985 }
;; 393 succs { 395 985 }
;; 394 succs { 397 }
;; 395 succs { 933 }
;; 396 succs { 397 }
;; 397 succs { 398 408 }
;; 398 succs { 399 985 }
;; 399 succs { 400 402 }
;; 400 succs { 401 985 }
;; 401 succs { 403 }
;; 402 succs { 403 985 }
;; 403 succs { 404 408 }
;; 404 succs { 405 407 }
;; 405 succs { 406 985 }
;; 406 succs { 933 985 }
;; 407 succs { 408 }
;; 408 succs { 409 413 }
;; 409 succs { 410 412 }
;; 410 succs { 411 413 }
;; 411 succs { 413 985 }
;; 412 succs { 413 }
;; 413 succs { 414 425 }
;; 414 succs { 415 985 }
;; 415 succs { 417 416 }
;; 416 succs { 417 }
;; 417 succs { 418 985 }
;; 418 succs { 419 420 }
;; 419 succs { 421 985 }
;; 420 succs { 421 985 }
;; 421 succs { 422 423 }
;; 422 succs { 423 985 }
;; 423 succs { 424 425 }
;; 424 succs { 425 985 }
;; 425 succs { 426 432 }
;; 426 succs { 429 427 }
;; 427 succs { 429 428 }
;; 428 succs { 429 }
;; 429 succs { 430 460 }
;; 430 succs { 431 460 }
;; 431 succs { 460 }
;; 432 succs { 433 436 }
;; 433 succs { 436 434 }
;; 434 succs { 436 435 }
;; 435 succs { 436 }
;; 436 succs { 437 460 }
;; 437 succs { 438 441 }
;; 438 succs { 985 439 }
;; 439 succs { 440 441 }
;; 440 succs { 985 934 }
;; 441 succs { 985 442 }
;; 442 succs { 443 447 }
;; 443 succs { 985 444 }
;; 444 succs { 985 445 }
;; 445 succs { 446 447 }
;; 446 succs { 985 447 }
;; 447 succs { 448 450 }
;; 448 succs { 985 449 }
;; 449 succs { 934 985 }
;; 450 succs { 451 453 }
;; 451 succs { 452 985 }
;; 452 succs { 453 985 }
;; 453 succs { 454 933 }
;; 454 succs { 456 455 }
;; 455 succs { 456 459 }
;; 456 succs { 985 457 }
;; 457 succs { 458 459 }
;; 458 succs { 985 459 }
;; 459 succs { 933 }
;; 460 succs { 461 462 }
;; 461 succs { 463 }
;; 462 succs { 463 }
;; 463 succs { 464 469 }
;; 464 succs { 465 467 }
;; 465 succs { 466 469 }
;; 466 succs { 469 985 }
;; 467 succs { 468 469 }
;; 468 succs { 469 985 }
;; 469 succs { 470 472 }
;; 470 succs { 471 985 }
;; 471 succs { 985 }
;; 472 succs { 473 485 }
;; 473 succs { 474 477 }
;; 474 succs { 475 476 }
;; 475 succs { 985 }
;; 476 succs { 477 985 }
;; 477 succs { 478 }
;; 478 succs { 482 479 }
;; 479 succs { 480 481 }
;; 480 succs { 481 }
;; 481 succs { 478 }
;; 482 succs { 483 484 }
;; 483 succs { 484 }
;; 484 succs { 498 }
;; 485 succs { 486 1001 }
;; 1001 succs { 495 }
;; 486 succs { 487 }
;; 487 succs { 489 488 }
;; 488 succs { 487 }
;; 489 succs { 490 }
;; 490 succs { 494 491 }
;; 491 succs { 492 493 }
;; 492 succs { 493 }
;; 493 succs { 490 }
;; 494 succs { 498 }
;; 495 succs { 497 496 }
;; 496 succs { 495 }
;; 497 succs { 498 }
;; 498 succs { 499 502 }
;; 499 succs { 500 985 }
;; 500 succs { 501 985 }
;; 501 succs { }
;; 502 succs { 503 505 }
;; 503 succs { 504 985 }
;; 504 succs { 985 }
;; 505 succs { 506 729 }
;; 506 succs { 507 586 }
;; 507 succs { 508 509 }
;; 508 succs { 509 985 }
;; 509 succs { 510 }
;; 510 succs { 516 511 }
;; 511 succs { 512 515 }
;; 512 succs { 985 513 }
;; 513 succs { 985 514 }
;; 514 succs { 985 973 }
;; 515 succs { 510 }
;; 516 succs { 517 519 }
;; 517 succs { 985 518 }
;; 518 succs { 985 973 }
;; 519 succs { 520 985 }
;; 520 succs { 521 985 }
;; 521 succs { 522 529 }
;; 522 succs { 523 529 }
;; 523 succs { 524 525 }
;; 524 succs { 525 }
;; 525 succs { 526 527 }
;; 526 succs { 528 529 }
;; 527 succs { 528 }
;; 528 succs { 535 578 }
;; 529 succs { 530 531 }
;; 530 succs { 531 }
;; 531 succs { 532 }
;; 532 succs { 533 534 }
;; 533 succs { 534 }
;; 534 succs { 985 }
;; 535 succs { 536 }
;; 536 succs { 537 539 }
;; 537 succs { 538 539 }
;; 538 succs { 540 578 }
;; 539 succs { 568 578 }
;; 540 succs { 541 545 }
;; 541 succs { 542 578 }
;; 542 succs { 543 578 }
;; 543 succs { 544 578 }
;; 544 succs { 577 578 }
;; 545 succs { 546 549 }
;; 546 succs { 547 549 }
;; 547 succs { 548 578 }
;; 548 succs { 549 578 }
;; 549 succs { 997 578 }
;; 997 succs { 550 }
;; 550 succs { 560 551 }
;; 551 succs { 552 578 }
;; 552 succs { 553 555 }
;; 553 succs { 554 578 }
;; 554 succs { 578 }
;; 555 succs { 556 578 }
;; 556 succs { 557 1008 }
;; 1008 succs { 550 }
;; 557 succs { 558 578 }
;; 558 succs { 559 578 }
;; 559 succs { 577 578 }
;; 560 succs { 561 563 }
;; 561 succs { 562 578 }
;; 562 succs { 578 }
;; 563 succs { 564 578 }
;; 564 succs { 565 578 }
;; 565 succs { 566 578 }
;; 566 succs { 567 578 }
;; 567 succs { 536 }
;; 568 succs { 569 570 }
;; 569 succs { 577 578 }
;; 570 succs { 573 571 }
;; 571 succs { 573 572 }
;; 572 succs { 574 578 }
;; 573 succs { 577 578 }
;; 574 succs { 575 578 }
;; 575 succs { 576 578 }
;; 576 succs { 577 578 }
;; 577 succs { 579 584 }
;; 578 succs { 985 }
;; 579 succs { 985 580 }
;; 580 succs { 581 586 }
;; 581 succs { 985 582 }
;; 582 succs { 985 583 }
;; 583 succs { 985 973 }
;; 584 succs { 585 586 }
;; 585 succs { 586 }
;; 586 succs { 587 898 }
;; 587 succs { 588 589 }
;; 588 succs { 589 985 }
;; 589 succs { 590 591 }
;; 590 succs { 985 591 }
;; 591 succs { 592 595 }
;; 592 succs { 593 985 }
;; 593 succs { 594 596 }
;; 594 succs { 727 985 }
;; 595 succs { 596 }
;; 596 succs { 597 600 }
;; 597 succs { 598 599 }
;; 598 succs { 599 985 }
;; 599 succs { 727 985 }
;; 600 succs { 601 604 }
;; 601 succs { 602 985 }
;; 602 succs { 603 605 }
;; 603 succs { 727 985 }
;; 604 succs { 605 }
;; 605 succs { 606 995 }
;; 995 succs { 989 }
;; 606 succs { 607 608 }
;; 607 succs { 608 985 }
;; 608 succs { 727 985 }
;; 609 succs { 989 }
;; 989 succs { 610 985 }
;; 610 succs { 611 985 }
;; 611 succs { 612 617 }
;; 612 succs { 613 985 }
;; 613 succs { 614 615 }
;; 614 succs { 615 985 }
;; 615 succs { 616 727 }
;; 616 succs { 727 985 }
;; 617 succs { 618 985 }
;; 618 succs { 620 619 }
;; 619 succs { 620 627 }
;; 620 succs { 621 985 }
;; 621 succs { 622 623 }
;; 622 succs { 623 985 }
;; 623 succs { 624 625 }
;; 624 succs { 625 985 }
;; 625 succs { 626 727 }
;; 626 succs { 727 985 }
;; 627 succs { 628 }
;; 628 succs { 675 629 }
;; 629 succs { 630 985 }
;; 630 succs { 631 985 }
;; 631 succs { 632 637 }
;; 632 succs { 633 985 }
;; 633 succs { 634 635 }
;; 634 succs { 635 985 }
;; 635 succs { 636 727 }
;; 636 succs { 727 985 }
;; 637 succs { 638 985 }
;; 638 succs { 639 663 }
;; 639 succs { 640 663 }
;; 640 succs { 994 985 }
;; 994 succs { 641 }
;; 641 succs { 642 985 }
;; 642 succs { 695 643 }
;; 643 succs { 644 985 }
;; 644 succs { 645 985 }
;; 645 succs { 646 653 }
;; 646 succs { 647 985 }
;; 647 succs { 648 649 }
;; 648 succs { 649 985 }
;; 649 succs { 650 651 }
;; 650 succs { 651 985 }
;; 651 succs { 652 727 }
;; 652 succs { 727 985 }
;; 653 succs { 654 655 }
;; 654 succs { 655 985 }
;; 655 succs { 656 1006 }
;; 1006 succs { 641 }
;; 656 succs { 657 985 }
;; 657 succs { 658 659 }
;; 658 succs { 659 985 }
;; 659 succs { 660 661 }
;; 660 succs { 661 985 }
;; 661 succs { 662 727 }
;; 662 succs { 727 985 }
;; 663 succs { 665 664 }
;; 664 succs { 665 667 }
;; 665 succs { 666 667 }
;; 666 succs { 667 985 }
;; 667 succs { 668 1007 }
;; 1007 succs { 628 }
;; 668 succs { 669 985 }
;; 669 succs { 670 671 }
;; 670 succs { 671 985 }
;; 671 succs { 672 673 }
;; 672 succs { 673 985 }
;; 673 succs { 674 727 }
;; 674 succs { 727 985 }
;; 675 succs { 676 683 }
;; 676 succs { 677 985 }
;; 677 succs { 678 679 }
;; 678 succs { 679 985 }
;; 679 succs { 680 681 }
;; 680 succs { 681 985 }
;; 681 succs { 682 727 }
;; 682 succs { 727 985 }
;; 683 succs { 684 985 }
;; 684 succs { 685 996 }
;; 996 succs { 686 }
;; 685 succs { 727 985 }
;; 686 succs { 688 687 }
;; 687 succs { 686 }
;; 688 succs { 689 985 }
;; 689 succs { 690 691 }
;; 690 succs { 727 985 }
;; 691 succs { 692 609 }
;; 692 succs { 693 985 }
;; 693 succs { 695 694 }
;; 694 succs { 609 985 }
;; 695 succs { 696 701 }
;; 696 succs { 697 698 }
;; 697 succs { 698 985 }
;; 698 succs { 699 700 }
;; 699 succs { 700 985 }
;; 700 succs { 727 985 }
;; 701 succs { 702 985 }
;; 702 succs { 703 705 }
;; 703 succs { 704 985 }
;; 704 succs { 705 }
;; 705 succs { 706 707 }
;; 706 succs { 727 985 }
;; 707 succs { 708 711 }
;; 708 succs { 709 710 }
;; 709 succs { 710 985 }
;; 710 succs { 727 985 }
;; 711 succs { 712 985 }
;; 712 succs { 713 715 }
;; 713 succs { 714 985 }
;; 714 succs { 715 }
;; 715 succs { 716 719 }
;; 716 succs { 717 718 }
;; 717 succs { 718 985 }
;; 718 succs { 727 985 }
;; 719 succs { 720 726 }
;; 720 succs { 721 985 }
;; 721 succs { 722 724 }
;; 722 succs { 723 985 }
;; 723 succs { 724 }
;; 724 succs { 725 726 }
;; 725 succs { 727 985 }
;; 726 succs { 727 985 }
;; 727 succs { 728 898 }
;; 728 succs { 898 }
;; 729 succs { 730 833 }
;; 730 succs { 731 732 }
;; 731 succs { 732 985 }
;; 732 succs { 733 }
;; 733 succs { 739 734 }
;; 734 succs { 735 738 }
;; 735 succs { 985 736 }
;; 736 succs { 985 737 }
;; 737 succs { 985 973 }
;; 738 succs { 733 }
;; 739 succs { 740 742 }
;; 740 succs { 985 741 }
;; 741 succs { 985 973 }
;; 742 succs { 743 745 }
;; 743 succs { 744 985 }
;; 744 succs { 985 }
;; 745 succs { 746 998 }
;; 746 succs { 747 985 }
;; 747 succs { 985 }
;; 998 succs { 748 }
;; 748 succs { 749 751 }
;; 749 succs { 750 985 }
;; 750 succs { 985 }
;; 751 succs { 752 754 }
;; 752 succs { 753 985 }
;; 753 succs { 985 }
;; 754 succs { 755 756 }
;; 755 succs { 831 985 }
;; 756 succs { 757 1000 }
;; 1000 succs { 759 }
;; 757 succs { 758 985 }
;; 758 succs { 831 985 }
;; 759 succs { 760 985 }
;; 760 succs { 761 762 }
;; 761 succs { 767 }
;; 762 succs { 763 764 }
;; 763 succs { 767 }
;; 764 succs { 765 766 }
;; 765 succs { 767 }
;; 766 succs { 759 }
;; 767 succs { 768 784 }
;; 768 succs { 769 985 }
;; 769 succs { 770 772 }
;; 770 succs { 771 985 }
;; 771 succs { 985 }
;; 772 succs { 773 775 }
;; 773 succs { 774 985 }
;; 774 succs { 985 }
;; 775 succs { 776 778 }
;; 776 succs { 777 985 }
;; 777 succs { 985 }
;; 778 succs { 779 781 }
;; 779 succs { 780 985 }
;; 780 succs { 985 }
;; 781 succs { 782 831 }
;; 782 succs { 783 985 }
;; 783 succs { 985 }
;; 784 succs { 785 787 }
;; 785 succs { 786 985 }
;; 786 succs { 831 985 }
;; 787 succs { 788 789 }
;; 788 succs { 789 }
;; 789 succs { 790 999 }
;; 790 succs { 791 985 }
;; 791 succs { 985 }
;; 999 succs { 792 }
;; 792 succs { 805 793 }
;; 793 succs { 794 985 }
;; 794 succs { 795 797 }
;; 795 succs { 796 985 }
;; 796 succs { 985 }
;; 797 succs { 798 800 }
;; 798 succs { 799 985 }
;; 799 succs { 985 }
;; 800 succs { 801 803 }
;; 801 succs { 802 985 }
;; 802 succs { 985 }
;; 803 succs { 804 1010 }
;; 1010 succs { 792 }
;; 804 succs { 831 985 }
;; 805 succs { 806 807 }
;; 806 succs { 807 }
;; 807 succs { 808 810 }
;; 808 succs { 809 985 }
;; 809 succs { 831 985 }
;; 810 succs { 811 812 }
;; 811 succs { 817 }
;; 812 succs { 813 814 }
;; 813 succs { 814 }
;; 814 succs { 815 816 }
;; 815 succs { 816 }
;; 816 succs { 817 }
;; 817 succs { 818 819 }
;; 818 succs { 819 }
;; 819 succs { 820 822 }
;; 820 succs { 821 985 }
;; 821 succs { 985 }
;; 822 succs { 823 825 }
;; 823 succs { 824 985 }
;; 824 succs { 985 }
;; 825 succs { 826 828 }
;; 826 succs { 827 985 }
;; 827 succs { 985 }
;; 828 succs { 829 1009 }
;; 1009 succs { 748 }
;; 829 succs { 830 985 }
;; 830 succs { 985 }
;; 831 succs { 832 898 }
;; 832 succs { 898 }
;; 833 succs { 834 835 }
;; 834 succs { 835 985 }
;; 835 succs { 836 839 }
;; 836 succs { 837 985 }
;; 837 succs { 838 839 }
;; 838 succs { 896 985 }
;; 839 succs { 840 }
;; 840 succs { 885 841 }
;; 841 succs { 842 844 }
;; 842 succs { 843 985 }
;; 843 succs { 985 }
;; 844 succs { 845 847 }
;; 845 succs { 846 985 }
;; 846 succs { 985 }
;; 847 succs { 848 852 }
;; 848 succs { 849 985 }
;; 849 succs { 850 851 }
;; 850 succs { 851 985 }
;; 851 succs { 896 985 }
;; 852 succs { 854 853 }
;; 853 succs { 854 }
;; 854 succs { 855 859 }
;; 855 succs { 856 985 }
;; 856 succs { 857 858 }
;; 857 succs { 858 985 }
;; 858 succs { 896 985 }
;; 859 succs { 860 985 }
;; 860 succs { 861 862 }
;; 861 succs { 885 }
;; 862 succs { 863 867 }
;; 863 succs { 864 985 }
;; 864 succs { 865 866 }
;; 865 succs { 866 985 }
;; 866 succs { 896 985 }
;; 867 succs { 868 870 }
;; 868 succs { 869 985 }
;; 869 succs { 896 985 }
;; 870 succs { 871 985 }
;; 871 succs { 872 874 }
;; 872 succs { 873 985 }
;; 873 succs { 896 985 }
;; 874 succs { 875 985 }
;; 875 succs { 876 880 }
;; 876 succs { 877 985 }
;; 877 succs { 878 879 }
;; 878 succs { 879 985 }
;; 879 succs { 896 985 }
;; 880 succs { 881 884 }
;; 881 succs { 882 884 }
;; 882 succs { 883 985 }
;; 883 succs { 884 985 }
;; 884 succs { 840 }
;; 885 succs { 886 985 }
;; 886 succs { 887 888 }
;; 887 succs { 888 985 }
;; 888 succs { 889 890 }
;; 889 succs { 890 985 }
;; 890 succs { 891 893 }
;; 891 succs { 892 985 }
;; 892 succs { 985 }
;; 893 succs { 894 896 }
;; 894 succs { 895 985 }
;; 895 succs { 985 }
;; 896 succs { 897 898 }
;; 897 succs { 898 }
;; 898 succs { 899 902 }
;; 899 succs { 985 900 }
;; 900 succs { 901 902 }
;; 901 succs { 985 902 }
;; 902 succs { 993 908 }
;; 993 succs { 903 }
;; 903 succs { 908 904 }
;; 904 succs { 985 905 }
;; 905 succs { 906 907 }
;; 906 succs { 985 907 }
;; 907 succs { 903 }
;; 908 succs { 909 985 }
;; 909 succs { 910 985 }
;; 910 succs { 911 912 }
;; 911 succs { 912 }
;; 912 succs { 913 916 }
;; 913 succs { 985 914 }
;; 914 succs { 915 916 }
;; 915 succs { 985 916 }
;; 916 succs { 917 923 }
;; 917 succs { 919 918 }
;; 918 succs { 919 922 }
;; 919 succs { 985 920 }
;; 920 succs { 921 922 }
;; 921 succs { 985 922 }
;; 922 succs { 923 }
;; 923 succs { 924 929 }
;; 924 succs { 925 985 }
;; 925 succs { 926 985 }
;; 926 succs { 927 929 }
;; 927 succs { 985 928 }
;; 928 succs { 985 929 }
;; 929 succs { 930 931 }
;; 930 succs { 985 934 }
;; 931 succs { 932 933 }
;; 932 succs { 933 985 }
;; 933 succs { 227 }
;; 934 succs { 935 940 }
;; 935 succs { 985 936 }
;; 936 succs { 937 940 }
;; 937 succs { 985 938 }
;; 938 succs { 985 939 }
;; 939 succs { }
;; 940 succs { 941 943 }
;; 941 succs { 942 985 }
;; 942 succs { }
;; 943 succs { 985 944 }
;; 944 succs { 945 946 }
;; 945 succs { 946 985 }
;; 946 succs { 947 985 }
;; 947 succs { 948 985 }
;; 948 succs { 949 951 }
;; 949 succs { 950 985 }
;; 950 succs { 951 985 }
;; 951 succs { 985 952 }
;; 952 succs { 953 954 }
;; 953 succs { 954 985 }
;; 954 succs { 955 956 }
;; 955 succs { 956 }
;; 956 succs { 957 958 }
;; 957 succs { 958 }
;; 958 succs { 959 960 }
;; 959 succs { 960 }
;; 960 succs { 961 962 }
;; 961 succs { 962 }
;; 962 succs { 963 964 }
;; 963 succs { 964 }
;; 964 succs { 965 966 }
;; 965 succs { 966 }
;; 966 succs { 967 968 }
;; 967 succs { 968 }
;; 968 succs { 969 970 }
;; 969 succs { 970 }
;; 970 succs { 971 972 }
;; 971 succs { 972 985 }
;; 972 succs { }
;; 973 succs { 974 975 }
;; 974 succs { 975 }
;; 975 succs { 1 }
;; 976 succs { 977 978 }
;; 977 succs { 978 }
;; 978 succs { 979 }
;; 979 succs { 980 981 }
;; 980 succs { 981 }
;; 981 succs { 985 }
;; 982 succs { 983 984 }
;; 983 succs { 984 }
;; 984 succs { 985 }
;; 985 succs { 986 987 }
;; 986 succs { 987 }
;; 987 succs { }
main (int argc, char * * argv)
{
  int ret;
  int ret;
  int ret;
  int ret;
  char * FileData;
  char * CompressedData;
  off_t CompressedSize;
  off_t bytesLeft;
  off_t inSize;
  unsigned int outSize;
  int percentComplete;
  int hOutfile;
  int currBlock;
  int rret;
  int ret;
  int ret;
  int D.5799;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  int ret;
  size_t bufr;
  int ret;
  int rsize;
  ssize_t D.5735;
  char * buf;
  int ret;
  int ret;
  int ret;
  int ret;
  char * FileData;
  size_t inSize;
  int ret;
  int ret;
  int ret;
  int D.5712;
  int D.5693;
  int D.5691;
  int D.5686;
  struct FILE * stream;
  struct FILE * zStream;
  unsigned char obuf[5000];
  unsigned char unused[5000];
  unsigned char * unusedTmp;
  int bzerr;
  int nread;
  int streamNo;
  int nUnused;
  int i;
  int ret;
  int ret;
  int D.5681;
  int ret;
  CharType bz2header[11];
  CharType bz2ZeroHeader[11];
  int D.5645;
  size_t inBuffCapacity;
  struct BZ2StreamScanner bz2StreamScanner;
  struct outBuff * fileData;
  int D.5621;
  int ret;
  struct outBuff * D.5606;
  struct __normal_iterator __it;
  struct outBuff * D.5604;
  struct __normal_iterator __it;
  struct outBuff * __first;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  struct outBuff * D.5589;
  struct outBuff * __cur;
  long unsigned int __n;
  struct __normal_iterator D.5566;
  struct __normal_iterator D.5565;
  struct vector __tmp;
  long unsigned int __n;
  struct outBuff * __cur;
  long unsigned int __niter;
  struct outBuff * __first;
  int ret;
  struct outBuff emptyElement;
  bool D.5534;
  int D.5529;
  unsigned char * __p1;
  unsigned char * __p;
  unsigned char * __current;
  struct _Iter_equals_iter __pred;
  struct random_access_iterator_tag D.5524;
  struct _Iter_equals_iter __pred;
  struct random_access_iterator_tag D.5523;
  unsigned char * D.5522;
  unsigned char * __first1;
  struct _Iter_equal_to_iter __predicate;
  unsigned char * searchBufEnd;
  struct _Iter_equal_to_iter D.5497;
  unsigned char * D.5496;
  int D.5482;
  int D.5479;
  int D.5476;
  int D.5473;
  int D.5470;
  int D.5467;
  struct FILE * zStream;
  unsigned char obuf[5000];
  unsigned char unused[5000];
  unsigned char * unusedTmp;
  int bzerr;
  int streamNo;
  int nUnused;
  int i;
  int D.5460;
  struct queue * D.5435;
  int D.5430;
  int D.5427;
  int ret;
  int D.5424;
  int ret;
  int D.5419;
  int ret;
  int D.5414;
  int ncpu;
  int D.5409;
  int ret;
  int ret;
  int ret;
  struct stat statbuf;
  struct stat statbuf;
  int close_ret;
  struct stat statbuf;
  struct string bz2Tail;
  struct string tbz2Tail;
  struct string bz2Tail;
  size_t size;
  int errLevelCurrentFile;
  bool switchedMtToSt;
  size_t k;
  size_t j;
  size_t i;
  int fileLoop;
  int ret;
  int force;
  int keep;
  int noThreads;
  int errLevel;
  int testFile;
  int compress;
  int decompress;
  int maxMemorySwitch;
  int maxMemory;
  int blockSize;
  int numBlocks;
  int hOutfile;
  int hInfile;
  int zeroByteFile;
  int readEntireFile;
  int cmdLineTempCount;
  double timeStop;
  double timeStart;
  double timeCalc;
  int numCPUidle;
  int useLoadAverage;
  double loadAvgArray[3];
  double loadAverage;
  struct timezone tz;
  struct timeval tvStopTime;
  struct timeval tvStartTime;
  char stdinFile[2];
  unsigned char tmpBuff[50];
  char cmdLineTemp[2048];
  struct string outFilename;
  char bz2Header[11];
  char * progNamePos;
  char * progName;
  char * InFilename;
  pthread_t output;
  struct allocator D.5398;
  struct string D.5397;
  struct allocator D.5396;
  struct allocator D.5395;
  struct allocator D.5394;
  struct allocator D.5393;
  struct string D.5392;
  char _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  void * _8;
  struct FILE * _9;
  int _11;
  long unsigned int _12;
  char * * _13;
  char * _14;
  char _15;
  char _16;
  int _17;
  long unsigned int _18;
  long unsigned int _19;
  char * * _20;
  int _21;
  int _22;
  int _23;
  int _24;
  int _25;
  int _26;
  int _27;
  char * _28;
  int _29;
  int _30;
  char * _31;
  int _32;
  int _33;
  int _34;
  int _35;
  int _36;
  int _37;
  int _38;
  int _39;
  int _40;
  int _41;
  char * _42;
  char * _43;
  char _44;
  char * _45;
  char _46;
  unsigned char _47;
  unsigned char _48;
  char * _49;
  long unsigned int _50;
  char * _51;
  struct FILE * _52;
  struct FILE * _53;
  char * _54;
  char _55;
  unsigned char _56;
  unsigned char _57;
  char * _58;
  long unsigned int _59;
  char * _60;
  unsigned int _61;
  unsigned int _62;
  struct FILE * _63;
  char * _64;
  char _65;
  unsigned char _66;
  unsigned char _67;
  char * _68;
  long unsigned int _69;
  char * _70;
  unsigned int _71;
  unsigned int _72;
  struct FILE * _73;
  char * _74;
  char _75;
  unsigned char _76;
  unsigned char _77;
  char * _78;
  long unsigned int _79;
  char * _80;
  int _81;
  struct FILE * _82;
  struct FILE * _83;
  char * _84;
  int _85;
  long unsigned int _86;
  long unsigned int _87;
  char * * _88;
  int _89;
  int _90;
  unsigned char _91;
  unsigned char _92;
  char _93;
  bool _94;
  bool _95;
  bool _96;
  struct FILE * _97;
  char * _98;
  struct FILE * _99;
  int _100;
  struct FILE * _101;
  int _102;
  int _103;
  struct FILE * _104;
  char * _105;
  struct FILE * _106;
  int _107;
  long unsigned int _108;
  long unsigned int _109;
  char * * _110;
  int _111;
  struct FILE * _112;
  int _113;
  int _114;
  struct FILE * _115;
  char * _116;
  struct FILE * _117;
  int _118;
  long unsigned int _119;
  long unsigned int _120;
  char * * _121;
  int _122;
  int _123;
  int _124;
  struct FILE * _125;
  struct FILE * _126;
  int _127;
  int _128;
  struct FILE * _129;
  char * _130;
  struct FILE * _131;
  int _132;
  long unsigned int _133;
  long unsigned int _134;
  char * * _135;
  int _136;
  int _137;
  int _141;
  struct FILE * _142;
  double _143;
  int _144;
  int _145;
  int _146;
  struct FILE * _147;
  struct FILE * _148;
  int _149;
  int _150;
  int _151;
  struct FILE * _152;
  struct FILE * _153;
  int _154;
  struct FILE * _155;
  struct FILE * _156;
  int _157;
  struct FILE * _158;
  int _159;
  struct FILE * _160;
  int _161;
  int _162;
  struct FILE * _163;
  int _164;
  struct FILE * _165;
  struct FILE * _166;
  int _167;
  struct FILE * _168;
  int _169;
  long unsigned int _170;
  long unsigned int _171;
  char * * _172;
  int _173;
  int _174;
  int _175;
  struct FILE * _176;
  int _177;
  struct FILE * _178;
  struct FILE * _179;
  int _180;
  struct FILE * _181;
  int _182;
  struct FILE * _183;
  int _184;
  int * _185;
  int _186;
  struct FILE * _187;
  struct FILE * _188;
  struct FILE * _189;
  long unsigned int _190;
  long unsigned int _191;
  long unsigned int _192;
  long unsigned int _193;
  struct FILE * _194;
  struct FILE * _195;
  struct FILE * _196;
  struct FILE * _197;
  struct FILE * _198;
  long unsigned int _199;
  unsigned int _200;
  unsigned int _201;
  int _202;
  unsigned int _203;
  unsigned int _204;
  int _205;
  long unsigned int _206;
  unsigned int _207;
  unsigned int _208;
  int _209;
  struct FILE * _210;
  struct FILE * _211;
  unsigned char _212;
  unsigned char _213;
  char _214;
  struct FILE * _215;
  struct FILE * _216;
  long unsigned int _217;
  long unsigned int _218;
  struct FILE * _219;
  struct FILE * _220;
  int _221;
  struct FILE * _222;
  struct FILE * _223;
  unsigned int _224;
  unsigned int _225;
  struct FILE * _226;
  struct FILE * _227;
  struct FILE * _228;
  struct FILE * _229;
  long int _230;
  struct FILE * _231;
  struct FILE * _232;
  struct FILE * _234;
  struct FILE * _235;
  int _236;
  struct FILE * _237;
  struct FILE * _238;
  int _239;
  struct FILE * _240;
  long int _241;
  int _242;
  long int _243;
  long int _244;
  int _245;
  int _246;
  int _247;
  struct FILE * _248;
  struct FILE * _249;
  int _250;
  struct FILE * _251;
  struct FILE * _252;
  char _253;
  int _254;
  struct FILE * _255;
  int _256;
  long int _257;
  long unsigned int _258;
  struct FILE * _259;
  int _260;
  long int _261;
  int _262;
  long int _263;
  long int _264;
  long int _265;
  long int _266;
  long int _267;
  int _268;
  int _269;
  int _270;
  bool _271;
  bool _272;
  bool _273;
  struct FILE * _274;
  int _275;
  struct FILE * _276;
  struct FILE * _277;
  int _278;
  int _279;
  long unsigned int _280;
  int _281;
  int _282;
  int _283;
  long unsigned int _284;
  long unsigned int _285;
  long unsigned int _286;
  long unsigned int _287;
  int _288;
  long unsigned int _289;
  long unsigned int _290;
  long unsigned int _291;
  long unsigned int _292;
  long unsigned int _293;
  struct FILE * _294;
  int _295;
  struct FILE * _296;
  long unsigned int _297;
  int _298;
  struct FILE * _299;
  int _300;
  int _301;
  pthread_t * _302;
  long unsigned int _303;
  pthread_t * _304;
  long unsigned int _305;
  long unsigned int _306;
  long unsigned int _308;
  long unsigned int _309;
  bool _310;
  bool _311;
  bool _312;
  int _313;
  struct FILE * _314;
  int _315;
  struct FILE * _316;
  int _317;
  int _318;
  pthread_t * _319;
  long unsigned int _320;
  pthread_t * _321;
  long unsigned int _322;
  long unsigned int _323;
  int _324;
  struct FILE * _325;
  long int _326;
  long unsigned int _327;
  int * _328;
  int _329;
  struct FILE * _330;
  bool _331;
  bool _332;
  int _333;
  int _334;
  pthread_t * _335;
  long unsigned int _336;
  pthread_t * _337;
  long unsigned int _338;
  int * _339;
  int _340;
  struct FILE * _341;
  int _342;
  bool _343;
  bool _344;
  bool _345;
  int _346;
  int _347;
  struct FILE * _348;
  int _349;
  long unsigned int _351;
  struct FILE * _352;
  long unsigned int _353;
  struct FILE * _354;
  long unsigned int _355;
  struct FILE * _356;
  long int _357;
  double _358;
  long int _359;
  double _360;
  double _361;
  long int _362;
  double _363;
  long int _364;
  double _365;
  double _366;
  int _367;
  struct FILE * _368;
  int _479;
  const char * _480;
  const char * _481;
  struct ErrorContext * _558;
  sizetype _569;
  long unsigned int _571;
  struct ErrorContext * _683;
  long int _691;
  unsigned char * _695;
  unsigned char * _697;
  bool _705;
  int _706;
  bool _707;
  long int _708;
  char * _711;
  char * _713;
  struct ErrorContext * _716;
  bool _726;
  int _728;
  char * _732;
  char * _734;
  long int _739;
  int _754;
  int _755;
  long int _758;
  int _761;
  long int _762;
  int _764;
  int _767;
  int _780;
  struct ErrorContext * _787;
  struct ErrorContext * _801;
  int _810;
  struct ErrorContext * _812;
  int _822;
  int _825;
  long int _828;
  int _830;
  int _833;
  int _847;
  struct ErrorContext * _849;
  int _856;
  int _859;
  int _878;
  int _879;
  int _880;
  int _881;
  char * _882;
  long unsigned int _883;
  long unsigned int _884;
  long unsigned int _885;
  long unsigned int _886;
  char * _887;
  char * _888;
  char * _889;
  char * _890;
  long unsigned int _891;
  char * _892;
  char * _893;
  char * _894;
  char * _895;
  char * _896;
  char * _897;
  char * _898;
  char * _899;
  char * _900;
  char * _901;
  char * _902;
  char * _903;
  char * _904;
  char * _905;
  char * _906;
  char * _907;
  char * _908;
  char * _910;
  char * _911;
  char * _912;
  struct outBuff * _913;
  char * _916;
  char * _917;
  char * _918;
  char * _919;
  char * _920;
  long int _1520;
  struct FILE * _1524;
  int _1525;
  long unsigned int _1526;
  struct FILE * _1528;
  int _1534;
  int _1536;
  int _1538;
  int _1541;
  int _1543;
  int _1547;
  void * _1548;
  struct FILE * _1549;
  void * _1550;
  struct FILE * _1551;
  int _1552;
  void * _1553;
  sizetype _1554;
  long unsigned int _1555;
  void * _1556;
  long int _1557;
  void * _1558;
  void * _1559;
  void * _1560;
  void * _1561;
  void * _1562;
  struct queue * _1563;
  int _1564;
  struct FILE * _1565;
  struct ErrorContext * _1566;
  int _1569;
  struct FILE * _1570;
  int _1571;
  BZFILE * _1573;
  int _1574;
  int _1575;
  int _1577;
  struct FILE * _1578;
  int _1580;
  int _1581;
  int _1582;
  struct FILE * _1583;
  int _1584;
  struct FILE * _1585;
  int _1586;
  struct FILE * _1587;
  int _1588;
  unsigned char * _1590;
  sizetype _1591;
  unsigned char * _1592;
  unsigned char _1593;
  int _1595;
  struct FILE * _1596;
  int _1597;
  int _1598;
  int _1599;
  struct ErrorContext * _1600;
  struct FILE * _1601;
  struct FILE * _1603;
  int _1604;
  int _1606;
  int * _1607;
  int _1608;
  struct FILE * _1609;
  struct FILE * _1610;
  int _1611;
  int * _1612;
  int _1613;
  struct FILE * _1614;
  struct FILE * _1615;
  int _1616;
  int * _1617;
  int _1618;
  struct FILE * _1619;
  struct FILE * _1620;
  int _1621;
  int * _1622;
  int _1623;
  struct FILE * _1624;
  struct FILE * _1625;
  int _1626;
  int * _1627;
  int _1628;
  struct FILE * _1629;
  struct FILE * _1630;
  int _1631;
  int * _1632;
  int _1633;
  struct FILE * _1634;
  struct FILE * _1635;
  sizetype _1636;
  sizetype _1638;
  unsigned char * _1639;
  unsigned char * _1641;
  bool _1642;
  bool _1643;
  bool _1644;
  unsigned char * _1646;
  unsigned char * _1648;
  unsigned char _1651;
  unsigned char _1653;
  unsigned char * _1656;
  int _1657;
  int _1658;
  struct ErrorContext * _1659;
  bool _1660;
  union pthread_mutex_t * _1661;
  struct outBuff * _1662;
  long int _1663;
  struct outBuff * _1664;
  long int _1665;
  long int _1666;
  long int _1667;
  long unsigned int _1668;
  struct FILE * _1669;
  union pthread_mutex_t * _1670;
  union pthread_mutex_t * _1671;
  struct FILE * _1673;
  struct outBuff * _1674;
  long int _1675;
  struct outBuff * _1676;
  long int _1677;
  long int _1678;
  long int _1679;
  long unsigned int _1680;
  struct outBuff * _1683;
  struct outBuff * _1685;
  struct outBuff * _1687;
  struct outBuff * _1688;
  long int _1689;
  long int _1690;
  long int _1691;
  long unsigned int _1692;
  struct outBuff * _1693;
  long int _1694;
  struct outBuff * _1695;
  long int _1696;
  long int _1697;
  long int _1698;
  long unsigned int _1699;
  long unsigned int _1700;
  long unsigned int _1711;
  struct outBuff * _1712;
  long unsigned int _1717;
  struct outBuff * _1718;
  struct outBuff * _1719;
  struct FILE * _1727;
  struct outBuff * _1728;
  unsigned int _1729;
  struct outBuff * _1730;
  unsigned int _1731;
  int _1732;
  int _1733;
  union pthread_mutex_t * _1734;
  union pthread_cond_t * _1735;
  union pthread_mutex_t * _1736;
  int _1737;
  struct outBuff * _1738;
  unsigned int _1739;
  long unsigned int _1740;
  struct FILE * _1741;
  struct FILE * _1742;
  union pthread_mutex_t * _1743;
  int _1744;
  union pthread_mutex_t * _1745;
  union pthread_cond_t * _1746;
  int _1747;
  int _1748;
  union pthread_cond_t * _1749;
  union pthread_mutex_t * _1750;
  struct outBuff * _1751;
  union pthread_cond_t * _1752;
  unsigned int _1754;
  long int _1755;
  long int _1756;
  long int _1757;
  int _1758;
  int _1759;
  union pthread_mutex_t * _1760;
  struct outBuff * _1761;
  struct outBuff * _1762;
  unsigned int _1763;
  bool _1764;
  bool _1765;
  union pthread_mutex_t * _1766;
  union pthread_cond_t * _1767;
  union pthread_mutex_t * _1768;
  int _1769;
  unsigned char * _1772;
  unsigned char * _1773;
  long unsigned int _1778;
  long unsigned int _1779;
  void * _1781;
  unsigned int _1782;
  unsigned int _1783;
  int _1785;
  struct FILE * _1786;
  struct FILE * _1788;
  int _1789;
  struct FILE * _1790;
  int _1793;
  struct FILE * _1794;
  int _1795;
  struct FILE * _1796;
  int _1799;
  struct FILE * _1800;
  struct FILE * _1802;
  struct FILE * _1803;
  struct FILE * _1804;
  int _1805;
  BZFILE * _1807;
  int _1808;
  int _1809;
  int _1811;
  struct FILE * _1812;
  struct FILE * _1813;
  int _1815;
  struct FILE * _1817;
  struct FILE * _1818;
  struct FILE * _1819;
  int _1820;
  int _1821;
  int _1822;
  int _1823;
  long unsigned int _1824;
  int _1826;
  int _1827;
  int _1828;
  struct FILE * _1829;
  struct FILE * _1830;
  long unsigned int _1831;
  int _1832;
  int _1833;
  int _1834;
  struct FILE * _1835;
  struct FILE * _1836;
  long unsigned int _1837;
  int _1838;
  int _1839;
  int _1840;
  struct FILE * _1841;
  struct FILE * _1842;
  int _1843;
  struct FILE * _1844;
  struct FILE * _1845;
  int _1846;
  int _1847;
  unsigned char * _1849;
  sizetype _1850;
  unsigned char * _1851;
  unsigned char _1852;
  int _1854;
  int _1855;
  int _1856;
  int _1857;
  struct FILE * _1858;
  struct FILE * _1859;
  int _1861;
  struct FILE * _1862;
  struct FILE * _1864;
  struct FILE * _1865;
  int _1867;
  int _1869;
  struct ErrorContext * _1870;
  int _1871;
  struct ErrorContext * _1872;
  int _1873;
  struct ErrorContext * _1874;
  union pthread_mutex_t * _1880;
  union pthread_cond_t * _1881;
  union pthread_mutex_t * _1882;
  long unsigned int _1883;
  union pthread_mutex_t * _1884;
  int _1885;
  union pthread_mutex_t * _1886;
  union pthread_cond_t * _1887;
  union pthread_mutex_t * _1889;
  void * _1890;
  int _1891;
  unsigned int _1893;
  union pthread_cond_t * _1894;
  int _1895;
  int _1896;
  long int _1897;
  long unsigned int _1898;
  long unsigned int _1899;
  long int _1900;
  union pthread_mutex_t * _1901;
  int _1902;
  struct FILE * _1904;
  struct FILE * _1906;
  struct FILE * _1908;
  struct FILE * _1910;
  long unsigned int _1913;
  long int _1919;
  long int _1920;
  long int _1922;
  long int _1924;
  long unsigned int _1925;
  long int _1927;
  long int _1930;
  union pthread_mutex_t * _1931;
  union pthread_mutex_t * _1932;
  struct FILE * _1934;
  struct FILE * _1936;
  struct FILE * _1938;
  struct FILE * _1940;
  struct FILE * _1942;
  struct FILE * _1944;
  int _1945;
  struct FILE * _1946;
  struct FILE * _1948;
  struct FILE * _1950;
  struct FILE * _1952;
  int _1953;
  struct ElementType * _1954;
  struct ElementType * * _1955;
  long int _1956;
  long unsigned int _1957;
  long unsigned int _1958;
  struct ElementType * * _1959;
  long int _1960;
  long int _1961;
  long int _1962;
  long int _1963;
  long int _1964;
  long int _1965;
  long int _1966;
  long int _1967;
  struct FILE * _1969;
  struct FILE * _1971;
  struct FILE * _1973;
  int _1974;
  int _1975;
  int _1978;
  struct FILE * _1980;
  long int _1981;
  sizetype _1983;
  int _1985;
  long int _1986;
  int _1988;
  long int _1989;
  double _1991;
  double _1992;
  double _1993;
  int _1994;
  unsigned int _1995;
  sizetype _1996;
  int _1999;
  unsigned int _2000;
  int _2001;
  unsigned int _2002;
  long unsigned int _2003;
  long int _2004;
  int _2006;
  long int _2007;
  int _2012;
  int _2013;
  int _2015;
  struct FILE * _2017;
  struct FILE * _2018;
  int _2019;
  int _2020;
  long unsigned int _2021;
  struct FILE * _2022;
  int _2023;
  struct FILE * _2025;
  struct FILE * _2027;
  union pthread_mutex_t * _2028;
  union pthread_mutex_t * _2029;
  struct FILE * _2031;
  struct FILE * _2033;
  union pthread_mutex_t * _2034;
  union pthread_mutex_t * _2035;
  union pthread_mutex_t * _2036;
  union pthread_mutex_t * _2037;
  union pthread_mutex_t * _2038;
  union pthread_mutex_t * _2039;
  union pthread_cond_t * _2040;
  union pthread_cond_t * _2041;
  union pthread_cond_t * _2042;
  union pthread_cond_t * _2043;
  pthread_t * _2044;
  struct ElementType * * _2045;
  union pthread_cond_t * _2046;
  union pthread_cond_t * _2047;

  <bb 2> [25.51%]:
  bz2Header = "BZh91AY&SY";
  MEM[(struct  &)&outFilename] ={v} {CLOBBER};
  MEM[(struct  &)&outFilename] ={v} {CLOBBER};
  MEM[(struct _Alloc_hider *)&outFilename]._M_p = &outFilename.D.4158._M_local_buf;
  outFilename._M_string_length = 0;
  MEM[(char_type &)&outFilename + 16] = 0;
  stdinFile = "-";
  _558 = getInstance ();

  <bb 3> [25.51%]:
  if (_558 == 0B)
    goto <bb 973>; [46.53%]
  else
    goto <bb 4>; [53.47%]

  <bb 4> [13.64%]:
  gettimeofday (&tvStartTime, &tz);
  if (argc_560(D) <= 1)
    goto <bb 5>; [36.00%]
  else
    goto <bb 6>; [64.00%]

  <bb 5> [4.91%]:
  OutputStdOut = 1;

  <bb 6> [13.64%]:
  # keep_444 = PHI <0(4), 1(5)>
  progName_563 = *argv_562(D);

  <bb 7> [90.92%]:
  # progName_138 = PHI <progName_563(6), progName_140(10)>
  # progNamePos_139 = PHI <progName_563(6), progNamePos_565(10)>
  _1 = *progNamePos_139;
  if (_1 == 0)
    goto <bb 11>; [15.00%]
  else
    goto <bb 8>; [85.00%]

  <bb 8> [77.28%]:
  if (_1 == 47)
    goto <bb 9>; [34.00%]
  else
    goto <bb 10>; [66.00%]

  <bb 9> [26.28%]:
  progName_564 = progNamePos_139 + 1;

  <bb 10> [77.28%]:
  # progName_140 = PHI <progName_138(8), progName_564(9)>
  progNamePos_565 = progNamePos_139 + 1;
  goto <bb 7>; [100.00%]

  <bb 11> [13.64%]:
  _732 = __builtin_strstr (progName_138, "unzip");
  if (_732 != 0B)
    goto <bb 13>; [70.00%]
  else
    goto <bb 12>; [30.00%]

  <bb 12> [4.09%]:
  _734 = __builtin_strstr (progName_138, "UNZIP");
  if (_734 != 0B)
    goto <bb 13>; [70.00%]
  else
    goto <bb 14>; [30.00%]

  <bb 13> [12.41%]:

  <bb 14> [13.64%]:
  # decompress_409 = PHI <0(12), 1(13)>
  _711 = __builtin_strstr (progName_138, "zcat");
  if (_711 != 0B)
    goto <bb 16>; [70.00%]
  else
    goto <bb 15>; [30.00%]

  <bb 15> [4.09%]:
  _713 = __builtin_strstr (progName_138, "ZCAT");
  if (_713 != 0B)
    goto <bb 16>; [70.00%]
  else
    goto <bb 17>; [30.00%]

  <bb 16> [12.41%]:
  OutputStdOut = 1;

  <bb 17> [13.64%]:
  # decompress_410 = PHI <decompress_409(15), 1(16)>
  # keep_445 = PHI <keep_444(15), 1(16)>
  _2 = strcmp (progName_138, "bzip2");
  if (_2 == 0)
    goto <bb 23>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 18> [6.82%]:
  _3 = strcmp (progName_138, "BZIP2");
  if (_3 == 0)
    goto <bb 23>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 19> [3.41%]:
  _4 = strcmp (progName_138, "bunzip2");
  if (_4 == 0)
    goto <bb 23>; [50.00%]
  else
    goto <bb 20>; [50.00%]

  <bb 20> [1.70%]:
  _5 = strcmp (progName_138, "BUNZIP2");
  if (_5 == 0)
    goto <bb 23>; [50.00%]
  else
    goto <bb 21>; [50.00%]

  <bb 21> [0.85%]:
  _6 = strcmp (progName_138, "bzcat");
  if (_6 == 0)
    goto <bb 23>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 22> [0.43%]:
  _7 = strcmp (progName_138, "BZCAT");
  if (_7 == 0)
    goto <bb 23>; [50.00%]
  else
    goto <bb 24>; [50.00%]

  <bb 23> [13.42%]:
  IgnoreTrailingGarbageFlag = 1;

  <bb 24> [13.64%]:
  FileListCount = 0;
  _569 = (sizetype) argc_560(D);
  if (_569 <= 1152921504606846975)
    goto <bb 25>; [99.96%]
  else
    goto <bb 26>; [0.04%]

  <bb 25> [13.63%]:
  _571 = _569 * 8;
  _8 = operator new [] (_571, &nothrow);
  if (_8 == 0B)
    goto <bb 27>; [30.00%]
  else
    goto <bb 28>; [70.00%]

  <bb 26> [0.01%]:
  __cxa_throw_bad_array_new_length ();

  <bb 27> [4.09%]:
  _9 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Not enough memory!  Aborting...\n", 1, 48, _9);
  goto <bb 973>; [100.00%]

  <bb 28> [9.54%]:
  NumBufferedBlocksMax = 0;
  _1520 = sysconf (84);
  ncpu_1521 = (int) _1520;
  if (ncpu_1521 <= 0)
    goto <bb 29>; [39.77%]
  else
    goto <bb 30>; [60.23%]

  <bb 29> [3.80%]:

  <bb 30> [9.54%]:
  # ncpu_1522 = PHI <ncpu_1521(28), 1(29)>
  numCPU = ncpu_1522;

  <bb 31> [87.39%]:
  # useLoadAverage_370 = PHI <0(30), useLoadAverage_374(140)>
  # readEntireFile_380 = PHI <0(30), readEntireFile_384(140)>
  # blockSize_394 = PHI <900000(30), blockSize_397(140)>
  # maxMemory_401 = PHI <100000000(30), maxMemory_404(140)>
  # maxMemorySwitch_405 = PHI <0(30), maxMemorySwitch_408(140)>
  # decompress_411 = PHI <decompress_410(30), decompress_415(140)>
  # compress_416 = PHI <0(30), compress_420(140)>
  # testFile_421 = PHI <0(30), testFile_425(140)>
  # keep_446 = PHI <keep_445(30), keep_450(140)>
  # force_453 = PHI <0(30), force_457(140)>
  # i_459 = PHI <1(30), i_642(140)>
  _11 = (int) i_459;
  if (_11 >= argc_560(D))
    goto <bb 141>; [2.00%]
  else
    goto <bb 32>; [98.00%]

  <bb 32> [85.64%]:
  _12 = i_459 * 8;
  _13 = argv_562(D) + _12;
  _14 = *_13;
  _15 = *_14;
  if (_15 == 45)
    goto <bb 33>; [34.00%]
  else
    goto <bb 139>; [66.00%]

  <bb 33> [29.12%]:
  _16 = MEM[(char *)_14 + 1B];
  if (_16 == 0)
    goto <bb 34>; [33.00%]
  else
    goto <bb 35>; [67.00%]

  <bb 34> [9.61%]:
  _17 = FileListCount;
  _18 = (long unsigned int) _17;
  _19 = _18 * 8;
  _20 = _8 + _19;
  *_20 = _14;
  _21 = _17 + 1;
  FileListCount = _21;
  goto <bb 140>; [100.00%]

  <bb 35> [19.51%]:
  if (_16 == 45)
    goto <bb 36>; [50.00%]
  else
    goto <bb 1004>; [50.00%]

  <bb 1004> [9.76%]:
  goto <bb 67>; [100.00%]

  <bb 36> [9.75%]:
  _22 = strcmp (_14, "--best");
  if (_22 == 0)
    goto <bb 37>; [33.00%]
  else
    goto <bb 38>; [67.00%]

  <bb 37> [3.22%]:
  BWTblockSize = 9;
  goto <bb 140>; [100.00%]

  <bb 38> [6.54%]:
  _23 = strcmp (_14, "--decompress");
  if (_23 == 0)
    goto <bb 140>; [33.00%]
  else
    goto <bb 39>; [67.00%]

  <bb 39> [4.38%]:
  _24 = strcmp (_14, "--compress");
  if (_24 == 0)
    goto <bb 140>; [33.00%]
  else
    goto <bb 40>; [67.00%]

  <bb 40> [2.93%]:
  _25 = strcmp (_14, "--fast");
  if (_25 == 0)
    goto <bb 41>; [33.00%]
  else
    goto <bb 42>; [67.00%]

  <bb 41> [0.97%]:
  BWTblockSize = 1;
  goto <bb 140>; [100.00%]

  <bb 42> [1.97%]:
  _26 = strcmp (_14, "--force");
  if (_26 == 0)
    goto <bb 43>; [33.00%]
  else
    goto <bb 44>; [67.00%]

  <bb 43> [0.65%]:
  ForceOverwrite = 1;
  goto <bb 140>; [100.00%]

  <bb 44> [1.32%]:
  _27 = strcmp (_14, "--help");
  if (_27 == 0)
    goto <bb 45>; [0.04%]
  else
    goto <bb 46>; [99.96%]

  <bb 45> [0.00%]:
  _28 = *argv_562(D);
  usage (_28, "HELP");

  <bb 46> [1.32%]:
  _29 = strcmp (_14, "--keep");
  if (_29 == 0)
    goto <bb 140>; [33.00%]
  else
    goto <bb 47>; [67.00%]

  <bb 47> [0.88%]:
  _30 = strcmp (_14, "--license");
  if (_30 == 0)
    goto <bb 48>; [0.04%]
  else
    goto <bb 49>; [99.96%]

  <bb 48> [0.00%]:
  _31 = *argv_562(D);
  usage (_31, "HELP");

  <bb 49> [0.88%]:
  _32 = strcmp (_14, "--loadavg");
  if (_32 == 0)
    goto <bb 140>; [33.00%]
  else
    goto <bb 50>; [67.00%]

  <bb 50> [0.59%]:
  _33 = strcmp (_14, "--quiet");
  if (_33 == 0)
    goto <bb 51>; [33.00%]
  else
    goto <bb 52>; [67.00%]

  <bb 51> [0.19%]:
  QuietMode = 1;
  goto <bb 140>; [100.00%]

  <bb 52> [0.40%]:
  _34 = strcmp (_14, "--read");
  if (_34 == 0)
    goto <bb 140>; [33.00%]
  else
    goto <bb 53>; [67.00%]

  <bb 53> [0.27%]:
  _35 = strcmp (_14, "--stdout");
  if (_35 == 0)
    goto <bb 54>; [33.00%]
  else
    goto <bb 55>; [67.00%]

  <bb 54> [0.09%]:
  OutputStdOut = 1;
  goto <bb 140>; [100.00%]

  <bb 55> [0.18%]:
  _36 = strcmp (_14, "--test");
  if (_36 == 0)
    goto <bb 140>; [33.00%]
  else
    goto <bb 56>; [67.00%]

  <bb 56> [0.12%]:
  _37 = strcmp (_14, "--verbose");
  if (_37 == 0)
    goto <bb 57>; [33.00%]
  else
    goto <bb 58>; [67.00%]

  <bb 57> [0.04%]:
  QuietMode = 0;
  goto <bb 140>; [100.00%]

  <bb 58> [0.08%]:
  _38 = strcmp (_14, "--version");
  if (_38 == 0)
    goto <bb 59>; [50.00%]
  else
    goto <bb 61>; [50.00%]

  <bb 59> [0.04%]:
  banner ();

  <bb 60> [0.04%]:
  exit (0);

  <bb 61> [0.04%]:
  _39 = strcmp (_14, "--ignore-trailing-garbage");
  if (_39 == 0)
    goto <bb 62>; [50.00%]
  else
    goto <bb 63>; [50.00%]

  <bb 62> [0.02%]:
  IgnoreTrailingGarbageFlag = 1;
  goto <bb 140>; [100.00%]

  <bb 63> [0.02%]:
  _40 = strcmp (_14, "--ignore-trailing-garbage=1");
  if (_40 == 0)
    goto <bb 64>; [50.00%]
  else
    goto <bb 65>; [50.00%]

  <bb 64> [0.01%]:
  IgnoreTrailingGarbageFlag = 1;
  goto <bb 140>; [100.00%]

  <bb 65> [0.01%]:
  _41 = strcmp (_14, "--ignore-trailing-garbage=0");
  if (_41 == 0)
    goto <bb 66>; [50.00%]
  else
    goto <bb 140>; [50.00%]

  <bb 66> [0.00%]:
  IgnoreTrailingGarbageFlag = 0;
  goto <bb 140>; [100.00%]

  <bb 67> [100.00%]:
  # useLoadAverage_372 = PHI <useLoadAverage_370(1004), useLoadAverage_373(138)>
  # readEntireFile_382 = PHI <readEntireFile_380(1004), readEntireFile_383(138)>
  # blockSize_395 = PHI <blockSize_394(1004), blockSize_396(138)>
  # maxMemory_402 = PHI <maxMemory_401(1004), maxMemory_403(138)>
  # maxMemorySwitch_406 = PHI <maxMemorySwitch_405(1004), maxMemorySwitch_407(138)>
  # decompress_413 = PHI <decompress_411(1004), decompress_414(138)>
  # compress_418 = PHI <compress_416(1004), compress_419(138)>
  # testFile_423 = PHI <testFile_421(1004), testFile_424(138)>
  # keep_448 = PHI <keep_446(1004), keep_449(138)>
  # force_455 = PHI <force_453(1004), force_456(138)>
  # j_463 = PHI <1(1004), j_626(138)>
  _42 = *_13;
  _43 = _42 + j_463;
  _44 = *_43;
  if (_44 == 0)
    goto <bb 140>; [2.00%]
  else
    goto <bb 68>; [98.00%]

  <bb 68> [98.00%]:
  switch (_44) <default: <L26> [3.85%], case 49: <L17> [3.85%], case 50: <L18> [3.85%], case 51: <L19> [3.85%], case 52: <L20> [3.85%], case 53: <L21> [3.85%], case 54: <L22> [3.85%], case 55: <L23> [3.85%], case 56: <L24> [3.85%], case 57: <L25> [3.85%], case 76: <L10> [3.85%], case 83: <L3> [3.85%], case 86: <L15> [3.85%], case 98: <L1> [3.85%], case 99: <L5> [3.85%], case 100: <L4> [3.85%], case 102: <L6> [3.85%], case 104: <L7> [0.04%], case 107: <L8> [3.85%], case 108: <L9> [3.85%], case 109: <L2> [3.85%], case 112: <L0> [3.85%], case 113: <L11> [3.85%], case 114: <L12> [3.85%], case 116: <L13> [3.85%], case 118: <L14> [3.85%], case 122: <L16> [3.85%]>

<L0> [3.77%]:
  k_580 = j_463 + 1;
  __builtin_memcpy (&cmdLineTemp, "2", 2);

  <bb 70> [26.45%]:
  # cmdLineTempCount_376 = PHI <0(69), cmdLineTempCount_582(73)>
  # k_465 = PHI <k_580(69), k_581(73)>
  _45 = _42 + k_465;
  _46 = *_45;
  if (_46 == 0)
    goto <bb 74>; [5.00%]
  else
    goto <bb 71>; [95.00%]

  <bb 71> [25.13%]:
  if (k_465 > 2047)
    goto <bb 74>; [5.00%]
  else
    goto <bb 72>; [95.00%]

  <bb 72> [23.87%]:
  _47 = (unsigned char) _46;
  _48 = _47 + 208;
  if (_48 > 9)
    goto <bb 74>; [5.00%]
  else
    goto <bb 73>; [95.00%]

  <bb 73> [22.68%]:
  k_581 = k_465 + 1;
  cmdLineTempCount_582 = cmdLineTempCount_376 + 1;
  goto <bb 70>; [100.00%]

  <bb 74> [3.77%]:
  if (cmdLineTempCount_376 == 0)
    goto <bb 75>; [0.04%]
  else
    goto <bb 76>; [99.96%]

  <bb 75> [0.00%]:
  _49 = *argv_562(D);
  usage (_49, "Cannot parse -p argument");

  <bb 76> [3.77%]:
  _50 = (long unsigned int) cmdLineTempCount_376;
  _51 = _42 + k_580;
  __builtin___strncpy_chk (&cmdLineTemp, _51, _50, 2048);
  cmdLineTemp[cmdLineTempCount_376] = 0;
  _828 = strtol (&cmdLineTemp, 0B, 10);
  _780 = (int) _828;
  numCPU = _780;
  if (_780 > 4096)
    goto <bb 77>; [2.00%]
  else
    goto <bb 78>; [98.00%]

  <bb 77> [0.08%]:
  _52 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Maximal number of supported processors is 4096!  Aborting...\n", 1, 77, _52);
  goto <bb 973>; [100.00%]

  <bb 78> [3.70%]:
  if (_780 <= 0)
    goto <bb 79>; [2.00%]
  else
    goto <bb 80>; [98.00%]

  <bb 79> [0.07%]:
  _53 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Minimum number of supported processors is 1!  Aborting...\n", 1, 74, _53);
  goto <bb 973>; [100.00%]

  <bb 80> [3.62%]:
  j_586 = _50 + j_463;
  goto <bb 138> (<L26>); [100.00%]

<L1> [3.77%]:
  k_597 = j_463 + 1;
  __builtin_memcpy (&cmdLineTemp, "9", 2);

  <bb 82> [26.45%]:
  # cmdLineTempCount_377 = PHI <0(81), cmdLineTempCount_599(85)>
  # k_466 = PHI <k_597(81), k_598(85)>
  _54 = _42 + k_466;
  _55 = *_54;
  if (_55 == 0)
    goto <bb 86>; [5.00%]
  else
    goto <bb 83>; [95.00%]

  <bb 83> [25.13%]:
  if (k_466 > 2047)
    goto <bb 86>; [5.00%]
  else
    goto <bb 84>; [95.00%]

  <bb 84> [23.87%]:
  _56 = (unsigned char) _55;
  _57 = _56 + 208;
  if (_57 > 9)
    goto <bb 86>; [5.00%]
  else
    goto <bb 85>; [95.00%]

  <bb 85> [22.68%]:
  k_598 = k_466 + 1;
  cmdLineTempCount_599 = cmdLineTempCount_377 + 1;
  goto <bb 82>; [100.00%]

  <bb 86> [3.77%]:
  if (cmdLineTempCount_377 == 0)
    goto <bb 87>; [0.04%]
  else
    goto <bb 88>; [99.96%]

  <bb 87> [0.00%]:
  _58 = *argv_562(D);
  usage (_58, "Cannot parse file block size");

  <bb 88> [3.77%]:
  _59 = (long unsigned int) cmdLineTempCount_377;
  _60 = _42 + k_597;
  __builtin___strncpy_chk (&cmdLineTemp, _60, _59, 2048);
  cmdLineTemp[cmdLineTempCount_377] = 0;
  _762 = strtol (&cmdLineTemp, 0B, 10);
  _755 = (int) _762;
  blockSize_602 = _755 * 100000;
  _61 = (unsigned int) blockSize_602;
  _62 = _61 + 4294867296;
  if (_62 > 999900000)
    goto <bb 89>; [2.00%]
  else
    goto <bb 90>; [98.00%]

  <bb 89> [0.08%]:
  _63 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: File block size Min: 100k and Max: 1000000k!  Aborting...\n", 1, 74, _63);
  goto <bb 973>; [100.00%]

  <bb 90> [3.70%]:
  j_603 = _59 + j_463;
  goto <bb 138> (<L26>); [100.00%]

<L2> [3.77%]:
  k_587 = j_463 + 1;
  __builtin_memcpy (&cmdLineTemp, "1", 2);

  <bb 92> [26.45%]:
  # cmdLineTempCount_378 = PHI <0(91), cmdLineTempCount_589(95)>
  # k_467 = PHI <k_587(91), k_588(95)>
  _64 = _42 + k_467;
  _65 = *_64;
  if (_65 == 0)
    goto <bb 96>; [5.00%]
  else
    goto <bb 93>; [95.00%]

  <bb 93> [25.13%]:
  if (k_467 > 2047)
    goto <bb 96>; [5.00%]
  else
    goto <bb 94>; [95.00%]

  <bb 94> [23.87%]:
  _66 = (unsigned char) _65;
  _67 = _66 + 208;
  if (_67 > 9)
    goto <bb 96>; [5.00%]
  else
    goto <bb 95>; [95.00%]

  <bb 95> [22.68%]:
  k_588 = k_467 + 1;
  cmdLineTempCount_589 = cmdLineTempCount_378 + 1;
  goto <bb 92>; [100.00%]

  <bb 96> [3.77%]:
  if (cmdLineTempCount_378 == 0)
    goto <bb 97>; [0.04%]
  else
    goto <bb 98>; [99.96%]

  <bb 97> [0.00%]:
  _68 = *argv_562(D);
  usage (_68, "Cannot parse -m argument");

  <bb 98> [3.77%]:
  _69 = (long unsigned int) cmdLineTempCount_378;
  _70 = _42 + k_587;
  __builtin___strncpy_chk (&cmdLineTemp, _70, _69, 2048);
  cmdLineTemp[cmdLineTempCount_378] = 0;
  _739 = strtol (&cmdLineTemp, 0B, 10);
  _728 = (int) _739;
  maxMemory_592 = _728 * 1000000;
  _71 = (unsigned int) maxMemory_592;
  _72 = _71 + 4293967296;
  if (_72 > 1999000000)
    goto <bb 99>; [2.00%]
  else
    goto <bb 100>; [98.00%]

  <bb 99> [0.08%]:
  _73 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Memory usage size Min: 1MB and Max: 2000MB!  Aborting...\n", 1, 73, _73);
  goto <bb 973>; [100.00%]

  <bb 100> [3.70%]:
  j_593 = _69 + j_463;
  goto <bb 138> (<L26>); [100.00%]

<L3> [3.77%]:
  k_606 = j_463 + 1;
  __builtin_memcpy (&cmdLineTemp, "0", 2);
  ChildThreadStackSize = -1;

  <bb 102> [26.45%]:
  # cmdLineTempCount_379 = PHI <0(101), cmdLineTempCount_609(105)>
  # k_468 = PHI <k_606(101), k_608(105)>
  _74 = _42 + k_468;
  _75 = *_74;
  if (_75 == 0)
    goto <bb 106>; [5.00%]
  else
    goto <bb 103>; [95.00%]

  <bb 103> [25.13%]:
  if (k_468 > 2047)
    goto <bb 106>; [5.00%]
  else
    goto <bb 104>; [95.00%]

  <bb 104> [23.87%]:
  _76 = (unsigned char) _75;
  _77 = _76 + 208;
  if (_77 > 9)
    goto <bb 106>; [5.00%]
  else
    goto <bb 105>; [95.00%]

  <bb 105> [22.68%]:
  k_608 = k_468 + 1;
  cmdLineTempCount_609 = cmdLineTempCount_379 + 1;
  goto <bb 102>; [100.00%]

  <bb 106> [3.77%]:
  if (cmdLineTempCount_379 == 0)
    goto <bb 107>; [0.04%]
  else
    goto <bb 108>; [99.96%]

  <bb 107> [0.00%]:
  _78 = *argv_562(D);
  usage (_78, "Cannot parse -S argument");

  <bb 108> [3.77%]:
  _79 = (long unsigned int) cmdLineTempCount_379;
  _80 = _42 + k_606;
  __builtin___strncpy_chk (&cmdLineTemp, _80, _79, 2048);
  cmdLineTemp[cmdLineTempCount_379] = 0;
  _708 = strtol (&cmdLineTemp, 0B, 10);
  _706 = (int) _708;
  _81 = _706 * 1024;
  ChildThreadStackSize = _81;
  if (_81 < 0)
    goto <bb 109>; [21.69%]
  else
    goto <bb 110>; [78.31%]

  <bb 109> [0.82%]:
  _82 = stderr;
  __fprintf_chk (_82, 1, "pbzip2: *ERROR: Parsing -S: invalid stack size specified [%d]!  Ignoring...\n", _81);
  goto <bb 113>; [100.00%]

  <bb 110> [2.95%]:
  if (_81 <= 16383)
    goto <bb 111>; [33.00%]
  else
    goto <bb 113>; [67.00%]

  <bb 111> [0.97%]:
  _83 = stderr;
  __fprintf_chk (_83, 1, "pbzip2: *WARNING: Stack size %d bytes less than minumum - adjusting to %d bytes.\n", _81, 16384);

  <bb 112> [0.97%]:
  ChildThreadStackSize = 16384;

  <bb 113> [3.77%]:
  j_614 = _79 + j_463;
  goto <bb 138> (<L26>); [100.00%]

<L4> [3.77%]:
  goto <bb 138> (<L26>); [100.00%]

<L5> [3.77%]:
  OutputStdOut = 1;
  goto <bb 138> (<L26>); [100.00%]

<L6> [3.77%]:
  ForceOverwrite = 1;
  goto <bb 138> (<L26>); [100.00%]

<L7> [0.04%]:
  _84 = *argv_562(D);
  usage (_84, "HELP");

<L8> [3.77%]:
  goto <bb 138> (<L26>); [100.00%]

<L9> [3.77%]:
  goto <bb 138> (<L26>); [100.00%]

<L10> [3.77%]:
  banner ();

  <bb 121> [3.77%]:
  exit (0);

<L11> [3.77%]:
  QuietMode = 1;
  goto <bb 138> (<L26>); [100.00%]

<L12> [3.77%]:
  goto <bb 138> (<L26>); [100.00%]

<L13> [3.77%]:
  goto <bb 138> (<L26>); [100.00%]

<L14> [3.77%]:
  QuietMode = 0;
  goto <bb 138> (<L26>); [100.00%]

<L15> [3.77%]:
  banner ();

  <bb 127> [3.77%]:
  exit (0);

<L16> [3.77%]:
  goto <bb 138> (<L26>); [100.00%]

<L17> [3.77%]:
  BWTblockSize = 1;
  goto <bb 138> (<L26>); [100.00%]

<L18> [3.77%]:
  BWTblockSize = 2;
  goto <bb 138> (<L26>); [100.00%]

<L19> [3.77%]:
  BWTblockSize = 3;
  goto <bb 138> (<L26>); [100.00%]

<L20> [3.77%]:
  BWTblockSize = 4;
  goto <bb 138> (<L26>); [100.00%]

<L21> [3.77%]:
  BWTblockSize = 5;
  goto <bb 138> (<L26>); [100.00%]

<L22> [3.77%]:
  BWTblockSize = 6;
  goto <bb 138> (<L26>); [100.00%]

<L23> [3.77%]:
  BWTblockSize = 7;
  goto <bb 138> (<L26>); [100.00%]

<L24> [3.77%]:
  BWTblockSize = 8;
  goto <bb 138> (<L26>); [100.00%]

<L25> [3.77%]:
  BWTblockSize = 9;

  # useLoadAverage_373 = PHI <useLoadAverage_372(68), useLoadAverage_372(80), useLoadAverage_372(90), useLoadAverage_372(100), useLoadAverage_372(113), useLoadAverage_372(114), useLoadAverage_372(115), useLoadAverage_372(116), useLoadAverage_372(118), 1(119), useLoadAverage_372(122), useLoadAverage_372(123), useLoadAverage_372(124), useLoadAverage_372(125), useLoadAverage_372(128), useLoadAverage_372(129), useLoadAverage_372(130), useLoadAverage_372(131), useLoadAverage_372(132), useLoadAverage_372(133), useLoadAverage_372(134), useLoadAverage_372(135), useLoadAverage_372(136), useLoadAverage_372(137)>
  # readEntireFile_383 = PHI <readEntireFile_382(68), readEntireFile_382(80), readEntireFile_382(90), readEntireFile_382(100), readEntireFile_382(113), readEntireFile_382(114), readEntireFile_382(115), readEntireFile_382(116), readEntireFile_382(118), readEntireFile_382(119), readEntireFile_382(122), 1(123), readEntireFile_382(124), readEntireFile_382(125), readEntireFile_382(128), readEntireFile_382(129), readEntireFile_382(130), readEntireFile_382(131), readEntireFile_382(132), readEntireFile_382(133), readEntireFile_382(134), readEntireFile_382(135), readEntireFile_382(136), readEntireFile_382(137)>
  # blockSize_396 = PHI <blockSize_395(68), blockSize_395(80), blockSize_602(90), blockSize_395(100), blockSize_395(113), blockSize_395(114), blockSize_395(115), blockSize_395(116), blockSize_395(118), blockSize_395(119), blockSize_395(122), blockSize_395(123), blockSize_395(124), blockSize_395(125), blockSize_395(128), blockSize_395(129), blockSize_395(130), blockSize_395(131), blockSize_395(132), blockSize_395(133), blockSize_395(134), blockSize_395(135), blockSize_395(136), blockSize_395(137)>
  # maxMemory_403 = PHI <maxMemory_402(68), maxMemory_402(80), maxMemory_402(90), maxMemory_592(100), maxMemory_402(113), maxMemory_402(114), maxMemory_402(115), maxMemory_402(116), maxMemory_402(118), maxMemory_402(119), maxMemory_402(122), maxMemory_402(123), maxMemory_402(124), maxMemory_402(125), maxMemory_402(128), maxMemory_402(129), maxMemory_402(130), maxMemory_402(131), maxMemory_402(132), maxMemory_402(133), maxMemory_402(134), maxMemory_402(135), maxMemory_402(136), maxMemory_402(137)>
  # maxMemorySwitch_407 = PHI <maxMemorySwitch_406(68), maxMemorySwitch_406(80), maxMemorySwitch_406(90), 1(100), maxMemorySwitch_406(113), maxMemorySwitch_406(114), maxMemorySwitch_406(115), maxMemorySwitch_406(116), maxMemorySwitch_406(118), maxMemorySwitch_406(119), maxMemorySwitch_406(122), maxMemorySwitch_406(123), maxMemorySwitch_406(124), maxMemorySwitch_406(125), maxMemorySwitch_406(128), maxMemorySwitch_406(129), maxMemorySwitch_406(130), maxMemorySwitch_406(131), maxMemorySwitch_406(132), maxMemorySwitch_406(133), maxMemorySwitch_406(134), maxMemorySwitch_406(135), maxMemorySwitch_406(136), maxMemorySwitch_406(137)>
  # decompress_414 = PHI <decompress_413(68), decompress_413(80), decompress_413(90), decompress_413(100), decompress_413(113), 1(114), decompress_413(115), decompress_413(116), decompress_413(118), decompress_413(119), decompress_413(122), decompress_413(123), decompress_413(124), decompress_413(125), decompress_413(128), decompress_413(129), decompress_413(130), decompress_413(131), decompress_413(132), decompress_413(133), decompress_413(134), decompress_413(135), decompress_413(136), decompress_413(137)>
  # compress_419 = PHI <compress_418(68), compress_418(80), compress_418(90), compress_418(100), compress_418(113), compress_418(114), compress_418(115), compress_418(116), compress_418(118), compress_418(119), compress_418(122), compress_418(123), compress_418(124), compress_418(125), 1(128), compress_418(129), compress_418(130), compress_418(131), compress_418(132), compress_418(133), compress_418(134), compress_418(135), compress_418(136), compress_418(137)>
  # testFile_424 = PHI <testFile_423(68), testFile_423(80), testFile_423(90), testFile_423(100), testFile_423(113), testFile_423(114), testFile_423(115), testFile_423(116), testFile_423(118), testFile_423(119), testFile_423(122), testFile_423(123), 1(124), testFile_423(125), testFile_423(128), testFile_423(129), testFile_423(130), testFile_423(131), testFile_423(132), testFile_423(133), testFile_423(134), testFile_423(135), testFile_423(136), testFile_423(137)>
  # keep_449 = PHI <keep_448(68), keep_448(80), keep_448(90), keep_448(100), keep_448(113), keep_448(114), 1(115), keep_448(116), 1(118), keep_448(119), keep_448(122), keep_448(123), keep_448(124), keep_448(125), keep_448(128), keep_448(129), keep_448(130), keep_448(131), keep_448(132), keep_448(133), keep_448(134), keep_448(135), keep_448(136), keep_448(137)>
  # force_456 = PHI <force_455(68), force_455(80), force_455(90), force_455(100), force_455(113), force_455(114), force_455(115), 1(116), force_455(118), force_455(119), force_455(122), force_455(123), force_455(124), force_455(125), force_455(128), force_455(129), force_455(130), force_455(131), force_455(132), force_455(133), force_455(134), force_455(135), force_455(136), force_455(137)>
  # j_464 = PHI <j_463(68), j_586(80), j_603(90), j_593(100), j_614(113), j_463(114), j_463(115), j_463(116), j_463(118), j_463(119), j_463(122), j_463(123), j_463(124), j_463(125), j_463(128), j_463(129), j_463(130), j_463(131), j_463(132), j_463(133), j_463(134), j_463(135), j_463(136), j_463(137)>
<L26> [90.25%]:
  j_626 = j_464 + 1;
  goto <bb 67>; [100.00%]

  <bb 139> [56.52%]:
  _85 = FileListCount;
  _86 = (long unsigned int) _85;
  _87 = _86 * 8;
  _88 = _8 + _87;
  *_88 = _14;
  _89 = _85 + 1;
  FileListCount = _89;

  <bb 140> [77.84%]:
  # useLoadAverage_374 = PHI <useLoadAverage_370(34), useLoadAverage_370(38), useLoadAverage_372(67), useLoadAverage_370(139), useLoadAverage_370(37), useLoadAverage_370(66), useLoadAverage_370(65), useLoadAverage_370(64), useLoadAverage_370(62), useLoadAverage_370(57), useLoadAverage_370(55), useLoadAverage_370(54), useLoadAverage_370(52), useLoadAverage_370(51), 1(49), useLoadAverage_370(46), useLoadAverage_370(43), useLoadAverage_370(41), useLoadAverage_370(39)>
  # readEntireFile_384 = PHI <readEntireFile_380(34), readEntireFile_380(38), readEntireFile_382(67), readEntireFile_380(139), readEntireFile_380(37), readEntireFile_380(66), readEntireFile_380(65), readEntireFile_380(64), readEntireFile_380(62), readEntireFile_380(57), readEntireFile_380(55), readEntireFile_380(54), 1(52), readEntireFile_380(51), readEntireFile_380(49), readEntireFile_380(46), readEntireFile_380(43), readEntireFile_380(41), readEntireFile_380(39)>
  # blockSize_397 = PHI <blockSize_394(34), blockSize_394(38), blockSize_395(67), blockSize_394(139), blockSize_394(37), blockSize_394(66), blockSize_394(65), blockSize_394(64), blockSize_394(62), blockSize_394(57), blockSize_394(55), blockSize_394(54), blockSize_394(52), blockSize_394(51), blockSize_394(49), blockSize_394(46), blockSize_394(43), blockSize_394(41), blockSize_394(39)>
  # maxMemory_404 = PHI <maxMemory_401(34), maxMemory_401(38), maxMemory_402(67), maxMemory_401(139), maxMemory_401(37), maxMemory_401(66), maxMemory_401(65), maxMemory_401(64), maxMemory_401(62), maxMemory_401(57), maxMemory_401(55), maxMemory_401(54), maxMemory_401(52), maxMemory_401(51), maxMemory_401(49), maxMemory_401(46), maxMemory_401(43), maxMemory_401(41), maxMemory_401(39)>
  # maxMemorySwitch_408 = PHI <maxMemorySwitch_405(34), maxMemorySwitch_405(38), maxMemorySwitch_406(67), maxMemorySwitch_405(139), maxMemorySwitch_405(37), maxMemorySwitch_405(66), maxMemorySwitch_405(65), maxMemorySwitch_405(64), maxMemorySwitch_405(62), maxMemorySwitch_405(57), maxMemorySwitch_405(55), maxMemorySwitch_405(54), maxMemorySwitch_405(52), maxMemorySwitch_405(51), maxMemorySwitch_405(49), maxMemorySwitch_405(46), maxMemorySwitch_405(43), maxMemorySwitch_405(41), maxMemorySwitch_405(39)>
  # decompress_415 = PHI <decompress_411(34), 1(38), decompress_413(67), decompress_411(139), decompress_411(37), decompress_411(66), decompress_411(65), decompress_411(64), decompress_411(62), decompress_411(57), decompress_411(55), decompress_411(54), decompress_411(52), decompress_411(51), decompress_411(49), decompress_411(46), decompress_411(43), decompress_411(41), decompress_411(39)>
  # compress_420 = PHI <compress_416(34), compress_416(38), compress_418(67), compress_416(139), compress_416(37), compress_416(66), compress_416(65), compress_416(64), compress_416(62), compress_416(57), compress_416(55), compress_416(54), compress_416(52), compress_416(51), compress_416(49), compress_416(46), compress_416(43), compress_416(41), 1(39)>
  # testFile_425 = PHI <testFile_421(34), testFile_421(38), testFile_423(67), testFile_421(139), testFile_421(37), testFile_421(66), testFile_421(65), testFile_421(64), testFile_421(62), testFile_421(57), 1(55), testFile_421(54), testFile_421(52), testFile_421(51), testFile_421(49), testFile_421(46), testFile_421(43), testFile_421(41), testFile_421(39)>
  # keep_450 = PHI <keep_446(34), keep_446(38), keep_448(67), keep_446(139), keep_446(37), keep_446(66), keep_446(65), keep_446(64), keep_446(62), keep_446(57), keep_446(55), 1(54), keep_446(52), keep_446(51), keep_446(49), 1(46), keep_446(43), keep_446(41), keep_446(39)>
  # force_457 = PHI <force_453(34), force_453(38), force_455(67), force_453(139), force_453(37), force_453(66), force_453(65), force_453(64), force_453(62), force_453(57), force_453(55), force_453(54), force_453(52), force_453(51), force_453(49), force_453(46), 1(43), force_453(41), force_453(39)>
  i_642 = i_459 + 1;
  goto <bb 31>; [100.00%]

  <bb 141> [1.75%]:
  _90 = BWTblockSize;
  _91 = (unsigned char) _90;
  _92 = _91 + 48;
  Bz2HeaderZero[3] = _92;
  _93 = (char) _92;
  bz2Header[3] = _93;
  _94 = compress_416 == 1;
  _95 = decompress_411 == 1;
  _96 = _94 & _95;
  if (_96 != 0)
    goto <bb 142>; [33.00%]
  else
    goto <bb 144>; [67.00%]

  <bb 142> [0.58%]:
  _97 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Can\'t compress and uncompress data at same time.  Aborting!\n", 1, 76, _97);

  <bb 143> [0.58%]:
  _98 = *argv_562(D);
  _99 = stderr;
  __fprintf_chk (_99, 1, "pbzip2: For help type: %s -h\n", _98);
  goto <bb 973>; [100.00%]

  <bb 144> [1.17%]:
  _100 = FileListCount;
  if (_100 == 0)
    goto <bb 145>; [50.00%]
  else
    goto <bb 163>; [50.00%]

  <bb 145> [0.59%]:
  if (testFile_421 == 1)
    goto <bb 146>; [20.24%]
  else
    goto <bb 150>; [79.76%]

  <bb 146> [0.12%]:
  _101 = stdin;
  _102 = fileno (_101);
  _103 = isatty (_102);
  if (_103 != 0)
    goto <bb 147>; [33.00%]
  else
    goto <bb 149>; [67.00%]

  <bb 147> [0.04%]:
  _104 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Won\'t read compressed data from terminal.  Aborting!\n", 1, 69, _104);

  <bb 148> [0.04%]:
  _105 = *argv_562(D);
  _106 = stderr;
  __fprintf_chk (_106, 1, "pbzip2: For help type: %s -h\n", _105);
  goto <bb 973>; [100.00%]

  <bb 149> [0.08%]:
  _107 = FileListCount;
  _108 = (long unsigned int) _107;
  _109 = _108 * 8;
  _110 = _8 + _109;
  *_110 = &stdinFile;
  _111 = _107 + 1;
  FileListCount = _111;
  goto <bb 163>; [100.00%]

  <bb 150> [0.47%]:
  if (decompress_411 == 1)
    goto <bb 151>; [20.24%]
  else
    goto <bb 155>; [79.76%]

  <bb 151> [0.09%]:
  _112 = stdin;
  _113 = fileno (_112);
  _114 = isatty (_113);
  if (_114 != 0)
    goto <bb 152>; [33.00%]
  else
    goto <bb 154>; [67.00%]

  <bb 152> [0.03%]:
  _115 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Won\'t read compressed data from terminal.  Aborting!\n", 1, 69, _115);

  <bb 153> [0.03%]:
  _116 = *argv_562(D);
  _117 = stderr;
  __fprintf_chk (_117, 1, "pbzip2: For help type: %s -h\n", _116);
  goto <bb 973>; [100.00%]

  <bb 154> [0.06%]:
  OutputStdOut = 1;
  _118 = FileListCount;
  _119 = (long unsigned int) _118;
  _120 = _119 * 8;
  _121 = _8 + _120;
  *_121 = &stdinFile;
  _122 = _118 + 1;
  FileListCount = _122;
  goto <bb 163>; [100.00%]

  <bb 155> [0.37%]:
  _123 = OutputStdOut;
  if (_123 == 0)
    goto <bb 156>; [67.00%]
  else
    goto <bb 159>; [33.00%]

  <bb 156> [0.25%]:
  _124 = QuietMode;
  if (_124 != 1)
    goto <bb 157>; [48.88%]
  else
    goto <bb 158>; [51.12%]

  <bb 157> [0.12%]:
  _125 = stderr;
  __builtin_fwrite ("pbzip2: Assuming input data coming from stdin...\n\n", 1, 50, _125);

  <bb 158> [0.25%]:
  OutputStdOut = 1;

  <bb 159> [0.37%]:
  # keep_451 = PHI <keep_446(155), 1(158)>
  _126 = stdout;
  _127 = fileno (_126);
  _128 = isatty (_127);
  if (_128 != 0)
    goto <bb 160>; [33.00%]
  else
    goto <bb 162>; [67.00%]

  <bb 160> [0.12%]:
  _129 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Won\'t write compressed data to terminal.  Aborting!\n", 1, 68, _129);

  <bb 161> [0.12%]:
  _130 = *argv_562(D);
  _131 = stderr;
  __fprintf_chk (_131, 1, "pbzip2: For help type: %s -h\n", _130);
  goto <bb 973>; [100.00%]

  <bb 162> [0.25%]:
  _132 = FileListCount;
  _133 = (long unsigned int) _132;
  _134 = _133 * 8;
  _135 = _8 + _134;
  *_135 = &stdinFile;
  _136 = _132 + 1;
  FileListCount = _136;

  <bb 163> [0.98%]:
  # keep_452 = PHI <keep_446(144), keep_446(149), 1(154), keep_451(162)>
  _137 = QuietMode;
  if (_137 != 1)
    goto <bb 164>; [48.88%]
  else
    goto <bb 165>; [51.12%]

  <bb 164> [0.48%]:
  banner ();

  <bb 165> [0.98%]:
  if (useLoadAverage_370 == 1)
    goto <bb 166>; [34.00%]
  else
    goto <bb 173>; [66.00%]

  <bb 166> [0.33%]:
  ret_661 = getloadavg (&loadAvgArray, 3);
  if (ret_661 != 3)
    goto <bb 167>; [66.00%]
  else
    goto <bb 169>; [34.00%]

  <bb 167> [0.22%]:
  _141 = QuietMode;
  if (_141 != 1)
    goto <bb 168>; [48.88%]
  else
    goto <bb 173>; [51.12%]

  <bb 168> [0.11%]:
  _142 = stderr;
  __builtin_fwrite ("pbzip2:  *WARNING: Could not get load average!  Using requested processors...\n", 1, 78, _142);
  goto <bb 173>; [100.00%]

  <bb 169> [0.11%]:
  loadAverage_662 = loadAvgArray[0];
  _143 = loadAverage_662 + 5.0e-1;
  _144 = (int) _143;
  numCPUidle_663 = ncpu_1522 - _144;
  _145 = numCPU;
  if (_145 > numCPUidle_663)
    goto <bb 170>; [50.00%]
  else
    goto <bb 171>; [50.00%]

  <bb 170> [0.06%]:
  numCPU = numCPUidle_663;

  <bb 171> [0.11%]:
  _146 = numCPU;
  if (_146 <= 0)
    goto <bb 172>; [36.00%]
  else
    goto <bb 173>; [64.00%]

  <bb 172> [0.04%]:
  numCPU = 1;

  <bb 173> [0.98%]:
  # loadAverage_369 = PHI <0.0(165), 0.0(167), 0.0(168), loadAverage_662(171), loadAverage_662(172)>
  # useLoadAverage_375 = PHI <useLoadAverage_370(165), 0(167), 0(168), useLoadAverage_370(171), useLoadAverage_370(172)>
  ret_1523 = pthread_attr_init (&ChildThreadAttributes);
  if (ret_1523 < 0)
    goto <bb 174>; [0.04%]
  else
    goto <bb 176>; [99.96%]

  <bb 174> [0.00%]:
  _1524 = stderr;
  __fprintf_chk (_1524, 1, "Can\'t initialize thread atrributes [err=%d]! Aborting...\n", ret_1523);

  <bb 175> [0.00%]:
  exit (-1);

  <bb 176> [0.98%]:
  _1525 = ChildThreadStackSize;
  if (_1525 > 0)
    goto <bb 177>; [50.69%]
  else
    goto <bb 179>; [49.31%]

  <bb 177> [0.50%]:
  _1526 = (long unsigned int) _1525;
  ret_1527 = pthread_attr_setstacksize (&ChildThreadAttributes, _1526);
  if (ret_1527 != 0)
    goto <bb 178>; [36.64%]
  else
    goto <bb 179>; [63.36%]

  <bb 178> [0.18%]:
  _1528 = stderr;
  __fprintf_chk (_1528, 1, "Can\'t set thread stacksize [err=%d]! Countinue with default one.\n", ret_1527);

  <bb 179> [0.98%]:
  sigInFilename = 0B;
  sigOutFilename = 0B;
  ret_1533 = sigemptyset (&SignalMask);
  _1534 = sigaddset (&SignalMask, 2);
  ret_1535 = ret_1533 | _1534;
  _1536 = sigaddset (&SignalMask, 15);
  ret_1537 = ret_1535 | _1536;
  _1538 = sigaddset (&SignalMask, 6);
  ret_1539 = ret_1537 | _1538;
  _1541 = sigaddset (&SignalMask, 10);
  ret_1542 = ret_1539 | _1541;
  _1543 = sigaddset (&SignalMask, 1);
  ret_1544 = ret_1542 | _1543;
  if (ret_1544 == 0)
    goto <bb 180>; [36.64%]
  else
    goto <bb 181>; [63.36%]

  <bb 180> [0.36%]:
  ret_1545 = pthread_sigmask (0, &SignalMask, 0B);

  <bb 181> [0.98%]:
  # ret_1546 = PHI <ret_1544(179), ret_1545(180)>
  if (ret_1546 == 0)
    goto <bb 182>; [36.64%]
  else
    goto <bb 183>; [63.36%]

  <bb 182> [0.36%]:
  ret_1531 = pthread_create (&SignalHandlerThread, &ChildThreadAttributes, signalHandlerProc, 0B);

  <bb 183> [0.98%]:
  # ret_1532 = PHI <ret_1546(181), ret_1531(182)>
  if (ret_1532 != 0)
    goto <bb 184>; [50.00%]
  else
    goto <bb 185>; [50.00%]

  <bb 184> [0.49%]:
  _147 = stderr;
  __fprintf_chk (_147, 1, "pbzip2: *ERROR: Can\'t setup signal handling [%d]. Aborting!\n", ret_1532);
  goto <bb 973>; [100.00%]

  <bb 185> [0.49%]:
  _1547 = pthread_create (&TerminatorThread, &ChildThreadAttributes, terminatorThreadProc, 0B);
  if (_1547 != 0)
    goto <bb 186>; [33.00%]
  else
    goto <bb 187>; [67.00%]

  <bb 186> [0.16%]:
  _148 = stderr;
  __fprintf_chk (_148, 1, "pbzip2: *ERROR: Can\'t setup terminator thread [%d]. Aborting!\n", _1547);
  goto <bb 973>; [100.00%]

  <bb 187> [0.33%]:
  _149 = numCPU;
  if (_149 <= 0)
    goto <bb 188>; [36.00%]
  else
    goto <bb 189>; [64.00%]

  <bb 188> [0.12%]:
  numCPU = 1;

  <bb 189> [0.33%]:
  _150 = QuietMode;
  if (_150 != 1)
    goto <bb 190>; [79.76%]
  else
    goto <bb 207>; [20.24%]

  <bb 190> [0.26%]:
  if (testFile_421 != 1)
    goto <bb 191>; [66.00%]
  else
    goto <bb 206>; [34.00%]

  <bb 191> [0.17%]:
  _151 = numCPU;
  _152 = stderr;
  __fprintf_chk (_152, 1, "\n         # CPUs: %d\n", _151);

  <bb 192> [0.17%]:
  if (useLoadAverage_375 == 1)
    goto <bb 193>; [20.24%]
  else
    goto <bb 194>; [79.76%]

  <bb 193> [0.03%]:
  _153 = stderr;
  __fprintf_chk (_153, 1, "   Load Average: %.2f\n", loadAverage_369);

  <bb 194> [0.17%]:
  if (decompress_411 != 1)
    goto <bb 195>; [66.00%]
  else
    goto <bb 199>; [34.00%]

  <bb 195> [0.11%]:
  _154 = BWTblockSize;
  _155 = stderr;
  __fprintf_chk (_155, 1, " BWT Block Size: %d00 KB\n", _154);

  <bb 196> [0.11%]:
  if (blockSize_394 <= 99999)
    goto <bb 197>; [50.00%]
  else
    goto <bb 198>; [50.00%]

  <bb 197> [0.06%]:
  _156 = stderr;
  __fprintf_chk (_156, 1, "File Block Size: %d bytes\n", blockSize_394);
  goto <bb 199>; [100.00%]

  <bb 198> [0.06%]:
  _157 = blockSize_394 / 1000;
  _158 = stderr;
  __fprintf_chk (_158, 1, "File Block Size: %d KB\n", _157);

  <bb 199> [0.17%]:
  _159 = maxMemory_401 / 1000000;
  _160 = stderr;
  __fprintf_chk (_160, 1, " Maximum Memory: %d MB\n", _159);

  <bb 200> [0.17%]:
  _161 = ChildThreadStackSize;
  if (_161 > 0)
    goto <bb 201>; [46.68%]
  else
    goto <bb 202>; [53.32%]

  <bb 201> [0.08%]:
  _162 = _161 / 1024;
  _163 = stderr;
  __fprintf_chk (_163, 1, "     Stack Size: %d KB\n", _162);

  <bb 202> [0.17%]:
  if (decompress_411 == 1)
    goto <bb 203>; [34.00%]
  else
    goto <bb 206>; [66.00%]

  <bb 203> [0.06%]:
  _164 = IgnoreTrailingGarbageFlag;
  if (_164 == 1)
    goto <bb 205>; [34.00%]
  else
    goto <bb 204>; [66.00%]

  <bb 204> [0.04%]:

  <bb 205> [0.06%]:
  # _480 = PHI <"on"(203), "off"(204)>
  _165 = stderr;
  __fprintf_chk (_165, 1, " Ignore Trailing Garbage: %s\n", _480);

  <bb 206> [0.26%]:
  _166 = stderr;
  __builtin_fwrite ("-------------------------------------------\n", 1, 44, _166);

  <bb 207> [0.33%]:
  _1548 = operator new (40, &nothrow);
  OutMutex = _1548;
  if (_1548 == 0B)
    goto <bb 208>; [26.74%]
  else
    goto <bb 209>; [73.26%]

  <bb 208> [0.09%]:
  _1549 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Could not allocate memory (OutMutex)!  Aborting...\n", 1, 67, _1549);
  goto <bb 212>; [100.00%]

  <bb 209> [0.24%]:
  pthread_mutex_init (_1548, 0B);
  _1550 = operator new (40, &nothrow);
  ProducerDoneMutex = _1550;
  if (_1550 == 0B)
    goto <bb 210>; [26.74%]
  else
    goto <bb 211>; [73.26%]

  <bb 210> [0.06%]:
  _1551 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Could not allocate memory (ProducerDoneMutex)!  Aborting...\n", 1, 76, _1551);
  goto <bb 212>; [100.00%]

  <bb 211> [0.18%]:
  pthread_mutex_init (_1550, 0B);

  <bb 212> [0.33%]:
  # _1552 = PHI <1(208), 1(210), 0(211)>
  if (_1552 != 0)
    goto <bb 973>; [67.00%]
  else
    goto <bb 213>; [33.00%]

  <bb 213> [0.11%]:
  _167 = numCPU;
  _1553 = operator new (96, &nothrow);
  if (_1553 != 0B)
    goto <bb 214>; [70.00%]
  else
    goto <bb 215>; [30.00%]

  <bb 214> [0.08%]:
  MEM[(struct  &)_1553] ={v} {CLOBBER};
  MEM[(struct queue *)_1553].count = 0;
  MEM[(struct queue *)_1553].lastElement = 0B;

  <bb 215> [0.11%]:
  if (_1553 == 0B)
    goto <bb 225>; [4.07%]
  else
    goto <bb 216>; [95.93%]

  <bb 216> [0.10%]:
  _1554 = (sizetype) _167;
  if (_1554 <= 1152921504606846975)
    goto <bb 217>; [99.96%]
  else
    goto <bb 218>; [0.04%]

  <bb 217> [0.10%]:
  _1555 = _1554 * 8;
  _1556 = operator new [] (_1555, &nothrow);
  MEM[(struct queue *)_1553].qData = _1556;
  if (_1556 == 0B)
    goto <bb 225>; [7.92%]
  else
    goto <bb 219>; [92.08%]

  <bb 218> [0.00%]:
  __cxa_throw_bad_array_new_length ();

  <bb 219> [0.10%]:
  _1557 = (long int) _167;
  MEM[(struct queue *)_1553].size = _1557;
  MEM[(struct queue *)_1553].empty = 1;
  MEM[(struct queue *)_1553].full = 0;
  MEM[(struct queue *)_1553].head = 0;
  MEM[(struct queue *)_1553].tail = 0;
  MEM[(struct queue *)_1553].count = 0;
  MEM[(struct queue *)_1553].lastElement = 0B;
  MEM[(struct queue *)_1553].topLevelFull = 0;
  MEM[(struct queue *)_1553].topLevelEmpty = 1;
  MEM[(struct queue *)_1553].mut = 0B;
  _1558 = operator new (40, &nothrow);
  MEM[(struct queue *)_1553].mut = _1558;
  if (_1558 == 0B)
    goto <bb 225>; [7.92%]
  else
    goto <bb 220>; [92.08%]

  <bb 220> [0.09%]:
  pthread_mutex_init (_1558, 0B);
  MEM[(struct queue *)_1553].notFull = 0B;
  _1559 = operator new (48, &nothrow);
  MEM[(struct queue *)_1553].notFull = _1559;
  if (_1559 == 0B)
    goto <bb 225>; [7.92%]
  else
    goto <bb 221>; [92.08%]

  <bb 221> [0.08%]:
  pthread_cond_init (_1559, 0B);
  MEM[(struct queue *)_1553].notEmpty = 0B;
  _1560 = operator new (48, &nothrow);
  MEM[(struct queue *)_1553].notEmpty = _1560;
  if (_1560 == 0B)
    goto <bb 225>; [7.92%]
  else
    goto <bb 222>; [92.08%]

  <bb 222> [0.07%]:
  pthread_cond_init (_1560, 0B);
  MEM[(struct queue *)_1553].consumers = 0B;
  _1561 = operator new [] (_1555, &nothrow);
  MEM[(struct queue *)_1553].consumers = _1561;
  if (_1561 == 0B)
    goto <bb 225>; [7.92%]
  else
    goto <bb 223>; [92.08%]

  <bb 223> [0.07%]:
  notTooMuchNumBuffered = 0B;
  _1562 = operator new (48, &nothrow);
  notTooMuchNumBuffered = _1562;
  if (_1562 == 0B)
    goto <bb 225>; [7.92%]
  else
    goto <bb 224>; [92.08%]

  <bb 224> [0.06%]:
  pthread_cond_init (_1562, 0B);

  <bb 225> [0.11%]:
  # _1563 = PHI <0B(215), 0B(217), 0B(219), 0B(220), 0B(221), 0B(222), 0B(223), _1553(224)>
  FifoQueue = _1563;
  if (_1563 == 0B)
    goto <bb 226>; [17.43%]
  else
    goto <bb 990>; [82.57%]

  <bb 990> [0.09%]:
  goto <bb 227>; [100.00%]

  <bb 226> [0.02%]:
  _168 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Queue Init failed.  Aborting...\n", 1, 48, _168);
  goto <bb 973>; [100.00%]

  <bb 227> [1.42%]:
  # zeroByteFile_385 = PHI <0(990), zeroByteFile_389(933)>
  # blockSize_398 = PHI <blockSize_394(990), blockSize_400(933)>
  # errLevel_426 = PHI <0(990), errLevel_435(933)>
  # noThreads_437 = PHI <0(990), noThreads_443(933)>
  # fileLoop_458 = PHI <0(990), fileLoop_845(933)>
  _169 = FileListCount;
  if (_169 <= fileLoop_458)
    goto <bb 934>; [2.00%]
  else
    goto <bb 228>; [98.00%]

  <bb 228> [1.39%]:
  producerDone = 0;
  InFileSize = 0;
  NumBlocks = 0;
  _683 = getInstance ();

  <bb 229> [1.39%]:
  pthread_mutex_lock (&_err_ctx_mutex);
  _683->_last_kernel_err_no = 0;
  _683->_first_kernel_err_no = 0;
  pthread_mutex_unlock (&_err_ctx_mutex);
  _170 = (long unsigned int) fileLoop_458;
  _171 = _170 * 8;
  _172 = _8 + _171;
  InFilename_685 = *_172;
  if (testFile_421 != 0)
    goto <bb 230>; [67.00%]
  else
    goto <bb 308>; [33.00%]

  <bb 230> [0.93%]:
  _173 = QuietMode;
  if (_173 != 1)
    goto <bb 231>; [66.00%]
  else
    goto <bb 235>; [34.00%]

  <bb 231> [0.61%]:
  _174 = FileListCount;
  _175 = fileLoop_458 + 1;
  _176 = stderr;
  __fprintf_chk (_176, 1, "      File #: %d of %d\n", _175, _174);

  <bb 232> [0.61%]:
  _177 = strcmp (InFilename_685, "-");
  if (_177 != 0)
    goto <bb 233>; [50.00%]
  else
    goto <bb 234>; [50.00%]

  <bb 233> [0.31%]:
  _178 = stderr;
  __fprintf_chk (_178, 1, "     Testing: %s\n", InFilename_685);
  goto <bb 235>; [100.00%]

  <bb 234> [0.31%]:
  _179 = stderr;
  __builtin_fwrite ("     Testing: <stdin>\n", 1, 22, _179);

  <bb 235> [0.93%]:
  nUnused = 0;
  _1564 = strcmp (InFilename_685, "-");
  if (_1564 != 0)
    goto <bb 236>; [33.00%]
  else
    goto <bb 240>; [67.00%]

  <bb 236> [0.31%]:
  _1565 = fopen (InFilename_685, "rb");

  <bb 237> [0.31%]:
  if (_1565 == 0B)
    goto <bb 238>; [0.43%]
  else
    goto <bb 241>; [99.57%]

  <bb 238> [0.00%]:
  _1566 = getInstance ();

  <bb 239> [0.00%]:
  saveError (_1566);
  handle_error (0, -1, "pbzip2: *ERROR: Could not open input file [%s]!  Skipping...\n", InFilename_685);
  goto <bb 302>; [100.00%]

  <bb 240> [0.62%]:
  zStream_1567 = stdin;

  <bb 241> [0.93%]:
  # zStream_1568 = PHI <_1565(237), zStream_1567(240)>
  _1569 = ferror (zStream_1568);
  if (_1569 != 0)
    goto <bb 242>; [33.00%]
  else
    goto <bb 991>; [67.00%]

  <bb 991> [0.62%]:
  goto <bb 988>; [100.00%]

  <bb 242> [0.31%]:
  handle_error (0, -1, "pbzip2: *ERROR: Problem with stream of file [%s]!  Skipping...\n", InFilename_685);

  <bb 243> [0.31%]:
  _1570 = stdin;
  if (zStream_1568 != _1570)
    goto <bb 244>; [53.47%]
  else
    goto <bb 302>; [46.53%]

  <bb 244> [0.16%]:
  _1606 = fclose (zStream_1568);

  <bb 245> [0.16%]:
  if (_1606 == -1)
    goto <bb 246>; [22.95%]
  else
    goto <bb 302>; [77.05%]

  <bb 246> [0.04%]:
  _1607 = __errno_location ();
  _1608 = *_1607;
  _1609 = stderr;
  syncPrintErrnoMsg (_1609, _1608);

  <bb 247> [0.04%]:
  _1610 = stderr;
  __fprintf_chk (_1610, 1, "pbzip2: *ERROR: Failed to close file [%s]!\n", InFilename_685);
  goto <bb 302>; [100.00%]

  <bb 248> [0.59%]:
  # streamNo_2122 = PHI <streamNo_1579(284), streamNo_1579(287)>

  <bb 988> [1.20%]:
  # streamNo_1576 = PHI <streamNo_2122(248), 0(991)>
  _1571 = nUnused;
  _1573 = BZ2_bzReadOpen (&bzerr, zStream_1568, 0, 0, &unused, _1571);

  <bb 249> [1.20%]:
  if (_1573 == 0B)
    goto <bb 251>; [2.14%]
  else
    goto <bb 250>; [97.86%]

  <bb 250> [1.18%]:
  _1574 = bzerr;
  if (_1574 != 0)
    goto <bb 251>; [2.14%]
  else
    goto <bb 257>; [97.86%]

  <bb 251> [0.05%]:
  _1575 = bzerr;
  _1577 = testBZ2ErrorHandling (_1575, _1573, streamNo_1576);

  <bb 252> [0.05%]:
  _1578 = stdin;
  if (zStream_1568 != _1578)
    goto <bb 253>; [53.47%]
  else
    goto <bb 302>; [46.53%]

  <bb 253> [0.03%]:
  _1611 = fclose (zStream_1568);

  <bb 254> [0.03%]:
  if (_1611 == -1)
    goto <bb 255>; [22.95%]
  else
    goto <bb 302>; [77.05%]

  <bb 255> [0.01%]:
  _1612 = __errno_location ();
  _1613 = *_1612;
  _1614 = stderr;
  syncPrintErrnoMsg (_1614, _1613);

  <bb 256> [0.01%]:
  _1615 = stderr;
  __fprintf_chk (_1615, 1, "pbzip2: *ERROR: Failed to close file [%s]!\n", InFilename_685);
  goto <bb 302>; [100.00%]

  <bb 257> [1.15%]:
  streamNo_1579 = streamNo_1576 + 1;

  <bb 258> [7.98%]:
  _1580 = bzerr;
  if (_1580 != 0)
    goto <bb 267>; [7.50%]
  else
    goto <bb 259>; [92.50%]

  <bb 259> [7.38%]:
  BZ2_bzRead (&bzerr, _1573, &obuf, 5000);

  <bb 260> [7.38%]:
  _1581 = bzerr;
  if (_1581 == -5)
    goto <bb 261>; [7.50%]
  else
    goto <bb 1005>; [92.50%]

  <bb 1005> [6.83%]:
  goto <bb 258>; [100.00%]

  <bb 261> [0.55%]:
  _1582 = testBZ2ErrorHandling (_1581, _1573, streamNo_1579);

  <bb 262> [0.55%]:
  _1583 = stdin;
  if (zStream_1568 != _1583)
    goto <bb 263>; [53.47%]
  else
    goto <bb 302>; [46.53%]

  <bb 263> [0.30%]:
  _1616 = fclose (zStream_1568);

  <bb 264> [0.30%]:
  if (_1616 == -1)
    goto <bb 265>; [22.95%]
  else
    goto <bb 302>; [77.05%]

  <bb 265> [0.07%]:
  _1617 = __errno_location ();
  _1618 = *_1617;
  _1619 = stderr;
  syncPrintErrnoMsg (_1619, _1618);

  <bb 266> [0.07%]:
  _1620 = stderr;
  __fprintf_chk (_1620, 1, "pbzip2: *ERROR: Failed to close file [%s]!\n", InFilename_685);
  goto <bb 302>; [100.00%]

  <bb 267> [0.60%]:
  if (_1580 != 4)
    goto <bb 268>; [2.14%]
  else
    goto <bb 274>; [97.86%]

  <bb 268> [0.01%]:
  _1584 = testBZ2ErrorHandling (_1580, _1573, streamNo_1579);

  <bb 269> [0.01%]:
  _1585 = stdin;
  if (zStream_1568 != _1585)
    goto <bb 270>; [53.47%]
  else
    goto <bb 302>; [46.53%]

  <bb 270> [0.01%]:
  _1621 = fclose (zStream_1568);

  <bb 271> [0.01%]:
  if (_1621 == -1)
    goto <bb 272>; [22.95%]
  else
    goto <bb 302>; [77.05%]

  <bb 272> [0.00%]:
  _1622 = __errno_location ();
  _1623 = *_1622;
  _1624 = stderr;
  syncPrintErrnoMsg (_1624, _1623);

  <bb 273> [0.00%]:
  _1625 = stderr;
  __fprintf_chk (_1625, 1, "pbzip2: *ERROR: Failed to close file [%s]!\n", InFilename_685);
  goto <bb 302>; [100.00%]

  <bb 274> [0.59%]:
  BZ2_bzReadGetUnused (&bzerr, _1573, &unusedTmp, &nUnused);

  <bb 275> [0.59%]:
  _1586 = bzerr;
  if (_1586 != 0)
    goto <bb 276>; [0.04%]
  else
    goto <bb 992>; [99.96%]

  <bb 992> [0.59%]:
  goto <bb 278>; [100.00%]

  <bb 276> [0.00%]:
  _1587 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Unexpected error. Aborting!\n", 1, 44, _1587);

  <bb 277> [0.00%]:
  exit (3);

  <bb 278> [3.90%]:
  # i_1589 = PHI <0(992), i_1594(279)>
  _1588 = nUnused;
  if (_1588 <= i_1589)
    goto <bb 280>; [15.00%]
  else
    goto <bb 279>; [85.00%]

  <bb 279> [3.32%]:
  _1590 = unusedTmp;
  _1591 = (sizetype) i_1589;
  _1592 = _1590 + _1591;
  _1593 = *_1592;
  unused[i_1589] = _1593;
  i_1594 = i_1589 + 1;
  goto <bb 278>; [100.00%]

  <bb 280> [0.59%]:
  BZ2_bzReadClose (&bzerr, _1573);

  <bb 281> [0.59%]:
  _1595 = bzerr;
  if (_1595 != 0)
    goto <bb 282>; [0.04%]
  else
    goto <bb 284>; [99.96%]

  <bb 282> [0.00%]:
  _1596 = stderr;
  __builtin_fwrite ("pbzip2: *ERROR: Unexpected error. Aborting!\n", 1, 44, _1596);

  <bb 283> [0.00%]:
  exit (3);

  <bb 284> [0.59%]:
  _1597 = nUnused;
  if (_1597 == 0)
    goto <bb 285>; [33.00%]
  else
    goto <bb 248>; [67.00%]

  <bb 285> [0.19%]:
  _1598 = fgetc (zStream_1568);

  <bb 286> [0.19%]:
  if (_1598 == -1)
    goto <bb 288>; [2.14%]
  else
    goto <bb 287>; [97.86%]

  <bb 287> [0.19%]:
  ungetc (_1598, zStream_1568);
  goto <bb 248>; [100.00%]

  <bb 288> [0.00%]:
  _1599 = ferror (zStream_1568);
  if (_1599 != 0)
    goto <bb 289>; [50.00%]
  else
    goto <bb 296>; [50.00%]

  <bb 289> [0.00%]:
  _1600 = getInstance ();

  <bb 290> [0.00%]:
  saveError (_1600);
  handle_error (0, -1, "pbzip2: *ERROR: Problem with stream of file [%s]!  Skipping...\n", InFilename_685);

  <bb 291> [0.00%]:
  _1601 = stdin;
  if (zStream_1568 != _1601)
    goto <bb 292>; [53.47%]
  else
    goto <bb 302>; [46.53%]

  <bb 292> [0.00%]:
  _1626 = fclose (zStream_1568);

  <bb 293> [0.00%]:
  if (_1626 == -1)
    goto <bb 294>; [22.95%]
  else
    goto <bb 302>; [77.05%]

  <bb 294> [0.00%]:
  _1627 = __errno_location ();
  _1628 = *_1627;
  _1629 = stderr;
  syncPrintErrnoMsg (_1629, _1628);

  <bb 295> [0.00%]:
  _1630 = stderr;
  __fprintf_chk (_1630, 1, "pbzip2: *ERROR: Failed to close file [%s]!\n", InFilename_685);
  goto <bb 302>; [100.00%]

  <bb 296> [0.00%]:
  _1631 = fclose (zStream_1568);

  <bb 297> [0.00%]:
  if (_1631 == -1)
    goto <bb 298>; [22.95%]
  else
    goto <bb 300>; [77.05%]

  <bb 298> [0.00%]:
  _1632 = __errno_location ();
  _1633 = *_1632;
  _1634 = stderr;
  syncPrintErrnoMsg (_1634, _1633);

  <bb 299> [0.00%]:
  _1635 = stderr;
  __fprintf_chk (_1635, 1, "pbzip2: *ERROR: Failed to close file [%s]!\n", InFilename_685);

  <bb 300> [0.00%]:
  if (_1631 == -1)
    goto <bb 301>; [0.52%]
  else
    goto <bb 302>; [99.48%]

  <bb 301> [0.00%]:
  _1603 = stderr;
  __fprintf_chk (_1603, 1, "pbzip2: *ERROR: Problem closing file [%s]!  Skipping...\n", InFilename_685);

  <bb 302> [0.93%]:
  # _1604 = PHI <-1(239), -1(243), -1(247), _1577(252), _1577(256), _1582(262), _1582(266), _1584(269), _1584(273), -1(291), -1(295), 0(300), -1(301), -1(293), _1584(271), _1582(264), _1577(254), -1(245)>
  obuf ={v} {CLOBBER};
  unused ={v} {CLOBBER};
  unusedTmp ={v} {CLOBBER};
  bzerr ={v} {CLOBBER};
  nUnused ={v} {CLOBBER};
  if (_1604 > 0)
    goto <bb 973>; [2.00%]
  else
    goto <bb 303>; [98.00%]

  <bb 303> [0.91%]:
  if (_1604 == 0)
    goto <bb 304>; [50.00%]
  else
    goto <bb 306>; [50.00%]

  <bb 304> [0.46%]:
  _180 = QuietMode;
  if (_180 != 1)
    goto <bb 305>; [48.88%]
  else
    goto <bb 306>; [51.12%]

  <bb 305> [0.22%]:
  _181 = stderr;
  __builtin_fwrite ("        Test: OK\n", 1, 17, _181);

  <bb 306> [0.91%]:
  # errLevel_427 = PHI <2(303), errLevel_426(304), errLevel_426(305)>
  _182 = QuietMode;
  if (_182 != 1)
    goto <bb 307>; [48.88%]
  else
    goto <bb 933>; [51.12%]

  <bb 307> [0.45%]:
  _183 = stderr;
  __builtin_fwrite ("-------------------------------------------\n", 1, 44, _183);
  goto <bb 933>; [100.00%]

  <bb 308> [0.46%]:
  __comp_ctor  (&D.5392, InFilename_685, &D.5393);

  <bb 309> [0.46%]:
  operator= (&outFilename, &D.5392);
  _882 = D.5392._M_dataplus._M_p;
  if (&D.5392.D.4158._M_local_buf != _882)
    goto <bb 310>; [53.47%]
  else
    goto <bb 311>; [46.53%]

  <bb 310> [0.24%]:
  operator delete (_882);

  <bb 311> [0.46%]:
  D.5392 ={v} {CLOBBER};
  D.5393 ={v} {CLOBBER};
  if (decompress_411 == 1)
    goto <bb 312>; [51.12%]
  else
    goto <bb 360>; [48.88%]

  <bb 312> [0.23%]:
  _184 = strcmp (InFilename_685, "-");
  if (_184 != 0)
    goto <bb 313>; [33.00%]
  else
    goto <bb 360>; [67.00%]

  <bb 313> [0.08%]:
  _878 = __open_alias (InFilename_685, 0);

  <bb 314> [0.08%]:
  if (_878 == -1)
    goto <bb 315>; [20.24%]
  else
    goto <bb 318>; [79.76%]

  <bb 315> [0.02%]:
  _185 = __errno_location ();
  _186 = *_185;
  _187 = stderr;
  printErrnoMsg (_187, _186);

  <bb 316> [0.02%]:
  _188 = stderr;
  __fprintf_chk (_188, 1, "pbzip2: *ERROR: File [%s] NOT found!  Skipping...\n", InFilename_685);

  <bb 317> [0.02%]:
  _189 = stderr;
  __builtin_fwrite ("-------------------------------------------\n", 1, 44, _189);
  goto <bb 359>; [100.00%]

  <bb 318> [0.06%]:
  __builtin_memset (&tmpBuff, 0, 50);
  _190 = __builtin_strlen (&bz2Header);
  _191 = _190 + 1;
  _691 = do_read (_878, &tmpBuff, _191);

  <bb 319> [0.06%]:
  size_692 = (size_t) _691;
  do_close (_878);

  <bb 320> [0.06%]:
  if (size_692 == 18446744073709551615)
    goto <bb 322>; [11.11%]
  else
    goto <bb 321>; [88.89%]

  <bb 321> [0.05%]:
  _192 = __builtin_strlen (&bz2Header);
  _193 = _192 + 1;
  if (_193 > size_692)
    goto <bb 322>; [50.00%]
  else
    goto <bb 326>; [50.00%]

  <bb 322> [0.03%]:
  _716 = getInstance ();

  <bb 323> [0.03%]:
  _194 = stderr;
  printErrorMessages (_716, _194);

  <bb 324> [0.03%]:
  _195 = stderr;
  __fprintf_chk (_195, 1, "pbzip2: *ERROR: File [%s] is NOT a valid bzip2!  Skipping...\n", InFilename_685);

  <bb 325> [0.03%]:
  _196 = stderr;
  __builtin_fwrite ("-------------------------------------------\n", 1, 44, _196);
  goto <bb 359>; [100.00%]

  <bb 326> [0.03%]:
  _695 = memstr (&tmpBuff, 4, &bz2Header, 3);
  if (_695 == 0B)
    goto <bb 327>; [17.43%]
  else
    goto <bb 329>; [82.57%]

  <bb 327> [0.00%]:
  _197 = stderr;
  __fprintf_chk (_197, 1, "pbzip2: *ERROR: File [%s] is NOT a valid bzip2!  Skipping...\n", InFilename_685);

  <bb 328> [0.00%]:
  _198 = stderr;
  __builtin_fwrite ("-------------------------------------------\n", 1, 44, _198);
  goto <bb 359>; [100.00%]

  <bb 329> [0.02%]:
  _199 = __builtin_strlen (&bz2Header);
  _200 = (unsigned int) _199;
  _201 = _200 + 4294967292;
  _202 = (int) _201;
  _203 = (unsigned int) _691;
  _204 = _203 + 4294967292;
  _205 = (int) _204;
  _697 = memstr (&MEM[(void *)&tmpBuff + 4B], _205, &MEM[(void *)&bz2Header + 4B], _202);
  if (_697 == 0B)
    goto <bb 330>; [17.43%]
  else
    goto <bb 343>; [82.57%]

  <bb 330> [0.00%]:
  _206 = __builtin_strlen (&bz2Header);
  _207 = (unsigned int) _206;
  _208 = _207 + 4294967292;
  _209 = (int) _208;
  _1636 = (sizetype) _205;
  searchBufEnd_1637 = &MEM[(void *)&tmpBuff + 4B] + _1636;
  _1638 = (sizetype) _209;
  _1639 = &MEM[(void *)&Bz2HeaderZero + 4B] + _1638;
  __predicate = D.5497;
  _1642 = &MEM[(void *)&tmpBuff + 4B] == searchBufEnd_1637;
  _1643 = _1639 == &MEM[(void *)&Bz2HeaderZero + 4B];
  _1644 = _1642 | _1643;
  if (_1644 != 0)
    goto <bb 338>; [46.00%]
  else
    goto <bb 331>; [54.00%]

  <bb 331> [0.00%]:
  if (_1639 == &MEM[(void *)&Bz2HeaderZero + 5B])
    goto <bb 332>; [26.74%]
  else
    goto <bb 1002>; [73.26%]

  <bb 332> [0.00%]:
  MEM[(struct _Iter_equals_iter *)&__pred] = &MEM[(void *)&Bz2HeaderZero + 4B];
  _1646 = __find_if (&MEM[(void *)&tmpBuff + 4B], searchBufEnd_1637, __pred, D.5524);
  goto <bb 338>; [100.00%]

  <bb 1002> [0.00%]:

  <bb 333> [0.00%]:
  # __first1_1647 = PHI <&MEM[(void *)&tmpBuff + 4B](1002), __current_1649(1011)>
  MEM[(struct _Iter_equals_iter *)&__pred] = &MEM[(void *)&Bz2HeaderZero + 4B];
  _1648 = __find_if (__first1_1647, searchBufEnd_1637, __pred, D.5523);
  if (searchBufEnd_1637 == _1648)
    goto <bb 338>; [3.75%]
  else
    goto <bb 334>; [96.25%]

  <bb 334> [0.00%]:
  __current_1649 = _1648 + 1;
  if (searchBufEnd_1637 == __current_1649)
    goto <bb 338>; [3.75%]
  else
    goto <bb 1003>; [96.25%]

  <bb 1003> [0.00%]:

  <bb 335> [0.01%]:
  # __p_1652 = PHI <&MEM[(void *)&Bz2HeaderZero + 5B](1003), __p_1654(1012)>
  # __current_1650 = PHI <__current_1649(1003), __current_1655(1012)>
  _1651 = *__current_1650;
  _1653 = *__p_1652;
  if (_1651 == _1653)
    goto <bb 336>; [95.00%]
  else
    goto <bb 1011>; [5.00%]

  <bb 1011> [0.00%]:
  goto <bb 333>; [100.00%]

  <bb 336> [0.01%]:
  __p_1654 = __p_1652 + 1;
  if (_1639 == __p_1654)
    goto <bb 338>; [5.00%]
  else
    goto <bb 337>; [95.00%]

  <bb 337> [0.01%]:
  __current_1655 = __current_1650 + 1;
  if (searchBufEnd_1637 == __current_1655)
    goto <bb 338>; [5.00%]
  else
    goto <bb 1012>; [95.00%]

  <bb 1012> [0.01%]:
  goto <bb 335>; [100.00%]

  <bb 338> [0.00%]:
  # _1656 = PHI <&MEM[(void *)&tmpBuff + 4B](330), _1646(332), searchBufEnd_1637(333), searchBufEnd_1637(334), _1648(336), searchBufEnd_1637(337)>
  if (searchBufEnd_1637 != _1656)
    goto <bb 340>; [95.93%]
  else
    goto <bb 339>; [4.07%]

  <bb 339> [0.00%]:

  <bb 340> [0.00%]:
  # _1641 = PHI <_1656(338), 0B(339)>
  if (_1641 == 0B)
    goto <bb 341>; [9.42%]
  else
    goto <bb 343>; [90.58%]

  <bb 341> [0.00%]:
  _210 = stderr;
  __fprintf_chk (_210, 1, "pbzip2: *ERROR: File [%s] is NOT a valid bzip2!  Skipping...\n", InFilename_685);

  <bb 342> [0.00%]:
  _211 = stderr;
  __builtin_fwrite ("-------------------------------------------\n", 1, 44, _211);
  goto <bb 359>; [100.00%]

  <bb 343> [0.02%]:
  _212 = tmpBuff[3];
  _213 = _212 + 207;
  if (_213 <= 8)
    goto <bb 344>; [67.00%]
  else
    goto <bb 345>; [33.00%]

  <bb 344> [0.01%]:
  _214 = (char) _212;
  BWTblockSizeChar = _214;
  __comp_ctor  (&bz2Tail, ".bz2", &D.5394);
  goto <bb 347>; [100.00%]

  <bb 345> [0.01%]:
  _215 = stderr;
  __fprintf_chk (_215, 1, "pbzip2: *ERROR: File [%s] is NOT a valid bzip2!  Skipping...\n", InFilename_685);

  <bb 346> [0.01%]:
  _216 = stderr;
  __builtin_fwrite ("-------------------------------------------\n", 1, 44, _216);
  goto <bb 359>; [100.00%]

  <bb 347> [0.01%]:
  D.5394 ={v} {CLOBBER};
  __comp_ctor  (&tbz2Tail, ".tbz2", &D.5395);

  <bb 348> [0.01%]:
  D.5395 ={v} {CLOBBER};
  _705 = ends_with_icase (&outFilename, &bz2Tail);
  if (_705 != 0)
    goto <bb 349>; [33.00%]
  else
    goto <bb 350>; [67.00%]

  <bb 349> [0.00%]:
  _884 = outFilename._M_string_length;
  _883 = bz2Tail._M_string_length;
  _217 = _884 - _883;
  resize (&outFilename, _217, 0);
  goto <bb 354>; [100.00%]

  <bb 350> [0.01%]:
  _707 = ends_with_icase (&outFilename, &tbz2Tail);
  if (_707 != 0)
    goto <bb 351>; [50.00%]
  else
    goto <bb 353>; [50.00%]

  <bb 351> [0.00%]:
  _886 = outFilename._M_string_length;
  _885 = tbz2Tail._M_string_length;
  _218 = _886 - _885;
  resize (&outFilename, _218, 0);

  <bb 352> [0.00%]:
  append (&outFilename, ".tar");
  goto <bb 354>; [100.00%]

  <bb 353> [0.00%]:
  append (&outFilename, ".out");

  <bb 354> [0.01%]:
  _888 = tbz2Tail._M_dataplus._M_p;
  if (&tbz2Tail.D.4158._M_local_buf != _888)
    goto <bb 355>; [53.47%]
  else
    goto <bb 356>; [46.53%]

  <bb 355> [0.01%]:
  operator delete (_888);

  <bb 356> [0.01%]:
  MEM[(struct  &)&tbz2Tail] ={v} {CLOBBER};
  _887 = bz2Tail._M_dataplus._M_p;
  if (&bz2Tail.D.4158._M_local_buf != _887)
    goto <bb 357>; [53.47%]
  else
    goto <bb 358>; [46.53%]

  <bb 357> [0.01%]:
  operator delete (_887);

  <bb 358> [0.01%]:
  bz2Tail ={v} {CLOBBER};
  tbz2Tail ={v} {CLOBBER};
  goto <bb 374>; [100.00%]

  <bb 359> [0.06%]:
  bz2Tail ={v} {CLOBBER};
  tbz2Tail ={v} {CLOBBER};
  goto <bb 933>; [100.00%]

  <bb 360> [0.38%]:
  __comp_ctor  (&bz2Tail, ".bz2", &D.5396);

  <bb 361> [0.38%]:
  D.5396 ={v} {CLOBBER};
  __comp_ctor  (&D.5397, InFilename_685, &D.5398);

  <bb 362> [0.38%]:
  _726 = ends_with_icase (&D.5397, &bz2Tail);
  _889 = D.5397._M_dataplus._M_p;
  if (&D.5397.D.4158._M_local_buf != _889)
    goto <bb 363>; [53.47%]
  else
    goto <bb 364>; [46.53%]

  <bb 363> [0.20%]:
  operator delete (_889);

  <bb 364> [0.38%]:
  D.5397 ={v} {CLOBBER};
  D.5398 ={v} {CLOBBER};
  if (_726 != 0)
    goto <bb 365>; [33.00%]
  else
    goto <bb 370>; [67.00%]

  <bb 365> [0.13%]:
  _219 = stderr;
  __fprintf_chk (_219, 1, "pbzip2: *ERROR: Input file [%s] already has a .bz2 extension!  Skipping...\n", InFilename_685);

  <bb 366> [0.13%]:
  _220 = stderr;
  __builtin_fwrite ("-------------------------------------------\n", 1, 44, _220);

  <bb 367> [0.13%]:
  _890 = bz2Tail._M_dataplus._M_p;
  if (&bz2Tail.D.4158._M_local_buf != _890)
    goto <bb 368>; [53.47%]
  else
    goto <bb 369>; [46.53%]

  <bb 368> [0.07%]:
  operator delete (_890);

  <bb 369> [0.13%]:
  bz2Tail ={v} {CLOBBER};
  goto <bb 933>; [100.00%]

  <bb 370> [0.26%]:
  _891 = bz2Tail._M_string_length;
  _892 = bz2Tail._M_dataplus._M_p;
  _M_append (&outFilename, _892, _891);

  <bb 371> [0.26%]:
  _893 = bz2Tail._M_dataplus._M_p;
  if (&bz2Tail.D.4158._M_local_buf != _893)
    goto <bb 372>; [53.47%]
  else
    goto <bb 373>; [46.53%]

  <bb 372> [0.14%]:
  operator delete (_893);

  <bb 373> [0.26%]:
  bz2Tail ={v} {CLOBBER};

  <bb 374> [0.27%]:
  safe_mutex_lock (&ErrorHandlerMutex);

  <bb 375> [0.27%]:
  sigInFilename = InFilename_685;
  _894 = outFilename._M_dataplus._M_p;
  sigOutFilename = _894;
  safe_mutex_unlock (&ErrorHandlerMutex);

  <bb 376> [0.27%]:
  _221 = strcmp (InFilename_685, "-");
  if (_221 != 0)
    goto <bb 377>; [33.00%]
  else
    goto <bb 396>; [67.00%]

  <bb 377> [0.09%]:
  _879 = __open_alias (InFilename_685, 0);

  <bb 378> [0.09%]:
  if (_879 == -1)
    goto <bb 379>; [20.24%]
  else
    goto <bb 381>; [79.76%]

  <bb 379> [0.02%]:
  _222 = stderr;
  __fprintf_chk (_222, 1, "pbzip2: *ERROR: File [%s] NOT found!  Skipping...\n", InFilename_685);

  <bb 380> [0.02%]:
  _223 = stderr;
  __builtin_fwrite ("-------------------------------------------\n", 1, 44, _223);
  goto <bb 395>; [100.00%]

  <bb 381> [0.07%]:
  __fxstat (1, _879, &statbuf);
  _224 = statbuf.st_mode;
  _225 = _224 & 61440;
  if (_225 == 16384)
    goto <bb 382>; [11.11%]
  else
    goto <bb 384>; [88.89%]

  <bb 382> [0.01%]:
  _226 = stderr;
  __fprintf_chk (_226, 1, "pbzip2: *ERROR: File [%s] is a directory!  Skipping...\n", InFilename_685);

  <bb 383> [0.01%]:
  _227 = stderr;
  __builtin_fwrite ("-------------------------------------------\n", 1, 44, _227);
  goto <bb 395>; [100.00%]

  <bb 384> [0.06%]:
  if (_225 != 32768)
    goto <bb 385>; [32.02%]
  else
    goto <bb 387>; [67.98%]

  <bb 385> [0.02%]:
  _228 = stderr;
  __fprintf_chk (_228, 1, "pbzip2: *ERROR: File [%s] is not a regular file!  Skipping...\n", InFilename_685);

  <bb 386> [0.02%]:
  _229 = stderr;
  __builtin_fwrite ("-------------------------------------------\n", 1, 44, _229);
  goto <bb 395>; [100.00%]

  <bb 387> [0.04%]:
  _230 = statbuf.st_size;
  InFileSize = _230;
  if (_230 == 0)
    goto <bb 388>; [67.00%]
  else
    goto <bb 391>; [33.00%]

  <bb 388> [0.03%]:
  if (decompress_411 == 1)
    goto <bb 389>; [11.11%]
  else
    goto <bb 391>; [88.89%]

  <bb 389> [0.00%]:
  _231 = stderr;
  __fprintf_chk (_231, 1, "pbzip2: *ERROR: File is of size 0 [%s]!  Skipping...\n", InFilename_685);

  <bb 390> [0.00%]:
  _232 = stderr;
  __builtin_fwrite ("-------------------------------------------\n", 1, 44, _232);
  goto <bb 395>; [100.00%]

  <bb 391> [0.04%]:
  # zeroByteFile_386 = PHI <0(387), 1(388)>
  _1657 = __xstat (1, InFilename_685, &fileMetaData);
  if (_1657 != 0)
    goto <bb 392>; [19.52%]
  else
    goto <bb 394>; [80.48%]

  <bb 392> [0.01%]:
  _234 = stderr;
  __fprintf_chk (_234, 1, "pbzip2: *ERROR: Could not get file meta data from [%s]!  Skipping...\n", InFilename_685);

  <bb 393> [0.01%]:
  _235 = stderr;
  __builtin_fwrite ("-------------------------------------------\n", 1, 44, _235);
  goto <bb 395>; [100.00%]

  <bb 394> [0.03%]:
  statbuf ={v} {CLOBBER};
  goto <bb 397>; [100.00%]

  <bb 395> [0.06%]:
  # zeroByteFile_387 = PHI <zeroByteFile_385(380), zeroByteFile_385(383), zeroByteFile_385(386), zeroByteFile_385(390), zeroByteFile_386(393)>
  statbuf ={v} {CLOBBER};
  goto <bb 933>; [100.00%]

  <bb 396> [0.18%]:
  InFileSize = -1;

  <bb 397> [0.21%]:
  # zeroByteFile_388 = PHI <zeroByteFile_386(394), zeroByteFile_385(396)>
  # hInfile_390 = PHI <_879(394), 0(396)>
  _236 = OutputStdOut;
  if (_236 == 0)
    goto <bb 398>; [33.00%]
  else
    goto <bb 408>; [67.00%]

  <bb 398> [0.07%]:
  _895 = outFilename._M_dataplus._M_p;
  _1658 = __open_alias (_895, 0);

  <bb 399> [0.07%]:
  if (_1658 == -1)
    goto <bb 400>; [30.50%]
  else
    goto <bb 402>; [69.50%]

  <bb 400> [0.02%]:
  _1659 = getInstance ();

  <bb 401> [0.02%]:
  saveError (_1659);
  goto <bb 403>; [100.00%]

  <bb 402> [0.05%]:
  close (_1658);

  <bb 403> [0.07%]:
  # _1660 = PHI <0(401), 1(402)>
  if (_1660 != 0)
    goto <bb 404>; [50.00%]
  else
    goto <bb 408>; [50.00%]

  <bb 404> [0.04%]:
  if (force_453 != 1)
    goto <bb 405>; [48.88%]
  else
    goto <bb 407>; [51.12%]

  <bb 405> [0.02%]:
  _896 = outFilename._M_dataplus._M_p;
  _237 = stderr;
  __fprintf_chk (_237, 1, "pbzip2: *ERROR: Output file [%s] already exists!  Use -f to overwrite...\n", _896);

  <bb 406> [0.02%]:
  _238 = stderr;
  __builtin_fwrite ("-------------------------------------------\n", 1, 44, _238);
  goto <bb 933>; [100.00%]

  <bb 407> [0.02%]:
  _897 = outFilename._M_dataplus._M_p;
  remove (_897);

  <bb 408> [0.20%]:
  if (readEntireFile_380 == 1)
    goto <bb 409>; [34.00%]
  else
    goto <bb 413>; [66.00%]

  <bb 409> [0.07%]:
  if (hInfile_390 == 0)
    goto <bb 410>; [50.00%]
  else
    goto <bb 412>; [50.00%]

  <bb 410> [0.03%]:
  _239 = QuietMode;
  if (_239 != 1)
    goto <bb 411>; [48.88%]
  else
    goto <bb 413>; [51.12%]

  <bb 411> [0.02%]:
  _240 = stderr;
  __builtin_fwrite (" *Warning: Ignoring -r switch since input is stdin.\n", 1, 52, _240);
  goto <bb 413>; [100.00%]

  <bb 412> [0.03%]:
  _241 = InFileSize;
  _242 = numCPU;
  _243 = (long int) _242;
  _244 = _241 / _243;
  blockSize_751 = (int) _244;

  <bb 413> [0.20%]:
  # blockSize_399 = PHI <blockSize_398(408), blockSize_398(410), blockSize_398(411), blockSize_751(412)>
  _245 = QuietMode;
  if (_245 != 1)
    goto <bb 414>; [48.88%]
  else
    goto <bb 425>; [51.12%]

  <bb 414> [0.10%]:
  _246 = FileListCount;
  _247 = fileLoop_458 + 1;
  _248 = stderr;
  __fprintf_chk (_248, 1, "         File #: %d of %d\n", _247, _246);

  <bb 415> [0.10%]:
  if (hInfile_390 != 0)
    goto <bb 417>; [50.00%]
  else
    goto <bb 416>; [50.00%]

  <bb 416> [0.05%]:

  <bb 417> [0.10%]:
  # _481 = PHI <InFilename_685(415), "<stdin>"(416)>
  _249 = stderr;
  __fprintf_chk (_249, 1, "     Input Name: %s\n", _481);

  <bb 418> [0.10%]:
  _250 = OutputStdOut;
  if (_250 == 0)
    goto <bb 419>; [50.00%]
  else
    goto <bb 420>; [50.00%]

  <bb 419> [0.05%]:
  _898 = outFilename._M_dataplus._M_p;
  _251 = stderr;
  __fprintf_chk (_251, 1, "    Output Name: %s\n\n", _898);
  goto <bb 421>; [100.00%]

  <bb 420> [0.05%]:
  _252 = stderr;
  __builtin_fwrite ("    Output Name: <stdout>\n\n", 1, 27, _252);

  <bb 421> [0.10%]:
  if (decompress_411 == 1)
    goto <bb 422>; [20.24%]
  else
    goto <bb 423>; [79.76%]

  <bb 422> [0.02%]:
  _253 = BWTblockSizeChar;
  _254 = (int) _253;
  _255 = stderr;
  __fprintf_chk (_255, 1, " BWT Block Size: %c00k\n", _254);

  <bb 423> [0.10%]:
  _256 = strcmp (InFilename_685, "-");
  if (_256 != 0)
    goto <bb 424>; [33.00%]
  else
    goto <bb 425>; [67.00%]

  <bb 424> [0.03%]:
  _257 = InFileSize;
  _258 = (long unsigned int) _257;
  _259 = stderr;
  __fprintf_chk (_259, 1, "     Input Size: %lu bytes\n", _258);

  <bb 425> [0.20%]:
  if (decompress_411 == 1)
    goto <bb 426>; [34.00%]
  else
    goto <bb 432>; [66.00%]

  <bb 426> [0.07%]:
  _260 = numCPU;
  if (_260 == 1)
    goto <bb 429>; [34.00%]
  else
    goto <bb 427>; [66.00%]

  <bb 427> [0.04%]:
  _261 = InFileSize;
  if (_261 <= 999999)
    goto <bb 429>; [50.00%]
  else
    goto <bb 428>; [50.00%]

  <bb 428> [0.02%]:

  <bb 429> [0.07%]:
  # noThreads_438 = PHI <1(426), 1(427), 0(428)>
  if (_260 > 1)
    goto <bb 430>; [64.00%]
  else
    goto <bb 460>; [36.00%]

  <bb 430> [0.04%]:
  _262 = strcmp (InFilename_685, "-");
  if (_262 == 0)
    goto <bb 431>; [50.00%]
  else
    goto <bb 460>; [50.00%]

  <bb 431> [0.02%]:
  goto <bb 460>; [100.00%]

  <bb 432> [0.13%]:
  _263 = InFileSize;
  if (_263 > 0)
    goto <bb 433>; [64.00%]
  else
    goto <bb 436>; [36.00%]

  <bb 433> [0.08%]:
  _264 = (long int) blockSize_399;
  _265 = _263 + _264;
  _266 = _265 + -1;
  _267 = _266 / _264;
  numBlocks_752 = (int) _267;
  if (numBlocks_752 == 1)
    goto <bb 436>; [34.00%]
  else
    goto <bb 434>; [66.00%]

  <bb 434> [0.05%]:
  _268 = numCPU;
  if (_268 == 1)
    goto <bb 436>; [34.00%]
  else
    goto <bb 435>; [66.00%]

  <bb 435> [0.04%]:

  <bb 436> [0.13%]:
  # numBlocks_392 = PHI <10000(432), numBlocks_752(433), numBlocks_752(434), numBlocks_752(435)>
  # noThreads_439 = PHI <noThreads_437(432), 1(433), 1(434), 0(435)>
  if (zeroByteFile_388 == 1)
    goto <bb 437>; [34.00%]
  else
    goto <bb 460>; [66.00%]

  <bb 437> [0.04%]:
  _269 = OutputStdOut;
  if (_269 == 0)
    goto <bb 438>; [50.00%]
  else
    goto <bb 441>; [50.00%]

  <bb 438> [0.02%]:
  _899 = outFilename._M_dataplus._M_p;
  _754 = safe_open_output (_899);

  <bb 439> [0.02%]:
  if (_754 == -1)
    goto <bb 440>; [2.00%]
  else
    goto <bb 441>; [98.00%]

  <bb 440> [0.00%]:
  _900 = outFilename._M_dataplus._M_p;
  handle_error (1, 1, "pbzip2: *ERROR: Could not create output file [%s]!\n", _900);
  goto <bb 934>; [100.00%]

  <bb 441> [0.04%]:
  # hOutfile_391 = PHI <1(437), _754(439)>
  _758 = do_write (hOutfile_391, &Bz2HeaderZero, 14);

  <bb 442> [0.04%]:
  ret_759 = (int) _758;
  _270 = OutputStdOut;
  if (_270 == 0)
    goto <bb 443>; [33.00%]
  else
    goto <bb 447>; [67.00%]

  <bb 443> [0.01%]:
  _761 = do_close (hOutfile_391);

  <bb 444> [0.01%]:
  _901 = outFilename._M_dataplus._M_p;
  _764 = writeFileMetaData (_901);

  <bb 445> [0.01%]:
  if (_764 != 0)
    goto <bb 446>; [33.00%]
  else
    goto <bb 447>; [67.00%]

  <bb 446> [0.00%]:
  _902 = outFilename._M_dataplus._M_p;
  handle_error (0, -1, "pbzip2: *ERROR: Could not write file meta data to [%s]!\n", _902);

  <bb 447> [0.04%]:
  # close_ret_478 = PHI <0(442), _761(445), _761(446)>
  _271 = ret_759 != 14;
  _272 = close_ret_478 == -1;
  _273 = _271 | _272;
  if (_273 != 0)
    goto <bb 448>; [2.00%]
  else
    goto <bb 450>; [98.00%]

  <bb 448> [0.00%]:
  _903 = outFilename._M_dataplus._M_p;
  handle_error (1, 1, "pbzip2: *ERROR: Could not write to file [%s]! Aborting...\n", _903);

  <bb 449> [0.00%]:
  _274 = stderr;
  __builtin_fwrite ("-------------------------------------------\n", 1, 44, _274);
  goto <bb 934>; [100.00%]

  <bb 450> [0.04%]:
  _275 = QuietMode;
  if (_275 != 1)
    goto <bb 451>; [48.88%]
  else
    goto <bb 453>; [51.12%]

  <bb 451> [0.02%]:
  _276 = stderr;
  __fprintf_chk (_276, 1, "    Output Size: %u bytes\n", 14);

  <bb 452> [0.02%]:
  _277 = stderr;
  __builtin_fwrite ("-------------------------------------------\n", 1, 44, _277);

  <bb 453> [0.04%]:
  if (keep_452 != 1)
    goto <bb 454>; [79.76%]
  else
    goto <bb 933>; [20.24%]

  <bb 454> [0.03%]:
  _278 = OutputStdOut;
  if (_278 != 0)
    goto <bb 456>; [50.00%]
  else
    goto <bb 455>; [50.00%]

  <bb 455> [0.02%]:
  _904 = outFilename._M_dataplus._M_p;
  _880 = __xstat (1, _904, &statbuf);
  if (_880 == 0)
    goto <bb 456>; [67.00%]
  else
    goto <bb 459>; [33.00%]

  <bb 456> [0.03%]:
  _767 = do_remove (InFilename_685);

  <bb 457> [0.03%]:
  if (_767 == -1)
    goto <bb 458>; [20.24%]
  else
    goto <bb 459>; [79.76%]

  <bb 458> [0.01%]:
  handle_error (0, 1, "Can\'t remove input file [%s]!", InFilename_685);

  <bb 459> [0.03%]:
  statbuf ={v} {CLOBBER};
  goto <bb 933>; [100.00%]

  <bb 460> [0.15%]:
  # numBlocks_393 = PHI <0(429), 0(430), 0(431), numBlocks_392(436)>
  # noThreads_440 = PHI <noThreads_438(429), noThreads_438(430), 0(431), noThreads_439(436)>
  NumBlocksEstimated = numBlocks_393;
  _279 = maxMemory_401 / blockSize_399;
  _280 = (long unsigned int) _279;
  NumBufferedBlocksMax = _280;
  _281 = numCPU;
  _282 = _281 * 2;
  _283 = _279 - _282;
  if (_283 <= 0)
    goto <bb 461>; [36.00%]
  else
    goto <bb 462>; [64.00%]

  <bb 461> [0.05%]:
  NumBufferedBlocksMax = 1;
  goto <bb 463>; [100.00%]

  <bb 462> [0.10%]:
  _284 = (long unsigned int) _282;
  _285 = _280 - _284;
  NumBufferedBlocksMax = _285;

  <bb 463> [0.15%]:
  _286 = (long unsigned int) _281;
  _287 = NumBufferedBlocksMax;
  if (_286 > _287)
    goto <bb 464>; [67.00%]
  else
    goto <bb 469>; [33.00%]

  <bb 464> [0.10%]:
  if (maxMemorySwitch_405 == 0)
    goto <bb 465>; [50.00%]
  else
    goto <bb 467>; [50.00%]

  <bb 465> [0.05%]:
  NumBufferedBlocksMax = _286;
  _288 = QuietMode;
  if (_288 != 1)
    goto <bb 466>; [48.88%]
  else
    goto <bb 469>; [51.12%]

  <bb 466> [0.02%]:
  _289 = (long unsigned int) _282;
  _290 = _286 + _289;
  _291 = (long unsigned int) blockSize_399;
  _292 = _290 * _291;
  _293 = _292 / 1000000;
  _294 = stderr;
  __fprintf_chk (_294, 1, "*Warning* Max memory limit increased to %lu MB to support %d CPUs\n", _293, _281);
  goto <bb 469>; [100.00%]

  <bb 467> [0.05%]:
  _295 = QuietMode;
  if (_295 != 1)
    goto <bb 468>; [48.88%]
  else
    goto <bb 469>; [51.12%]

  <bb 468> [0.02%]:
  _296 = stderr;
  __builtin_fwrite ("*Warning* CPU usage and performance may be suboptimal due to max memory limit.\n", 1, 79, _296);

  <bb 469> [0.15%]:
  LastGoodBlock = -1;
  MinErrorBlock = -1;
  _297 = NumBufferedBlocksMax;
  _1661 = OutMutex;
  ret_1672 = pthread_mutex_lock (_1661);
  if (ret_1672 != 0)
    goto <bb 470>; [0.04%]
  else
    goto <bb 472>; [99.96%]

  <bb 470> [0.00%]:
  _1673 = stderr;
  __fprintf_chk (_1673, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_1672);

  <bb 471> [0.00%]:
  cleanupAndQuit (-5);

  <bb 472> [0.15%]:
  NextBlockToWrite = 0;
  OutBufferPosToWrite = 0;
  NumBufferedBlocks = 0;
  NumBufferedTailBlocks = 0;
  MEM[(struct  &)&emptyElement] ={v} {CLOBBER};
  emptyElement.buf = 0B;
  emptyElement.bufSize = 0;
  emptyElement.blockNumber = 0;
  emptyElement.sequenceNumber = 0;
  emptyElement.inSize = 0;
  emptyElement.isLastInSequence = 1;
  emptyElement.next = 0B;
  _1674 = OutputBuffer.D.4140._M_impl._M_end_of_storage;
  _1675 = (long int) _1674;
  _1676 = OutputBuffer.D.4140._M_impl._M_start;
  _1677 = (long int) _1676;
  _1678 = _1675 - _1677;
  _1679 = _1678 /[ex] 40;
  _1680 = (long unsigned int) _1679;
  if (_297 > _1680)
    goto <bb 473>; [33.00%]
  else
    goto <bb 485>; [67.00%]

  <bb 473> [0.05%]:
  MEM[(struct  &)&__tmp] ={v} {CLOBBER};
  MEM[(struct _Vector_impl *)&__tmp]._M_start = 0B;
  MEM[(struct _Vector_impl *)&__tmp]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&__tmp]._M_end_of_storage = 0B;
  if (_297 != 0)
    goto <bb 474>; [91.00%]
  else
    goto <bb 477>; [9.00%]

  <bb 474> [0.05%]:
  if (_297 > 461168601842738790)
    goto <bb 475>; [0.04%]
  else
    goto <bb 476>; [99.96%]

  <bb 475> [0.00%]:
  __throw_bad_alloc ();

  <bb 476> [0.05%]:
  _1717 = _297 * 40;
  _1718 = operator new (_1717);

  <bb 477> [0.05%]:
  # _1719 = PHI <0B(473), _1718(476)>
  MEM[(struct _Vector_base *)&__tmp]._M_impl._M_start = _1719;
  MEM[(struct _Vector_base *)&__tmp]._M_impl._M_finish = _1719;
  _1711 = _297 * 40;
  _1712 = _1719 + _1711;
  MEM[(struct _Vector_base *)&__tmp]._M_impl._M_end_of_storage = _1712;

  <bb 478> [0.33%]:
  # __n_1713 = PHI <_297(477), __n_1715(481)>
  # __cur_1714 = PHI <_1719(477), __cur_1716(481)>
  if (__n_1713 == 0)
    goto <bb 482>; [15.00%]
  else
    goto <bb 479>; [85.00%]

  <bb 479> [0.28%]:
  if (__cur_1714 != 0B)
    goto <bb 480>; [70.00%]
  else
    goto <bb 481>; [30.00%]

  <bb 480> [0.20%]:
  *__cur_1714 = emptyElement;

  <bb 481> [0.28%]:
  __n_1715 = __n_1713 + 18446744073709551615;
  __cur_1716 = __cur_1714 + 40;
  goto <bb 478>; [100.00%]

  <bb 482> [0.05%]:
  __tmp.D.4140._M_impl._M_finish = __cur_1714;
  _1683 = MEM[(struct outBuff * &)&OutputBuffer];
  MEM[(struct outBuff * &)&__tmp] = _1683;
  MEM[(struct outBuff * &)&OutputBuffer] = _1719;
  _1685 = MEM[(struct outBuff * &)&OutputBuffer + 8];
  MEM[(struct outBuff * &)&__tmp + 8] = _1685;
  MEM[(struct outBuff * &)&OutputBuffer + 8] = __cur_1714;
  _1687 = MEM[(struct outBuff * &)&OutputBuffer + 16];
  MEM[(struct outBuff * &)&__tmp + 16] = _1687;
  MEM[(struct outBuff * &)&OutputBuffer + 16] = _1712;
  if (_1683 != 0B)
    goto <bb 483>; [57.44%]
  else
    goto <bb 484>; [42.56%]

  <bb 483> [0.03%]:
  operator delete (_1683);

  <bb 484> [0.05%]:
  __tmp ={v} {CLOBBER};
  goto <bb 498>; [100.00%]

  <bb 485> [0.10%]:
  _1688 = OutputBuffer.D.4140._M_impl._M_finish;
  _1689 = (long int) _1688;
  _1690 = _1689 - _1677;
  _1691 = _1690 /[ex] 40;
  _1692 = (long unsigned int) _1691;
  if (_297 > _1692)
    goto <bb 486>; [33.00%]
  else
    goto <bb 1001>; [67.00%]

  <bb 1001> [0.07%]:
  goto <bb 495>; [100.00%]

  <bb 486> [0.03%]:
  MEM[(struct __normal_iterator *)&D.5566] = _1688;
  MEM[(struct __normal_iterator *)&D.5565] = _1676;
  __first = D.5565;
  __last = D.5566;
  __it = __last;
  __it = __first;

  <bb 487> [0.22%]:
  # __first_1722 = PHI <_1676(486), __first_1723(488)>
  if (_1688 == __first_1722)
    goto <bb 489>; [15.00%]
  else
    goto <bb 488>; [85.00%]

  <bb 488> [0.19%]:
  *__first_1722 = emptyElement;
  __first_1723 = __first_1722 + 40;
  goto <bb 487>; [100.00%]

  <bb 489> [0.03%]:
  _1693 = OutputBuffer.D.4140._M_impl._M_finish;
  _1694 = (long int) _1693;
  _1695 = OutputBuffer.D.4140._M_impl._M_start;
  _1696 = (long int) _1695;
  _1697 = _1694 - _1696;
  _1698 = _1697 /[ex] 40;
  _1699 = (long unsigned int) _1698;
  _1700 = _297 - _1699;

  <bb 490> [0.22%]:
  # __n_1701 = PHI <_1700(489), __n_1703(493)>
  # __cur_1702 = PHI <_1693(489), __cur_1704(493)>
  if (__n_1701 == 0)
    goto <bb 494>; [15.00%]
  else
    goto <bb 491>; [85.00%]

  <bb 491> [0.19%]:
  if (__cur_1702 != 0B)
    goto <bb 492>; [70.00%]
  else
    goto <bb 493>; [30.00%]

  <bb 492> [0.13%]:
  *__cur_1702 = emptyElement;

  <bb 493> [0.19%]:
  __n_1703 = __n_1701 + 18446744073709551615;
  __cur_1704 = __cur_1702 + 40;
  goto <bb 490>; [100.00%]

  <bb 494> [0.03%]:
  OutputBuffer.D.4140._M_impl._M_finish = __cur_1702;
  goto <bb 498>; [100.00%]

  <bb 495> [0.45%]:
  # __first_1706 = PHI <_1676(1001), __first_1708(496)>
  # __niter_1705 = PHI <_297(1001), __niter_1707(496)>
  if (__niter_1705 == 0)
    goto <bb 497>; [15.00%]
  else
    goto <bb 496>; [85.00%]

  <bb 496> [0.39%]:
  *__first_1706 = emptyElement;
  __niter_1707 = __niter_1705 + 18446744073709551615;
  __first_1708 = __first_1706 + 40;
  goto <bb 495>; [100.00%]

  <bb 497> [0.07%]:
  OutputBuffer.D.4140._M_impl._M_finish = __first_1706;

  <bb 498> [0.15%]:
  _1662 = OutputBuffer.D.4140._M_impl._M_finish;
  _1663 = (long int) _1662;
  _1664 = OutputBuffer.D.4140._M_impl._M_start;
  _1665 = (long int) _1664;
  _1666 = _1663 - _1665;
  _1667 = _1666 /[ex] 40;
  _1668 = (long unsigned int) _1667;
  if (_297 != _1668)
    goto <bb 499>; [0.04%]
  else
    goto <bb 502>; [99.96%]

  <bb 499> [0.00%]:
  _1669 = stderr;
  __fprintf_chk (_1669, 1, "pbzip2: *ERROR: Could not initialize (OutputBuffer); size=%lu!  Aborting...\n", _297);

  <bb 500> [0.00%]:
  _1670 = OutMutex;
  safe_mutex_unlock (_1670);

  <bb 501> [0.00%]:
  exit (1);

  <bb 502> [0.15%]:
  _1671 = OutMutex;
  ret_1726 = pthread_mutex_unlock (_1671);
  if (ret_1726 != 0)
    goto <bb 503>; [0.04%]
  else
    goto <bb 505>; [99.96%]

  <bb 503> [0.00%]:
  _1727 = stderr;
  __fprintf_chk (_1727, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_1726);

  <bb 504> [0.00%]:
  cleanupAndQuit (-6);

  <bb 505> [0.15%]:
  emptyElement ={v} {CLOBBER};
  if (decompress_411 == 1)
    goto <bb 506>; [34.00%]
  else
    goto <bb 729>; [66.00%]

  <bb 506> [0.05%]:
  if (noThreads_440 == 0)
    goto <bb 507>; [50.00%]
  else
    goto <bb 586>; [50.00%]

  <bb 507> [0.03%]:
  _298 = QuietMode;
  if (_298 != 1)
    goto <bb 508>; [48.88%]
  else
    goto <bb 509>; [51.12%]

  <bb 508> [0.01%]:
  _299 = stderr;
  __builtin_fwrite ("Decompressing data...\n", 1, 22, _299);

  <bb 509> [0.03%]:
  # i_447 = PHI <0(508), 0(507)>

  <bb 510> [0.18%]:
  # i_460 = PHI <i_447(509), i_799(515)>
  _300 = (int) i_460;
  _301 = numCPU;
  if (_300 >= _301)
    goto <bb 516>; [7.50%]
  else
    goto <bb 511>; [92.50%]

  <bb 511> [0.17%]:
  _302 = _1563->consumers;
  _303 = i_460 * 8;
  _304 = _302 + _303;
  ret_798 = pthread_create (_304, &ChildThreadAttributes, consumer_decompress, _1563);
  if (ret_798 != 0)
    goto <bb 512>; [7.50%]
  else
    goto <bb 515>; [92.50%]

  <bb 512> [0.01%]:
  _801 = getInstance ();

  <bb 513> [0.01%]:
  saveError (_801);
  handle_error (1, 1, "pbzip2: *ERROR: Not enough resources to create consumer thread #%u (code = %d)  Aborting...\n", i_460, ret_798);

  <bb 514> [0.01%]:
  _305 = TerminatorThread;
  pthread_join (_305, 0B);
  goto <bb 973>; [100.00%]

  <bb 515> [0.15%]:
  i_799 = i_460 + 1;
  goto <bb 510>; [100.00%]

  <bb 516> [0.01%]:
  _905 = outFilename._M_dataplus._M_p;
  ret_806 = pthread_create (&output, &ChildThreadAttributes, fileWriter, _905);
  if (ret_806 != 0)
    goto <bb 517>; [2.00%]
  else
    goto <bb 519>; [98.00%]

  <bb 517> [0.00%]:
  handle_error (1, 1, "pbzip2: *ERROR: Not enough resources to create fileWriter thread (code = %d)  Aborting...\n", ret_806);

  <bb 518> [0.00%]:
  _306 = TerminatorThread;
  pthread_join (_306, 0B);
  goto <bb 973>; [100.00%]

  <bb 519> [0.01%]:
  safe_mutex_lock (&ProgressIndicatorsMutex);

  <bb 520> [0.01%]:
  InBytesProduced = 0;
  NumBlocks = 0;
  safe_mutex_unlock (&ProgressIndicatorsMutex);

  <bb 521> [0.01%]:
  MEM[(struct  &)&bz2StreamScanner] ={v} {CLOBBER};
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._vptr.BZ2StreamScanner = &MEM[(void *)&_ZTVN6pbzip216BZ2StreamScannerE + 16B];
  MEM[(struct  &)&bz2StreamScanner + 16] ={v} {CLOBBER};
  MEM[(struct  &)&bz2StreamScanner + 16] ={v} {CLOBBER};
  MEM[(struct _Alloc_hider *)&bz2StreamScanner + 16B]._M_p = &MEM[(struct basic_string *)&bz2StreamScanner + 16B].D.4058._M_local_buf;
  MEM[(struct basic_string *)&bz2StreamScanner + 16B]._M_string_length = 0;
  MEM[(char_type &)&bz2StreamScanner + 32] = 0;
  MEM[(struct  &)&bz2StreamScanner + 48] ={v} {CLOBBER};
  MEM[(struct  &)&bz2StreamScanner + 48] ={v} {CLOBBER};
  MEM[(struct _Alloc_hider *)&bz2StreamScanner + 48B]._M_p = &MEM[(struct basic_string *)&bz2StreamScanner + 48B].D.4058._M_local_buf;
  MEM[(struct basic_string *)&bz2StreamScanner + 48B]._M_string_length = 0;
  MEM[(char_type &)&bz2StreamScanner + 64] = 0;
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._inBuff = 0B;
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._inBuffCapacity = 0;
  MEM[(struct  &)&bz2StreamScanner + 128] ={v} {CLOBBER};
  MEM[(struct outBuff *)&bz2StreamScanner + 128B].buf = 0B;
  MEM[(struct outBuff *)&bz2StreamScanner + 128B].bufSize = 0;
  MEM[(struct outBuff *)&bz2StreamScanner + 128B].blockNumber = 0;
  MEM[(struct outBuff *)&bz2StreamScanner + 128B].sequenceNumber = 0;
  MEM[(struct outBuff *)&bz2StreamScanner + 128B].inSize = 0;
  MEM[(struct outBuff *)&bz2StreamScanner + 128B].isLastInSequence = 1;
  MEM[(struct outBuff *)&bz2StreamScanner + 128B].next = 0B;
  dispose (&bz2StreamScanner);
  bz2header = "BZh91AY&SY";
  bz2ZeroHeader[0] = 66;
  bz2ZeroHeader[1] = 90;
  bz2ZeroHeader[2] = 104;
  bz2ZeroHeader[3] = 57;
  bz2ZeroHeader[4] = 23;
  bz2ZeroHeader[5] = 114;
  bz2ZeroHeader[6] = 69;
  bz2ZeroHeader[7] = 56;
  bz2ZeroHeader[8] = 80;
  bz2ZeroHeader[9] = 144;
  bz2ZeroHeader[10] = 0;
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._hInFile = hInfile_390;
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._eof = 0;
  assign (&MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._bz2Header, &bz2header);

  <bb 522> [0.01%]:
  assign (&MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._bz2HeaderZero, &bz2ZeroHeader);

  <bb 523> [0.01%]:
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._bz2HeaderFound = 0;
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._inBuffCapacity = 0;
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._errState = 0;
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._searchStatus = 0;
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._outBuffCapacityHint = 0;
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._outBuffCapacityLimit = 1048576;
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._outSequenceNumber = 0;
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._streamNumber = 0;
  _1778 = MEM[(const struct basic_string *)&bz2StreamScanner + 16B]._M_string_length;
  _1779 = _1778 * 2;
  if (_1779 > 1048576)
    goto <bb 524>; [50.00%]
  else
    goto <bb 525>; [50.00%]

  <bb 524> [0.01%]:

  <bb 525> [0.01%]:
  # inBuffCapacity_1780 = PHI <1048576(523), _1779(524)>
  _1781 = operator new [] (inBuffCapacity_1780, &nothrow);
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._inBuff = _1781;
  if (_1781 == 0B)
    goto <bb 526>; [0.43%]
  else
    goto <bb 527>; [99.57%]

  <bb 526> [0.00%]:
  _1782 = MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._errState;
  _1783 = _1782 | 1;
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._errState = _1783;
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._inBuffEnd = 0B;
  handle_error (1, -1, "pbzip2: *ERROR: Could not allocate memory (FileData)!  Aborting...\n");
  goto <bb 528>; [100.00%]

  <bb 527> [0.01%]:
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._inBuffCapacity = inBuffCapacity_1780;
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._inBuffEnd = _1781;
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._inBuffSearchPtr = _1781;
  MEM[(struct BZ2StreamScanner *)&bz2StreamScanner]._inBuffCurrent = _1781;

  <bb 528> [0.01%]:
  bz2header ={v} {CLOBBER};
  bz2ZeroHeader ={v} {CLOBBER};
  _1728 = getNextStream (&bz2StreamScanner);
  goto <bb 535>; [100.00%]

<L32> [0.00%]:
  _1772 = MEM[(const struct basic_string *)&bz2StreamScanner + 48B]._M_dataplus._M_p;
  if (&MEM[(struct basic_string *)&bz2StreamScanner + 48B].D.4058._M_local_buf != _1772)
    goto <bb 530>; [53.47%]
  else
    goto <bb 531>; [46.53%]

  <bb 530> [0.00%]:
  operator delete (_1772);

  <bb 531> [0.00%]:
  MEM[(struct  &)&bz2StreamScanner + 48] ={v} {CLOBBER};
  resx 50

<L33> [0.00%]:
  _1773 = MEM[(const struct basic_string *)&bz2StreamScanner + 16B]._M_dataplus._M_p;
  if (&MEM[(struct basic_string *)&bz2StreamScanner + 16B].D.4058._M_local_buf != _1773)
    goto <bb 533>; [53.47%]
  else
    goto <bb 534>; [46.53%]

  <bb 533> [0.00%]:
  operator delete (_1773);

  <bb 534> [0.00%]:
  MEM[(struct  &)&bz2StreamScanner + 16] ={v} {CLOBBER};
  resx 49

  <bb 535> [0.01%]:
  fileData = _1728;

  <bb 536> [0.02%]:
  _1729 = bz2StreamScanner._errState;
  if (_1729 == 0)
    goto <bb 537>; [96.25%]
  else
    goto <bb 539>; [3.75%]

  <bb 537> [0.02%]:
  _1730 = fileData;
  _1731 = _1730->bufSize;
  if (_1731 != 0)
    goto <bb 538>; [96.25%]
  else
    goto <bb 539>; [3.75%]

  <bb 538> [0.02%]:
  _1732 = NumBlocks;
  _1733 = producerDecompressCheckInterrupt (hInfile_390, &fileData, _1732);
  goto <bb 540>; [100.00%]

  <bb 539> [0.00%]:
  close (hInfile_390);
  goto <bb 568>; [100.00%]

  <bb 540> [0.02%]:
  if (_1733 != 0)
    goto <bb 541>; [3.75%]
  else
    goto <bb 545>; [96.25%]

  <bb 541> [0.00%]:
  _1734 = _1563->mut;
  safe_mutex_lock (_1734);

  <bb 542> [0.00%]:
  _1735 = _1563->notEmpty;
  safe_cond_broadcast (_1735);

  <bb 543> [0.00%]:
  _1736 = _1563->mut;
  safe_mutex_unlock (_1736);

  <bb 544> [0.00%]:
  syncSetProducerDone (1);
  goto <bb 577>; [100.00%]

  <bb 545> [0.02%]:
  _1737 = QuietMode;
  if (_1737 != 1)
    goto <bb 546>; [79.76%]
  else
    goto <bb 549>; [20.24%]

  <bb 546> [0.02%]:
  _1738 = fileData;
  _1739 = _1738->bufSize;
  if (_1739 > 250000000)
    goto <bb 547>; [33.00%]
  else
    goto <bb 549>; [67.00%]

  <bb 547> [0.01%]:
  _1740 = (long unsigned int) _1739;
  _1741 = stderr;
  __fprintf_chk (_1741, 1, "pbzip2:  *WARNING: Compressed block size is large [%lu bytes].\n", _1740);

  <bb 548> [0.01%]:
  _1742 = stderr;
  __builtin_fwrite ("          If program aborts, use regular BZIP2 to decompress.\n", 1, 62, _1742);

  <bb 549> [0.02%]:
  _1743 = _1563->mut;
  safe_mutex_lock (_1743);

  <bb 997> [0.02%]:

  <bb 550> [0.15%]:
  _1744 = _1563->full;
  if (_1744 == 0)
    goto <bb 560>; [7.50%]
  else
    goto <bb 551>; [92.50%]

  <bb 551> [0.14%]:
  _1745 = _1563->mut;
  _1746 = _1563->notFull;
  _1785 = pthread_cond_wait (_1746, _1745);

  <bb 552> [0.14%]:
  if (_1785 != 0)
    goto <bb 553>; [0.04%]
  else
    goto <bb 555>; [99.96%]

  <bb 553> [0.00%]:
  _1786 = stderr;
  __fprintf_chk (_1786, 1, "pthread_cond_wait error [%d]! Aborting immediately!\n", _1785);

  <bb 554> [0.00%]:
  pthread_mutex_unlock (_1745);
  cleanupAndQuit (-8);

  <bb 555> [0.14%]:
  _1747 = NumBlocks;
  _1748 = producerDecompressCheckInterrupt (hInfile_390, &fileData, _1747);

  <bb 556> [0.14%]:
  if (_1748 != 0)
    goto <bb 557>; [7.50%]
  else
    goto <bb 1008>; [92.50%]

  <bb 1008> [0.13%]:
  goto <bb 550>; [100.00%]

  <bb 557> [0.01%]:
  _1749 = _1563->notEmpty;
  safe_cond_broadcast (_1749);

  <bb 558> [0.01%]:
  syncSetProducerDone (1);

  <bb 559> [0.01%]:
  _1750 = _1563->mut;
  safe_mutex_unlock (_1750);
  goto <bb 577>; [100.00%]

  <bb 560> [0.01%]:
  _1751 = fileData;
  add (_1563, _1751);
  _1752 = _1563->notEmpty;
  ret_1787 = pthread_cond_signal (_1752);
  if (ret_1787 != 0)
    goto <bb 561>; [0.04%]
  else
    goto <bb 563>; [99.96%]

  <bb 561> [0.00%]:
  _1788 = stderr;
  __fprintf_chk (_1788, 1, "pthread_cond_signal error [%d]! Aborting immediately!\n", ret_1787);

  <bb 562> [0.00%]:
  cleanupAndQuit (-7);

  <bb 563> [0.01%]:
  safe_mutex_lock (&ProgressIndicatorsMutex);

  <bb 564> [0.01%]:
  _1754 = _1751->bufSize;
  _1755 = (long int) _1754;
  _1756 = InBytesProduced;
  _1757 = _1755 + _1756;
  InBytesProduced = _1757;
  _1758 = _1751->blockNumber;
  _1759 = _1758 + 1;
  NumBlocks = _1759;
  safe_mutex_unlock (&ProgressIndicatorsMutex);

  <bb 565> [0.01%]:
  _1760 = _1563->mut;
  safe_mutex_unlock (_1760);

  <bb 566> [0.01%]:
  _1761 = getNextStream (&bz2StreamScanner);

  <bb 567> [0.01%]:
  fileData = _1761;
  goto <bb 536>; [100.00%]

  <bb 568> [0.00%]:
  _1762 = fileData;
  operator delete (_1762, 40);
  _1763 = bz2StreamScanner._errState;
  if (_1763 != 0)
    goto <bb 569>; [33.00%]
  else
    goto <bb 570>; [67.00%]

  <bb 569> [0.00%]:
  handle_error (1, 1, "pbzip2: producer_decompress: *ERROR: when reading bzip2 input stream\n");
  goto <bb 577>; [100.00%]

  <bb 570> [0.00%]:
  _1764 = bz2StreamScanner._bz2HeaderFound;
  if (_1764 != 0)
    goto <bb 571>; [67.00%]
  else
    goto <bb 573>; [33.00%]

  <bb 571> [0.00%]:
  _1765 = bz2StreamScanner._eof;
  if (_1765 != 0)
    goto <bb 572>; [33.00%]
  else
    goto <bb 573>; [67.00%]

  <bb 572> [0.00%]:
  syncSetProducerDone (1);
  goto <bb 574>; [100.00%]

  <bb 573> [0.00%]:
  handle_error (1, 1, "pbzip2: producer_decompress: *ERROR: input file is not a valid bzip2 stream\n");
  goto <bb 577>; [100.00%]

  <bb 574> [0.00%]:
  _1766 = _1563->mut;
  safe_mutex_lock (_1766);

  <bb 575> [0.00%]:
  _1767 = _1563->notEmpty;
  safe_cond_broadcast (_1767);

  <bb 576> [0.00%]:
  _1768 = _1563->mut;
  safe_mutex_unlock (_1768);

  <bb 577> [0.01%]:
  # _1769 = PHI <0(544), 0(559), -1(569), -1(573), 0(576)>
  __comp_dtor  (&bz2StreamScanner);
  bz2StreamScanner ={v} {CLOBBER};
  fileData ={v} {CLOBBER};
  if (_1769 == -99)
    goto <bb 579>; [20.24%]
  else
    goto <bb 584>; [79.76%]

<L31> [0.00%]:
  __comp_dtor  (&bz2StreamScanner);
  resx 48

  <bb 579> [0.00%]:
  _308 = output;
  _810 = pthread_join (_308, 0B);

  <bb 580> [0.00%]:
  if (_810 != 0)
    goto <bb 581>; [2.00%]
  else
    goto <bb 586>; [98.00%]

  <bb 581> [0.00%]:
  _812 = getInstance ();

  <bb 582> [0.00%]:
  saveError (_812);
  handle_error (1, 1, "pbzip2: *ERROR: Error joining fileWriter thread (code = %d)  Aborting...\n", _1769);

  <bb 583> [0.00%]:
  _309 = TerminatorThread;
  pthread_join (_309, 0B);
  goto <bb 973>; [100.00%]

  <bb 584> [0.01%]:
  if (_1769 != 0)
    goto <bb 585>; [50.00%]
  else
    goto <bb 586>; [50.00%]

  <bb 585> [0.01%]:

  <bb 586> [0.04%]:
  # errLevel_428 = PHI <errLevel_426(506), errLevel_426(580), errLevel_426(584), 1(585)>
  # noThreads_441 = PHI <noThreads_440(506), 1(580), noThreads_440(584), noThreads_440(585)>
  # switchedMtToSt_469 = PHI <0(506), 1(580), 0(584), 0(585)>
  # errLevelCurrentFile_471 = PHI <0(506), 0(580), 0(584), 1(585)>
  _310 = noThreads_441 == 1;
  _311 = errLevelCurrentFile_471 == 0;
  _312 = _310 & _311;
  if (_312 != 0)
    goto <bb 587>; [50.00%]
  else
    goto <bb 898>; [50.00%]

  <bb 587> [0.02%]:
  _313 = QuietMode;
  if (_313 != 1)
    goto <bb 588>; [48.88%]
  else
    goto <bb 589>; [51.12%]

  <bb 588> [0.01%]:
  _314 = stderr;
  __builtin_fwrite ("Decompressing data (no threads)...\n", 1, 35, _314);

  <bb 589> [0.02%]:
  if (hInfile_390 > 0)
    goto <bb 590>; [64.00%]
  else
    goto <bb 591>; [36.00%]

  <bb 590> [0.01%]:
  close (hInfile_390);

  <bb 591> [0.02%]:
  _906 = outFilename._M_dataplus._M_p;
  nUnused = 0;
  _1789 = strcmp (InFilename_685, "-");
  if (_1789 != 0)
    goto <bb 592>; [33.00%]
  else
    goto <bb 595>; [67.00%]

  <bb 592> [0.01%]:
  _1790 = fopen (InFilename_685, "rb");

  <bb 593> [0.01%]:
  if (_1790 == 0B)
    goto <bb 594>; [0.43%]
  else
    goto <bb 596>; [99.57%]

  <bb 594> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not open input file [%s]!  Aborting...\n", InFilename_685);
  goto <bb 727>; [100.00%]

  <bb 595> [0.01%]:
  zStream_1791 = stdin;

  <bb 596> [0.02%]:
  # zStream_1792 = PHI <_1790(593), zStream_1791(595)>
  _1793 = ferror (zStream_1792);
  if (_1793 != 0)
    goto <bb 597>; [2.00%]
  else
    goto <bb 600>; [98.00%]

  <bb 597> [0.00%]:
  _1794 = stdin;
  if (zStream_1792 != _1794)
    goto <bb 598>; [57.44%]
  else
    goto <bb 599>; [42.56%]

  <bb 598> [0.00%]:
  fclose (zStream_1792);

  <bb 599> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Problem with input stream of file [%s]!  Aborting...\n", InFilename_685);
  goto <bb 727>; [100.00%]

  <bb 600> [0.02%]:
  _1795 = OutputStdOut;
  if (_1795 == 0)
    goto <bb 601>; [33.00%]
  else
    goto <bb 604>; [67.00%]

  <bb 601> [0.01%]:
  _1796 = safe_fopen_output (_906, "wb");

  <bb 602> [0.01%]:
  if (_1796 == 0B)
    goto <bb 603>; [0.43%]
  else
    goto <bb 605>; [99.57%]

  <bb 603> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not open output file [%s]!  Aborting...\n", _906);
  goto <bb 727>; [100.00%]

  <bb 604> [0.01%]:
  stream_1797 = stdout;

  <bb 605> [0.02%]:
  # stream_1798 = PHI <_1796(602), stream_1797(604)>
  _1799 = ferror (stream_1798);
  if (_1799 != 0)
    goto <bb 606>; [2.00%]
  else
    goto <bb 995>; [98.00%]

  <bb 995> [0.02%]:
  goto <bb 989>; [100.00%]

  <bb 606> [0.00%]:
  _1800 = stdout;
  if (stream_1798 != _1800)
    goto <bb 607>; [57.44%]
  else
    goto <bb 608>; [42.56%]

  <bb 607> [0.00%]:
  fclose (stream_1798);

  <bb 608> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Problem with output stream of file [%s]!  Aborting...\n", InFilename_685);
  goto <bb 727>; [100.00%]

  <bb 609> [0.01%]:
  # streamNo_1529 = PHI <streamNo_1814(691), streamNo_1814(694)>

  <bb 989> [0.03%]:
  # streamNo_1810 = PHI <streamNo_1529(609), 0(995)>
  safe_mutex_lock (&TerminateFlagMutex);

  <bb 610> [0.03%]:
  ret_1801 = terminateFlag;
  safe_mutex_unlock (&TerminateFlagMutex);

  <bb 611> [0.03%]:
  if (ret_1801 != 0)
    goto <bb 612>; [2.00%]
  else
    goto <bb 617>; [98.00%]

  <bb 612> [0.00%]:
  _1802 = stderr;
  __builtin_fwrite ("directdecompress: terminating1 - terminateFlag set\n", 1, 51, _1802);

  <bb 613> [0.00%]:
  _1803 = stdin;
  if (zStream_1792 != _1803)
    goto <bb 614>; [53.47%]
  else
    goto <bb 615>; [46.53%]

  <bb 614> [0.00%]:
  fclose (zStream_1792);

  <bb 615> [0.00%]:
  _1804 = stdout;
  if (stream_1798 != _1804)
    goto <bb 616>; [53.47%]
  else
    goto <bb 727>; [46.53%]

  <bb 616> [0.00%]:
  fclose (stream_1798);
  goto <bb 727>; [100.00%]

  <bb 617> [0.03%]:
  _1805 = nUnused;
  _1807 = BZ2_bzReadOpen (&bzerr, zStream_1792, 0, 0, &unused, _1805);

  <bb 618> [0.03%]:
  if (_1807 == 0B)
    goto <bb 620>; [2.00%]
  else
    goto <bb 619>; [98.00%]

  <bb 619> [0.02%]:
  _1808 = bzerr;
  if (_1808 != 0)
    goto <bb 620>; [2.00%]
  else
    goto <bb 627>; [98.00%]

  <bb 620> [0.00%]:
  _1809 = bzerr;
  _1811 = testBZ2ErrorHandling (_1809, _1807, streamNo_1810);

  <bb 621> [0.00%]:
  _1812 = stdin;
  if (zStream_1792 != _1812)
    goto <bb 622>; [53.47%]
  else
    goto <bb 623>; [46.53%]

  <bb 622> [0.00%]:
  fclose (zStream_1792);

  <bb 623> [0.00%]:
  _1813 = stdout;
  if (stream_1798 != _1813)
    goto <bb 624>; [53.47%]
  else
    goto <bb 625>; [46.53%]

  <bb 624> [0.00%]:
  fclose (stream_1798);

  <bb 625> [0.00%]:
  if (_1811 != 0)
    goto <bb 626>; [33.00%]
  else
    goto <bb 727>; [67.00%]

  <bb 626> [0.00%]:
  syncSetTerminateFlag (1);
  goto <bb 727>; [100.00%]

  <bb 627> [0.02%]:
  streamNo_1814 = streamNo_1810 + 1;

  <bb 628> [0.20%]:
  _1815 = bzerr;
  if (_1815 != 0)
    goto <bb 675>; [3.75%]
  else
    goto <bb 629>; [96.25%]

  <bb 629> [0.19%]:
  safe_mutex_lock (&TerminateFlagMutex);

  <bb 630> [0.19%]:
  ret_1816 = terminateFlag;
  safe_mutex_unlock (&TerminateFlagMutex);

  <bb 631> [0.19%]:
  if (ret_1816 != 0)
    goto <bb 632>; [3.75%]
  else
    goto <bb 637>; [96.25%]

  <bb 632> [0.01%]:
  _1817 = stderr;
  __builtin_fwrite ("directdecompress: terminating2 - terminateFlag set\n", 1, 51, _1817);

  <bb 633> [0.01%]:
  _1818 = stdin;
  if (zStream_1792 != _1818)
    goto <bb 634>; [53.47%]
  else
    goto <bb 635>; [46.53%]

  <bb 634> [0.00%]:
  fclose (zStream_1792);

  <bb 635> [0.01%]:
  _1819 = stdout;
  if (stream_1798 != _1819)
    goto <bb 636>; [53.47%]
  else
    goto <bb 727>; [46.53%]

  <bb 636> [0.00%]:
  fclose (stream_1798);
  goto <bb 727>; [100.00%]

  <bb 637> [0.19%]:
  _1820 = BZ2_bzRead (&bzerr, _1807, &obuf, 5000);

  <bb 638> [0.19%]:
  _1821 = bzerr;
  if (_1821 == -5)
    goto <bb 639>; [34.00%]
  else
    goto <bb 663>; [66.00%]

  <bb 639> [0.06%]:
  _1822 = ForceOverwrite;
  if (_1822 == 1)
    goto <bb 640>; [3.75%]
  else
    goto <bb 663>; [96.25%]

  <bb 640> [0.00%]:
  rewind (zStream_1792);

  <bb 994> [0.00%]:

  <bb 641> [0.02%]:
  _1823 = fgetc (zStream_1792);

  <bb 642> [0.02%]:
  if (_1823 == -1)
    goto <bb 695> (closeok); [5.00%]
  else
    goto <bb 643>; [95.00%]

  <bb 643> [0.02%]:
  ungetc (_1823, zStream_1792);

  <bb 644> [0.02%]:
  _1824 = __fread_alias (&obuf, 1, 5000, zStream_1792);

  <bb 645> [0.02%]:
  nread_1825 = (int) _1824;
  _1826 = ferror (zStream_1792);
  if (_1826 != 0)
    goto <bb 646>; [5.00%]
  else
    goto <bb 653>; [95.00%]

  <bb 646> [0.00%]:
  _1827 = bzerr;
  _1828 = testBZ2ErrorHandling (_1827, _1807, streamNo_1814);

  <bb 647> [0.00%]:
  _1829 = stdin;
  if (zStream_1792 != _1829)
    goto <bb 648>; [53.47%]
  else
    goto <bb 649>; [46.53%]

  <bb 648> [0.00%]:
  fclose (zStream_1792);

  <bb 649> [0.00%]:
  _1830 = stdout;
  if (stream_1798 != _1830)
    goto <bb 650>; [53.47%]
  else
    goto <bb 651>; [46.53%]

  <bb 650> [0.00%]:
  fclose (stream_1798);

  <bb 651> [0.00%]:
  if (_1828 != 0)
    goto <bb 652>; [33.00%]
  else
    goto <bb 727>; [67.00%]

  <bb 652> [0.00%]:
  syncSetTerminateFlag (1);
  goto <bb 727>; [100.00%]

  <bb 653> [0.02%]:
  if (nread_1825 > 0)
    goto <bb 654>; [46.68%]
  else
    goto <bb 655>; [53.32%]

  <bb 654> [0.01%]:
  _1831 = (long unsigned int) nread_1825;
  fwrite (&obuf, 1, _1831, stream_1798);

  <bb 655> [0.02%]:
  _1832 = ferror (stream_1798);
  if (_1832 != 0)
    goto <bb 656>; [5.00%]
  else
    goto <bb 1006>; [95.00%]

  <bb 1006> [0.02%]:
  goto <bb 641>; [100.00%]

  <bb 656> [0.00%]:
  _1833 = bzerr;
  _1834 = testBZ2ErrorHandling (_1833, _1807, streamNo_1814);

  <bb 657> [0.00%]:
  _1835 = stdin;
  if (zStream_1792 != _1835)
    goto <bb 658>; [53.47%]
  else
    goto <bb 659>; [46.53%]

  <bb 658> [0.00%]:
  fclose (zStream_1792);

  <bb 659> [0.00%]:
  _1836 = stdout;
  if (stream_1798 != _1836)
    goto <bb 660>; [53.47%]
  else
    goto <bb 661>; [46.53%]

  <bb 660> [0.00%]:
  fclose (stream_1798);

  <bb 661> [0.00%]:
  if (_1834 != 0)
    goto <bb 662>; [33.00%]
  else
    goto <bb 727>; [67.00%]

  <bb 662> [0.00%]:
  syncSetTerminateFlag (1);
  goto <bb 727>; [100.00%]

  <bb 663> [0.18%]:
  if (_1821 == 0)
    goto <bb 665>; [50.00%]
  else
    goto <bb 664>; [50.00%]

  <bb 664> [0.09%]:
  if (_1821 == 4)
    goto <bb 665>; [34.00%]
  else
    goto <bb 667>; [66.00%]

  <bb 665> [0.12%]:
  if (_1820 > 0)
    goto <bb 666>; [46.68%]
  else
    goto <bb 667>; [53.32%]

  <bb 666> [0.06%]:
  _1837 = (long unsigned int) _1820;
  fwrite (&obuf, 1, _1837, stream_1798);

  <bb 667> [0.18%]:
  _1838 = ferror (stream_1798);
  if (_1838 != 0)
    goto <bb 668>; [3.75%]
  else
    goto <bb 1007>; [96.25%]

  <bb 1007> [0.17%]:
  goto <bb 628>; [100.00%]

  <bb 668> [0.01%]:
  _1839 = bzerr;
  _1840 = testBZ2ErrorHandling (_1839, _1807, streamNo_1814);

  <bb 669> [0.01%]:
  _1841 = stdin;
  if (zStream_1792 != _1841)
    goto <bb 670>; [53.47%]
  else
    goto <bb 671>; [46.53%]

  <bb 670> [0.00%]:
  fclose (zStream_1792);

  <bb 671> [0.01%]:
  _1842 = stdout;
  if (stream_1798 != _1842)
    goto <bb 672>; [53.47%]
  else
    goto <bb 673>; [46.53%]

  <bb 672> [0.00%]:
  fclose (stream_1798);

  <bb 673> [0.01%]:
  if (_1840 != 0)
    goto <bb 674>; [33.00%]
  else
    goto <bb 727>; [67.00%]

  <bb 674> [0.00%]:
  syncSetTerminateFlag (1);
  goto <bb 727>; [100.00%]

  <bb 675> [0.01%]:
  if (_1815 != 4)
    goto <bb 676>; [2.00%]
  else
    goto <bb 683>; [98.00%]

  <bb 676> [0.00%]:
  _1843 = testBZ2ErrorHandling (_1815, _1807, streamNo_1814);

  <bb 677> [0.00%]:
  _1844 = stdin;
  if (zStream_1792 != _1844)
    goto <bb 678>; [53.47%]
  else
    goto <bb 679>; [46.53%]

  <bb 678> [0.00%]:
  fclose (zStream_1792);

  <bb 679> [0.00%]:
  _1845 = stdout;
  if (stream_1798 != _1845)
    goto <bb 680>; [53.47%]
  else
    goto <bb 681>; [46.53%]

  <bb 680> [0.00%]:
  fclose (stream_1798);

  <bb 681> [0.00%]:
  if (_1843 != 0)
    goto <bb 682>; [33.00%]
  else
    goto <bb 727>; [67.00%]

  <bb 682> [0.00%]:
  syncSetTerminateFlag (1);
  goto <bb 727>; [100.00%]

  <bb 683> [0.01%]:
  BZ2_bzReadGetUnused (&bzerr, _1807, &unusedTmp, &nUnused);

  <bb 684> [0.01%]:
  _1846 = bzerr;
  if (_1846 != 0)
    goto <bb 685>; [2.00%]
  else
    goto <bb 996>; [98.00%]

  <bb 996> [0.01%]:
  goto <bb 686>; [100.00%]

  <bb 685> [0.00%]:
  handle_error (1, 3, "pbzip2: *ERROR: Unexpected error [bzerr=%d]. Aborting!\n", _1846);
  goto <bb 727>; [100.00%]

  <bb 686> [0.05%]:
  # i_1848 = PHI <0(996), i_1853(687)>
  _1847 = nUnused;
  if (_1847 <= i_1848)
    goto <bb 688>; [15.00%]
  else
    goto <bb 687>; [85.00%]

  <bb 687> [0.04%]:
  _1849 = unusedTmp;
  _1850 = (sizetype) i_1848;
  _1851 = _1849 + _1850;
  _1852 = *_1851;
  unused[i_1848] = _1852;
  i_1853 = i_1848 + 1;
  goto <bb 686>; [100.00%]

  <bb 688> [0.01%]:
  BZ2_bzReadClose (&bzerr, _1807);

  <bb 689> [0.01%]:
  _1854 = bzerr;
  if (_1854 != 0)
    goto <bb 690>; [2.00%]
  else
    goto <bb 691>; [98.00%]

  <bb 690> [0.00%]:
  handle_error (1, 3, "pbzip2: *ERROR: Unexpected error [bzerr=%d]. Aborting!\n", _1854);
  goto <bb 727>; [100.00%]

  <bb 691> [0.01%]:
  _1855 = nUnused;
  if (_1855 == 0)
    goto <bb 692>; [33.00%]
  else
    goto <bb 609>; [67.00%]

  <bb 692> [0.00%]:
  _1856 = fgetc (zStream_1792);

  <bb 693> [0.00%]:
  if (_1856 == -1)
    goto <bb 695> (closeok); [2.00%]
  else
    goto <bb 694>; [98.00%]

  <bb 694> [0.00%]:
  ungetc (_1856, zStream_1792);
  goto <bb 609>; [100.00%]

closeok [0.00%]:
  _1857 = ferror (zStream_1792);
  if (_1857 != 0)
    goto <bb 696>; [3.98%]
  else
    goto <bb 701>; [96.02%]

  <bb 696> [0.00%]:
  _1858 = stdin;
  if (zStream_1792 != _1858)
    goto <bb 697>; [53.47%]
  else
    goto <bb 698>; [46.53%]

  <bb 697> [0.00%]:
  fclose (zStream_1792);

  <bb 698> [0.00%]:
  _1859 = stdout;
  if (stream_1798 != _1859)
    goto <bb 699>; [57.44%]
  else
    goto <bb 700>; [42.56%]

  <bb 699> [0.00%]:
  fclose (stream_1798);

  <bb 700> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Problem with input stream of file [%s]!  Skipping...\n", InFilename_685);
  goto <bb 727>; [100.00%]

  <bb 701> [0.00%]:
  _1869 = fclose (zStream_1792);

  <bb 702> [0.00%]:
  if (_1869 == -1)
    goto <bb 703>; [22.95%]
  else
    goto <bb 705>; [77.05%]

  <bb 703> [0.00%]:
  _1870 = getInstance ();

  <bb 704> [0.00%]:
  saveError (_1870);

  <bb 705> [0.00%]:
  if (_1869 == -1)
    goto <bb 706>; [1.04%]
  else
    goto <bb 707>; [98.96%]

  <bb 706> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Problem closing file [%s]!  Skipping...\n", InFilename_685);
  goto <bb 727>; [100.00%]

  <bb 707> [0.00%]:
  _1861 = ferror (stream_1798);
  if (_1861 != 0)
    goto <bb 708>; [3.98%]
  else
    goto <bb 711>; [96.02%]

  <bb 708> [0.00%]:
  _1862 = stdout;
  if (stream_1798 != _1862)
    goto <bb 709>; [57.44%]
  else
    goto <bb 710>; [42.56%]

  <bb 709> [0.00%]:
  fclose (stream_1798);

  <bb 710> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Problem with output stream of file [%s]!  Skipping...\n", InFilename_685);
  goto <bb 727>; [100.00%]

  <bb 711> [0.00%]:
  _1871 = fflush (stream_1798);

  <bb 712> [0.00%]:
  if (_1871 == -1)
    goto <bb 713>; [22.95%]
  else
    goto <bb 715>; [77.05%]

  <bb 713> [0.00%]:
  _1872 = getInstance ();

  <bb 714> [0.00%]:
  saveError (_1872);

  <bb 715> [0.00%]:
  if (_1871 != 0)
    goto <bb 716>; [2.00%]
  else
    goto <bb 719>; [98.00%]

  <bb 716> [0.00%]:
  _1864 = stdout;
  if (stream_1798 != _1864)
    goto <bb 717>; [57.44%]
  else
    goto <bb 718>; [42.56%]

  <bb 717> [0.00%]:
  fclose (stream_1798);

  <bb 718> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Problem with output stream of file [%s]!  Skipping...\n", InFilename_685);
  goto <bb 727>; [100.00%]

  <bb 719> [0.00%]:
  _1865 = stdout;
  if (stream_1798 != _1865)
    goto <bb 720>; [70.00%]
  else
    goto <bb 726>; [30.00%]

  <bb 720> [0.00%]:
  _1873 = fclose (stream_1798);

  <bb 721> [0.00%]:
  if (_1873 == -1)
    goto <bb 722>; [22.95%]
  else
    goto <bb 724>; [77.05%]

  <bb 722> [0.00%]:
  _1874 = getInstance ();

  <bb 723> [0.00%]:
  saveError (_1874);

  <bb 724> [0.00%]:
  if (_1873 == -1)
    goto <bb 725>; [0.52%]
  else
    goto <bb 726>; [99.48%]

  <bb 725> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Problem closing file [%s]!  Skipping...\n", _906);
  goto <bb 727>; [100.00%]

  <bb 726> [0.00%]:
  syncSetProducerDone (1);

  <bb 727> [0.02%]:
  # _1867 = PHI <-1(594), -1(599), -1(603), -1(608), -1(615), -1(616), _1811(625), _1811(626), -1(635), -1(636), _1828(651), _1828(652), _1834(661), _1834(662), _1840(673), _1840(674), _1843(681), _1843(682), 3(685), 3(690), -1(700), -1(706), -1(710), -1(718), -1(725), 0(726)>
  obuf ={v} {CLOBBER};
  unused ={v} {CLOBBER};
  unusedTmp ={v} {CLOBBER};
  bzerr ={v} {CLOBBER};
  nUnused ={v} {CLOBBER};
  if (_1867 != 0)
    goto <bb 728>; [50.00%]
  else
    goto <bb 898>; [50.00%]

  <bb 728> [0.01%]:
  goto <bb 898>; [100.00%]

  <bb 729> [0.10%]:
  if (noThreads_440 == 0)
    goto <bb 730>; [50.00%]
  else
    goto <bb 833>; [50.00%]

  <bb 730> [0.05%]:
  _315 = QuietMode;
  if (_315 != 1)
    goto <bb 731>; [48.88%]
  else
    goto <bb 732>; [51.12%]

  <bb 731> [0.02%]:
  _316 = stderr;
  __builtin_fwrite ("Compressing data...\n", 1, 20, _316);

  <bb 732> [0.05%]:
  # i_1076 = PHI <0(731), 0(730)>

  <bb 733> [0.35%]:
  # i_461 = PHI <i_1076(732), i_785(738)>
  _317 = (int) i_461;
  _318 = numCPU;
  if (_317 >= _318)
    goto <bb 739>; [7.50%]
  else
    goto <bb 734>; [92.50%]

  <bb 734> [0.32%]:
  _319 = _1563->consumers;
  _320 = i_461 * 8;
  _321 = _319 + _320;
  ret_784 = pthread_create (_321, &ChildThreadAttributes, consumer, _1563);
  if (ret_784 != 0)
    goto <bb 735>; [7.50%]
  else
    goto <bb 738>; [92.50%]

  <bb 735> [0.02%]:
  _787 = getInstance ();

  <bb 736> [0.02%]:
  saveError (_787);
  handle_error (1, 1, "pbzip2: *ERROR: Not enough resources to create consumer thread #%u (code = %d)  Aborting...\n", i_461, ret_784);

  <bb 737> [0.02%]:
  _322 = TerminatorThread;
  pthread_join (_322, 0B);
  goto <bb 973>; [100.00%]

  <bb 738> [0.30%]:
  i_785 = i_461 + 1;
  goto <bb 733>; [100.00%]

  <bb 739> [0.03%]:
  _907 = outFilename._M_dataplus._M_p;
  ret_792 = pthread_create (&output, &ChildThreadAttributes, fileWriter, _907);
  if (ret_792 != 0)
    goto <bb 740>; [2.00%]
  else
    goto <bb 742>; [98.00%]

  <bb 740> [0.00%]:
  handle_error (1, 1, "pbzip2: *ERROR: Not enough resources to create fileWriter thread (code = %d)  Aborting...\n", ret_792);

  <bb 741> [0.00%]:
  _323 = TerminatorThread;
  pthread_join (_323, 0B);
  goto <bb 973>; [100.00%]

  <bb 742> [0.03%]:
  ret_1903 = pthread_mutex_lock (&ProgressIndicatorsMutex);
  if (ret_1903 != 0)
    goto <bb 743>; [0.04%]
  else
    goto <bb 745>; [99.96%]

  <bb 743> [0.00%]:
  _1904 = stderr;
  __fprintf_chk (_1904, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_1903);

  <bb 744> [0.00%]:
  cleanupAndQuit (-5);

  <bb 745> [0.03%]:
  NumBlocks = 0;
  InBytesProduced = 0;
  ret_1905 = pthread_mutex_unlock (&ProgressIndicatorsMutex);
  if (ret_1905 != 0)
    goto <bb 746>; [0.04%]
  else
    goto <bb 998>; [99.96%]

  <bb 746> [0.00%]:
  _1906 = stderr;
  __fprintf_chk (_1906, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_1905);

  <bb 747> [0.00%]:
  cleanupAndQuit (-6);

  <bb 998> [0.03%]:

  <bb 748> [0.05%]:
  ret_1907 = pthread_mutex_lock (&TerminateFlagMutex);
  if (ret_1907 != 0)
    goto <bb 749>; [0.04%]
  else
    goto <bb 751>; [99.96%]

  <bb 749> [0.00%]:
  _1908 = stderr;
  __fprintf_chk (_1908, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_1907);

  <bb 750> [0.00%]:
  cleanupAndQuit (-5);

  <bb 751> [0.05%]:
  ret_1875 = terminateFlag;
  ret_1909 = pthread_mutex_unlock (&TerminateFlagMutex);
  if (ret_1909 != 0)
    goto <bb 752>; [0.04%]
  else
    goto <bb 754>; [99.96%]

  <bb 752> [0.00%]:
  _1910 = stderr;
  __fprintf_chk (_1910, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_1909);

  <bb 753> [0.00%]:
  cleanupAndQuit (-6);

  <bb 754> [0.05%]:
  if (ret_1875 != 0)
    goto <bb 755>; [2.50%]
  else
    goto <bb 756>; [97.50%]

  <bb 755> [0.00%]:
  close (hInfile_390);
  goto <bb 831>; [100.00%]

  <bb 756> [0.05%]:
  inSize_1876 = (size_t) blockSize_399;
  FileData_1877 = operator new [] (inSize_1876, &nothrow);
  if (FileData_1877 == 0B)
    goto <bb 757>; [2.50%]
  else
    goto <bb 1000>; [97.50%]

  <bb 1000> [0.05%]:
  goto <bb 759>; [100.00%]

  <bb 757> [0.00%]:
  close (hInfile_390);

  <bb 758> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not allocate memory (FileData)!  Aborting...\n");
  goto <bb 831>; [100.00%]

  <bb 759> [0.31%]:
  # buf_1914 = PHI <FileData_1877(1000), buf_1929(766)>
  # bufr_1923 = PHI <0(1000), bufr_1926(766)>
  # rsize_1912 = PHI <blockSize_399(1000), rsize_1928(766)>
  _1913 = (long unsigned int) rsize_1912;
  _1919 = __read_alias (hInfile_390, buf_1914, _1913);

  <bb 760> [0.31%]:
  # _1920 = PHI <_1919(759)>
  ret_1921 = (int) _1920;
  if (ret_1921 < 0)
    goto <bb 761>; [5.00%]
  else
    goto <bb 762>; [95.00%]

  <bb 761> [0.02%]:
  _1922 = (long int) ret_1921;
  goto <bb 767>; [100.00%]

  <bb 762> [0.29%]:
  if (ret_1921 == 0)
    goto <bb 763>; [5.00%]
  else
    goto <bb 764>; [95.00%]

  <bb 763> [0.01%]:
  _1924 = (long int) bufr_1923;
  goto <bb 767>; [100.00%]

  <bb 764> [0.28%]:
  _1925 = (long unsigned int) ret_1921;
  bufr_1926 = bufr_1923 + _1925;
  if (inSize_1876 == bufr_1926)
    goto <bb 765>; [5.00%]
  else
    goto <bb 766>; [95.00%]

  <bb 765> [0.01%]:
  _1927 = (long int) blockSize_399;
  goto <bb 767>; [100.00%]

  <bb 766> [0.27%]:
  rsize_1928 = rsize_1912 - ret_1921;
  buf_1929 = buf_1914 + _1925;
  goto <bb 759>; [100.00%]

  <bb 767> [0.04%]:
  # _1930 = PHI <_1922(761), _1924(763), _1927(765)>
  ret_1879 = (int) _1930;
  if (ret_1879 == 0)
    goto <bb 768>; [2.50%]
  else
    goto <bb 784>; [97.50%]

  <bb 768> [0.00%]:
  operator delete [] (FileData_1877);
  close (hInfile_390);

  <bb 769> [0.00%]:
  _1931 = ProducerDoneMutex;
  ret_1933 = pthread_mutex_lock (_1931);
  if (ret_1933 != 0)
    goto <bb 770>; [0.04%]
  else
    goto <bb 772>; [99.96%]

  <bb 770> [0.00%]:
  _1934 = stderr;
  __fprintf_chk (_1934, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_1933);

  <bb 771> [0.00%]:
  cleanupAndQuit (-5);

  <bb 772> [0.00%]:
  producerDone = 1;
  _1932 = ProducerDoneMutex;
  ret_1935 = pthread_mutex_unlock (_1932);
  if (ret_1935 != 0)
    goto <bb 773>; [0.04%]
  else
    goto <bb 775>; [99.96%]

  <bb 773> [0.00%]:
  _1936 = stderr;
  __fprintf_chk (_1936, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_1935);

  <bb 774> [0.00%]:
  cleanupAndQuit (-6);

  <bb 775> [0.00%]:
  _1880 = _1563->mut;
  ret_1937 = pthread_mutex_lock (_1880);
  if (ret_1937 != 0)
    goto <bb 776>; [0.04%]
  else
    goto <bb 778>; [99.96%]

  <bb 776> [0.00%]:
  _1938 = stderr;
  __fprintf_chk (_1938, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_1937);

  <bb 777> [0.00%]:
  cleanupAndQuit (-5);

  <bb 778> [0.00%]:
  _1881 = _1563->notEmpty;
  ret_1939 = pthread_cond_broadcast (_1881);
  if (ret_1939 != 0)
    goto <bb 779>; [0.04%]
  else
    goto <bb 781>; [99.96%]

  <bb 779> [0.00%]:
  _1940 = stderr;
  __fprintf_chk (_1940, 1, "pthread_cond_broadcast error [%d]! Aborting immediately!\n", ret_1939);

  <bb 780> [0.00%]:
  cleanupAndQuit (-7);

  <bb 781> [0.00%]:
  _1882 = _1563->mut;
  ret_1941 = pthread_mutex_unlock (_1882);
  if (ret_1941 != 0)
    goto <bb 782>; [0.04%]
  else
    goto <bb 831>; [99.96%]

  <bb 782> [0.00%]:
  _1942 = stderr;
  __fprintf_chk (_1942, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_1941);

  <bb 783> [0.00%]:
  cleanupAndQuit (-6);

  <bb 784> [0.04%]:
  if (ret_1879 < 0)
    goto <bb 785>; [2.50%]
  else
    goto <bb 787>; [97.50%]

  <bb 785> [0.00%]:
  close (hInfile_390);

  <bb 786> [0.00%]:
  operator delete [] (FileData_1877);
  handle_error (1, -1, "pbzip2: *ERROR: Could not read from file!  Aborting...\n");
  goto <bb 831>; [100.00%]

  <bb 787> [0.04%]:
  _1883 = (long unsigned int) ret_1879;
  if (blockSize_399 != ret_1879)
    goto <bb 788>; [66.00%]
  else
    goto <bb 789>; [34.00%]

  <bb 788> [0.03%]:

  <bb 789> [0.04%]:
  # inSize_1892 = PHI <inSize_1876(787), _1883(788)>
  _1884 = _1563->mut;
  ret_1943 = pthread_mutex_lock (_1884);
  if (ret_1943 != 0)
    goto <bb 790>; [0.04%]
  else
    goto <bb 999>; [99.96%]

  <bb 790> [0.00%]:
  _1944 = stderr;
  __fprintf_chk (_1944, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_1943);

  <bb 791> [0.00%]:
  cleanupAndQuit (-5);

  <bb 999> [0.04%]:

  <bb 792> [0.29%]:
  _1885 = _1563->full;
  if (_1885 == 0)
    goto <bb 805>; [7.50%]
  else
    goto <bb 793>; [92.50%]

  <bb 793> [0.27%]:
  _1886 = _1563->mut;
  _1887 = _1563->notFull;
  _1945 = pthread_cond_wait (_1887, _1886);

  <bb 794> [0.27%]:
  if (_1945 != 0)
    goto <bb 795>; [0.04%]
  else
    goto <bb 797>; [99.96%]

  <bb 795> [0.00%]:
  _1946 = stderr;
  __fprintf_chk (_1946, 1, "pthread_cond_wait error [%d]! Aborting immediately!\n", _1945);

  <bb 796> [0.00%]:
  pthread_mutex_unlock (_1886);
  cleanupAndQuit (-8);

  <bb 797> [0.27%]:
  ret_1947 = pthread_mutex_lock (&TerminateFlagMutex);
  if (ret_1947 != 0)
    goto <bb 798>; [0.04%]
  else
    goto <bb 800>; [99.96%]

  <bb 798> [0.00%]:
  _1948 = stderr;
  __fprintf_chk (_1948, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_1947);

  <bb 799> [0.00%]:
  cleanupAndQuit (-5);

  <bb 800> [0.27%]:
  ret_1888 = terminateFlag;
  ret_1949 = pthread_mutex_unlock (&TerminateFlagMutex);
  if (ret_1949 != 0)
    goto <bb 801>; [0.04%]
  else
    goto <bb 803>; [99.96%]

  <bb 801> [0.00%]:
  _1950 = stderr;
  __fprintf_chk (_1950, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_1949);

  <bb 802> [0.00%]:
  cleanupAndQuit (-6);

  <bb 803> [0.27%]:
  if (ret_1888 != 0)
    goto <bb 804>; [7.50%]
  else
    goto <bb 1010>; [92.50%]

  <bb 1010> [0.25%]:
  goto <bb 792>; [100.00%]

  <bb 804> [0.02%]:
  _1889 = _1563->mut;
  pthread_mutex_unlock (_1889);
  close (hInfile_390);
  goto <bb 831>; [100.00%]

  <bb 805> [0.02%]:
  _1890 = operator new (40, &nothrow);
  if (_1890 != 0B)
    goto <bb 806>; [70.00%]
  else
    goto <bb 807>; [30.00%]

  <bb 806> [0.02%]:
  _1891 = NumBlocks;
  _1893 = (unsigned int) inSize_1892;
  MEM[(struct  &)_1890] ={v} {CLOBBER};
  MEM[(struct outBuff *)_1890].buf = FileData_1877;
  MEM[(struct outBuff *)_1890].bufSize = _1893;
  MEM[(struct outBuff *)_1890].blockNumber = _1891;
  MEM[(struct outBuff *)_1890].sequenceNumber = 0;
  MEM[(struct outBuff *)_1890].inSize = 0;
  MEM[(struct outBuff *)_1890].isLastInSequence = 1;
  MEM[(struct outBuff *)_1890].next = 0B;

  <bb 807> [0.02%]:
  if (_1890 == 0B)
    goto <bb 808>; [2.50%]
  else
    goto <bb 810>; [97.50%]

  <bb 808> [0.00%]:
  close (hInfile_390);

  <bb 809> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not allocate memory (queueElement)!  Aborting...\n");
  goto <bb 831>; [100.00%]

  <bb 810> [0.02%]:
  _1953 = MEM[(struct ElementType *)_1890].sequenceNumber;
  if (_1953 > 1)
    goto <bb 811>; [64.00%]
  else
    goto <bb 812>; [36.00%]

  <bb 811> [0.01%]:
  _1954 = MEM[(struct queue *)_1563].lastElement;
  _1954->next = _1890;
  goto <bb 817>; [100.00%]

  <bb 812> [0.01%]:
  _1955 = MEM[(struct queue *)_1563].qData;
  _1956 = MEM[(struct queue *)_1563].tail;
  _1957 = (long unsigned int) _1956;
  _1958 = _1957 * 8;
  _1959 = _1955 + _1958;
  *_1959 = _1890;
  _1960 = MEM[(struct queue *)_1563].tail;
  _1961 = _1960 + 1;
  MEM[(struct queue *)_1563].tail = _1961;
  _1962 = MEM[(struct queue *)_1563].size;
  if (_1961 == _1962)
    goto <bb 813>; [34.00%]
  else
    goto <bb 814>; [66.00%]

  <bb 813> [0.00%]:
  MEM[(struct queue *)_1563].tail = 0;

  <bb 814> [0.01%]:
  _1963 = MEM[(struct queue *)_1563].tail;
  _1964 = MEM[(struct queue *)_1563].head;
  if (_1963 == _1964)
    goto <bb 815>; [34.00%]
  else
    goto <bb 816>; [66.00%]

  <bb 815> [0.00%]:
  MEM[(struct queue *)_1563].topLevelFull = 1;

  <bb 816> [0.01%]:
  MEM[(struct queue *)_1563].topLevelEmpty = 0;

  <bb 817> [0.02%]:
  MEM[(struct queue *)_1563].lastElement = _1890;
  _1965 = MEM[(struct queue *)_1563].count;
  _1966 = _1965 + 1;
  MEM[(struct queue *)_1563].count = _1966;
  _1967 = MEM[(struct queue *)_1563].size;
  if (_1966 == _1967)
    goto <bb 818>; [37.68%]
  else
    goto <bb 819>; [62.32%]

  <bb 818> [0.01%]:
  MEM[(struct queue *)_1563].full = 1;

  <bb 819> [0.02%]:
  MEM[(struct queue *)_1563].empty = 0;
  _1894 = _1563->notEmpty;
  ret_1951 = pthread_cond_signal (_1894);
  if (ret_1951 != 0)
    goto <bb 820>; [0.04%]
  else
    goto <bb 822>; [99.96%]

  <bb 820> [0.00%]:
  _1952 = stderr;
  __fprintf_chk (_1952, 1, "pthread_cond_signal error [%d]! Aborting immediately!\n", ret_1951);

  <bb 821> [0.00%]:
  cleanupAndQuit (-7);

  <bb 822> [0.02%]:
  ret_1968 = pthread_mutex_lock (&ProgressIndicatorsMutex);
  if (ret_1968 != 0)
    goto <bb 823>; [0.04%]
  else
    goto <bb 825>; [99.96%]

  <bb 823> [0.00%]:
  _1969 = stderr;
  __fprintf_chk (_1969, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_1968);

  <bb 824> [0.00%]:
  cleanupAndQuit (-5);

  <bb 825> [0.02%]:
  _1895 = NumBlocks;
  _1896 = _1895 + 1;
  NumBlocks = _1896;
  _1897 = InBytesProduced;
  _1898 = (long unsigned int) _1897;
  _1899 = inSize_1892 + _1898;
  _1900 = (long int) _1899;
  InBytesProduced = _1900;
  ret_1970 = pthread_mutex_unlock (&ProgressIndicatorsMutex);
  if (ret_1970 != 0)
    goto <bb 826>; [0.04%]
  else
    goto <bb 828>; [99.96%]

  <bb 826> [0.00%]:
  _1971 = stderr;
  __fprintf_chk (_1971, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_1970);

  <bb 827> [0.00%]:
  cleanupAndQuit (-6);

  <bb 828> [0.02%]:
  _1901 = _1563->mut;
  ret_1972 = pthread_mutex_unlock (_1901);
  if (ret_1972 != 0)
    goto <bb 829>; [0.04%]
  else
    goto <bb 1009>; [99.96%]

  <bb 1009> [0.02%]:
  goto <bb 748>; [100.00%]

  <bb 829> [0.00%]:
  _1973 = stderr;
  __fprintf_chk (_1973, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_1972);

  <bb 830> [0.00%]:
  cleanupAndQuit (-6);

  <bb 831> [0.03%]:
  # _1902 = PHI <-1(755), -1(758), 0(781), -1(786), -1(804), -1(809)>
  if (_1902 != 0)
    goto <bb 832>; [50.00%]
  else
    goto <bb 898>; [50.00%]

  <bb 832> [0.01%]:
  goto <bb 898>; [100.00%]

  <bb 833> [0.05%]:
  _324 = QuietMode;
  if (_324 != 1)
    goto <bb 834>; [66.00%]
  else
    goto <bb 835>; [34.00%]

  <bb 834> [0.03%]:
  _325 = stderr;
  __builtin_fwrite ("Compressing data (no threads)...\n", 1, 33, _325);

  <bb 835> [0.05%]:
  _908 = outFilename._M_dataplus._M_p;
  _326 = InFileSize;
  outSize = 0;
  _1974 = OutputStdOut;
  if (_1974 == 0)
    goto <bb 836>; [33.00%]
  else
    goto <bb 839>; [67.00%]

  <bb 836> [0.02%]:
  _1975 = safe_open_output (_908);

  <bb 837> [0.02%]:
  if (_1975 == -1)
    goto <bb 838>; [0.52%]
  else
    goto <bb 839>; [99.48%]

  <bb 838> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not create output file [%s]!\n", _908);
  goto <bb 896>; [100.00%]

  <bb 839> [0.05%]:
  # hOutfile_1979 = PHI <1(835), _1975(837)>

  <bb 840> [0.33%]:
  # CompressedSize_2008 = PHI <0(839), CompressedSize_2009(884)>
  # bytesLeft_1976 = PHI <_326(839), bytesLeft_1990(884)>
  # percentComplete_2016 = PHI <0(839), percentComplete_2014(884)>
  # currBlock_2010 = PHI <0(839), currBlock_2011(884)>
  if (bytesLeft_1976 <= 0)
    goto <bb 885>; [2.00%]
  else
    goto <bb 841>; [98.00%]

  <bb 841> [0.33%]:
  ret_2024 = pthread_mutex_lock (&TerminateFlagMutex);
  if (ret_2024 != 0)
    goto <bb 842>; [0.04%]
  else
    goto <bb 844>; [99.96%]

  <bb 842> [0.00%]:
  _2025 = stderr;
  __fprintf_chk (_2025, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_2024);

  <bb 843> [0.00%]:
  cleanupAndQuit (-5);

  <bb 844> [0.33%]:
  ret_1977 = terminateFlag;
  ret_2026 = pthread_mutex_unlock (&TerminateFlagMutex);
  if (ret_2026 != 0)
    goto <bb 845>; [0.04%]
  else
    goto <bb 847>; [99.96%]

  <bb 845> [0.00%]:
  _2027 = stderr;
  __fprintf_chk (_2027, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_2026);

  <bb 846> [0.00%]:
  cleanupAndQuit (-6);

  <bb 847> [0.33%]:
  if (ret_1977 != 0)
    goto <bb 848>; [2.00%]
  else
    goto <bb 852>; [98.00%]

  <bb 848> [0.01%]:
  close (hInfile_390);

  <bb 849> [0.01%]:
  _1978 = OutputStdOut;
  if (_1978 == 0)
    goto <bb 850>; [36.64%]
  else
    goto <bb 851>; [63.36%]

  <bb 850> [0.00%]:
  close (hOutfile_1979);

  <bb 851> [0.01%]:
  _1980 = stderr;
  __builtin_fwrite ("directcompress: terminating - terminateFlag set\n", 1, 48, _1980);
  goto <bb 896>; [100.00%]

  <bb 852> [0.32%]:
  _1981 = (long int) blockSize_399;
  if (bytesLeft_1976 > _1981)
    goto <bb 854>; [50.00%]
  else
    goto <bb 853>; [50.00%]

  <bb 853> [0.16%]:

  <bb 854> [0.32%]:
  # inSize_1982 = PHI <_1981(852), bytesLeft_1976(853)>
  _1983 = (sizetype) inSize_1982;
  FileData_1984 = operator new [] (_1983, &nothrow);
  if (FileData_1984 == 0B)
    goto <bb 855>; [2.00%]
  else
    goto <bb 859>; [98.00%]

  <bb 855> [0.01%]:
  close (hInfile_390);

  <bb 856> [0.01%]:
  _1985 = OutputStdOut;
  if (_1985 == 0)
    goto <bb 857>; [36.64%]
  else
    goto <bb 858>; [63.36%]

  <bb 857> [0.00%]:
  close (hOutfile_1979);

  <bb 858> [0.01%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not allocate memory (FileData)!  Aborting...\n");
  goto <bb 896>; [100.00%]

  <bb 859> [0.31%]:
  _1986 = do_read (hInfile_390, FileData_1984, _1983);

  <bb 860> [0.31%]:
  rret_1987 = (int) _1986;
  if (rret_1987 == 0)
    goto <bb 861>; [2.00%]
  else
    goto <bb 862>; [98.00%]

  <bb 861> [0.01%]:
  operator delete [] (FileData_1984);
  goto <bb 885>; [100.00%]

  <bb 862> [0.31%]:
  if (rret_1987 < 0)
    goto <bb 863>; [2.00%]
  else
    goto <bb 867>; [98.00%]

  <bb 863> [0.01%]:
  close (hInfile_390);

  <bb 864> [0.01%]:
  operator delete [] (FileData_1984);
  _1988 = OutputStdOut;
  if (_1988 == 0)
    goto <bb 865>; [36.64%]
  else
    goto <bb 866>; [63.36%]

  <bb 865> [0.00%]:
  close (hOutfile_1979);

  <bb 866> [0.01%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not read from file!  Aborting...\n");
  goto <bb 896>; [100.00%]

  <bb 867> [0.30%]:
  _1989 = (long int) rret_1987;
  bytesLeft_1990 = bytesLeft_1976 - _1989;
  _1991 = (double) inSize_1982;
  _1992 = _1991 * 1.0100000000000000088817841970012523233890533447265625e+0;
  _1993 = _1992 + 6.0e+2;
  _1994 = (int) _1993;
  _1995 = (unsigned int) _1994;
  outSize = _1995;
  _1996 = (sizetype) _1995;
  CompressedData_1997 = operator new [] (_1996, &nothrow);
  if (CompressedData_1997 == 0B)
    goto <bb 868>; [2.00%]
  else
    goto <bb 870>; [98.00%]

  <bb 868> [0.01%]:
  close (hInfile_390);

  <bb 869> [0.01%]:
  operator delete [] (FileData_1984);
  handle_error (1, -1, "pbzip2: *ERROR: Could not allocate memory (CompressedData)!  Aborting...\n");
  goto <bb 896>; [100.00%]

  <bb 870> [0.29%]:
  _1999 = BWTblockSize;
  _2000 = (unsigned int) inSize_1982;
  _2001 = BZ2_bzBuffToBuffCompress (CompressedData_1997, &outSize, FileData_1984, _2000, _1999, 0, 30);

  <bb 871> [0.29%]:
  if (_2001 != 0)
    goto <bb 872>; [2.00%]
  else
    goto <bb 874>; [98.00%]

  <bb 872> [0.01%]:
  close (hInfile_390);

  <bb 873> [0.01%]:
  operator delete [] (FileData_1984);
  handle_error (1, -1, "pbzip2: *ERROR during compression: %d!  Aborting...\n", _2001);
  goto <bb 896>; [100.00%]

  <bb 874> [0.29%]:
  _2002 = outSize;
  _2003 = (long unsigned int) _2002;
  _2004 = do_write (hOutfile_1979, CompressedData_1997, _2003);

  <bb 875> [0.29%]:
  ret_2005 = (int) _2004;
  if (ret_2005 <= 0)
    goto <bb 876>; [2.00%]
  else
    goto <bb 880>; [98.00%]

  <bb 876> [0.01%]:
  close (hInfile_390);

  <bb 877> [0.01%]:
  operator delete [] (FileData_1984);
  operator delete [] (CompressedData_1997);
  _2006 = OutputStdOut;
  if (_2006 == 0)
    goto <bb 878>; [36.64%]
  else
    goto <bb 879>; [63.36%]

  <bb 878> [0.00%]:
  close (hOutfile_1979);

  <bb 879> [0.01%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not write to file!  Aborting...\n");
  goto <bb 896>; [100.00%]

  <bb 880> [0.28%]:
  _2007 = (long int) ret_2005;
  CompressedSize_2009 = _2007 + CompressedSize_2008;
  currBlock_2011 = currBlock_2010 + 1;
  _2012 = currBlock_2011 * 100;
  _2013 = NumBlocksEstimated;
  percentComplete_2014 = _2012 / _2013;
  _2015 = QuietMode;
  if (_2015 != 1)
    goto <bb 881>; [66.00%]
  else
    goto <bb 884>; [34.00%]

  <bb 881> [0.19%]:
  if (percentComplete_2014 != percentComplete_2016)
    goto <bb 882>; [48.88%]
  else
    goto <bb 884>; [51.12%]

  <bb 882> [0.09%]:
  _2017 = stderr;
  __fprintf_chk (_2017, 1, "Completed: %d%%             \r", percentComplete_2014);

  <bb 883> [0.09%]:
  _2018 = stderr;
  fflush (_2018);

  <bb 884> [0.28%]:
  operator delete [] (FileData_1984);
  operator delete [] (CompressedData_1997);
  goto <bb 840>; [100.00%]

  <bb 885> [0.01%]:
  close (hInfile_390);

  <bb 886> [0.01%]:
  _2019 = OutputStdOut;
  if (_2019 == 0)
    goto <bb 887>; [33.00%]
  else
    goto <bb 888>; [67.00%]

  <bb 887> [0.00%]:
  close (hOutfile_1979);

  <bb 888> [0.01%]:
  _2020 = QuietMode;
  if (_2020 != 1)
    goto <bb 889>; [48.88%]
  else
    goto <bb 890>; [51.12%]

  <bb 889> [0.01%]:
  _2021 = (long unsigned int) CompressedSize_2008;
  _2022 = stderr;
  __fprintf_chk (_2022, 1, "    Output Size: %lu bytes\n", _2021);

  <bb 890> [0.01%]:
  _2028 = ProducerDoneMutex;
  ret_2030 = pthread_mutex_lock (_2028);
  if (ret_2030 != 0)
    goto <bb 891>; [0.04%]
  else
    goto <bb 893>; [99.96%]

  <bb 891> [0.00%]:
  _2031 = stderr;
  __fprintf_chk (_2031, 1, "pthread_mutex_lock error [%d]! Aborting immediately!\n", ret_2030);

  <bb 892> [0.00%]:
  cleanupAndQuit (-5);

  <bb 893> [0.01%]:
  producerDone = 1;
  _2029 = ProducerDoneMutex;
  ret_2032 = pthread_mutex_unlock (_2029);
  if (ret_2032 != 0)
    goto <bb 894>; [0.04%]
  else
    goto <bb 896>; [99.96%]

  <bb 894> [0.00%]:
  _2033 = stderr;
  __fprintf_chk (_2033, 1, "pthread_mutex_unlock error [%d]! Aborting immediately!\n", ret_2032);

  <bb 895> [0.00%]:
  cleanupAndQuit (-6);

  <bb 896> [0.05%]:
  # _2023 = PHI <-1(838), -1(851), -1(858), -1(866), -1(869), -1(873), -1(879), 0(893)>
  outSize ={v} {CLOBBER};
  if (_2023 != 0)
    goto <bb 897>; [50.00%]
  else
    goto <bb 898>; [50.00%]

  <bb 897> [0.02%]:

  <bb 898> [0.11%]:
  # errLevel_429 = PHI <errLevel_428(586), errLevel_428(727), 1(728), errLevel_426(831), 1(832), errLevel_426(896), 1(897)>
  # noThreads_442 = PHI <noThreads_441(586), noThreads_441(727), noThreads_441(728), noThreads_440(831), noThreads_440(832), noThreads_440(896), noThreads_440(897)>
  # switchedMtToSt_470 = PHI <switchedMtToSt_469(586), switchedMtToSt_469(727), switchedMtToSt_469(728), 0(831), 0(832), 0(896), 0(897)>
  # errLevelCurrentFile_472 = PHI <errLevelCurrentFile_471(586), errLevelCurrentFile_471(727), 1(728), 0(831), 1(832), 0(896), 1(897)>
  if (noThreads_442 == 0)
    goto <bb 899>; [33.00%]
  else
    goto <bb 902>; [67.00%]

  <bb 899> [0.04%]:
  _327 = output;
  _822 = pthread_join (_327, 0B);

  <bb 900> [0.04%]:
  if (_822 != 0)
    goto <bb 901>; [33.00%]
  else
    goto <bb 902>; [67.00%]

  <bb 901> [0.01%]:
  _328 = __errno_location ();
  _329 = *_328;
  _330 = stderr;
  printErrnoMsg (_330, _329);

  <bb 902> [0.11%]:
  # errLevel_430 = PHI <errLevel_429(898), errLevel_429(900), 1(901)>
  # errLevelCurrentFile_473 = PHI <errLevelCurrentFile_472(898), errLevelCurrentFile_472(900), 1(901)>
  _331 = noThreads_442 == 0;
  _332 = _331 | switchedMtToSt_470;
  if (_332 != 0)
    goto <bb 993>; [83.00%]
  else
    goto <bb 908>; [17.00%]

  <bb 993> [0.09%]:

  <bb 903> [0.63%]:
  # errLevel_431 = PHI <errLevel_430(993), errLevel_432(907)>
  # i_462 = PHI <0(993), i_827(907)>
  # errLevelCurrentFile_474 = PHI <errLevelCurrentFile_473(993), errLevelCurrentFile_475(907)>
  _333 = (int) i_462;
  _334 = numCPU;
  if (_333 >= _334)
    goto <bb 908>; [15.00%]
  else
    goto <bb 904>; [85.00%]

  <bb 904> [0.53%]:
  _335 = _1563->consumers;
  _336 = i_462 * 8;
  _337 = _335 + _336;
  _338 = *_337;
  _825 = pthread_join (_338, 0B);

  <bb 905> [0.53%]:
  if (_825 != 0)
    goto <bb 906>; [33.00%]
  else
    goto <bb 907>; [67.00%]

  <bb 906> [0.18%]:
  _339 = __errno_location ();
  _340 = *_339;
  _341 = stderr;
  printErrnoMsg (_341, _340);

  <bb 907> [0.53%]:
  # errLevel_432 = PHI <errLevel_431(905), 1(906)>
  # errLevelCurrentFile_475 = PHI <errLevelCurrentFile_474(905), 1(906)>
  i_827 = i_462 + 1;
  goto <bb 903>; [100.00%]

  <bb 908> [0.11%]:
  # errLevel_433 = PHI <errLevel_430(902), errLevel_431(903)>
  # errLevelCurrentFile_476 = PHI <errLevelCurrentFile_473(902), errLevelCurrentFile_474(903)>
  safe_mutex_lock (&TerminateFlagMutex);

  <bb 909> [0.11%]:
  ret_909 = terminateFlag;
  safe_mutex_unlock (&TerminateFlagMutex);

  <bb 910> [0.11%]:
  if (ret_909 != 0)
    goto <bb 911>; [50.00%]
  else
    goto <bb 912>; [50.00%]

  <bb 911> [0.06%]:

  <bb 912> [0.11%]:
  # errLevel_434 = PHI <errLevel_433(910), 1(911)>
  # errLevelCurrentFile_477 = PHI <errLevelCurrentFile_476(910), 1(911)>
  _342 = OutputStdOut;
  if (_342 == 0)
    goto <bb 913>; [33.00%]
  else
    goto <bb 916>; [67.00%]

  <bb 913> [0.04%]:
  _910 = outFilename._M_dataplus._M_p;
  _830 = writeFileMetaData (_910);

  <bb 914> [0.04%]:
  if (_830 != 0)
    goto <bb 915>; [33.00%]
  else
    goto <bb 916>; [67.00%]

  <bb 915> [0.01%]:
  _911 = outFilename._M_dataplus._M_p;
  handle_error (0, -1, "pbzip2: *ERROR: Could not write file meta data to [%s]!\n", _911);

  <bb 916> [0.11%]:
  _343 = keep_452 != 1;
  _344 = errLevelCurrentFile_477 == 0;
  _345 = _343 & _344;
  if (_345 != 0)
    goto <bb 917>; [50.00%]
  else
    goto <bb 923>; [50.00%]

  <bb 917> [0.06%]:
  _346 = OutputStdOut;
  if (_346 != 0)
    goto <bb 919>; [50.00%]
  else
    goto <bb 918>; [50.00%]

  <bb 918> [0.03%]:
  _912 = outFilename._M_dataplus._M_p;
  _881 = __xstat (1, _912, &statbuf);
  if (_881 == 0)
    goto <bb 919>; [50.00%]
  else
    goto <bb 922>; [50.00%]

  <bb 919> [0.04%]:
  _833 = do_remove (InFilename_685);

  <bb 920> [0.04%]:
  if (_833 == -1)
    goto <bb 921>; [20.24%]
  else
    goto <bb 922>; [79.76%]

  <bb 921> [0.01%]:
  handle_error (0, 1, "Can\'t remove input file [%s]!", InFilename_685);

  <bb 922> [0.06%]:
  statbuf ={v} {CLOBBER};

  <bb 923> [0.11%]:
  _913 = OutputBuffer.D.4140._M_impl._M_start;
  OutputBuffer.D.4140._M_impl._M_finish = _913;
  MEM[(struct queue *)_1563].empty = 1;
  MEM[(struct queue *)_1563].full = 0;
  MEM[(struct queue *)_1563].head = 0;
  MEM[(struct queue *)_1563].tail = 0;
  MEM[(struct queue *)_1563].count = 0;
  MEM[(struct queue *)_1563].lastElement = 0B;
  MEM[(struct queue *)_1563].topLevelFull = 0;
  MEM[(struct queue *)_1563].topLevelEmpty = 1;
  if (errLevelCurrentFile_477 == 0)
    goto <bb 924>; [33.00%]
  else
    goto <bb 929>; [67.00%]

  <bb 924> [0.04%]:
  safe_mutex_lock (&TerminateFlagMutex);

  <bb 925> [0.04%]:
  ret_914 = terminateFlag;
  safe_mutex_unlock (&TerminateFlagMutex);

  <bb 926> [0.04%]:
  if (ret_914 == 0)
    goto <bb 927>; [33.00%]
  else
    goto <bb 929>; [67.00%]

  <bb 927> [0.01%]:
  safe_mutex_lock (&ErrorHandlerMutex);

  <bb 928> [0.01%]:
  sigInFilename = 0B;
  sigOutFilename = 0B;
  safe_mutex_unlock (&ErrorHandlerMutex);

  <bb 929> [0.11%]:
  if (errLevelCurrentFile_477 == 1)
    goto <bb 930>; [2.00%]
  else
    goto <bb 931>; [98.00%]

  <bb 930> [0.00%]:
  syncSetTerminateFlag (1);
  goto <bb 934>; [100.00%]

  <bb 931> [0.11%]:
  _347 = QuietMode;
  if (_347 != 1)
    goto <bb 932>; [48.88%]
  else
    goto <bb 933>; [51.12%]

  <bb 932> [0.05%]:
  _348 = stderr;
  __builtin_fwrite ("-------------------------------------------\n", 1, 44, _348);

  <bb 933> [1.33%]:
  # zeroByteFile_389 = PHI <zeroByteFile_385(307), zeroByteFile_385(359), zeroByteFile_385(369), zeroByteFile_387(395), zeroByteFile_388(406), zeroByteFile_388(459), zeroByteFile_388(931), zeroByteFile_388(932), zeroByteFile_388(453), zeroByteFile_385(306)>
  # blockSize_400 = PHI <blockSize_398(307), blockSize_398(359), blockSize_398(369), blockSize_398(395), blockSize_398(406), blockSize_399(459), blockSize_399(931), blockSize_399(932), blockSize_399(453), blockSize_398(306)>
  # errLevel_435 = PHI <errLevel_427(307), 1(359), 1(369), 1(395), 1(406), errLevel_426(459), errLevel_434(931), errLevel_434(932), errLevel_426(453), errLevel_427(306)>
  # noThreads_443 = PHI <noThreads_437(307), noThreads_437(359), noThreads_437(369), noThreads_437(395), noThreads_437(406), noThreads_439(459), noThreads_442(931), noThreads_442(932), noThreads_439(453), noThreads_437(306)>
  fileLoop_845 = fileLoop_458 + 1;
  goto <bb 227>; [100.00%]

  <bb 934> [0.03%]:
  # errLevel_436 = PHI <errLevel_426(227), 1(440), 1(449), errLevel_434(930)>
  _349 = OutputStdOut;
  if (_349 == 1)
    goto <bb 935>; [34.00%]
  else
    goto <bb 940>; [66.00%]

  <bb 935> [0.01%]:
  _847 = close (1);

  <bb 936> [0.01%]:
  if (_847 == -1)
    goto <bb 937>; [0.04%]
  else
    goto <bb 940>; [99.96%]

  <bb 937> [0.00%]:
  _849 = getInstance ();

  <bb 938> [0.00%]:
  saveError (_849);
  handle_error (1, 1, "pbzip2: *ERROR: Failed to close STDOUT! Aborting...\n");

  <bb 939> [0.00%]:
  exit (1);

  <bb 940> [0.03%]:
  _351 = SignalHandlerThread;
  ret_854 = pthread_kill (_351, 10);
  if (ret_854 != 0)
    goto <bb 941>; [0.04%]
  else
    goto <bb 943>; [99.96%]

  <bb 941> [0.00%]:
  _352 = stderr;
  __fprintf_chk (_352, 1, "Couldn\'t signal signal QUIT to SignalHandlerThread [%d]. Quitting prematurely!\n", ret_854);

  <bb 942> [0.00%]:
  exit (errLevel_436);

  <bb 943> [0.03%]:
  _353 = SignalHandlerThread;
  _856 = pthread_join (_353, 0B);

  <bb 944> [0.03%]:
  if (_856 != 0)
    goto <bb 945>; [50.00%]
  else
    goto <bb 946>; [50.00%]

  <bb 945> [0.02%]:
  _354 = stderr;
  __fprintf_chk (_354, 1, "Error on join of SignalHandlerThread [%d]\n", _856);

  <bb 946> [0.03%]:
  safe_mutex_lock (&TerminateFlagMutex);

  <bb 947> [0.03%]:
  ret_915 = terminateFlag;
  safe_mutex_unlock (&TerminateFlagMutex);

  <bb 948> [0.03%]:
  if (ret_915 == 0)
    goto <bb 949>; [50.00%]
  else
    goto <bb 951>; [50.00%]

  <bb 949> [0.02%]:
  safe_mutex_lock (&TerminateFlagMutex);

  <bb 950> [0.02%]:
  finishedFlag = 1;
  pthread_cond_signal (&TerminateCond);
  safe_mutex_unlock (&TerminateFlagMutex);

  <bb 951> [0.03%]:
  _355 = TerminatorThread;
  _859 = pthread_join (_355, 0B);

  <bb 952> [0.03%]:
  if (_859 != 0)
    goto <bb 953>; [50.00%]
  else
    goto <bb 954>; [50.00%]

  <bb 953> [0.02%]:
  _356 = stderr;
  __fprintf_chk (_356, 1, "Error on join of TerminatorThread [%d]\n", _859);

  <bb 954> [0.03%]:
  _2038 = _1563->mut;
  if (_2038 != 0B)
    goto <bb 955>; [53.47%]
  else
    goto <bb 956>; [46.53%]

  <bb 955> [0.01%]:
  pthread_mutex_destroy (_2038);
  _2039 = _1563->mut;
  operator delete (_2039, 40);
  _1563->mut = 0B;

  <bb 956> [0.02%]:
  _2040 = _1563->notFull;
  if (_2040 != 0B)
    goto <bb 957>; [53.47%]
  else
    goto <bb 958>; [46.53%]

  <bb 957> [0.01%]:
  pthread_cond_destroy (_2040);
  _2041 = _1563->notFull;
  operator delete (_2041, 48);
  _1563->notFull = 0B;

  <bb 958> [0.02%]:
  _2042 = _1563->notEmpty;
  if (_2042 != 0B)
    goto <bb 959>; [53.47%]
  else
    goto <bb 960>; [46.53%]

  <bb 959> [0.01%]:
  pthread_cond_destroy (_2042);
  _2043 = _1563->notEmpty;
  operator delete (_2043, 48);
  _1563->notEmpty = 0B;

  <bb 960> [0.02%]:
  _2044 = _1563->consumers;
  if (_2044 != 0B)
    goto <bb 961>; [53.47%]
  else
    goto <bb 962>; [46.53%]

  <bb 961> [0.01%]:
  operator delete [] (_2044);

  <bb 962> [0.02%]:
  _2045 = _1563->qData;
  if (_2045 != 0B)
    goto <bb 963>; [53.47%]
  else
    goto <bb 964>; [46.53%]

  <bb 963> [0.01%]:
  operator delete [] (_2045);

  <bb 964> [0.02%]:
  operator delete (_1563, 96);
  _2046 = notTooMuchNumBuffered;
  if (_2046 != 0B)
    goto <bb 965>; [57.44%]
  else
    goto <bb 966>; [42.56%]

  <bb 965> [0.01%]:
  pthread_cond_destroy (_2046);
  _2047 = notTooMuchNumBuffered;
  operator delete (_2047, 48);
  notTooMuchNumBuffered = 0B;

  <bb 966> [0.03%]:
  _2034 = OutMutex;
  if (_2034 != 0B)
    goto <bb 967>; [53.47%]
  else
    goto <bb 968>; [46.53%]

  <bb 967> [0.02%]:
  pthread_mutex_destroy (_2034);
  _2035 = OutMutex;
  operator delete (_2035, 40);
  OutMutex = 0B;

  <bb 968> [0.03%]:
  _2036 = ProducerDoneMutex;
  if (_2036 != 0B)
    goto <bb 969>; [57.44%]
  else
    goto <bb 970>; [42.56%]

  <bb 969> [0.02%]:
  pthread_mutex_destroy (_2036);
  _2037 = ProducerDoneMutex;
  operator delete (_2037, 40);
  ProducerDoneMutex = 0B;

  <bb 970> [0.03%]:
  operator delete [] (_8);
  gettimeofday (&tvStopTime, &tz);
  _357 = tvStartTime.tv_sec;
  _358 = (double) _357;
  _359 = tvStartTime.tv_usec;
  _360 = (double) _359;
  _361 = _360 / 1.0e+6;
  timeStart_863 = _358 + _361;
  _362 = tvStopTime.tv_sec;
  _363 = (double) _362;
  _364 = tvStopTime.tv_usec;
  _365 = (double) _364;
  _366 = _365 / 1.0e+6;
  timeStop_864 = _363 + _366;
  timeCalc_865 = timeStop_864 - timeStart_863;
  _367 = QuietMode;
  if (_367 != 1)
    goto <bb 971>; [66.00%]
  else
    goto <bb 972>; [34.00%]

  <bb 971> [0.02%]:
  _368 = stderr;
  __fprintf_chk (_368, 1, "\n     Wall Clock: %f seconds\n", timeCalc_865);

  <bb 972> [0.03%]:
  exit (errLevel_436);

  <bb 973> [17.97%]:
  # _479 = PHI <1(3), 1(27), 1(77), 1(79), 1(89), 1(99), 1(143), 1(148), 1(153), 1(161), 1(184), 1(186), _1552(212), 1(226), _1604(302), 1(514), 1(518), 1(583), 1(737), 1(741)>
  _916 = outFilename._M_dataplus._M_p;
  if (&outFilename.D.4158._M_local_buf != _916)
    goto <bb 974>; [57.44%]
  else
    goto <bb 975>; [42.56%]

  <bb 974> [10.32%]:
  operator delete (_916);

  <bb 975> [17.97%]:
  output ={v} {CLOBBER};
  bz2Header ={v} {CLOBBER};
  outFilename ={v} {CLOBBER};
  cmdLineTemp ={v} {CLOBBER};
  tmpBuff ={v} {CLOBBER};
  stdinFile ={v} {CLOBBER};
  tvStartTime ={v} {CLOBBER};
  tvStopTime ={v} {CLOBBER};
  tz ={v} {CLOBBER};
  loadAvgArray ={v} {CLOBBER};
  return _479;

<L27> [0.00%]:
  _917 = tbz2Tail._M_dataplus._M_p;
  if (&tbz2Tail.D.4158._M_local_buf != _917)
    goto <bb 977>; [53.47%]
  else
    goto <bb 978>; [46.53%]

  <bb 977> [0.00%]:
  operator delete (_917);

  <bb 978> [0.00%]:
  MEM[(struct  &)&tbz2Tail] ={v} {CLOBBER};
  resx 21

<L28> [0.00%]:
  D.5395 ={v} {CLOBBER};
  _918 = bz2Tail._M_dataplus._M_p;
  if (&bz2Tail.D.4158._M_local_buf != _918)
    goto <bb 980>; [53.47%]
  else
    goto <bb 981>; [46.53%]

  <bb 980> [0.00%]:
  operator delete (_918);

  <bb 981> [0.00%]:
  resx 15

<L29> [0.00%]:
  D.5398 ={v} {CLOBBER};
  _919 = bz2Tail._M_dataplus._M_p;
  if (&bz2Tail.D.4158._M_local_buf != _919)
    goto <bb 983>; [53.47%]
  else
    goto <bb 984>; [46.53%]

  <bb 983> [0.00%]:
  operator delete (_919);

  <bb 984> [0.00%]:
  resx 31

<L30> [0.00%]:
  statbuf ={v} {CLOBBER};
  statbuf ={v} {CLOBBER};
  statbuf ={v} {CLOBBER};
  D.5396 ={v} {CLOBBER};
  bz2Tail ={v} {CLOBBER};
  D.5394 ={v} {CLOBBER};
  bz2Tail ={v} {CLOBBER};
  tbz2Tail ={v} {CLOBBER};
  D.5393 ={v} {CLOBBER};
  _920 = outFilename._M_dataplus._M_p;
  if (&outFilename.D.4158._M_local_buf != _920)
    goto <bb 986>; [53.47%]
  else
    goto <bb 987>; [46.53%]

  <bb 986> [0.00%]:
  operator delete (_920);

  <bb 987> [0.00%]:
  resx 2

}


