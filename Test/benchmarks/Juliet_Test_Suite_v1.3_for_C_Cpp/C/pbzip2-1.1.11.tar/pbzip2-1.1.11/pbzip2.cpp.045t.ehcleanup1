
;; Function atoi (atoi, funcdef_no=888, decl_uid=16946, cgraph_uid=222, symbol_order=224)

Before removal of unreachable regions:
Eh tree:
   1 allowed_exceptions filter :0 types:
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


__attribute__((__pure__, __leaf__, __gnu_inline__))
atoi (const char * __nptr)
{
  long int _1;
  void * _2;
  int _6;

  <bb 2> [0.00%]:
  _1 = strtol (__nptr_4(D), 0B, 10);
  _6 = (int) _1;
  return _6;

}



;; Function *stat64 (*stat64, funcdef_no=1898, decl_uid=35993, cgraph_uid=639, symbol_order=641)

Before removal of unreachable regions:
Eh tree:
   1 allowed_exceptions filter :0 types:
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


__attribute__((__leaf__, __gnu_inline__))
*stat64 (const char * __path, struct stat * __statbuf)
{
  void * _1;
  int _6;

  <bb 2> [0.00%]:
  _6 = *__xstat64 (1, __path_3(D), __statbuf_4(D));
  return _6;

}



;; Function *fstat64 (*fstat64, funcdef_no=1900, decl_uid=35996, cgraph_uid=641, symbol_order=643)

Before removal of unreachable regions:
Eh tree:
   1 allowed_exceptions filter :0 types:
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


__attribute__((__leaf__, __gnu_inline__))
*fstat64 (int __fd, struct stat * __statbuf)
{
  void * _1;
  int _6;

  <bb 2> [0.00%]:
  _6 = *__fxstat64 (1, __fd_3(D), __statbuf_4(D));
  return _6;

}



;; Function *strstr (*strstr, funcdef_no=1920, decl_uid=37062, cgraph_uid=661, symbol_order=663)

Before removal of unreachable regions:
Eh tree:
   1 allowed_exceptions filter :0 types:
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


__attribute__((__pure__, __gnu_inline__, __always_inline__))
*strstr (char * __haystack, const char * __needle)
{
  void * _1;
  char * _5;

  <bb 2> [0.00%]:
  _5 = strstr (__haystack_3(D), __needle_4(D));
  return _5;

}



;; Function memset (memset, funcdef_no=1931, decl_uid=1032, cgraph_uid=672, symbol_order=674)

Before removal of unreachable regions:
Eh tree:
   1 allowed_exceptions filter :0 types:
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


__attribute__((nothrow, __artificial__, __gnu_inline__, __always_inline__, __leaf__))
memset (void * __dest, int __ch, size_t __len)
{
  long unsigned int _1;
  void * _2;
  void * _8;

  <bb 2> [0.00%]:
  _1 = __builtin_object_size (__dest_4(D), 0);
  _8 = __memset_chk (__dest_4(D), __ch_5(D), __len_6(D), _1);
  return _8;

}



;; Function strcpy (strcpy, funcdef_no=1933, decl_uid=1056, cgraph_uid=674, symbol_order=676)

Before removal of unreachable regions:
Eh tree:
   1 allowed_exceptions filter :0 types:
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


__attribute__((nothrow, __artificial__, __gnu_inline__, __always_inline__, __leaf__))
strcpy (char * restrict __dest, const char * restrict __src)
{
  long unsigned int _1;
  void * _2;
  char * _7;

  <bb 2> [0.00%]:
  _1 = __builtin_object_size (__dest_4(D), 1);
  _7 = __strcpy_chk (__dest_4(D), __src_5(D), _1);
  return _7;

}



;; Function strncpy (strncpy, funcdef_no=1935, decl_uid=1080, cgraph_uid=676, symbol_order=678)

Before removal of unreachable regions:
Eh tree:
   1 allowed_exceptions filter :0 types:
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


__attribute__((nothrow, __artificial__, __gnu_inline__, __always_inline__, __leaf__))
strncpy (char * restrict __dest, const char * restrict __src, size_t __len)
{
  long unsigned int _1;
  void * _2;
  char * _8;

  <bb 2> [0.00%]:
  _1 = __builtin_object_size (__dest_4(D), 1);
  _8 = __strncpy_chk (__dest_4(D), __src_5(D), __len_6(D), _1);
  return _8;

}



;; Function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const (_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv, funcdef_no=2178, decl_uid=19046, cgraph_uid=918, symbol_order=966)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const (const struct basic_string * const this)
{
  size_type _3;

  <bb 2> [0.00%]:
  _3 = this_2(D)->_M_string_length;
  return _3;

}



;; Function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const (_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv, funcdef_no=2268, decl_uid=19044, cgraph_uid=1008, symbol_order=1056)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const (const struct basic_string * const this)
{
  size_type _3;

  <bb 2> [0.00%]:
  _3 = this_2(D)->_M_string_length;
  return _3;

}



;; Function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::c_str() const (_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv, funcdef_no=2009, decl_uid=19401, cgraph_uid=749, symbol_order=797)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::c_str() const (const struct basic_string * const this)
{
  char * D.47810;
  char * _3;

  <bb 2> [100.00%]:
  _3 = this_2(D)->_M_dataplus._M_p;
  return _3;

}



;; Function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[](unsigned long) const (_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm, funcdef_no=2406, decl_uid=19068, cgraph_uid=1146, symbol_order=1194)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[](unsigned long) const (const struct basic_string * const this, size_type __pos)
{
  char * D.47817;
  char * _4;
  const value_type & _7;

  <bb 2> [100.00%]:
  _4 = this_3(D)->_M_dataplus._M_p;
  _7 = _4 + __pos_6(D);
  return _7;

}



;; Function std::char_traits<char>::assign(char&, char const&) (_ZNSt11char_traitsIcE6assignERcRKc, funcdef_no=358, decl_uid=10336, cgraph_uid=47, symbol_order=48)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::char_traits<char>::assign(char&, char const&) (char_type & __c1, const char_type & __c2)
{
  char _1;

  <bb 2> [0.00%]:
  _1 = *__c2_3(D);
  *__c1_4(D) = _1;
  return;

}



;; Function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm, funcdef_no=2289, decl_uid=18758, cgraph_uid=1029, symbol_order=1077)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L0>}
Reachable regions: n_bits = 3, set = {}
Reachable landing pads: n_bits = 2, set = {}
Removing unreachable region 1
Removing unreachable region 2


After removal of unreachable regions:


std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long) (struct basic_string * const this, size_type __n)
{
  char * D.47835;
  const char_type D.41909;
  char * _2;
  char * _12;

  <bb 2> [100.00%]:
  this_4(D)->_M_string_length = __n_5(D);
  _12 = MEM[(const struct basic_string *)this_4(D)]._M_dataplus._M_p;
  _2 = _12 + __n_5(D);
  MEM[(char_type &)_2] = 0;
  return;

}



;; Function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::clear() (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5clearEv, funcdef_no=2403, decl_uid=19064, cgraph_uid=1143, symbol_order=1191)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::clear() (struct basic_string * const this)
{
  char * _4;

  <bb 2> [100.00%]:
  this_2(D)->_M_string_length = 0;
  _4 = MEM[(const struct basic_string *)this_2(D)]._M_dataplus._M_p;
  MEM[(char_type &)_4] = 0;
  return;

}



;; Function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_, funcdef_no=2564, decl_uid=18900, cgraph_uid=1304, symbol_order=1352)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) (char * __p, const char * __k1, const char * __k2)
{
  long int __k2.724_1;
  long int __k1.725_2;
  long int _3;
  long unsigned int _4;
  char _10;

  <bb 2> [100.00%]:
  __k2.724_1 = (long int) __k2_5(D);
  __k1.725_2 = (long int) __k1_6(D);
  _3 = __k2.724_1 - __k1.725_2;
  _4 = (long unsigned int) _3;
  if (_4 == 1)
    goto <bb 3>; [30.50%]
  else
    goto <bb 4>; [69.50%]

  <bb 3> [30.50%]:
  _10 = MEM[(const char_type &)__k1_6(D)];
  MEM[(char_type &)__p_8(D)] = _10;
  goto <bb 6>; [100.00%]

  <bb 4> [69.50%]:
  if (_4 == 0)
    goto <bb 6>; [63.36%]
  else
    goto <bb 5>; [36.64%]

  <bb 5> [25.46%]:
  memcpy (__p_8(D), __k1_6(D), _4);

  <bb 6> [0.00%]:
  return;

}



;; Function operator new(unsigned long, void*) (_ZnwmPv, funcdef_no=465, decl_uid=11344, cgraph_uid=144, symbol_order=145)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


operator new(unsigned long, void*) (size_t D.11342, void * __p)
{
  <bb 2> [0.00%]:
  return __p_1(D);

}



;; Function cleanupUnfinishedWork() (_Z21cleanupUnfinishedWorkv, funcdef_no=1975, decl_uid=38975, cgraph_uid=716, symbol_order=764)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L21>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L21>}


Removing basic block 22
Removing unreachable region 1
Merging blocks 13 and 14
Merging blocks 15 and 16
Merging blocks 17 and 18
cleanupUnfinishedWork() ()
{
  int D.47924;
  int D.47921;
  int D.47918;
  int D.47915;
  int D.47912;
  int D.47909;
  int D.47906;
  int ret;
  struct stat statBuf;
  int unfinishedWorkCleaned.65_1;
  const char * sigInFilename.66_2;
  const char * sigOutFilename.67_3;
  int OutputStdOut.68_4;
  int QuietMode.69_5;
  struct FILE * stderr.71_7;
  const char * sigInFilename.72_8;
  int QuietMode.73_9;
  const char * sigOutFilename.74_10;
  struct FILE * stderr.75_11;
  const char * sigOutFilename.76_12;
  int * _13;
  int _14;
  struct FILE * stderr.77_15;
  struct FILE * stderr.78_16;
  struct FILE * stderr.79_17;
  struct FILE * stderr.80_18;
  const char * sigOutFilename.81_19;
  struct FILE * stderr.82_20;
  int _47;

  <bb 2> [0.00%]:
  unfinishedWorkCleaned.65_1 = unfinishedWorkCleaned;
  if (unfinishedWorkCleaned.65_1 != 0)
    goto <bb 17>; [0.00%]
  else
    goto <bb 3>; [0.00%]

  <bb 3> [0.00%]:
  sigInFilename.66_2 = sigInFilename;
  if (sigInFilename.66_2 == 0B)
    goto <bb 6>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 4> [0.00%]:
  sigOutFilename.67_3 = sigOutFilename;
  if (sigOutFilename.67_3 == 0B)
    goto <bb 6>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 5> [0.00%]:
  OutputStdOut.68_4 = OutputStdOut;
  if (OutputStdOut.68_4 == 1)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 6> [0.00%]:
  unfinishedWorkCleaned = 1;
  goto <bb 17>; [0.00%]

  <bb 7> [0.00%]:
  QuietMode.69_5 = QuietMode;
  if (QuietMode.69_5 != 1)
    goto <bb 8>; [0.00%]
  else
    goto <bb 9>; [0.00%]

  <bb 8> [100.00%]:
  stderr.71_7 = stderr;
  __fprintf_chk (stderr.71_7, 1, "Cleanup unfinished work [Outfile: %s]...\n", sigOutFilename.67_3);

  <bb 9> [100.00%]:
  sigInFilename.72_8 = sigInFilename;
  _47 = *__xstat64 (1, sigInFilename.72_8, &statBuf);
  if (_47 == 0)
    goto <bb 10>; [0.00%]
  else
    goto <bb 15>; [0.00%]

  <bb 10> [0.00%]:
  QuietMode.73_9 = QuietMode;
  if (QuietMode.73_9 != 1)
    goto <bb 11>; [0.00%]
  else
    goto <bb 12>; [0.00%]

  <bb 11> [100.00%]:
  sigOutFilename.74_10 = sigOutFilename;
  stderr.75_11 = stderr;
  __fprintf_chk (stderr.75_11, 1, "Deleting output file: %s, if it exists...\n", sigOutFilename.74_10);

  <bb 12> [0.00%]:
  sigOutFilename.76_12 = sigOutFilename;
  ret_36 = remove (sigOutFilename.76_12);
  if (ret_36 != 0)
    goto <bb 13>; [0.00%]
  else
    goto <bb 14>; [0.00%]

  <bb 13> [100.00%]:
  _13 = __errno_location ();
  _14 = *_13;
  stderr.77_15 = stderr;
  pbzip2::ErrorContext::syncPrintErrnoMsg (stderr.77_15, _14);
  stderr.78_16 = stderr;
  __fprintf_chk (stderr.78_16, 1, "pbzip2:  *WARNING: Deletion of output file (apparently) failed.\n");
  goto <bb 16>; [100.00%]

  <bb 14> [100.00%]:
  stderr.79_17 = stderr;
  __fprintf_chk (stderr.79_17, 1, "pbzip2:  *INFO: Deletion of output file succeeded.\n");
  sigOutFilename = 0B;
  goto <bb 16>; [0.00%]

  <bb 15> [100.00%]:
  stderr.80_18 = stderr;
  __fprintf_chk (stderr.80_18, 1, "pbzip2:  *WARNING: Output file was not deleted since input file no longer exists.\n");
  sigOutFilename.81_19 = sigOutFilename;
  stderr.82_20 = stderr;
  __fprintf_chk (stderr.82_20, 1, "pbzip2:  *WARNING: Output file: %s, may be incomplete!\n", sigOutFilename.81_19);

  <bb 16> [0.00%]:
  unfinishedWorkCleaned = 1;
  statBuf ={v} {CLOBBER};
  goto <bb 18>; [0.00%]

  <bb 17> [0.00%]:
  statBuf ={v} {CLOBBER};

  <bb 18> [0.00%]:
  return;

}



;; Function handle_error(ExitFlag, int, char const*, ...) (_Z12handle_error8ExitFlagiPKcz, funcdef_no=1964, decl_uid=26096, cgraph_uid=705, symbol_order=753)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L7>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L7>}


Removing basic block 12
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 7 and 8
Merging blocks 2 and 4
Merging blocks 2 and 5
Merging blocks 2 and 6
handle_error(ExitFlag, int, char const*, ...) (ExitFlag exitFlag, int exitCode, const char * fmt)
{
  int D.47942;
  struct  args[1];
  struct FILE * stderr.17_1;
  struct FILE * stderr.18_3;
  struct FILE * stderr.19_4;
  struct ErrorContext * _12;

  <bb 2> [100.00%]:
  __builtin_va_start (&args, 0);
  stderr.17_1 = stderr;
  __vfprintf_chk (stderr.17_1, 1, fmt_9(D), &args);
  _12 = pbzip2::ErrorContext::getInstance ();
  stderr.18_3 = stderr;
  pbzip2::ErrorContext::printErrorMessages (_12, stderr.18_3);
  stderr.19_4 = stderr;
  fflush (stderr.19_4);
  __builtin_va_end (&args);
  if (exitFlag_16(D) == 2)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  syncSetTerminateFlag (1);
  abort ();

  <bb 4> [0.00%]:
  if (exitFlag_16(D) == 1)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 5> [0.00%]:
  syncSetTerminateFlag (1);

  <bb 6> [0.00%]:
  args ={v} {CLOBBER};
  return exitCode_18(D);

}



;; Function signalHandlerProc (signalHandlerProc, funcdef_no=1977, decl_uid=39086, cgraph_uid=718, symbol_order=766)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L7>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L7>}


Removing basic block 9
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 6 and 7
signalHandlerProc (void * arg)
{
  int D.47950;
  int D.47947;
  int ret;
  int signalCaught;
  struct FILE * stderr.89_1;
  int signalCaught.90_2;
  int SIG_HANDLER_QUIT_SIGNAL.91_3;
  struct FILE * stderr.93_5;
  int _12;

  <bb 2> [0.00%]:
  _12 = sigwait (&SignalMask, &signalCaught);
  if (_12 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [100.00%]:
  stderr.89_1 = stderr;
  __fprintf_chk (stderr.89_1, 1, "\n *signalHandlerProc - sigwait error: %d\n", _12);
  goto <bb 6>; [100.00%]

  <bb 4> [0.00%]:
  signalCaught.90_2 = signalCaught;
  SIG_HANDLER_QUIT_SIGNAL.91_3 = SIG_HANDLER_QUIT_SIGNAL;
  if (signalCaught.90_2 == SIG_HANDLER_QUIT_SIGNAL.91_3)
    goto <bb 6>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 5> [100.00%]:
  stderr.93_5 = stderr;
  __fprintf_chk (stderr.93_5, 1, "\n *Control-C or similar caught [sig=%d], quitting...\n", signalCaught.90_2);
  syncSetTerminateFlag (1);

  <bb 6> [0.00%]:
  signalCaught ={v} {CLOBBER};
  return 0B;

}



;; Function safe_cond_timed_wait(pthread_cond_t*, pthread_mutex_t*, int, char const*) (_Z20safe_cond_timed_waitP14pthread_cond_tP15pthread_mutex_tiPKc, funcdef_no=1944, decl_uid=38994, cgraph_uid=685, symbol_order=733)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L7>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L7>}


Removing basic block 10
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 5 and 6
Merging blocks 5 and 7
Merging blocks 5 and 8
safe_cond_timed_wait(pthread_cond_t*, pthread_mutex_t*, int, char const*) (union pthread_cond_t * cond, union pthread_mutex_t * mutex, int seconds, const char * caller)
{
  int pret;
  struct timezone tz;
  struct timeval tv;
  struct timespec waitTimer;
  long int _1;
  long int _2;
  long int _3;
  long int _4;
  long int _5;
  bool _6;
  bool _7;
  bool _8;
  bool _9;
  bool _10;
  bool _11;
  int _23;
  struct ErrorContext * _26;

  <bb 2> [0.00%]:
  gettimeofday (&tv, &tz);
  _1 = tv.tv_sec;
  _2 = (long int) seconds_17(D);
  _3 = _1 + _2;
  waitTimer.tv_sec = _3;
  _4 = tv.tv_usec;
  _5 = _4 * 1000;
  waitTimer.tv_nsec = _5;
  _23 = pthread_cond_timedwait (cond_20(D), mutex_21(D), &waitTimer);
  _6 = _23 != 0;
  _7 = _23 != 4;
  _8 = _6 & _7;
  if (_8 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 3> [0.00%]:
  _9 = _23 != 16;
  _10 = _23 != 110;
  _11 = _9 & _10;
  if (_11 != 0)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  _26 = pbzip2::ErrorContext::getInstance ();
  pbzip2::ErrorContext::saveError (_26);
  pthread_mutex_unlock (mutex_21(D));
  handle_error (1, 1, "pbzip2: *ERROR: %s:  pthread_cond_timedwait() call invalid [pret=%d].  This machine\n         does not have compatible pthreads library.  Aborting.\n", caller_29(D), _23);
  cleanupAndQuit (-9);

  <bb 5> [0.00%]:
  waitTimer ={v} {CLOBBER};
  tv ={v} {CLOBBER};
  tz ={v} {CLOBBER};
  return 0;

}



;; Function directcompress(int, long, int, char const*) (_Z14directcompressiliPKc, funcdef_no=1985, decl_uid=39011, cgraph_uid=725, symbol_order=773)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L102>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L102>}


Removing basic block 55
Removing unreachable region 1
Merging blocks 3 and 4
Merging blocks 8 and 9
Merging blocks 11 and 12
Merging blocks 18 and 19
Merging blocks 22 and 23
Merging blocks 26 and 27
Merging blocks 31 and 32
Merging blocks 33 and 34
Merging blocks 35 and 36
Merging blocks 37 and 38
Merging blocks 39 and 40
Merging blocks 45 and 46
Merging blocks 48 and 49
Merging blocks 8 and 10
directcompress(int, long, int, char const*) (int hInfile, off_t fileSize, int blockSize, const char * OutFilename)
{
  int ret;
  int D.48022;
  int D.48020;
  int D.48017;
  int D.48014;
  int percentCompleteOld;
  int ret;
  int rret;
  int currBlock;
  int hOutfile;
  int percentComplete;
  unsigned int outSize;
  off_t inSize;
  off_t bytesLeft;
  off_t CompressedSize;
  char * CompressedData;
  char * FileData;
  int OutputStdOut.199_1;
  int OutputStdOut.201_3;
  struct FILE * stderr.202_4;
  long int _5;
  int OutputStdOut.204_6;
  int OutputStdOut.206_9;
  long int _10;
  double _11;
  double _12;
  double _13;
  int _14;
  unsigned int _15;
  int Verbosity.208_17;
  int BWTblockSize.209_18;
  unsigned int _19;
  unsigned int outSize.210_20;
  long unsigned int _21;
  int OutputStdOut.211_23;
  long int _24;
  int _25;
  int NumBlocksEstimated.212_26;
  int QuietMode.213_27;
  struct FILE * stderr.214_28;
  struct FILE * stderr.215_29;
  int OutputStdOut.216_31;
  int QuietMode.217_32;
  long unsigned int CompressedSize.218_33;
  struct FILE * stderr.219_34;
  int _41;
  int _78;
  sizetype inSize.203_89;
  long int _94;
  sizetype _98;
  int _102;
  long int _105;

  <bb 2> [0.00%]:
  outSize = 0;
  OutputStdOut.199_1 = OutputStdOut;
  if (OutputStdOut.199_1 == 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 3> [0.00%]:
  _78 = safe_open_output (OutFilename_76(D));
  if (_78 == -1)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not create output file [%s]!\n", OutFilename_76(D));
  goto <bb 40>; [0.00%]

  <bb 5> [0.00%]:
  # hOutfile_160 = PHI <1(2), _78(3)>

  <bb 6> [0.00%]:
  # CompressedSize_35 = PHI <0(5), CompressedSize_107(34)>
  # bytesLeft_36 = PHI <fileSize_74(D)(5), bytesLeft_96(34)>
  # percentComplete_38 = PHI <0(5), percentComplete_110(34)>
  # currBlock_40 = PHI <0(5), currBlock_108(34)>
  if (bytesLeft_36 <= 0)
    goto <bb 35>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 7> [100.00%]:
  safe_mutex_lock (&TerminateFlagMutex);
  ret_156 = terminateFlag;
  safe_mutex_unlock (&TerminateFlagMutex);
  if (ret_156 != 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 11>; [0.00%]

  <bb 8> [0.00%]:
  close (hInfile_92(D));
  OutputStdOut.201_3 = OutputStdOut;
  if (OutputStdOut.201_3 == 0)
    goto <bb 9>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 9> [0.00%]:
  close (hOutfile_160);

  <bb 10> [100.00%]:
  stderr.202_4 = stderr;
  __fprintf_chk (stderr.202_4, 1, "directcompress: terminating - terminateFlag set\n");
  goto <bb 40>; [100.00%]

  <bb 11> [0.00%]:
  _5 = (long int) blockSize_85(D);
  if (_5 < bytesLeft_36)
    goto <bb 13>; [0.00%]
  else
    goto <bb 12>; [0.00%]

  <bb 12> [0.00%]:

  <bb 13> [0.00%]:
  # inSize_37 = PHI <_5(11), bytesLeft_36(12)>
  inSize.203_89 = (sizetype) inSize_37;
  FileData_91 = operator new[] (inSize.203_89, &nothrow);
  if (FileData_91 == 0B)
    goto <bb 14>; [0.00%]
  else
    goto <bb 17>; [0.00%]

  <bb 14> [0.00%]:
  close (hInfile_92(D));
  OutputStdOut.204_6 = OutputStdOut;
  if (OutputStdOut.204_6 == 0)
    goto <bb 15>; [0.00%]
  else
    goto <bb 16>; [0.00%]

  <bb 15> [0.00%]:
  close (hOutfile_160);

  <bb 16> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not allocate memory (FileData)!  Aborting...\n");
  goto <bb 40>; [0.00%]

  <bb 17> [0.00%]:
  _94 = do_read (hInfile_92(D), FileData_91, inSize.203_89);
  rret_95 = (int) _94;
  if (rret_95 == 0)
    goto <bb 18>; [0.00%]
  else
    goto <bb 19>; [0.00%]

  <bb 18> [0.00%]:
  operator delete[] (FileData_91);
  goto <bb 35>; [0.00%]

  <bb 19> [0.00%]:
  if (rret_95 < 0)
    goto <bb 20>; [0.00%]
  else
    goto <bb 23>; [0.00%]

  <bb 20> [0.00%]:
  close (hInfile_92(D));
  operator delete[] (FileData_91);
  OutputStdOut.206_9 = OutputStdOut;
  if (OutputStdOut.206_9 == 0)
    goto <bb 21>; [0.00%]
  else
    goto <bb 22>; [0.00%]

  <bb 21> [0.00%]:
  close (hOutfile_160);

  <bb 22> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not read from file!  Aborting...\n");
  goto <bb 40>; [0.00%]

  <bb 23> [0.00%]:
  _10 = (long int) rret_95;
  bytesLeft_96 = bytesLeft_36 - _10;
  _11 = (double) inSize_37;
  _12 = _11 * 1.0100000000000000088817841970012523233890533447265625e+0;
  _13 = _12 + 6.0e+2;
  _14 = (int) _13;
  _15 = (unsigned int) _14;
  outSize = _15;
  _98 = (sizetype) _15;
  CompressedData_100 = operator new[] (_98, &nothrow);
  if (CompressedData_100 == 0B)
    goto <bb 24>; [0.00%]
  else
    goto <bb 25>; [0.00%]

  <bb 24> [0.00%]:
  close (hInfile_92(D));
  operator delete[] (FileData_91);
  handle_error (1, -1, "pbzip2: *ERROR: Could not allocate memory (CompressedData)!  Aborting...\n");
  goto <bb 40>; [0.00%]

  <bb 25> [0.00%]:
  Verbosity.208_17 = Verbosity;
  BWTblockSize.209_18 = BWTblockSize;
  _19 = (unsigned int) inSize_37;
  _102 = BZ2_bzBuffToBuffCompress (CompressedData_100, &outSize, FileData_91, _19, BWTblockSize.209_18, Verbosity.208_17, 30);
  if (_102 != 0)
    goto <bb 26>; [0.00%]
  else
    goto <bb 27>; [0.00%]

  <bb 26> [0.00%]:
  close (hInfile_92(D));
  operator delete[] (FileData_91);
  handle_error (1, -1, "pbzip2: *ERROR during compression: %d!  Aborting...\n", _102);
  goto <bb 40>; [0.00%]

  <bb 27> [0.00%]:
  outSize.210_20 = outSize;
  _21 = (long unsigned int) outSize.210_20;
  _105 = do_write (hOutfile_160, CompressedData_100, _21);
  ret_106 = (int) _105;
  if (ret_106 <= 0)
    goto <bb 28>; [0.00%]
  else
    goto <bb 31>; [0.00%]

  <bb 28> [0.00%]:
  close (hInfile_92(D));
  operator delete[] (FileData_91);
  operator delete[] (CompressedData_100);
  OutputStdOut.211_23 = OutputStdOut;
  if (OutputStdOut.211_23 == 0)
    goto <bb 29>; [0.00%]
  else
    goto <bb 30>; [0.00%]

  <bb 29> [0.00%]:
  close (hOutfile_160);

  <bb 30> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not write to file!  Aborting...\n");
  goto <bb 40>; [0.00%]

  <bb 31> [0.00%]:
  _24 = (long int) ret_106;
  CompressedSize_107 = _24 + CompressedSize_35;
  currBlock_108 = currBlock_40 + 1;
  _25 = currBlock_108 * 100;
  NumBlocksEstimated.212_26 = NumBlocksEstimated;
  percentComplete_110 = _25 / NumBlocksEstimated.212_26;
  QuietMode.213_27 = QuietMode;
  if (QuietMode.213_27 != 1)
    goto <bb 32>; [0.00%]
  else
    goto <bb 34>; [0.00%]

  <bb 32> [0.00%]:
  if (percentComplete_38 != percentComplete_110)
    goto <bb 33>; [0.00%]
  else
    goto <bb 34>; [0.00%]

  <bb 33> [100.00%]:
  stderr.214_28 = stderr;
  __fprintf_chk (stderr.214_28, 1, "Completed: %d%%             \r", percentComplete_110);
  stderr.215_29 = stderr;
  fflush (stderr.215_29);

  <bb 34> [0.00%]:
  operator delete[] (FileData_91);
  operator delete[] (CompressedData_100);
  goto <bb 6>; [0.00%]

  <bb 35> [0.00%]:
  close (hInfile_92(D));
  OutputStdOut.216_31 = OutputStdOut;
  if (OutputStdOut.216_31 == 0)
    goto <bb 36>; [0.00%]
  else
    goto <bb 37>; [0.00%]

  <bb 36> [0.00%]:
  close (hOutfile_160);

  <bb 37> [0.00%]:
  QuietMode.217_32 = QuietMode;
  if (QuietMode.217_32 != 1)
    goto <bb 38>; [0.00%]
  else
    goto <bb 39>; [0.00%]

  <bb 38> [100.00%]:
  CompressedSize.218_33 = (long unsigned int) CompressedSize_35;
  stderr.219_34 = stderr;
  __fprintf_chk (stderr.219_34, 1, "    Output Size: %lu bytes\n", CompressedSize.218_33);

  <bb 39> [0.00%]:
  syncSetProducerDone (1);

  <bb 40> [0.00%]:
  # _41 = PHI <-1(4), -1(10), -1(16), -1(22), -1(24), -1(26), -1(30), 0(39)>
  outSize ={v} {CLOBBER};
  return _41;

}



;; Function producer(int, int, queue*) (_Z8produceriiP5queue, funcdef_no=1988, decl_uid=39018, cgraph_uid=728, symbol_order=776)

Before removal of unreachable regions:
Eh tree:
   1 cleanup
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


producer(int, int, queue*) (int hInfile, int blockSize, struct queue * fifo)
{
  int ret;
  int D.48032;
  int ret;
  int D.48030;
  struct outBuff * queueElement;
  int ret;
  size_t inSize;
  char * FileData;
  long unsigned int _3;
  union pthread_mutex_t * _4;
  int _5;
  union pthread_mutex_t * _6;
  union pthread_cond_t * _7;
  union pthread_mutex_t * _9;
  int NumBlocks.278_10;
  unsigned int _11;
  union pthread_cond_t * _12;
  int NumBlocks.279_13;
  int _14;
  long int InBytesProduced.280_15;
  long unsigned int InBytesProduced.281_16;
  long unsigned int _17;
  long int _18;
  union pthread_mutex_t * _19;
  union pthread_mutex_t * _20;
  union pthread_cond_t * _21;
  union pthread_mutex_t * _22;
  int _24;
  long int _51;
  void * _64;

  <bb 2> [0.00%]:
  safe_mutex_lock (&ProgressIndicatorsMutex);
  NumBlocks = 0;
  InBytesProduced = 0;
  safe_mutex_unlock (&ProgressIndicatorsMutex);

  <bb 3> [100.00%]:
  safe_mutex_lock (&TerminateFlagMutex);
  ret_95 = terminateFlag;
  safe_mutex_unlock (&TerminateFlagMutex);
  if (ret_95 != 0)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  close (hInfile_49(D));
  goto <bb 22>; [0.00%]

  <bb 5> [0.00%]:
  inSize_44 = (size_t) blockSize_43(D);
  FileData_48 = operator new[] (inSize_44, &nothrow);
  if (FileData_48 == 0B)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 6> [0.00%]:
  close (hInfile_49(D));
  handle_error (1, -1, "pbzip2: *ERROR: Could not allocate memory (FileData)!  Aborting...\n");
  goto <bb 22>; [0.00%]

  <bb 7> [0.00%]:
  _51 = bufread (hInfile_49(D), FileData_48, inSize_44);
  ret_52 = (int) _51;
  if (ret_52 == 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 9>; [0.00%]

  <bb 8> [0.00%]:
  operator delete[] (FileData_48);
  close (hInfile_49(D));
  syncSetProducerDone (1);
  _20 = fifo_54(D)->mut;
  safe_mutex_lock (_20);
  _21 = fifo_54(D)->notEmpty;
  safe_cond_broadcast (_21);
  _22 = fifo_54(D)->mut;
  safe_mutex_unlock (_22);
  goto <bb 22>; [0.00%]

  <bb 9> [0.00%]:
  if (ret_52 < 0)
    goto <bb 10>; [0.00%]
  else
    goto <bb 11>; [0.00%]

  <bb 10> [0.00%]:
  close (hInfile_49(D));
  operator delete[] (FileData_48);
  handle_error (1, -1, "pbzip2: *ERROR: Could not read from file!  Aborting...\n");
  goto <bb 22>; [0.00%]

  <bb 11> [0.00%]:
  _3 = (long unsigned int) ret_52;
  if (blockSize_43(D) != ret_52)
    goto <bb 12>; [0.00%]
  else
    goto <bb 13>; [0.00%]

  <bb 12> [0.00%]:

  <bb 13> [0.00%]:
  # inSize_23 = PHI <inSize_44(11), _3(12)>
  _4 = fifo_54(D)->mut;
  safe_mutex_lock (_4);

  <bb 14> [0.00%]:
  _5 = fifo_54(D)->full;
  if (_5 == 0)
    goto <bb 17>; [0.00%]
  else
    goto <bb 15>; [0.00%]

  <bb 15> [100.00%]:
  _6 = fifo_54(D)->mut;
  _7 = fifo_54(D)->notFull;
  safe_cond_wait (_7, _6);
  safe_mutex_lock (&TerminateFlagMutex);
  ret_96 = terminateFlag;
  safe_mutex_unlock (&TerminateFlagMutex);
  if (ret_96 != 0)
    goto <bb 16>; [0.00%]
  else
    goto <bb 14>; [0.00%]

  <bb 16> [0.00%]:
  _9 = fifo_54(D)->mut;
  pthread_mutex_unlock (_9);
  close (hInfile_49(D));
  goto <bb 22>; [0.00%]

  <bb 17> [0.00%]:
  _64 = operator new (40, &nothrow);
  if (_64 != 0B)
    goto <bb 18>; [0.00%]
  else
    goto <bb 19>; [0.00%]

  <bb 18> [100.00%]:
  NumBlocks.278_10 = NumBlocks;
  _11 = (unsigned int) inSize_23;
  MEM[(struct  &)_64] ={v} {CLOBBER};
  MEM[(struct outBuff *)_64].buf = FileData_48;
  MEM[(struct outBuff *)_64].bufSize = _11;
  MEM[(struct outBuff *)_64].blockNumber = NumBlocks.278_10;
  MEM[(struct outBuff *)_64].sequenceNumber = 0;
  MEM[(struct outBuff *)_64].inSize = 0;
  MEM[(struct outBuff *)_64].isLastInSequence = 1;
  MEM[(struct outBuff *)_64].next = 0B;

  <bb 19> [0.00%]:
  if (_64 == 0B)
    goto <bb 20>; [0.00%]
  else
    goto <bb 21>; [0.00%]

  <bb 20> [0.00%]:
  close (hInfile_49(D));
  handle_error (1, -1, "pbzip2: *ERROR: Could not allocate memory (queueElement)!  Aborting...\n");
  goto <bb 22>; [0.00%]

  <bb 21> [0.00%]:
  queue::add (fifo_54(D), _64);
  _12 = fifo_54(D)->notEmpty;
  safe_cond_signal (_12);
  safe_mutex_lock (&ProgressIndicatorsMutex);
  NumBlocks.279_13 = NumBlocks;
  _14 = NumBlocks.279_13 + 1;
  NumBlocks = _14;
  InBytesProduced.280_15 = InBytesProduced;
  InBytesProduced.281_16 = (long unsigned int) InBytesProduced.280_15;
  _17 = InBytesProduced.281_16 + inSize_23;
  _18 = (long int) _17;
  InBytesProduced = _18;
  safe_mutex_unlock (&ProgressIndicatorsMutex);
  _19 = fifo_54(D)->mut;
  safe_mutex_unlock (_19);
  goto <bb 3>; [0.00%]

  <bb 22> [0.00%]:
  # _24 = PHI <-1(4), -1(6), -1(10), -1(16), -1(20), 0(8)>
  return _24;

}



;; Function queueInit(int) (_Z9queueIniti, funcdef_no=1992, decl_uid=39022, cgraph_uid=732, symbol_order=780)

Before removal of unreachable regions:
Eh tree:
   3 must_not_throw
   1 cleanup land:{1,<L25>}
     2 cleanup
Reachable regions: n_bits = 4, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2
Removing unreachable region 3


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L25>}


Removing basic block 15
Removing unreachable region 1
queueInit(int) (int queueSize)
{
  struct queue * q;
  void * _3;
  long int _7;
  void * _11;
  void * _18;
  void * _25;
  void * _32;
  void * _35;
  struct queue * _39;
  void * _47;
  sizetype _52;
  size_t iftmp.313_54;

  <bb 2> [0.00%]:
  QUEUESIZE = queueSize_44(D);
  _47 = operator new (96, &nothrow);
  if (_47 != 0B)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [100.00%]:
  MEM[(struct  &)_47] ={v} {CLOBBER};
  MEM[(struct queue *)_47].count = 0;
  MEM[(struct queue *)_47].lastElement = 0B;

  <bb 4> [0.00%]:
  if (_47 == 0B)
    goto <bb 14>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 5> [0.00%]:
  _52 = (sizetype) queueSize_44(D);
  if (_52 <= 1152921504606846975)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 6> [0.00%]:
  iftmp.313_54 = _52 * 8;
  _3 = operator new[] (iftmp.313_54, &nothrow);
  MEM[(struct queue *)_47].qData = _3;
  if (_3 == 0B)
    goto <bb 14>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 7> [0.00%]:
  __cxa_throw_bad_array_new_length ();

  <bb 8> [100.00%]:
  _7 = (long int) queueSize_44(D);
  MEM[(struct queue *)_47].size = _7;
  MEM[(struct queue *)_47].empty = 1;
  MEM[(struct queue *)_47].full = 0;
  MEM[(struct queue *)_47].head = 0;
  MEM[(struct queue *)_47].tail = 0;
  MEM[(struct queue *)_47].count = 0;
  MEM[(struct queue *)_47].lastElement = 0B;
  MEM[(struct queue *)_47].topLevelFull = 0;
  MEM[(struct queue *)_47].topLevelEmpty = 1;
  MEM[(struct queue *)_47].mut = 0B;
  _11 = operator new (40, &nothrow);
  MEM[(struct queue *)_47].mut = _11;
  if (_11 == 0B)
    goto <bb 14>; [0.00%]
  else
    goto <bb 9>; [0.00%]

  <bb 9> [0.00%]:
  pthread_mutex_init (_11, 0B);
  MEM[(struct queue *)_47].notFull = 0B;
  _18 = operator new (48, &nothrow);
  MEM[(struct queue *)_47].notFull = _18;
  if (_18 == 0B)
    goto <bb 14>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 10> [0.00%]:
  pthread_cond_init (_18, 0B);
  MEM[(struct queue *)_47].notEmpty = 0B;
  _25 = operator new (48, &nothrow);
  MEM[(struct queue *)_47].notEmpty = _25;
  if (_25 == 0B)
    goto <bb 14>; [0.00%]
  else
    goto <bb 11>; [0.00%]

  <bb 11> [0.00%]:
  pthread_cond_init (_25, 0B);
  MEM[(struct queue *)_47].consumers = 0B;
  _32 = operator new[] (iftmp.313_54, &nothrow);
  MEM[(struct queue *)_47].consumers = _32;
  if (_32 == 0B)
    goto <bb 14>; [0.00%]
  else
    goto <bb 12>; [0.00%]

  <bb 12> [0.00%]:
  notTooMuchNumBuffered = 0B;
  _35 = operator new (48, &nothrow);
  notTooMuchNumBuffered = _35;
  if (_35 == 0B)
    goto <bb 14>; [0.00%]
  else
    goto <bb 13>; [0.00%]

  <bb 13> [0.00%]:
  pthread_cond_init (_35, 0B);

  <bb 14> [0.00%]:
  # _39 = PHI <0B(4), 0B(6), 0B(8), 0B(9), 0B(10), 0B(11), 0B(12), _47(13)>
  return _39;

}



;; Function testBZ2ErrorHandling(int, void*, int) (_Z20testBZ2ErrorHandlingiPvi, funcdef_no=1998, decl_uid=39042, cgraph_uid=738, symbol_order=786)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L11>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L11>}


Removing basic block 16
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 4 and 5
Merging blocks 13 and 14
testBZ2ErrorHandling(int, void*, int) (int bzerr, BZFILE * bzf, int streamNo)
{
  int D.48081;
  int D.48078;
  int D.48075;
  int D.48072;
  int D.48069;
  int D.48066;
  int D.48063;
  int D.48060;
  int bzerr_dummy;
  struct FILE * stderr.378_1;
  struct FILE * stderr.379_2;
  struct FILE * stderr.380_3;
  struct FILE * stderr.381_4;
  struct FILE * stderr.382_5;
  struct FILE * stderr.383_6;
  struct FILE * stderr.384_7;
  struct FILE * stderr.385_8;
  int _9;

  <bb 2> [0.00%]:
  BZ2_bzReadClose (&bzerr_dummy, bzf_13(D));
  switch (bzerr_15(D)) <default: <L8> [0.00%], case -9: <L0> [0.00%], case -7: <L4> [0.00%], case -6: <L1> [0.00%], case -5: <L5> [0.00%], case -4: <L2> [0.00%], case -3: <L3> [0.00%]>

<L0> [100.00%]:
  stderr.378_1 = stderr;
  __fprintf_chk (stderr.378_1, 1, "pbzip2: *ERROR: Integers are not the right size for libbzip2. Aborting!\n");
  exit (3);

<L1> [100.00%]:
  stderr.379_2 = stderr;
  __fprintf_chk (stderr.379_2, 1, "pbzip2: *ERROR: Integers are not the right size for libbzip2. Aborting!\n");
  goto <bb 12>; [100.00%]

<L2> [100.00%]:
  stderr.380_3 = stderr;
  __fprintf_chk (stderr.380_3, 1, "pbzip2: *ERROR: Data integrity (CRC) error in data!  Skipping...\n");
  goto <bb 12>; [100.00%]

<L3> [100.00%]:
  stderr.381_4 = stderr;
  __fprintf_chk (stderr.381_4, 1, "pbzip2: *ERROR: Could NOT allocate enough memory. Aborting!\n");
  goto <bb 12>; [100.00%]

<L4> [100.00%]:
  stderr.382_5 = stderr;
  __fprintf_chk (stderr.382_5, 1, "pbzip2: *ERROR: File ends unexpectedly!  Skipping...\n");
  goto <bb 12>; [100.00%]

<L5> [0.00%]:
  if (streamNo_20(D) == 1)
    goto <bb 9>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 9> [100.00%]:
  stderr.383_6 = stderr;
  __fprintf_chk (stderr.383_6, 1, "pbzip2: *ERROR: Bad magic number (file not created by bzip2)!  Skipping...\n");
  goto <bb 12>; [100.00%]

  <bb 10> [100.00%]:
  stderr.384_7 = stderr;
  __fprintf_chk (stderr.384_7, 1, "pbzip2: *WARNING: Trailing garbage after EOF ignored!\n");
  goto <bb 12>; [100.00%]

<L8> [100.00%]:
  stderr.385_8 = stderr;
  __fprintf_chk (stderr.385_8, 1, "pbzip2: *ERROR: Unexpected error. Aborting!\n");
  exit (3);

  <bb 12> [0.00%]:
  # _9 = PHI <1(4), -1(5), 1(6), -1(7), -1(9), 0(10)>
  bzerr_dummy ={v} {CLOBBER};
  return _9;

}



;; Function directdecompress(char const*, char const*) (_Z16directdecompressPKcS0_, funcdef_no=1986, decl_uid=39014, cgraph_uid=726, symbol_order=774)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L153>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L153>}


Removing basic block 130
Removing unreachable region 1
Merging blocks 3 and 4
Merging blocks 12 and 13
Merging blocks 20 and 21
Merging blocks 23 and 24
Merging blocks 28 and 29
Merging blocks 31 and 32
Merging blocks 40 and 41
Merging blocks 43 and 44
Merging blocks 48 and 49
Merging blocks 52 and 53
Merging blocks 54 and 55
Merging blocks 57 and 58
Merging blocks 67 and 68
Merging blocks 79 and 80
Merging blocks 87 and 88
Merging blocks 94 and 95
Merging blocks 99 and 100
Merging blocks 103 and 104
Merging blocks 112 and 113
Merging blocks 119 and 120
Merging blocks 125 and 126
Merging blocks 20 and 22
Merging blocks 40 and 42
Merging blocks 54 and 56
directdecompress(char const*, char const*) (const char * InFilename, const char * OutFilename)
{
  int ret;
  int D.48097;
  int ret;
  int D.48095;
  size_t D.48093;
  int D.48088;
  int D.48085;
  int c;
  int c;
  int i;
  int ret;
  int nUnused;
  int streamNo;
  int nread;
  int bzerr;
  unsigned char * unusedTmp;
  unsigned char unused[5000];
  unsigned char obuf[5000];
  BZFILE * bzf;
  struct FILE * zStream;
  struct FILE * stream;
  int _1;
  int _2;
  struct FILE * stdin.221_3;
  int OutputStdOut.222_4;
  int _5;
  struct FILE * stdout.224_6;
  struct FILE * stderr.226_8;
  struct FILE * stdin.227_9;
  struct FILE * stdout.228_10;
  int nUnused.229_11;
  int Verbosity.230_12;
  int bzerr.231_13;
  int bzerr.232_14;
  struct FILE * stdin.233_15;
  struct FILE * stdout.234_16;
  int bzerr.235_17;
  struct FILE * stderr.237_19;
  struct FILE * stdin.238_20;
  struct FILE * stdout.239_21;
  int bzerr.240_22;
  int ForceOverwrite.241_23;
  int _25;
  int bzerr.243_26;
  struct FILE * stdin.244_27;
  struct FILE * stdout.245_28;
  long unsigned int _29;
  int _30;
  int bzerr.247_31;
  struct FILE * stdin.248_32;
  struct FILE * stdout.249_33;
  long unsigned int _36;
  int _37;
  int bzerr.253_38;
  struct FILE * stdin.254_39;
  struct FILE * stdout.255_40;
  struct FILE * stdin.258_43;
  struct FILE * stdout.259_44;
  int bzerr.260_45;
  int nUnused.262_47;
  unsigned char * unusedTmp.263_48;
  sizetype _49;
  unsigned char * _50;
  unsigned char _51;
  int bzerr.264_52;
  int nUnused.266_54;
  int _55;
  struct FILE * stdin.268_56;
  struct FILE * stdout.269_57;
  int _58;
  struct FILE * stdout.271_59;
  struct FILE * stdout.272_60;
  struct FILE * stdout.273_61;
  int _66;
  struct FILE * _114;
  struct FILE * _123;
  BZFILE * _133;
  int _140;
  int _144;
  int _156;
  int _163;
  int _173;
  int _189;
  int _197;
  int _206;
  int _211;
  int _214;
  int _233;
  long unsigned int _268;

  <bb 2> [0.00%]:
  nUnused = 0;
  _1 = strcmp (InFilename_111(D), "-");
  if (_1 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 3> [0.00%]:
  _114 = *fopen64 (InFilename_111(D), "rb");
  if (_114 == 0B)
    goto <bb 4>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 4> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not open input file [%s]!  Aborting...\n", InFilename_111(D));
  goto <bb 105>; [0.00%]

  <bb 5> [0.00%]:
  zStream_112 = stdin;

  <bb 6> [0.00%]:
  # zStream_63 = PHI <_114(3), zStream_112(5)>
  _2 = ferror (zStream_63);
  if (_2 != 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 7> [0.00%]:
  stdin.221_3 = stdin;
  if (stdin.221_3 != zStream_63)
    goto <bb 8>; [0.00%]
  else
    goto <bb 9>; [0.00%]

  <bb 8> [0.00%]:
  fclose (zStream_63);

  <bb 9> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Problem with input stream of file [%s]!  Aborting...\n", InFilename_111(D));
  goto <bb 105>; [0.00%]

  <bb 10> [0.00%]:
  OutputStdOut.222_4 = OutputStdOut;
  if (OutputStdOut.222_4 == 0)
    goto <bb 11>; [0.00%]
  else
    goto <bb 13>; [0.00%]

  <bb 11> [0.00%]:
  _123 = safe_fopen_output (OutFilename_121(D), "wb");
  if (_123 == 0B)
    goto <bb 12>; [0.00%]
  else
    goto <bb 14>; [0.00%]

  <bb 12> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not open output file [%s]!  Aborting...\n", OutFilename_121(D));
  goto <bb 105>; [0.00%]

  <bb 13> [0.00%]:
  stream_120 = stdout;

  <bb 14> [0.00%]:
  # stream_62 = PHI <_123(11), stream_120(13)>
  _5 = ferror (stream_62);
  if (_5 != 0)
    goto <bb 15>; [0.00%]
  else
    goto <bb 18>; [0.00%]

  <bb 15> [0.00%]:
  stdout.224_6 = stdout;
  if (stdout.224_6 != stream_62)
    goto <bb 16>; [0.00%]
  else
    goto <bb 17>; [0.00%]

  <bb 16> [0.00%]:
  fclose (stream_62);

  <bb 17> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Problem with output stream of file [%s]!  Aborting...\n", InFilename_111(D));
  goto <bb 105>; [0.00%]

  <bb 18> [100.00%]:
  # streamNo_64 = PHI <0(14), streamNo_135(84), streamNo_135(82)>
  safe_mutex_lock (&TerminateFlagMutex);
  ret_270 = terminateFlag;
  safe_mutex_unlock (&TerminateFlagMutex);
  if (ret_270 != 0)
    goto <bb 19>; [0.00%]
  else
    goto <bb 23>; [0.00%]

  <bb 19> [100.00%]:
  stderr.226_8 = stderr;
  __fprintf_chk (stderr.226_8, 1, "directdecompress: terminating1 - terminateFlag set\n");
  stdin.227_9 = stdin;
  if (stdin.227_9 != zStream_63)
    goto <bb 20>; [0.00%]
  else
    goto <bb 21>; [0.00%]

  <bb 20> [0.00%]:
  fclose (zStream_63);

  <bb 21> [0.00%]:
  stdout.228_10 = stdout;
  if (stdout.228_10 != stream_62)
    goto <bb 22>; [0.00%]
  else
    goto <bb 105>; [0.00%]

  <bb 22> [0.00%]:
  fclose (stream_62);
  goto <bb 105>; [0.00%]

  <bb 23> [0.00%]:
  nUnused.229_11 = nUnused;
  Verbosity.230_12 = Verbosity;
  _133 = BZ2_bzReadOpen (&bzerr, zStream_63, Verbosity.230_12, 0, &unused, nUnused.229_11);
  if (_133 == 0B)
    goto <bb 25>; [0.00%]
  else
    goto <bb 24>; [0.00%]

  <bb 24> [0.00%]:
  bzerr.231_13 = bzerr;
  if (bzerr.231_13 != 0)
    goto <bb 25>; [0.00%]
  else
    goto <bb 31>; [0.00%]

  <bb 25> [0.00%]:
  bzerr.232_14 = bzerr;
  _233 = testBZ2ErrorHandling (bzerr.232_14, _133, streamNo_64);
  stdin.233_15 = stdin;
  if (stdin.233_15 != zStream_63)
    goto <bb 26>; [0.00%]
  else
    goto <bb 27>; [0.00%]

  <bb 26> [0.00%]:
  fclose (zStream_63);

  <bb 27> [0.00%]:
  stdout.234_16 = stdout;
  if (stdout.234_16 != stream_62)
    goto <bb 28>; [0.00%]
  else
    goto <bb 29>; [0.00%]

  <bb 28> [0.00%]:
  fclose (stream_62);

  <bb 29> [0.00%]:
  if (_233 != 0)
    goto <bb 30>; [0.00%]
  else
    goto <bb 105>; [0.00%]

  <bb 30> [0.00%]:
  syncSetTerminateFlag (1);
  goto <bb 105>; [0.00%]

  <bb 31> [0.00%]:
  streamNo_135 = streamNo_64 + 1;

  <bb 32> [0.00%]:
  bzerr.235_17 = bzerr;
  if (bzerr.235_17 != 0)
    goto <bb 69>; [0.00%]
  else
    goto <bb 33>; [0.00%]

  <bb 33> [100.00%]:
  safe_mutex_lock (&TerminateFlagMutex);
  ret_271 = terminateFlag;
  safe_mutex_unlock (&TerminateFlagMutex);
  if (ret_271 != 0)
    goto <bb 34>; [0.00%]
  else
    goto <bb 38>; [0.00%]

  <bb 34> [100.00%]:
  stderr.237_19 = stderr;
  __fprintf_chk (stderr.237_19, 1, "directdecompress: terminating2 - terminateFlag set\n");
  stdin.238_20 = stdin;
  if (stdin.238_20 != zStream_63)
    goto <bb 35>; [0.00%]
  else
    goto <bb 36>; [0.00%]

  <bb 35> [0.00%]:
  fclose (zStream_63);

  <bb 36> [0.00%]:
  stdout.239_21 = stdout;
  if (stdout.239_21 != stream_62)
    goto <bb 37>; [0.00%]
  else
    goto <bb 105>; [0.00%]

  <bb 37> [0.00%]:
  fclose (stream_62);
  goto <bb 105>; [0.00%]

  <bb 38> [0.00%]:
  _140 = BZ2_bzRead (&bzerr, _133, &obuf, 5000);
  bzerr.240_22 = bzerr;
  if (bzerr.240_22 == -5)
    goto <bb 39>; [0.00%]
  else
    goto <bb 58>; [0.00%]

  <bb 39> [0.00%]:
  ForceOverwrite.241_23 = ForceOverwrite;
  if (ForceOverwrite.241_23 == 1)
    goto <bb 40>; [0.00%]
  else
    goto <bb 58>; [0.00%]

  <bb 40> [0.00%]:
  rewind (zStream_63);

  <bb 41> [0.00%]:
  _144 = fgetc (zStream_63);
  if (_144 == -1)
    goto <bb 85> (closeok); [0.00%]
  else
    goto <bb 42>; [0.00%]

  <bb 42> [100.00%]:
  ungetc (_144, zStream_63);
  _268 = *fread (&obuf, 1, 5000, zStream_63);
  nread_149 = (int) _268;
  _25 = ferror (zStream_63);
  if (_25 != 0)
    goto <bb 43>; [0.00%]
  else
    goto <bb 49>; [0.00%]

  <bb 43> [0.00%]:
  bzerr.243_26 = bzerr;
  _163 = testBZ2ErrorHandling (bzerr.243_26, _133, streamNo_135);
  stdin.244_27 = stdin;
  if (stdin.244_27 != zStream_63)
    goto <bb 44>; [0.00%]
  else
    goto <bb 45>; [0.00%]

  <bb 44> [0.00%]:
  fclose (zStream_63);

  <bb 45> [0.00%]:
  stdout.245_28 = stdout;
  if (stdout.245_28 != stream_62)
    goto <bb 46>; [0.00%]
  else
    goto <bb 47>; [0.00%]

  <bb 46> [0.00%]:
  fclose (stream_62);

  <bb 47> [0.00%]:
  if (_163 != 0)
    goto <bb 48>; [0.00%]
  else
    goto <bb 105>; [0.00%]

  <bb 48> [0.00%]:
  syncSetTerminateFlag (1);
  goto <bb 105>; [0.00%]

  <bb 49> [0.00%]:
  if (nread_149 > 0)
    goto <bb 50>; [0.00%]
  else
    goto <bb 51>; [0.00%]

  <bb 50> [0.00%]:
  _29 = (long unsigned int) nread_149;
  fwrite (&obuf, 1, _29, stream_62);

  <bb 51> [0.00%]:
  _30 = ferror (stream_62);
  if (_30 != 0)
    goto <bb 52>; [0.00%]
  else
    goto <bb 41>; [0.00%]

  <bb 52> [0.00%]:
  bzerr.247_31 = bzerr;
  _156 = testBZ2ErrorHandling (bzerr.247_31, _133, streamNo_135);
  stdin.248_32 = stdin;
  if (stdin.248_32 != zStream_63)
    goto <bb 53>; [0.00%]
  else
    goto <bb 54>; [0.00%]

  <bb 53> [0.00%]:
  fclose (zStream_63);

  <bb 54> [0.00%]:
  stdout.249_33 = stdout;
  if (stdout.249_33 != stream_62)
    goto <bb 55>; [0.00%]
  else
    goto <bb 56>; [0.00%]

  <bb 55> [0.00%]:
  fclose (stream_62);

  <bb 56> [0.00%]:
  if (_156 != 0)
    goto <bb 57>; [0.00%]
  else
    goto <bb 105>; [0.00%]

  <bb 57> [0.00%]:
  syncSetTerminateFlag (1);
  goto <bb 105>; [0.00%]

  <bb 58> [0.00%]:
  if (bzerr.240_22 == 0)
    goto <bb 60>; [0.00%]
  else
    goto <bb 59>; [0.00%]

  <bb 59> [0.00%]:
  if (bzerr.240_22 == 4)
    goto <bb 60>; [0.00%]
  else
    goto <bb 62>; [0.00%]

  <bb 60> [0.00%]:
  if (_140 > 0)
    goto <bb 61>; [0.00%]
  else
    goto <bb 62>; [0.00%]

  <bb 61> [0.00%]:
  _36 = (long unsigned int) _140;
  fwrite (&obuf, 1, _36, stream_62);

  <bb 62> [0.00%]:
  _37 = ferror (stream_62);
  if (_37 != 0)
    goto <bb 63>; [0.00%]
  else
    goto <bb 32>; [0.00%]

  <bb 63> [0.00%]:
  bzerr.253_38 = bzerr;
  _173 = testBZ2ErrorHandling (bzerr.253_38, _133, streamNo_135);
  stdin.254_39 = stdin;
  if (stdin.254_39 != zStream_63)
    goto <bb 64>; [0.00%]
  else
    goto <bb 65>; [0.00%]

  <bb 64> [0.00%]:
  fclose (zStream_63);

  <bb 65> [0.00%]:
  stdout.255_40 = stdout;
  if (stdout.255_40 != stream_62)
    goto <bb 66>; [0.00%]
  else
    goto <bb 67>; [0.00%]

  <bb 66> [0.00%]:
  fclose (stream_62);

  <bb 67> [0.00%]:
  if (_173 != 0)
    goto <bb 68>; [0.00%]
  else
    goto <bb 105>; [0.00%]

  <bb 68> [0.00%]:
  syncSetTerminateFlag (1);
  goto <bb 105>; [0.00%]

  <bb 69> [0.00%]:
  if (bzerr.235_17 != 4)
    goto <bb 70>; [0.00%]
  else
    goto <bb 76>; [0.00%]

  <bb 70> [0.00%]:
  _197 = testBZ2ErrorHandling (bzerr.235_17, _133, streamNo_135);
  stdin.258_43 = stdin;
  if (stdin.258_43 != zStream_63)
    goto <bb 71>; [0.00%]
  else
    goto <bb 72>; [0.00%]

  <bb 71> [0.00%]:
  fclose (zStream_63);

  <bb 72> [0.00%]:
  stdout.259_44 = stdout;
  if (stdout.259_44 != stream_62)
    goto <bb 73>; [0.00%]
  else
    goto <bb 74>; [0.00%]

  <bb 73> [0.00%]:
  fclose (stream_62);

  <bb 74> [0.00%]:
  if (_197 != 0)
    goto <bb 75>; [0.00%]
  else
    goto <bb 105>; [0.00%]

  <bb 75> [0.00%]:
  syncSetTerminateFlag (1);
  goto <bb 105>; [0.00%]

  <bb 76> [0.00%]:
  BZ2_bzReadGetUnused (&bzerr, _133, &unusedTmp, &nUnused);
  bzerr.260_45 = bzerr;
  if (bzerr.260_45 != 0)
    goto <bb 77>; [0.00%]
  else
    goto <bb 78>; [0.00%]

  <bb 77> [0.00%]:
  handle_error (1, 3, "pbzip2: *ERROR: Unexpected error [bzerr=%d]. Aborting!\n", bzerr.260_45);
  goto <bb 105>; [0.00%]

  <bb 78> [0.00%]:
  # i_65 = PHI <0(76), i_186(79)>
  nUnused.262_47 = nUnused;
  if (nUnused.262_47 <= i_65)
    goto <bb 80>; [0.00%]
  else
    goto <bb 79>; [0.00%]

  <bb 79> [0.00%]:
  unusedTmp.263_48 = unusedTmp;
  _49 = (sizetype) i_65;
  _50 = unusedTmp.263_48 + _49;
  _51 = *_50;
  unused[i_65] = _51;
  i_186 = i_65 + 1;
  goto <bb 78>; [0.00%]

  <bb 80> [0.00%]:
  BZ2_bzReadClose (&bzerr, _133);
  bzerr.264_52 = bzerr;
  if (bzerr.264_52 != 0)
    goto <bb 81>; [0.00%]
  else
    goto <bb 82>; [0.00%]

  <bb 81> [0.00%]:
  handle_error (1, 3, "pbzip2: *ERROR: Unexpected error [bzerr=%d]. Aborting!\n", bzerr.264_52);
  goto <bb 105>; [0.00%]

  <bb 82> [0.00%]:
  nUnused.266_54 = nUnused;
  if (nUnused.266_54 == 0)
    goto <bb 83>; [0.00%]
  else
    goto <bb 18>; [0.00%]

  <bb 83> [0.00%]:
  _189 = fgetc (zStream_63);
  if (_189 == -1)
    goto <bb 85> (closeok); [0.00%]
  else
    goto <bb 84>; [0.00%]

  <bb 84> [0.00%]:
  ungetc (_189, zStream_63);
  goto <bb 18>; [0.00%]

closeok [0.00%]:
  _55 = ferror (zStream_63);
  if (_55 != 0)
    goto <bb 86>; [0.00%]
  else
    goto <bb 91>; [0.00%]

  <bb 86> [0.00%]:
  stdin.268_56 = stdin;
  if (stdin.268_56 != zStream_63)
    goto <bb 87>; [0.00%]
  else
    goto <bb 88>; [0.00%]

  <bb 87> [0.00%]:
  fclose (zStream_63);

  <bb 88> [0.00%]:
  stdout.269_57 = stdout;
  if (stdout.269_57 != stream_62)
    goto <bb 89>; [0.00%]
  else
    goto <bb 90>; [0.00%]

  <bb 89> [0.00%]:
  fclose (stream_62);

  <bb 90> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Problem with input stream of file [%s]!  Skipping...\n", InFilename_111(D));
  goto <bb 105>; [0.00%]

  <bb 91> [0.00%]:
  _206 = do_fclose (zStream_63);
  if (_206 == -1)
    goto <bb 92>; [0.00%]
  else
    goto <bb 93>; [0.00%]

  <bb 92> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Problem closing file [%s]!  Skipping...\n", InFilename_111(D));
  goto <bb 105>; [0.00%]

  <bb 93> [0.00%]:
  _58 = ferror (stream_62);
  if (_58 != 0)
    goto <bb 94>; [0.00%]
  else
    goto <bb 97>; [0.00%]

  <bb 94> [0.00%]:
  stdout.271_59 = stdout;
  if (stdout.271_59 != stream_62)
    goto <bb 95>; [0.00%]
  else
    goto <bb 96>; [0.00%]

  <bb 95> [0.00%]:
  fclose (stream_62);

  <bb 96> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Problem with output stream of file [%s]!  Skipping...\n", InFilename_111(D));
  goto <bb 105>; [0.00%]

  <bb 97> [0.00%]:
  _211 = do_fflush (stream_62);
  if (_211 != 0)
    goto <bb 98>; [0.00%]
  else
    goto <bb 101>; [0.00%]

  <bb 98> [0.00%]:
  stdout.272_60 = stdout;
  if (stdout.272_60 != stream_62)
    goto <bb 99>; [0.00%]
  else
    goto <bb 100>; [0.00%]

  <bb 99> [0.00%]:
  fclose (stream_62);

  <bb 100> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Problem with output stream of file [%s]!  Skipping...\n", InFilename_111(D));
  goto <bb 105>; [0.00%]

  <bb 101> [0.00%]:
  stdout.273_61 = stdout;
  if (stdout.273_61 != stream_62)
    goto <bb 102>; [0.00%]
  else
    goto <bb 104>; [0.00%]

  <bb 102> [0.00%]:
  _214 = do_fclose (stream_62);
  if (_214 == -1)
    goto <bb 103>; [0.00%]
  else
    goto <bb 104>; [0.00%]

  <bb 103> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Problem closing file [%s]!  Skipping...\n", OutFilename_121(D));
  goto <bb 105>; [0.00%]

  <bb 104> [0.00%]:
  syncSetProducerDone (1);

  <bb 105> [0.00%]:
  # _66 = PHI <-1(4), -1(9), -1(12), -1(17), -1(22), _233(30), -1(37), _163(48), _156(57), _173(68), _197(75), 3(77), 3(81), -1(90), -1(92), -1(96), -1(100), -1(103), 0(104), _197(74), _173(67), _156(56), _163(47), -1(36), _233(29), -1(21)>
  obuf ={v} {CLOBBER};
  unused ={v} {CLOBBER};
  unusedTmp ={v} {CLOBBER};
  bzerr ={v} {CLOBBER};
  nUnused ={v} {CLOBBER};
  return _66;

}



;; Function testCompressedData(char*) (_Z18testCompressedDataPc, funcdef_no=1999, decl_uid=39044, cgraph_uid=739, symbol_order=787)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L51>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L51>}


Removing basic block 54
Removing unreachable region 1
Merging blocks 3 and 4
Merging blocks 5 and 6
Merging blocks 10 and 11
Merging blocks 13 and 14
Merging blocks 16 and 17
Merging blocks 21 and 22
Merging blocks 23 and 24
Merging blocks 27 and 28
Merging blocks 30 and 31
Merging blocks 32 and 33
Merging blocks 36 and 37
Merging blocks 38 and 39
Merging blocks 41 and 42
Merging blocks 45 and 46
Merging blocks 50 and 51
Merging blocks 5 and 7
Merging blocks 45 and 47
Merging blocks 45 and 48
testCompressedData(char*) (char * fileName)
{
  int D.48107;
  int D.48104;
  int D.48101;
  int c;
  int i;
  int nUnused;
  int streamNo;
  int nread;
  int bzerr;
  unsigned char * unusedTmp;
  unsigned char unused[5000];
  unsigned char obuf[5000];
  BZFILE * bzf;
  int ret;
  struct FILE * zStream;
  int _1;
  int _3;
  struct FILE * stdin.387_4;
  int nUnused.388_5;
  int Verbosity.389_6;
  int bzerr.390_7;
  int bzerr.391_8;
  struct FILE * stdin.392_9;
  int bzerr.393_10;
  int bzerr.394_11;
  struct FILE * stdin.396_13;
  struct FILE * stdin.399_16;
  int bzerr.400_17;
  struct FILE * stderr.401_18;
  int nUnused.402_19;
  unsigned char * unusedTmp.403_20;
  sizetype _21;
  unsigned char * _22;
  unsigned char _23;
  int bzerr.404_24;
  struct FILE * stderr.405_25;
  int nUnused.406_26;
  int _27;
  struct FILE * stdin.408_29;
  struct FILE * stderr.409_30;
  int _34;
  struct FILE * _55;
  struct ErrorContext * _58;
  BZFILE * _65;
  int _72;
  int _82;
  int _88;
  struct ErrorContext * _94;
  int _104;
  int _109;

  <bb 2> [0.00%]:
  nUnused = 0;
  _1 = strcmp (fileName_52(D), "-");
  if (_1 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 3> [0.00%]:
  _55 = *fopen64 (fileName_52(D), "rb");
  if (_55 == 0B)
    goto <bb 4>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 4> [0.00%]:
  _58 = pbzip2::ErrorContext::getInstance ();
  pbzip2::ErrorContext::saveError (_58);
  handle_error (0, -1, "pbzip2: *ERROR: Could not open input file [%s]!  Skipping...\n", fileName_52(D));
  goto <bb 35>; [0.00%]

  <bb 5> [0.00%]:
  zStream_53 = stdin;

  <bb 6> [0.00%]:
  # zStream_31 = PHI <_55(3), zStream_53(5)>
  _3 = ferror (zStream_31);
  if (_3 != 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 9>; [0.00%]

  <bb 7> [0.00%]:
  handle_error (0, -1, "pbzip2: *ERROR: Problem with stream of file [%s]!  Skipping...\n", fileName_52(D));
  stdin.387_4 = stdin;
  if (stdin.387_4 != zStream_31)
    goto <bb 8>; [0.00%]
  else
    goto <bb 35>; [0.00%]

  <bb 8> [0.00%]:
  verbose_fclose (zStream_31, fileName_52(D));
  goto <bb 35>; [0.00%]

  <bb 9> [0.00%]:
  # streamNo_32 = PHI <0(6), streamNo_67(29), streamNo_67(27)>
  nUnused.388_5 = nUnused;
  Verbosity.389_6 = Verbosity;
  _65 = BZ2_bzReadOpen (&bzerr, zStream_31, Verbosity.389_6, 0, &unused, nUnused.388_5);
  if (_65 == 0B)
    goto <bb 11>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 10> [0.00%]:
  bzerr.390_7 = bzerr;
  if (bzerr.390_7 != 0)
    goto <bb 11>; [0.00%]
  else
    goto <bb 13>; [0.00%]

  <bb 11> [0.00%]:
  bzerr.391_8 = bzerr;
  _109 = testBZ2ErrorHandling (bzerr.391_8, _65, streamNo_32);
  stdin.392_9 = stdin;
  if (stdin.392_9 != zStream_31)
    goto <bb 12>; [0.00%]
  else
    goto <bb 35>; [0.00%]

  <bb 12> [0.00%]:
  verbose_fclose (zStream_31, fileName_52(D));
  goto <bb 35>; [0.00%]

  <bb 13> [0.00%]:
  streamNo_67 = streamNo_32 + 1;

  <bb 14> [0.00%]:
  bzerr.393_10 = bzerr;
  if (bzerr.393_10 != 0)
    goto <bb 18>; [0.00%]
  else
    goto <bb 15>; [0.00%]

  <bb 15> [0.00%]:
  BZ2_bzRead (&bzerr, _65, &obuf, 5000);
  bzerr.394_11 = bzerr;
  if (bzerr.394_11 == -5)
    goto <bb 16>; [0.00%]
  else
    goto <bb 14>; [0.00%]

  <bb 16> [0.00%]:
  _72 = testBZ2ErrorHandling (bzerr.394_11, _65, streamNo_67);
  stdin.396_13 = stdin;
  if (stdin.396_13 != zStream_31)
    goto <bb 17>; [0.00%]
  else
    goto <bb 35>; [0.00%]

  <bb 17> [0.00%]:
  verbose_fclose (zStream_31, fileName_52(D));
  goto <bb 35>; [0.00%]

  <bb 18> [0.00%]:
  if (bzerr.393_10 != 4)
    goto <bb 19>; [0.00%]
  else
    goto <bb 21>; [0.00%]

  <bb 19> [0.00%]:
  _104 = testBZ2ErrorHandling (bzerr.393_10, _65, streamNo_67);
  stdin.399_16 = stdin;
  if (stdin.399_16 != zStream_31)
    goto <bb 20>; [0.00%]
  else
    goto <bb 35>; [0.00%]

  <bb 20> [0.00%]:
  verbose_fclose (zStream_31, fileName_52(D));
  goto <bb 35>; [0.00%]

  <bb 21> [0.00%]:
  BZ2_bzReadGetUnused (&bzerr, _65, &unusedTmp, &nUnused);
  bzerr.400_17 = bzerr;
  if (bzerr.400_17 != 0)
    goto <bb 22>; [0.00%]
  else
    goto <bb 23>; [0.00%]

  <bb 22> [100.00%]:
  stderr.401_18 = stderr;
  __fprintf_chk (stderr.401_18, 1, "pbzip2: *ERROR: Unexpected error. Aborting!\n");
  exit (3);

  <bb 23> [0.00%]:
  # i_33 = PHI <0(21), i_79(24)>
  nUnused.402_19 = nUnused;
  if (nUnused.402_19 <= i_33)
    goto <bb 25>; [0.00%]
  else
    goto <bb 24>; [0.00%]

  <bb 24> [0.00%]:
  unusedTmp.403_20 = unusedTmp;
  _21 = (sizetype) i_33;
  _22 = unusedTmp.403_20 + _21;
  _23 = *_22;
  unused[i_33] = _23;
  i_79 = i_33 + 1;
  goto <bb 23>; [0.00%]

  <bb 25> [0.00%]:
  BZ2_bzReadClose (&bzerr, _65);
  bzerr.404_24 = bzerr;
  if (bzerr.404_24 != 0)
    goto <bb 26>; [0.00%]
  else
    goto <bb 27>; [0.00%]

  <bb 26> [100.00%]:
  stderr.405_25 = stderr;
  __fprintf_chk (stderr.405_25, 1, "pbzip2: *ERROR: Unexpected error. Aborting!\n");
  exit (3);

  <bb 27> [0.00%]:
  nUnused.406_26 = nUnused;
  if (nUnused.406_26 == 0)
    goto <bb 28>; [0.00%]
  else
    goto <bb 9>; [0.00%]

  <bb 28> [0.00%]:
  _82 = fgetc (zStream_31);
  if (_82 == -1)
    goto <bb 30>; [0.00%]
  else
    goto <bb 29>; [0.00%]

  <bb 29> [0.00%]:
  ungetc (_82, zStream_31);
  goto <bb 9>; [0.00%]

  <bb 30> [0.00%]:
  _27 = ferror (zStream_31);
  if (_27 != 0)
    goto <bb 31>; [0.00%]
  else
    goto <bb 33>; [0.00%]

  <bb 31> [0.00%]:
  _94 = pbzip2::ErrorContext::getInstance ();
  pbzip2::ErrorContext::saveError (_94);
  handle_error (0, -1, "pbzip2: *ERROR: Problem with stream of file [%s]!  Skipping...\n", fileName_52(D));
  stdin.408_29 = stdin;
  if (stdin.408_29 != zStream_31)
    goto <bb 32>; [0.00%]
  else
    goto <bb 35>; [0.00%]

  <bb 32> [0.00%]:
  verbose_fclose (zStream_31, fileName_52(D));
  goto <bb 35>; [0.00%]

  <bb 33> [0.00%]:
  _88 = verbose_fclose (zStream_31, fileName_52(D));
  if (_88 == -1)
    goto <bb 34>; [0.00%]
  else
    goto <bb 35>; [0.00%]

  <bb 34> [100.00%]:
  stderr.409_30 = stderr;
  __fprintf_chk (stderr.409_30, 1, "pbzip2: *ERROR: Problem closing file [%s]!  Skipping...\n", fileName_52(D));

  <bb 35> [0.00%]:
  # _34 = PHI <-1(4), -1(8), _109(12), _72(17), _104(20), -1(32), -1(34), 0(33), -1(31), _104(19), _72(16), _109(11), -1(7)>
  obuf ={v} {CLOBBER};
  unused ={v} {CLOBBER};
  unusedTmp ={v} {CLOBBER};
  bzerr ={v} {CLOBBER};
  nUnused ={v} {CLOBBER};
  return _34;

}



;; Function writeFileMetaData(char const*) (_Z17writeFileMetaDataPKc, funcdef_no=2001, decl_uid=39038, cgraph_uid=741, symbol_order=789)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L11>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L11>}


Removing basic block 14
Removing unreachable region 1
Merging blocks 3 and 4
Merging blocks 6 and 7
Merging blocks 9 and 10
Merging blocks 9 and 11
writeFileMetaData(char const*) (const char * fileName)
{
  struct utimbuf uTimBuf;
  int ret;
  long int _1;
  long int _2;
  unsigned int _3;
  unsigned int _6;
  unsigned int _7;
  unsigned int _9;
  int _10;
  struct ErrorContext * _26;
  struct ErrorContext * _33;
  struct ErrorContext * _37;

  <bb 2> [0.00%]:
  _1 = fileMetaData.st_atim.tv_sec;
  uTimBuf.actime = _1;
  _2 = fileMetaData.st_mtim.tv_sec;
  uTimBuf.modtime = _2;
  _3 = fileMetaData.st_mode;
  ret_20 = chmod (fileName_18(D), _3);
  if (ret_20 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  _37 = pbzip2::ErrorContext::getInstance ();
  pbzip2::ErrorContext::saveError (_37);
  goto <bb 9>; [0.00%]

  <bb 4> [0.00%]:
  ret_22 = utime (fileName_18(D), &uTimBuf);
  if (ret_22 != 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 5> [0.00%]:
  _33 = pbzip2::ErrorContext::getInstance ();
  pbzip2::ErrorContext::saveError (_33);
  goto <bb 9>; [0.00%]

  <bb 6> [0.00%]:
  _6 = fileMetaData.st_gid;
  _7 = fileMetaData.st_uid;
  ret_24 = chown (fileName_18(D), _7, _6);
  if (ret_24 != 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 9>; [0.00%]

  <bb 7> [0.00%]:
  _26 = pbzip2::ErrorContext::getInstance ();
  pbzip2::ErrorContext::saveError (_26);
  _9 = geteuid ();
  if (_9 == 0)
    goto <bb 9>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 8> [0.00%]:

  <bb 9> [0.00%]:
  # _10 = PHI <ret_20(3), ret_22(5), ret_24(7), 0(8), 0(6)>
  uTimBuf ={v} {CLOBBER};
  return _10;

}



;; Function std::vector<outBuff, std::allocator<outBuff> >::operator[](unsigned long) (_ZNSt6vectorI7outBuffSaIS0_EEixEm, funcdef_no=2255, decl_uid=38066, cgraph_uid=995, symbol_order=1043)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::vector<outBuff, std::allocator<outBuff> >::operator[](unsigned long) (struct vector * const this, size_type __n)
{
  struct outBuff * _1;
  long unsigned int _2;
  struct value_type & _6;

  <bb 2> [0.00%]:
  _1 = this_4(D)->D.38528._M_impl._M_start;
  _2 = __n_5(D) * 40;
  _6 = _1 + _2;
  return _6;

}



;; Function consumer_decompress (consumer_decompress, funcdef_no=1983, decl_uid=39090, cgraph_uid=723, symbol_order=771)

Before removal of unreachable regions:
Eh tree:
   5 must_not_throw
   1 cleanup land:{1,<L71>}
     4 must_not_throw
     3 cleanup land:{2,<L70>}
     2 cleanup
Reachable regions: n_bits = 6, set = {1 3 }
Reachable landing pads: n_bits = 3, set = {1 2 }
Removing unreachable region 2
Removing unreachable region 4
Removing unreachable region 5


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L71>}
     3 cleanup land:{2,<L70>}


Removing basic block 69
Removing basic block 68
Removing unreachable region 1
Removing unreachable region 3
Merging blocks 4 and 5
Merging blocks 9 and 24
Merging blocks 11 and 12
Merging blocks 13 and 14
Merging blocks 16 and 18
Merging blocks 28 and 29
Merging blocks 38 and 39
Merging blocks 50 and 51
Merging blocks 55 and 56
Merging blocks 59 and 60
Merging blocks 61 and 62
Merging blocks 9 and 25
Merging blocks 13 and 15
Merging blocks 16 and 19
consumer_decompress (void * q)
{
  bool isLast;
  bool isLast;
  bool D.48270;
  int ret;
  int D.48265;
  int ret;
  int D.48263;
  struct outBuff * nextOutBlock;
  bool isLast;
  unsigned int len;
  struct outBuff * addret;
  unsigned int availIn;
  int bzret;
  struct bz_stream strm;
  int errState;
  unsigned int processedIn;
  int outSequenceNumber;
  struct outBuff * prevOutBlockInSequence;
  unsigned int outSize;
  char * DecompressedData;
  struct outBuff * lastFileData;
  struct outBuff * fileData;
  struct queue * fifo;
  struct outBuff D.39440;
  union pthread_mutex_t * _1;
  struct outBuff * fileData.127_2;
  union pthread_mutex_t * _4;
  int _5;
  int _6;
  int _7;
  union pthread_mutex_t * _10;
  int _13;
  int _15;
  union pthread_mutex_t * _16;
  union pthread_cond_t * _17;
  union pthread_cond_t * _18;
  union pthread_mutex_t * _19;
  struct outBuff * fileData.138_22;
  int _24;
  int Verbosity.140_25;
  struct outBuff * fileData.141_26;
  unsigned int _27;
  char * _29;
  unsigned int _30;
  unsigned int _31;
  unsigned int _32;
  unsigned int _33;
  unsigned int _34;
  struct outBuff * fileData.144_35;
  int _37;
  struct outBuff * fileData.148_41;
  int _42;
  struct outBuff * fileData.150_44;
  int _45;
  struct outBuff * fileData.151_46;
  bool _47;
  unsigned int errState.152_48;
  bool _49;
  bool _50;
  struct outBuff * fileData.153_51;
  int iftmp.149_74;
  int _109;
  int _116;
  int _139;
  int _155;
  struct outBuff * _169;
  void * _175;
  struct outBuff * _181;
  int _191;
  int _194;
  bool _213;
  char * _217;

  <bb 2> [0.00%]:
  fileData = 0B;
  strm.bzalloc = 0B;
  strm.bzfree = 0B;
  strm.opaque = 0B;

  <bb 3> [0.00%]:
  # DecompressedData_53 = PHI <0B(2), DecompressedData_54(52)>
  # prevOutBlockInSequence_56 = PHI <0B(2), prevOutBlockInSequence_58(52)>
  # outSequenceNumber_59 = PHI <-1(2), outSequenceNumber_62(52)>
  # processedIn_63 = PHI <0(2), processedIn_64(52)>
  # lastFileData_247 = PHI <0B(2), fileData.138_22(52)>
  _1 = MEM[(struct queue *)q_93(D)].mut;
  safe_mutex_lock (_1);

  <bb 4> [0.00%]:
  fileData.127_2 = fileData;
  _109 = consumerDecompressCheckInterrupt (fileData.127_2);
  if (_109 != 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 5> [0.00%]:
  _4 = MEM[(struct queue *)q_93(D)].mut;
  safe_mutex_unlock (_4);
  goto <bb 53>; [0.00%]

  <bb 6> [0.00%]:
  _5 = MEM[(struct queue *)q_93(D)].empty;
  if (_5 == 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 9>; [0.00%]

  <bb 7> [0.00%]:
  _6 = queue::remove (q_93(D), &fileData);
  if (_6 == 1)
    goto <bb 8>; [0.00%]
  else
    goto <bb 9>; [0.00%]

  <bb 8> [0.00%]:
  _18 = MEM[(struct queue *)q_93(D)].notFull;
  safe_cond_signal (_18);
  _19 = MEM[(struct queue *)q_93(D)].mut;
  safe_mutex_unlock (_19);
  if (lastFileData_247 != 0B)
    goto <bb 18>; [0.00%]
  else
    goto <bb 19>; [0.00%]

  <bb 9> [0.00%]:
  _7 = MEM[(struct queue *)q_93(D)].empty;
  if (_7 != 0)
    goto <bb 10>; [0.00%]
  else
    goto <bb 13>; [0.00%]

  <bb 10> [0.00%]:
  _116 = syncGetProducerDone ();
  if (_116 == 1)
    goto <bb 12>; [0.00%]
  else
    goto <bb 11>; [0.00%]

  <bb 11> [100.00%]:
  safe_mutex_lock (&TerminateFlagMutex);
  ret_161 = terminateFlag;
  safe_mutex_unlock (&TerminateFlagMutex);
  if (ret_161 != 0)
    goto <bb 12>; [0.00%]
  else
    goto <bb 13>; [0.00%]

  <bb 12> [100.00%]:
  _10 = MEM[(struct queue *)q_93(D)].mut;
  pthread_mutex_unlock (_10);
  safe_mutex_lock (&TerminateFlagMutex);
  ret_210 = terminateFlag;
  safe_mutex_unlock (&TerminateFlagMutex);
  if (ret_210 == 0)
    goto <bb 14>; [0.00%]
  else
    goto <bb 16>; [0.00%]

  <bb 13> [0.00%]:
  _16 = MEM[(struct queue *)q_93(D)].mut;
  _17 = MEM[(struct queue *)q_93(D)].notEmpty;
  safe_cond_wait (_17, _16);
  goto <bb 4>; [0.00%]

  <bb 14> [0.00%]:
  if (outSequenceNumber_59 != -1)
    goto <bb 15>; [0.00%]
  else
    goto <bb 16>; [0.00%]

  <bb 15> [0.00%]:
  _13 = lastFileData_247->sequenceNumber;
  _15 = lastFileData_247->blockNumber;
  handle_error (1, -1, "pbzip2: *ERROR on decompress - premature end of archive stream (block=%d; seq=%d; outseq=%d)!\n", _15, _13, outSequenceNumber_59);

  <bb 16> [100.00%]:
  if (lastFileData_247 != 0B)
    goto <bb 17>; [57.44%]
  else
    goto <bb 53>; [42.56%]

  <bb 17> [57.44%]:
  operator delete (lastFileData_247, 40);
  goto <bb 53>; [100.00%]

  <bb 18> [0.00%]:
  operator delete (lastFileData_247, 40);

  <bb 19> [0.00%]:
  fileData.138_22 = fileData;
  _24 = fileData.138_22->sequenceNumber;
  if (_24 <= 1)
    goto <bb 20>; [0.00%]
  else
    goto <bb 22>; [0.00%]

  <bb 20> [0.00%]:
  Verbosity.140_25 = Verbosity;
  _139 = BZ2_bzDecompressInit (&strm, Verbosity.140_25, 0);
  if (_139 != 0)
    goto <bb 21>; [0.00%]
  else
    goto <bb 22>; [0.00%]

  <bb 21> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR during BZ2_bzDecompressInit: %d\n", _139);
  goto <bb 53>; [0.00%]

  <bb 22> [0.00%]:
  # bzret_66 = PHI <0(19), _139(20)>
  fileData.141_26 = fileData;
  _27 = fileData.141_26->bufSize;
  strm.avail_in = _27;
  _29 = fileData.141_26->buf;
  strm.next_in = _29;

  <bb 23> [0.00%]:
  # DecompressedData_54 = PHI <DecompressedData_53(22), 0B(45), DecompressedData_55(31)>
  # prevOutBlockInSequence_57 = PHI <prevOutBlockInSequence_56(22), addret_68(45), prevOutBlockInSequence_57(31)>
  # outSequenceNumber_60 = PHI <outSequenceNumber_59(22), outSequenceNumber_61(45), outSequenceNumber_60(31)>
  # processedIn_64 = PHI <processedIn_63(22), processedIn_157(45), processedIn_157(31)>
  # bzret_67 = PHI <bzret_66(22), _155(45), _155(31)>
  if (bzret_67 != 0)
    goto <bb 47>; [0.00%]
  else
    goto <bb 24>; [0.00%]

  <bb 24> [0.00%]:
  _30 = strm.avail_in;
  if (_30 == 0)
    goto <bb 47>; [0.00%]
  else
    goto <bb 25>; [0.00%]

  <bb 25> [0.00%]:
  if (DecompressedData_54 == 0B)
    goto <bb 26>; [0.00%]
  else
    goto <bb 29>; [0.00%]

  <bb 26> [0.00%]:
  DecompressedData_147 = operator new[] (900000, &nothrow);
  if (DecompressedData_147 == 0B)
    goto <bb 27>; [0.00%]
  else
    goto <bb 28>; [0.00%]

  <bb 27> [0.00%]:
  handle_error (1, -1, " *ERROR: Could not allocate memory (DecompressedData)!  Aborting...\n");
  goto <bb 53>; [0.00%]

  <bb 28> [0.00%]:
  strm.avail_out = 900000;
  strm.next_out = DecompressedData_147;

  <bb 29> [0.00%]:
  # DecompressedData_55 = PHI <DecompressedData_54(25), DecompressedData_147(28)>
  # processedIn_65 = PHI <processedIn_64(25), 0(28)>
  availIn_153 = strm.avail_in;
  _155 = BZ2_bzDecompress (&strm);
  _31 = strm.avail_in;
  _32 = availIn_153 - _31;
  processedIn_157 = _32 + processedIn_65;
  if (_155 == 0)
    goto <bb 30>; [0.00%]
  else
    goto <bb 31>; [0.00%]

  <bb 30> [0.00%]:
  _33 = strm.avail_out;
  if (_33 == 0)
    goto <bb 32>; [0.00%]
  else
    goto <bb 31>; [0.00%]

  <bb 31> [0.00%]:
  if (_155 == 4)
    goto <bb 32>; [0.00%]
  else
    goto <bb 23>; [0.00%]

  <bb 32> [100.00%]:
  _34 = strm.avail_out;
  len_159 = 900000 - _34;
  isLast_160 = _155 == 4;
  fileData.144_35 = fileData;
  if (_155 == 4)
    goto <bb 33>; [34.00%]
  else
    goto <bb 36>; [66.00%]

  <bb 33> [34.00%]:
  if (_31 != 0)
    goto <bb 35>; [46.00%]
  else
    goto <bb 34>; [54.00%]

  <bb 34> [18.36%]:
  _213 = MEM[(const struct outBuff *)fileData.144_35].isLastInSequence;
  if (_213 != 0)
    goto <bb 36>; [54.00%]
  else
    goto <bb 35>; [46.00%]

  <bb 35> [0.00%]:
  _37 = fileData.144_35->blockNumber;
  syncSetLastGoodBlock (_37, _37);

  <bb 36> [0.00%]:
  if (outSequenceNumber_60 > 0)
    goto <bb 37>; [0.00%]
  else
    goto <bb 42>; [0.00%]

  <bb 37> [0.00%]:
  outSequenceNumber_173 = outSequenceNumber_60 + 1;
  _175 = operator new (40, &nothrow);
  if (_175 != 0B)
    goto <bb 38>; [0.00%]
  else
    goto <bb 39>; [0.00%]

  <bb 38> [100.00%]:
  fileData.148_41 = fileData;
  _42 = fileData.148_41->blockNumber;
  MEM[(struct  &)_175] ={v} {CLOBBER};
  MEM[(struct outBuff *)_175].buf = DecompressedData_55;
  MEM[(struct outBuff *)_175].bufSize = len_159;
  MEM[(struct outBuff *)_175].blockNumber = _42;
  MEM[(struct outBuff *)_175].sequenceNumber = outSequenceNumber_173;
  MEM[(struct outBuff *)_175].inSize = processedIn_157;
  MEM[(struct outBuff *)_175].isLastInSequence = isLast_160;
  MEM[(struct outBuff *)_175].next = 0B;

  <bb 39> [0.00%]:
  if (_175 == 0B)
    goto <bb 40>; [0.00%]
  else
    goto <bb 41>; [0.00%]

  <bb 40> [0.00%]:
  BZ2_bzDecompressEnd (&strm);
  handle_error (1, -1, " *ERROR: Could not allocate memory (nextOutBlock)!  Aborting...\n");
  goto <bb 53>; [0.00%]

  <bb 41> [0.00%]:
  _181 = outputBufferSeqAddNext (prevOutBlockInSequence_57, _175);
  goto <bb 45>; [0.00%]

  <bb 42> [0.00%]:
  if (_155 == 0)
    goto <bb 44>; [0.00%]
  else
    goto <bb 43>; [0.00%]

  <bb 43> [0.00%]:

  <bb 44> [100.00%]:
  # iftmp.149_74 = PHI <1(42), 0(43)>
  fileData.150_44 = fileData;
  _45 = fileData.150_44->blockNumber;
  MEM[(struct  &)&D.39440] ={v} {CLOBBER};
  D.39440.buf = DecompressedData_55;
  D.39440.bufSize = len_159;
  D.39440.blockNumber = _45;
  D.39440.sequenceNumber = iftmp.149_74;
  D.39440.inSize = processedIn_157;
  D.39440.isLastInSequence = isLast_160;
  D.39440.next = 0B;
  _169 = outputBufferAdd (&D.39440, "consumer_decompress");
  D.39440 ={v} {CLOBBER};

  <bb 45> [0.00%]:
  # outSequenceNumber_61 = PHI <outSequenceNumber_173(41), iftmp.149_74(44)>
  # addret_68 = PHI <_181(41), _169(44)>
  if (addret_68 == 0B)
    goto <bb 46>; [0.00%]
  else
    goto <bb 23>; [0.00%]

  <bb 46> [0.00%]:
  BZ2_bzDecompressEnd (&strm);
  goto <bb 53>; [0.00%]

  <bb 47> [0.00%]:
  fileData.151_46 = fileData;
  _191 = decompressErrCheck (bzret_67, fileData.151_46, outSequenceNumber_60, &strm);
  if (bzret_67 == 4)
    goto <bb 48>; [0.00%]
  else
    goto <bb 50>; [0.00%]

  <bb 48> [0.00%]:
  _194 = BZ2_bzDecompressEnd (&strm);
  _47 = _194 != 0;
  errState.152_48 = (unsigned int) _191;
  _49 = errState.152_48 <= 1;
  _50 = _47 & _49;
  if (_50 != 0)
    goto <bb 49>; [0.00%]
  else
    goto <bb 50>; [0.00%]

  <bb 49> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR during BZ2_bzDecompressEnd: %d\n", _194);
  goto <bb 53>; [0.00%]

  <bb 50> [100.00%]:
  # prevOutBlockInSequence_58 = PHI <prevOutBlockInSequence_57(47), 0B(48)>
  # outSequenceNumber_62 = PHI <outSequenceNumber_60(47), -1(48)>
  fileData.153_51 = fileData;
  _217 = MEM[(char * &)fileData.153_51];
  if (_217 != 0B)
    goto <bb 51>; [57.44%]
  else
    goto <bb 52>; [42.56%]

  <bb 51> [57.44%]:
  operator delete[] (_217);
  MEM[(char * &)fileData.153_51] = 0B;

  <bb 52> [0.00%]:
  if (_191 != 0)
    goto <bb 53>; [0.00%]
  else
    goto <bb 3>; [0.00%]

  <bb 53> [0.00%]:
  fileData ={v} {CLOBBER};
  strm ={v} {CLOBBER};
  return 0B;

}



;; Function consumer (consumer, funcdef_no=1989, decl_uid=39094, cgraph_uid=729, symbol_order=777)

Before removal of unreachable regions:
Eh tree:
   4 must_not_throw
   1 cleanup land:{2,<L28>}
     3 must_not_throw
     2 cleanup land:{1,<L27>}
Reachable regions: n_bits = 5, set = {1 2 }
Reachable landing pads: n_bits = 3, set = {1 2 }
Removing unreachable region 3
Removing unreachable region 4


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{2,<L28>}
     2 cleanup land:{1,<L27>}


Removing unreachable region 2
Merging blocks 30 and 31
consumer (void * q)
{
  int ret;
  int D.48292;
  int ret;
  int D.48290;
  struct outBuff outBlock;
  int ret;
  unsigned int outSize;
  char * CompressedData;
  struct outBuff * fileData;
  struct queue * fifo;
  union pthread_mutex_t * _2;
  int _3;
  int _4;
  int _5;
  union pthread_mutex_t * _8;
  union pthread_mutex_t * _9;
  union pthread_cond_t * _10;
  union pthread_cond_t * _11;
  union pthread_mutex_t * _12;
  struct outBuff * fileData.287_13;
  unsigned int _14;
  double _15;
  double _16;
  double _17;
  unsigned int _18;
  int Verbosity.289_20;
  int BWTblockSize.290_21;
  struct outBuff * fileData.291_22;
  unsigned int _23;
  char * _25;
  struct outBuff * fileData.293_26;
  struct outBuff * fileData.294_28;
  unsigned int _29;
  int _31;
  unsigned int outSize.296_32;
  struct outBuff * fileData.298_34;
  int _63;
  sizetype _75;
  int _79;
  struct outBuff * _84;
  char * _103;

  <bb 2> [0.00%]:
  fileData = 0B;
  outSize = 0;

  <bb 3> [100.00%]:
  safe_mutex_lock (&TerminateFlagMutex);

  <bb 4> [100.00%]:
  ret_101 = terminateFlag;
  safe_mutex_unlock (&TerminateFlagMutex);

  <bb 5> [100.00%]:
  if (ret_101 != 0)
    goto <bb 29>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 6> [0.00%]:
  _2 = MEM[(struct queue *)q_52(D)].mut;
  safe_mutex_lock (_2);

  <bb 7> [0.00%]:
  _3 = MEM[(struct queue *)q_52(D)].empty;
  if (_3 == 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 8> [0.00%]:
  _4 = queue::remove (q_52(D), &fileData);
  if (_4 == 1)
    goto <bb 9>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 9> [0.00%]:
  _11 = MEM[(struct queue *)q_52(D)].notFull;
  safe_cond_signal (_11);
  goto <bb 18>; [0.00%]

  <bb 10> [0.00%]:
  _5 = MEM[(struct queue *)q_52(D)].empty;
  if (_5 != 0)
    goto <bb 11>; [0.00%]
  else
    goto <bb 17>; [0.00%]

  <bb 11> [0.00%]:
  _63 = syncGetProducerDone ();

  <bb 12> [0.00%]:
  if (_63 == 1)
    goto <bb 16>; [0.00%]
  else
    goto <bb 13>; [0.00%]

  <bb 13> [100.00%]:
  safe_mutex_lock (&TerminateFlagMutex);

  <bb 14> [100.00%]:
  ret_102 = terminateFlag;
  safe_mutex_unlock (&TerminateFlagMutex);

  <bb 15> [100.00%]:
  if (ret_102 != 0)
    goto <bb 16>; [0.00%]
  else
    goto <bb 17>; [0.00%]

  <bb 16> [0.00%]:
  _8 = MEM[(struct queue *)q_52(D)].mut;
  safe_mutex_unlock (_8);
  goto <bb 29>; [0.00%]

  <bb 17> [0.00%]:
  _9 = MEM[(struct queue *)q_52(D)].mut;
  _10 = MEM[(struct queue *)q_52(D)].notEmpty;
  safe_cond_wait (_10, _9);
  goto <bb 7>; [0.00%]

  <bb 18> [0.00%]:
  _12 = MEM[(struct queue *)q_52(D)].mut;
  safe_mutex_unlock (_12);

  <bb 19> [0.00%]:
  fileData.287_13 = fileData;
  _14 = fileData.287_13->bufSize;
  _15 = (double) _14;
  _16 = _15 * 1.0100000000000000088817841970012523233890533447265625e+0;
  _17 = _16 + 6.0e+2;
  _18 = (unsigned int) _17;
  outSize = _18;
  _75 = (sizetype) _18;
  CompressedData_77 = operator new[] (_75, &nothrow);
  if (CompressedData_77 == 0B)
    goto <bb 20>; [0.00%]
  else
    goto <bb 21>; [0.00%]

  <bb 20> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not allocate memory (CompressedData)!  Aborting...\n");
  goto <bb 29>; [0.00%]

  <bb 21> [0.00%]:
  Verbosity.289_20 = Verbosity;
  BWTblockSize.290_21 = BWTblockSize;
  fileData.291_22 = fileData;
  _23 = fileData.291_22->bufSize;
  _25 = fileData.291_22->buf;
  _79 = BZ2_bzBuffToBuffCompress (CompressedData_77, &outSize, _25, _23, BWTblockSize.290_21, Verbosity.289_20, 30);

  <bb 22> [0.00%]:
  if (_79 != 0)
    goto <bb 23>; [0.00%]
  else
    goto <bb 24>; [0.00%]

  <bb 23> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR during compression: %d!  Aborting...\n", _79);
  goto <bb 29>; [0.00%]

  <bb 24> [100.00%]:
  fileData.293_26 = fileData;
  _103 = MEM[(char * &)fileData.293_26];
  if (_103 != 0B)
    goto <bb 25>; [57.44%]
  else
    goto <bb 26>; [42.56%]

  <bb 25> [57.44%]:
  operator delete[] (_103);
  MEM[(char * &)fileData.293_26] = 0B;

  <bb 26> [100.00%]:
  fileData.294_28 = fileData;
  _29 = fileData.294_28->bufSize;
  _31 = fileData.294_28->blockNumber;
  outSize.296_32 = outSize;
  MEM[(struct  &)&outBlock] ={v} {CLOBBER};
  outBlock.buf = CompressedData_77;
  outBlock.bufSize = outSize.296_32;
  outBlock.blockNumber = _31;
  outBlock.sequenceNumber = 0;
  outBlock.inSize = _29;
  outBlock.isLastInSequence = 1;
  outBlock.next = 0B;
  _84 = outputBufferAdd (&outBlock, "consumer");

  <bb 27> [0.00%]:
  if (_84 == 0B)
    goto <bb 29>; [0.00%]
  else
    goto <bb 28>; [0.00%]

  <bb 28> [0.00%]:
  fileData.298_34 = fileData;
  operator delete (fileData.298_34, 40);
  fileData = 0B;
  outBlock ={v} {CLOBBER};
  goto <bb 3>; [0.00%]

  <bb 29> [0.00%]:
  outBlock ={v} {CLOBBER};
  fileData ={v} {CLOBBER};
  outSize ={v} {CLOBBER};
  return 0B;

<L27> [0.00%]:
  outBlock ={v} {CLOBBER};
  fileData ={v} {CLOBBER};
  outSize ={v} {CLOBBER};
  resx 1

}



;; Function std::vector<outBuff, std::allocator<outBuff> >::size() const (_ZNKSt6vectorI7outBuffSaIS0_EE4sizeEv, funcdef_no=2257, decl_uid=38046, cgraph_uid=997, symbol_order=1045)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::vector<outBuff, std::allocator<outBuff> >::size() const (const struct vector * const this)
{
  struct outBuff * _1;
  long int _2;
  struct outBuff * _3;
  long int _4;
  long int _5;
  long int _6;
  size_type _9;

  <bb 2> [0.00%]:
  _1 = this_8(D)->D.38528._M_impl._M_finish;
  _2 = (long int) _1;
  _3 = this_8(D)->D.38528._M_impl._M_start;
  _4 = (long int) _3;
  _5 = _2 - _4;
  _6 = _5 /[ex] 40;
  _9 = (size_type) _6;
  return _9;

}



;; Function std::move<std::allocator<char>&>(std::allocator<char>&)std::remove_reference<std::allocator<char>&>::type&& (_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=2281, decl_uid=40904, cgraph_uid=1021, symbol_order=1069)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::move<std::allocator<char>&>(std::allocator<char>&)std::remove_reference<std::allocator<char>&>::type&& (struct allocator & __t)
{
  <bb 2> [0.00%]:
  return __t_1(D);

}



;; Function __gnu_cxx::new_allocator<char>::new_allocator() (_ZN9__gnu_cxx13new_allocatorIcEC2Ev, funcdef_no=2309, decl_uid=11669, cgraph_uid=1049, symbol_order=1097)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


__gnu_cxx::new_allocator<char>::new_allocator() (struct new_allocator * const this)
{
  <bb 2> [0.00%]:
  return;

}



;; Function std::allocator<char>::allocator() (_ZNSaIcEC2Ev, funcdef_no=2186, decl_uid=11734, cgraph_uid=926, symbol_order=974)

Before removal of unreachable regions:
Eh tree:
   1 allowed_exceptions filter :0 types:
     2 cleanup
Reachable regions: n_bits = 3, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1
Removing unreachable region 2


After removal of unreachable regions:


std::allocator<char>::allocator() (struct allocator * const this)
{
  void * _1;

  <bb 2> [100.00%]:
  return;

}



;; Function __gnu_cxx::new_allocator<char>::~new_allocator() (_ZN9__gnu_cxx13new_allocatorIcED2Ev, funcdef_no=2312, decl_uid=11674, cgraph_uid=1052, symbol_order=1100)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


__gnu_cxx::new_allocator<char>::~new_allocator() (struct new_allocator * const this)
{
  <bb 2> [0.00%]:
  return;

}



;; Function std::allocator<char>::~allocator() (_ZNSaIcED2Ev, funcdef_no=2189, decl_uid=11739, cgraph_uid=929, symbol_order=977)

Before removal of unreachable regions:
Eh tree:
   1 allowed_exceptions filter :0 types:
     2 cleanup
Reachable regions: n_bits = 3, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1
Removing unreachable region 2


After removal of unreachable regions:


std::allocator<char>::~allocator() (struct allocator * const this)
{
  void * _1;

  <bb 2> [100.00%]:
  return;

}



;; Function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev, funcdef_no=2085, decl_uid=19763, cgraph_uid=824, symbol_order=872)

Before removal of unreachable regions:
Eh tree:
   1 cleanup
     2 cleanup
Reachable regions: n_bits = 3, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1
Removing unreachable region 2


After removal of unreachable regions:


std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() (struct _Alloc_hider * const this)
{
  <bb 2> [100.00%]:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}



;; Function std::vector<outBuff, std::allocator<outBuff> >::capacity() const (_ZNKSt6vectorI7outBuffSaIS0_EE8capacityEv, funcdef_no=2461, decl_uid=38059, cgraph_uid=1201, symbol_order=1249)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::vector<outBuff, std::allocator<outBuff> >::capacity() const (const struct vector * const this)
{
  struct outBuff * _1;
  long int _2;
  struct outBuff * _3;
  long int _4;
  long int _5;
  long int _6;
  size_type _9;

  <bb 2> [0.00%]:
  _1 = this_8(D)->D.38528._M_impl._M_end_of_storage;
  _2 = (long int) _1;
  _3 = this_8(D)->D.38528._M_impl._M_start;
  _4 = (long int) _3;
  _5 = _2 - _4;
  _6 = _5 /[ex] 40;
  _9 = (size_type) _6;
  return _9;

}



;; Function std::_Vector_base<outBuff, std::allocator<outBuff> >::_M_get_Tp_allocator() (_ZNSt12_Vector_baseI7outBuffSaIS0_EE19_M_get_Tp_allocatorEv, funcdef_no=2462, decl_uid=37590, cgraph_uid=1202, symbol_order=1250)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::_Vector_base<outBuff, std::allocator<outBuff> >::_M_get_Tp_allocator() (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & _2;

  <bb 2> [0.00%]:
  _2 = &this_1(D)->_M_impl;
  return _2;

}



;; Function std::__alloc_on_move<std::allocator<char> >(std::allocator<char>&, std::allocator<char>&)void (_ZSt15__alloc_on_moveISaIcEEvRT_S2_, funcdef_no=2399, decl_uid=41813, cgraph_uid=1139, symbol_order=1187)

Before removal of unreachable regions:
Eh tree:
   1 cleanup
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::__alloc_on_move<std::allocator<char> >(std::allocator<char>&, std::allocator<char>&)void (struct allocator & __one, struct allocator & __two)
{
  struct true_type D.48334;
  struct integral_constant D.47265;

  <bb 2> [100.00%]:
  return;

}



;; Function std::__addressof<char>(char&)char* (_ZSt11__addressofIcEPT_RS0_, funcdef_no=2483, decl_uid=43606, cgraph_uid=1222, symbol_order=1270)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::__addressof<char>(char&)char* (char & __r)
{
  <bb 2> [0.00%]:
  return __r_1(D);

}



;; Function std::addressof<char>(char&)char* (_ZSt9addressofIcEPT_RS0_, funcdef_no=2482, decl_uid=42533, cgraph_uid=1223, symbol_order=1271)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::addressof<char>(char&)char* (char & __r)
{
  char * D.48338;

  <bb 2> [100.00%]:
  return __r_2(D);

}



;; Function std::pointer_traits<char*>::pointer_to(char&) (_ZNSt14pointer_traitsIPcE10pointer_toERc, funcdef_no=2411, decl_uid=41896, cgraph_uid=1151, symbol_order=1199)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::pointer_traits<char*>::pointer_to(char&) (__make_not_void & __r)
{
  char * D.48341;

  <bb 2> [100.00%]:
  return __r_2(D);

}



;; Function __gnu_cxx::new_allocator<char>::new_allocator(__gnu_cxx::new_allocator<char> const&) (_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_, funcdef_no=2485, decl_uid=11664, cgraph_uid=1225, symbol_order=1273)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


__gnu_cxx::new_allocator<char>::new_allocator(__gnu_cxx::new_allocator<char> const&) (struct new_allocator * const this, const struct new_allocator & D.11666)
{
  <bb 2> [0.00%]:
  return;

}



;; Function std::allocator<char>::allocator(std::allocator<char> const&) (_ZNSaIcEC2ERKS_, funcdef_no=2413, decl_uid=11729, cgraph_uid=1153, symbol_order=1201)

Before removal of unreachable regions:
Eh tree:
   1 allowed_exceptions filter :0 types:
     2 cleanup
Reachable regions: n_bits = 3, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1
Removing unreachable region 2


After removal of unreachable regions:


std::allocator<char>::allocator(std::allocator<char> const&) (struct allocator * const this, const struct allocator & __a)
{
  void * _1;

  <bb 2> [100.00%]:
  return;

}



;; Function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_, funcdef_no=2283, decl_uid=18722, cgraph_uid=1023, symbol_order=1071)

Before removal of unreachable regions:
Eh tree:
   1 cleanup
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) (struct _Alloc_hider * const this, char * __dat, struct allocator & __a)
{
  struct type & D.48353;

  <bb 2> [100.00%]:
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  this_3(D)->_M_p = __dat_8(D);
  return;

}



;; Function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev, funcdef_no=2259, decl_uid=19661, cgraph_uid=999, symbol_order=1047)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string() (struct basic_string * const this)
{
  char * D.48362;
  struct _Alloc_hider * _3;
  char[16] * _7;

  <bb 2> [100.00%]:
  MEM[(struct  &)this_5(D)] ={v} {CLOBBER};
  _7 = &this_5(D)->D.18739._M_local_buf;
  MEM[(struct  &)this_5(D)] ={v} {CLOBBER};
  MEM[(struct _Alloc_hider *)this_5(D)]._M_p = _7;
  this_5(D)->_M_string_length = 0;
  MEM[(char_type &)_7] = 0;
  return;

}



;; Function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_, funcdef_no=2315, decl_uid=18730, cgraph_uid=1055, symbol_order=1103)

Before removal of unreachable regions:
Eh tree:
   1 cleanup
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) (struct _Alloc_hider * const this, char * __dat, const struct allocator & __a)
{
  <bb 2> [100.00%]:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->_M_p = __dat_6(D);
  return;

}



;; Function __gnu_cxx::new_allocator<outBuff>::~new_allocator() (_ZN9__gnu_cxx13new_allocatorI7outBuffED2Ev, funcdef_no=2526, decl_uid=37724, cgraph_uid=1266, symbol_order=1314)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


__gnu_cxx::new_allocator<outBuff>::~new_allocator() (struct new_allocator * const this)
{
  <bb 2> [0.00%]:
  return;

}



;; Function std::allocator<outBuff>::~allocator() (_ZNSaI7outBuffED2Ev, funcdef_no=2458, decl_uid=37789, cgraph_uid=1198, symbol_order=1246)

Before removal of unreachable regions:
Eh tree:
   1 allowed_exceptions filter :0 types:
     2 cleanup
Reachable regions: n_bits = 3, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1
Removing unreachable region 2


After removal of unreachable regions:


std::allocator<outBuff>::~allocator() (struct allocator * const this)
{
  void * _1;

  <bb 2> [100.00%]:
  return;

}



;; Function std::_Vector_base<outBuff, std::allocator<outBuff> >::_Vector_impl::~_Vector_impl() (_ZNSt12_Vector_baseI7outBuffSaIS0_EE12_Vector_implD2Ev, funcdef_no=2389, decl_uid=41775, cgraph_uid=1128, symbol_order=1176)

Before removal of unreachable regions:
Eh tree:
   1 cleanup
     2 cleanup
Reachable regions: n_bits = 3, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1
Removing unreachable region 2


After removal of unreachable regions:


std::_Vector_base<outBuff, std::allocator<outBuff> >::_Vector_impl::~_Vector_impl() (struct _Vector_impl * const this)
{
  <bb 2> [100.00%]:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}



;; Function std::move<outBuff*&>(outBuff*&)std::remove_reference<outBuff*&>::type&& (_ZSt4moveIRP7outBuffEONSt16remove_referenceIT_E4typeEOS4_, funcdef_no=2534, decl_uid=44606, cgraph_uid=1273, symbol_order=1321)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::move<outBuff*&>(outBuff*&)std::remove_reference<outBuff*&>::type&& (struct outBuff * & __t)
{
  <bb 2> [0.00%]:
  return __t_1(D);

}



;; Function std::swap<outBuff*>(outBuff*&, outBuff*&)std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<outBuff*> >, std::is_move_constructible<outBuff*>, std::is_move_assignable<outBuff*> >::value, void>::type (_ZSt4swapIP7outBuffENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_, funcdef_no=2533, decl_uid=43314, cgraph_uid=1274, symbol_order=1322)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::swap<outBuff*>(outBuff*&, outBuff*&)std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<outBuff*> >, std::is_move_constructible<outBuff*>, std::is_move_assignable<outBuff*> >::value, void>::type (struct outBuff * & __a, struct outBuff * & __b)
{
  struct outBuff * & D.48379;
  struct outBuff * & D.48377;
  struct outBuff * & D.48375;
  struct outBuff * __tmp;
  struct outBuff * _2;
  struct outBuff * _4;

  <bb 2> [100.00%]:
  _2 = MEM[(struct outBuff * &)__a_8(D)];
  _4 = MEM[(struct outBuff * &)__b_11(D)];
  *__a_8(D) = _4;
  *__b_11(D) = _2;
  return;

}



;; Function std::_Vector_base<outBuff, std::allocator<outBuff> >::_Vector_impl::_M_swap_data(std::_Vector_base<outBuff, std::allocator<outBuff> >::_Vector_impl&) (_ZNSt12_Vector_baseI7outBuffSaIS0_EE12_Vector_impl12_M_swap_dataERS3_, funcdef_no=2469, decl_uid=37804, cgraph_uid=1209, symbol_order=1257)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::_Vector_base<outBuff, std::allocator<outBuff> >::_Vector_impl::_M_swap_data(std::_Vector_base<outBuff, std::allocator<outBuff> >::_Vector_impl&) (struct _Vector_impl * const this, struct _Vector_impl & __x)
{
  struct outBuff * _13;
  struct outBuff * _14;
  struct outBuff * _15;
  struct outBuff * _16;
  struct outBuff * _17;
  struct outBuff * _18;

  <bb 2> [100.00%]:
  _17 = MEM[(struct outBuff * &)this_8(D)];
  _18 = MEM[(struct outBuff * &)__x_7(D)];
  MEM[(struct outBuff * &)this_8(D)] = _18;
  MEM[(struct outBuff * &)__x_7(D)] = _17;
  _15 = MEM[(struct outBuff * &)this_8(D) + 8];
  _16 = MEM[(struct outBuff * &)__x_7(D) + 8];
  MEM[(struct outBuff * &)this_8(D) + 8] = _16;
  MEM[(struct outBuff * &)__x_7(D) + 8] = _15;
  _13 = MEM[(struct outBuff * &)this_8(D) + 16];
  _14 = MEM[(struct outBuff * &)__x_7(D) + 16];
  MEM[(struct outBuff * &)this_8(D) + 16] = _14;
  MEM[(struct outBuff * &)__x_7(D) + 16] = _13;
  return;

}



;; Function __gnu_cxx::__normal_iterator<outBuff*, std::vector<outBuff, std::allocator<outBuff> > >::__normal_iterator(outBuff* const&) (_ZN9__gnu_cxx17__normal_iteratorIP7outBuffSt6vectorIS1_SaIS1_EEEC2ERKS2_, funcdef_no=2536, decl_uid=42399, cgraph_uid=1276, symbol_order=1324)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


__gnu_cxx::__normal_iterator<outBuff*, std::vector<outBuff, std::allocator<outBuff> > >::__normal_iterator(outBuff* const&) (struct __normal_iterator * const this, struct outBuff * const & __i)
{
  struct outBuff * _1;

  <bb 2> [0.00%]:
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  _1 = *__i_5(D);
  this_3(D)->_M_current = _1;
  return;

}



;; Function std::vector<outBuff, std::allocator<outBuff> >::end() (_ZNSt6vectorI7outBuffSaIS0_EE3endEv, funcdef_no=2471, decl_uid=38026, cgraph_uid=1211, symbol_order=1259)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::vector<outBuff, std::allocator<outBuff> >::end() (struct vector * const this)
{
  struct outBuff * SR.867;
  struct iterator D.43354;
  struct iterator D.46405;
  struct outBuff * _7;

  <bb 2> [100.00%]:
  _7 = MEM[(struct outBuff * const &)this_2(D) + 8];
  MEM[(struct __normal_iterator *)&D.46405] = _7;
  return D.46405;

}



;; Function std::vector<outBuff, std::allocator<outBuff> >::begin() (_ZNSt6vectorI7outBuffSaIS0_EE5beginEv, funcdef_no=2470, decl_uid=38022, cgraph_uid=1210, symbol_order=1258)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::vector<outBuff, std::allocator<outBuff> >::begin() (struct vector * const this)
{
  struct outBuff * SR.869;
  struct iterator D.43352;
  struct iterator D.46408;
  struct outBuff * _7;

  <bb 2> [100.00%]:
  _7 = MEM[(struct outBuff * const &)this_2(D)];
  MEM[(struct __normal_iterator *)&D.46408] = _7;
  return D.46408;

}



;; Function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long) (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm, funcdef_no=2398, decl_uid=18769, cgraph_uid=1138, symbol_order=1186)

Before removal of unreachable regions:
Eh tree:
   1 allowed_exceptions land:{1,<L0>} filter :0 types:
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 2, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long) (struct basic_string * const this, size_type __size)
{
  char * D.48419;
  struct allocator_type & D.48417;
  char * _7;

  <bb 2> [100.00%]:
  _7 = MEM[(const struct basic_string *)this_6(D)]._M_dataplus._M_p;
  operator delete (_7);
  return;

}



;; Function std::__addressof<char const>(char const&)char const* (_ZSt11__addressofIKcEPT_RS1_, funcdef_no=2555, decl_uid=45000, cgraph_uid=1294, symbol_order=1342)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::__addressof<char const>(char const&)char const* (const char & __r)
{
  <bb 2> [0.00%]:
  return __r_1(D);

}



;; Function std::addressof<char const>(char const&)char const* (_ZSt9addressofIKcEPT_RS1_, funcdef_no=2554, decl_uid=43613, cgraph_uid=1295, symbol_order=1343)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::addressof<char const>(char const&)char const* (const char & __r)
{
  const char * D.48425;

  <bb 2> [100.00%]:
  return __r_2(D);

}



;; Function std::pointer_traits<char const*>::pointer_to(char const&) (_ZNSt14pointer_traitsIPKcE10pointer_toERS0_, funcdef_no=2487, decl_uid=42578, cgraph_uid=1227, symbol_order=1275)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::pointer_traits<char const*>::pointer_to(char const&) (const __make_not_void & __r)
{
  const char * D.48428;

  <bb 2> [100.00%]:
  return __r_2(D);

}



;; Function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_, funcdef_no=2264, decl_uid=19014, cgraph_uid=1004, symbol_order=1052)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) (struct basic_string * const this, struct basic_string & __str)
{
  char * D.48486;
  size_type D.48482;
  char * D.48476;
  bool D.48474;
  size_type D.48472;
  size_type D.48468;
  char * D.48466;
  char * D.48464;
  size_type D.48459;
  struct allocator_type & D.48457;
  struct allocator_type & D.48455;
  bool D.48449;
  char * D.48445;
  bool D.48439;
  size_type __capacity;
  char * __data;
  long unsigned int _18;
  char _29;
  long unsigned int _34;
  const char[16] * _51;
  char * _54;
  const char[16] * _60;
  char * _62;
  char * _74;
  char * _75;
  long unsigned int _76;
  long unsigned int _81;
  char * _83;

  <bb 2> [100.00%]:
  _54 = MEM[(const struct basic_string *)this_23(D)]._M_dataplus._M_p;
  _51 = &MEM[(const struct basic_string *)this_23(D)].D.18739._M_local_buf;
  _62 = MEM[(const struct basic_string *)__str_33(D)]._M_dataplus._M_p;
  _60 = &MEM[(const struct basic_string *)__str_33(D)].D.18739._M_local_buf;
  if (_60 == _62)
    goto <bb 3>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 3> [100.00%]:
  _34 = MEM[(const struct basic_string *)__str_33(D)]._M_string_length;
  if (_34 != 0)
    goto <bb 4>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 4> [100.00%]:
  if (_34 == 1)
    goto <bb 5>; [30.50%]
  else
    goto <bb 6>; [69.50%]

  <bb 5> [30.50%]:
  _29 = MEM[(const char_type &)_62];
  MEM[(char_type &)_54] = _29;
  goto <bb 7>; [100.00%]

  <bb 6> [25.46%]:
  memcpy (_54, _62, _34);

  <bb 7> [100.00%]:
  _76 = MEM[(const struct basic_string *)__str_33(D)]._M_string_length;
  this_23(D)->_M_string_length = _76;
  _74 = MEM[(const struct basic_string *)this_23(D)]._M_dataplus._M_p;
  _75 = _74 + _76;
  MEM[(char_type &)_75] = 0;
  goto <bb 13>; [100.00%]

  <bb 8> [100.00%]:
  if (_51 != _54)
    goto <bb 9>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 9> [100.00%]:
  __capacity_50 = this_23(D)->D.18739._M_allocated_capacity;

  <bb 10> [100.00%]:
  # __data_15 = PHI <0B(8), _54(9)>
  # __capacity_2 = PHI <__capacity_46(D)(8), __capacity_50(9)>
  this_23(D)->_M_dataplus._M_p = _62;
  _81 = MEM[(const struct basic_string *)__str_33(D)]._M_string_length;
  this_23(D)->_M_string_length = _81;
  _18 = __str_33(D)->D.18739._M_allocated_capacity;
  this_23(D)->D.18739._M_allocated_capacity = _18;
  if (__data_15 != 0B)
    goto <bb 11>; [0.00%]
  else
    goto <bb 12>; [0.00%]

  <bb 11> [100.00%]:
  __str_33(D)->_M_dataplus._M_p = __data_15;
  __str_33(D)->D.18739._M_allocated_capacity = __capacity_2;
  goto <bb 13>; [100.00%]

  <bb 12> [100.00%]:
  __str_33(D)->_M_dataplus._M_p = _60;

  <bb 13> [100.00%]:
  __str_33(D)->_M_string_length = 0;
  _83 = MEM[(const struct basic_string *)__str_33(D)]._M_dataplus._M_p;
  MEM[(char_type &)_83] = 0;
  return this_23(D);

}



;; Function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev, funcdef_no=2087, decl_uid=19666, cgraph_uid=827, symbol_order=875)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() (struct basic_string * const this)
{
  char * _7;
  const char[16] * _8;

  <bb 2> [100.00%]:
  _7 = MEM[(const struct basic_string *)this_3(D)]._M_dataplus._M_p;
  _8 = &MEM[(const struct basic_string *)this_3(D)].D.18739._M_local_buf;
  if (_7 != _8)
    goto <bb 3>; [57.44%]
  else
    goto <bb 4>; [42.56%]

  <bb 3> [57.44%]:
  operator delete (_7);

  <bb 4> [100.00%]:
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function std::distance<char const*>(char const*, char const*)std::iterator_traits<char const*>::difference_type (_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_, funcdef_no=2561, decl_uid=43647, cgraph_uid=1303, symbol_order=1351)

Before removal of unreachable regions:
Eh tree:
   1 cleanup
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::distance<char const*>(char const*, char const*)std::iterator_traits<char const*>::difference_type (const char * __first, const char * __last)
{
  difference_type D.48508;
  struct random_access_iterator_tag D.48507;
  struct random_access_iterator_tag D.47500;
  long int __last.722_4;
  long int __first.723_6;
  long int _7;

  <bb 2> [100.00%]:
  __last.722_4 = (long int) __last_3(D);
  __first.723_6 = (long int) __first_10(D);
  _7 = __last.722_4 - __first.723_6;
  return _7;

}



;; Function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)void (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag, funcdef_no=2496, decl_uid=42757, cgraph_uid=1236, symbol_order=1284)

Before removal of unreachable regions:
Eh tree:
   5 must_not_throw
   1 cleanup land:{1,<L12>}
     4 must_not_throw
     3 cleanup land:{3,<L11>}
     2 try land:{2,<L9>} catch:{lab:<L10>;}
Reachable regions: n_bits = 6, set = {1 }
Reachable landing pads: n_bits = 4, set = {1 }
Removing unreachable region 2
Removing unreachable region 3
Removing unreachable region 4
Removing unreachable region 5


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L12>}


Removing basic block 13
Removing unreachable region 1
Merging blocks 6 and 7
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)void (struct basic_string * const this, const char * __beg, const char * __end, struct forward_iterator_tag D.42761)
{
  char * D.48525;
  difference_type D.48514;
  bool D.48511;
  size_type __dnew;
  long unsigned int _3;
  long unsigned int __dnew.719_6;
  long unsigned int __dnew.720_9;
  long int __first.723_14;
  long int __last.722_19;
  char * _24;
  long int _34;
  char * _35;
  char * _36;
  char _41;
  char * _42;

  <bb 2> [100.00%]:
  if (__beg_13(D) == 0B)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 3> [0.00%]:
  if (__beg_13(D) != __end_15(D))
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  std::__throw_logic_error ("basic_string::_M_construct null not valid");

  <bb 5> [100.00%]:
  __last.722_19 = (long int) __end_15(D);
  __first.723_14 = (long int) __beg_13(D);
  _34 = __last.722_19 - __first.723_14;
  _3 = (long unsigned int) _34;
  __dnew = _3;
  if (_3 > 15)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 6> [100.00%]:
  _24 = std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create (this_22(D), &__dnew, 0);
  this_22(D)->_M_dataplus._M_p = _24;
  __dnew.719_6 = __dnew;
  this_22(D)->D.18739._M_allocated_capacity = __dnew.719_6;

  <bb 7> [100.00%]:
  _42 = MEM[(const struct basic_string *)this_22(D)]._M_dataplus._M_p;
  if (_3 == 1)
    goto <bb 8>; [30.50%]
  else
    goto <bb 9>; [69.50%]

  <bb 8> [30.50%]:
  _41 = MEM[(const char_type &)__beg_13(D)];
  MEM[(char_type &)_42] = _41;
  goto <bb 11>; [100.00%]

  <bb 9> [69.50%]:
  if (_3 == 0)
    goto <bb 11>; [63.36%]
  else
    goto <bb 10>; [36.64%]

  <bb 10> [25.46%]:
  memcpy (_42, __beg_13(D), _3);

  <bb 11> [100.00%]:
  __dnew.720_9 = __dnew;
  this_22(D)->_M_string_length = __dnew.720_9;
  _35 = MEM[(const struct basic_string *)this_22(D)]._M_dataplus._M_p;
  _36 = _35 + __dnew.720_9;
  MEM[(char_type &)_36] = 0;
  __dnew ={v} {CLOBBER};
  return;

}



;; Function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char const*>(char const*, char const*, std::__false_type)void (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type, funcdef_no=2423, decl_uid=42047, cgraph_uid=1163, symbol_order=1211)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L0>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L0>}


Removing basic block 4
Removing unreachable region 1
Merging blocks 2 and 3
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char const*>(char const*, char const*, std::__false_type)void (struct basic_string * const this, const char * __beg, const char * __end, struct __false_type D.42051)
{
  struct forward_iterator_tag D.47477;
  struct _Tag D.42747;

  <bb 2> [0.00%]:
  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*> (this_3(D), __beg_4(D), __end_5(D), D.47477);
  D.42747 ={v} {CLOBBER};
  return;

}



;; Function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*)void (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_, funcdef_no=2317, decl_uid=41494, cgraph_uid=1057, symbol_order=1105)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L0>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L0>}


Removing basic block 4
Removing unreachable region 1
Merging blocks 2 and 3
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*)void (struct basic_string * const this, const char * __beg, const char * __end)
{
  struct forward_iterator_tag D.48533;
  struct __false_type D.48531;
  struct __false_type D.47475;

  <bb 2> [100.00%]:
  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*> (this_2(D), __beg_3(D), __end_4(D), D.48533);
  return;

}



;; Function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_, funcdef_no=2262, decl_uid=19601, cgraph_uid=1002, symbol_order=1050)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L3>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L3>}


Removing basic block 7
Removing unreachable region 1
Merging blocks 5 and 6
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (struct basic_string * const this, const char * __s, const struct allocator & __a)
{
  struct forward_iterator_tag D.48547;
  size_t D.48541;
  char * D.48539;
  const char * iftmp.715_5;
  long unsigned int _10;
  const char * iftmp.715_15;
  char[16] * _16;
  const char * iftmp.715_17;

  <bb 2> [100.00%]:
  MEM[(struct  &)this_8(D)] ={v} {CLOBBER};
  _16 = &this_8(D)->D.18739._M_local_buf;
  MEM[(struct  &)this_8(D)] ={v} {CLOBBER};
  MEM[(struct _Alloc_hider *)this_8(D)]._M_p = _16;
  if (__s_14(D) != 0B)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [100.00%]:
  _10 = strlen (__s_14(D));
  iftmp.715_17 = __s_14(D) + _10;
  goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  iftmp.715_15 = __s_14(D) + 18446744073709551615;

  <bb 5> [100.00%]:
  # iftmp.715_5 = PHI <iftmp.715_17(3), iftmp.715_15(4)>
  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*> (this_8(D), __s_14(D), iftmp.715_5, D.48547);
  return;

}



;; Function __gnu_cxx::new_allocator<outBuff>::new_allocator() (_ZN9__gnu_cxx13new_allocatorI7outBuffEC2Ev, funcdef_no=2591, decl_uid=37719, cgraph_uid=1331, symbol_order=1379)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


__gnu_cxx::new_allocator<outBuff>::new_allocator() (struct new_allocator * const this)
{
  <bb 2> [0.00%]:
  return;

}



;; Function std::allocator<outBuff>::allocator() (_ZNSaI7outBuffEC2Ev, funcdef_no=2523, decl_uid=37784, cgraph_uid=1263, symbol_order=1311)

Before removal of unreachable regions:
Eh tree:
   1 allowed_exceptions filter :0 types:
     2 cleanup
Reachable regions: n_bits = 3, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1
Removing unreachable region 2


After removal of unreachable regions:


std::allocator<outBuff>::allocator() (struct allocator * const this)
{
  void * _1;

  <bb 2> [100.00%]:
  return;

}



;; Function std::_Vector_base<outBuff, std::allocator<outBuff> >::_Vector_impl::_Vector_impl() (_ZNSt12_Vector_baseI7outBuffSaIS0_EE12_Vector_implC2Ev, funcdef_no=2455, decl_uid=37821, cgraph_uid=1195, symbol_order=1243)

Before removal of unreachable regions:
Eh tree:
   1 cleanup
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::_Vector_base<outBuff, std::allocator<outBuff> >::_Vector_impl::_Vector_impl() (struct _Vector_impl * const this)
{
  <bb 2> [100.00%]:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->_M_start = 0B;
  this_2(D)->_M_finish = 0B;
  this_2(D)->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<outBuff, std::allocator<outBuff> >::_Vector_base() (_ZNSt12_Vector_baseI7outBuffSaIS0_EEC2Ev, funcdef_no=2391, decl_uid=37878, cgraph_uid=1131, symbol_order=1179)

Before removal of unreachable regions:
Eh tree:
   1 cleanup
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::_Vector_base<outBuff, std::allocator<outBuff> >::_Vector_base() (struct _Vector_base * const this)
{
  struct _Vector_impl * _2;

  <bb 2> [100.00%]:
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  MEM[(struct _Vector_impl *)this_4(D)]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_4(D)]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_4(D)]._M_end_of_storage = 0B;
  return;

}



;; Function std::vector<outBuff, std::allocator<outBuff> >::vector() (_ZNSt6vectorI7outBuffSaIS0_EEC2Ev, funcdef_no=2251, decl_uid=38520, cgraph_uid=991, symbol_order=1039)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::vector<outBuff, std::allocator<outBuff> >::vector() (struct vector * const this)
{
  struct _Vector_base * _2;

  <bb 2> [100.00%]:
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  MEM[(struct _Vector_impl *)this_4(D)]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_4(D)]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_4(D)]._M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<outBuff, std::allocator<outBuff> >::~_Vector_base() (_ZNSt12_Vector_baseI7outBuffSaIS0_EED2Ev, funcdef_no=2394, decl_uid=37883, cgraph_uid=1134, symbol_order=1182)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::_Vector_base<outBuff, std::allocator<outBuff> >::~_Vector_base() (struct _Vector_base * const this)
{
  struct outBuff * _3;

  <bb 2> [100.00%]:
  _3 = this_11(D)->_M_impl._M_start;
  if (_3 != 0B)
    goto <bb 3>; [57.44%]
  else
    goto <bb 4>; [42.56%]

  <bb 3> [57.44%]:
  operator delete (_3);

  <bb 4> [100.00%]:
  MEM[(struct  &)this_11(D)] ={v} {CLOBBER};
  return;

}



;; Function __gnu_cxx::__normal_iterator<outBuff*, std::vector<outBuff, std::allocator<outBuff> > >::base() const (_ZNK9__gnu_cxx17__normal_iteratorIP7outBuffSt6vectorIS1_SaIS1_EEE4baseEv, funcdef_no=2598, decl_uid=42386, cgraph_uid=1338, symbol_order=1386)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


__gnu_cxx::__normal_iterator<outBuff*, std::vector<outBuff, std::allocator<outBuff> > >::base() const (const struct __normal_iterator * const this)
{
  struct outBuff * const & _2;

  <bb 2> [0.00%]:
  _2 = &this_1(D)->_M_current;
  return _2;

}



;; Function __gnu_cxx::__ops::__iter_comp_iter<char*>(__gnu_cxx::__ops::_Iter_equal_to_iter, char*)__gnu_cxx::__ops::_Iter_equals_iter<char*> (_ZN9__gnu_cxx5__ops16__iter_comp_iterIPcEENS0_17_Iter_equals_iterIT_EENS0_19_Iter_equal_to_iterES4_, funcdef_no=2544, decl_uid=43440, cgraph_uid=1284, symbol_order=1332)

Before removal of unreachable regions:
Eh tree:
   1 cleanup
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


__gnu_cxx::__ops::__iter_comp_iter<char*>(__gnu_cxx::__ops::_Iter_equal_to_iter, char*)__gnu_cxx::__ops::_Iter_equals_iter<char*> (struct _Iter_equal_to_iter D.43441, char * __it)
{
  char * SR.909;
  struct _Iter_equals_iter D.44833;
  struct _Iter_equals_iter D.47331;

  <bb 2> [100.00%]:
  MEM[(struct _Iter_equals_iter *)&D.47331] = __it_2(D);
  return D.47331;

}



;; Function __gnu_cxx::__ops::__iter_comp_iter<unsigned char*>(__gnu_cxx::__ops::_Iter_equal_to_iter, unsigned char*)__gnu_cxx::__ops::_Iter_equals_iter<unsigned char*> (_ZN9__gnu_cxx5__ops16__iter_comp_iterIPhEENS0_17_Iter_equals_iterIT_EENS0_19_Iter_equal_to_iterES4_, funcdef_no=2548, decl_uid=43514, cgraph_uid=1288, symbol_order=1336)

Before removal of unreachable regions:
Eh tree:
   1 cleanup
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


__gnu_cxx::__ops::__iter_comp_iter<unsigned char*>(__gnu_cxx::__ops::_Iter_equal_to_iter, unsigned char*)__gnu_cxx::__ops::_Iter_equals_iter<unsigned char*> (struct _Iter_equal_to_iter D.43515, unsigned char * __it)
{
  unsigned char * SR.912;
  struct _Iter_equals_iter D.44863;
  struct _Iter_equals_iter D.47409;

  <bb 2> [100.00%]:
  MEM[(struct _Iter_equals_iter *)&D.47409] = __it_2(D);
  return D.47409;

}



;; Function std::vector<outBuff, std::allocator<outBuff> >::~vector() (_ZNSt6vectorI7outBuffSaIS0_EED2Ev, funcdef_no=2467, decl_uid=38525, cgraph_uid=1207, symbol_order=1255)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::vector<outBuff, std::allocator<outBuff> >::~vector() (struct vector * const this)
{
  struct _Tp_alloc_type & D.48608;
  struct outBuff * _4;

  <bb 2> [100.00%]:
  _4 = this_6(D)->D.38528._M_impl._M_start;
  if (_4 != 0B)
    goto <bb 3>; [57.44%]
  else
    goto <bb 4>; [42.56%]

  <bb 3> [57.44%]:
  operator delete (_4);

  <bb 4> [100.00%]:
  MEM[(struct  &)this_6(D)] ={v} {CLOBBER};
  return;

}



;; Function std::vector<outBuff, std::allocator<outBuff> >::_M_erase_at_end(outBuff*) (_ZNSt6vectorI7outBuffSaIS0_EE15_M_erase_at_endEPS0_, funcdef_no=2409, decl_uid=38407, cgraph_uid=1149, symbol_order=1197)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::vector<outBuff, std::allocator<outBuff> >::_M_erase_at_end(outBuff*) (struct vector * const this, struct outBuff * __pos)
{
  struct _Tp_alloc_type & D.48614;

  <bb 2> [100.00%]:
  this_4(D)->D.38528._M_impl._M_finish = __pos_7(D);
  return;

}



;; Function std::vector<outBuff, std::allocator<outBuff> >::clear() (_ZNSt6vectorI7outBuffSaIS0_EE5clearEv, funcdef_no=2272, decl_uid=38165, cgraph_uid=1012, symbol_order=1060)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::vector<outBuff, std::allocator<outBuff> >::clear() (struct vector * const this)
{
  struct outBuff * _1;

  <bb 2> [100.00%]:
  _1 = this_3(D)->D.38528._M_impl._M_start;
  this_3(D)->D.38528._M_impl._M_finish = _1;
  return;

}



;; Function std::__addressof<outBuff>(outBuff&)outBuff* (_ZSt11__addressofI7outBuffEPT_RS1_, funcdef_no=2634, decl_uid=45124, cgraph_uid=1374, symbol_order=1422)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::__addressof<outBuff>(outBuff&)outBuff* (struct outBuff & __r)
{
  <bb 2> [0.00%]:
  return __r_1(D);

}



;; Function std::forward<outBuff const&>(std::remove_reference<outBuff const&>::type&)outBuff const& (_ZSt7forwardIRK7outBuffEOT_RNSt16remove_referenceIS3_E4typeE, funcdef_no=2636, decl_uid=45235, cgraph_uid=1375, symbol_order=1423)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::forward<outBuff const&>(std::remove_reference<outBuff const&>::type&)outBuff const& (const struct type & __t)
{
  <bb 2> [0.00%]:
  return __t_1(D);

}



;; Function std::_Construct<outBuff, outBuff const&>(outBuff*, outBuff const&)void (_ZSt10_ConstructI7outBuffJRKS0_EEvPT_DpOT0_, funcdef_no=2635, decl_uid=45126, cgraph_uid=1376, symbol_order=1424)

Before removal of unreachable regions:
Eh tree:
   1 cleanup
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::_Construct<outBuff, outBuff const&>(outBuff*, outBuff const&)void (struct outBuff * __p, const struct outBuff & __args#0)
{
  const struct outBuff & D.48625;
  void * D.48623;

  <bb 2> [100.00%]:
  if (__p_6(D) != 0B)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  *__p_6(D) = *__args#0_3(D);

  <bb 4> [0.00%]:
  return;

}



;; Function std::__uninitialized_fill_n<false>::__uninit_fill_n<outBuff*, unsigned long, outBuff>(outBuff*, unsigned long, outBuff const&)outBuff* (_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIP7outBuffmS2_EET_S4_T0_RKT1_, funcdef_no=2599, decl_uid=44822, cgraph_uid=1339, symbol_order=1387)

Before removal of unreachable regions:
Eh tree:
   1 try catch:
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::__uninitialized_fill_n<false>::__uninit_fill_n<outBuff*, unsigned long, outBuff>(outBuff*, unsigned long, outBuff const&)outBuff* (struct outBuff * __first, long unsigned int __n, const struct outBuff & __x)
{
  struct outBuff * D.48630;
  struct outBuff * __cur;
  void * _2;

  <bb 2> [0.00%]:

  <bb 3> [0.00%]:
  # __n_3 = PHI <__n_8(D)(2), __n_13(6)>
  # __cur_4 = PHI <__first_6(D)(2), __cur_14(6)>
  if (__n_3 == 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 4> [100.00%]:
  if (__cur_4 != 0B)
    goto <bb 5>; [73.26%]
  else
    goto <bb 6>; [26.74%]

  <bb 5> [73.26%]:
  *__cur_4 = *__x_11(D);

  <bb 6> [0.00%]:
  __n_13 = __n_3 + 18446744073709551615;
  __cur_14 = __cur_4 + 40;
  goto <bb 3>; [0.00%]

  <bb 7> [0.00%]:
  return __cur_4;

}



;; Function std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<char*> >(unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<char*>)unsigned char* (_ZSt9__find_ifIPhN9__gnu_cxx5__ops17_Iter_equals_iterIPcEEET_S6_S6_T0_, funcdef_no=2545, decl_uid=43476, cgraph_uid=1286, symbol_order=1334)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {}
Reachable landing pads: n_bits = 2, set = {}
Removing unreachable region 1
Removing unreachable region 2


After removal of unreachable regions:


std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<char*> >(unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<char*>)unsigned char* (unsigned char * __first, unsigned char * __last, struct _Iter_equals_iter __pred)
{
  struct random_access_iterator_tag D.47335;
  unsigned char * _5;

  <bb 2> [0.00%]:
  _5 = std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<char*> > (__first_4(D), __last_3(D), __pred, D.47335);
  return _5;

}



;; Function std::search<unsigned char*, char*>(unsigned char*, unsigned char*, char*, char*)unsigned char* (_ZSt6searchIPhPcET_S2_S2_T0_S3_, funcdef_no=2404, decl_uid=41830, cgraph_uid=1144, symbol_order=1192)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {}
Reachable landing pads: n_bits = 2, set = {}
Removing unreachable region 1
Removing unreachable region 2


After removal of unreachable regions:


std::search<unsigned char*, char*>(unsigned char*, unsigned char*, char*, char*)unsigned char* (unsigned char * __first1, unsigned char * __last1, char * __first2, char * __last2)
{
  struct _Iter_equal_to_iter D.48709;
  struct _Iter_equal_to_iter D.48708;
  struct _Iter_equal_to_iter D.47297;
  unsigned char * _8;

  <bb 2> [100.00%]:
  _8 = std::__search<unsigned char*, char*, __gnu_cxx::__ops::_Iter_equal_to_iter> (__first1_3(D), __last1_4(D), __first2_5(D), __last2_6(D), D.47297);
  return _8;

}



;; Function std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<unsigned char*> >(unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<unsigned char*>)unsigned char* (_ZSt9__find_ifIPhN9__gnu_cxx5__ops17_Iter_equals_iterIS0_EEET_S5_S5_T0_, funcdef_no=2549, decl_uid=43550, cgraph_uid=1289, symbol_order=1337)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {}
Reachable landing pads: n_bits = 2, set = {}
Removing unreachable region 1
Removing unreachable region 2


After removal of unreachable regions:


std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<unsigned char*> >(unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<unsigned char*>)unsigned char* (unsigned char * __first, unsigned char * __last, struct _Iter_equals_iter __pred)
{
  struct random_access_iterator_tag D.47413;
  unsigned char * _5;

  <bb 2> [0.00%]:
  _5 = std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<unsigned char*> > (__first_4(D), __last_3(D), __pred, D.47413);
  return _5;

}



;; Function std::search<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*, unsigned char*)unsigned char* (_ZSt6searchIPhS0_ET_S1_S1_T0_S2_, funcdef_no=2405, decl_uid=41838, cgraph_uid=1145, symbol_order=1193)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {}
Reachable landing pads: n_bits = 2, set = {}
Removing unreachable region 1
Removing unreachable region 2


After removal of unreachable regions:


std::search<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*, unsigned char*)unsigned char* (unsigned char * __first1, unsigned char * __last1, unsigned char * __first2, unsigned char * __last2)
{
  struct _Iter_equal_to_iter D.48771;
  struct _Iter_equal_to_iter D.48770;
  struct _Iter_equal_to_iter D.47377;
  unsigned char * _8;

  <bb 2> [100.00%]:
  _8 = std::__search<unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equal_to_iter> (__first1_3(D), __last1_4(D), __first2_5(D), __last2_6(D), D.47377);
  return _8;

}



;; Function __gnu_cxx::new_allocator<char>::max_size() const (_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv, funcdef_no=2639, decl_uid=11627, cgraph_uid=1379, symbol_order=1427)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


__gnu_cxx::new_allocator<char>::max_size() const (const struct new_allocator * const this)
{
  <bb 2> [0.00%]:
  return 18446744073709551615;

}



;; Function std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) (_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_, funcdef_no=2608, decl_uid=18600, cgraph_uid=1348, symbol_order=1396)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) (const struct allocator_type & __a)
{
  size_type D.48782;

  <bb 2> [100.00%]:
  return 18446744073709551615;

}



;; Function std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const (_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv, funcdef_no=2551, decl_uid=19048, cgraph_uid=1291, symbol_order=1339)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const (const struct basic_string * const this)
{
  const struct allocator_type & D.48787;
  size_type D.48785;

  <bb 2> [100.00%]:
  return 9223372036854775807;

}



;; Function __gnu_cxx::new_allocator<outBuff>::new_allocator(__gnu_cxx::new_allocator<outBuff> const&) (_ZN9__gnu_cxx13new_allocatorI7outBuffEC2ERKS2_, funcdef_no=2647, decl_uid=37714, cgraph_uid=1387, symbol_order=1435)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


__gnu_cxx::new_allocator<outBuff>::new_allocator(__gnu_cxx::new_allocator<outBuff> const&) (struct new_allocator * const this, const struct new_allocator & D.37716)
{
  <bb 2> [0.00%]:
  return;

}



;; Function std::allocator<outBuff>::allocator(std::allocator<outBuff> const&) (_ZNSaI7outBuffEC2ERKS0_, funcdef_no=2631, decl_uid=37779, cgraph_uid=1371, symbol_order=1419)

Before removal of unreachable regions:
Eh tree:
   1 allowed_exceptions filter :0 types:
     2 cleanup
Reachable regions: n_bits = 3, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1
Removing unreachable region 2


After removal of unreachable regions:


std::allocator<outBuff>::allocator(std::allocator<outBuff> const&) (struct allocator * const this, const struct allocator & __a)
{
  void * _1;

  <bb 2> [100.00%]:
  return;

}



;; Function std::_Vector_base<outBuff, std::allocator<outBuff> >::_Vector_impl::_Vector_impl(std::allocator<outBuff> const&) (_ZNSt12_Vector_baseI7outBuffSaIS0_EE12_Vector_implC2ERKS1_, funcdef_no=2595, decl_uid=37816, cgraph_uid=1335, symbol_order=1383)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


std::_Vector_base<outBuff, std::allocator<outBuff> >::_Vector_impl::_Vector_impl(std::allocator<outBuff> const&) (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> [100.00%]:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->_M_start = 0B;
  this_2(D)->_M_finish = 0B;
  this_2(D)->_M_end_of_storage = 0B;
  return;

}



;; Function __gnu_cxx::new_allocator<outBuff>::max_size() const (_ZNK9__gnu_cxx13new_allocatorI7outBuffE8max_sizeEv, funcdef_no=2653, decl_uid=37677, cgraph_uid=1393, symbol_order=1441)

Before removal of unreachable regions:
Eh tree:
   1 must_not_throw
Reachable regions: n_bits = 2, set = {}
Reachable landing pads: n_bits = 1, set = {}
Removing unreachable region 1


After removal of unreachable regions:


__gnu_cxx::new_allocator<outBuff>::max_size() const (const struct new_allocator * const this)
{
  <bb 2> [0.00%]:
  return 461168601842738790;

}



;; Function std::_Vector_base<outBuff, std::allocator<outBuff> >::_Vector_base(unsigned long, std::allocator<outBuff> const&) (_ZNSt12_Vector_baseI7outBuffSaIS0_EEC2EmRKS1_, funcdef_no=2530, decl_uid=37860, cgraph_uid=1270, symbol_order=1318)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L0>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L0>}


Removing basic block 4
Removing unreachable region 1
Merging blocks 2 and 3
std::_Vector_base<outBuff, std::allocator<outBuff> >::_Vector_base(unsigned long, std::allocator<outBuff> const&) (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  struct outBuff * _11;
  long unsigned int _12;
  struct outBuff * _13;

  <bb 2> [100.00%]:
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  MEM[(struct _Vector_impl *)this_4(D)]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_4(D)]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_4(D)]._M_end_of_storage = 0B;
  _11 = std::_Vector_base<outBuff, std::allocator<outBuff> >::_M_allocate (this_4(D), __n_8(D));
  this_4(D)->_M_impl._M_start = _11;
  this_4(D)->_M_impl._M_finish = _11;
  _12 = __n_8(D) * 40;
  _13 = _11 + _12;
  this_4(D)->_M_impl._M_end_of_storage = _13;
  return;

}



;; Function std::vector<outBuff, std::allocator<outBuff> >::vector(unsigned long, outBuff const&, std::allocator<outBuff> const&) (_ZNSt6vectorI7outBuffSaIS0_EEC2EmRKS0_RKS1_, funcdef_no=2464, decl_uid=38499, cgraph_uid=1204, symbol_order=1252)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L0>}
Reachable regions: n_bits = 3, set = {}
Reachable landing pads: n_bits = 2, set = {}
Removing unreachable region 1
Removing unreachable region 2


After removal of unreachable regions:


std::vector<outBuff, std::allocator<outBuff> >::vector(unsigned long, outBuff const&, std::allocator<outBuff> const&) (struct vector * const this, size_type __n, const struct value_type & __value, const struct allocator_type & __a)
{
  long unsigned int __n;
  struct outBuff * __cur;
  struct _Vector_base * _1;
  struct outBuff * _15;
  long unsigned int _16;
  struct outBuff * _17;

  <bb 2> [100.00%]:
  _1 = &this_3(D)->D.38528;
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  MEM[(struct _Vector_impl *)this_3(D)]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_3(D)]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_3(D)]._M_end_of_storage = 0B;
  _15 = std::_Vector_base<outBuff, std::allocator<outBuff> >::_M_allocate (_1, __n_5(D));
  MEM[(struct _Vector_base *)this_3(D)]._M_impl._M_start = _15;
  MEM[(struct _Vector_base *)this_3(D)]._M_impl._M_finish = _15;
  _16 = __n_5(D) * 40;
  _17 = _15 + _16;
  MEM[(struct _Vector_base *)this_3(D)]._M_impl._M_end_of_storage = _17;

  <bb 3> [100.00%]:
  # __n_11 = PHI <__n_5(D)(2), __n_13(6)>
  # __cur_12 = PHI <_15(2), __cur_14(6)>
  if (__n_11 == 0)
    goto <bb 7>; [15.00%]
  else
    goto <bb 4>; [85.00%]

  <bb 4> [85.00%]:
  if (__cur_12 != 0B)
    goto <bb 5>; [70.00%]
  else
    goto <bb 6>; [30.00%]

  <bb 5> [59.50%]:
  *__cur_12 = MEM[(const struct outBuff *)__value_8(D)];

  <bb 6> [85.00%]:
  __n_13 = __n_11 + 18446744073709551615;
  __cur_14 = __cur_12 + 40;
  goto <bb 3>; [100.00%]

  <bb 7> [15.00%]:
  this_3(D)->D.38528._M_impl._M_finish = __cur_12;
  return;

}



;; Function std::vector<outBuff, std::allocator<outBuff> >::_M_fill_assign(unsigned long, outBuff const&) (_ZNSt6vectorI7outBuffSaIS0_EE14_M_fill_assignEmRKS0_, funcdef_no=2396, decl_uid=38291, cgraph_uid=1136, symbol_order=1184)

Before removal of unreachable regions:
Eh tree:
   3 must_not_throw
   1 cleanup land:{1,<L6>}
     2 cleanup
Reachable regions: n_bits = 4, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2
Removing unreachable region 3


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L6>}


Removing basic block 18
Removing unreachable region 1
Merging blocks 3 and 4
std::vector<outBuff, std::allocator<outBuff> >::_M_fill_assign(unsigned long, outBuff const&) (struct vector * const this, size_t __n, const struct value_type & __val)
{
  struct outBuff * SR.966;
  struct outBuff * SR.965;
  struct outBuff * __first;
  long unsigned int __niter;
  struct outBuff * D.48873;
  struct iterator D.48865;
  struct iterator D.48863;
  struct _Tp_alloc_type & D.48861;
  size_type D.48859;
  struct outBuff * __cur;
  long unsigned int __n;
  struct outBuff * D.48857;
  size_type D.48850;
  struct _Tp_alloc_type & D.48844;
  size_type D.48842;
  struct vector __tmp;
  struct __normal_iterator D.46371;
  struct __normal_iterator D.46370;
  long unsigned int _9;
  long int _17;
  struct outBuff * _20;
  long int _29;
  struct outBuff * _30;
  long int _34;
  long int _40;
  long unsigned int _41;
  struct _Tp_alloc_type & _42;
  struct outBuff * _44;
  struct outBuff * _45;
  struct outBuff * _46;
  struct outBuff * _47;
  struct outBuff * _48;
  struct outBuff * _49;
  struct outBuff * _50;
  long int _51;
  long int _54;
  long int _55;
  long unsigned int _56;
  struct outBuff * _61;
  long int _62;
  struct outBuff * _63;
  long int _64;
  long int _65;
  long int _66;
  long unsigned int _67;

  <bb 2> [100.00%]:
  _30 = MEM[(const struct vector *)this_16(D)].D.38528._M_impl._M_end_of_storage;
  _29 = (long int) _30;
  _20 = MEM[(const struct vector *)this_16(D)].D.38528._M_impl._M_start;
  _34 = (long int) _20;
  _17 = _29 - _34;
  _40 = _17 /[ex] 40;
  _41 = (long unsigned int) _40;
  if (__n_18(D) > _41)
    goto <bb 3>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 3> [100.00%]:
  _42 = &MEM[(struct _Vector_base *)this_16(D)]._M_impl;
  std::vector<outBuff, std::allocator<outBuff> >::vector (&__tmp, __n_18(D), __val_22(D), _42);
  _44 = MEM[(struct outBuff * &)&__tmp];
  _45 = MEM[(struct outBuff * &)this_16(D)];
  MEM[(struct outBuff * &)&__tmp] = _45;
  MEM[(struct outBuff * &)this_16(D)] = _44;
  _46 = MEM[(struct outBuff * &)&__tmp + 8];
  _47 = MEM[(struct outBuff * &)this_16(D) + 8];
  MEM[(struct outBuff * &)&__tmp + 8] = _47;
  MEM[(struct outBuff * &)this_16(D) + 8] = _46;
  _48 = MEM[(struct outBuff * &)&__tmp + 16];
  _49 = MEM[(struct outBuff * &)this_16(D) + 16];
  MEM[(struct outBuff * &)&__tmp + 16] = _49;
  MEM[(struct outBuff * &)this_16(D) + 16] = _48;
  if (_45 != 0B)
    goto <bb 4>; [57.44%]
  else
    goto <bb 5>; [42.56%]

  <bb 4> [57.44%]:
  operator delete (_45);

  <bb 5> [100.00%]:
  __tmp ={v} {CLOBBER};
  goto <bb 16>; [0.00%]

  <bb 6> [100.00%]:
  _50 = MEM[(const struct vector *)this_16(D)].D.38528._M_impl._M_finish;
  _51 = (long int) _50;
  _54 = _51 - _34;
  _55 = _54 /[ex] 40;
  _56 = (long unsigned int) _55;
  if (__n_18(D) > _56)
    goto <bb 7>; [0.00%]
  else
    goto <bb 13>; [0.00%]

  <bb 7> [100.00%]:
  MEM[(struct __normal_iterator *)&D.46370] = _50;
  MEM[(struct __normal_iterator *)&D.46371] = _20;
  std::fill<__gnu_cxx::__normal_iterator<outBuff*, std::vector<outBuff, std::allocator<outBuff> > >, outBuff> (D.46371, D.46370, __val_22(D));
  _61 = MEM[(const struct vector *)this_16(D)].D.38528._M_impl._M_finish;
  _62 = (long int) _61;
  _63 = MEM[(const struct vector *)this_16(D)].D.38528._M_impl._M_start;
  _64 = (long int) _63;
  _65 = _62 - _64;
  _66 = _65 /[ex] 40;
  _67 = (long unsigned int) _66;
  _9 = __n_18(D) - _67;

  <bb 8> [100.00%]:
  # __n_57 = PHI <_9(7), __n_59(11)>
  # __cur_58 = PHI <_61(7), __cur_60(11)>
  if (__n_57 == 0)
    goto <bb 12>; [15.00%]
  else
    goto <bb 9>; [85.00%]

  <bb 9> [85.00%]:
  if (__cur_58 != 0B)
    goto <bb 10>; [70.00%]
  else
    goto <bb 11>; [30.00%]

  <bb 10> [59.50%]:
  *__cur_58 = MEM[(const struct outBuff *)__val_22(D)];

  <bb 11> [85.00%]:
  __n_59 = __n_57 + 18446744073709551615;
  __cur_60 = __cur_58 + 40;
  goto <bb 8>; [100.00%]

  <bb 12> [15.00%]:
  this_16(D)->D.38528._M_impl._M_finish = __cur_58;
  goto <bb 16>; [0.00%]

  <bb 13> [100.00%]:
  # __first_72 = PHI <_20(6), __first_74(14)>
  # __niter_71 = PHI <__n_18(D)(6), __niter_73(14)>
  if (__niter_71 == 0)
    goto <bb 15>; [15.00%]
  else
    goto <bb 14>; [85.00%]

  <bb 14> [85.00%]:
  *__first_72 = MEM[(const struct outBuff &)__val_22(D)];
  __niter_73 = __niter_71 + 18446744073709551615;
  __first_74 = __first_72 + 40;
  goto <bb 13>; [100.00%]

  <bb 15> [100.00%]:
  this_16(D)->D.38528._M_impl._M_finish = __first_72;

  <bb 16> [0.00%]:
  return;

}



;; Function outputBufferInit(unsigned long) (_Z16outputBufferInitm, funcdef_no=1994, decl_uid=39026, cgraph_uid=734, symbol_order=782)

Before removal of unreachable regions:
Eh tree:
   2 must_not_throw
   1 cleanup land:{1,<L2>}
Reachable regions: n_bits = 3, set = {1 }
Reachable landing pads: n_bits = 2, set = {1 }
Removing unreachable region 2


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L2>}


Removing basic block 10
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 5 and 6
Merging blocks 8 and 9
Merging blocks 2 and 4
Merging blocks 5 and 7
outputBufferInit(unsigned long) (size_t size)
{
  size_type D.48893;
  int D.48880;
  struct outBuff emptyElement;
  union pthread_mutex_t * OutMutex.339_1;
  struct FILE * stderr.341_3;
  union pthread_mutex_t * OutMutex.342_4;
  union pthread_mutex_t * OutMutex.343_5;
  struct outBuff * _26;
  long int _27;
  struct outBuff * _28;
  long int _29;
  long int _30;
  long int _31;
  long unsigned int _32;

  <bb 2> [100.00%]:
  OutMutex.339_1 = OutMutex;
  safe_mutex_lock (OutMutex.339_1);
  NextBlockToWrite = 0;
  OutBufferPosToWrite = 0;
  NumBufferedBlocks = 0;
  NumBufferedTailBlocks = 0;
  MEM[(struct  &)&emptyElement] ={v} {CLOBBER};
  emptyElement.buf = 0B;
  emptyElement.bufSize = 0;
  emptyElement.blockNumber = 0;
  emptyElement.sequenceNumber = 0;
  emptyElement.inSize = 0;
  emptyElement.isLastInSequence = 1;
  emptyElement.next = 0B;
  std::vector<outBuff, std::allocator<outBuff> >::_M_fill_assign (&OutputBuffer, size_16(D), &emptyElement);
  _26 = OutputBuffer.D.38528._M_impl._M_finish;
  _27 = (long int) _26;
  _28 = OutputBuffer.D.38528._M_impl._M_start;
  _29 = (long int) _28;
  _30 = _27 - _29;
  _31 = _30 /[ex] 40;
  _32 = (long unsigned int) _31;
  if (size_16(D) != _32)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [100.00%]:
  stderr.341_3 = stderr;
  __fprintf_chk (stderr.341_3, 1, "pbzip2: *ERROR: Could not initialize (OutputBuffer); size=%lu!  Aborting...\n", size_16(D));
  OutMutex.342_4 = OutMutex;
  safe_mutex_unlock (OutMutex.342_4);
  exit (1);

  <bb 4> [0.00%]:
  OutMutex.343_5 = OutMutex;
  safe_mutex_unlock (OutMutex.343_5);
  emptyElement ={v} {CLOBBER};
  return;

}



;; Function producer_decompress(int, long, queue*) (_Z19producer_decompressilP5queue, funcdef_no=1981, decl_uid=39006, cgraph_uid=721, symbol_order=769)

Before removal of unreachable regions:
Eh tree:
   4 must_not_throw
   1 cleanup land:{1,<L32>}
     3 must_not_throw
     2 cleanup land:{2,<L31>}
Reachable regions: n_bits = 5, set = {1 2 }
Reachable landing pads: n_bits = 3, set = {1 2 }
Removing unreachable region 3
Removing unreachable region 4


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{1,<L32>}
     2 cleanup land:{2,<L31>}


Removing basic block 45
Removing unreachable region 1
Merging blocks 2 and 3
Merging blocks 2 and 4
Merging blocks 2 and 5
producer_decompress(int, long, queue*) (int hInfile, off_t fileSize, struct queue * fifo)
{
  bool D.48909;
  bool D.48907;
  bool D.48905;
  bool D.48903;
  int D.48901;
  int D.48898;
  struct outBuff * fileData;
  struct BZ2StreamScanner bz2StreamScanner;
  struct outBuff * fileData.101_4;
  unsigned int _5;
  int NumBlocks.103_6;
  union pthread_mutex_t * _8;
  union pthread_cond_t * _9;
  union pthread_mutex_t * _10;
  int QuietMode.104_11;
  struct outBuff * fileData.105_12;
  unsigned int _13;
  long unsigned int _16;
  struct FILE * stderr.107_17;
  struct FILE * stderr.108_18;
  union pthread_mutex_t * _19;
  int _20;
  union pthread_mutex_t * _21;
  union pthread_cond_t * _22;
  int NumBlocks.110_23;
  union pthread_cond_t * _25;
  union pthread_mutex_t * _26;
  struct outBuff * fileData.111_27;
  union pthread_cond_t * _28;
  struct outBuff * fileData.112_29;
  unsigned int _30;
  long int _31;
  long int InBytesProduced.113_32;
  long int _33;
  int _35;
  int _36;
  union pthread_mutex_t * _37;
  struct outBuff * fileData.115_39;
  union pthread_mutex_t * _44;
  union pthread_cond_t * _45;
  union pthread_mutex_t * _46;
  int _48;
  struct outBuff * _66;
  unsigned int _74;
  int _92;
  int _99;
  struct outBuff * _113;
  unsigned int _126;
  bool _128;
  bool _129;

  <bb 2> [0.00%]:
  safe_mutex_lock (&ProgressIndicatorsMutex);
  InBytesProduced = 0;
  NumBlocks = 0;
  safe_mutex_unlock (&ProgressIndicatorsMutex);
  pbzip2::BZ2StreamScanner::BZ2StreamScanner (&bz2StreamScanner, hInfile_63(D), 1048576);
  _66 = pbzip2::BZ2StreamScanner::getNextStream (&bz2StreamScanner);

  <bb 3> [0.00%]:
  fileData = _66;

  <bb 4> [100.00%]:
  _74 = bz2StreamScanner._errState;
  if (_74 == 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 5> [0.00%]:
  fileData.101_4 = fileData;
  _5 = fileData.101_4->bufSize;
  if (_5 != 0)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 6> [0.00%]:
  NumBlocks.103_6 = NumBlocks;
  _92 = producerDecompressCheckInterrupt (hInfile_63(D), &fileData, NumBlocks.103_6);
  goto <bb 8>; [0.00%]

  <bb 7> [0.00%]:
  close (hInfile_63(D));
  goto <bb 31>; [0.00%]

  <bb 8> [0.00%]:
  if (_92 != 0)
    goto <bb 9>; [0.00%]
  else
    goto <bb 13>; [0.00%]

  <bb 9> [0.00%]:
  _8 = fifo_82(D)->mut;
  safe_mutex_lock (_8);

  <bb 10> [0.00%]:
  _9 = fifo_82(D)->notEmpty;
  safe_cond_broadcast (_9);

  <bb 11> [0.00%]:
  _10 = fifo_82(D)->mut;
  safe_mutex_unlock (_10);

  <bb 12> [0.00%]:
  syncSetProducerDone (1);
  goto <bb 40>; [0.00%]

  <bb 13> [0.00%]:
  QuietMode.104_11 = QuietMode;
  if (QuietMode.104_11 != 1)
    goto <bb 14>; [0.00%]
  else
    goto <bb 17>; [0.00%]

  <bb 14> [0.00%]:
  fileData.105_12 = fileData;
  _13 = fileData.105_12->bufSize;
  if (_13 > 250000000)
    goto <bb 15>; [0.00%]
  else
    goto <bb 17>; [0.00%]

  <bb 15> [100.00%]:
  _16 = (long unsigned int) _13;
  stderr.107_17 = stderr;
  __fprintf_chk (stderr.107_17, 1, "pbzip2:  *WARNING: Compressed block size is large [%lu bytes].\n", _16);

  <bb 16> [100.00%]:
  stderr.108_18 = stderr;
  __fprintf_chk (stderr.108_18, 1, "          If program aborts, use regular BZIP2 to decompress.\n");

  <bb 17> [0.00%]:
  _19 = fifo_82(D)->mut;
  safe_mutex_lock (_19);

  <bb 18> [0.00%]:
  _20 = fifo_82(D)->full;
  if (_20 == 0)
    goto <bb 25>; [0.00%]
  else
    goto <bb 19>; [0.00%]

  <bb 19> [0.00%]:
  _21 = fifo_82(D)->mut;
  _22 = fifo_82(D)->notFull;
  safe_cond_wait (_22, _21);

  <bb 20> [0.00%]:
  NumBlocks.110_23 = NumBlocks;
  _99 = producerDecompressCheckInterrupt (hInfile_63(D), &fileData, NumBlocks.110_23);

  <bb 21> [0.00%]:
  if (_99 != 0)
    goto <bb 22>; [0.00%]
  else
    goto <bb 18>; [0.00%]

  <bb 22> [0.00%]:
  _25 = fifo_82(D)->notEmpty;
  safe_cond_broadcast (_25);

  <bb 23> [0.00%]:
  syncSetProducerDone (1);

  <bb 24> [0.00%]:
  _26 = fifo_82(D)->mut;
  safe_mutex_unlock (_26);
  goto <bb 40>; [0.00%]

  <bb 25> [0.00%]:
  fileData.111_27 = fileData;
  queue::add (fifo_82(D), fileData.111_27);
  _28 = fifo_82(D)->notEmpty;
  safe_cond_signal (_28);

  <bb 26> [0.00%]:
  safe_mutex_lock (&ProgressIndicatorsMutex);

  <bb 27> [0.00%]:
  fileData.112_29 = fileData;
  _30 = fileData.112_29->bufSize;
  _31 = (long int) _30;
  InBytesProduced.113_32 = InBytesProduced;
  _33 = _31 + InBytesProduced.113_32;
  InBytesProduced = _33;
  _35 = fileData.112_29->blockNumber;
  _36 = _35 + 1;
  NumBlocks = _36;
  safe_mutex_unlock (&ProgressIndicatorsMutex);

  <bb 28> [0.00%]:
  _37 = fifo_82(D)->mut;
  safe_mutex_unlock (_37);

  <bb 29> [0.00%]:
  _113 = pbzip2::BZ2StreamScanner::getNextStream (&bz2StreamScanner);

  <bb 30> [0.00%]:
  fileData = _113;
  goto <bb 4>; [0.00%]

  <bb 31> [100.00%]:
  fileData.115_39 = fileData;
  operator delete (fileData.115_39, 40);
  _126 = bz2StreamScanner._errState;
  if (_126 != 0)
    goto <bb 32>; [0.00%]
  else
    goto <bb 33>; [0.00%]

  <bb 32> [0.00%]:
  handle_error (1, 1, "pbzip2: producer_decompress: *ERROR: when reading bzip2 input stream\n");
  goto <bb 40>; [0.00%]

  <bb 33> [100.00%]:
  _128 = bz2StreamScanner._bz2HeaderFound;
  if (_128 != 0)
    goto <bb 34>; [0.00%]
  else
    goto <bb 36>; [0.00%]

  <bb 34> [100.00%]:
  _129 = bz2StreamScanner._eof;
  if (_129 != 0)
    goto <bb 35>; [0.00%]
  else
    goto <bb 36>; [0.00%]

  <bb 35> [0.00%]:
  syncSetProducerDone (1);
  goto <bb 37>; [0.00%]

  <bb 36> [0.00%]:
  handle_error (1, 1, "pbzip2: producer_decompress: *ERROR: input file is not a valid bzip2 stream\n");
  goto <bb 40>; [0.00%]

  <bb 37> [0.00%]:
  _44 = fifo_82(D)->mut;
  safe_mutex_lock (_44);

  <bb 38> [0.00%]:
  _45 = fifo_82(D)->notEmpty;
  safe_cond_broadcast (_45);

  <bb 39> [0.00%]:
  _46 = fifo_82(D)->mut;
  safe_mutex_unlock (_46);

  <bb 40> [0.00%]:
  # _48 = PHI <0(12), 0(24), -1(32), -1(36), 0(39)>
  pbzip2::BZ2StreamScanner::~BZ2StreamScanner (&bz2StreamScanner);
  bz2StreamScanner ={v} {CLOBBER};
  fileData ={v} {CLOBBER};
  return _48;

<L31> [0.00%]:
  pbzip2::BZ2StreamScanner::~BZ2StreamScanner (&bz2StreamScanner);
  resx 2

}



;; Function main (main, funcdef_no=2005, decl_uid=39705, cgraph_uid=748, symbol_order=796)

Before removal of unreachable regions:
Eh tree:
   47 must_not_throw
   1 cleanup land:{20,<L573>}
     46 must_not_throw
     2 cleanup land:{1,<L572>}
       45 must_not_throw
       44 cleanup land:{19,<L571>}
       43 must_not_throw
       42 cleanup land:{18,<L570>}
       41 must_not_throw
       40 cleanup land:{17,<L569>}
       39 must_not_throw
       25 cleanup land:{13,<L568>}
         38 must_not_throw
         31 cleanup land:{16,<L567>}
           37 must_not_throw
           32 cleanup land:{15,<L566>}
             36 must_not_throw
             33 cleanup land:{14,<L565>}
               34 cleanup
                 35 cleanup
         30 must_not_throw
         26 cleanup land:{12,<L564>}
           29 cleanup
           28 must_not_throw
           27 cleanup land:{11,<L563>}
       24 must_not_throw
       9 cleanup land:{4,<L562>}
         23 must_not_throw
         15 cleanup land:{9,<L561>}
           22 must_not_throw
           21 cleanup land:{10,<L560>}
           20 must_not_throw
           16 cleanup land:{8,<L559>}
             19 cleanup
             18 must_not_throw
             17 cleanup land:{7,<L558>}
         14 must_not_throw
         10 cleanup land:{6,<L557>}
           13 cleanup
           12 must_not_throw
           11 cleanup land:{5,<L556>}
       8 must_not_throw
       3 cleanup land:{3,<L555>}
         7 must_not_throw
         4 cleanup land:{2,<L554>}
           5 cleanup
             6 cleanup
Reachable regions: n_bits = 48, set = {1 2 3 4 9 10 11 15 16 17 21 25 26 27 31 32 
  33 40 42 44 }
Reachable landing pads: n_bits = 21, set = {1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 
  18 19 20 }
Removing unreachable region 5
Removing unreachable region 6
Removing unreachable region 7
Removing unreachable region 8
Removing unreachable region 12
Removing unreachable region 13
Removing unreachable region 14
Removing unreachable region 18
Removing unreachable region 19
Removing unreachable region 20
Removing unreachable region 22
Removing unreachable region 23
Removing unreachable region 24
Removing unreachable region 28
Removing unreachable region 29
Removing unreachable region 30
Removing unreachable region 34
Removing unreachable region 35
Removing unreachable region 36
Removing unreachable region 37
Removing unreachable region 38
Removing unreachable region 39
Removing unreachable region 41
Removing unreachable region 43
Removing unreachable region 45
Removing unreachable region 46
Removing unreachable region 47


After removal of unreachable regions:
Eh tree:
   1 cleanup land:{20,<L573>}
     2 cleanup land:{1,<L572>}
       44 cleanup land:{19,<L571>}
       42 cleanup land:{18,<L570>}
       40 cleanup land:{17,<L569>}
       25 cleanup land:{13,<L568>}
         31 cleanup land:{16,<L567>}
           32 cleanup land:{15,<L566>}
             33 cleanup land:{14,<L565>}
         26 cleanup land:{12,<L564>}
           27 cleanup land:{11,<L563>}
       9 cleanup land:{4,<L562>}
         15 cleanup land:{9,<L561>}
           21 cleanup land:{10,<L560>}
           16 cleanup land:{8,<L559>}
             17 cleanup land:{7,<L558>}
         10 cleanup land:{6,<L557>}
           11 cleanup land:{5,<L556>}
       3 cleanup land:{3,<L555>}
         4 cleanup land:{2,<L554>}


Removing basic block 523
Removing basic block 519
Removing basic block 518
Removing basic block 517
Removing basic block 516
Removing basic block 512
Removing basic block 511
Removing basic block 510
Removing basic block 509
Removing basic block 508
Removing basic block 501
Removing basic block 500
Removing basic block 499
Removing basic block 498
Removing basic block 497
Removing basic block 496
Removing unreachable region 1
Removing unreachable region 3
Removing unreachable region 4
Removing unreachable region 9
Removing unreachable region 10
Removing unreachable region 11
Removing unreachable region 16
Removing unreachable region 17
Removing unreachable region 25
Removing unreachable region 26
Removing unreachable region 27
Removing unreachable region 32
Removing unreachable region 33
Removing unreachable region 40
Removing unreachable region 42
Removing unreachable region 44
main (int argc, char * * argv)
{
  int ret;
  int D.49300;
  int ret;
  int D.49298;
  const char * D.49294;
  const char * D.49292;
  const char * D.49290;
  int ret;
  int D.49288;
  const char * D.49286;
  const char * D.49284;
  const char * D.49282;
  const char * D.49280;
  const char * D.49278;
  const char * D.49276;
  const char * D.49274;
  const char * D.49272;
  const char * D.49270;
  const char * D.49268;
  const char * D.49266;
  const char * D.49264;
  const char * D.49262;
  const char * D.49260;
  const char * D.49258;
  struct basic_string & D.49255;
  struct basic_string & D.49244;
  struct basic_string & D.49241;
  size_type D.49238;
  size_type D.49236;
  size_type D.49232;
  size_type D.49230;
  int D.49218;
  int D.49215;
  int D.49212;
  int D.49209;
  int D.49206;
  int D.49203;
  int D.49200;
  int D.49197;
  int D.49194;
  int D.49191;
  int D.49188;
  int D.49185;
  int D.49182;
  int D.49179;
  int D.49176;
  int D.49173;
  int D.49170;
  int D.49167;
  int D.49164;
  int D.49161;
  int D.49158;
  int D.49155;
  int D.49152;
  int D.49149;
  int D.49146;
  int D.49143;
  int D.49140;
  int D.49137;
  int D.49134;
  int D.49131;
  int D.49128;
  int D.49125;
  int D.49122;
  int D.49119;
  int D.49116;
  int D.49113;
  int D.49110;
  int D.49109;
  int D.49108;
  int D.49105;
  int D.49102;
  int D.49099;
  int D.49096;
  int D.49093;
  int D.49090;
  int D.49087;
  int D.49084;
  int D.49081;
  int D.49078;
  void * D.49075;
  int D.49071;
  int D.49068;
  int D.49065;
  int D.49064;
  int D.49063;
  int D.49060;
  int D.49057;
  int D.49054;
  int D.49051;
  int D.49048;
  int D.49045;
  int D.49042;
  int D.49039;
  int D.49036;
  int D.49033;
  int D.49030;
  int D.49027;
  int D.49024;
  int D.49021;
  int D.49018;
  int D.49015;
  int D.49012;
  int D.49009;
  int D.49006;
  int D.49003;
  int D.49000;
  int D.48997;
  int D.48994;
  int D.48991;
  int D.48988;
  int D.48985;
  int D.48982;
  int D.48979;
  int D.48976;
  char * D.48973;
  int D.48969;
  char * D.48967;
  int D.48964;
  char * D.48961;
  int D.48957;
  char * D.48955;
  int D.48952;
  char * D.48949;
  int D.48945;
  char * D.48943;
  int D.48940;
  int D.48937;
  char * D.48934;
  int D.48930;
  char * D.48928;
  int D.48925;
  char * D.48922;
  char * D.48919;
  char * D.48916;
  char * D.48913;
  bool removeFlag;
  struct stat statbuf;
  bool removeFlag;
  struct stat statbuf;
  int close_ret;
  struct stat statbuf;
  struct string bz2Tail;
  struct string tbz2Tail;
  struct string bz2Tail;
  size_t size;
  int errLevelCurrentFile;
  int mutexesInitRet;
  bool switchedMtToSt;
  size_t k;
  size_t j;
  size_t i;
  int fileLoop;
  int ret;
  int force;
  int keep;
  int noThreads;
  int errLevel;
  int testFile;
  int compress;
  int decompress;
  int maxMemorySwitch;
  int maxMemory;
  int blockSize;
  int numBlocks;
  int hOutfile;
  int hInfile;
  int zeroByteFile;
  int readEntireFile;
  int cmdLineTempCount;
  double timeStop;
  double timeStart;
  double timeCalc;
  int numCPUidle;
  int numCPUtotal;
  int useLoadAverage;
  double loadAvgArray[3];
  double loadAverage;
  struct timezone tz;
  struct timeval tvStopTime;
  struct timeval tvStartTime;
  char stdinFile[2];
  unsigned char tmpBuff[50];
  char cmdLineTemp[2048];
  struct string outFilename;
  char bz2Header[11];
  char * progNamePos;
  char * progName;
  char * InFilename;
  char * * FileList;
  pthread_t output;
  struct queue * fifo;
  struct allocator D.39861;
  struct string D.39862;
  struct allocator D.39859;
  struct allocator D.39853;
  struct allocator D.39850;
  struct allocator D.39832;
  struct string D.39833;
  char _2;
  int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  void * _14;
  struct FILE * stderr.453_16;
  int _17;
  int _18;
  long unsigned int _19;
  char * * _20;
  char * _21;
  char _22;
  char _27;
  int FileListCount.455_31;
  long unsigned int _32;
  long unsigned int _33;
  char * * _34;
  int _37;
  int _46;
  int _50;
  int _54;
  int _58;
  int _62;
  int _66;
  char * _67;
  int _71;
  int _75;
  char * _76;
  int _80;
  int _84;
  int _88;
  int _92;
  int _96;
  int _100;
  int _104;
  int _108;
  int _112;
  int _116;
  char * _119;
  char * _120;
  char _121;
  char * _131;
  char _132;
  unsigned char _138;
  unsigned char _139;
  char * _140;
  long unsigned int _141;
  char * _146;
  struct FILE * stderr.458_149;
  struct FILE * stderr.460_151;
  char * _156;
  char _157;
  unsigned char _163;
  unsigned char _164;
  char * _165;
  long unsigned int _166;
  char * _171;
  unsigned int blockSize.461_173;
  unsigned int _174;
  struct FILE * stderr.462_175;
  char * _180;
  char _181;
  unsigned char _187;
  unsigned char _188;
  char * _189;
  long unsigned int _190;
  char * _195;
  unsigned int maxMemory.463_197;
  unsigned int _198;
  struct FILE * stderr.464_199;
  char * _204;
  char _205;
  unsigned char _211;
  unsigned char _212;
  char * _213;
  long unsigned int _214;
  char * _219;
  int _221;
  struct FILE * stderr.467_224;
  struct FILE * stderr.470_227;
  char * _229;
  int FileListCount.472_233;
  long unsigned int _234;
  long unsigned int _235;
  char * * _236;
  int _239;
  int BWTblockSize.474_240;
  unsigned char _241;
  unsigned char _242;
  char _244;
  bool _245;
  bool _246;
  bool _247;
  struct FILE * stderr.475_248;
  char * _249;
  struct FILE * stderr.476_250;
  int FileListCount.477_251;
  struct FILE * stdin.479_252;
  int _253;
  int _254;
  struct FILE * stderr.480_255;
  char * _256;
  struct FILE * stderr.481_257;
  int FileListCount.483_259;
  long unsigned int _260;
  long unsigned int _261;
  char * * _262;
  int _264;
  struct FILE * stdin.486_265;
  int _266;
  int _267;
  struct FILE * stderr.487_268;
  char * _269;
  struct FILE * stderr.488_270;
  int FileListCount.490_272;
  long unsigned int _273;
  long unsigned int _274;
  char * * _275;
  int _277;
  int OutputStdOut.492_278;
  int QuietMode.493_279;
  struct FILE * stderr.494_280;
  struct FILE * stdout.496_281;
  int _282;
  int _283;
  struct FILE * stderr.497_284;
  char * _285;
  struct FILE * stderr.498_286;
  int FileListCount.500_288;
  long unsigned int _289;
  long unsigned int _290;
  char * * _291;
  int _293;
  int QuietMode.502_294;
  int QuietMode.506_298;
  struct FILE * stderr.507_299;
  double _300;
  int _301;
  int numCPU.508_302;
  int numCPU.509_303;
  struct FILE * stderr.510_304;
  struct FILE * stderr.511_305;
  int numCPU.512_306;
  int QuietMode.513_307;
  int numCPU.514_308;
  struct FILE * stderr.515_309;
  struct FILE * stderr.516_310;
  int BWTblockSize.517_311;
  struct FILE * stderr.518_312;
  struct FILE * stderr.519_313;
  int _314;
  struct FILE * stderr.520_315;
  int _316;
  struct FILE * stderr.521_317;
  int ChildThreadStackSize.522_318;
  int _320;
  struct FILE * stderr.524_321;
  int IgnoreTrailingGarbageFlag.526_322;
  struct FILE * stderr.527_323;
  struct FILE * stderr.528_324;
  int numCPU.529_325;
  struct FILE * stderr.530_327;
  int FileListCount.531_328;
  long unsigned int _331;
  long unsigned int _332;
  char * * _333;
  int QuietMode.533_334;
  int FileListCount.534_335;
  int _336;
  struct FILE * stderr.535_337;
  int _338;
  struct FILE * stderr.536_339;
  struct FILE * stderr.537_340;
  int QuietMode.538_341;
  struct FILE * stderr.539_342;
  int QuietMode.540_343;
  struct FILE * stderr.541_344;
  int _350;
  int * _351;
  int _352;
  struct FILE * stderr.543_353;
  struct FILE * stderr.544_354;
  struct FILE * stderr.545_355;
  long unsigned int _356;
  long unsigned int _357;
  long unsigned int _359;
  long unsigned int _360;
  struct FILE * stderr.546_362;
  struct FILE * stderr.547_363;
  struct FILE * stderr.548_364;
  struct FILE * stderr.550_366;
  struct FILE * stderr.551_367;
  long unsigned int _368;
  unsigned int _369;
  unsigned int _370;
  int _371;
  unsigned int _373;
  unsigned int _374;
  int _375;
  long unsigned int _378;
  unsigned int _379;
  unsigned int _380;
  int _381;
  struct FILE * stderr.554_388;
  struct FILE * stderr.555_389;
  unsigned char _390;
  unsigned char _391;
  char _393;
  struct FILE * stderr.556_394;
  struct FILE * stderr.557_395;
  long unsigned int _398;
  long unsigned int _401;
  struct FILE * stderr.561_402;
  struct FILE * stderr.562_403;
  int _405;
  struct FILE * stderr.563_406;
  struct FILE * stderr.564_407;
  unsigned int _408;
  unsigned int _409;
  struct FILE * stderr.565_410;
  struct FILE * stderr.566_411;
  struct FILE * stderr.567_414;
  struct FILE * stderr.568_415;
  long int _416;
  struct FILE * stderr.570_418;
  struct FILE * stderr.571_419;
  int _420;
  struct FILE * stderr.573_421;
  struct FILE * stderr.574_422;
  int OutputStdOut.577_423;
  struct FILE * stderr.578_427;
  struct FILE * stderr.579_428;
  int QuietMode.580_430;
  struct FILE * stderr.581_431;
  long int InFileSize.582_432;
  int numCPU.583_433;
  long int _434;
  long int _435;
  int QuietMode.584_436;
  int FileListCount.585_437;
  int _438;
  struct FILE * stderr.586_439;
  struct FILE * stderr.588_440;
  int OutputStdOut.589_441;
  struct FILE * stderr.590_443;
  struct FILE * stderr.591_444;
  char BWTblockSizeChar.592_445;
  int _446;
  struct FILE * stderr.593_447;
  int _448;
  long int InFileSize.594_449;
  long unsigned int InFileSize.595_450;
  struct FILE * stderr.596_451;
  int numCPU.597_452;
  long int InFileSize.598_453;
  int _455;
  long int InFileSize.600_456;
  long int _457;
  long int _459;
  long int _460;
  long int _462;
  int numCPU.602_463;
  int OutputStdOut.603_464;
  int OutputStdOut.604_468;
  bool _472;
  bool _473;
  bool _474;
  struct FILE * stderr.606_476;
  int QuietMode.607_477;
  struct FILE * stderr.608_478;
  struct FILE * stderr.609_479;
  int OutputStdOut.611_483;
  int _487;
  long unsigned int _488;
  int numCPU.614_491;
  int _492;
  int _493;
  long unsigned int _497;
  long unsigned int _498;
  long unsigned int _500;
  long unsigned int NumBufferedBlocksMax.618_501;
  int QuietMode.620_504;
  long unsigned int _508;
  long unsigned int _510;
  long unsigned int _511;
  long unsigned int _512;
  long unsigned int _513;
  struct FILE * stderr.624_514;
  int QuietMode.625_515;
  struct FILE * stderr.626_516;
  long unsigned int NumBufferedBlocksMax.627_517;
  int QuietMode.628_518;
  struct FILE * stderr.629_519;
  int _520;
  int numCPU.630_521;
  pthread_t * _522;
  long unsigned int _523;
  pthread_t * _524;
  long unsigned int TerminatorThread.631_526;
  long unsigned int TerminatorThread.632_528;
  long int InFileSize.633_529;
  long unsigned int output.635_530;
  long unsigned int TerminatorThread.636_533;
  bool _534;
  bool _535;
  bool _536;
  int QuietMode.637_537;
  struct FILE * stderr.638_538;
  int QuietMode.639_540;
  struct FILE * stderr.640_541;
  int _542;
  int numCPU.641_543;
  pthread_t * _544;
  long unsigned int _545;
  pthread_t * _546;
  long unsigned int TerminatorThread.642_548;
  long unsigned int TerminatorThread.643_550;
  int QuietMode.644_551;
  struct FILE * stderr.645_552;
  long int InFileSize.646_554;
  long unsigned int output.647_555;
  int * _556;
  int _557;
  struct FILE * stderr.648_558;
  bool _559;
  bool _560;
  int _561;
  int numCPU.649_562;
  pthread_t * _563;
  long unsigned int _564;
  pthread_t * _565;
  long unsigned int _566;
  int * _567;
  int _568;
  struct FILE * stderr.650_569;
  int OutputStdOut.652_571;
  bool _575;
  bool _576;
  bool _577;
  int OutputStdOut.655_578;
  int QuietMode.659_583;
  struct FILE * stderr.660_584;
  int OutputStdOut.661_585;
  int SIG_HANDLER_QUIT_SIGNAL.662_587;
  long unsigned int SignalHandlerThread.663_588;
  struct FILE * stderr.664_589;
  long unsigned int SignalHandlerThread.665_590;
  struct FILE * stderr.666_591;
  long unsigned int TerminatorThread.668_593;
  struct FILE * stderr.669_594;
  long int _595;
  double _596;
  long int _597;
  double _598;
  double _599;
  long int _600;
  double _601;
  long int _602;
  double _603;
  double _604;
  int QuietMode.670_605;
  struct FILE * stderr.671_606;
  int _719;
  const char * iftmp.525_720;
  const char * iftmp.587_722;
  struct ErrorContext * _849;
  sizetype _866;
  size_t iftmp.451_868;
  int _1047;
  struct queue * _1050;
  struct ErrorContext * _1060;
  long int _1075;
  unsigned char * _1079;
  unsigned char * _1082;
  unsigned char * _1085;
  bool retval.558_1103;
  int _1104;
  bool retval.559_1105;
  long int _1107;
  char * _1119;
  char * _1122;
  struct ErrorContext * _1128;
  bool retval.560_1148;
  int _1151;
  char * _1161;
  char * _1164;
  long int _1169;
  bool _1203;
  int _1231;
  int _1233;
  long int _1238;
  int _1242;
  long int _1244;
  int _1246;
  int _1258;
  int _1283;
  int _1285;
  struct ErrorContext * _1295;
  int _1304;
  struct ErrorContext * _1317;
  int _1328;
  int _1335;
  struct ErrorContext * _1338;
  int _1356;
  int _1361;
  int _1368;
  long int _1379;
  int _1381;
  int _1391;
  int _1415;
  int _1423;
  struct ErrorContext * _1426;
  int _1433;
  int _1441;
  int _1520;
  int _1547;
  int _1577;
  int _1584;
  char * _1591;
  long unsigned int _1593;
  long unsigned int _1594;
  long unsigned int _1595;
  long unsigned int _1596;
  char * _1599;
  char * _1601;
  char * _1603;
  char * _1605;
  long unsigned int _1607;
  char * _1608;
  char * _1610;
  char * _1612;
  char * _1613;
  char * _1614;
  char * _1615;
  char * _1616;
  char * _1617;
  char * _1618;
  char * _1619;
  char * _1620;
  char * _1621;
  char * _1622;
  char * _1623;
  char * _1624;
  char * _1625;
  char * _1626;
  char * _1628;
  char * _1629;
  char * _1630;
  struct outBuff * _1631;
  char * _1635;
  char * _1637;
  char * _1639;
  char * _1641;
  char * _1643;

  <bb 2> [100.00%]:
  bz2Header = "BZh91AY&SY";
  MEM[(struct  &)&outFilename] ={v} {CLOBBER};
  MEM[(struct  &)&outFilename] ={v} {CLOBBER};
  MEM[(struct _Alloc_hider *)&outFilename]._M_p = &outFilename.D.18739._M_local_buf;
  outFilename._M_string_length = 0;
  MEM[(char_type &)&outFilename + 16] = 0;
  stdinFile = "-";
  _849 = pbzip2::ErrorContext::getInstance ();

  <bb 3> [0.00%]:
  if (_849 == 0B)
    goto <bb 493>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 4> [0.00%]:
  gettimeofday (&tvStartTime, &tz);
  if (argc_852(D) <= 1)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 5> [0.00%]:
  OutputStdOut = 1;

  <bb 6> [0.00%]:
  # keep_684 = PHI <0(4), 1(5)>
  progName_856 = *argv_855(D);

  <bb 7> [0.00%]:
  # progName_295 = PHI <progName_856(6), progName_297(10)>
  # progNamePos_296 = PHI <progName_856(6), progNamePos_859(10)>
  _2 = *progNamePos_296;
  if (_2 == 0)
    goto <bb 11>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 8> [0.00%]:
  if (_2 == 47)
    goto <bb 9>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 9> [0.00%]:
  progName_858 = progNamePos_296 + 1;

  <bb 10> [0.00%]:
  # progName_297 = PHI <progName_295(8), progName_858(9)>
  progNamePos_859 = progNamePos_296 + 1;
  goto <bb 7>; [0.00%]

  <bb 11> [100.00%]:
  _1161 = strstr (progName_295, "unzip");
  if (_1161 != 0B)
    goto <bb 13>; [0.00%]
  else
    goto <bb 12>; [0.00%]

  <bb 12> [100.00%]:
  _1164 = strstr (progName_295, "UNZIP");
  if (_1164 != 0B)
    goto <bb 13>; [0.00%]
  else
    goto <bb 14>; [0.00%]

  <bb 13> [0.00%]:

  <bb 14> [100.00%]:
  # decompress_647 = PHI <0(12), 1(13)>
  _1119 = strstr (progName_295, "zcat");
  if (_1119 != 0B)
    goto <bb 16>; [0.00%]
  else
    goto <bb 15>; [0.00%]

  <bb 15> [100.00%]:
  _1122 = strstr (progName_295, "ZCAT");
  if (_1122 != 0B)
    goto <bb 16>; [0.00%]
  else
    goto <bb 17>; [0.00%]

  <bb 16> [0.00%]:
  OutputStdOut = 1;

  <bb 17> [0.00%]:
  # decompress_648 = PHI <decompress_647(15), 1(16)>
  # keep_685 = PHI <keep_684(15), 1(16)>
  _8 = strcmp (progName_295, "bzip2");
  if (_8 == 0)
    goto <bb 23>; [0.00%]
  else
    goto <bb 18>; [0.00%]

  <bb 18> [0.00%]:
  _9 = strcmp (progName_295, "BZIP2");
  if (_9 == 0)
    goto <bb 23>; [0.00%]
  else
    goto <bb 19>; [0.00%]

  <bb 19> [0.00%]:
  _10 = strcmp (progName_295, "bunzip2");
  if (_10 == 0)
    goto <bb 23>; [0.00%]
  else
    goto <bb 20>; [0.00%]

  <bb 20> [0.00%]:
  _11 = strcmp (progName_295, "BUNZIP2");
  if (_11 == 0)
    goto <bb 23>; [0.00%]
  else
    goto <bb 21>; [0.00%]

  <bb 21> [0.00%]:
  _12 = strcmp (progName_295, "bzcat");
  if (_12 == 0)
    goto <bb 23>; [0.00%]
  else
    goto <bb 22>; [0.00%]

  <bb 22> [0.00%]:
  _13 = strcmp (progName_295, "BZCAT");
  if (_13 == 0)
    goto <bb 23>; [0.00%]
  else
    goto <bb 24>; [0.00%]

  <bb 23> [0.00%]:
  IgnoreTrailingGarbageFlag = 1;

  <bb 24> [0.00%]:
  FileListCount = 0;
  _866 = (sizetype) argc_852(D);
  if (_866 <= 1152921504606846975)
    goto <bb 25>; [0.00%]
  else
    goto <bb 26>; [0.00%]

  <bb 25> [0.00%]:
  iftmp.451_868 = _866 * 8;
  _14 = operator new[] (iftmp.451_868, &nothrow);
  if (_14 == 0B)
    goto <bb 27>; [0.00%]
  else
    goto <bb 28>; [0.00%]

  <bb 26> [0.00%]:
  __cxa_throw_bad_array_new_length ();

  <bb 27> [100.00%]:
  stderr.453_16 = stderr;
  __fprintf_chk (stderr.453_16, 1, "pbzip2: *ERROR: Not enough memory!  Aborting...\n");
  goto <bb 493>; [100.00%]

  <bb 28> [0.00%]:
  NumBufferedBlocksMax = 0;
  _17 = detectCPUs ();
  numCPU = _17;

  <bb 29> [0.00%]:
  # useLoadAverage_608 = PHI <0(28), useLoadAverage_612(139)>
  # readEntireFile_618 = PHI <0(28), readEntireFile_622(139)>
  # blockSize_632 = PHI <900000(28), blockSize_635(139)>
  # maxMemory_639 = PHI <100000000(28), maxMemory_642(139)>
  # maxMemorySwitch_643 = PHI <0(28), maxMemorySwitch_646(139)>
  # decompress_649 = PHI <decompress_648(28), decompress_653(139)>
  # compress_654 = PHI <0(28), compress_658(139)>
  # testFile_659 = PHI <0(28), testFile_663(139)>
  # keep_686 = PHI <keep_685(28), keep_690(139)>
  # force_693 = PHI <0(28), force_697(139)>
  # i_699 = PHI <1(28), i_985(139)>
  _18 = (int) i_699;
  if (_18 >= argc_852(D))
    goto <bb 140>; [0.00%]
  else
    goto <bb 30>; [0.00%]

  <bb 30> [0.00%]:
  _19 = i_699 * 8;
  _20 = argv_855(D) + _19;
  _21 = *_20;
  _22 = *_21;
  if (_22 == 45)
    goto <bb 31>; [0.00%]
  else
    goto <bb 138>; [0.00%]

  <bb 31> [0.00%]:
  _27 = MEM[(char *)_21 + 1B];
  if (_27 == 0)
    goto <bb 32>; [0.00%]
  else
    goto <bb 33>; [0.00%]

  <bb 32> [0.00%]:
  FileListCount.455_31 = FileListCount;
  _32 = (long unsigned int) FileListCount.455_31;
  _33 = _32 * 8;
  _34 = _14 + _33;
  *_34 = _21;
  _37 = FileListCount.455_31 + 1;
  FileListCount = _37;
  // predicted unlikely by continue predictor.
  goto <bb 139>; [0.00%]

  <bb 33> [0.00%]:
  if (_27 == 45)
    goto <bb 34>; [0.00%]
  else
    goto <bb 66>; [0.00%]

  <bb 34> [0.00%]:
  _46 = strcmp (_21, "--best");
  if (_46 == 0)
    goto <bb 35>; [0.00%]
  else
    goto <bb 36>; [0.00%]

  <bb 35> [0.00%]:
  BWTblockSize = 9;
  goto <bb 65>; [0.00%]

  <bb 36> [0.00%]:
  _50 = strcmp (_21, "--decompress");
  if (_50 == 0)
    goto <bb 65>; [0.00%]
  else
    goto <bb 37>; [0.00%]

  <bb 37> [0.00%]:
  _54 = strcmp (_21, "--compress");
  if (_54 == 0)
    goto <bb 65>; [0.00%]
  else
    goto <bb 38>; [0.00%]

  <bb 38> [0.00%]:
  _58 = strcmp (_21, "--fast");
  if (_58 == 0)
    goto <bb 39>; [0.00%]
  else
    goto <bb 40>; [0.00%]

  <bb 39> [0.00%]:
  BWTblockSize = 1;
  goto <bb 65>; [0.00%]

  <bb 40> [0.00%]:
  _62 = strcmp (_21, "--force");
  if (_62 == 0)
    goto <bb 41>; [0.00%]
  else
    goto <bb 42>; [0.00%]

  <bb 41> [0.00%]:
  ForceOverwrite = 1;
  goto <bb 65>; [0.00%]

  <bb 42> [0.00%]:
  _66 = strcmp (_21, "--help");
  if (_66 == 0)
    goto <bb 43>; [0.00%]
  else
    goto <bb 44>; [0.00%]

  <bb 43> [0.00%]:
  _67 = *argv_855(D);
  usage (_67, "HELP");

  <bb 44> [0.00%]:
  _71 = strcmp (_21, "--keep");
  if (_71 == 0)
    goto <bb 65>; [0.00%]
  else
    goto <bb 45>; [0.00%]

  <bb 45> [0.00%]:
  _75 = strcmp (_21, "--license");
  if (_75 == 0)
    goto <bb 46>; [0.00%]
  else
    goto <bb 47>; [0.00%]

  <bb 46> [0.00%]:
  _76 = *argv_855(D);
  usage (_76, "HELP");

  <bb 47> [0.00%]:
  _80 = strcmp (_21, "--loadavg");
  if (_80 == 0)
    goto <bb 65>; [0.00%]
  else
    goto <bb 48>; [0.00%]

  <bb 48> [0.00%]:
  _84 = strcmp (_21, "--quiet");
  if (_84 == 0)
    goto <bb 49>; [0.00%]
  else
    goto <bb 50>; [0.00%]

  <bb 49> [0.00%]:
  QuietMode = 1;
  goto <bb 65>; [0.00%]

  <bb 50> [0.00%]:
  _88 = strcmp (_21, "--read");
  if (_88 == 0)
    goto <bb 65>; [0.00%]
  else
    goto <bb 51>; [0.00%]

  <bb 51> [0.00%]:
  _92 = strcmp (_21, "--stdout");
  if (_92 == 0)
    goto <bb 52>; [0.00%]
  else
    goto <bb 53>; [0.00%]

  <bb 52> [0.00%]:
  OutputStdOut = 1;
  goto <bb 65>; [0.00%]

  <bb 53> [0.00%]:
  _96 = strcmp (_21, "--test");
  if (_96 == 0)
    goto <bb 65>; [0.00%]
  else
    goto <bb 54>; [0.00%]

  <bb 54> [0.00%]:
  _100 = strcmp (_21, "--verbose");
  if (_100 == 0)
    goto <bb 55>; [0.00%]
  else
    goto <bb 56>; [0.00%]

  <bb 55> [0.00%]:
  QuietMode = 0;
  goto <bb 65>; [0.00%]

  <bb 56> [0.00%]:
  _104 = strcmp (_21, "--version");
  if (_104 == 0)
    goto <bb 57>; [0.00%]
  else
    goto <bb 59>; [0.00%]

  <bb 57> [0.00%]:
  banner ();

  <bb 58> [0.00%]:
  exit (0);

  <bb 59> [0.00%]:
  _108 = strcmp (_21, "--ignore-trailing-garbage");
  if (_108 == 0)
    goto <bb 60>; [0.00%]
  else
    goto <bb 61>; [0.00%]

  <bb 60> [0.00%]:
  IgnoreTrailingGarbageFlag = 1;
  goto <bb 65>; [0.00%]

  <bb 61> [0.00%]:
  _112 = strcmp (_21, "--ignore-trailing-garbage=1");
  if (_112 == 0)
    goto <bb 62>; [0.00%]
  else
    goto <bb 63>; [0.00%]

  <bb 62> [0.00%]:
  IgnoreTrailingGarbageFlag = 1;
  goto <bb 65>; [0.00%]

  <bb 63> [0.00%]:
  _116 = strcmp (_21, "--ignore-trailing-garbage=0");
  if (_116 == 0)
    goto <bb 64>; [0.00%]
  else
    goto <bb 65>; [0.00%]

  <bb 64> [0.00%]:
  IgnoreTrailingGarbageFlag = 0;

  <bb 65> [0.00%]:
  # useLoadAverage_609 = PHI <useLoadAverage_608(35), useLoadAverage_608(36), useLoadAverage_608(37), useLoadAverage_608(39), useLoadAverage_608(41), useLoadAverage_608(64), useLoadAverage_608(44), useLoadAverage_608(63), 1(47), useLoadAverage_608(49), useLoadAverage_608(50), useLoadAverage_608(52), useLoadAverage_608(53), useLoadAverage_608(55), useLoadAverage_608(60), useLoadAverage_608(62)>
  # readEntireFile_619 = PHI <readEntireFile_618(35), readEntireFile_618(36), readEntireFile_618(37), readEntireFile_618(39), readEntireFile_618(41), readEntireFile_618(64), readEntireFile_618(44), readEntireFile_618(63), readEntireFile_618(47), readEntireFile_618(49), 1(50), readEntireFile_618(52), readEntireFile_618(53), readEntireFile_618(55), readEntireFile_618(60), readEntireFile_618(62)>
  # decompress_650 = PHI <decompress_649(35), 1(36), decompress_649(37), decompress_649(39), decompress_649(41), decompress_649(64), decompress_649(44), decompress_649(63), decompress_649(47), decompress_649(49), decompress_649(50), decompress_649(52), decompress_649(53), decompress_649(55), decompress_649(60), decompress_649(62)>
  # compress_655 = PHI <compress_654(35), compress_654(36), 1(37), compress_654(39), compress_654(41), compress_654(64), compress_654(44), compress_654(63), compress_654(47), compress_654(49), compress_654(50), compress_654(52), compress_654(53), compress_654(55), compress_654(60), compress_654(62)>
  # testFile_660 = PHI <testFile_659(35), testFile_659(36), testFile_659(37), testFile_659(39), testFile_659(41), testFile_659(64), testFile_659(44), testFile_659(63), testFile_659(47), testFile_659(49), testFile_659(50), testFile_659(52), 1(53), testFile_659(55), testFile_659(60), testFile_659(62)>
  # keep_687 = PHI <keep_686(35), keep_686(36), keep_686(37), keep_686(39), keep_686(41), keep_686(64), 1(44), keep_686(63), keep_686(47), keep_686(49), keep_686(50), 1(52), keep_686(53), keep_686(55), keep_686(60), keep_686(62)>
  # force_694 = PHI <force_693(35), force_693(36), force_693(37), force_693(39), 1(41), force_693(64), force_693(44), force_693(63), force_693(47), force_693(49), force_693(50), force_693(52), force_693(53), force_693(55), force_693(60), force_693(62)>
  // predicted unlikely by continue predictor.
  goto <bb 139>; [0.00%]

  <bb 66> [0.00%]:
  # useLoadAverage_610 = PHI <useLoadAverage_608(33), useLoadAverage_611(137)>
  # readEntireFile_620 = PHI <readEntireFile_618(33), readEntireFile_621(137)>
  # blockSize_633 = PHI <blockSize_632(33), blockSize_634(137)>
  # maxMemory_640 = PHI <maxMemory_639(33), maxMemory_641(137)>
  # maxMemorySwitch_644 = PHI <maxMemorySwitch_643(33), maxMemorySwitch_645(137)>
  # decompress_651 = PHI <decompress_649(33), decompress_652(137)>
  # compress_656 = PHI <compress_654(33), compress_657(137)>
  # testFile_661 = PHI <testFile_659(33), testFile_662(137)>
  # keep_688 = PHI <keep_686(33), keep_689(137)>
  # force_695 = PHI <force_693(33), force_696(137)>
  # j_703 = PHI <1(33), j_961(137)>
  _119 = *_20;
  _120 = _119 + j_703;
  _121 = *_120;
  if (_121 == 0)
    goto <bb 139>; [0.00%]
  else
    goto <bb 67>; [0.00%]

  <bb 67> [0.00%]:
  switch (_121) <default: <L163> [0.00%], case 49: <L154> [0.00%], case 50: <L155> [0.00%], case 51: <L156> [0.00%], case 52: <L157> [0.00%], case 53: <L158> [0.00%], case 54: <L159> [0.00%], case 55: <L160> [0.00%], case 56: <L161> [0.00%], case 57: <L162> [0.00%], case 76: <L147> [0.00%], case 83: <L126> [0.00%], case 86: <L152> [0.00%], case 98: <L104> [0.00%], case 99: <L142> [0.00%], case 100: <L141> [0.00%], case 102: <L143> [0.00%], case 104: <L144> [0.00%], case 107: <L145> [0.00%], case 108: <L146> [0.00%], case 109: <L115> [0.00%], case 112: <L91> [0.00%], case 113: <L148> [0.00%], case 114: <L149> [0.00%], case 116: <L150> [0.00%], case 118: <L151> [0.00%], case 122: <L153> [0.00%]>

<L91> [100.00%]:
  k_885 = j_703 + 1;
  memcpy (&cmdLineTemp, "2", 2);

  <bb 69> [0.00%]:
  # cmdLineTempCount_614 = PHI <0(68), cmdLineTempCount_889(72)>
  # k_705 = PHI <k_885(68), k_888(72)>
  _131 = _119 + k_705;
  _132 = *_131;
  if (_132 == 0)
    goto <bb 73>; [0.00%]
  else
    goto <bb 70>; [0.00%]

  <bb 70> [0.00%]:
  if (k_705 > 2047)
    goto <bb 73>; [0.00%]
  else
    goto <bb 71>; [0.00%]

  <bb 71> [0.00%]:
  _138 = (unsigned char) _132;
  _139 = _138 + 208;
  if (_139 > 9)
    goto <bb 73>; [0.00%]
  else
    goto <bb 72>; [0.00%]

  <bb 72> [0.00%]:
  k_888 = k_705 + 1;
  cmdLineTempCount_889 = cmdLineTempCount_614 + 1;
  goto <bb 69>; [0.00%]

  <bb 73> [0.00%]:
  if (cmdLineTempCount_614 == 0)
    goto <bb 74>; [0.00%]
  else
    goto <bb 75>; [0.00%]

  <bb 74> [0.00%]:
  _140 = *argv_855(D);
  usage (_140, "Cannot parse -p argument");

  <bb 75> [100.00%]:
  _141 = (long unsigned int) cmdLineTempCount_614;
  _146 = _119 + k_885;
  __strncpy_chk (&cmdLineTemp, _146, _141, 2048);
  cmdLineTemp[cmdLineTempCount_614] = 0;
  _1379 = strtol (&cmdLineTemp, 0B, 10);
  _1283 = (int) _1379;
  numCPU = _1283;
  if (_1283 > 4096)
    goto <bb 76>; [0.00%]
  else
    goto <bb 77>; [0.00%]

  <bb 76> [100.00%]:
  stderr.458_149 = stderr;
  __fprintf_chk (stderr.458_149, 1, "pbzip2: *ERROR: Maximal number of supported processors is 4096!  Aborting...\n");
  goto <bb 493>; [100.00%]

  <bb 77> [0.00%]:
  if (_1283 <= 0)
    goto <bb 78>; [0.00%]
  else
    goto <bb 79>; [0.00%]

  <bb 78> [100.00%]:
  stderr.460_151 = stderr;
  __fprintf_chk (stderr.460_151, 1, "pbzip2: *ERROR: Minimum number of supported processors is 1!  Aborting...\n");
  goto <bb 493>; [100.00%]

  <bb 79> [0.00%]:
  j_894 = _141 + j_703;
  goto <bb 137> (<L163>); [0.00%]

<L104> [100.00%]:
  k_921 = j_703 + 1;
  memcpy (&cmdLineTemp, "9", 2);

  <bb 81> [0.00%]:
  # cmdLineTempCount_615 = PHI <0(80), cmdLineTempCount_926(84)>
  # k_706 = PHI <k_921(80), k_925(84)>
  _156 = _119 + k_706;
  _157 = *_156;
  if (_157 == 0)
    goto <bb 85>; [0.00%]
  else
    goto <bb 82>; [0.00%]

  <bb 82> [0.00%]:
  if (k_706 > 2047)
    goto <bb 85>; [0.00%]
  else
    goto <bb 83>; [0.00%]

  <bb 83> [0.00%]:
  _163 = (unsigned char) _157;
  _164 = _163 + 208;
  if (_164 > 9)
    goto <bb 85>; [0.00%]
  else
    goto <bb 84>; [0.00%]

  <bb 84> [0.00%]:
  k_925 = k_706 + 1;
  cmdLineTempCount_926 = cmdLineTempCount_615 + 1;
  goto <bb 81>; [0.00%]

  <bb 85> [0.00%]:
  if (cmdLineTempCount_615 == 0)
    goto <bb 86>; [0.00%]
  else
    goto <bb 87>; [0.00%]

  <bb 86> [0.00%]:
  _165 = *argv_855(D);
  usage (_165, "Cannot parse file block size");

  <bb 87> [100.00%]:
  _166 = (long unsigned int) cmdLineTempCount_615;
  _171 = _119 + k_921;
  __strncpy_chk (&cmdLineTemp, _171, _166, 2048);
  cmdLineTemp[cmdLineTempCount_615] = 0;
  _1244 = strtol (&cmdLineTemp, 0B, 10);
  _1233 = (int) _1244;
  blockSize_930 = _1233 * 100000;
  blockSize.461_173 = (unsigned int) blockSize_930;
  _174 = blockSize.461_173 + 4294867296;
  if (_174 > 999900000)
    goto <bb 88>; [0.00%]
  else
    goto <bb 89>; [0.00%]

  <bb 88> [100.00%]:
  stderr.462_175 = stderr;
  __fprintf_chk (stderr.462_175, 1, "pbzip2: *ERROR: File block size Min: 100k and Max: 1000000k!  Aborting...\n");
  goto <bb 493>; [100.00%]

  <bb 89> [0.00%]:
  j_931 = _166 + j_703;
  goto <bb 137> (<L163>); [0.00%]

<L115> [100.00%]:
  k_899 = j_703 + 1;
  memcpy (&cmdLineTemp, "1", 2);

  <bb 91> [0.00%]:
  # cmdLineTempCount_616 = PHI <0(90), cmdLineTempCount_904(94)>
  # k_707 = PHI <k_899(90), k_903(94)>
  _180 = _119 + k_707;
  _181 = *_180;
  if (_181 == 0)
    goto <bb 95>; [0.00%]
  else
    goto <bb 92>; [0.00%]

  <bb 92> [0.00%]:
  if (k_707 > 2047)
    goto <bb 95>; [0.00%]
  else
    goto <bb 93>; [0.00%]

  <bb 93> [0.00%]:
  _187 = (unsigned char) _181;
  _188 = _187 + 208;
  if (_188 > 9)
    goto <bb 95>; [0.00%]
  else
    goto <bb 94>; [0.00%]

  <bb 94> [0.00%]:
  k_903 = k_707 + 1;
  cmdLineTempCount_904 = cmdLineTempCount_616 + 1;
  goto <bb 91>; [0.00%]

  <bb 95> [0.00%]:
  if (cmdLineTempCount_616 == 0)
    goto <bb 96>; [0.00%]
  else
    goto <bb 97>; [0.00%]

  <bb 96> [0.00%]:
  _189 = *argv_855(D);
  usage (_189, "Cannot parse -m argument");

  <bb 97> [100.00%]:
  _190 = (long unsigned int) cmdLineTempCount_616;
  _195 = _119 + k_899;
  __strncpy_chk (&cmdLineTemp, _195, _190, 2048);
  cmdLineTemp[cmdLineTempCount_616] = 0;
  _1169 = strtol (&cmdLineTemp, 0B, 10);
  _1151 = (int) _1169;
  maxMemory_908 = _1151 * 1000000;
  maxMemory.463_197 = (unsigned int) maxMemory_908;
  _198 = maxMemory.463_197 + 4293967296;
  if (_198 > 1999000000)
    goto <bb 98>; [0.00%]
  else
    goto <bb 99>; [0.00%]

  <bb 98> [100.00%]:
  stderr.464_199 = stderr;
  __fprintf_chk (stderr.464_199, 1, "pbzip2: *ERROR: Memory usage size Min: 1MB and Max: 2000MB!  Aborting...\n");
  goto <bb 493>; [100.00%]

  <bb 99> [0.00%]:
  j_910 = _190 + j_703;
  goto <bb 137> (<L163>); [0.00%]

<L126> [100.00%]:
  k_936 = j_703 + 1;
  memcpy (&cmdLineTemp, "0", 2);
  ChildThreadStackSize = -1;

  <bb 101> [0.00%]:
  # cmdLineTempCount_617 = PHI <0(100), cmdLineTempCount_941(104)>
  # k_708 = PHI <k_936(100), k_940(104)>
  _204 = _119 + k_708;
  _205 = *_204;
  if (_205 == 0)
    goto <bb 105>; [0.00%]
  else
    goto <bb 102>; [0.00%]

  <bb 102> [0.00%]:
  if (k_708 > 2047)
    goto <bb 105>; [0.00%]
  else
    goto <bb 103>; [0.00%]

  <bb 103> [0.00%]:
  _211 = (unsigned char) _205;
  _212 = _211 + 208;
  if (_212 > 9)
    goto <bb 105>; [0.00%]
  else
    goto <bb 104>; [0.00%]

  <bb 104> [0.00%]:
  k_940 = k_708 + 1;
  cmdLineTempCount_941 = cmdLineTempCount_617 + 1;
  goto <bb 101>; [0.00%]

  <bb 105> [0.00%]:
  if (cmdLineTempCount_617 == 0)
    goto <bb 106>; [0.00%]
  else
    goto <bb 107>; [0.00%]

  <bb 106> [0.00%]:
  _213 = *argv_855(D);
  usage (_213, "Cannot parse -S argument");

  <bb 107> [100.00%]:
  _214 = (long unsigned int) cmdLineTempCount_617;
  _219 = _119 + k_936;
  __strncpy_chk (&cmdLineTemp, _219, _214, 2048);
  cmdLineTemp[cmdLineTempCount_617] = 0;
  _1107 = strtol (&cmdLineTemp, 0B, 10);
  _1104 = (int) _1107;
  _221 = _1104 * 1024;
  ChildThreadStackSize = _221;
  if (_221 < 0)
    goto <bb 108>; [0.00%]
  else
    goto <bb 109>; [0.00%]

  <bb 108> [100.00%]:
  stderr.467_224 = stderr;
  __fprintf_chk (stderr.467_224, 1, "pbzip2: *ERROR: Parsing -S: invalid stack size specified [%d]!  Ignoring...\n", _221);
  goto <bb 112>; [100.00%]

  <bb 109> [0.00%]:
  if (_221 <= 16383)
    goto <bb 110>; [0.00%]
  else
    goto <bb 112>; [0.00%]

  <bb 110> [100.00%]:
  stderr.470_227 = stderr;
  __fprintf_chk (stderr.470_227, 1, "pbzip2: *WARNING: Stack size %d bytes less than minumum - adjusting to %d bytes.\n", _221, 16384);

  <bb 111> [100.00%]:
  ChildThreadStackSize = 16384;

  <bb 112> [0.00%]:
  j_949 = _214 + j_703;
  goto <bb 137> (<L163>); [0.00%]

<L141> [0.00%]:
  goto <bb 137> (<L163>); [0.00%]

<L142> [0.00%]:
  OutputStdOut = 1;
  goto <bb 137> (<L163>); [0.00%]

<L143> [0.00%]:
  ForceOverwrite = 1;
  goto <bb 137> (<L163>); [0.00%]

<L144> [0.00%]:
  _229 = *argv_855(D);
  usage (_229, "HELP");

<L145> [0.00%]:
  goto <bb 137> (<L163>); [0.00%]

<L146> [0.00%]:
  goto <bb 137> (<L163>); [0.00%]

<L147> [0.00%]:
  banner ();

  <bb 120> [0.00%]:
  exit (0);

<L148> [0.00%]:
  QuietMode = 1;
  goto <bb 137> (<L163>); [0.00%]

<L149> [0.00%]:
  goto <bb 137> (<L163>); [0.00%]

<L150> [0.00%]:
  goto <bb 137> (<L163>); [0.00%]

<L151> [0.00%]:
  QuietMode = 0;
  goto <bb 137> (<L163>); [0.00%]

<L152> [0.00%]:
  banner ();

  <bb 126> [0.00%]:
  exit (0);

<L153> [0.00%]:
  goto <bb 137> (<L163>); [0.00%]

<L154> [0.00%]:
  BWTblockSize = 1;
  goto <bb 137> (<L163>); [0.00%]

<L155> [0.00%]:
  BWTblockSize = 2;
  goto <bb 137> (<L163>); [0.00%]

<L156> [0.00%]:
  BWTblockSize = 3;
  goto <bb 137> (<L163>); [0.00%]

<L157> [0.00%]:
  BWTblockSize = 4;
  goto <bb 137> (<L163>); [0.00%]

<L158> [0.00%]:
  BWTblockSize = 5;
  goto <bb 137> (<L163>); [0.00%]

<L159> [0.00%]:
  BWTblockSize = 6;
  goto <bb 137> (<L163>); [0.00%]

<L160> [0.00%]:
  BWTblockSize = 7;
  goto <bb 137> (<L163>); [0.00%]

<L161> [0.00%]:
  BWTblockSize = 8;
  goto <bb 137> (<L163>); [0.00%]

<L162> [0.00%]:
  BWTblockSize = 9;

  # useLoadAverage_611 = PHI <useLoadAverage_610(67), useLoadAverage_610(79), useLoadAverage_610(89), useLoadAverage_610(99), useLoadAverage_610(112), useLoadAverage_610(113), useLoadAverage_610(114), useLoadAverage_610(115), useLoadAverage_610(136), useLoadAverage_610(117), 1(118), useLoadAverage_610(121), useLoadAverage_610(122), useLoadAverage_610(123), useLoadAverage_610(124), useLoadAverage_610(127), useLoadAverage_610(128), useLoadAverage_610(129), useLoadAverage_610(130), useLoadAverage_610(131), useLoadAverage_610(132), useLoadAverage_610(133), useLoadAverage_610(134), useLoadAverage_610(135)>
  # readEntireFile_621 = PHI <readEntireFile_620(67), readEntireFile_620(79), readEntireFile_620(89), readEntireFile_620(99), readEntireFile_620(112), readEntireFile_620(113), readEntireFile_620(114), readEntireFile_620(115), readEntireFile_620(136), readEntireFile_620(117), readEntireFile_620(118), readEntireFile_620(121), 1(122), readEntireFile_620(123), readEntireFile_620(124), readEntireFile_620(127), readEntireFile_620(128), readEntireFile_620(129), readEntireFile_620(130), readEntireFile_620(131), readEntireFile_620(132), readEntireFile_620(133), readEntireFile_620(134), readEntireFile_620(135)>
  # blockSize_634 = PHI <blockSize_633(67), blockSize_633(79), blockSize_930(89), blockSize_633(99), blockSize_633(112), blockSize_633(113), blockSize_633(114), blockSize_633(115), blockSize_633(136), blockSize_633(117), blockSize_633(118), blockSize_633(121), blockSize_633(122), blockSize_633(123), blockSize_633(124), blockSize_633(127), blockSize_633(128), blockSize_633(129), blockSize_633(130), blockSize_633(131), blockSize_633(132), blockSize_633(133), blockSize_633(134), blockSize_633(135)>
  # maxMemory_641 = PHI <maxMemory_640(67), maxMemory_640(79), maxMemory_640(89), maxMemory_908(99), maxMemory_640(112), maxMemory_640(113), maxMemory_640(114), maxMemory_640(115), maxMemory_640(136), maxMemory_640(117), maxMemory_640(118), maxMemory_640(121), maxMemory_640(122), maxMemory_640(123), maxMemory_640(124), maxMemory_640(127), maxMemory_640(128), maxMemory_640(129), maxMemory_640(130), maxMemory_640(131), maxMemory_640(132), maxMemory_640(133), maxMemory_640(134), maxMemory_640(135)>
  # maxMemorySwitch_645 = PHI <maxMemorySwitch_644(67), maxMemorySwitch_644(79), maxMemorySwitch_644(89), 1(99), maxMemorySwitch_644(112), maxMemorySwitch_644(113), maxMemorySwitch_644(114), maxMemorySwitch_644(115), maxMemorySwitch_644(136), maxMemorySwitch_644(117), maxMemorySwitch_644(118), maxMemorySwitch_644(121), maxMemorySwitch_644(122), maxMemorySwitch_644(123), maxMemorySwitch_644(124), maxMemorySwitch_644(127), maxMemorySwitch_644(128), maxMemorySwitch_644(129), maxMemorySwitch_644(130), maxMemorySwitch_644(131), maxMemorySwitch_644(132), maxMemorySwitch_644(133), maxMemorySwitch_644(134), maxMemorySwitch_644(135)>
  # decompress_652 = PHI <decompress_651(67), decompress_651(79), decompress_651(89), decompress_651(99), decompress_651(112), 1(113), decompress_651(114), decompress_651(115), decompress_651(136), decompress_651(117), decompress_651(118), decompress_651(121), decompress_651(122), decompress_651(123), decompress_651(124), decompress_651(127), decompress_651(128), decompress_651(129), decompress_651(130), decompress_651(131), decompress_651(132), decompress_651(133), decompress_651(134), decompress_651(135)>
  # compress_657 = PHI <compress_656(67), compress_656(79), compress_656(89), compress_656(99), compress_656(112), compress_656(113), compress_656(114), compress_656(115), compress_656(136), compress_656(117), compress_656(118), compress_656(121), compress_656(122), compress_656(123), compress_656(124), 1(127), compress_656(128), compress_656(129), compress_656(130), compress_656(131), compress_656(132), compress_656(133), compress_656(134), compress_656(135)>
  # testFile_662 = PHI <testFile_661(67), testFile_661(79), testFile_661(89), testFile_661(99), testFile_661(112), testFile_661(113), testFile_661(114), testFile_661(115), testFile_661(136), testFile_661(117), testFile_661(118), testFile_661(121), testFile_661(122), 1(123), testFile_661(124), testFile_661(127), testFile_661(128), testFile_661(129), testFile_661(130), testFile_661(131), testFile_661(132), testFile_661(133), testFile_661(134), testFile_661(135)>
  # keep_689 = PHI <keep_688(67), keep_688(79), keep_688(89), keep_688(99), keep_688(112), keep_688(113), 1(114), keep_688(115), keep_688(136), 1(117), keep_688(118), keep_688(121), keep_688(122), keep_688(123), keep_688(124), keep_688(127), keep_688(128), keep_688(129), keep_688(130), keep_688(131), keep_688(132), keep_688(133), keep_688(134), keep_688(135)>
  # force_696 = PHI <force_695(67), force_695(79), force_695(89), force_695(99), force_695(112), force_695(113), force_695(114), 1(115), force_695(136), force_695(117), force_695(118), force_695(121), force_695(122), force_695(123), force_695(124), force_695(127), force_695(128), force_695(129), force_695(130), force_695(131), force_695(132), force_695(133), force_695(134), force_695(135)>
  # j_704 = PHI <j_703(67), j_894(79), j_931(89), j_910(99), j_949(112), j_703(113), j_703(114), j_703(115), j_703(136), j_703(117), j_703(118), j_703(121), j_703(122), j_703(123), j_703(124), j_703(127), j_703(128), j_703(129), j_703(130), j_703(131), j_703(132), j_703(133), j_703(134), j_703(135)>
<L163> [0.00%]:
  j_961 = j_704 + 1;
  goto <bb 66>; [0.00%]

  <bb 138> [0.00%]:
  FileListCount.472_233 = FileListCount;
  _234 = (long unsigned int) FileListCount.472_233;
  _235 = _234 * 8;
  _236 = _14 + _235;
  *_236 = _21;
  _239 = FileListCount.472_233 + 1;
  FileListCount = _239;

  <bb 139> [0.00%]:
  # useLoadAverage_612 = PHI <useLoadAverage_608(32), useLoadAverage_609(65), useLoadAverage_610(66), useLoadAverage_608(138)>
  # readEntireFile_622 = PHI <readEntireFile_618(32), readEntireFile_619(65), readEntireFile_620(66), readEntireFile_618(138)>
  # blockSize_635 = PHI <blockSize_632(32), blockSize_632(65), blockSize_633(66), blockSize_632(138)>
  # maxMemory_642 = PHI <maxMemory_639(32), maxMemory_639(65), maxMemory_640(66), maxMemory_639(138)>
  # maxMemorySwitch_646 = PHI <maxMemorySwitch_643(32), maxMemorySwitch_643(65), maxMemorySwitch_644(66), maxMemorySwitch_643(138)>
  # decompress_653 = PHI <decompress_649(32), decompress_650(65), decompress_651(66), decompress_649(138)>
  # compress_658 = PHI <compress_654(32), compress_655(65), compress_656(66), compress_654(138)>
  # testFile_663 = PHI <testFile_659(32), testFile_660(65), testFile_661(66), testFile_659(138)>
  # keep_690 = PHI <keep_686(32), keep_687(65), keep_688(66), keep_686(138)>
  # force_697 = PHI <force_693(32), force_694(65), force_695(66), force_693(138)>
  i_985 = i_699 + 1;
  goto <bb 29>; [0.00%]

  <bb 140> [0.00%]:
  BWTblockSize.474_240 = BWTblockSize;
  _241 = (unsigned char) BWTblockSize.474_240;
  _242 = _241 + 48;
  Bz2HeaderZero[3] = _242;
  _244 = (char) _242;
  bz2Header[3] = _244;
  _245 = compress_654 == 1;
  _246 = decompress_649 == 1;
  _247 = _245 & _246;
  if (_247 != 0)
    goto <bb 141>; [0.00%]
  else
    goto <bb 143>; [0.00%]

  <bb 141> [100.00%]:
  stderr.475_248 = stderr;
  __fprintf_chk (stderr.475_248, 1, "pbzip2: *ERROR: Can\'t compress and uncompress data at same time.  Aborting!\n");

  <bb 142> [100.00%]:
  _249 = *argv_855(D);
  stderr.476_250 = stderr;
  __fprintf_chk (stderr.476_250, 1, "pbzip2: For help type: %s -h\n", _249);
  goto <bb 493>; [100.00%]

  <bb 143> [0.00%]:
  FileListCount.477_251 = FileListCount;
  if (FileListCount.477_251 == 0)
    goto <bb 144>; [0.00%]
  else
    goto <bb 162>; [0.00%]

  <bb 144> [0.00%]:
  if (testFile_659 == 1)
    goto <bb 145>; [0.00%]
  else
    goto <bb 149>; [0.00%]

  <bb 145> [0.00%]:
  stdin.479_252 = stdin;
  _253 = fileno (stdin.479_252);
  _254 = isatty (_253);
  if (_254 != 0)
    goto <bb 146>; [0.00%]
  else
    goto <bb 148>; [0.00%]

  <bb 146> [100.00%]:
  stderr.480_255 = stderr;
  __fprintf_chk (stderr.480_255, 1, "pbzip2: *ERROR: Won\'t read compressed data from terminal.  Aborting!\n");

  <bb 147> [100.00%]:
  _256 = *argv_855(D);
  stderr.481_257 = stderr;
  __fprintf_chk (stderr.481_257, 1, "pbzip2: For help type: %s -h\n", _256);
  goto <bb 493>; [100.00%]

  <bb 148> [0.00%]:
  FileListCount.483_259 = FileListCount;
  _260 = (long unsigned int) FileListCount.483_259;
  _261 = _260 * 8;
  _262 = _14 + _261;
  *_262 = &stdinFile;
  _264 = FileListCount.483_259 + 1;
  FileListCount = _264;
  goto <bb 162>; [0.00%]

  <bb 149> [0.00%]:
  if (decompress_649 == 1)
    goto <bb 150>; [0.00%]
  else
    goto <bb 154>; [0.00%]

  <bb 150> [0.00%]:
  stdin.486_265 = stdin;
  _266 = fileno (stdin.486_265);
  _267 = isatty (_266);
  if (_267 != 0)
    goto <bb 151>; [0.00%]
  else
    goto <bb 153>; [0.00%]

  <bb 151> [100.00%]:
  stderr.487_268 = stderr;
  __fprintf_chk (stderr.487_268, 1, "pbzip2: *ERROR: Won\'t read compressed data from terminal.  Aborting!\n");

  <bb 152> [100.00%]:
  _269 = *argv_855(D);
  stderr.488_270 = stderr;
  __fprintf_chk (stderr.488_270, 1, "pbzip2: For help type: %s -h\n", _269);
  goto <bb 493>; [100.00%]

  <bb 153> [0.00%]:
  OutputStdOut = 1;
  FileListCount.490_272 = FileListCount;
  _273 = (long unsigned int) FileListCount.490_272;
  _274 = _273 * 8;
  _275 = _14 + _274;
  *_275 = &stdinFile;
  _277 = FileListCount.490_272 + 1;
  FileListCount = _277;
  goto <bb 162>; [0.00%]

  <bb 154> [0.00%]:
  OutputStdOut.492_278 = OutputStdOut;
  if (OutputStdOut.492_278 == 0)
    goto <bb 155>; [0.00%]
  else
    goto <bb 158>; [0.00%]

  <bb 155> [0.00%]:
  QuietMode.493_279 = QuietMode;
  if (QuietMode.493_279 != 1)
    goto <bb 156>; [0.00%]
  else
    goto <bb 157>; [0.00%]

  <bb 156> [100.00%]:
  stderr.494_280 = stderr;
  __fprintf_chk (stderr.494_280, 1, "pbzip2: Assuming input data coming from stdin...\n\n");

  <bb 157> [0.00%]:
  OutputStdOut = 1;

  <bb 158> [0.00%]:
  # keep_691 = PHI <keep_686(154), 1(157)>
  stdout.496_281 = stdout;
  _282 = fileno (stdout.496_281);
  _283 = isatty (_282);
  if (_283 != 0)
    goto <bb 159>; [0.00%]
  else
    goto <bb 161>; [0.00%]

  <bb 159> [100.00%]:
  stderr.497_284 = stderr;
  __fprintf_chk (stderr.497_284, 1, "pbzip2: *ERROR: Won\'t write compressed data to terminal.  Aborting!\n");

  <bb 160> [100.00%]:
  _285 = *argv_855(D);
  stderr.498_286 = stderr;
  __fprintf_chk (stderr.498_286, 1, "pbzip2: For help type: %s -h\n", _285);
  goto <bb 493>; [100.00%]

  <bb 161> [0.00%]:
  FileListCount.500_288 = FileListCount;
  _289 = (long unsigned int) FileListCount.500_288;
  _290 = _289 * 8;
  _291 = _14 + _290;
  *_291 = &stdinFile;
  _293 = FileListCount.500_288 + 1;
  FileListCount = _293;

  <bb 162> [0.00%]:
  # keep_692 = PHI <keep_686(143), 1(153), keep_686(148), keep_691(161)>
  QuietMode.502_294 = QuietMode;
  if (QuietMode.502_294 != 1)
    goto <bb 163>; [0.00%]
  else
    goto <bb 164>; [0.00%]

  <bb 163> [0.00%]:
  banner ();

  <bb 164> [0.00%]:
  if (useLoadAverage_608 == 1)
    goto <bb 165>; [0.00%]
  else
    goto <bb 172>; [0.00%]

  <bb 165> [0.00%]:
  ret_1019 = getloadavg (&loadAvgArray, 3);
  if (ret_1019 != 3)
    goto <bb 166>; [0.00%]
  else
    goto <bb 168>; [0.00%]

  <bb 166> [0.00%]:
  QuietMode.506_298 = QuietMode;
  if (QuietMode.506_298 != 1)
    goto <bb 167>; [0.00%]
  else
    goto <bb 172>; [0.00%]

  <bb 167> [100.00%]:
  stderr.507_299 = stderr;
  __fprintf_chk (stderr.507_299, 1, "pbzip2:  *WARNING: Could not get load average!  Using requested processors...\n");
  goto <bb 172>; [100.00%]

  <bb 168> [0.00%]:
  loadAverage_1020 = loadAvgArray[0];
  _300 = loadAverage_1020 + 5.0e-1;
  _301 = (int) _300;
  numCPUidle_1021 = _17 - _301;
  numCPU.508_302 = numCPU;
  if (numCPU.508_302 > numCPUidle_1021)
    goto <bb 169>; [0.00%]
  else
    goto <bb 170>; [0.00%]

  <bb 169> [0.00%]:
  numCPU = numCPUidle_1021;

  <bb 170> [0.00%]:
  numCPU.509_303 = numCPU;
  if (numCPU.509_303 <= 0)
    goto <bb 171>; [0.00%]
  else
    goto <bb 172>; [0.00%]

  <bb 171> [0.00%]:
  numCPU = 1;

  <bb 172> [0.00%]:
  # loadAverage_607 = PHI <0.0(164), loadAverage_1020(170), 0.0(167), 0.0(166), loadAverage_1020(171)>
  # useLoadAverage_613 = PHI <useLoadAverage_608(164), useLoadAverage_608(170), 0(167), 0(166), useLoadAverage_608(171)>
  initChildThreadAttributes ();

  <bb 173> [0.00%]:
  sigInFilename = 0B;
  sigOutFilename = 0B;
  ret_1031 = setupSignalHandling ();
  if (ret_1031 != 0)
    goto <bb 174>; [0.00%]
  else
    goto <bb 175>; [0.00%]

  <bb 174> [100.00%]:
  stderr.510_304 = stderr;
  __fprintf_chk (stderr.510_304, 1, "pbzip2: *ERROR: Can\'t setup signal handling [%d]. Aborting!\n", ret_1031);
  goto <bb 493>; [100.00%]

  <bb 175> [0.00%]:
  ret_1033 = setupTerminator ();
  if (ret_1033 != 0)
    goto <bb 176>; [0.00%]
  else
    goto <bb 177>; [0.00%]

  <bb 176> [100.00%]:
  stderr.511_305 = stderr;
  __fprintf_chk (stderr.511_305, 1, "pbzip2: *ERROR: Can\'t setup terminator thread [%d]. Aborting!\n", ret_1033);
  goto <bb 493>; [100.00%]

  <bb 177> [0.00%]:
  numCPU.512_306 = numCPU;
  if (numCPU.512_306 <= 0)
    goto <bb 178>; [0.00%]
  else
    goto <bb 179>; [0.00%]

  <bb 178> [0.00%]:
  numCPU = 1;

  <bb 179> [0.00%]:
  QuietMode.513_307 = QuietMode;
  if (QuietMode.513_307 != 1)
    goto <bb 180>; [0.00%]
  else
    goto <bb 197>; [0.00%]

  <bb 180> [0.00%]:
  if (testFile_659 != 1)
    goto <bb 181>; [0.00%]
  else
    goto <bb 196>; [0.00%]

  <bb 181> [100.00%]:
  numCPU.514_308 = numCPU;
  stderr.515_309 = stderr;
  __fprintf_chk (stderr.515_309, 1, "\n         # CPUs: %d\n", numCPU.514_308);

  <bb 182> [100.00%]:
  if (useLoadAverage_613 == 1)
    goto <bb 183>; [0.00%]
  else
    goto <bb 184>; [0.00%]

  <bb 183> [100.00%]:
  stderr.516_310 = stderr;
  __fprintf_chk (stderr.516_310, 1, "   Load Average: %.2f\n", loadAverage_607);

  <bb 184> [0.00%]:
  if (decompress_649 != 1)
    goto <bb 185>; [0.00%]
  else
    goto <bb 189>; [0.00%]

  <bb 185> [100.00%]:
  BWTblockSize.517_311 = BWTblockSize;
  stderr.518_312 = stderr;
  __fprintf_chk (stderr.518_312, 1, " BWT Block Size: %d00 KB\n", BWTblockSize.517_311);

  <bb 186> [100.00%]:
  if (blockSize_632 <= 99999)
    goto <bb 187>; [0.00%]
  else
    goto <bb 188>; [0.00%]

  <bb 187> [100.00%]:
  stderr.519_313 = stderr;
  __fprintf_chk (stderr.519_313, 1, "File Block Size: %d bytes\n", blockSize_632);
  goto <bb 189>; [100.00%]

  <bb 188> [100.00%]:
  _314 = blockSize_632 / 1000;
  stderr.520_315 = stderr;
  __fprintf_chk (stderr.520_315, 1, "File Block Size: %d KB\n", _314);

  <bb 189> [100.00%]:
  _316 = maxMemory_639 / 1000000;
  stderr.521_317 = stderr;
  __fprintf_chk (stderr.521_317, 1, " Maximum Memory: %d MB\n", _316);

  <bb 190> [100.00%]:
  ChildThreadStackSize.522_318 = ChildThreadStackSize;
  if (ChildThreadStackSize.522_318 > 0)
    goto <bb 191>; [0.00%]
  else
    goto <bb 192>; [0.00%]

  <bb 191> [100.00%]:
  _320 = ChildThreadStackSize.522_318 / 1024;
  stderr.524_321 = stderr;
  __fprintf_chk (stderr.524_321, 1, "     Stack Size: %d KB\n", _320);

  <bb 192> [0.00%]:
  if (decompress_649 == 1)
    goto <bb 193>; [0.00%]
  else
    goto <bb 196>; [0.00%]

  <bb 193> [0.00%]:
  IgnoreTrailingGarbageFlag.526_322 = IgnoreTrailingGarbageFlag;
  if (IgnoreTrailingGarbageFlag.526_322 == 1)
    goto <bb 195>; [0.00%]
  else
    goto <bb 194>; [0.00%]

  <bb 194> [0.00%]:

  <bb 195> [100.00%]:
  # iftmp.525_720 = PHI <"on"(193), "off"(194)>
  stderr.527_323 = stderr;
  __fprintf_chk (stderr.527_323, 1, " Ignore Trailing Garbage: %s\n", iftmp.525_720);

  <bb 196> [100.00%]:
  stderr.528_324 = stderr;
  __fprintf_chk (stderr.528_324, 1, "-------------------------------------------\n");

  <bb 197> [0.00%]:
  _1047 = mutexesInit ();

  <bb 198> [0.00%]:
  if (_1047 != 0)
    goto <bb 493>; [0.00%]
  else
    goto <bb 199>; [0.00%]

  <bb 199> [0.00%]:
  numCPU.529_325 = numCPU;
  _1050 = queueInit (numCPU.529_325);

  <bb 200> [0.00%]:
  FifoQueue = _1050;
  if (_1050 == 0B)
    goto <bb 201>; [0.00%]
  else
    goto <bb 202>; [0.00%]

  <bb 201> [100.00%]:
  stderr.530_327 = stderr;
  __fprintf_chk (stderr.530_327, 1, "pbzip2: *ERROR: Queue Init failed.  Aborting...\n");
  goto <bb 493>; [100.00%]

  <bb 202> [0.00%]:
  # zeroByteFile_623 = PHI <0(200), zeroByteFile_627(469)>
  # blockSize_636 = PHI <blockSize_632(200), blockSize_638(469)>
  # errLevel_664 = PHI <0(200), errLevel_675(469)>
  # noThreads_677 = PHI <0(200), noThreads_683(469)>
  # fileLoop_698 = PHI <0(200), fileLoop_1421(469)>
  FileListCount.531_328 = FileListCount;
  if (FileListCount.531_328 <= fileLoop_698)
    goto <bb 470>; [0.00%]
  else
    goto <bb 203>; [0.00%]

  <bb 203> [0.00%]:
  producerDone = 0;
  InFileSize = 0;
  NumBlocks = 0;
  _1060 = pbzip2::ErrorContext::getInstance ();

  <bb 204> [0.00%]:
  pbzip2::ErrorContext::reset (_1060);

  <bb 205> [0.00%]:
  _331 = (long unsigned int) fileLoop_698;
  _332 = _331 * 8;
  _333 = _14 + _332;
  InFilename_1062 = *_333;
  if (testFile_659 != 0)
    goto <bb 206>; [0.00%]
  else
    goto <bb 219>; [0.00%]

  <bb 206> [0.00%]:
  QuietMode.533_334 = QuietMode;
  if (QuietMode.533_334 != 1)
    goto <bb 207>; [0.00%]
  else
    goto <bb 211>; [0.00%]

  <bb 207> [100.00%]:
  FileListCount.534_335 = FileListCount;
  _336 = fileLoop_698 + 1;
  stderr.535_337 = stderr;
  __fprintf_chk (stderr.535_337, 1, "      File #: %d of %d\n", _336, FileListCount.534_335);

  <bb 208> [100.00%]:
  _338 = strcmp (InFilename_1062, "-");
  if (_338 != 0)
    goto <bb 209>; [0.00%]
  else
    goto <bb 210>; [0.00%]

  <bb 209> [100.00%]:
  stderr.536_339 = stderr;
  __fprintf_chk (stderr.536_339, 1, "     Testing: %s\n", InFilename_1062);
  goto <bb 211>; [100.00%]

  <bb 210> [100.00%]:
  stderr.537_340 = stderr;
  __fprintf_chk (stderr.537_340, 1, "     Testing: <stdin>\n");

  <bb 211> [0.00%]:
  _1415 = testCompressedData (InFilename_1062);

  <bb 212> [0.00%]:
  if (_1415 > 0)
    goto <bb 493>; [0.00%]
  else
    goto <bb 213>; [0.00%]

  <bb 213> [0.00%]:
  if (_1415 == 0)
    goto <bb 214>; [0.00%]
  else
    goto <bb 216>; [0.00%]

  <bb 214> [0.00%]:
  QuietMode.538_341 = QuietMode;
  if (QuietMode.538_341 != 1)
    goto <bb 215>; [0.00%]
  else
    goto <bb 216>; [0.00%]

  <bb 215> [100.00%]:
  stderr.539_342 = stderr;
  __fprintf_chk (stderr.539_342, 1, "        Test: OK\n");

  <bb 216> [0.00%]:
  # errLevel_665 = PHI <errLevel_664(215), 2(213), errLevel_664(214)>
  QuietMode.540_343 = QuietMode;
  if (QuietMode.540_343 != 1)
    goto <bb 217>; [0.00%]
  else
    goto <bb 218>; [0.00%]

  <bb 217> [100.00%]:
  stderr.541_344 = stderr;
  __fprintf_chk (stderr.541_344, 1, "-------------------------------------------\n");

  <bb 218> [0.00%]:
  // predicted unlikely by continue predictor.
  goto <bb 469>; [0.00%]

  <bb 219> [0.00%]:
  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (&D.39833, InFilename_1062, &D.39832);

  <bb 220> [100.00%]:
  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator= (&outFilename, &D.39833);
  _1591 = D.39833._M_dataplus._M_p;
  if (&D.39833.D.18739._M_local_buf != _1591)
    goto <bb 221>; [57.44%]
  else
    goto <bb 222>; [42.56%]

  <bb 221> [57.44%]:
  operator delete (_1591);

  <bb 222> [100.00%]:
  D.39833 ={v} {CLOBBER};
  D.39832 ={v} {CLOBBER};
  if (decompress_649 == 1)
    goto <bb 223>; [0.00%]
  else
    goto <bb 266>; [0.00%]

  <bb 223> [0.00%]:
  _350 = strcmp (InFilename_1062, "-");
  if (_350 != 0)
    goto <bb 224>; [0.00%]
  else
    goto <bb 266>; [0.00%]

  <bb 224> [100.00%]:
  _1520 = *open64 (InFilename_1062, 0);

  <bb 225> [100.00%]:
  if (_1520 == -1)
    goto <bb 226>; [0.00%]
  else
    goto <bb 230>; [0.00%]

  <bb 226> [0.00%]:
  _351 = __errno_location ();
  _352 = *_351;
  stderr.543_353 = stderr;
  pbzip2::ErrorContext::printErrnoMsg (stderr.543_353, _352);

  <bb 227> [100.00%]:
  stderr.544_354 = stderr;
  __fprintf_chk (stderr.544_354, 1, "pbzip2: *ERROR: File [%s] NOT found!  Skipping...\n", InFilename_1062);

  <bb 228> [100.00%]:
  stderr.545_355 = stderr;
  __fprintf_chk (stderr.545_355, 1, "-------------------------------------------\n");

  <bb 229> [100.00%]:
  // predicted unlikely by continue predictor.
  goto <bb 265>; [0.00%]

  <bb 230> [100.00%]:
  memset (&tmpBuff, 0, 50);
  _356 = strlen (&bz2Header);
  _357 = _356 + 1;
  _1075 = do_read (_1520, &tmpBuff, _357);

  <bb 231> [0.00%]:
  size_1076 = (size_t) _1075;
  do_close (_1520);

  <bb 232> [0.00%]:
  if (size_1076 == 18446744073709551615)
    goto <bb 234>; [0.00%]
  else
    goto <bb 233>; [0.00%]

  <bb 233> [0.00%]:
  _359 = strlen (&bz2Header);
  _360 = _359 + 1;
  if (_360 > size_1076)
    goto <bb 234>; [0.00%]
  else
    goto <bb 239>; [0.00%]

  <bb 234> [0.00%]:
  _1128 = pbzip2::ErrorContext::getInstance ();

  <bb 235> [0.00%]:
  stderr.546_362 = stderr;
  pbzip2::ErrorContext::printErrorMessages (_1128, stderr.546_362);

  <bb 236> [100.00%]:
  stderr.547_363 = stderr;
  __fprintf_chk (stderr.547_363, 1, "pbzip2: *ERROR: File [%s] is NOT a valid bzip2!  Skipping...\n", InFilename_1062);

  <bb 237> [100.00%]:
  stderr.548_364 = stderr;
  __fprintf_chk (stderr.548_364, 1, "-------------------------------------------\n");

  <bb 238> [100.00%]:
  // predicted unlikely by continue predictor.
  goto <bb 265>; [0.00%]

  <bb 239> [0.00%]:
  _1079 = memstr<unsigned char*, char*> (&tmpBuff, 4, &bz2Header, 3);
  if (_1079 == 0B)
    goto <bb 240>; [0.00%]
  else
    goto <bb 243>; [0.00%]

  <bb 240> [100.00%]:
  stderr.550_366 = stderr;
  __fprintf_chk (stderr.550_366, 1, "pbzip2: *ERROR: File [%s] is NOT a valid bzip2!  Skipping...\n", InFilename_1062);

  <bb 241> [100.00%]:
  stderr.551_367 = stderr;
  __fprintf_chk (stderr.551_367, 1, "-------------------------------------------\n");

  <bb 242> [100.00%]:
  // predicted unlikely by continue predictor.
  goto <bb 265>; [0.00%]

  <bb 243> [0.00%]:
  _368 = strlen (&bz2Header);
  _369 = (unsigned int) _368;
  _370 = _369 + 4294967292;
  _371 = (int) _370;
  _373 = (unsigned int) _1075;
  _374 = _373 + 4294967292;
  _375 = (int) _374;
  _1082 = memstr<unsigned char*, char*> (&MEM[(void *)&tmpBuff + 4B], _375, &MEM[(void *)&bz2Header + 4B], _371);
  if (_1082 == 0B)
    goto <bb 244>; [0.00%]
  else
    goto <bb 248>; [0.00%]

  <bb 244> [0.00%]:
  _378 = strlen (&bz2Header);
  _379 = (unsigned int) _378;
  _380 = _379 + 4294967292;
  _381 = (int) _380;
  _1085 = memstr<unsigned char*, unsigned char*> (&MEM[(void *)&tmpBuff + 4B], _375, &MEM[(void *)&Bz2HeaderZero + 4B], _381);
  if (_1085 == 0B)
    goto <bb 245>; [0.00%]
  else
    goto <bb 248>; [0.00%]

  <bb 245> [100.00%]:
  stderr.554_388 = stderr;
  __fprintf_chk (stderr.554_388, 1, "pbzip2: *ERROR: File [%s] is NOT a valid bzip2!  Skipping...\n", InFilename_1062);

  <bb 246> [100.00%]:
  stderr.555_389 = stderr;
  __fprintf_chk (stderr.555_389, 1, "-------------------------------------------\n");

  <bb 247> [100.00%]:
  // predicted unlikely by continue predictor.
  goto <bb 265>; [0.00%]

  <bb 248> [0.00%]:
  _390 = tmpBuff[3];
  _391 = _390 + 207;
  if (_391 <= 8)
    goto <bb 249>; [0.00%]
  else
    goto <bb 250>; [0.00%]

  <bb 249> [100.00%]:
  _393 = (char) _390;
  BWTblockSizeChar = _393;
  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (&bz2Tail, ".bz2", &D.39850);
  goto <bb 253>; [0.00%]

  <bb 250> [100.00%]:
  stderr.556_394 = stderr;
  __fprintf_chk (stderr.556_394, 1, "pbzip2: *ERROR: File [%s] is NOT a valid bzip2!  Skipping...\n", InFilename_1062);

  <bb 251> [100.00%]:
  stderr.557_395 = stderr;
  __fprintf_chk (stderr.557_395, 1, "-------------------------------------------\n");

  <bb 252> [100.00%]:
  // predicted unlikely by continue predictor.
  goto <bb 265>; [0.00%]

  <bb 253> [0.00%]:
  D.39850 ={v} {CLOBBER};
  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (&tbz2Tail, ".tbz2", &D.39853);

  <bb 254> [0.00%]:
  D.39853 ={v} {CLOBBER};
  retval.558_1103 = ends_with_icase<char> (&outFilename, &bz2Tail);
  if (retval.558_1103 != 0)
    goto <bb 255>; [0.00%]
  else
    goto <bb 256>; [0.00%]

  <bb 255> [100.00%]:
  _1594 = outFilename._M_string_length;
  _1593 = bz2Tail._M_string_length;
  _398 = _1594 - _1593;
  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::resize (&outFilename, _398, 0);
  goto <bb 260>; [100.00%]

  <bb 256> [0.00%]:
  retval.559_1105 = ends_with_icase<char> (&outFilename, &tbz2Tail);
  if (retval.559_1105 != 0)
    goto <bb 257>; [0.00%]
  else
    goto <bb 259>; [0.00%]

  <bb 257> [100.00%]:
  _1596 = outFilename._M_string_length;
  _1595 = tbz2Tail._M_string_length;
  _401 = _1596 - _1595;
  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::resize (&outFilename, _401, 0);

  <bb 258> [100.00%]:
  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append (&outFilename, ".tar");
  goto <bb 260>; [100.00%]

  <bb 259> [100.00%]:
  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append (&outFilename, ".out");

  <bb 260> [100.00%]:
  _1601 = tbz2Tail._M_dataplus._M_p;
  if (&tbz2Tail.D.18739._M_local_buf != _1601)
    goto <bb 261>; [57.44%]
  else
    goto <bb 262>; [42.56%]

  <bb 261> [57.44%]:
  operator delete (_1601);

  <bb 262> [100.00%]:
  MEM[(struct  &)&tbz2Tail] ={v} {CLOBBER};
  _1599 = bz2Tail._M_dataplus._M_p;
  if (&bz2Tail.D.18739._M_local_buf != _1599)
    goto <bb 263>; [57.44%]
  else
    goto <bb 264>; [42.56%]

  <bb 263> [57.44%]:
  operator delete (_1599);

  <bb 264> [100.00%]:
  bz2Tail ={v} {CLOBBER};
  tbz2Tail ={v} {CLOBBER};
  goto <bb 280>; [0.00%]

  <bb 265> [0.00%]:
  bz2Tail ={v} {CLOBBER};
  tbz2Tail ={v} {CLOBBER};
  goto <bb 469>; [0.00%]

  <bb 266> [0.00%]:
  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (&bz2Tail, ".bz2", &D.39859);

  <bb 267> [0.00%]:
  D.39859 ={v} {CLOBBER};
  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string (&D.39862, InFilename_1062, &D.39861);

  <bb 268> [100.00%]:
  retval.560_1148 = ends_with_icase<char> (&D.39862, &bz2Tail);
  _1603 = D.39862._M_dataplus._M_p;
  if (&D.39862.D.18739._M_local_buf != _1603)
    goto <bb 269>; [57.44%]
  else
    goto <bb 270>; [42.56%]

  <bb 269> [57.44%]:
  operator delete (_1603);

  <bb 270> [100.00%]:
  D.39862 ={v} {CLOBBER};
  D.39861 ={v} {CLOBBER};
  if (retval.560_1148 != 0)
    goto <bb 271>; [0.00%]
  else
    goto <bb 276>; [0.00%]

  <bb 271> [100.00%]:
  stderr.561_402 = stderr;
  __fprintf_chk (stderr.561_402, 1, "pbzip2: *ERROR: Input file [%s] already has a .bz2 extension!  Skipping...\n", InFilename_1062);

  <bb 272> [100.00%]:
  stderr.562_403 = stderr;
  __fprintf_chk (stderr.562_403, 1, "-------------------------------------------\n");

  <bb 273> [100.00%]:
  // predicted unlikely by continue predictor.
  _1605 = bz2Tail._M_dataplus._M_p;
  if (&bz2Tail.D.18739._M_local_buf != _1605)
    goto <bb 274>; [57.44%]
  else
    goto <bb 275>; [42.56%]

  <bb 274> [57.44%]:
  operator delete (_1605);

  <bb 275> [100.00%]:
  bz2Tail ={v} {CLOBBER};
  goto <bb 469>; [0.00%]

  <bb 276> [100.00%]:
  _1607 = bz2Tail._M_string_length;
  _1608 = bz2Tail._M_dataplus._M_p;
  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append (&outFilename, _1608, _1607);

  <bb 277> [100.00%]:
  _1610 = bz2Tail._M_dataplus._M_p;
  if (&bz2Tail.D.18739._M_local_buf != _1610)
    goto <bb 278>; [57.44%]
  else
    goto <bb 279>; [42.56%]

  <bb 278> [57.44%]:
  operator delete (_1610);

  <bb 279> [100.00%]:
  bz2Tail ={v} {CLOBBER};

  <bb 280> [0.00%]:
  safe_mutex_lock (&ErrorHandlerMutex);

  <bb 281> [100.00%]:
  sigInFilename = InFilename_1062;
  _1612 = outFilename._M_dataplus._M_p;
  sigOutFilename = _1612;
  safe_mutex_unlock (&ErrorHandlerMutex);

  <bb 282> [0.00%]:
  _405 = strcmp (InFilename_1062, "-");
  if (_405 != 0)
    goto <bb 283>; [0.00%]
  else
    goto <bb 307>; [0.00%]

  <bb 283> [100.00%]:
  _1547 = *open64 (InFilename_1062, 0);

  <bb 284> [100.00%]:
  if (_1547 == -1)
    goto <bb 285>; [0.00%]
  else
    goto <bb 288>; [0.00%]

  <bb 285> [100.00%]:
  stderr.563_406 = stderr;
  __fprintf_chk (stderr.563_406, 1, "pbzip2: *ERROR: File [%s] NOT found!  Skipping...\n", InFilename_1062);

  <bb 286> [100.00%]:
  stderr.564_407 = stderr;
  __fprintf_chk (stderr.564_407, 1, "-------------------------------------------\n");

  <bb 287> [100.00%]:
  // predicted unlikely by continue predictor.
  goto <bb 306>; [0.00%]

  <bb 288> [100.00%]:
  *__fxstat64 (1, _1547, &statbuf);
  _408 = statbuf.st_mode;
  _409 = _408 & 61440;
  if (_409 == 16384)
    goto <bb 289>; [0.00%]
  else
    goto <bb 292>; [0.00%]

  <bb 289> [100.00%]:
  stderr.565_410 = stderr;
  __fprintf_chk (stderr.565_410, 1, "pbzip2: *ERROR: File [%s] is a directory!  Skipping...\n", InFilename_1062);

  <bb 290> [100.00%]:
  stderr.566_411 = stderr;
  __fprintf_chk (stderr.566_411, 1, "-------------------------------------------\n");

  <bb 291> [100.00%]:
  // predicted unlikely by continue predictor.
  goto <bb 306>; [0.00%]

  <bb 292> [0.00%]:
  if (_409 != 32768)
    goto <bb 293>; [0.00%]
  else
    goto <bb 296>; [0.00%]

  <bb 293> [100.00%]:
  stderr.567_414 = stderr;
  __fprintf_chk (stderr.567_414, 1, "pbzip2: *ERROR: File [%s] is not a regular file!  Skipping...\n", InFilename_1062);

  <bb 294> [100.00%]:
  stderr.568_415 = stderr;
  __fprintf_chk (stderr.568_415, 1, "-------------------------------------------\n");

  <bb 295> [100.00%]:
  // predicted unlikely by continue predictor.
  goto <bb 306>; [0.00%]

  <bb 296> [0.00%]:
  _416 = statbuf.st_size;
  InFileSize = _416;
  if (_416 == 0)
    goto <bb 297>; [0.00%]
  else
    goto <bb 301>; [0.00%]

  <bb 297> [0.00%]:
  if (decompress_649 == 1)
    goto <bb 298>; [0.00%]
  else
    goto <bb 301>; [0.00%]

  <bb 298> [100.00%]:
  stderr.570_418 = stderr;
  __fprintf_chk (stderr.570_418, 1, "pbzip2: *ERROR: File is of size 0 [%s]!  Skipping...\n", InFilename_1062);

  <bb 299> [100.00%]:
  stderr.571_419 = stderr;
  __fprintf_chk (stderr.571_419, 1, "-------------------------------------------\n");

  <bb 300> [100.00%]:
  // predicted unlikely by continue predictor.
  goto <bb 306>; [0.00%]

  <bb 301> [0.00%]:
  # zeroByteFile_624 = PHI <1(297), 0(296)>
  _420 = getFileMetaData (InFilename_1062);
  if (_420 != 0)
    goto <bb 302>; [0.00%]
  else
    goto <bb 305>; [0.00%]

  <bb 302> [100.00%]:
  stderr.573_421 = stderr;
  __fprintf_chk (stderr.573_421, 1, "pbzip2: *ERROR: Could not get file meta data from [%s]!  Skipping...\n", InFilename_1062);

  <bb 303> [100.00%]:
  stderr.574_422 = stderr;
  __fprintf_chk (stderr.574_422, 1, "-------------------------------------------\n");

  <bb 304> [100.00%]:
  // predicted unlikely by continue predictor.
  goto <bb 306>; [0.00%]

  <bb 305> [0.00%]:
  statbuf ={v} {CLOBBER};
  goto <bb 308>; [0.00%]

  <bb 306> [0.00%]:
  # zeroByteFile_625 = PHI <zeroByteFile_623(287), zeroByteFile_623(291), zeroByteFile_623(295), zeroByteFile_623(300), zeroByteFile_624(304)>
  statbuf ={v} {CLOBBER};
  goto <bb 469>; [0.00%]

  <bb 307> [0.00%]:
  InFileSize = -1;

  <bb 308> [0.00%]:
  # zeroByteFile_626 = PHI <zeroByteFile_624(305), zeroByteFile_623(307)>
  # hInfile_628 = PHI <_1547(305), 0(307)>
  OutputStdOut.577_423 = OutputStdOut;
  if (OutputStdOut.577_423 == 0)
    goto <bb 309>; [0.00%]
  else
    goto <bb 316>; [0.00%]

  <bb 309> [100.00%]:
  _1613 = outFilename._M_dataplus._M_p;
  _1203 = check_file_exists (_1613);

  <bb 310> [0.00%]:
  if (_1203 != 0)
    goto <bb 311>; [0.00%]
  else
    goto <bb 316>; [0.00%]

  <bb 311> [0.00%]:
  if (force_693 != 1)
    goto <bb 312>; [0.00%]
  else
    goto <bb 315>; [0.00%]

  <bb 312> [100.00%]:
  _1614 = outFilename._M_dataplus._M_p;
  stderr.578_427 = stderr;
  __fprintf_chk (stderr.578_427, 1, "pbzip2: *ERROR: Output file [%s] already exists!  Use -f to overwrite...\n", _1614);

  <bb 313> [100.00%]:
  stderr.579_428 = stderr;
  __fprintf_chk (stderr.579_428, 1, "-------------------------------------------\n");

  <bb 314> [100.00%]:
  // predicted unlikely by continue predictor.
  goto <bb 469>; [0.00%]

  <bb 315> [100.00%]:
  _1615 = outFilename._M_dataplus._M_p;
  remove (_1615);

  <bb 316> [0.00%]:
  if (readEntireFile_618 == 1)
    goto <bb 317>; [0.00%]
  else
    goto <bb 321>; [0.00%]

  <bb 317> [0.00%]:
  if (hInfile_628 == 0)
    goto <bb 318>; [0.00%]
  else
    goto <bb 320>; [0.00%]

  <bb 318> [0.00%]:
  QuietMode.580_430 = QuietMode;
  if (QuietMode.580_430 != 1)
    goto <bb 319>; [0.00%]
  else
    goto <bb 321>; [0.00%]

  <bb 319> [100.00%]:
  stderr.581_431 = stderr;
  __fprintf_chk (stderr.581_431, 1, " *Warning: Ignoring -r switch since input is stdin.\n");
  goto <bb 321>; [100.00%]

  <bb 320> [0.00%]:
  InFileSize.582_432 = InFileSize;
  numCPU.583_433 = numCPU;
  _434 = (long int) numCPU.583_433;
  _435 = InFileSize.582_432 / _434;
  blockSize_1213 = (int) _435;

  <bb 321> [0.00%]:
  # blockSize_637 = PHI <blockSize_636(316), blockSize_1213(320), blockSize_636(319), blockSize_636(318)>
  QuietMode.584_436 = QuietMode;
  if (QuietMode.584_436 != 1)
    goto <bb 322>; [0.00%]
  else
    goto <bb 333>; [0.00%]

  <bb 322> [100.00%]:
  FileListCount.585_437 = FileListCount;
  _438 = fileLoop_698 + 1;
  stderr.586_439 = stderr;
  __fprintf_chk (stderr.586_439, 1, "         File #: %d of %d\n", _438, FileListCount.585_437);

  <bb 323> [100.00%]:
  if (hInfile_628 != 0)
    goto <bb 325>; [0.00%]
  else
    goto <bb 324>; [0.00%]

  <bb 324> [0.00%]:

  <bb 325> [100.00%]:
  # iftmp.587_722 = PHI <InFilename_1062(323), "<stdin>"(324)>
  stderr.588_440 = stderr;
  __fprintf_chk (stderr.588_440, 1, "     Input Name: %s\n", iftmp.587_722);

  <bb 326> [100.00%]:
  OutputStdOut.589_441 = OutputStdOut;
  if (OutputStdOut.589_441 == 0)
    goto <bb 327>; [0.00%]
  else
    goto <bb 328>; [0.00%]

  <bb 327> [100.00%]:
  _1616 = outFilename._M_dataplus._M_p;
  stderr.590_443 = stderr;
  __fprintf_chk (stderr.590_443, 1, "    Output Name: %s\n\n", _1616);
  goto <bb 329>; [100.00%]

  <bb 328> [100.00%]:
  stderr.591_444 = stderr;
  __fprintf_chk (stderr.591_444, 1, "    Output Name: <stdout>\n\n");

  <bb 329> [0.00%]:
  if (decompress_649 == 1)
    goto <bb 330>; [0.00%]
  else
    goto <bb 331>; [0.00%]

  <bb 330> [100.00%]:
  BWTblockSizeChar.592_445 = BWTblockSizeChar;
  _446 = (int) BWTblockSizeChar.592_445;
  stderr.593_447 = stderr;
  __fprintf_chk (stderr.593_447, 1, " BWT Block Size: %c00k\n", _446);

  <bb 331> [0.00%]:
  _448 = strcmp (InFilename_1062, "-");
  if (_448 != 0)
    goto <bb 332>; [0.00%]
  else
    goto <bb 333>; [0.00%]

  <bb 332> [100.00%]:
  InFileSize.594_449 = InFileSize;
  InFileSize.595_450 = (long unsigned int) InFileSize.594_449;
  stderr.596_451 = stderr;
  __fprintf_chk (stderr.596_451, 1, "     Input Size: %lu bytes\n", InFileSize.595_450);

  <bb 333> [0.00%]:
  if (decompress_649 == 1)
    goto <bb 334>; [0.00%]
  else
    goto <bb 340>; [0.00%]

  <bb 334> [0.00%]:
  numCPU.597_452 = numCPU;
  if (numCPU.597_452 == 1)
    goto <bb 337>; [0.00%]
  else
    goto <bb 335>; [0.00%]

  <bb 335> [0.00%]:
  InFileSize.598_453 = InFileSize;
  if (InFileSize.598_453 <= 999999)
    goto <bb 337>; [0.00%]
  else
    goto <bb 336>; [0.00%]

  <bb 336> [0.00%]:

  <bb 337> [0.00%]:
  # noThreads_678 = PHI <1(335), 0(336), 1(334)>
  if (numCPU.597_452 > 1)
    goto <bb 338>; [0.00%]
  else
    goto <bb 369>; [0.00%]

  <bb 338> [0.00%]:
  _455 = strcmp (InFilename_1062, "-");
  if (_455 == 0)
    goto <bb 339>; [0.00%]
  else
    goto <bb 369>; [0.00%]

  <bb 339> [0.00%]:
  goto <bb 369>; [0.00%]

  <bb 340> [0.00%]:
  InFileSize.600_456 = InFileSize;
  if (InFileSize.600_456 > 0)
    goto <bb 341>; [0.00%]
  else
    goto <bb 344>; [0.00%]

  <bb 341> [0.00%]:
  _457 = (long int) blockSize_637;
  _459 = InFileSize.600_456 + _457;
  _460 = _459 + -1;
  _462 = _460 / _457;
  numBlocks_1225 = (int) _462;
  if (numBlocks_1225 == 1)
    goto <bb 344>; [0.00%]
  else
    goto <bb 342>; [0.00%]

  <bb 342> [0.00%]:
  numCPU.602_463 = numCPU;
  if (numCPU.602_463 == 1)
    goto <bb 344>; [0.00%]
  else
    goto <bb 343>; [0.00%]

  <bb 343> [0.00%]:

  <bb 344> [0.00%]:
  # numBlocks_630 = PHI <numBlocks_1225(343), 10000(340), numBlocks_1225(342), numBlocks_1225(341)>
  # noThreads_679 = PHI <0(343), noThreads_677(340), 1(342), 1(341)>
  if (zeroByteFile_626 == 1)
    goto <bb 345>; [0.00%]
  else
    goto <bb 369>; [0.00%]

  <bb 345> [0.00%]:
  OutputStdOut.603_464 = OutputStdOut;
  if (OutputStdOut.603_464 == 0)
    goto <bb 346>; [0.00%]
  else
    goto <bb 349>; [0.00%]

  <bb 346> [100.00%]:
  _1617 = outFilename._M_dataplus._M_p;
  _1231 = safe_open_output (_1617);

  <bb 347> [0.00%]:
  if (_1231 == -1)
    goto <bb 348>; [0.00%]
  else
    goto <bb 349>; [0.00%]

  <bb 348> [100.00%]:
  _1618 = outFilename._M_dataplus._M_p;
  handle_error (1, 1, "pbzip2: *ERROR: Could not create output file [%s]!\n", _1618);
  goto <bb 470>; [0.00%]

  <bb 349> [0.00%]:
  # hOutfile_629 = PHI <1(345), _1231(347)>
  _1238 = do_write (hOutfile_629, &Bz2HeaderZero, 14);

  <bb 350> [0.00%]:
  ret_1239 = (int) _1238;
  OutputStdOut.604_468 = OutputStdOut;
  if (OutputStdOut.604_468 == 0)
    goto <bb 351>; [0.00%]
  else
    goto <bb 355>; [0.00%]

  <bb 351> [0.00%]:
  _1242 = do_close (hOutfile_629);

  <bb 352> [100.00%]:
  _1619 = outFilename._M_dataplus._M_p;
  _1246 = writeFileMetaData (_1619);

  <bb 353> [0.00%]:
  if (_1246 != 0)
    goto <bb 354>; [0.00%]
  else
    goto <bb 355>; [0.00%]

  <bb 354> [100.00%]:
  _1620 = outFilename._M_dataplus._M_p;
  handle_error (0, -1, "pbzip2: *ERROR: Could not write file meta data to [%s]!\n", _1620);

  <bb 355> [0.00%]:
  # close_ret_718 = PHI <0(350), _1242(354), _1242(353)>
  _472 = ret_1239 != 14;
  _473 = close_ret_718 == -1;
  _474 = _472 | _473;
  if (_474 != 0)
    goto <bb 356>; [0.00%]
  else
    goto <bb 358>; [0.00%]

  <bb 356> [100.00%]:
  _1621 = outFilename._M_dataplus._M_p;
  handle_error (1, 1, "pbzip2: *ERROR: Could not write to file [%s]! Aborting...\n", _1621);

  <bb 357> [100.00%]:
  stderr.606_476 = stderr;
  __fprintf_chk (stderr.606_476, 1, "-------------------------------------------\n");
  goto <bb 470>; [100.00%]

  <bb 358> [0.00%]:
  QuietMode.607_477 = QuietMode;
  if (QuietMode.607_477 != 1)
    goto <bb 359>; [0.00%]
  else
    goto <bb 361>; [0.00%]

  <bb 359> [100.00%]:
  stderr.608_478 = stderr;
  __fprintf_chk (stderr.608_478, 1, "    Output Size: %u bytes\n", 14);

  <bb 360> [100.00%]:
  stderr.609_479 = stderr;
  __fprintf_chk (stderr.609_479, 1, "-------------------------------------------\n");

  <bb 361> [0.00%]:
  if (keep_692 != 1)
    goto <bb 362>; [0.00%]
  else
    goto <bb 368>; [0.00%]

  <bb 362> [0.00%]:
  OutputStdOut.611_483 = OutputStdOut;
  if (OutputStdOut.611_483 != 0)
    goto <bb 364>; [0.00%]
  else
    goto <bb 363>; [0.00%]

  <bb 363> [100.00%]:
  _1622 = outFilename._M_dataplus._M_p;
  _1577 = *__xstat64 (1, _1622, &statbuf);
  if (_1577 == 0)
    goto <bb 364>; [0.00%]
  else
    goto <bb 367>; [0.00%]

  <bb 364> [0.00%]:
  _1258 = do_remove (InFilename_1062);

  <bb 365> [0.00%]:
  if (_1258 == -1)
    goto <bb 366>; [0.00%]
  else
    goto <bb 367>; [0.00%]

  <bb 366> [0.00%]:
  handle_error (0, 1, "Can\'t remove input file [%s]!", InFilename_1062);

  <bb 367> [0.00%]:
  statbuf ={v} {CLOBBER};

  <bb 368> [0.00%]:
  // predicted unlikely by continue predictor.
  goto <bb 469>; [0.00%]

  <bb 369> [0.00%]:
  # numBlocks_631 = PHI <0(338), numBlocks_630(344), 0(337), 0(339)>
  # noThreads_680 = PHI <noThreads_678(338), noThreads_679(344), noThreads_678(337), 0(339)>
  NumBlocksEstimated = numBlocks_631;
  _487 = maxMemory_639 / blockSize_637;
  _488 = (long unsigned int) _487;
  NumBufferedBlocksMax = _488;
  numCPU.614_491 = numCPU;
  _492 = numCPU.614_491 * 2;
  _493 = _487 - _492;
  if (_493 <= 0)
    goto <bb 370>; [0.00%]
  else
    goto <bb 371>; [0.00%]

  <bb 370> [0.00%]:
  NumBufferedBlocksMax = 1;
  goto <bb 372>; [0.00%]

  <bb 371> [0.00%]:
  _497 = (long unsigned int) _492;
  _498 = _488 - _497;
  NumBufferedBlocksMax = _498;

  <bb 372> [0.00%]:
  _500 = (long unsigned int) numCPU.614_491;
  NumBufferedBlocksMax.618_501 = NumBufferedBlocksMax;
  if (_500 > NumBufferedBlocksMax.618_501)
    goto <bb 373>; [0.00%]
  else
    goto <bb 378>; [0.00%]

  <bb 373> [0.00%]:
  if (maxMemorySwitch_643 == 0)
    goto <bb 374>; [0.00%]
  else
    goto <bb 376>; [0.00%]

  <bb 374> [0.00%]:
  NumBufferedBlocksMax = _500;
  QuietMode.620_504 = QuietMode;
  if (QuietMode.620_504 != 1)
    goto <bb 375>; [0.00%]
  else
    goto <bb 378>; [0.00%]

  <bb 375> [100.00%]:
  _508 = (long unsigned int) _492;
  _510 = _500 + _508;
  _511 = (long unsigned int) blockSize_637;
  _512 = _510 * _511;
  _513 = _512 / 1000000;
  stderr.624_514 = stderr;
  __fprintf_chk (stderr.624_514, 1, "*Warning* Max memory limit increased to %lu MB to support %d CPUs\n", _513, numCPU.614_491);
  goto <bb 378>; [100.00%]

  <bb 376> [0.00%]:
  QuietMode.625_515 = QuietMode;
  if (QuietMode.625_515 != 1)
    goto <bb 377>; [0.00%]
  else
    goto <bb 378>; [0.00%]

  <bb 377> [100.00%]:
  stderr.626_516 = stderr;
  __fprintf_chk (stderr.626_516, 1, "*Warning* CPU usage and performance may be suboptimal due to max memory limit.\n");

  <bb 378> [0.00%]:
  LastGoodBlock = -1;
  MinErrorBlock = -1;
  NumBufferedBlocksMax.627_517 = NumBufferedBlocksMax;
  outputBufferInit (NumBufferedBlocksMax.627_517);

  <bb 379> [0.00%]:
  if (decompress_649 == 1)
    goto <bb 380>; [0.00%]
  else
    goto <bb 412>; [0.00%]

  <bb 380> [0.00%]:
  if (noThreads_680 == 0)
    goto <bb 381>; [0.00%]
  else
    goto <bb 404>; [0.00%]

  <bb 381> [0.00%]:
  QuietMode.628_518 = QuietMode;
  if (QuietMode.628_518 != 1)
    goto <bb 382>; [0.00%]
  else
    goto <bb 383>; [0.00%]

  <bb 382> [100.00%]:
  stderr.629_519 = stderr;
  __fprintf_chk (stderr.629_519, 1, "Decompressing data...\n");

  <bb 383> [100.00%]:
  # i_1941 = PHI <0(382), 0(381)>

  <bb 384> [0.00%]:
  # i_700 = PHI <i_1941(383), i_1315(390)>
  _520 = (int) i_700;
  numCPU.630_521 = numCPU;
  if (_520 >= numCPU.630_521)
    goto <bb 391>; [0.00%]
  else
    goto <bb 385>; [0.00%]

  <bb 385> [0.00%]:
  _522 = _1050->consumers;
  _523 = i_700 * 8;
  _524 = _522 + _523;
  ret_1314 = pthread_create (_524, &ChildThreadAttributes, consumer_decompress, _1050);
  if (ret_1314 != 0)
    goto <bb 386>; [0.00%]
  else
    goto <bb 390>; [0.00%]

  <bb 386> [0.00%]:
  _1317 = pbzip2::ErrorContext::getInstance ();

  <bb 387> [0.00%]:
  pbzip2::ErrorContext::saveError (_1317);

  <bb 388> [0.00%]:
  handle_error (1, 1, "pbzip2: *ERROR: Not enough resources to create consumer thread #%u (code = %d)  Aborting...\n", i_700, ret_1314);

  <bb 389> [0.00%]:
  TerminatorThread.631_526 = TerminatorThread;
  pthread_join (TerminatorThread.631_526, 0B);
  goto <bb 493>; [0.00%]

  <bb 390> [0.00%]:
  i_1315 = i_700 + 1;
  goto <bb 384>; [0.00%]

  <bb 391> [100.00%]:
  _1623 = outFilename._M_dataplus._M_p;
  ret_1326 = pthread_create (&output, &ChildThreadAttributes, fileWriter, _1623);
  if (ret_1326 != 0)
    goto <bb 392>; [0.00%]
  else
    goto <bb 394>; [0.00%]

  <bb 392> [0.00%]:
  handle_error (1, 1, "pbzip2: *ERROR: Not enough resources to create fileWriter thread (code = %d)  Aborting...\n", ret_1326);

  <bb 393> [0.00%]:
  TerminatorThread.632_528 = TerminatorThread;
  pthread_join (TerminatorThread.632_528, 0B);
  goto <bb 493>; [0.00%]

  <bb 394> [0.00%]:
  InFileSize.633_529 = InFileSize;
  _1328 = producer_decompress (hInfile_628, InFileSize.633_529, _1050);

  <bb 395> [0.00%]:
  if (_1328 == -99)
    goto <bb 396>; [0.00%]
  else
    goto <bb 402>; [0.00%]

  <bb 396> [0.00%]:
  output.635_530 = output;
  _1335 = pthread_join (output.635_530, 0B);

  <bb 397> [0.00%]:
  if (_1335 != 0)
    goto <bb 398>; [0.00%]
  else
    goto <bb 404>; [0.00%]

  <bb 398> [0.00%]:
  _1338 = pbzip2::ErrorContext::getInstance ();

  <bb 399> [0.00%]:
  pbzip2::ErrorContext::saveError (_1338);

  <bb 400> [0.00%]:
  handle_error (1, 1, "pbzip2: *ERROR: Error joining fileWriter thread (code = %d)  Aborting...\n", _1328);

  <bb 401> [0.00%]:
  TerminatorThread.636_533 = TerminatorThread;
  pthread_join (TerminatorThread.636_533, 0B);
  goto <bb 493>; [0.00%]

  <bb 402> [0.00%]:
  if (_1328 != 0)
    goto <bb 403>; [0.00%]
  else
    goto <bb 404>; [0.00%]

  <bb 403> [0.00%]:

  <bb 404> [0.00%]:
  # errLevel_668 = PHI <errLevel_664(380), errLevel_664(402), errLevel_664(397), 1(403)>
  # noThreads_681 = PHI <noThreads_680(380), noThreads_680(402), 1(397), noThreads_680(403)>
  # switchedMtToSt_709 = PHI <0(380), 0(402), 1(397), 0(403)>
  # errLevelCurrentFile_711 = PHI <0(380), 0(402), 0(397), 1(403)>
  _534 = noThreads_681 == 1;
  _535 = errLevelCurrentFile_711 == 0;
  _536 = _534 & _535;
  if (_536 != 0)
    goto <bb 405>; [0.00%]
  else
    goto <bb 434>; [0.00%]

  <bb 405> [0.00%]:
  QuietMode.637_537 = QuietMode;
  if (QuietMode.637_537 != 1)
    goto <bb 406>; [0.00%]
  else
    goto <bb 407>; [0.00%]

  <bb 406> [100.00%]:
  stderr.638_538 = stderr;
  __fprintf_chk (stderr.638_538, 1, "Decompressing data (no threads)...\n");

  <bb 407> [0.00%]:
  if (hInfile_628 > 0)
    goto <bb 408>; [0.00%]
  else
    goto <bb 409>; [0.00%]

  <bb 408> [0.00%]:
  close (hInfile_628);

  <bb 409> [100.00%]:
  _1624 = outFilename._M_dataplus._M_p;
  _1356 = directdecompress (InFilename_1062, _1624);

  <bb 410> [0.00%]:
  if (_1356 != 0)
    goto <bb 411>; [0.00%]
  else
    goto <bb 434>; [0.00%]

  <bb 411> [0.00%]:
  goto <bb 434>; [0.00%]

  <bb 412> [0.00%]:
  if (noThreads_680 == 0)
    goto <bb 413>; [0.00%]
  else
    goto <bb 429>; [0.00%]

  <bb 413> [0.00%]:
  QuietMode.639_540 = QuietMode;
  if (QuietMode.639_540 != 1)
    goto <bb 414>; [0.00%]
  else
    goto <bb 415>; [0.00%]

  <bb 414> [100.00%]:
  stderr.640_541 = stderr;
  __fprintf_chk (stderr.640_541, 1, "Compressing data...\n");

  <bb 415> [100.00%]:
  # i_1800 = PHI <0(414), 0(413)>

  <bb 416> [0.00%]:
  # i_701 = PHI <i_1800(415), i_1293(422)>
  _542 = (int) i_701;
  numCPU.641_543 = numCPU;
  if (_542 >= numCPU.641_543)
    goto <bb 423>; [0.00%]
  else
    goto <bb 417>; [0.00%]

  <bb 417> [0.00%]:
  _544 = _1050->consumers;
  _545 = i_701 * 8;
  _546 = _544 + _545;
  ret_1292 = pthread_create (_546, &ChildThreadAttributes, consumer, _1050);
  if (ret_1292 != 0)
    goto <bb 418>; [0.00%]
  else
    goto <bb 422>; [0.00%]

  <bb 418> [0.00%]:
  _1295 = pbzip2::ErrorContext::getInstance ();

  <bb 419> [0.00%]:
  pbzip2::ErrorContext::saveError (_1295);

  <bb 420> [0.00%]:
  handle_error (1, 1, "pbzip2: *ERROR: Not enough resources to create consumer thread #%u (code = %d)  Aborting...\n", i_701, ret_1292);

  <bb 421> [0.00%]:
  TerminatorThread.642_548 = TerminatorThread;
  pthread_join (TerminatorThread.642_548, 0B);
  goto <bb 493>; [0.00%]

  <bb 422> [0.00%]:
  i_1293 = i_701 + 1;
  goto <bb 416>; [0.00%]

  <bb 423> [100.00%]:
  _1625 = outFilename._M_dataplus._M_p;
  ret_1302 = pthread_create (&output, &ChildThreadAttributes, fileWriter, _1625);
  if (ret_1302 != 0)
    goto <bb 424>; [0.00%]
  else
    goto <bb 426>; [0.00%]

  <bb 424> [0.00%]:
  handle_error (1, 1, "pbzip2: *ERROR: Not enough resources to create fileWriter thread (code = %d)  Aborting...\n", ret_1302);

  <bb 425> [0.00%]:
  TerminatorThread.643_550 = TerminatorThread;
  pthread_join (TerminatorThread.643_550, 0B);
  goto <bb 493>; [0.00%]

  <bb 426> [0.00%]:
  _1304 = producer (hInfile_628, blockSize_637, _1050);

  <bb 427> [0.00%]:
  if (_1304 != 0)
    goto <bb 428>; [0.00%]
  else
    goto <bb 434>; [0.00%]

  <bb 428> [0.00%]:
  goto <bb 434>; [0.00%]

  <bb 429> [0.00%]:
  QuietMode.644_551 = QuietMode;
  if (QuietMode.644_551 != 1)
    goto <bb 430>; [0.00%]
  else
    goto <bb 431>; [0.00%]

  <bb 430> [100.00%]:
  stderr.645_552 = stderr;
  __fprintf_chk (stderr.645_552, 1, "Compressing data (no threads)...\n");

  <bb 431> [100.00%]:
  _1626 = outFilename._M_dataplus._M_p;
  InFileSize.646_554 = InFileSize;
  _1285 = directcompress (hInfile_628, InFileSize.646_554, blockSize_637, _1626);

  <bb 432> [0.00%]:
  if (_1285 != 0)
    goto <bb 433>; [0.00%]
  else
    goto <bb 434>; [0.00%]

  <bb 433> [0.00%]:

  <bb 434> [0.00%]:
  # errLevel_669 = PHI <1(411), 1(428), errLevel_664(432), 1(433), errLevel_668(404), errLevel_668(410), errLevel_664(427)>
  # noThreads_682 = PHI <noThreads_681(411), noThreads_680(428), noThreads_680(432), noThreads_680(433), noThreads_681(404), noThreads_681(410), noThreads_680(427)>
  # switchedMtToSt_710 = PHI <switchedMtToSt_709(411), 0(428), 0(432), 0(433), switchedMtToSt_709(404), switchedMtToSt_709(410), 0(427)>
  # errLevelCurrentFile_712 = PHI <1(411), 1(428), 0(432), 1(433), errLevelCurrentFile_711(404), errLevelCurrentFile_711(410), 0(427)>
  if (noThreads_682 == 0)
    goto <bb 435>; [0.00%]
  else
    goto <bb 438>; [0.00%]

  <bb 435> [0.00%]:
  output.647_555 = output;
  _1361 = pthread_join (output.647_555, 0B);

  <bb 436> [0.00%]:
  if (_1361 != 0)
    goto <bb 437>; [0.00%]
  else
    goto <bb 438>; [0.00%]

  <bb 437> [0.00%]:
  _556 = __errno_location ();
  _557 = *_556;
  stderr.648_558 = stderr;
  pbzip2::ErrorContext::printErrnoMsg (stderr.648_558, _557);

  <bb 438> [0.00%]:
  # errLevel_670 = PHI <errLevel_669(434), 1(437), errLevel_669(436)>
  # errLevelCurrentFile_713 = PHI <errLevelCurrentFile_712(434), 1(437), errLevelCurrentFile_712(436)>
  _559 = noThreads_682 == 0;
  _560 = _559 | switchedMtToSt_710;
  if (_560 != 0)
    goto <bb 439>; [0.00%]
  else
    goto <bb 444>; [0.00%]

  <bb 439> [0.00%]:
  # errLevel_671 = PHI <errLevel_670(438), errLevel_672(443)>
  # i_702 = PHI <0(438), i_1373(443)>
  # errLevelCurrentFile_714 = PHI <errLevelCurrentFile_713(438), errLevelCurrentFile_715(443)>
  _561 = (int) i_702;
  numCPU.649_562 = numCPU;
  if (_561 >= numCPU.649_562)
    goto <bb 444>; [0.00%]
  else
    goto <bb 440>; [0.00%]

  <bb 440> [0.00%]:
  _563 = _1050->consumers;
  _564 = i_702 * 8;
  _565 = _563 + _564;
  _566 = *_565;
  _1368 = pthread_join (_566, 0B);

  <bb 441> [0.00%]:
  if (_1368 != 0)
    goto <bb 442>; [0.00%]
  else
    goto <bb 443>; [0.00%]

  <bb 442> [0.00%]:
  _567 = __errno_location ();
  _568 = *_567;
  stderr.650_569 = stderr;
  pbzip2::ErrorContext::printErrnoMsg (stderr.650_569, _568);

  <bb 443> [0.00%]:
  # errLevel_672 = PHI <errLevel_671(441), 1(442)>
  # errLevelCurrentFile_715 = PHI <errLevelCurrentFile_714(441), 1(442)>
  i_1373 = i_702 + 1;
  goto <bb 439>; [0.00%]

  <bb 444> [100.00%]:
  # errLevel_673 = PHI <errLevel_670(438), errLevel_671(439)>
  # errLevelCurrentFile_716 = PHI <errLevelCurrentFile_713(438), errLevelCurrentFile_714(439)>
  safe_mutex_lock (&TerminateFlagMutex);

  <bb 445> [100.00%]:
  ret_1627 = terminateFlag;
  safe_mutex_unlock (&TerminateFlagMutex);

  <bb 446> [100.00%]:
  if (ret_1627 != 0)
    goto <bb 447>; [0.00%]
  else
    goto <bb 448>; [0.00%]

  <bb 447> [0.00%]:

  <bb 448> [0.00%]:
  # errLevel_674 = PHI <errLevel_673(446), 1(447)>
  # errLevelCurrentFile_717 = PHI <errLevelCurrentFile_716(446), 1(447)>
  OutputStdOut.652_571 = OutputStdOut;
  if (OutputStdOut.652_571 == 0)
    goto <bb 449>; [0.00%]
  else
    goto <bb 452>; [0.00%]

  <bb 449> [100.00%]:
  _1628 = outFilename._M_dataplus._M_p;
  _1381 = writeFileMetaData (_1628);

  <bb 450> [0.00%]:
  if (_1381 != 0)
    goto <bb 451>; [0.00%]
  else
    goto <bb 452>; [0.00%]

  <bb 451> [100.00%]:
  _1629 = outFilename._M_dataplus._M_p;
  handle_error (0, -1, "pbzip2: *ERROR: Could not write file meta data to [%s]!\n", _1629);

  <bb 452> [0.00%]:
  _575 = keep_692 != 1;
  _576 = errLevelCurrentFile_717 == 0;
  _577 = _575 & _576;
  if (_577 != 0)
    goto <bb 453>; [0.00%]
  else
    goto <bb 459>; [0.00%]

  <bb 453> [0.00%]:
  OutputStdOut.655_578 = OutputStdOut;
  if (OutputStdOut.655_578 != 0)
    goto <bb 455>; [0.00%]
  else
    goto <bb 454>; [0.00%]

  <bb 454> [100.00%]:
  _1630 = outFilename._M_dataplus._M_p;
  _1584 = *__xstat64 (1, _1630, &statbuf);
  if (_1584 == 0)
    goto <bb 455>; [0.00%]
  else
    goto <bb 458>; [0.00%]

  <bb 455> [0.00%]:
  _1391 = do_remove (InFilename_1062);

  <bb 456> [0.00%]:
  if (_1391 == -1)
    goto <bb 457>; [0.00%]
  else
    goto <bb 458>; [0.00%]

  <bb 457> [0.00%]:
  handle_error (0, 1, "Can\'t remove input file [%s]!", InFilename_1062);

  <bb 458> [0.00%]:
  statbuf ={v} {CLOBBER};

  <bb 459> [100.00%]:
  _1631 = OutputBuffer.D.38528._M_impl._M_start;
  OutputBuffer.D.38528._M_impl._M_finish = _1631;
  MEM[(struct queue *)_1050].empty = 1;
  MEM[(struct queue *)_1050].full = 0;
  MEM[(struct queue *)_1050].head = 0;
  MEM[(struct queue *)_1050].tail = 0;
  MEM[(struct queue *)_1050].count = 0;
  MEM[(struct queue *)_1050].lastElement = 0B;
  MEM[(struct queue *)_1050].topLevelFull = 0;
  MEM[(struct queue *)_1050].topLevelEmpty = 1;
  if (errLevelCurrentFile_717 == 0)
    goto <bb 460>; [0.00%]
  else
    goto <bb 465>; [0.00%]

  <bb 460> [100.00%]:
  safe_mutex_lock (&TerminateFlagMutex);

  <bb 461> [100.00%]:
  ret_1632 = terminateFlag;
  safe_mutex_unlock (&TerminateFlagMutex);

  <bb 462> [100.00%]:
  if (ret_1632 == 0)
    goto <bb 463>; [0.00%]
  else
    goto <bb 465>; [0.00%]

  <bb 463> [0.00%]:
  safe_mutex_lock (&ErrorHandlerMutex);

  <bb 464> [0.00%]:
  sigInFilename = 0B;
  sigOutFilename = 0B;
  safe_mutex_unlock (&ErrorHandlerMutex);

  <bb 465> [0.00%]:
  if (errLevelCurrentFile_717 == 1)
    goto <bb 466>; [0.00%]
  else
    goto <bb 467>; [0.00%]

  <bb 466> [0.00%]:
  syncSetTerminateFlag (1);
  goto <bb 470>; [0.00%]

  <bb 467> [0.00%]:
  QuietMode.659_583 = QuietMode;
  if (QuietMode.659_583 != 1)
    goto <bb 468>; [0.00%]
  else
    goto <bb 469>; [0.00%]

  <bb 468> [100.00%]:
  stderr.660_584 = stderr;
  __fprintf_chk (stderr.660_584, 1, "-------------------------------------------\n");

  <bb 469> [0.00%]:
  # zeroByteFile_627 = PHI <zeroByteFile_623(218), zeroByteFile_623(265), zeroByteFile_623(275), zeroByteFile_625(306), zeroByteFile_626(314), zeroByteFile_626(368), zeroByteFile_626(467), zeroByteFile_626(468)>
  # blockSize_638 = PHI <blockSize_636(218), blockSize_636(265), blockSize_636(275), blockSize_636(306), blockSize_636(314), blockSize_637(368), blockSize_637(467), blockSize_637(468)>
  # errLevel_675 = PHI <errLevel_665(218), 1(265), 1(275), 1(306), 1(314), errLevel_664(368), errLevel_674(467), errLevel_674(468)>
  # noThreads_683 = PHI <noThreads_677(218), noThreads_677(265), noThreads_677(275), noThreads_677(306), noThreads_677(314), noThreads_679(368), noThreads_682(467), noThreads_682(468)>
  fileLoop_1421 = fileLoop_698 + 1;
  goto <bb 202>; [0.00%]

  <bb 470> [0.00%]:
  # errLevel_676 = PHI <errLevel_664(202), 1(348), 1(357), errLevel_674(466)>
  OutputStdOut.661_585 = OutputStdOut;
  if (OutputStdOut.661_585 == 1)
    goto <bb 471>; [0.00%]
  else
    goto <bb 477>; [0.00%]

  <bb 471> [0.00%]:
  _1423 = close (1);

  <bb 472> [0.00%]:
  if (_1423 == -1)
    goto <bb 473>; [0.00%]
  else
    goto <bb 477>; [0.00%]

  <bb 473> [0.00%]:
  _1426 = pbzip2::ErrorContext::getInstance ();

  <bb 474> [0.00%]:
  pbzip2::ErrorContext::saveError (_1426);

  <bb 475> [0.00%]:
  handle_error (1, 1, "pbzip2: *ERROR: Failed to close STDOUT! Aborting...\n");

  <bb 476> [0.00%]:
  exit (1);

  <bb 477> [0.00%]:
  SIG_HANDLER_QUIT_SIGNAL.662_587 = SIG_HANDLER_QUIT_SIGNAL;
  SignalHandlerThread.663_588 = SignalHandlerThread;
  ret_1431 = pthread_kill (SignalHandlerThread.663_588, SIG_HANDLER_QUIT_SIGNAL.662_587);
  if (ret_1431 != 0)
    goto <bb 478>; [0.00%]
  else
    goto <bb 480>; [0.00%]

  <bb 478> [100.00%]:
  stderr.664_589 = stderr;
  __fprintf_chk (stderr.664_589, 1, "Couldn\'t signal signal QUIT to SignalHandlerThread [%d]. Quitting prematurely!\n", ret_1431);

  <bb 479> [100.00%]:
  exit (errLevel_676);

  <bb 480> [0.00%]:
  SignalHandlerThread.665_590 = SignalHandlerThread;
  _1433 = pthread_join (SignalHandlerThread.665_590, 0B);

  <bb 481> [0.00%]:
  if (_1433 != 0)
    goto <bb 482>; [0.00%]
  else
    goto <bb 483>; [0.00%]

  <bb 482> [100.00%]:
  stderr.666_591 = stderr;
  __fprintf_chk (stderr.666_591, 1, "Error on join of SignalHandlerThread [%d]\n", _1433);

  <bb 483> [100.00%]:
  safe_mutex_lock (&TerminateFlagMutex);

  <bb 484> [100.00%]:
  ret_1633 = terminateFlag;
  safe_mutex_unlock (&TerminateFlagMutex);

  <bb 485> [100.00%]:
  if (ret_1633 == 0)
    goto <bb 486>; [0.00%]
  else
    goto <bb 487>; [0.00%]

  <bb 486> [0.00%]:
  syncSetFinishedFlag (1);

  <bb 487> [0.00%]:
  TerminatorThread.668_593 = TerminatorThread;
  _1441 = pthread_join (TerminatorThread.668_593, 0B);

  <bb 488> [0.00%]:
  if (_1441 != 0)
    goto <bb 489>; [0.00%]
  else
    goto <bb 490>; [0.00%]

  <bb 489> [100.00%]:
  stderr.669_594 = stderr;
  __fprintf_chk (stderr.669_594, 1, "Error on join of TerminatorThread [%d]\n", _1441);

  <bb 490> [100.00%]:
  queueDelete (_1050);
  mutexesDelete ();
  operator delete[] (_14);
  gettimeofday (&tvStopTime, &tz);
  _595 = tvStartTime.tv_sec;
  _596 = (double) _595;
  _597 = tvStartTime.tv_usec;
  _598 = (double) _597;
  _599 = _598 / 1.0e+6;
  timeStart_1448 = _596 + _599;
  _600 = tvStopTime.tv_sec;
  _601 = (double) _600;
  _602 = tvStopTime.tv_usec;
  _603 = (double) _602;
  _604 = _603 / 1.0e+6;
  timeStop_1449 = _601 + _604;
  timeCalc_1450 = timeStop_1449 - timeStart_1448;
  QuietMode.670_605 = QuietMode;
  if (QuietMode.670_605 != 1)
    goto <bb 491>; [0.00%]
  else
    goto <bb 492>; [0.00%]

  <bb 491> [100.00%]:
  stderr.671_606 = stderr;
  __fprintf_chk (stderr.671_606, 1, "\n     Wall Clock: %f seconds\n", timeCalc_1450);

  <bb 492> [0.00%]:
  exit (errLevel_676);

  <bb 493> [100.00%]:
  # _719 = PHI <1(3), 1(27), 1(76), 1(78), 1(88), 1(98), 1(142), 1(147), 1(152), 1(160), 1(174), 1(176), _1047(198), 1(201), _1415(212), 1(389), 1(393), 1(401), 1(421), 1(425)>
  _1635 = outFilename._M_dataplus._M_p;
  if (&outFilename.D.18739._M_local_buf != _1635)
    goto <bb 494>; [57.44%]
  else
    goto <bb 495>; [42.56%]

  <bb 494> [57.44%]:
  operator delete (_1635);

  <bb 495> [100.00%]:
  output ={v} {CLOBBER};
  bz2Header ={v} {CLOBBER};
  outFilename ={v} {CLOBBER};
  cmdLineTemp ={v} {CLOBBER};
  tmpBuff ={v} {CLOBBER};
  stdinFile ={v} {CLOBBER};
  tvStartTime ={v} {CLOBBER};
  tvStopTime ={v} {CLOBBER};
  tz ={v} {CLOBBER};
  loadAvgArray ={v} {CLOBBER};
  return _719;

<L560> [100.00%]:
  _1637 = tbz2Tail._M_dataplus._M_p;
  if (&tbz2Tail.D.18739._M_local_buf != _1637)
    goto <bb 497>; [57.44%]
  else
    goto <bb 498>; [42.56%]

  <bb 497> [57.44%]:
  operator delete (_1637);

  <bb 498> [100.00%]:
  MEM[(struct  &)&tbz2Tail] ={v} {CLOBBER};
  resx 21

<L561> [100.00%]:
  D.39853 ={v} {CLOBBER};
  _1639 = bz2Tail._M_dataplus._M_p;
  if (&bz2Tail.D.18739._M_local_buf != _1639)
    goto <bb 500>; [57.44%]
  else
    goto <bb 501>; [42.56%]

  <bb 500> [57.44%]:
  operator delete (_1639);

  <bb 501> [100.00%]:
  resx 15

<L567> [100.00%]:
  D.39861 ={v} {CLOBBER};
  _1641 = bz2Tail._M_dataplus._M_p;
  if (&bz2Tail.D.18739._M_local_buf != _1641)
    goto <bb 503>; [57.44%]
  else
    goto <bb 504>; [42.56%]

  <bb 503> [57.44%]:
  operator delete (_1641);

  <bb 504> [100.00%]:
  resx 31

<L572> [100.00%]:
  statbuf ={v} {CLOBBER};
  statbuf ={v} {CLOBBER};
  statbuf ={v} {CLOBBER};
  D.39859 ={v} {CLOBBER};
  bz2Tail ={v} {CLOBBER};
  D.39850 ={v} {CLOBBER};
  bz2Tail ={v} {CLOBBER};
  tbz2Tail ={v} {CLOBBER};
  D.39832 ={v} {CLOBBER};
  _1643 = outFilename._M_dataplus._M_p;
  if (&outFilename.D.18739._M_local_buf != _1643)
    goto <bb 506>; [57.44%]
  else
    goto <bb 507>; [42.56%]

  <bb 506> [57.44%]:
  operator delete (_1643);

  <bb 507> [100.00%]:
  resx 2

}


