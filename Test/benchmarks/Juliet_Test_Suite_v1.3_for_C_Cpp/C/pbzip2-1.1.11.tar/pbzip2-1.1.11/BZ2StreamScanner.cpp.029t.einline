
;; Function memcpy (memcpy, funcdef_no=1911, decl_uid=1023, cgraph_uid=652, symbol_order=654)

__attribute__((nothrow, __artificial__, __gnu_inline__, __always_inline__, __leaf__))
memcpy (void * restrict __dest, const void * restrict __src, size_t __len)
{
  long unsigned int _1;
  void * _2;
  void * _8;

  <bb 2> [0.00%]:
  _1 = __builtin_object_size (__dest_4(D), 0);
  _8 = __memcpy_chk (__dest_4(D), __src_5(D), __len_6(D), _1);
  return _8;

}



;; Function __gnu_cxx::__ops::__iter_equal_to_iter() (_ZN9__gnu_cxx5__ops20__iter_equal_to_iterEv, funcdef_no=205, decl_uid=8057, cgraph_uid=12, symbol_order=13)

Iterations: 0
__gnu_cxx::__ops::__iter_equal_to_iter() ()
{
  struct _Iter_equal_to_iter D.41524;

  <bb 2> [0.00%]:
  return D.41524;

}



;; Function outBuff::outBuff(char*, unsigned int, int, int, unsigned int, bool, outBuff*) (_ZN7outBuffC2EPcjiijbPS_, funcdef_no=1070, decl_uid=26014, cgraph_uid=358, symbol_order=360)

Iterations: 0
outBuff::outBuff(char*, unsigned int, int, int, unsigned int, bool, outBuff*) (struct outBuff * const this, char * aBuf, unsigned int aBufSize, int aBlockNumber, int aSequenceNumber, unsigned int aInSize, bool isLast, struct outBuff * aNext)
{
  <bb 2> [0.00%]:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->buf = aBuf_4(D);
  this_2(D)->bufSize = aBufSize_6(D);
  this_2(D)->blockNumber = aBlockNumber_8(D);
  this_2(D)->sequenceNumber = aSequenceNumber_10(D);
  this_2(D)->inSize = aInSize_12(D);
  this_2(D)->isLastInSequence = isLast_14(D);
  this_2(D)->next = aNext_16(D);
  return;

}



;; Function pbzip2::BZ2StreamScanner::getInBuffSize() const (_ZNK6pbzip216BZ2StreamScanner13getInBuffSizeEv, funcdef_no=1426, decl_uid=29310, cgraph_uid=435, symbol_order=437)

Iterations: 0
pbzip2::BZ2StreamScanner::getInBuffSize() const (const struct BZ2StreamScanner * const this)
{
  CharType * _1;
  long int _2;
  CharType * _3;
  long int _4;
  long int _5;
  size_t _8;

  <bb 2> [0.00%]:
  _1 = this_7(D)->_inBuffEnd;
  _2 = (long int) _1;
  _3 = this_7(D)->_inBuff;
  _4 = (long int) _3;
  _5 = _2 - _4;
  _8 = (size_t) _5;
  return _8;

}



;; Function pbzip2::BZ2StreamScanner::getInBuffCapacity() const (_ZNK6pbzip216BZ2StreamScanner17getInBuffCapacityEv, funcdef_no=1427, decl_uid=29312, cgraph_uid=436, symbol_order=438)

Iterations: 0
pbzip2::BZ2StreamScanner::getInBuffCapacity() const (const struct BZ2StreamScanner * const this)
{
  size_t _3;

  <bb 2> [0.00%]:
  _3 = this_2(D)->_inBuffCapacity;
  return _3;

}



;; Function pbzip2::BZ2StreamScanner::failed() (_ZN6pbzip216BZ2StreamScanner6failedEv, funcdef_no=1431, decl_uid=29323, cgraph_uid=440, symbol_order=442)

Iterations: 0
pbzip2::BZ2StreamScanner::failed() (struct BZ2StreamScanner * const this)
{
  unsigned int _1;
  bool _4;

  <bb 2> [0.00%]:
  _1 = this_3(D)->_errState;
  _4 = _1 != 0;
  return _4;

}



;; Function pbzip2::BZ2StreamScanner::isBz2HeaderFound() const (_ZNK6pbzip216BZ2StreamScanner16isBz2HeaderFoundEv, funcdef_no=1432, decl_uid=29325, cgraph_uid=441, symbol_order=443)

Iterations: 0
pbzip2::BZ2StreamScanner::isBz2HeaderFound() const (const struct BZ2StreamScanner * const this)
{
  bool _3;

  <bb 2> [0.00%]:
  _3 = this_2(D)->_bz2HeaderFound;
  return _3;

}



;; Function pbzip2::BZ2StreamScanner::getSearchStatus() const (_ZNK6pbzip216BZ2StreamScanner15getSearchStatusEv, funcdef_no=1433, decl_uid=29327, cgraph_uid=442, symbol_order=444)

Iterations: 0
pbzip2::BZ2StreamScanner::getSearchStatus() const (const struct BZ2StreamScanner * const this)
{
  bool _3;

  <bb 2> [0.00%]:
  _3 = this_2(D)->_searchStatus;
  return _3;

}



;; Function pbzip2::BZ2StreamScanner::eof() const (_ZNK6pbzip216BZ2StreamScanner3eofEv, funcdef_no=1434, decl_uid=29329, cgraph_uid=443, symbol_order=445)

Iterations: 0
pbzip2::BZ2StreamScanner::eof() const (const struct BZ2StreamScanner * const this)
{
  bool _3;

  <bb 2> [0.00%]:
  _3 = this_2(D)->_eof;
  return _3;

}



;; Function pbzip2::BZ2StreamScanner::getInBuffEnd() (_ZN6pbzip216BZ2StreamScanner12getInBuffEndEv, funcdef_no=1440, decl_uid=29355, cgraph_uid=449, symbol_order=451)

Iterations: 0
pbzip2::BZ2StreamScanner::getInBuffEnd() (struct BZ2StreamScanner * const this)
{
  CharType * _3;

  <bb 2> [0.00%]:
  _3 = this_2(D)->_inBuffEnd;
  return _3;

}



;; Function pbzip2::BZ2StreamScanner::getInBuffBegin() (_ZN6pbzip216BZ2StreamScanner14getInBuffBeginEv, funcdef_no=1441, decl_uid=29357, cgraph_uid=450, symbol_order=452)

Iterations: 0
pbzip2::BZ2StreamScanner::getInBuffBegin() (struct BZ2StreamScanner * const this)
{
  CharType * _3;

  <bb 2> [0.00%]:
  _3 = this_2(D)->_inBuff;
  return _3;

}



;; Function pbzip2::BZ2StreamScanner::getInBuffCurrent() (_ZN6pbzip216BZ2StreamScanner16getInBuffCurrentEv, funcdef_no=1442, decl_uid=29359, cgraph_uid=451, symbol_order=453)

Iterations: 0
pbzip2::BZ2StreamScanner::getInBuffCurrent() (struct BZ2StreamScanner * const this)
{
  CharType * _3;

  <bb 2> [0.00%]:
  _3 = this_2(D)->_inBuffCurrent;
  return _3;

}



;; Function pbzip2::BZ2StreamScanner::getInBuffSearchPtr() (_ZN6pbzip216BZ2StreamScanner18getInBuffSearchPtrEv, funcdef_no=1443, decl_uid=29361, cgraph_uid=452, symbol_order=454)

Iterations: 0
pbzip2::BZ2StreamScanner::getInBuffSearchPtr() (struct BZ2StreamScanner * const this)
{
  CharType * _3;

  <bb 2> [0.00%]:
  _3 = this_2(D)->_inBuffSearchPtr;
  return _3;

}



;; Function pbzip2::BZ2StreamScanner::getOutBuffEnd() (_ZN6pbzip216BZ2StreamScanner13getOutBuffEndEv, funcdef_no=1444, decl_uid=29363, cgraph_uid=453, symbol_order=455)

Iterations: 0
pbzip2::BZ2StreamScanner::getOutBuffEnd() (struct BZ2StreamScanner * const this)
{
  char * _1;
  unsigned int _2;
  sizetype _3;
  char * _6;

  <bb 2> [0.00%]:
  _1 = this_5(D)->_outBuff.buf;
  _2 = this_5(D)->_outBuff.bufSize;
  _3 = (sizetype) _2;
  _6 = _1 + _3;
  return _6;

}



;; Function pbzip2::BZ2StreamScanner::getUnsearchedCount() const (_ZNK6pbzip216BZ2StreamScanner18getUnsearchedCountEv, funcdef_no=1445, decl_uid=29365, cgraph_uid=454, symbol_order=456)

Iterations: 0
pbzip2::BZ2StreamScanner::getUnsearchedCount() const (const struct BZ2StreamScanner * const this)
{
  CharType * _1;
  long int _2;
  CharType * _3;
  long int _4;
  long int _5;
  size_t _8;

  <bb 2> [0.00%]:
  _1 = this_7(D)->_inBuffEnd;
  _2 = (long int) _1;
  _3 = this_7(D)->_inBuffSearchPtr;
  _4 = (long int) _3;
  _5 = _2 - _4;
  _8 = (size_t) _5;
  return _8;

}



;; Function pbzip2::BZ2StreamScanner::getOutBuffCapacityLimit() const (_ZNK6pbzip216BZ2StreamScanner23getOutBuffCapacityLimitEv, funcdef_no=1446, decl_uid=29375, cgraph_uid=455, symbol_order=457)

Iterations: 0
pbzip2::BZ2StreamScanner::getOutBuffCapacityLimit() const (const struct BZ2StreamScanner * const this)
{
  size_t _3;

  <bb 2> [0.00%]:
  _3 = this_2(D)->_outBuffCapacityLimit;
  return _3;

}



;; Function pbzip2::BZ2StreamScanner::isOutBuffFullEnough() const (_ZNK6pbzip216BZ2StreamScanner19isOutBuffFullEnoughEv, funcdef_no=1435, decl_uid=29331, cgraph_uid=444, symbol_order=446)

Considering inline candidate pbzip2::BZ2StreamScanner::getOutBuffCapacityLimit() const.
 Inlining pbzip2::BZ2StreamScanner::getOutBuffCapacityLimit() const into pbzip2::BZ2StreamScanner::isOutBuffFullEnough() const.
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.41746 D.41875 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


pbzip2::BZ2StreamScanner::isOutBuffFullEnough() const (const struct BZ2StreamScanner * const this)
{
  size_t D.41875;
  unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _6;
  bool _7;

  <bb 2> [100.00%]:
  _1 = this_5(D)->_outBuff.bufSize;
  _2 = (long unsigned int) _1;
  _6 = this_5(D)->_outBuffCapacityLimit;
  _8 = _6;
  _3 = _8;
  _7 = _2 >= _3;
  return _7;

}



;; Function std::min<unsigned char*>(unsigned char* const&, unsigned char* const&)unsigned char* const& (_ZSt3minIPhERKT_S3_S3_, funcdef_no=1934, decl_uid=36419, cgraph_uid=674, symbol_order=677)

Iterations: 0
std::min<unsigned char*>(unsigned char* const&, unsigned char* const&)unsigned char* const& (unsigned char * const & __a, unsigned char * const & __b)
{
  unsigned char * _1;
  unsigned char * _2;
  unsigned char * const & _3;
  unsigned char * const & _7;
  unsigned char * const & _8;

  <bb 2> [0.00%]:
  _1 = *__b_5(D);
  _2 = *__a_6(D);
  if (_1 < _2)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  _8 = __b_5(D);
  goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  _7 = __a_6(D);

  <bb 5> [0.00%]:
  # _3 = PHI <_8(3), _7(4)>
  return _3;

}



;; Function pbzip2::BZ2StreamScanner::initOutBuff(char*, unsigned long, unsigned long) (_ZN6pbzip216BZ2StreamScanner11initOutBuffEPcmm, funcdef_no=1941, decl_uid=29341, cgraph_uid=682, symbol_order=685)

Iterations: 0
pbzip2::BZ2StreamScanner::initOutBuff(char*, unsigned long, unsigned long) (struct BZ2StreamScanner * const this, char * buf, size_t bufSize, size_t bufCapacity)
{
  unsigned int _1;

  <bb 2> [0.00%]:
  this_3(D)->_outBuff.buf = buf_4(D);
  _1 = (unsigned int) bufSize_6(D);
  this_3(D)->_outBuff.bufSize = _1;
  this_3(D)->_outBuffCapacity = bufCapacity_8(D);
  this_3(D)->_outBuff.inSize = 0;
  return;

}



;; Function pbzip2::BZ2StreamScanner::ensureOutBuffCapacity(unsigned long) (_ZN6pbzip216BZ2StreamScanner21ensureOutBuffCapacityEm, funcdef_no=1931, decl_uid=29351, cgraph_uid=672, symbol_order=675)

  Inlining memcpy into pbzip2::BZ2StreamScanner::ensureOutBuffCapacity(unsigned long) (always_inline).
Considering inline candidate pbzip2::BZ2StreamScanner::getOutBuffCapacityLimit() const.
 Inlining pbzip2::BZ2StreamScanner::getOutBuffCapacityLimit() const into pbzip2::BZ2StreamScanner::ensureOutBuffCapacity(unsigned long).
Considering inline candidate pbzip2::BZ2StreamScanner::getOutBuffCapacityLimit() const.
 Inlining pbzip2::BZ2StreamScanner::getOutBuffCapacityLimit() const into pbzip2::BZ2StreamScanner::ensureOutBuffCapacity(unsigned long).
Considering inline candidate pbzip2::BZ2StreamScanner::getOutBuffCapacityLimit() const.
 Inlining pbzip2::BZ2StreamScanner::getOutBuffCapacityLimit() const into pbzip2::BZ2StreamScanner::ensureOutBuffCapacity(unsigned long).
Iterations: 1
Merging blocks 5 and 21
Merging blocks 6 and 23
Removing basic block 10
Merging blocks 14 and 19
Merging blocks 25 and 24
Merging blocks 5 and 20
Merging blocks 6 and 22
Merging blocks 14 and 18

Symbols to be put in SSA form
{ D.41749 D.41882 D.41884 D.41886 D.41888 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 18
Number of blocks to update: 17 ( 94%)


pbzip2::BZ2StreamScanner::ensureOutBuffCapacity(unsigned long) (struct BZ2StreamScanner * const this, size_t newSize)
{
  size_t D.41888;
  size_t D.41886;
  size_t D.41884;
  void * D.41882;
  char * newBuff;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  unsigned int _10;
  unsigned int _11;
  char * _12;
  unsigned int _13;
  long unsigned int _14;
  char * _15;
  char * _16;
  char * _17;
  long unsigned int _18;
  unsigned int _19;
  long unsigned int _20;
  int _21;
  bool iftmp.20_22;
  long unsigned int _32;
  void * _33;
  bool iftmp.20_34;
  bool iftmp.20_35;
  bool retval.19_36;
  long unsigned int _37;
  long unsigned int _39;
  int _45;
  int _48;
  int _49;
  long unsigned int _50;
  long unsigned int _51;

  <bb 2> [0.00%]:
  _1 = this_29(D)->_outBuffCapacity;
  if (newSize_30(D) <= _1)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  _49 = 0;
  goto <bb 17>; [0.00%]

  <bb 4> [0.00%]:
  _2 = this_29(D)->_outBuffCapacityHint;
  if (newSize_30(D) > _2)
    goto <bb 5>; [0.00%]
  else
    goto <bb 11>; [0.00%]

  <bb 5> [100.00%]:
  _3 = newSize_30(D) * 11;
  _4 = _3 / 10;
  this_29(D)->_outBuffCapacityHint = _4;
  _32 = MEM[(const struct BZ2StreamScanner *)this_29(D)]._outBuffCapacityLimit;
  _52 = _32;
  _5 = _52;
  if (newSize_30(D) <= _5)
    goto <bb 6>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 6> [100.00%]:
  _6 = this_29(D)->_outBuffCapacityHint;
  _50 = MEM[(const struct BZ2StreamScanner *)this_29(D)]._outBuffCapacityLimit;
  _53 = _50;
  _7 = _53;
  if (_6 > _7)
    goto <bb 7>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 7> [0.00%]:
  iftmp.20_34 = 1;
  goto <bb 9>; [0.00%]

  <bb 8> [0.00%]:
  iftmp.20_35 = 0;

  <bb 9> [0.00%]:
  # iftmp.20_22 = PHI <iftmp.20_34(7), iftmp.20_35(8)>
  retval.19_36 = iftmp.20_22;
  if (retval.19_36 != 0)
    goto <bb 10>; [0.00%]
  else
    goto <bb 11>; [0.00%]

  <bb 10> [100.00%]:
  _51 = MEM[(const struct BZ2StreamScanner *)this_29(D)]._outBuffCapacityLimit;
  _54 = _51;
  _8 = _54;
  this_29(D)->_outBuffCapacityHint = _8;

  <bb 11> [0.00%]:
  _39 = this_29(D)->_outBuffCapacityHint;
  newBuff_41 = operator new[] (_39, &nothrow);
  if (newBuff_41 == 0B)
    goto <bb 12>; [0.00%]
  else
    goto <bb 13>; [0.00%]

  <bb 12> [0.00%]:
  _9 = this_29(D)->_outBuffCapacityHint;
  handle_error (1, -1, "pbzip2: *ERROR: Could not allocate memory (ensureOutBuffCapacity/%u)!Aborting...\n", _9);
  _10 = this_29(D)->_errState;
  _11 = _10 | 2;
  this_29(D)->_errState = _11;
  _48 = -1;
  goto <bb 17>; [0.00%]

  <bb 13> [0.00%]:
  _12 = this_29(D)->_outBuff.buf;
  if (_12 != 0B)
    goto <bb 14>; [0.00%]
  else
    goto <bb 16>; [0.00%]

  <bb 14> [100.00%]:
  _13 = this_29(D)->_outBuff.bufSize;
  _14 = (long unsigned int) _13;
  _15 = this_29(D)->_outBuff.buf;
  _37 = __builtin_object_size (newBuff_41, 0);
  _33 = __memcpy_chk (newBuff_41, _15, _14, _37);
  _56 = _33;
  _16 = this_29(D)->_outBuff.buf;
  if (_16 != 0B)
    goto <bb 15>; [0.00%]
  else
    goto <bb 16>; [0.00%]

  <bb 15> [0.00%]:
  _17 = this_29(D)->_outBuff.buf;
  operator delete[] (_17);

  <bb 16> [0.00%]:
  _18 = this_29(D)->_outBuffCapacityHint;
  _19 = this_29(D)->_outBuff.bufSize;
  _20 = (long unsigned int) _19;
  pbzip2::BZ2StreamScanner::initOutBuff (this_29(D), newBuff_41, _20, _18);
  _45 = 0;

  <bb 17> [0.00%]:
  # _21 = PHI <_49(3), _48(12), _45(16)>
  return _21;

}



;; Function pbzip2::BZ2StreamScanner::appendOutBuffData(unsigned char*) (_ZN6pbzip216BZ2StreamScanner17appendOutBuffDataEPh, funcdef_no=1932, decl_uid=29344, cgraph_uid=673, symbol_order=676)

  Inlining memcpy into pbzip2::BZ2StreamScanner::appendOutBuffData(unsigned char*) (always_inline).
Considering inline candidate pbzip2::BZ2StreamScanner::getOutBuffEnd().
 Inlining pbzip2::BZ2StreamScanner::getOutBuffEnd() into pbzip2::BZ2StreamScanner::appendOutBuffData(unsigned char*).
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffCurrent().
 Inlining pbzip2::BZ2StreamScanner::getInBuffCurrent() into pbzip2::BZ2StreamScanner::appendOutBuffData(unsigned char*).
Considering inline candidate pbzip2::BZ2StreamScanner::isBz2HeaderFound() const.
 Inlining pbzip2::BZ2StreamScanner::isBz2HeaderFound() const into pbzip2::BZ2StreamScanner::appendOutBuffData(unsigned char*).
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffCurrent().
 Inlining pbzip2::BZ2StreamScanner::getInBuffCurrent() into pbzip2::BZ2StreamScanner::appendOutBuffData(unsigned char*).
Iterations: 1
Merging blocks 2 and 13
Removing basic block 4
Merging blocks 7 and 19
Merging blocks 15 and 14
Merging blocks 2 and 12
Merging blocks 7 and 18
Merging blocks 7 and 17
Merging blocks 7 and 16
Merging blocks 7 and 11
Merging blocks 7 and 10

Symbols to be put in SSA form
{ D.41750 D.41893 D.41895 D.41897 D.41899 D.41901 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


pbzip2::BZ2StreamScanner::appendOutBuffData(unsigned char*) (struct BZ2StreamScanner * const this, CharType * end)
{
  CharType * D.41901;
  char * D.41899;
  bool D.41897;
  CharType * D.41895;
  void * D.41893;
  size_t newSize;
  int additionSize;
  long int end.21_1;
  CharType * _2;
  long int _3;
  long int _4;
  unsigned int _5;
  unsigned int additionSize.23_6;
  unsigned int _7;
  int _8;
  long unsigned int _9;
  CharType * _10;
  char * _11;
  unsigned int _12;
  unsigned int additionSize.25_13;
  unsigned int _14;
  int _15;
  bool _21;
  CharType * _23;
  bool retval.22_24;
  int _27;
  bool retval.24_28;
  void * _29;
  long unsigned int _30;
  int _33;
  int _35;
  int _36;
  char * _37;
  unsigned int _38;
  sizetype _39;
  char * _40;
  CharType * _41;

  <bb 2> [100.00%]:
  end.21_1 = (long int) end_18(D);
  _23 = this_20(D)->_inBuffCurrent;
  _42 = _23;
  _2 = _42;
  _3 = (long int) _2;
  _4 = end.21_1 - _3;
  additionSize_22 = (int) _4;
  if (additionSize_22 <= 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  _36 = 0;
  goto <bb 9>; [0.00%]

  <bb 4> [100.00%]:
  _21 = MEM[(const struct BZ2StreamScanner *)this_20(D)]._bz2HeaderFound;
  _43 = _21;
  retval.22_24 = _43;
  if (retval.22_24 != 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 5> [0.00%]:
  _5 = this_20(D)->_outBuff.bufSize;
  additionSize.23_6 = (unsigned int) additionSize_22;
  _7 = _5 + additionSize.23_6;
  newSize_25 = (size_t) _7;
  _27 = pbzip2::BZ2StreamScanner::ensureOutBuffCapacity (this_20(D), newSize_25);
  _8 = _27;
  retval.24_28 = _8 != 0;
  if (retval.24_28 != 0)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 6> [0.00%]:
  _33 = -1;
  goto <bb 9>; [0.00%]

  <bb 7> [100.00%]:
  _9 = (long unsigned int) additionSize_22;
  _41 = this_20(D)->_inBuffCurrent;
  _44 = _41;
  _10 = _44;
  _37 = this_20(D)->_outBuff.buf;
  _38 = this_20(D)->_outBuff.bufSize;
  _39 = (sizetype) _38;
  _40 = _37 + _39;
  _45 = _40;
  _11 = _45;
  _30 = __builtin_object_size (_11, 0);
  _29 = __memcpy_chk (_11, _10, _9, _30);
  _47 = _29;
  _12 = this_20(D)->_outBuff.bufSize;
  additionSize.25_13 = (unsigned int) additionSize_22;
  _14 = _12 + additionSize.25_13;
  this_20(D)->_outBuff.bufSize = _14;

  <bb 8> [0.00%]:
  this_20(D)->_inBuffCurrent = end_18(D);
  _35 = additionSize_22;

  <bb 9> [0.00%]:
  # _15 = PHI <_36(3), _33(6), _35(8)>
  return _15;

}



;; Function pbzip2::BZ2StreamScanner::appendOutBuffData() (_ZN6pbzip216BZ2StreamScanner17appendOutBuffDataEv, funcdef_no=1439, decl_uid=29346, cgraph_uid=448, symbol_order=450)

Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSearchPtr().
 Inlining pbzip2::BZ2StreamScanner::getInBuffSearchPtr() into pbzip2::BZ2StreamScanner::appendOutBuffData().
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.41751 D.41904 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


pbzip2::BZ2StreamScanner::appendOutBuffData() (struct BZ2StreamScanner * const this)
{
  CharType * D.41904;
  CharType * _1;
  CharType * _4;
  int _6;
  int _7;

  <bb 2> [100.00%]:
  _4 = this_3(D)->_inBuffSearchPtr;
  _8 = _4;
  _1 = _8;
  _6 = pbzip2::BZ2StreamScanner::appendOutBuffData (this_3(D), _1);
  _7 = _6;
  return _7;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const (_ZNKSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE4sizeEv, funcdef_no=2173, decl_uid=30112, cgraph_uid=914, symbol_order=917)

Iterations: 0
std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const (const struct basic_string * const this)
{
  size_type _3;

  <bb 2> [0.00%]:
  _3 = this_2(D)->_M_string_length;
  return _3;

}



;; Function pbzip2::BZ2StreamScanner::getHeaderSize() const (_ZNK6pbzip216BZ2StreamScanner13getHeaderSizeEv, funcdef_no=1429, decl_uid=29319, cgraph_uid=438, symbol_order=440)

Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const into pbzip2::BZ2StreamScanner::getHeaderSize() const.
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.41753 D.41908 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


pbzip2::BZ2StreamScanner::getHeaderSize() const (const struct BZ2StreamScanner * const this)
{
  size_type D.41908;
  const struct basic_string * _1;
  long unsigned int _4;
  size_t _5;

  <bb 2> [100.00%]:
  _1 = &this_2(D)->_bz2Header;
  _4 = _1->_M_string_length;
  _6 = _4;
  _5 = _6;
  return _5;

}



;; Function disposeMemory<char>(char*&)void (_Z13disposeMemoryIcEvRPT_, funcdef_no=2184, decl_uid=36382, cgraph_uid=925, symbol_order=928)

Iterations: 0
disposeMemory<char>(char*&)void (char * & pBuff)
{
  char * _1;
  char * _2;
  char * _3;

  <bb 2> [0.00%]:
  _1 = *pBuff_7(D);
  if (_1 != 0B)
    goto <bb 3>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 3> [0.00%]:
  _2 = *pBuff_7(D);
  if (_2 != 0B)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  _3 = *pBuff_7(D);
  operator delete[] (_3);

  <bb 5> [0.00%]:
  *pBuff_7(D) = 0B;

  <bb 6> [0.00%]:
  return;

}



;; Function disposeMemory<unsigned char>(unsigned char*&)void (_Z13disposeMemoryIhEvRPT_, funcdef_no=2185, decl_uid=36384, cgraph_uid=926, symbol_order=929)

Iterations: 0
disposeMemory<unsigned char>(unsigned char*&)void (unsigned char * & pBuff)
{
  unsigned char * _1;
  unsigned char * _2;
  unsigned char * _3;

  <bb 2> [0.00%]:
  _1 = *pBuff_7(D);
  if (_1 != 0B)
    goto <bb 3>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 3> [0.00%]:
  _2 = *pBuff_7(D);
  if (_2 != 0B)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  _3 = *pBuff_7(D);
  operator delete[] (_3);

  <bb 5> [0.00%]:
  *pBuff_7(D) = 0B;

  <bb 6> [0.00%]:
  return;

}



;; Function pbzip2::BZ2StreamScanner::dispose() (_ZN6pbzip216BZ2StreamScanner7disposeEv, funcdef_no=1926, decl_uid=29333, cgraph_uid=667, symbol_order=670)

Considering inline candidate disposeMemory<unsigned char>(unsigned char*&)void.
 Inlining disposeMemory<unsigned char>(unsigned char*&)void into pbzip2::BZ2StreamScanner::dispose().
Considering inline candidate disposeMemory<char>(char*&)void.
 Inlining disposeMemory<char>(char*&)void into pbzip2::BZ2StreamScanner::dispose().
Iterations: 1
Merging blocks 2 and 8
Removing basic block 6
Removing basic block 10
Merging blocks 7 and 4

Symbols to be put in SSA form
{ D.41756 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 7
Number of blocks to update: 6 ( 86%)


pbzip2::BZ2StreamScanner::dispose() (struct BZ2StreamScanner * const this)
{
  char * * _1;
  CharType * * _2;
  unsigned char * _9;
  char * _10;

  <bb 2> [100.00%]:
  _1 = &this_3(D)->_outBuff.buf;
  _10 = *_1;
  if (_10 != 0B)
    goto <bb 3>; [57.44%]
  else
    goto <bb 4>; [42.56%]

  <bb 3> [57.44%]:
  operator delete[] (_10);
  *_1 = 0B;

  <bb 4> [100.00%]:
  this_3(D)->_outBuff.bufSize = 0;
  _2 = &this_3(D)->_inBuff;
  _9 = MEM[(unsigned char * &)_2];
  if (_9 != 0B)
    goto <bb 5>; [57.44%]
  else
    goto <bb 6>; [42.56%]

  <bb 5> [57.44%]:
  operator delete[] (_9);
  MEM[(unsigned char * &)_2] = 0B;

  <bb 6> [0.00%]:
  this_3(D)->_inBuffCapacity = 0;
  return;

}



;; Function std::max<unsigned long>(unsigned long const&, unsigned long const&)unsigned long const& (_ZSt3maxImERKT_S2_S2_, funcdef_no=2186, decl_uid=36413, cgraph_uid=927, symbol_order=930)

Iterations: 0
std::max<unsigned long>(unsigned long const&, unsigned long const&)unsigned long const& (const long unsigned int & __a, const long unsigned int & __b)
{
  long unsigned int _1;
  long unsigned int _2;
  const long unsigned int & _3;
  const long unsigned int & _7;
  const long unsigned int & _8;

  <bb 2> [0.00%]:
  _1 = *__a_5(D);
  _2 = *__b_6(D);
  if (_1 < _2)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  _8 = __b_6(D);
  goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  _7 = __a_5(D);

  <bb 5> [0.00%]:
  # _3 = PHI <_8(3), _7(4)>
  return _3;

}



;; Function pbzip2::BZ2StreamScanner::appendOutBuffDataUpToLimit() (_ZN6pbzip216BZ2StreamScanner26appendOutBuffDataUpToLimitEv, funcdef_no=1933, decl_uid=29348, cgraph_uid=675, symbol_order=678)

Considering inline candidate std::min<unsigned char*>(unsigned char* const&, unsigned char* const&)unsigned char* const&.
 Inlining std::min<unsigned char*>(unsigned char* const&, unsigned char* const&)unsigned char* const& into pbzip2::BZ2StreamScanner::appendOutBuffDataUpToLimit().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffCurrent().
 Inlining pbzip2::BZ2StreamScanner::getInBuffCurrent() into pbzip2::BZ2StreamScanner::appendOutBuffDataUpToLimit().
Considering inline candidate std::min<unsigned char*>(unsigned char* const&, unsigned char* const&)unsigned char* const&.
 Inlining std::min<unsigned char*>(unsigned char* const&, unsigned char* const&)unsigned char* const& into pbzip2::BZ2StreamScanner::appendOutBuffDataUpToLimit().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSearchPtr().
 Inlining pbzip2::BZ2StreamScanner::getInBuffSearchPtr() into pbzip2::BZ2StreamScanner::appendOutBuffDataUpToLimit().
Considering inline candidate pbzip2::BZ2StreamScanner::getHeaderSize() const.
 Inlining pbzip2::BZ2StreamScanner::getHeaderSize() const into pbzip2::BZ2StreamScanner::appendOutBuffDataUpToLimit().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffEnd().
 Inlining pbzip2::BZ2StreamScanner::getInBuffEnd() into pbzip2::BZ2StreamScanner::appendOutBuffDataUpToLimit().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffEnd().
 Inlining pbzip2::BZ2StreamScanner::getInBuffEnd() into pbzip2::BZ2StreamScanner::appendOutBuffDataUpToLimit().
Considering inline candidate pbzip2::BZ2StreamScanner::eof() const.
 Inlining pbzip2::BZ2StreamScanner::eof() const into pbzip2::BZ2StreamScanner::appendOutBuffDataUpToLimit().
Considering inline candidate std::max<unsigned long>(unsigned long const&, unsigned long const&)unsigned long const&.
 Inlining std::max<unsigned long>(unsigned long const&, unsigned long const&)unsigned long const& into pbzip2::BZ2StreamScanner::appendOutBuffDataUpToLimit().
Considering inline candidate pbzip2::BZ2StreamScanner::getOutBuffCapacityLimit() const.
 Inlining pbzip2::BZ2StreamScanner::getOutBuffCapacityLimit() const into pbzip2::BZ2StreamScanner::appendOutBuffDataUpToLimit().
Iterations: 1
Merging blocks 2 and 16
Removing basic block 4
Removing basic block 5
Removing basic block 6
Merging blocks 7 and 36
Merging blocks 14 and 11
Merging blocks 18 and 17
Merging blocks 20 and 19
Merging blocks 24 and 21
Merging blocks 30 and 29
Merging blocks 34 and 31
Merging blocks 2 and 15
Merging blocks 2 and 12
Merging blocks 7 and 35
Merging blocks 7 and 32
Merging blocks 30 and 28
Merging blocks 30 and 27
Merging blocks 30 and 26
Merging blocks 30 and 25
Merging blocks 30 and 22

Symbols to be put in SSA form
{ D.41758 D.41918 D.41920 D.41922 D.41924 D.41927 D.41929 D.41931 D.41933 D.41936 D.41938 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 17
Number of blocks to update: 16 ( 94%)


pbzip2::BZ2StreamScanner::appendOutBuffDataUpToLimit() (struct BZ2StreamScanner * const this)
{
  CharType * D.41938;
  unsigned char * const & D.41936;
  CharType * D.41933;
  size_t D.41931;
  CharType * D.41929;
  unsigned char * const & D.41927;
  CharType * D.41924;
  bool D.41922;
  size_t D.41920;
  const long unsigned int & D.41918;
  CharType * end;
  CharType * end2;
  CharType * end1;
  int maxAddition;
  size_t maxCapacity;
  unsigned char * const D.36422;
  unsigned char * const D.36423;
  const long unsigned int D.36416;
  size_t * _1;
  long unsigned int _2;
  const long unsigned int & _3;
  unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  CharType * _7;
  CharType * _8;
  long unsigned int _9;
  sizetype _10;
  CharType * _11;
  CharType * _12;
  unsigned char * const & _13;
  unsigned char * _14;
  CharType * _15;
  sizetype _16;
  CharType * _17;
  unsigned char * const & _18;
  int _19;
  CharType * _24;
  unsigned char * const & _26;
  unsigned char * _30;
  bool retval.26_31;
  CharType * _32;
  bool _33;
  long unsigned int _35;
  const long unsigned int & _37;
  unsigned char * _41;
  long unsigned int _43;
  long unsigned int _45;
  int _48;
  int _49;
  int _52;
  long unsigned int _55;
  CharType * _56;
  unsigned char * _57;
  unsigned char * _58;
  unsigned char * const & _59;
  CharType * _60;

  <bb 2> [100.00%]:
  _1 = &this_22(D)->_outBuffCapacity;
  _35 = MEM[(const struct BZ2StreamScanner *)this_22(D)]._outBuffCapacityLimit;
  _61 = _35;
  _2 = _61;
  D.36416 = _2;
  _45 = D.36416;
  _43 = MEM[(const long unsigned int &)_1];
  if (_43 > _45)
    goto <bb 4>; [46.00%]
  else
    goto <bb 3>; [54.00%]

  <bb 3> [54.00%]:

  <bb 4> [100.00%]:
  # _37 = PHI <_1(2), &D.36416(3)>
  _62 = _37;
  _3 = _62;
  maxCapacity_27 = *_3;
  D.36416 ={v} {CLOBBER};
  _4 = (unsigned int) maxCapacity_27;
  _5 = this_22(D)->_outBuff.bufSize;
  _6 = _4 - _5;
  maxAddition_29 = (int) _6;
  if (maxAddition_29 <= 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 5> [0.00%]:
  _52 = 0;
  goto <bb 15>; [0.00%]

  <bb 6> [100.00%]:
  _33 = MEM[(const struct BZ2StreamScanner *)this_22(D)]._eof;
  _63 = _33;
  retval.26_31 = _63;
  if (retval.26_31 != 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 7> [100.00%]:
  _32 = this_22(D)->_inBuffEnd;
  _68 = _32;
  _7 = _68;
  end1 = _7;
  goto <bb 11>; [0.00%]

  <bb 8> [100.00%]:
  _56 = this_22(D)->_inBuffEnd;
  _64 = _56;
  _8 = _64;
  _55 = MEM[(const struct basic_string *)this_22(D) + 16B]._M_string_length;
  _65 = _55;
  _9 = _65;
  _10 = 1 - _9;
  _11 = _8 + _10;
  D.36423 = _11;
  _24 = this_22(D)->_inBuffSearchPtr;
  _66 = _24;
  _12 = _66;
  D.36422 = _12;
  _41 = D.36423;
  _30 = D.36422;
  if (_30 > _41)
    goto <bb 10>; [46.00%]
  else
    goto <bb 9>; [54.00%]

  <bb 9> [54.00%]:

  <bb 10> [100.00%]:
  # _26 = PHI <&D.36423(8), &D.36422(9)>
  _67 = _26;
  _13 = _67;
  _14 = *_13;
  end1 = _14;
  D.36422 ={v} {CLOBBER};
  D.36423 ={v} {CLOBBER};

  <bb 11> [100.00%]:
  _60 = this_22(D)->_inBuffCurrent;
  _69 = _60;
  _15 = _69;
  _16 = (sizetype) maxAddition_29;
  _17 = _15 + _16;
  end2 = _17;
  _57 = MEM[(unsigned char * const &)&end2];
  _58 = MEM[(unsigned char * const &)&end1];
  if (_57 < _58)
    goto <bb 13>; [46.00%]
  else
    goto <bb 12>; [54.00%]

  <bb 12> [54.00%]:

  <bb 13> [100.00%]:
  # _59 = PHI <&end2(11), &end1(12)>
  _70 = _59;
  _18 = _70;
  end_46 = *_18;
  _48 = pbzip2::BZ2StreamScanner::appendOutBuffData (this_22(D), end_46);

  <bb 14> [0.00%]:
  _49 = _48;

  <bb 15> [0.00%]:
  # _19 = PHI <_52(5), _49(14)>
  end1 ={v} {CLOBBER};
  end2 ={v} {CLOBBER};
  return _19;

<L7> [0.00%]:
  end1 ={v} {CLOBBER};
  end2 ={v} {CLOBBER};
  resx 1

}



;; Function std::min<unsigned long>(unsigned long const&, unsigned long const&)unsigned long const& (_ZSt3minImERKT_S2_S2_, funcdef_no=2189, decl_uid=8982, cgraph_uid=929, symbol_order=932)

Iterations: 0
std::min<unsigned long>(unsigned long const&, unsigned long const&)unsigned long const& (const long unsigned int & __a, const long unsigned int & __b)
{
  long unsigned int _1;
  long unsigned int _2;
  const long unsigned int & _3;
  const long unsigned int & _7;
  const long unsigned int & _8;

  <bb 2> [0.00%]:
  _1 = *__b_5(D);
  _2 = *__a_6(D);
  if (_1 < _2)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  _8 = __b_5(D);
  goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  _7 = __a_6(D);

  <bb 5> [0.00%]:
  # _3 = PHI <_8(3), _7(4)>
  return _3;

}



;; Function std::move<std::allocator<unsigned char>&>(std::allocator<unsigned char>&)std::remove_reference<std::allocator<unsigned char>&>::type&& (_ZSt4moveIRSaIhEEONSt16remove_referenceIT_E4typeEOS3_, funcdef_no=2302, decl_uid=38941, cgraph_uid=1042, symbol_order=1045)

Iterations: 0
std::move<std::allocator<unsigned char>&>(std::allocator<unsigned char>&)std::remove_reference<std::allocator<unsigned char>&>::type&& (struct allocator & __t)
{
  struct type & _2;

  <bb 2> [0.00%]:
  _2 = __t_1(D);
  return _2;

}



;; Function __gnu_cxx::char_traits<unsigned char>::eq(unsigned char const&, unsigned char const&) (_ZN9__gnu_cxx11char_traitsIhE2eqERKhS3_, funcdef_no=2309, decl_uid=29548, cgraph_uid=1048, symbol_order=1051)

Iterations: 0
__gnu_cxx::char_traits<unsigned char>::eq(unsigned char const&, unsigned char const&) (const char_type & __c1, const char_type & __c2)
{
  unsigned char _1;
  unsigned char _2;
  bool _6;

  <bb 2> [0.00%]:
  _1 = *__c1_4(D);
  _2 = *__c2_5(D);
  _6 = _1 == _2;
  return _6;

}



;; Function __gnu_cxx::char_traits<unsigned char>::length(unsigned char const*) (_ZN9__gnu_cxx11char_traitsIhE6lengthEPKh, funcdef_no=2308, decl_uid=29558, cgraph_uid=1049, symbol_order=1052)

Considering inline candidate __gnu_cxx::char_traits<unsigned char>::eq(unsigned char const&, unsigned char const&).
 Inlining __gnu_cxx::char_traits<unsigned char>::eq(unsigned char const&, unsigned char const&) into __gnu_cxx::char_traits<unsigned char>::length(unsigned char const*).
Iterations: 1
Merging blocks 3 and 7
Merging blocks 3 and 6

Symbols to be put in SSA form
{ D.41762 D.41945 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 6
Number of blocks to update: 5 ( 83%)


No longer having address taken: D.38952

Symbols to be put in SSA form
{ D.38952 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 6
Number of blocks to update: 5 ( 83%)


__gnu_cxx::char_traits<unsigned char>::length(unsigned char const*) (const char_type * __p)
{
  bool D.41945;
  size_t __i;
  const char_type D.38952;
  const char_type * _1;
  bool _2;
  unsigned char _9;
  bool retval.3_10;
  size_t _12;
  unsigned char _14;
  bool _15;

  <bb 2> [0.00%]:
  __i_5 = 0;

  <bb 3> [100.00%]:
  # __i_3 = PHI <__i_5(2), __i_13(4)>
  _17 = 0;
  _1 = __p_8(D) + __i_3;
  _9 = *_1;
  _14 = _17;
  _15 = _9 == _14;
  _16 = _15;
  _2 = _16;
  retval.3_10 = ~_2;
  if (retval.3_10 != 0)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  __i_13 = __i_3 + 1;
  goto <bb 3>; [0.00%]

  <bb 5> [0.00%]:
  _12 = __i_3;
  return _12;

}



;; Function std::__miter_base<unsigned char*>(unsigned char*)unsigned char* (_ZSt12__miter_baseIPhET_S1_, funcdef_no=2310, decl_uid=38483, cgraph_uid=1051, symbol_order=1054)

Iterations: 0
std::__miter_base<unsigned char*>(unsigned char*)unsigned char* (unsigned char * __it)
{
  unsigned char * _2;

  <bb 2> [0.00%]:
  _2 = __it_1(D);
  return _2;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_check(unsigned long, char const*) const (_ZNKSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE8_M_checkEmPKc, funcdef_no=2312, decl_uid=29917, cgraph_uid=1053, symbol_order=1056)

Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_check(unsigned long, char const*) const.
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_check(unsigned long, char const*) const.
Iterations: 1
Merging blocks 2 and 6
Removing basic block 3
Merging blocks 8 and 7
Merging blocks 2 and 5

Symbols to be put in SSA form
{ D.41764 D.41949 D.41951 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_check(unsigned long, char const*) const (const struct basic_string * const this, size_type __pos, const char * __s)
{
  size_type D.41951;
  size_type D.41949;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _5;
  bool retval.39_7;
  size_type _8;
  long unsigned int _9;

  <bb 2> [100.00%]:
  _9 = this_4(D)->_M_string_length;
  _12 = _9;
  _1 = _12;
  retval.39_7 = __pos_6(D) > _1;
  if (retval.39_7 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [100.00%]:
  _5 = this_4(D)->_M_string_length;
  _13 = _5;
  _2 = _13;
  std::__throw_out_of_range_fmt ("%s: __pos (which is %zu) > this->size() (which is %zu)", __s_10(D), __pos_6(D), _2);

  <bb 4> [0.00%]:
  _8 = __pos_6(D);
  return _8;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_limit(unsigned long, unsigned long) const (_ZNKSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE8_M_limitEmm, funcdef_no=2313, decl_uid=29926, cgraph_uid=1054, symbol_order=1057)

Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_limit(unsigned long, unsigned long) const.
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_limit(unsigned long, unsigned long) const.
Iterations: 1
Merging blocks 2 and 7
Removing basic block 4
Merging blocks 9 and 8
Merging blocks 2 and 6

Symbols to be put in SSA form
{ D.41765 D.41954 D.41956 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 6
Number of blocks to update: 5 ( 83%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_limit(unsigned long, unsigned long) const (const struct basic_string * const this, size_type __pos, size_type __off)
{
  size_type D.41956;
  size_type D.41954;
  const bool __testoff;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  size_type iftmp.40_4;
  long unsigned int _8;
  long unsigned int _12;
  size_type iftmp.40_13;
  size_type iftmp.40_14;
  size_type _15;

  <bb 2> [100.00%]:
  _12 = this_7(D)->_M_string_length;
  _16 = _12;
  _1 = _16;
  _2 = _1 - __pos_9(D);
  __testoff_11 = __off_10(D) < _2;
  if (__testoff_11 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  iftmp.40_14 = __off_10(D);
  goto <bb 5>; [0.00%]

  <bb 4> [100.00%]:
  _8 = this_7(D)->_M_string_length;
  _17 = _8;
  _3 = _17;
  iftmp.40_13 = _3 - __pos_9(D);

  <bb 5> [0.00%]:
  # iftmp.40_4 = PHI <iftmp.40_14(3), iftmp.40_13(4)>
  _15 = iftmp.40_4;
  return _15;

}



;; Function __gnu_cxx::char_traits<unsigned char>::lt(unsigned char const&, unsigned char const&) (_ZN9__gnu_cxx11char_traitsIhE2ltERKhS3_, funcdef_no=2315, decl_uid=29551, cgraph_uid=1055, symbol_order=1058)

Iterations: 0
__gnu_cxx::char_traits<unsigned char>::lt(unsigned char const&, unsigned char const&) (const char_type & __c1, const char_type & __c2)
{
  unsigned char _1;
  unsigned char _2;
  bool _6;

  <bb 2> [0.00%]:
  _1 = *__c1_4(D);
  _2 = *__c2_5(D);
  _6 = _1 < _2;
  return _6;

}



;; Function __gnu_cxx::char_traits<unsigned char>::compare(unsigned char const*, unsigned char const*, unsigned long) (_ZN9__gnu_cxx11char_traitsIhE7compareEPKhS3_m, funcdef_no=2314, decl_uid=29554, cgraph_uid=1056, symbol_order=1059)

Considering inline candidate __gnu_cxx::char_traits<unsigned char>::lt(unsigned char const&, unsigned char const&).
 Inlining __gnu_cxx::char_traits<unsigned char>::lt(unsigned char const&, unsigned char const&) into __gnu_cxx::char_traits<unsigned char>::compare(unsigned char const*, unsigned char const*, unsigned long).
Considering inline candidate __gnu_cxx::char_traits<unsigned char>::lt(unsigned char const&, unsigned char const&).
 Inlining __gnu_cxx::char_traits<unsigned char>::lt(unsigned char const&, unsigned char const&) into __gnu_cxx::char_traits<unsigned char>::compare(unsigned char const*, unsigned char const*, unsigned long).
Iterations: 1
Merging blocks 4 and 12
Merging blocks 6 and 14
Merging blocks 4 and 11
Merging blocks 6 and 13

Symbols to be put in SSA form
{ D.41767 D.41961 D.41964 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 11
Number of blocks to update: 10 ( 91%)


__gnu_cxx::char_traits<unsigned char>::compare(unsigned char const*, unsigned char const*, unsigned long) (const char_type * __s1, const char_type * __s2, size_t __n)
{
  bool D.41964;
  bool D.41961;
  size_t __i;
  const char_type * _1;
  const char_type * _2;
  const char_type * _3;
  const char_type * _4;
  int _6;
  unsigned char _14;
  bool retval.41_15;
  unsigned char _16;
  bool retval.42_17;
  int _19;
  int _20;
  int _21;
  bool _22;
  unsigned char _23;
  unsigned char _24;
  bool _25;

  <bb 2> [0.00%]:
  __i_9 = 0;

  <bb 3> [0.00%]:
  # __i_5 = PHI <__i_9(2), __i_18(8)>
  if (__i_5 >= __n_11(D))
    goto <bb 9>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 4> [100.00%]:
  _1 = __s2_12(D) + __i_5;
  _2 = __s1_13(D) + __i_5;
  _16 = *_2;
  _14 = *_1;
  _22 = _14 > _16;
  _26 = _22;
  retval.41_15 = _26;
  if (retval.41_15 != 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 5> [0.00%]:
  _20 = -1;
  goto <bb 10>; [0.00%]

  <bb 6> [100.00%]:
  _3 = __s1_13(D) + __i_5;
  _4 = __s2_12(D) + __i_5;
  _23 = *_4;
  _24 = *_3;
  _25 = _23 < _24;
  _27 = _25;
  retval.42_17 = _27;
  if (retval.42_17 != 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 7> [0.00%]:
  _19 = 1;
  goto <bb 10>; [0.00%]

  <bb 8> [0.00%]:
  __i_18 = __i_5 + 1;
  goto <bb 3>; [0.00%]

  <bb 9> [0.00%]:
  _21 = 0;

  <bb 10> [0.00%]:
  # _6 = PHI <_20(5), _19(7), _21(9)>
  return _6;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const (_ZNKSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE7_M_dataEv, funcdef_no=2316, decl_uid=29818, cgraph_uid=1057, symbol_order=1060)

Iterations: 0
std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const (const struct basic_string * const this)
{
  unsigned char * _3;

  <bb 2> [0.00%]:
  _3 = this_2(D)->_M_dataplus._M_p;
  return _3;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::operator[](unsigned long) (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEEixEm, funcdef_no=2193, decl_uid=30139, cgraph_uid=934, symbol_order=937)

Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::operator[](unsigned long).
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.41769 D.41968 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::operator[](unsigned long) (struct basic_string * const this, size_type __pos)
{
  unsigned char * D.41968;
  unsigned char * _1;
  unsigned char * _4;
  value_type & _6;

  <bb 2> [100.00%]:
  _4 = MEM[(const struct basic_string *)this_3(D)]._M_dataplus._M_p;
  _7 = _4;
  _1 = _7;
  _6 = _1 + __pos_5(D);
  return _6;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_compare(unsigned long, unsigned long) (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE10_S_compareEmm, funcdef_no=2317, decl_uid=29973, cgraph_uid=1058, symbol_order=1061)

Iterations: 0
std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_compare(unsigned long, unsigned long) (size_type __n1, size_type __n2)
{
  const difference_type __d;
  long unsigned int _1;
  int _2;
  int _6;
  int _7;
  int _8;

  <bb 2> [0.00%]:
  _1 = __n1_3(D) - __n2_4(D);
  __d_5 = (const difference_type) _1;
  if (__d_5 > 2147483647)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  _8 = 2147483647;
  goto <bb 7>; [0.00%]

  <bb 4> [0.00%]:
  if (__d_5 < -2147483648)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 5> [0.00%]:
  _7 = -2147483648;
  goto <bb 7>; [0.00%]

  <bb 6> [0.00%]:
  _6 = (int) __d_5;

  <bb 7> [0.00%]:
  # _2 = PHI <_8(3), _7(5), _6(6)>
  return _2;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::compare(unsigned long, unsigned long, unsigned char const*, unsigned long) const (_ZNKSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE7compareEmmPKhm, funcdef_no=2188, decl_uid=30604, cgraph_uid=930, symbol_order=933)

Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_compare(unsigned long, unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_compare(unsigned long, unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::compare(unsigned long, unsigned long, unsigned char const*, unsigned long) const.
Considering inline candidate __gnu_cxx::char_traits<unsigned char>::compare(unsigned char const*, unsigned char const*, unsigned long).
 Inlining __gnu_cxx::char_traits<unsigned char>::compare(unsigned char const*, unsigned char const*, unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::compare(unsigned long, unsigned long, unsigned char const*, unsigned long) const.
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::compare(unsigned long, unsigned long, unsigned char const*, unsigned long) const.
Considering inline candidate std::min<unsigned long>(unsigned long const&, unsigned long const&)unsigned long const&.
 Inlining std::min<unsigned long>(unsigned long const&, unsigned long const&)unsigned long const& into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::compare(unsigned long, unsigned long, unsigned char const*, unsigned long) const.
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_limit(unsigned long, unsigned long) const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_limit(unsigned long, unsigned long) const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::compare(unsigned long, unsigned long, unsigned char const*, unsigned long) const.
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_check(unsigned long, char const*) const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_check(unsigned long, char const*) const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::compare(unsigned long, unsigned long, unsigned char const*, unsigned long) const.
Iterations: 1
Merging blocks 2 and 23
Merging blocks 3 and 27
Removing basic block 6
Merging blocks 11 and 5
Merging blocks 17 and 14
Merging blocks 21 and 18
Merging blocks 25 and 22
Merging blocks 30 and 26
Merging blocks 17 and 13
Merging blocks 17 and 12
Merging blocks 21 and 15
Merging blocks 25 and 19

Symbols to be put in SSA form
{ D.41771 D.41975 D.41977 D.41980 D.41984 D.41988 D.41992 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 19
Number of blocks to update: 18 ( 95%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::compare(unsigned long, unsigned long, unsigned char const*, unsigned long) const (const struct basic_string * const this, size_type __pos, size_type __n1, const unsigned char * __s, size_type __n2)
{
  const difference_type __d;
  int D.41992;
  size_type D.41988;
  size_type D.41984;
  const long unsigned int & D.41980;
  unsigned char * D.41977;
  size_t __i;
  int D.41975;
  int __r;
  const size_type __len;
  long unsigned int __n1.36_1;
  long unsigned int _2;
  const long unsigned int & _3;
  unsigned char * _4;
  unsigned char * _5;
  long unsigned int __n2.37_6;
  long unsigned int __n1.38_7;
  unsigned char _14;
  unsigned char _16;
  const char_type * _18;
  const char_type * _20;
  int _21;
  int _25;
  int _27;
  unsigned char * _28;
  long unsigned int _29;
  long unsigned int _30;
  const long unsigned int & _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int iftmp.40_34;
  long unsigned int _35;
  long unsigned int _36;
  int _38;
  int _39;

  <bb 2> [100.00%]:
  _35 = this_11(D)->_M_string_length;
  if (__pos_12(D) > _35)
    goto <bb 3>; [0.04%]
  else
    goto <bb 4>; [99.96%]

  <bb 3> [0.04%]:
  std::__throw_out_of_range_fmt ("%s: __pos (which is %zu) > this->size() (which is %zu)", "basic_string::compare", __pos_12(D), _35);

  <bb 4> [100.00%]:
  _40 = __pos_12(D);
  __n1.36_1 = __n1;
  _32 = this_11(D)->_M_string_length;
  _33 = _32 - __pos_12(D);
  if (__n1.36_1 < _33)
    goto <bb 6>; [46.00%]
  else
    goto <bb 5>; [54.00%]

  <bb 5> [54.00%]:

  <bb 6> [100.00%]:
  # iftmp.40_34 = PHI <__n1.36_1(4), _33(5)>
  _41 = iftmp.40_34;
  _2 = _41;
  __n1 = _2;
  _29 = __n2;
  _30 = __n1;
  if (_29 < _30)
    goto <bb 8>; [46.00%]
  else
    goto <bb 7>; [54.00%]

  <bb 7> [54.00%]:

  <bb 8> [100.00%]:
  # _31 = PHI <&__n2(6), &__n1(7)>
  _42 = _31;
  _3 = _42;
  __len_17 = *_3;
  _28 = this_11(D)->_M_dataplus._M_p;
  _43 = _28;
  _4 = _43;
  _5 = _4 + __pos_12(D);

  <bb 9> [100.00%]:
  # __i_23 = PHI <0(8), __i_26(12)>
  if (__len_17 <= __i_23)
    goto <bb 13>; [5.00%]
  else
    goto <bb 10>; [95.00%]

  <bb 10> [95.00%]:
  _20 = __s_19(D) + __i_23;
  _18 = _5 + __i_23;
  _16 = *_18;
  _14 = *_20;
  if (_14 > _16)
    goto <bb 13>; [5.00%]
  else
    goto <bb 11>; [95.00%]

  <bb 11> [90.25%]:
  if (_14 < _16)
    goto <bb 13>; [5.00%]
  else
    goto <bb 12>; [95.00%]

  <bb 12> [85.74%]:
  __i_26 = __i_23 + 1;
  goto <bb 9>; [100.00%]

  <bb 13> [14.26%]:
  # _27 = PHI <0(9), -1(10), 1(11)>
  _44 = _27;
  _21 = _44;
  __r_22 = _21;
  if (__r_22 == 0)
    goto <bb 14>; [0.00%]
  else
    goto <bb 18>; [0.00%]

  <bb 14> [100.00%]:
  __n2.37_6 = __n2;
  __n1.38_7 = __n1;
  _36 = __n1.38_7 - __n2.37_6;
  __d_37 = (const difference_type) _36;
  if (__d_37 > 2147483647)
    goto <bb 17>; [31.00%]
  else
    goto <bb 15>; [69.00%]

  <bb 15> [69.00%]:
  if (__d_37 < -2147483648)
    goto <bb 17>; [2.00%]
  else
    goto <bb 16>; [98.00%]

  <bb 16> [67.62%]:
  _38 = (int) _36;

  <bb 17> [100.00%]:
  # _39 = PHI <2147483647(14), -2147483648(15), _38(16)>
  _45 = _39;
  __r_24 = _45;

  <bb 18> [0.00%]:
  # __r_8 = PHI <__r_22(13), __r_24(17)>
  _25 = __r_8;
  return _25;

}



;; Function __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::__normal_iterator(unsigned char* const&) (_ZN9__gnu_cxx17__normal_iteratorIPhNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEEEEC2ERKS1_, funcdef_no=2319, decl_uid=36529, cgraph_uid=1060, symbol_order=1063)

Iterations: 0
__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::__normal_iterator(unsigned char* const&) (struct __normal_iterator * const this, unsigned char * const & __i)
{
  unsigned char * _1;

  <bb 2> [0.00%]:
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  _1 = *__i_5(D);
  this_3(D)->_M_current = _1;
  return;

}



;; Function __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::operator+(long) const (_ZNK9__gnu_cxx17__normal_iteratorIPhNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEEEEplEl, funcdef_no=2191, decl_uid=36507, cgraph_uid=932, symbol_order=935)

Considering inline candidate __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::__normal_iterator(unsigned char* const&).
 Inlining __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::__normal_iterator(unsigned char* const&) into __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::operator+(long) const.
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.41773 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


No longer having address taken: D.38498
No longer having address taken: D.38497

Symbols to be put in SSA form
{ D.38497 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::operator+(long) const (const struct __normal_iterator * const this, difference_type __n)
{
  unsigned char * const D.38497;
  struct __normal_iterator D.38498;
  struct __normal_iterator D.41510;
  unsigned char * _1;
  sizetype __n.43_2;
  unsigned char * _3;
  unsigned char * _12;

  <bb 2> [100.00%]:
  _1 = this_5(D)->_M_current;
  __n.43_2 = (sizetype) __n_6(D);
  _3 = _1 + __n.43_2;
  _15 = _3;
  MEM[(struct  &)&D.38498] ={v} {CLOBBER};
  _12 = _15;
  D.38498._M_current = _12;
  D.41510 = D.38498;
  D.38498 ={v} {CLOBBER};
  return D.41510;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::begin() (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE5beginEv, funcdef_no=2190, decl_uid=30088, cgraph_uid=931, symbol_order=934)

Considering inline candidate __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::__normal_iterator(unsigned char* const&).
 Inlining __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::__normal_iterator(unsigned char* const&) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::begin().
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::begin().
Iterations: 1
Merging blocks 2 and 6
Merging blocks 2 and 5
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.41774 D.42002 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


No longer having address taken: D.38495
No longer having address taken: D.38494

Symbols to be put in SSA form
{ D.38494 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::begin() (struct basic_string * const this)
{
  unsigned char * D.42002;
  unsigned char * const D.38494;
  struct iterator D.38495;
  struct iterator D.41514;
  unsigned char * _1;
  unsigned char * _4;
  unsigned char * _10;

  <bb 2> [100.00%]:
  _10 = MEM[(const struct basic_string *)this_3(D)]._M_dataplus._M_p;
  _11 = _10;
  _1 = _11;
  _14 = _1;
  MEM[(struct  &)&D.38495] ={v} {CLOBBER};
  _4 = _14;
  D.38495._M_current = _4;
  D.41514 = D.38495;
  D.38495 ={v} {CLOBBER};
  return D.41514;

}



;; Function __gnu_cxx::new_allocator<unsigned char>::new_allocator() (_ZN9__gnu_cxx13new_allocatorIhEC2Ev, funcdef_no=2357, decl_uid=29704, cgraph_uid=1098, symbol_order=1101)

Iterations: 0
__gnu_cxx::new_allocator<unsigned char>::new_allocator() (struct new_allocator * const this)
{
  <bb 2> [0.00%]:
  return;

}



;; Function std::allocator<unsigned char>::allocator() (_ZNSaIhEC2Ev, funcdef_no=2296, decl_uid=29769, cgraph_uid=1037, symbol_order=1040)

Considering inline candidate __gnu_cxx::new_allocator<unsigned char>::new_allocator().
 Inlining __gnu_cxx::new_allocator<unsigned char>::new_allocator() into std::allocator<unsigned char>::allocator().
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3
std::allocator<unsigned char>::allocator() (struct allocator * const this)
{
  void * _1;

  <bb 2> [100.00%]:
  return;

}



;; Function __gnu_cxx::new_allocator<unsigned char>::~new_allocator() (_ZN9__gnu_cxx13new_allocatorIhED2Ev, funcdef_no=2360, decl_uid=29709, cgraph_uid=1101, symbol_order=1104)

Iterations: 0
__gnu_cxx::new_allocator<unsigned char>::~new_allocator() (struct new_allocator * const this)
{
  <bb 2> [0.00%]:
  return;

}



;; Function std::allocator<unsigned char>::~allocator() (_ZNSaIhED2Ev, funcdef_no=2299, decl_uid=29774, cgraph_uid=1040, symbol_order=1043)

Considering inline candidate __gnu_cxx::new_allocator<unsigned char>::~new_allocator().
 Inlining __gnu_cxx::new_allocator<unsigned char>::~new_allocator() into std::allocator<unsigned char>::~allocator().
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3
std::allocator<unsigned char>::~allocator() (struct allocator * const this)
{
  void * _1;

  <bb 2> [100.00%]:
  return;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_Alloc_hider::~_Alloc_hider() (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE12_Alloc_hiderD2Ev, funcdef_no=2176, decl_uid=30871, cgraph_uid=916, symbol_order=919)

Considering inline candidate std::allocator<unsigned char>::~allocator().
 Inlining std::allocator<unsigned char>::~allocator() into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_Alloc_hider::~_Alloc_hider().
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3
std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_Alloc_hider::~_Alloc_hider() (struct _Alloc_hider * const this)
{
  <bb 2> [100.00%]:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_length(unsigned long) (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE9_M_lengthEm, funcdef_no=2365, decl_uid=29815, cgraph_uid=1106, symbol_order=1109)

Iterations: 0
std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_length(unsigned long) (struct basic_string * const this, size_type __length)
{
  <bb 2> [0.00%]:
  this_2(D)->_M_string_length = __length_3(D);
  return;

}



;; Function __gnu_cxx::char_traits<unsigned char>::assign(unsigned char&, unsigned char const&) (_ZN9__gnu_cxx11char_traitsIhE6assignERhRKh, funcdef_no=2366, decl_uid=29545, cgraph_uid=1107, symbol_order=1110)

Iterations: 0
__gnu_cxx::char_traits<unsigned char>::assign(unsigned char&, unsigned char const&) (char_type & __c1, const char_type & __c2)
{
  unsigned char _1;

  <bb 2> [0.00%]:
  _1 = *__c2_3(D);
  *__c1_4(D) = _1;
  return;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_set_length(unsigned long) (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE13_M_set_lengthEm, funcdef_no=2305, decl_uid=29827, cgraph_uid=1046, symbol_order=1049)

Considering inline candidate __gnu_cxx::char_traits<unsigned char>::assign(unsigned char&, unsigned char const&).
 Inlining __gnu_cxx::char_traits<unsigned char>::assign(unsigned char&, unsigned char const&) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_set_length(unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_set_length(unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_length(unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_length(unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_set_length(unsigned long).
Iterations: 1
Merging blocks 2 and 8
Merging blocks 2 and 7
Merging blocks 2 and 6
Merging blocks 2 and 5
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.41782 D.42018 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


No longer having address taken: D.38947

Symbols to be put in SSA form
{ D.38947 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_set_length(unsigned long) (struct basic_string * const this, size_type __n)
{
  unsigned char * D.42018;
  const char_type D.38947;
  unsigned char * _1;
  unsigned char * _2;
  unsigned char _8;
  unsigned char * _11;

  <bb 2> [100.00%]:
  this_4(D)->_M_string_length = __n_5(D);
  _15 = 0;
  _11 = MEM[(const struct basic_string *)this_4(D)]._M_dataplus._M_p;
  _13 = _11;
  _1 = _13;
  _2 = _1 + __n_5(D);
  _8 = _15;
  MEM[(char_type &)_2] = _8;
  return;

}



;; Function std::__niter_base<unsigned char*>(unsigned char*)unsigned char* (_ZSt12__niter_baseIPhET_S1_, funcdef_no=2370, decl_uid=38958, cgraph_uid=1111, symbol_order=1114)

Iterations: 0
std::__niter_base<unsigned char*>(unsigned char*)unsigned char* (unsigned char * __it)
{
  unsigned char * _2;

  <bb 2> [0.00%]:
  _2 = __it_1(D);
  return _2;

}



;; Function __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::operator++() (_ZN9__gnu_cxx17__normal_iteratorIPhNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEEEEppEv, funcdef_no=2373, decl_uid=36491, cgraph_uid=1114, symbol_order=1117)

Iterations: 0
__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::operator++() (struct __normal_iterator * const this)
{
  unsigned char * _1;
  unsigned char * _2;
  struct __normal_iterator & _6;

  <bb 2> [0.00%]:
  _1 = this_4(D)->_M_current;
  _2 = _1 + 1;
  this_4(D)->_M_current = _2;
  _6 = this_4(D);
  return _6;

}



;; Function std::__addressof<unsigned char>(unsigned char&)unsigned char* (_ZSt11__addressofIhEPT_RS0_, funcdef_no=2413, decl_uid=40554, cgraph_uid=1153, symbol_order=1156)

Iterations: 0
std::__addressof<unsigned char>(unsigned char&)unsigned char* (unsigned char & __r)
{
  unsigned char * _2;

  <bb 2> [0.00%]:
  _2 = __r_1(D);
  return _2;

}



;; Function std::addressof<unsigned char>(unsigned char&)unsigned char* (_ZSt9addressofIhEPT_RS0_, funcdef_no=2412, decl_uid=39501, cgraph_uid=1154, symbol_order=1157)

Considering inline candidate std::__addressof<unsigned char>(unsigned char&)unsigned char*.
 Inlining std::__addressof<unsigned char>(unsigned char&)unsigned char* into std::addressof<unsigned char>(unsigned char&)unsigned char*.
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.42026 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


std::addressof<unsigned char>(unsigned char&)unsigned char* (unsigned char & __r)
{
  unsigned char * D.42026;
  unsigned char * _4;

  <bb 2> [100.00%]:
  _3 = __r_2(D);
  _4 = _3;
  return _4;

}



;; Function std::pointer_traits<unsigned char*>::pointer_to(unsigned char&) (_ZNSt14pointer_traitsIPhE10pointer_toERh, funcdef_no=2355, decl_uid=38923, cgraph_uid=1096, symbol_order=1099)

Considering inline candidate std::addressof<unsigned char>(unsigned char&)unsigned char*.
 Inlining std::addressof<unsigned char>(unsigned char&)unsigned char* into std::pointer_traits<unsigned char*>::pointer_to(unsigned char&).
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.42029 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


std::pointer_traits<unsigned char*>::pointer_to(unsigned char&) (__make_not_void & __r)
{
  unsigned char * D.42029;
  unsigned char * _4;

  <bb 2> [100.00%]:
  _3 = __r_2(D);
  _4 = _3;
  return _4;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_local_data() (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE13_M_local_dataEv, funcdef_no=2294, decl_uid=29820, cgraph_uid=1035, symbol_order=1038)

Considering inline candidate std::pointer_traits<unsigned char*>::pointer_to(unsigned char&).
 Inlining std::pointer_traits<unsigned char*>::pointer_to(unsigned char&) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_local_data().
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.42032 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_local_data() (struct basic_string * const this)
{
  unsigned char * D.42032;
  unsigned char[16] * _1;
  unsigned char * _5;

  <bb 2> [100.00%]:
  _1 = &this_2(D)->D.29808._M_local_buf;
  _4 = _1;
  _5 = _4;
  return _5;

}



;; Function __gnu_cxx::new_allocator<unsigned char>::new_allocator(__gnu_cxx::new_allocator<unsigned char> const&) (_ZN9__gnu_cxx13new_allocatorIhEC2ERKS1_, funcdef_no=2415, decl_uid=29699, cgraph_uid=1156, symbol_order=1159)

Iterations: 0
__gnu_cxx::new_allocator<unsigned char>::new_allocator(__gnu_cxx::new_allocator<unsigned char> const&) (struct new_allocator * const this, const struct new_allocator & D.29701)
{
  <bb 2> [0.00%]:
  return;

}



;; Function std::allocator<unsigned char>::allocator(std::allocator<unsigned char> const&) (_ZNSaIhEC2ERKS_, funcdef_no=2363, decl_uid=29764, cgraph_uid=1104, symbol_order=1107)

Considering inline candidate __gnu_cxx::new_allocator<unsigned char>::new_allocator(__gnu_cxx::new_allocator<unsigned char> const&).
 Inlining __gnu_cxx::new_allocator<unsigned char>::new_allocator(__gnu_cxx::new_allocator<unsigned char> const&) into std::allocator<unsigned char>::allocator(std::allocator<unsigned char> const&).
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3
std::allocator<unsigned char>::allocator(std::allocator<unsigned char> const&) (struct allocator * const this, const struct allocator & __a)
{
  void * _1;

  <bb 2> [100.00%]:
  return;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_Alloc_hider::_Alloc_hider(unsigned char*, std::allocator<unsigned char>&&) (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE12_Alloc_hiderC2EPhOS3_, funcdef_no=2303, decl_uid=29791, cgraph_uid=1044, symbol_order=1047)

Considering inline candidate std::allocator<unsigned char>::allocator(std::allocator<unsigned char> const&).
 Inlining std::allocator<unsigned char>::allocator(std::allocator<unsigned char> const&) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_Alloc_hider::_Alloc_hider(unsigned char*, std::allocator<unsigned char>&&).
Considering inline candidate std::move<std::allocator<unsigned char>&>(std::allocator<unsigned char>&)std::remove_reference<std::allocator<unsigned char>&>::type&&.
 Inlining std::move<std::allocator<unsigned char>&>(std::allocator<unsigned char>&)std::remove_reference<std::allocator<unsigned char>&>::type&& into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_Alloc_hider::_Alloc_hider(unsigned char*, std::allocator<unsigned char>&&).
Iterations: 1
Merging blocks 2 and 6
Removing basic block 4
Merging blocks 2 and 5
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.42041 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_Alloc_hider::_Alloc_hider(unsigned char*, std::allocator<unsigned char>&&) (struct _Alloc_hider * const this, unsigned char * __dat, struct allocator & __a)
{
  struct type & D.42041;
  struct type & _1;

  <bb 2> [100.00%]:
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  _7 = __a_5(D);
  _1 = _7;
  this_3(D)->_M_p = __dat_8(D);
  return;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::basic_string() (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEEC2Ev, funcdef_no=2178, decl_uid=30729, cgraph_uid=919, symbol_order=922)

Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_set_length(unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_set_length(unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::basic_string().
Considering inline candidate std::allocator<unsigned char>::~allocator().
 Inlining std::allocator<unsigned char>::~allocator() into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::basic_string().
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_Alloc_hider::_Alloc_hider(unsigned char*, std::allocator<unsigned char>&&).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_Alloc_hider::_Alloc_hider(unsigned char*, std::allocator<unsigned char>&&) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::basic_string().
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_local_data().
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_local_data() into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::basic_string().
Considering inline candidate std::allocator<unsigned char>::allocator().
 Inlining std::allocator<unsigned char>::allocator() into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::basic_string().
Iterations: 1
Merging blocks 2 and 12
Removing basic block 6
Removing basic block 7
Removing basic block 11
Merging blocks 2 and 10
Merging blocks 2 and 9
Merging blocks 2 and 8
Merging blocks 2 and 5
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.41792 D.42050 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


No longer having address taken: D.38463
std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::basic_string() (struct basic_string * const this)
{
  unsigned char * D.42050;
  struct _Alloc_hider * _1;
  unsigned char * _2;
  struct _Alloc_hider * _3;
  unsigned char[16] * _7;
  unsigned char * _8;
  unsigned char * _10;

  <bb 2> [100.00%]:
  MEM[(struct  &)this_5(D)] ={v} {CLOBBER};
  _1 = &this_5(D)->_M_dataplus;
  _7 = &this_5(D)->D.29808._M_local_buf;
  _13 = _7;
  _2 = _13;
  MEM[(struct  &)_1] ={v} {CLOBBER};
  _1->_M_p = _2;
  this_5(D)->_M_string_length = 0;
  _10 = MEM[(const struct basic_string *)this_5(D)]._M_dataplus._M_p;
  _8 = _10;
  MEM[(char_type &)_8] = 0;
  return;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_get_allocator() (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE16_M_get_allocatorEv, funcdef_no=2419, decl_uid=29913, cgraph_uid=1160, symbol_order=1163)

Iterations: 0
std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_get_allocator() (struct basic_string * const this)
{
  struct allocator_type & _2;

  <bb 2> [0.00%]:
  _2 = &this_1(D)->_M_dataplus;
  return _2;

}



;; Function std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned char>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char* (_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIhEEPT_PKS3_S6_S4_, funcdef_no=2426, decl_uid=39571, cgraph_uid=1167, symbol_order=1170)

Iterations: 0
std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned char>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char* (const unsigned char * __first, const unsigned char * __last, unsigned char * __result)
{
  const ptrdiff_t _Num;
  long int __last.11_1;
  long int __first.12_2;
  long unsigned int _Num.13_3;
  sizetype _Num.14_4;
  unsigned char * _12;

  <bb 2> [0.00%]:
  __last.11_1 = (long int) __last_6(D);
  __first.12_2 = (long int) __first_7(D);
  _Num_8 = __last.11_1 - __first.12_2;
  if (_Num_8 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  _Num.13_3 = (long unsigned int) _Num_8;
  memmove (__result_10(D), __first_7(D), _Num.13_3);

  <bb 4> [0.00%]:
  _Num.14_4 = (sizetype) _Num_8;
  _12 = __result_10(D) + _Num.14_4;
  return _12;

}



;; Function std::__copy_move_a<false, unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char* (_ZSt13__copy_move_aILb0EPhS0_ET1_T0_S2_S1_, funcdef_no=2371, decl_uid=38960, cgraph_uid=1112, symbol_order=1115)

Considering inline candidate std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned char>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char*.
 Inlining std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned char>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char* into std::__copy_move_a<false, unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char*.
Iterations: 1
Merging blocks 2 and 4
Merging blocks 6 and 3

Symbols to be put in SSA form
{ D.41795 D.42060 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


std::__copy_move_a<false, unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char* (unsigned char * __first, unsigned char * __last, unsigned char * __result)
{
  const ptrdiff_t _Num;
  unsigned char * D.42060;
  const bool __simple;
  unsigned char * _7;
  long int __last.11_8;
  long int __first.12_9;
  long unsigned int _Num.13_11;
  sizetype _Num.14_12;
  unsigned char * _13;

  <bb 2> [100.00%]:
  __simple_1 = 1;
  __last.11_8 = (long int) __last_4(D);
  __first.12_9 = (long int) __first_3(D);
  _Num_10 = __last.11_8 - __first.12_9;
  if (_Num_10 != 0)
    goto <bb 3>; [36.64%]
  else
    goto <bb 4>; [63.36%]

  <bb 3> [36.64%]:
  _Num.13_11 = (long unsigned int) _Num_10;
  memmove (__result_5(D), __first_3(D), _Num.13_11);

  <bb 4> [100.00%]:
  _Num.14_12 = (sizetype) _Num_10;
  _13 = __result_5(D) + _Num.14_12;
  _16 = _13;
  _7 = _16;
  return _7;

}



;; Function std::__copy_move_a2<false, unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char* (_ZSt14__copy_move_a2ILb0EPhS0_ET1_T0_S2_S1_, funcdef_no=2311, decl_uid=38485, cgraph_uid=1052, symbol_order=1055)

Considering inline candidate std::__copy_move_a<false, unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char*.
 Inlining std::__copy_move_a<false, unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char* into std::__copy_move_a2<false, unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char*.
Considering inline candidate std::__niter_base<unsigned char*>(unsigned char*)unsigned char*.
 Inlining std::__niter_base<unsigned char*>(unsigned char*)unsigned char* into std::__copy_move_a2<false, unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char*.
Considering inline candidate std::__niter_base<unsigned char*>(unsigned char*)unsigned char*.
 Inlining std::__niter_base<unsigned char*>(unsigned char*)unsigned char* into std::__copy_move_a2<false, unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char*.
Considering inline candidate std::__niter_base<unsigned char*>(unsigned char*)unsigned char*.
 Inlining std::__niter_base<unsigned char*>(unsigned char*)unsigned char* into std::__copy_move_a2<false, unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char*.
Iterations: 1
Merging blocks 2 and 12
Merging blocks 6 and 3
Merging blocks 2 and 11
Merging blocks 2 and 10
Merging blocks 2 and 9
Merging blocks 2 and 8
Merging blocks 2 and 7
Merging blocks 2 and 4

Symbols to be put in SSA form
{ D.41796 D.42070 D.42072 D.42074 D.42076 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


std::__copy_move_a2<false, unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char* (unsigned char * __first, unsigned char * __last, unsigned char * __result)
{
  unsigned char * D.42076;
  unsigned char * D.42074;
  unsigned char * D.42072;
  const ptrdiff_t _Num;
  unsigned char * D.42070;
  unsigned char * _1;
  unsigned char * _2;
  unsigned char * _3;
  long int __first.12_8;
  long int __last.11_10;
  unsigned char * _12;
  unsigned char * _13;
  long unsigned int _Num.13_14;
  sizetype _Num.14_15;
  unsigned char * _16;

  <bb 2> [100.00%]:
  _18 = __result_5(D);
  _1 = _18;
  _19 = __last_7(D);
  _2 = _19;
  _20 = __first_9(D);
  _3 = _20;
  __last.11_10 = (long int) _2;
  __first.12_8 = (long int) _3;
  _Num_6 = __last.11_10 - __first.12_8;
  if (_Num_6 != 0)
    goto <bb 3>; [36.64%]
  else
    goto <bb 4>; [63.36%]

  <bb 3> [36.64%]:
  _Num.13_14 = (long unsigned int) _Num_6;
  memmove (_1, _3, _Num.13_14);

  <bb 4> [100.00%]:
  _Num.14_15 = (sizetype) _Num_6;
  _16 = _1 + _Num.14_15;
  _22 = _16;
  _12 = _22;
  _13 = _12;
  return _13;

}



;; Function std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char* (_ZSt4copyIPhS0_ET0_T_S2_S1_, funcdef_no=2187, decl_uid=36432, cgraph_uid=928, symbol_order=931)

Considering inline candidate std::__copy_move_a2<false, unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char*.
 Inlining std::__copy_move_a2<false, unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char* into std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char*.
Considering inline candidate std::__miter_base<unsigned char*>(unsigned char*)unsigned char*.
 Inlining std::__miter_base<unsigned char*>(unsigned char*)unsigned char* into std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char*.
Considering inline candidate std::__miter_base<unsigned char*>(unsigned char*)unsigned char*.
 Inlining std::__miter_base<unsigned char*>(unsigned char*)unsigned char* into std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char*.
Iterations: 1
Merging blocks 2 and 10
Merging blocks 6 and 3
Merging blocks 2 and 9
Merging blocks 2 and 8
Merging blocks 2 and 7
Merging blocks 2 and 4

Symbols to be put in SSA form
{ D.41797 D.42083 D.42085 D.42087 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char* (unsigned char * __first, unsigned char * __last, unsigned char * __result)
{
  unsigned char * D.42087;
  unsigned char * D.42085;
  const ptrdiff_t _Num;
  unsigned char * D.42083;
  unsigned char * _1;
  unsigned char * _2;
  long int __first.12_5;
  long int __last.11_7;
  unsigned char * _10;
  unsigned char * _11;
  long unsigned int _Num.13_13;
  sizetype _Num.14_14;
  unsigned char * _15;

  <bb 2> [100.00%]:
  _17 = __last_4(D);
  _1 = _17;
  _18 = __first_6(D);
  _2 = _18;
  __last.11_7 = (long int) _1;
  __first.12_5 = (long int) _2;
  _Num_12 = __last.11_7 - __first.12_5;
  if (_Num_12 != 0)
    goto <bb 3>; [36.64%]
  else
    goto <bb 4>; [63.36%]

  <bb 3> [36.64%]:
  _Num.13_13 = (long unsigned int) _Num_12;
  memmove (__result_8(D), _2, _Num.13_13);

  <bb 4> [100.00%]:
  _Num.14_14 = (sizetype) _Num_12;
  _15 = __result_8(D) + _Num.14_14;
  _20 = _15;
  _10 = _20;
  _11 = _10;
  return _11;

}



;; Function pbzip2::BZ2StreamScanner::rewindInBuff() (_ZN6pbzip216BZ2StreamScanner12rewindInBuffEv, funcdef_no=1935, decl_uid=29371, cgraph_uid=676, symbol_order=679)

Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffBegin().
 Inlining pbzip2::BZ2StreamScanner::getInBuffBegin() into pbzip2::BZ2StreamScanner::rewindInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffBegin().
 Inlining pbzip2::BZ2StreamScanner::getInBuffBegin() into pbzip2::BZ2StreamScanner::rewindInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffBegin().
 Inlining pbzip2::BZ2StreamScanner::getInBuffBegin() into pbzip2::BZ2StreamScanner::rewindInBuff().
Considering inline candidate std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char*.
 Inlining std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*)unsigned char* into pbzip2::BZ2StreamScanner::rewindInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSearchPtr().
 Inlining pbzip2::BZ2StreamScanner::getInBuffSearchPtr() into pbzip2::BZ2StreamScanner::rewindInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffEnd().
 Inlining pbzip2::BZ2StreamScanner::getInBuffEnd() into pbzip2::BZ2StreamScanner::rewindInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffBegin().
 Inlining pbzip2::BZ2StreamScanner::getInBuffBegin() into pbzip2::BZ2StreamScanner::rewindInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSearchPtr().
 Inlining pbzip2::BZ2StreamScanner::getInBuffSearchPtr() into pbzip2::BZ2StreamScanner::rewindInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffEnd().
 Inlining pbzip2::BZ2StreamScanner::getInBuffEnd() into pbzip2::BZ2StreamScanner::rewindInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffCurrent().
 Inlining pbzip2::BZ2StreamScanner::getInBuffCurrent() into pbzip2::BZ2StreamScanner::rewindInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::failed().
 Inlining pbzip2::BZ2StreamScanner::failed() into pbzip2::BZ2StreamScanner::rewindInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::appendOutBuffData().
 Inlining pbzip2::BZ2StreamScanner::appendOutBuffData() into pbzip2::BZ2StreamScanner::rewindInBuff().
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const into pbzip2::BZ2StreamScanner::rewindInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffEnd().
 Inlining pbzip2::BZ2StreamScanner::getInBuffEnd() into pbzip2::BZ2StreamScanner::rewindInBuff().
Iterations: 1
Merging blocks 2 and 19
Removing basic block 9
Merging blocks 10 and 41
Merging blocks 21 and 20
Removing basic block 28
Merging blocks 31 and 27
Merging blocks 2 and 18
Merging blocks 2 and 17
Merging blocks 2 and 16
Merging blocks 2 and 15
Merging blocks 2 and 14
Merging blocks 2 and 13
Merging blocks 2 and 12
Merging blocks 10 and 40
Merging blocks 10 and 39
Merging blocks 10 and 38
Merging blocks 10 and 37
Merging blocks 10 and 36
Merging blocks 10 and 35
Merging blocks 10 and 34
Merging blocks 10 and 33
Merging blocks 10 and 32
Merging blocks 10 and 29
Merging blocks 31 and 26
Merging blocks 31 and 25
Merging blocks 31 and 24
Merging blocks 31 and 23
Merging blocks 31 and 22

Symbols to be put in SSA form
{ D.41798 D.42090 D.42092 D.42094 D.42096 D.42098 D.42100 D.42102 D.42104 D.42110 D.42112 D.42114 D.42116 D.42118 D.42120 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 14
Number of blocks to update: 13 ( 93%)


pbzip2::BZ2StreamScanner::rewindInBuff() (struct BZ2StreamScanner * const this)
{
  CharType * D.42120;
  CharType * D.42118;
  CharType * D.42116;
  CharType * D.42114;
  CharType * D.42112;
  const ptrdiff_t _Num;
  unsigned char * D.42110;
  CharType * D.42104;
  CharType * D.42102;
  CharType * D.42100;
  CharType * D.42098;
  CharType * D.42096;
  size_type D.42094;
  int D.42092;
  bool D.42090;
  int tailSize;
  int ret;
  CharType * _1;
  struct basic_string * _2;
  long unsigned int _3;
  sizetype _4;
  CharType * _5;
  bool _6;
  CharType * _7;
  CharType * _8;
  long int _9;
  CharType * _10;
  long int _11;
  long int _12;
  CharType * _13;
  CharType * _14;
  CharType * _15;
  CharType * _16;
  sizetype _17;
  CharType * _18;
  CharType * _19;
  CharType * _20;
  bool iftmp.28_21;
  int _22;
  long int __first.12_27;
  long int __last.11_28;
  int _31;
  CharType * _33;
  bool iftmp.28_34;
  bool iftmp.28_35;
  bool retval.27_36;
  CharType * _37;
  CharType * _39;
  CharType * _40;
  CharType * _42;
  long unsigned int _43;
  int _44;
  CharType * _46;
  bool _48;
  unsigned int _50;
  int _52;
  int _53;
  long unsigned int _Num.13_55;
  sizetype _Num.14_56;
  unsigned char * _57;
  CharType * _58;
  CharType * _59;
  CharType * _60;
  CharType * _61;
  CharType * _62;

  <bb 2> [100.00%]:
  _42 = this_26(D)->_inBuffEnd;
  _64 = _42;
  _1 = _64;
  _2 = &this_26(D)->_bz2Header;
  _43 = MEM[(const struct basic_string *)_2]._M_string_length;
  _65 = _43;
  _3 = _65;
  _4 = 1 - _3;
  _5 = _1 + _4;
  this_26(D)->_inBuffSearchPtr = _5;
  _46 = this_26(D)->_inBuffSearchPtr;
  _44 = pbzip2::BZ2StreamScanner::appendOutBuffData (this_26(D), _46);
  _67 = _44;
  _31 = _67;
  ret_32 = _31;
  _50 = this_26(D)->_errState;
  _48 = _50 != 0;
  _68 = _48;
  _6 = _68;
  if (_6 != 0)
    goto <bb 4>; [0.00%]
  else
    goto <bb 3>; [0.00%]

  <bb 3> [0.00%]:
  if (ret_32 < 0)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  iftmp.28_35 = 1;
  goto <bb 6>; [0.00%]

  <bb 5> [0.00%]:
  iftmp.28_34 = 0;

  <bb 6> [0.00%]:
  # iftmp.28_21 = PHI <iftmp.28_35(4), iftmp.28_34(5)>
  retval.27_36 = iftmp.28_21;
  if (retval.27_36 != 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 7> [0.00%]:
  _53 = -1;
  goto <bb 13>; [0.00%]

  <bb 8> [0.00%]:
  if (ret_32 == 0)
    goto <bb 9>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 9> [100.00%]:
  _40 = this_26(D)->_inBuffCurrent;
  _69 = _40;
  _7 = _69;
  this_26(D)->_inBuffSearchPtr = _7;

  <bb 10> [100.00%]:
  _62 = this_26(D)->_inBuffEnd;
  _70 = _62;
  _8 = _70;
  _9 = (long int) _8;
  _61 = this_26(D)->_inBuffSearchPtr;
  _71 = _61;
  _10 = _71;
  _11 = (long int) _10;
  _12 = _9 - _11;
  tailSize_41 = (int) _12;
  _60 = this_26(D)->_inBuff;
  _72 = _60;
  _13 = _72;
  _59 = this_26(D)->_inBuffEnd;
  _73 = _59;
  _14 = _73;
  _58 = this_26(D)->_inBuffSearchPtr;
  _74 = _58;
  _15 = _74;
  __last.11_28 = (long int) _14;
  __first.12_27 = (long int) _15;
  _Num_54 = __last.11_28 - __first.12_27;
  if (_Num_54 != 0)
    goto <bb 11>; [36.64%]
  else
    goto <bb 12>; [63.36%]

  <bb 11> [36.64%]:
  _Num.13_55 = (long unsigned int) _Num_54;
  memmove (_13, _15, _Num.13_55);

  <bb 12> [100.00%]:
  _Num.14_56 = (sizetype) _Num_54;
  _57 = _13 + _Num.14_56;
  _76 = _57;
  _33 = this_26(D)->_inBuff;
  _77 = _33;
  _16 = _77;
  _17 = (sizetype) tailSize_41;
  _18 = _16 + _17;
  this_26(D)->_inBuffEnd = _18;
  _37 = this_26(D)->_inBuff;
  _78 = _37;
  _19 = _78;
  this_26(D)->_inBuffCurrent = _19;
  _39 = this_26(D)->_inBuff;
  _79 = _39;
  _20 = _79;
  this_26(D)->_inBuffSearchPtr = _20;
  _52 = 0;

  <bb 13> [0.00%]:
  # _22 = PHI <_53(7), _52(12)>
  return _22;

}



;; Function pbzip2::BZ2StreamScanner::readData() (_ZN6pbzip216BZ2StreamScanner8readDataEv, funcdef_no=1936, decl_uid=29353, cgraph_uid=677, symbol_order=680)

Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffEnd().
 Inlining pbzip2::BZ2StreamScanner::getInBuffEnd() into pbzip2::BZ2StreamScanner::readData().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSize() const.
 Inlining pbzip2::BZ2StreamScanner::getInBuffSize() const into pbzip2::BZ2StreamScanner::readData().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffCapacity() const.
 Inlining pbzip2::BZ2StreamScanner::getInBuffCapacity() const into pbzip2::BZ2StreamScanner::readData().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSize() const.
 Inlining pbzip2::BZ2StreamScanner::getInBuffSize() const into pbzip2::BZ2StreamScanner::readData().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffCapacity() const.
 Inlining pbzip2::BZ2StreamScanner::getInBuffCapacity() const into pbzip2::BZ2StreamScanner::readData().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffCapacity() const.
 Inlining pbzip2::BZ2StreamScanner::getInBuffCapacity() const into pbzip2::BZ2StreamScanner::readData().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSize() const.
 Inlining pbzip2::BZ2StreamScanner::getInBuffSize() const into pbzip2::BZ2StreamScanner::readData().
Considering inline candidate pbzip2::BZ2StreamScanner::failed().
 Inlining pbzip2::BZ2StreamScanner::failed() into pbzip2::BZ2StreamScanner::readData().
Iterations: 1
Merging blocks 2 and 14
Removing basic block 4
Removing basic block 5
Removing basic block 6
Merging blocks 18 and 17
Merging blocks 22 and 21
Merging blocks 28 and 27
Merging blocks 2 and 13
Merging blocks 18 and 16
Merging blocks 18 and 15
Merging blocks 22 and 20
Merging blocks 22 and 19
Merging blocks 28 and 26
Merging blocks 28 and 25
Merging blocks 28 and 24
Merging blocks 28 and 23

Symbols to be put in SSA form
{ D.41799 D.42123 D.42125 D.42127 D.42129 D.42131 D.42133 D.42135 D.42137 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 13
Number of blocks to update: 12 ( 92%)


pbzip2::BZ2StreamScanner::readData() (struct BZ2StreamScanner * const this)
{
  size_t D.42137;
  size_t D.42135;
  CharType * D.42133;
  size_t D.42131;
  size_t D.42129;
  size_t D.42127;
  size_t D.42125;
  bool D.42123;
  int bytesRead;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  CharType * _10;
  int _11;
  long int _12;
  CharType * _13;
  sizetype _14;
  CharType * _15;
  unsigned int _16;
  unsigned int _17;
  int _18;
  long int _24;
  bool retval.29_25;
  long int _26;
  CharType * _27;
  bool retval.30_28;
  long unsigned int _29;
  bool _30;
  unsigned int _31;
  long int _33;
  int _38;
  int _40;
  long int _41;
  CharType * _42;
  int _45;
  int _46;
  long unsigned int _47;
  CharType * _48;
  long int _49;
  CharType * _50;
  long int _51;
  long int _52;
  long unsigned int _53;
  long unsigned int _54;
  CharType * _55;
  CharType * _56;
  long int _57;
  CharType * _58;
  long int _59;
  long int _60;
  long unsigned int _61;
  long unsigned int _62;

  <bb 2> [100.00%]:
  pbzip2::BZ2StreamScanner::rewindInBuff (this_22(D));
  _31 = this_22(D)->_errState;
  _30 = _31 != 0;
  _63 = _30;
  retval.29_25 = _63;
  if (retval.29_25 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  _46 = -1;
  goto <bb 12>; [0.00%]

  <bb 4> [100.00%]:
  _42 = MEM[(const struct BZ2StreamScanner *)this_22(D)]._inBuffEnd;
  _41 = (long int) _42;
  _27 = MEM[(const struct BZ2StreamScanner *)this_22(D)]._inBuff;
  _26 = (long int) _27;
  _24 = _41 - _26;
  _47 = (long unsigned int) _24;
  _64 = _47;
  _1 = _64;
  _29 = MEM[(const struct BZ2StreamScanner *)this_22(D)]._inBuffCapacity;
  _65 = _29;
  _2 = _65;
  retval.30_28 = _1 >= _2;
  if (retval.30_28 != 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 5> [100.00%]:
  _54 = MEM[(const struct BZ2StreamScanner *)this_22(D)]._inBuffCapacity;
  _69 = _54;
  _3 = _69;
  _48 = MEM[(const struct BZ2StreamScanner *)this_22(D)]._inBuffEnd;
  _49 = (long int) _48;
  _50 = MEM[(const struct BZ2StreamScanner *)this_22(D)]._inBuff;
  _51 = (long int) _50;
  _52 = _49 - _51;
  _53 = (long unsigned int) _52;
  _70 = _53;
  _4 = _70;
  handle_error (1, -1, "pbzip2: *ERROR: BZ2StreamScanner::readData not enough buffer free space! inBuffSize=%u, _inBuffCapacity=%u! Aborting...\n", _4, _3);
  _5 = this_22(D)->_errState;
  _6 = _5 | 8;
  this_22(D)->_errState = _6;
  _45 = -1;
  goto <bb 12>; [0.00%]

  <bb 6> [100.00%]:
  _62 = MEM[(const struct BZ2StreamScanner *)this_22(D)]._inBuffCapacity;
  _66 = _62;
  _7 = _66;
  _56 = MEM[(const struct BZ2StreamScanner *)this_22(D)]._inBuffEnd;
  _57 = (long int) _56;
  _58 = MEM[(const struct BZ2StreamScanner *)this_22(D)]._inBuff;
  _59 = (long int) _58;
  _60 = _57 - _59;
  _61 = (long unsigned int) _60;
  _67 = _61;
  _8 = _67;
  _9 = _7 - _8;
  _55 = this_22(D)->_inBuffEnd;
  _68 = _55;
  _10 = _68;
  _11 = this_22(D)->_hInFile;
  _33 = do_read (_11, _10, _9);
  _12 = _33;
  bytesRead_34 = (int) _12;
  if (bytesRead_34 > 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 7> [0.00%]:
  _13 = this_22(D)->_inBuffEnd;
  _14 = (sizetype) bytesRead_34;
  _15 = _13 + _14;
  this_22(D)->_inBuffEnd = _15;
  goto <bb 11>; [0.00%]

  <bb 8> [0.00%]:
  if (bytesRead_34 < 0)
    goto <bb 9>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 9> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not read from input file [err=%d]! Aborting...\n", bytesRead_34);
  _16 = this_22(D)->_errState;
  _17 = _16 | 4;
  this_22(D)->_errState = _17;
  _38 = bytesRead_34;
  goto <bb 12>; [0.00%]

  <bb 10> [0.00%]:
  this_22(D)->_eof = 1;

  <bb 11> [0.00%]:
  _40 = bytesRead_34;

  <bb 12> [0.00%]:
  # _18 = PHI <_46(3), _45(5), _38(9), _40(11)>
  return _18;

}



;; Function __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::base() const (_ZNK9__gnu_cxx17__normal_iteratorIPhNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEEEE4baseEv, funcdef_no=2427, decl_uid=36516, cgraph_uid=1168, symbol_order=1171)

Iterations: 0
__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::base() const (const struct __normal_iterator * const this)
{
  unsigned char * const & _2;

  <bb 2> [0.00%]:
  _2 = &this_1(D)->_M_current;
  return _2;

}



;; Function __gnu_cxx::operator==<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >(__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&)bool (_ZN9__gnu_cxxeqIPhNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_, funcdef_no=2372, decl_uid=38982, cgraph_uid=1113, symbol_order=1116)

Considering inline candidate __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::base() const.
 Inlining __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::base() const into __gnu_cxx::operator==<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >(__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&)bool.
Considering inline candidate __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::base() const.
 Inlining __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::base() const into __gnu_cxx::operator==<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >(__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&)bool.
Iterations: 1
Merging blocks 2 and 6
Merging blocks 2 and 5
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.42141 D.42143 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


__gnu_cxx::operator==<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >(__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&)bool (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  unsigned char * const & D.42143;
  unsigned char * const & D.42141;
  unsigned char * const & _1;
  unsigned char * _2;
  unsigned char * const & _3;
  unsigned char * _4;
  unsigned char * const & _7;
  unsigned char * const & _9;
  bool _10;

  <bb 2> [100.00%]:
  _7 = &__lhs_6(D)->_M_current;
  _11 = _7;
  _1 = _11;
  _2 = *_1;
  _9 = &__rhs_8(D)->_M_current;
  _12 = _9;
  _3 = _12;
  _4 = *_3;
  _10 = _2 == _4;
  return _10;

}



;; Function __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::_Iter_equals_iter(__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >) (_ZN9__gnu_cxx5__ops17_Iter_equals_iterINS_17__normal_iteratorIPhNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEEEEEEC2ESA_, funcdef_no=2429, decl_uid=39010, cgraph_uid=1170, symbol_order=1173)

Iterations: 0
__gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::_Iter_equals_iter(__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >) (struct _Iter_equals_iter * const this, struct __normal_iterator __it1)
{
  <bb 2> [0.00%]:
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->_M_it1 = __it1;
  return;

}



;; Function __gnu_cxx::__ops::__iter_comp_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >(__gnu_cxx::__ops::_Iter_equal_to_iter, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >)__gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > (_ZN9__gnu_cxx5__ops16__iter_comp_iterINS_17__normal_iteratorIPhNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEEEEEEENS0_17_Iter_equals_iterIT_EENS0_19_Iter_equal_to_iterESC_, funcdef_no=2374, decl_uid=38987, cgraph_uid=1115, symbol_order=1118)

Considering inline candidate __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::_Iter_equals_iter(__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >).
 Inlining __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::_Iter_equals_iter(__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >) into __gnu_cxx::__ops::__iter_comp_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >(__gnu_cxx::__ops::_Iter_equal_to_iter, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >)__gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >.
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.41803 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


No longer having address taken: __it
No longer having address taken: D.39579
__gnu_cxx::__ops::__iter_comp_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >(__gnu_cxx::__ops::_Iter_equal_to_iter, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >)__gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > (struct _Iter_equal_to_iter D.38988, struct __normal_iterator __it)
{
  struct __normal_iterator __it1;
  struct _Iter_equals_iter D.39579;
  struct _Iter_equals_iter D.41561;

  <bb 2> [100.00%]:
  __it1 = __it;
  MEM[(struct  &)&D.39579] ={v} {CLOBBER};
  D.39579._M_it1 = __it1;
  D.41561 = D.39579;
  D.39579 ={v} {CLOBBER};
  return D.41561;

}



;; Function __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::operator*() const (_ZNK9__gnu_cxx17__normal_iteratorIPhNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEEEEdeEv, funcdef_no=2432, decl_uid=36487, cgraph_uid=1173, symbol_order=1176)

Iterations: 0
__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::operator*() const (const struct __normal_iterator * const this)
{
  unsigned char & _3;

  <bb 2> [0.00%]:
  _3 = this_2(D)->_M_current;
  return _3;

}



;; Function __gnu_cxx::__ops::_Iter_equal_to_iter::operator()<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >(unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >) constbool (_ZNK9__gnu_cxx5__ops19_Iter_equal_to_iterclIPhNS_17__normal_iteratorIS3_NSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEEEEEEEbT_T0_, funcdef_no=2377, decl_uid=39062, cgraph_uid=1118, symbol_order=1121)

Considering inline candidate __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::operator*() const.
 Inlining __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::operator*() const into __gnu_cxx::__ops::_Iter_equal_to_iter::operator()<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >(unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >) constbool.
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.41805 D.42153 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


No longer having address taken: __it2
__gnu_cxx::__ops::_Iter_equal_to_iter::operator()<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >(unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >) constbool (const struct _Iter_equal_to_iter * const this, unsigned char * __it1, struct __normal_iterator __it2)
{
  unsigned char & D.42153;
  unsigned char _1;
  unsigned char & _2;
  unsigned char _3;
  unsigned char & _6;
  bool _7;

  <bb 2> [100.00%]:
  _1 = *__it1_5(D);
  _6 = __it2._M_current;
  _8 = _6;
  _2 = _8;
  _3 = *_2;
  _7 = _1 == _3;
  return _7;

}



;; Function __gnu_cxx::new_allocator<unsigned char>::deallocate(unsigned char*, unsigned long) (_ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhm, funcdef_no=2470, decl_uid=29658, cgraph_uid=1211, symbol_order=1214)

Iterations: 0
__gnu_cxx::new_allocator<unsigned char>::deallocate(unsigned char*, unsigned long) (struct new_allocator * const this, unsigned char * __p, size_type D.29661)
{
  <bb 2> [0.00%]:
  operator delete (__p_2(D));
  return;

}



;; Function std::allocator_traits<std::allocator<unsigned char> >::deallocate(std::allocator<unsigned char>&, unsigned char*, unsigned long) (_ZNSt16allocator_traitsISaIhEE10deallocateERS0_Phm, funcdef_no=2418, decl_uid=29415, cgraph_uid=1159, symbol_order=1162)

Considering inline candidate __gnu_cxx::new_allocator<unsigned char>::deallocate(unsigned char*, unsigned long).
 Inlining __gnu_cxx::new_allocator<unsigned char>::deallocate(unsigned char*, unsigned long) into std::allocator_traits<std::allocator<unsigned char> >::deallocate(std::allocator<unsigned char>&, unsigned char*, unsigned long).
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.41807 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


std::allocator_traits<std::allocator<unsigned char> >::deallocate(std::allocator<unsigned char>&, unsigned char*, unsigned long) (struct allocator_type & __a, unsigned char * __p, size_type __n)
{
  <bb 2> [100.00%]:
  operator delete (__p_3(D));
  return;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_destroy(unsigned long) (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE10_M_destroyEm, funcdef_no=2368, decl_uid=29838, cgraph_uid=1109, symbol_order=1112)

Considering inline candidate std::allocator_traits<std::allocator<unsigned char> >::deallocate(std::allocator<unsigned char>&, unsigned char*, unsigned long).
 Inlining std::allocator_traits<std::allocator<unsigned char> >::deallocate(std::allocator<unsigned char>&, unsigned char*, unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_destroy(unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_get_allocator().
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_get_allocator() into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_destroy(unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_destroy(unsigned long).
Iterations: 1
Merging blocks 2 and 8
Merging blocks 2 and 7
Merging blocks 2 and 6
Merging blocks 2 and 5
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.41808 D.42164 D.42166 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_destroy(unsigned long) (struct basic_string * const this, size_type __size)
{
  unsigned char * D.42166;
  struct allocator_type & D.42164;
  long unsigned int _1;
  unsigned char * _2;
  struct allocator_type & _3;
  unsigned char * _7;
  struct allocator_type & _8;

  <bb 2> [100.00%]:
  _1 = __size_4(D) + 1;
  _7 = MEM[(const struct basic_string *)this_6(D)]._M_dataplus._M_p;
  _10 = _7;
  _2 = _10;
  _8 = &this_6(D)->_M_dataplus;
  _11 = _8;
  _3 = _11;
  operator delete (_2);
  return;

}



;; Function std::less<unsigned char const*>::operator()(unsigned char const* const&, unsigned char const* const&) const (_ZNKSt4lessIPKhEclERKS1_S4_, funcdef_no=2472, decl_uid=40607, cgraph_uid=1213, symbol_order=1216)

Iterations: 0
std::less<unsigned char const*>::operator()(unsigned char const* const&, unsigned char const* const&) const (const struct less * const this, const unsigned char * const & __x, const unsigned char * const & __y)
{
  const unsigned char * _1;
  const unsigned char * _2;
  bool _6;

  <bb 2> [0.00%]:
  _1 = *__x_4(D);
  _2 = *__y_5(D);
  _6 = _1 < _2;
  return _6;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_disjunct(unsigned char const*) const (_ZNKSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE11_M_disjunctEPKh, funcdef_no=2422, decl_uid=29930, cgraph_uid=1163, symbol_order=1166)

Considering inline candidate std::less<unsigned char const*>::operator()(unsigned char const* const&, unsigned char const* const&) const.
 Inlining std::less<unsigned char const*>::operator()(unsigned char const* const&, unsigned char const* const&) const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_disjunct(unsigned char const*) const.
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_disjunct(unsigned char const*) const.
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_disjunct(unsigned char const*) const.
Considering inline candidate std::less<unsigned char const*>::operator()(unsigned char const* const&, unsigned char const* const&) const.
 Inlining std::less<unsigned char const*>::operator()(unsigned char const* const&, unsigned char const* const&) const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_disjunct(unsigned char const*) const.
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_disjunct(unsigned char const*) const.
Iterations: 1
Merging blocks 2 and 10
Removing basic block 3
Merging blocks 16 and 15
Merging blocks 2 and 9
Merging blocks 2 and 8
Merging blocks 2 and 7
Merging blocks 16 and 14
Merging blocks 16 and 13
Merging blocks 16 and 12
Merging blocks 16 and 11

Symbols to be put in SSA form
{ D.41810 D.42172 D.42174 D.42178 D.42180 D.42182 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 7
Number of blocks to update: 6 ( 86%)


No longer having address taken: __s
No longer having address taken: D.40668
No longer having address taken: D.40678
No longer having address taken: D.40679
No longer having address taken: D.40680

Symbols to be put in SSA form
{ D.29932 D.40678 D.40680 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 7
Number of blocks to update: 6 ( 86%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_disjunct(unsigned char const*) const (const struct basic_string * const this, const unsigned char * __s)
{
  unsigned char * D.42182;
  size_type D.42180;
  bool D.42178;
  unsigned char * D.42174;
  bool D.42172;
  const unsigned char * const D.40680;
  const unsigned char * const D.40678;
  unsigned char * _1;
  bool _2;
  unsigned char * _3;
  long unsigned int _4;
  unsigned char * _5;
  bool _6;
  bool iftmp.10_7;
  const unsigned char * _12;
  unsigned char * _14;
  bool _15;
  const unsigned char * _16;
  const unsigned char * _18;
  bool iftmp.10_19;
  bool iftmp.10_20;
  bool _21;
  const unsigned char * _26;
  bool _27;
  long unsigned int _28;
  unsigned char * _29;

  <bb 2> [100.00%]:
  _14 = this_11(D)->_M_dataplus._M_p;
  _30 = _14;
  _1 = _30;
  _35 = _1;
  _18 = __s_36(D);
  _16 = _35;
  _15 = _16 > _18;
  _31 = _15;
  _2 = _31;
  if (_2 != 0)
    goto <bb 4>; [0.00%]
  else
    goto <bb 3>; [0.00%]

  <bb 3> [100.00%]:
  _29 = this_11(D)->_M_dataplus._M_p;
  _32 = _29;
  _3 = _32;
  _28 = this_11(D)->_M_string_length;
  _33 = _28;
  _4 = _33;
  _5 = _3 + _4;
  _37 = _5;
  _12 = _37;
  _26 = __s_36(D);
  _27 = _12 < _26;
  _34 = _27;
  _6 = _34;
  if (_6 != 0)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  iftmp.10_20 = 1;
  goto <bb 6>; [0.00%]

  <bb 5> [0.00%]:
  iftmp.10_19 = 0;

  <bb 6> [0.00%]:
  # iftmp.10_7 = PHI <iftmp.10_20(4), iftmp.10_19(5)>
  _21 = iftmp.10_7;
  return _21;

}



;; Function __gnu_cxx::char_traits<unsigned char>::move(unsigned char*, unsigned char const*, unsigned long) (_ZN9__gnu_cxx11char_traitsIhE4moveEPhPKhm, funcdef_no=2473, decl_uid=29564, cgraph_uid=1214, symbol_order=1217)

Iterations: 0
__gnu_cxx::char_traits<unsigned char>::move(unsigned char*, unsigned char const*, unsigned long) (char_type * __s1, const char_type * __s2, size_t __n)
{
  char_type * _6;

  <bb 2> [0.00%]:
  _6 = memmove (__s1_2(D), __s2_3(D), __n_4(D));
  return _6;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_move(unsigned char*, unsigned char const*, unsigned long) (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE7_S_moveEPhPKhm, funcdef_no=2423, decl_uid=29937, cgraph_uid=1164, symbol_order=1167)

Considering inline candidate __gnu_cxx::char_traits<unsigned char>::assign(unsigned char&, unsigned char const&).
 Inlining __gnu_cxx::char_traits<unsigned char>::assign(unsigned char&, unsigned char const&) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_move(unsigned char*, unsigned char const*, unsigned long).
Iterations: 1
Removing basic block 3
Removing basic block 6

Symbols to be put in SSA form
{ D.41812 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 6
Number of blocks to update: 5 ( 83%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_move(unsigned char*, unsigned char const*, unsigned long) (unsigned char * __d, const unsigned char * __s, size_type __n)
{
  unsigned char _8;

  <bb 2> [0.00%]:
  if (__n_2(D) == 1)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [100.00%]:
  _8 = MEM[(const char_type &)__s_5(D)];
  MEM[(char_type &)__d_4(D)] = _8;
  goto <bb 5>; [100.00%]

  <bb 4> [0.00%]:
  __gnu_cxx::char_traits<unsigned char>::move (__d_4(D), __s_5(D), __n_2(D));

  <bb 5> [0.00%]:
  return;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::length() const (_ZNKSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE6lengthEv, funcdef_no=2475, decl_uid=30114, cgraph_uid=1216, symbol_order=1219)

Iterations: 0
std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::length() const (const struct basic_string * const this)
{
  size_type _3;

  <bb 2> [0.00%]:
  _3 = this_2(D)->_M_string_length;
  return _3;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data(unsigned char*) (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE7_M_dataEPh, funcdef_no=2477, decl_uid=29812, cgraph_uid=1218, symbol_order=1221)

Iterations: 0
std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data(unsigned char*) (struct basic_string * const this, unsigned char * __p)
{
  <bb 2> [0.00%]:
  this_2(D)->_M_dataplus._M_p = __p_3(D);
  return;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_capacity(unsigned long) (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE11_M_capacityEm, funcdef_no=2478, decl_uid=29824, cgraph_uid=1219, symbol_order=1222)

Iterations: 0
std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_capacity(unsigned long) (struct basic_string * const this, size_type __capacity)
{
  <bb 2> [0.00%]:
  this_2(D)->D.29808._M_allocated_capacity = __capacity_3(D);
  return;

}



;; Function __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::operator()<unsigned char*>(unsigned char*)bool (_ZN9__gnu_cxx5__ops17_Iter_equals_iterINS_17__normal_iteratorIPhNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEEEEEEclIS3_EEbT_, funcdef_no=2479, decl_uid=40865, cgraph_uid=1220, symbol_order=1223)

Considering inline candidate __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::operator*() const.
 Inlining __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::operator*() const into __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::operator()<unsigned char*>(unsigned char*)bool.
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.41816 D.42192 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


__gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::operator()<unsigned char*>(unsigned char*)bool (struct _Iter_equals_iter * const this, unsigned char * __it2)
{
  unsigned char & D.42192;
  unsigned char _1;
  struct __normal_iterator * _2;
  unsigned char & _3;
  unsigned char _4;
  unsigned char & _8;
  bool _9;

  <bb 2> [100.00%]:
  _1 = *__it2_6(D);
  _2 = &this_7(D)->_M_it1;
  _8 = MEM[(const struct __normal_iterator *)_2]._M_current;
  _10 = _8;
  _3 = _10;
  _4 = *_3;
  _9 = _1 == _4;
  return _9;

}



;; Function std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > >(unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >, std::random_access_iterator_tag)unsigned char* (_ZSt9__find_ifIPhN9__gnu_cxx5__ops17_Iter_equals_iterINS1_17__normal_iteratorIS0_NSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEEEEEEEET_SD_SD_T0_St26random_access_iterator_tag, funcdef_no=2431, decl_uid=39584, cgraph_uid=1172, symbol_order=1175)

Considering inline candidate __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::operator()<unsigned char*>(unsigned char*)bool.
 Inlining __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::operator()<unsigned char*>(unsigned char*)bool into std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > >(unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >, std::random_access_iterator_tag)unsigned char*.
Considering inline candidate __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::operator()<unsigned char*>(unsigned char*)bool.
 Inlining __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::operator()<unsigned char*>(unsigned char*)bool into std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > >(unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >, std::random_access_iterator_tag)unsigned char*.
Considering inline candidate __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::operator()<unsigned char*>(unsigned char*)bool.
 Inlining __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::operator()<unsigned char*>(unsigned char*)bool into std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > >(unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >, std::random_access_iterator_tag)unsigned char*.
Considering inline candidate __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::operator()<unsigned char*>(unsigned char*)bool.
 Inlining __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::operator()<unsigned char*>(unsigned char*)bool into std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > >(unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >, std::random_access_iterator_tag)unsigned char*.
Considering inline candidate __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::operator()<unsigned char*>(unsigned char*)bool.
 Inlining __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::operator()<unsigned char*>(unsigned char*)bool into std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > >(unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >, std::random_access_iterator_tag)unsigned char*.
Considering inline candidate __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::operator()<unsigned char*>(unsigned char*)bool.
 Inlining __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::operator()<unsigned char*>(unsigned char*)bool into std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > >(unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >, std::random_access_iterator_tag)unsigned char*.
Considering inline candidate __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::operator()<unsigned char*>(unsigned char*)bool.
 Inlining __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >::operator()<unsigned char*>(unsigned char*)bool into std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > >(unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >, std::random_access_iterator_tag)unsigned char*.
Iterations: 1
Removing basic block 4
Merging blocks 6 and 28
Merging blocks 8 and 30
Merging blocks 10 and 32
Removing basic block 14
Merging blocks 17 and 36
Merging blocks 20 and 38
Merging blocks 26 and 25
Merging blocks 34 and 33
Merging blocks 6 and 27
Merging blocks 8 and 29
Merging blocks 10 and 31
Merging blocks 17 and 35
Merging blocks 20 and 37

Symbols to be put in SSA form
{ D.41817 D.42196 D.42199 D.42202 D.42205 D.42208 D.42211 D.42214 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 25
Number of blocks to update: 24 ( 96%)


No longer having address taken: __pred
std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > >(unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >, std::random_access_iterator_tag)unsigned char* (unsigned char * __first, unsigned char * __last, struct _Iter_equals_iter __pred, struct random_access_iterator_tag D.39588)
{
  bool D.42214;
  bool D.42211;
  bool D.42208;
  bool D.42205;
  bool D.42202;
  bool D.42199;
  bool D.42196;
  difference_type __trip_count;
  long int __last.52_1;
  long int __first.53_2;
  long int _3;
  long int __last.58_4;
  long int __first.59_5;
  long int _6;
  unsigned char * _11;
  unsigned char _21;
  bool retval.54_22;
  unsigned char & _24;
  bool retval.55_25;
  unsigned char _27;
  bool retval.56_28;
  bool _30;
  bool retval.57_31;
  unsigned char * _34;
  unsigned char * _35;
  unsigned char * _36;
  unsigned char * _37;
  unsigned char _38;
  bool retval.60_39;
  unsigned char * _41;
  unsigned char & _42;
  bool retval.61_43;
  unsigned char * _45;
  unsigned char _46;
  bool retval.62_47;
  unsigned char * _49;
  unsigned char * _50;
  bool _51;
  unsigned char _52;
  unsigned char & _53;
  unsigned char _54;
  bool _55;
  unsigned char _56;
  unsigned char & _57;
  unsigned char _58;
  bool _59;
  unsigned char _60;
  unsigned char & _61;
  unsigned char _62;
  bool _63;
  unsigned char _64;
  unsigned char & _65;
  unsigned char _66;
  bool _67;
  unsigned char _68;
  unsigned char & _69;
  unsigned char _70;
  bool _71;

  <bb 2> [0.00%]:
  __last.52_1 = (long int) __last_17(D);
  __first.53_2 = (long int) __first_18(D);
  _3 = __last.52_1 - __first.53_2;
  __trip_count_19 = _3 >> 2;

  <bb 3> [0.00%]:
  # __first_7 = PHI <__first_18(D)(2), __first_32(12)>
  # __trip_count_10 = PHI <__trip_count_19(2), __trip_count_33(12)>
  if (__trip_count_10 <= 0)
    goto <bb 13>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 4> [100.00%]:
  _46 = *__first_7;
  _42 = MEM[(const struct __normal_iterator *)&__pred]._M_current;
  _38 = *_42;
  _30 = _38 == _46;
  _72 = _30;
  retval.54_22 = _72;
  if (retval.54_22 != 0)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 5> [0.00%]:
  _37 = __first_7;
  goto <bb 24>; [0.00%]

  <bb 6> [100.00%]:
  __first_23 = __first_7 + 1;
  _27 = *__first_23;
  _24 = MEM[(const struct __normal_iterator *)&__pred]._M_current;
  _21 = *_24;
  _51 = _21 == _27;
  _73 = _51;
  retval.55_25 = _73;
  if (retval.55_25 != 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 7> [0.00%]:
  _36 = __first_23;
  goto <bb 24>; [0.00%]

  <bb 8> [100.00%]:
  __first_26 = __first_23 + 1;
  _52 = *__first_26;
  _53 = MEM[(const struct __normal_iterator *)&__pred]._M_current;
  _54 = *_53;
  _55 = _52 == _54;
  _74 = _55;
  retval.56_28 = _74;
  if (retval.56_28 != 0)
    goto <bb 9>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 9> [0.00%]:
  _35 = __first_26;
  goto <bb 24>; [0.00%]

  <bb 10> [100.00%]:
  __first_29 = __first_26 + 1;
  _56 = *__first_29;
  _57 = MEM[(const struct __normal_iterator *)&__pred]._M_current;
  _58 = *_57;
  _59 = _56 == _58;
  _75 = _59;
  retval.57_31 = _75;
  if (retval.57_31 != 0)
    goto <bb 11>; [0.00%]
  else
    goto <bb 12>; [0.00%]

  <bb 11> [0.00%]:
  _34 = __first_29;
  goto <bb 24>; [0.00%]

  <bb 12> [0.00%]:
  __first_32 = __first_29 + 1;
  __trip_count_33 = __trip_count_10 + -1;
  goto <bb 3>; [0.00%]

  <bb 13> [0.00%]:
  __last.58_4 = (long int) __last_17(D);
  __first.59_5 = (long int) __first_7;
  _6 = __last.58_4 - __first.59_5;
  switch (_6) <default: <L20> [0.00%], case 1: <L17> [0.00%], case 2: <L14> [0.00%], case 3: <L23> [0.00%]>

<L23> [100.00%]:
  _60 = *__first_7;
  _61 = MEM[(const struct __normal_iterator *)&__pred]._M_current;
  _62 = *_61;
  _63 = _60 == _62;
  _76 = _63;
  retval.60_39 = _76;
  if (retval.60_39 != 0)
    goto <bb 15>; [0.00%]
  else
    goto <bb 16>; [0.00%]

  <bb 15> [0.00%]:
  _41 = __first_7;
  goto <bb 24>; [0.00%]

  <bb 16> [0.00%]:
  __first_40 = __first_7 + 1;

  # __first_8 = PHI <__first_7(13), __first_40(16)>
<L14> [100.00%]:
  _64 = *__first_8;
  _65 = MEM[(const struct __normal_iterator *)&__pred]._M_current;
  _66 = *_65;
  _67 = _64 == _66;
  _77 = _67;
  retval.61_43 = _77;
  if (retval.61_43 != 0)
    goto <bb 18>; [0.00%]
  else
    goto <bb 19>; [0.00%]

  <bb 18> [0.00%]:
  _45 = __first_8;
  goto <bb 24>; [0.00%]

  <bb 19> [0.00%]:
  __first_44 = __first_8 + 1;

  # __first_9 = PHI <__first_7(13), __first_44(19)>
<L17> [100.00%]:
  _68 = *__first_9;
  _69 = MEM[(const struct __normal_iterator *)&__pred]._M_current;
  _70 = *_69;
  _71 = _68 == _70;
  _78 = _71;
  retval.62_47 = _78;
  if (retval.62_47 != 0)
    goto <bb 21>; [0.00%]
  else
    goto <bb 22>; [0.00%]

  <bb 21> [0.00%]:
  _49 = __first_9;
  goto <bb 24>; [0.00%]

  <bb 22> [0.00%]:
  __first_48 = __first_9 + 1;

<L20> [0.00%]:
  _50 = __last_17(D);

  <bb 24> [0.00%]:
  # _11 = PHI <_37(5), _36(7), _35(9), _34(11), _41(15), _45(18), _49(21), _50(23)>
  return _11;

}



;; Function std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > >(unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >)unsigned char* (_ZSt9__find_ifIPhN9__gnu_cxx5__ops17_Iter_equals_iterINS1_17__normal_iteratorIS0_NSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEEEEEEEET_SD_SD_T0_, funcdef_no=2375, decl_uid=39024, cgraph_uid=1117, symbol_order=1120)

Iterations: 0
std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > >(unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >)unsigned char* (unsigned char * __first, unsigned char * __last, struct _Iter_equals_iter __pred)
{
  struct random_access_iterator_tag D.41565;
  unsigned char * __first.51_1;
  unsigned char * _5;
  unsigned char * _6;

  <bb 2> [0.00%]:
  __first.51_1 = __first;
  _5 = std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > > (__first.51_1, __last_3(D), __pred, D.41565);
  _6 = _5;
  return _6;

}



;; Function std::__search<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter>(unsigned char*, unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter)unsigned char* (_ZSt8__searchIPhN9__gnu_cxx17__normal_iteratorIS0_NSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEEEEENS1_5__ops19_Iter_equal_to_iterEET_SC_SC_T0_SD_T1_, funcdef_no=2321, decl_uid=38501, cgraph_uid=1065, symbol_order=1068)

Considering inline candidate __gnu_cxx::operator==<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >(__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&)bool.
 Inlining __gnu_cxx::operator==<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >(__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&)bool into std::__search<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter>(unsigned char*, unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter)unsigned char*.
Considering inline candidate __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::operator++().
 Inlining __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::operator++() into std::__search<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter>(unsigned char*, unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter)unsigned char*.
Considering inline candidate __gnu_cxx::__ops::_Iter_equal_to_iter::operator()<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >(unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >) constbool.
 Inlining __gnu_cxx::__ops::_Iter_equal_to_iter::operator()<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >(unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >) constbool into std::__search<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter>(unsigned char*, unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter)unsigned char*.
Considering inline candidate std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > >(unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >)unsigned char*.
 Inlining std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > >(unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >)unsigned char* into std::__search<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter>(unsigned char*, unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter)unsigned char*.
Considering inline candidate __gnu_cxx::__ops::__iter_comp_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >(__gnu_cxx::__ops::_Iter_equal_to_iter, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >)__gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >.
 Inlining __gnu_cxx::__ops::__iter_comp_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >(__gnu_cxx::__ops::_Iter_equal_to_iter, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >)__gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > into std::__search<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter>(unsigned char*, unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter)unsigned char*.
Considering inline candidate std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > >(unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >)unsigned char*.
 Inlining std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > >(unsigned char*, unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >)unsigned char* into std::__search<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter>(unsigned char*, unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter)unsigned char*.
Considering inline candidate __gnu_cxx::__ops::__iter_comp_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >(__gnu_cxx::__ops::_Iter_equal_to_iter, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >)__gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >.
 Inlining __gnu_cxx::__ops::__iter_comp_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >(__gnu_cxx::__ops::_Iter_equal_to_iter, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >)__gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > into std::__search<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter>(unsigned char*, unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter)unsigned char*.
Considering inline candidate __gnu_cxx::operator==<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >(__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&)bool.
 Inlining __gnu_cxx::operator==<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >(__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&)bool into std::__search<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter>(unsigned char*, unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter)unsigned char*.
Considering inline candidate __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::operator++().
 Inlining __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::operator++() into std::__search<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter>(unsigned char*, unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter)unsigned char*.
Considering inline candidate __gnu_cxx::operator==<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >(__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&)bool.
 Inlining __gnu_cxx::operator==<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >(__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > const&)bool into std::__search<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter>(unsigned char*, unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter)unsigned char*.
Iterations: 1
Removing basic block 3
Merging blocks 8 and 27
Merging blocks 9 and 31
Merging blocks 11 and 35
Merging blocks 15 and 37
Removing basic block 16
Merging blocks 23 and 22
Merging blocks 41 and 40
Merging blocks 8 and 26
Merging blocks 8 and 25
Merging blocks 8 and 24
Merging blocks 9 and 30
Merging blocks 9 and 29
Merging blocks 9 and 28
Merging blocks 11 and 34
Merging blocks 11 and 33
Merging blocks 11 and 32
Merging blocks 15 and 36
Merging blocks 41 and 39
Merging blocks 41 and 38

Symbols to be put in SSA form
{ D.41819 D.42222 D.42225 D.42227 D.42231 D.42241 D.42251 D.42254 D.42256 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 22
Number of blocks to update: 21 ( 95%)


No longer having address taken: __first2
No longer having address taken: __last2
No longer having address taken: __predicate
std::__search<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter>(unsigned char*, unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter)unsigned char* (unsigned char * __first1, unsigned char * __last1, struct __normal_iterator __first2, struct __normal_iterator __last2, struct _Iter_equal_to_iter __predicate)
{
  struct __normal_iterator & D.42256;
  bool D.42254;
  bool D.42251;
  struct __normal_iterator __it2;
  struct _Iter_equals_iter D.42247;
  unsigned char * __it1$_M_current;
  struct _Iter_equal_to_iter D.42243;
  struct __normal_iterator __it;
  struct random_access_iterator_tag D.42242;
  unsigned char * D.42241;
  struct _Iter_equals_iter __pred;
  struct _Iter_equals_iter D.42237;
  unsigned char * __it1$_M_current;
  struct _Iter_equal_to_iter D.42233;
  struct __normal_iterator __it;
  struct random_access_iterator_tag D.42232;
  unsigned char * D.42231;
  struct _Iter_equals_iter __pred;
  struct __normal_iterator & D.42227;
  bool D.42225;
  bool D.42222;
  unsigned char * __current;
  struct __normal_iterator __p;
  struct __normal_iterator __p1;
  struct _Iter_equals_iter D.41541;
  struct _Iter_equals_iter D.41539;
  struct _Iter_equal_to_iter D.41538;
  bool _1;
  struct __normal_iterator & _2;
  struct __normal_iterator & _3;
  bool iftmp.45_6;
  unsigned char * _7;
  bool _16;
  bool iftmp.45_17;
  bool iftmp.45_18;
  bool retval.44_19;
  unsigned char * _22;
  bool retval.46_23;
  bool _27;
  unsigned char * _28;
  bool retval.47_33;
  unsigned char * _34;
  bool retval.48_35;
  unsigned char * _38;
  bool retval.49_39;
  bool retval.50_41;
  unsigned char * _42;
  unsigned char * _43;
  unsigned char * _44;
  unsigned char * _45;
  unsigned char * _47;
  unsigned char * _48;
  unsigned char * _49;
  unsigned char * _50;
  unsigned char * _53;
  unsigned char * _54;
  unsigned char * _55;
  unsigned char * _57;
  unsigned char _59;
  unsigned char & _60;
  unsigned char _61;
  bool _62;
  unsigned char * _63;
  unsigned char * _64;
  bool _65;
  unsigned char * _66;
  unsigned char * _67;

  <bb 2> [0.00%]:
  if (__first1_13(D) == __last1_14(D))
    goto <bb 4>; [0.00%]
  else
    goto <bb 3>; [0.00%]

  <bb 3> [100.00%]:
  _38 = MEM[(unsigned char * const &)&__first2];
  _34 = MEM[(unsigned char * const &)&__last2];
  _27 = _34 == _38;
  _68 = _27;
  _1 = _68;
  if (_1 != 0)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  iftmp.45_18 = 1;
  goto <bb 6>; [0.00%]

  <bb 5> [0.00%]:
  iftmp.45_17 = 0;

  <bb 6> [0.00%]:
  # iftmp.45_6 = PHI <iftmp.45_18(4), iftmp.45_17(5)>
  retval.44_19 = iftmp.45_6;
  if (retval.44_19 != 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 7> [0.00%]:
  _50 = __first1_13(D);
  goto <bb 21>; [0.00%]

  <bb 8> [100.00%]:
  __p1 = __first2;
  _53 = __p1._M_current;
  _54 = _53 + 1;
  __p1._M_current = _54;
  _70 = &__p1;
  _2 = _70;
  _47 = MEM[(unsigned char * const &)_2];
  _22 = MEM[(unsigned char * const &)&__last2];
  _16 = _22 == _47;
  _71 = _16;
  retval.46_23 = _71;
  if (retval.46_23 != 0)
    goto <bb 9>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 9> [100.00%]:
  D.42233 = D.41538;
  __it = __first2;
  __it1$_M_current_56 = MEM[(struct __normal_iterator *)&__it];
  MEM[(struct _Iter_equals_iter *)&D.42237] = __it1$_M_current_56;
  D.41539 = D.42237;
  __pred = D.41539;
  _55 = std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > > (__first1_13(D), __last1_14(D), __pred, D.42232);
  _88 = _55;
  _48 = _88;
  _49 = _48;
  goto <bb 21>; [0.00%]

  <bb 10> [0.00%]:
  __p._M_current = 0B;
  __current_25 = __first1_13(D);

  <bb 11> [100.00%]:
  # __first1_4 = PHI <__first1_13(D)(10), __first1_36(20)>
  D.42243 = D.41538;
  __it = __first2;
  __it1$_M_current_58 = MEM[(struct __normal_iterator *)&__it];
  MEM[(struct _Iter_equals_iter *)&D.42247] = __it1$_M_current_58;
  D.41541 = D.42247;
  __pred = D.41541;
  _57 = std::__find_if<unsigned char*, __gnu_cxx::__ops::_Iter_equals_iter<__gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > > > (__first1_4, __last1_14(D), __pred, D.42242);
  _77 = _57;
  _28 = _77;
  __first1_29 = _28;
  if (__first1_29 == __last1_14(D))
    goto <bb 12>; [0.00%]
  else
    goto <bb 13>; [0.00%]

  <bb 12> [0.00%]:
  _45 = __last1_14(D);
  goto <bb 21>; [0.00%]

  <bb 13> [0.00%]:
  __p = __p1;
  __current_31 = __first1_29;
  __current_32 = __current_31 + 1;
  retval.47_33 = __current_32 == __last1_14(D);
  if (retval.47_33 != 0)
    goto <bb 14>; [0.00%]
  else
    goto <bb 15>; [0.00%]

  <bb 14> [0.00%]:
  _44 = __last1_14(D);
  goto <bb 21>; [0.00%]

  <bb 15> [100.00%]:
  # __current_5 = PHI <__current_32(13), __current_40(18)>
  __it2 = __p;
  _59 = *__current_5;
  _60 = __it2._M_current;
  _61 = *_60;
  _62 = _59 == _61;
  _79 = _62;
  retval.48_35 = _79;
  if (retval.48_35 != 0)
    goto <bb 16>; [0.00%]
  else
    goto <bb 20>; [0.00%]

  <bb 16> [100.00%]:
  _66 = __p._M_current;
  _67 = _66 + 1;
  __p._M_current = _67;
  _81 = &__p;
  _3 = _81;
  _63 = MEM[(unsigned char * const &)_3];
  _64 = MEM[(unsigned char * const &)&__last2];
  _65 = _63 == _64;
  _82 = _65;
  retval.49_39 = _82;
  if (retval.49_39 != 0)
    goto <bb 17>; [0.00%]
  else
    goto <bb 18>; [0.00%]

  <bb 17> [0.00%]:
  _43 = __first1_29;
  goto <bb 21>; [0.00%]

  <bb 18> [0.00%]:
  __current_40 = __current_5 + 1;
  retval.50_41 = __current_40 == __last1_14(D);
  if (retval.50_41 != 0)
    goto <bb 19>; [0.00%]
  else
    goto <bb 15>; [0.00%]

  <bb 19> [0.00%]:
  _42 = __last1_14(D);
  goto <bb 21>; [0.00%]

  <bb 20> [0.00%]:
  __first1_36 = __first1_29 + 1;
  goto <bb 11>; [0.00%]

  <bb 21> [0.00%]:
  # _7 = PHI <_50(7), _49(9), _45(12), _44(14), _43(17), _42(19)>
  __p1 ={v} {CLOBBER};
  __p ={v} {CLOBBER};
  return _7;

}



;; Function std::search<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >(unsigned char*, unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >)unsigned char* (_ZSt6searchIPhN9__gnu_cxx17__normal_iteratorIS0_NSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEEEEEET_SA_SA_T0_SB_, funcdef_no=2192, decl_uid=36549, cgraph_uid=933, symbol_order=936)

Considering inline candidate __gnu_cxx::__ops::__iter_equal_to_iter().
 Inlining __gnu_cxx::__ops::__iter_equal_to_iter() into std::search<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >(unsigned char*, unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >)unsigned char*.
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.41820 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


No longer having address taken: __first2
No longer having address taken: __last2
std::search<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >(unsigned char*, unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >)unsigned char* (unsigned char * __first1, unsigned char * __last1, struct __normal_iterator __first2, struct __normal_iterator __last2)
{
  struct _Iter_equal_to_iter D.42269;
  struct _Iter_equal_to_iter D.42268;
  struct _Iter_equal_to_iter D.41519;
  unsigned char * _6;
  unsigned char * _7;

  <bb 2> [100.00%]:
  D.42268 = D.42269;
  _6 = std::__search<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter> (__first1_3(D), __last1_4(D), __first2, __last2, D.41519);
  _7 = _6;
  return _7;

}



;; Function pbzip2::BZ2StreamScanner::locateHeaderPrefixInBuff() (_ZN6pbzip216BZ2StreamScanner24locateHeaderPrefixInBuffEv, funcdef_no=1937, decl_uid=29373, cgraph_uid=678, symbol_order=681)

Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSearchPtr().
 Inlining pbzip2::BZ2StreamScanner::getInBuffSearchPtr() into pbzip2::BZ2StreamScanner::locateHeaderPrefixInBuff().
Considering inline candidate std::search<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >(unsigned char*, unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >)unsigned char*.
 Inlining std::search<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > > >(unsigned char*, unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >)unsigned char* into pbzip2::BZ2StreamScanner::locateHeaderPrefixInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSearchPtr().
 Inlining pbzip2::BZ2StreamScanner::getInBuffSearchPtr() into pbzip2::BZ2StreamScanner::locateHeaderPrefixInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffEnd().
 Inlining pbzip2::BZ2StreamScanner::getInBuffEnd() into pbzip2::BZ2StreamScanner::locateHeaderPrefixInBuff().
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::begin().
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::begin() into pbzip2::BZ2StreamScanner::locateHeaderPrefixInBuff().
Considering inline candidate __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::operator+(long) const.
 Inlining __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >::operator+(long) const into pbzip2::BZ2StreamScanner::locateHeaderPrefixInBuff().
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::begin().
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::begin() into pbzip2::BZ2StreamScanner::locateHeaderPrefixInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffEnd().
 Inlining pbzip2::BZ2StreamScanner::getInBuffEnd() into pbzip2::BZ2StreamScanner::locateHeaderPrefixInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSearchPtr().
 Inlining pbzip2::BZ2StreamScanner::getInBuffSearchPtr() into pbzip2::BZ2StreamScanner::locateHeaderPrefixInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffEnd().
 Inlining pbzip2::BZ2StreamScanner::getInBuffEnd() into pbzip2::BZ2StreamScanner::locateHeaderPrefixInBuff().
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const into pbzip2::BZ2StreamScanner::locateHeaderPrefixInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSize() const.
 Inlining pbzip2::BZ2StreamScanner::getInBuffSize() const into pbzip2::BZ2StreamScanner::locateHeaderPrefixInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffBegin().
 Inlining pbzip2::BZ2StreamScanner::getInBuffBegin() into pbzip2::BZ2StreamScanner::locateHeaderPrefixInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSearchPtr().
 Inlining pbzip2::BZ2StreamScanner::getInBuffSearchPtr() into pbzip2::BZ2StreamScanner::locateHeaderPrefixInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::isBz2HeaderFound() const.
 Inlining pbzip2::BZ2StreamScanner::isBz2HeaderFound() const into pbzip2::BZ2StreamScanner::locateHeaderPrefixInBuff().
Iterations: 1
Merging blocks 2 and 14
Removing basic block 3
Removing basic block 4
Merging blocks 8 and 24
Merging blocks 9 and 26
Merging blocks 10 and 28
Merging blocks 11 and 40
Merging blocks 12 and 42
Merging blocks 18 and 17
Merging blocks 22 and 21
Removing basic block 35
Merging blocks 2 and 13
Merging blocks 8 and 23
Merging blocks 9 and 25
Merging blocks 10 and 27
Merging blocks 11 and 39
Merging blocks 11 and 38
Merging blocks 11 and 37
Merging blocks 11 and 36
Merging blocks 11 and 34
Merging blocks 11 and 33
Merging blocks 11 and 32
Merging blocks 11 and 31
Merging blocks 11 and 30
Merging blocks 11 and 29
Merging blocks 12 and 41
Merging blocks 18 and 16
Merging blocks 18 and 15
Merging blocks 22 and 20
Merging blocks 22 and 19

Symbols to be put in SSA form
{ D.41821 D.42272 D.42274 D.42276 D.42278 D.42280 D.42282 D.42284 D.42286 D.42291 D.42294 D.42296 D.42306 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 13
Number of blocks to update: 12 ( 92%)


No longer having address taken: D.36547
pbzip2::BZ2StreamScanner::locateHeaderPrefixInBuff() (struct BZ2StreamScanner * const this)
{
  CharType * D.42306;
  struct iterator D.42304;
  struct iterator D.42303;
  struct __normal_iterator D.42301;
  struct iterator D.42298;
  CharType * D.42296;
  CharType * D.42294;
  struct _Iter_equal_to_iter D.42292;
  unsigned char * D.42291;
  struct __normal_iterator __first2;
  struct __normal_iterator __last2;
  CharType * D.42286;
  CharType * D.42284;
  CharType * D.42282;
  size_t D.42280;
  size_type D.42278;
  CharType * D.42276;
  CharType * D.42274;
  bool D.42272;
  size_t prefixLen;
  struct __normal_iterator D.41465;
  struct __normal_iterator D.41464;
  struct iterator D.36547;
  bool _1;
  CharType * _2;
  CharType * _3;
  long unsigned int _4;
  struct basic_string * _5;
  long unsigned int _6;
  unsigned int _7;
  unsigned int _8;
  CharType * _9;
  struct basic_string * _10;
  CharType * _11;
  int _12;
  unsigned int _13;
  unsigned int _14;
  CharType * _15;
  long int prefixLen.35_16;
  struct basic_string * _17;
  struct basic_string * _18;
  CharType * _19;
  CharType * _20;
  unsigned char * _21;
  bool iftmp.33_22;
  CharType * _29;
  bool retval.31_30;
  CharType * _34;
  CharType * _35;
  unsigned char * _37;
  long unsigned int _40;
  long int _41;
  long int _42;
  CharType * _43;
  bool iftmp.33_44;
  bool iftmp.33_45;
  bool retval.32_46;
  CharType * _47;
  int _49;
  bool retval.34_50;
  long unsigned int _52;
  long int _55;
  bool _57;
  CharType * _58;
  CharType * _59;
  CharType * _60;
  unsigned char * _61;
  CharType * _62;
  CharType * _63;
  unsigned char * _64;
  unsigned char * _65;
  sizetype __n.43_66;
  unsigned char * _67;
  unsigned char * _68;
  CharType * _69;

  <bb 2> [100.00%]:
  prefixLen_26 = 3;
  _57 = MEM[(const struct BZ2StreamScanner *)this_28(D)]._bz2HeaderFound;
  _70 = _57;
  _1 = _70;
  retval.31_30 = ~_1;
  if (retval.31_30 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 11>; [0.00%]

  <bb 3> [100.00%]:
  _34 = this_28(D)->_inBuffSearchPtr;
  _84 = _34;
  _2 = _84;
  _35 = this_28(D)->_inBuff;
  _85 = _35;
  _3 = _85;
  if (_2 != _3)
    goto <bb 5>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 4> [100.00%]:
  _47 = MEM[(const struct BZ2StreamScanner *)this_28(D)]._inBuffEnd;
  _55 = (long int) _47;
  _43 = MEM[(const struct BZ2StreamScanner *)this_28(D)]._inBuff;
  _42 = (long int) _43;
  _41 = _55 - _42;
  _40 = (long unsigned int) _41;
  _86 = _40;
  _4 = _86;
  _5 = &this_28(D)->_bz2Header;
  _52 = MEM[(const struct basic_string *)_5]._M_string_length;
  _87 = _52;
  _6 = _87;
  if (_4 < _6)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 5> [0.00%]:
  iftmp.33_45 = 1;
  goto <bb 7>; [0.00%]

  <bb 6> [0.00%]:
  iftmp.33_44 = 0;

  <bb 7> [0.00%]:
  # iftmp.33_22 = PHI <iftmp.33_45(5), iftmp.33_44(6)>
  retval.32_46 = iftmp.33_22;
  if (retval.32_46 != 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 9>; [0.00%]

  <bb 8> [100.00%]:
  _7 = this_28(D)->_errState;
  _8 = _7 | 32;
  this_28(D)->_errState = _8;
  _29 = this_28(D)->_inBuffEnd;
  _90 = _29;
  _9 = _90;
  this_28(D)->_inBuffSearchPtr = _9;
  goto <bb 12>; [0.00%]

  <bb 9> [100.00%]:
  _10 = &this_28(D)->_bz2Header;
  _59 = this_28(D)->_inBuffSearchPtr;
  _88 = _59;
  _11 = _88;
  _49 = std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::compare (_10, 0, prefixLen_26, _11, prefixLen_26);
  _12 = _49;
  retval.34_50 = _12 == 0;
  if (retval.34_50 != 0)
    goto <bb 12>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 10> [100.00%]:
  _13 = this_28(D)->_errState;
  _14 = _13 | 32;
  this_28(D)->_errState = _14;
  _60 = this_28(D)->_inBuffEnd;
  _89 = _60;
  _15 = _89;
  this_28(D)->_inBuffSearchPtr = _15;
  goto <bb 12>; [0.00%]

  <bb 11> [100.00%]:
  prefixLen.35_16 = (long int) prefixLen_26;
  _17 = &this_28(D)->_bz2Header;
  _68 = MEM[(const struct basic_string *)_17]._M_dataplus._M_p;
  MEM[(struct __normal_iterator *)&D.42304] = _68;
  D.42303 = D.42304;
  D.36547 = D.42303;
  _65 = D.36547._M_current;
  __n.43_66 = (sizetype) prefixLen.35_16;
  _67 = _65 + __n.43_66;
  MEM[(struct __normal_iterator *)&D.42301] = _67;
  D.41464 = D.42301;
  _18 = &this_28(D)->_bz2Header;
  _64 = MEM[(const struct basic_string *)_18]._M_dataplus._M_p;
  MEM[(struct __normal_iterator *)&D.42298] = _64;
  D.41465 = D.42298;
  _63 = this_28(D)->_inBuffEnd;
  _78 = _63;
  _19 = _78;
  _62 = this_28(D)->_inBuffSearchPtr;
  _79 = _62;
  _20 = _79;
  __first2 = D.41465;
  __last2 = D.41464;
  _61 = std::__search<unsigned char*, __gnu_cxx::__normal_iterator<unsigned char*, std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> > >, __gnu_cxx::__ops::_Iter_equal_to_iter> (_20, _19, __first2, __last2, D.42292);
  _83 = _61;
  _37 = _83;
  _21 = _37;
  this_28(D)->_inBuffSearchPtr = _21;
  D.36547 ={v} {CLOBBER};

  <bb 12> [100.00%]:
  _69 = this_28(D)->_inBuffSearchPtr;
  _91 = _69;
  _58 = _91;
  return _58;

}



;; Function pbzip2::BZ2StreamScanner::searchNextHeaderInBuff() (_ZN6pbzip216BZ2StreamScanner22searchNextHeaderInBuffEv, funcdef_no=1938, decl_uid=29369, cgraph_uid=679, symbol_order=682)

Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffEnd().
 Inlining pbzip2::BZ2StreamScanner::getInBuffEnd() into pbzip2::BZ2StreamScanner::searchNextHeaderInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::isBz2HeaderFound() const.
 Inlining pbzip2::BZ2StreamScanner::isBz2HeaderFound() const into pbzip2::BZ2StreamScanner::searchNextHeaderInBuff().
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const into pbzip2::BZ2StreamScanner::searchNextHeaderInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSearchPtr().
 Inlining pbzip2::BZ2StreamScanner::getInBuffSearchPtr() into pbzip2::BZ2StreamScanner::searchNextHeaderInBuff().
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const into pbzip2::BZ2StreamScanner::searchNextHeaderInBuff().
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::operator[](unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::operator[](unsigned long) into pbzip2::BZ2StreamScanner::searchNextHeaderInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSearchPtr().
 Inlining pbzip2::BZ2StreamScanner::getInBuffSearchPtr() into pbzip2::BZ2StreamScanner::searchNextHeaderInBuff().
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::operator[](unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::operator[](unsigned long) into pbzip2::BZ2StreamScanner::searchNextHeaderInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSearchPtr().
 Inlining pbzip2::BZ2StreamScanner::getInBuffSearchPtr() into pbzip2::BZ2StreamScanner::searchNextHeaderInBuff().
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::operator[](unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::operator[](unsigned long) into pbzip2::BZ2StreamScanner::searchNextHeaderInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSearchPtr().
 Inlining pbzip2::BZ2StreamScanner::getInBuffSearchPtr() into pbzip2::BZ2StreamScanner::searchNextHeaderInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getHeaderSize() const.
 Inlining pbzip2::BZ2StreamScanner::getHeaderSize() const into pbzip2::BZ2StreamScanner::searchNextHeaderInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::getUnsearchedCount() const.
 Inlining pbzip2::BZ2StreamScanner::getUnsearchedCount() const into pbzip2::BZ2StreamScanner::searchNextHeaderInBuff().
Considering inline candidate pbzip2::BZ2StreamScanner::failed().
 Inlining pbzip2::BZ2StreamScanner::failed() into pbzip2::BZ2StreamScanner::searchNextHeaderInBuff().
Iterations: 1
Merging blocks 3 and 22
Removing basic block 4
Merging blocks 8 and 30
Removing basic block 10
Removing basic block 13
Removing basic block 14
Merging blocks 16 and 46
Merging blocks 19 and 48
Merging blocks 26 and 25
Merging blocks 34 and 33
Merging blocks 36 and 35
Merging blocks 44 and 43
Merging blocks 3 and 21
Merging blocks 8 and 29
Merging blocks 8 and 28
Merging blocks 8 and 27
Merging blocks 16 and 45
Merging blocks 19 and 47
Merging blocks 26 and 24
Merging blocks 26 and 23
Merging blocks 34 and 32
Merging blocks 34 and 31
Merging blocks 44 and 42
Merging blocks 44 and 41
Merging blocks 44 and 40
Merging blocks 44 and 39
Merging blocks 44 and 38
Merging blocks 44 and 37

Symbols to be put in SSA form
{ D.41822 D.42316 D.42318 D.42320 D.42323 D.42325 D.42328 D.42330 D.42332 D.42334 D.42336 D.42338 D.42341 D.42343 D.42345 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 21
Number of blocks to update: 20 ( 95%)


pbzip2::BZ2StreamScanner::searchNextHeaderInBuff() (struct BZ2StreamScanner * const this)
{
  CharType * D.42345;
  bool D.42343;
  value_type & D.42341;
  size_type D.42338;
  CharType * D.42336;
  size_type D.42334;
  CharType * D.42332;
  CharType * D.42330;
  value_type & D.42328;
  CharType * D.42325;
  value_type & D.42323;
  size_t D.42320;
  size_t D.42318;
  bool D.42316;
  int cmpres;
  CharType bwtSizeChar;
  struct basic_string * pHdr;
  size_t hsp;
  size_t prefixLen;
  bool _1;
  bool _2;
  long unsigned int _3;
  long unsigned int _4;
  CharType * _5;
  CharType * _6;
  unsigned char _7;
  struct basic_string * _8;
  value_type & _9;
  unsigned char _10;
  CharType * _11;
  CharType * _12;
  unsigned char _13;
  struct basic_string * _14;
  value_type & _15;
  unsigned char _16;
  CharType * _17;
  CharType * _18;
  unsigned char _19;
  value_type & _20;
  long unsigned int _21;
  long unsigned int _22;
  CharType * _23;
  CharType * _24;
  long unsigned int _25;
  long unsigned int _26;
  bool _27;
  unsigned int _28;
  unsigned int _29;
  CharType * _30;
  CharType * _31;
  CharType * _32;
  bool iftmp.64_34;
  CharType * _35;
  value_type & _49;
  unsigned char * _50;
  CharType * _51;
  bool iftmp.64_52;
  bool iftmp.64_53;
  bool retval.63_54;
  value_type & _56;
  unsigned char * _57;
  value_type & _58;
  bool retval.65_59;
  long unsigned int _60;
  long int _61;
  value_type & _62;
  bool retval.66_63;
  long int _66;
  CharType * _68;
  value_type & _69;
  long int _71;
  CharType * _72;
  long unsigned int _73;
  int _75;
  CharType * _78;
  bool _79;
  bool retval.67_80;
  unsigned int _84;
  CharType * _86;
  CharType * _87;
  CharType * _88;
  long unsigned int _89;
  CharType * _90;
  long unsigned int _91;
  unsigned char * _92;
  value_type & _93;
  bool _94;
  CharType * _95;

  <bb 2> [0.00%]:
  this_44(D)->_searchStatus = 0;
  prefixLen_46 = 3;
  hsp_47 = prefixLen_46 + 1;
  pbzip2::BZ2StreamScanner::locateHeaderPrefixInBuff (this_44(D));

  <bb 3> [100.00%]:
  _84 = this_44(D)->_errState;
  _79 = _84 != 0;
  _96 = _79;
  _1 = _96;
  _2 = ~_1;
  if (_2 != 0)
    goto <bb 4>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 4> [100.00%]:
  _72 = MEM[(const struct BZ2StreamScanner *)this_44(D)]._inBuffEnd;
  _71 = (long int) _72;
  _68 = MEM[(const struct BZ2StreamScanner *)this_44(D)]._inBuffSearchPtr;
  _66 = (long int) _68;
  _61 = _71 - _66;
  _60 = (long unsigned int) _61;
  _97 = _60;
  _3 = _97;
  _73 = MEM[(const struct basic_string *)this_44(D) + 16B]._M_string_length;
  _98 = _73;
  _4 = _98;
  if (_3 >= _4)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 5> [0.00%]:
  iftmp.64_52 = 1;
  goto <bb 7>; [0.00%]

  <bb 6> [0.00%]:
  iftmp.64_53 = 0;

  <bb 7> [0.00%]:
  # iftmp.64_34 = PHI <iftmp.64_52(5), iftmp.64_53(6)>
  retval.63_54 = iftmp.64_34;
  if (retval.63_54 != 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 19>; [0.00%]

  <bb 8> [100.00%]:
  pHdr_55 = 0B;
  _51 = this_44(D)->_inBuffSearchPtr;
  _99 = _51;
  _5 = _99;
  _6 = _5 + hsp_47;
  _7 = *_6;
  _8 = &this_44(D)->_bz2Header;
  _57 = MEM[(const struct basic_string *)_8]._M_dataplus._M_p;
  _56 = _57 + hsp_47;
  _100 = _56;
  _58 = _100;
  _9 = _58;
  _10 = *_9;
  retval.65_59 = _7 == _10;
  if (retval.65_59 != 0)
    goto <bb 9>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 9> [0.00%]:
  pHdr_65 = &this_44(D)->_bz2Header;
  goto <bb 12>; [0.00%]

  <bb 10> [100.00%]:
  _87 = this_44(D)->_inBuffSearchPtr;
  _101 = _87;
  _11 = _101;
  _12 = _11 + hsp_47;
  _13 = *_12;
  _14 = &this_44(D)->_bz2HeaderZero;
  _50 = MEM[(const struct basic_string *)_14]._M_dataplus._M_p;
  _49 = _50 + hsp_47;
  _102 = _49;
  _62 = _102;
  _15 = _62;
  _16 = *_15;
  retval.66_63 = _13 == _16;
  if (retval.66_63 != 0)
    goto <bb 11>; [0.00%]
  else
    goto <bb 12>; [0.00%]

  <bb 11> [0.00%]:
  pHdr_64 = &this_44(D)->_bz2HeaderZero;

  <bb 12> [0.00%]:
  # pHdr_33 = PHI <pHdr_65(9), pHdr_55(10), pHdr_64(11)>
  if (pHdr_33 != 0B)
    goto <bb 13>; [0.00%]
  else
    goto <bb 16>; [0.00%]

  <bb 13> [100.00%]:
  _88 = this_44(D)->_inBuffSearchPtr;
  _103 = _88;
  _17 = _103;
  _18 = _17 + prefixLen_46;
  bwtSizeChar_67 = *_18;
  _19 = bwtSizeChar_67 + 207;
  if (_19 <= 8)
    goto <bb 14>; [0.00%]
  else
    goto <bb 16>; [0.00%]

  <bb 14> [100.00%]:
  _92 = MEM[(const struct basic_string *)pHdr_33]._M_dataplus._M_p;
  _93 = _92 + prefixLen_46;
  _104 = _93;
  _69 = _104;
  _20 = _69;
  *_20 = bwtSizeChar_67;
  _91 = MEM[(const struct basic_string *)pHdr_33]._M_string_length;
  _105 = _91;
  _21 = _105;
  _22 = _21 - hsp_47;
  _90 = this_44(D)->_inBuffSearchPtr;
  _106 = _90;
  _23 = _106;
  _24 = _23 + hsp_47;
  _89 = MEM[(const struct basic_string *)pHdr_33]._M_string_length;
  _107 = _89;
  _25 = _107;
  _26 = _25 - hsp_47;
  _75 = std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::compare (pHdr_33, hsp_47, _26, _24, _22);
  cmpres_76 = _75;
  if (cmpres_76 == 0)
    goto <bb 15>; [0.00%]
  else
    goto <bb 16>; [0.00%]

  <bb 15> [0.00%]:
  this_44(D)->_searchStatus = 1;
  _78 = this_44(D)->_inBuffSearchPtr;
  goto <bb 20>; [0.00%]

  <bb 16> [100.00%]:
  _94 = MEM[(const struct BZ2StreamScanner *)this_44(D)]._bz2HeaderFound;
  _108 = _94;
  _27 = _108;
  retval.67_80 = ~_27;
  if (retval.67_80 != 0)
    goto <bb 17>; [0.00%]
  else
    goto <bb 18>; [0.00%]

  <bb 17> [0.00%]:
  _28 = this_44(D)->_errState;
  _29 = _28 | 32;
  this_44(D)->_errState = _29;
  goto <bb 19>; [0.00%]

  <bb 18> [0.00%]:
  _30 = this_44(D)->_inBuffSearchPtr;
  _31 = _30 + prefixLen_46;
  this_44(D)->_inBuffSearchPtr = _31;
  pbzip2::BZ2StreamScanner::locateHeaderPrefixInBuff (this_44(D));
  goto <bb 3>; [0.00%]

  <bb 19> [100.00%]:
  _95 = this_44(D)->_inBuffEnd;
  _109 = _95;
  _32 = _109;
  this_44(D)->_inBuffSearchPtr = _32;
  _86 = this_44(D)->_inBuffSearchPtr;

  <bb 20> [0.00%]:
  # _35 = PHI <_78(15), _86(19)>
  return _35;

}



;; Function pbzip2::BZ2StreamScanner::searchNextHeader() (_ZN6pbzip216BZ2StreamScanner16searchNextHeaderEv, funcdef_no=1939, decl_uid=29367, cgraph_uid=680, symbol_order=683)

Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffEnd().
 Inlining pbzip2::BZ2StreamScanner::getInBuffEnd() into pbzip2::BZ2StreamScanner::searchNextHeader().
Considering inline candidate pbzip2::BZ2StreamScanner::failed().
 Inlining pbzip2::BZ2StreamScanner::failed() into pbzip2::BZ2StreamScanner::searchNextHeader().
Considering inline candidate pbzip2::BZ2StreamScanner::getSearchStatus() const.
 Inlining pbzip2::BZ2StreamScanner::getSearchStatus() const into pbzip2::BZ2StreamScanner::searchNextHeader().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffEnd().
 Inlining pbzip2::BZ2StreamScanner::getInBuffEnd() into pbzip2::BZ2StreamScanner::searchNextHeader().
Considering inline candidate pbzip2::BZ2StreamScanner::failed().
 Inlining pbzip2::BZ2StreamScanner::failed() into pbzip2::BZ2StreamScanner::searchNextHeader().
Considering inline candidate pbzip2::BZ2StreamScanner::isOutBuffFullEnough() const.
 Inlining pbzip2::BZ2StreamScanner::isOutBuffFullEnough() const into pbzip2::BZ2StreamScanner::searchNextHeader().
Considering inline candidate pbzip2::BZ2StreamScanner::failed().
 Inlining pbzip2::BZ2StreamScanner::failed() into pbzip2::BZ2StreamScanner::searchNextHeader().
Considering inline candidate pbzip2::BZ2StreamScanner::eof() const.
 Inlining pbzip2::BZ2StreamScanner::eof() const into pbzip2::BZ2StreamScanner::searchNextHeader().
Considering inline candidate pbzip2::BZ2StreamScanner::getSearchStatus() const.
 Inlining pbzip2::BZ2StreamScanner::getSearchStatus() const into pbzip2::BZ2StreamScanner::searchNextHeader().
Considering inline candidate pbzip2::BZ2StreamScanner::getUnsearchedCount() const.
 Inlining pbzip2::BZ2StreamScanner::getUnsearchedCount() const into pbzip2::BZ2StreamScanner::searchNextHeader().
Iterations: 1
Merging blocks 2 and 22
Merging blocks 5 and 24
Removing basic block 6
Removing basic block 7
Removing basic block 8
Merging blocks 12 and 32
Removing basic block 13
Removing basic block 15
Merging blocks 17 and 38
Removing basic block 18
Merging blocks 26 and 25
Merging blocks 28 and 27
Merging blocks 30 and 29
Merging blocks 34 and 33
Merging blocks 36 and 35
Merging blocks 40 and 39
Merging blocks 2 and 21
Merging blocks 5 and 23
Merging blocks 12 and 31
Merging blocks 17 and 37

Symbols to be put in SSA form
{ D.41823 D.42348 D.42350 D.42352 D.42354 D.42356 D.42358 D.42360 D.42362 D.42364 D.42366 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 21
Number of blocks to update: 20 ( 95%)


pbzip2::BZ2StreamScanner::searchNextHeader() (struct BZ2StreamScanner * const this)
{
  CharType * D.42366;
  bool D.42364;
  bool D.42362;
  CharType * D.42360;
  bool D.42358;
  bool D.42356;
  bool D.42354;
  bool D.42352;
  bool D.42350;
  size_t D.42348;
  long unsigned int _1;
  bool _2;
  bool _3;
  bool _4;
  bool _5;
  bool _6;
  bool _7;
  bool _8;
  bool _9;
  CharType * _10;
  bool iftmp.70_11;
  CharType * _12;
  bool _20;
  bool retval.68_21;
  unsigned int _23;
  bool _24;
  bool _25;
  long unsigned int _26;
  bool _27;
  bool iftmp.70_28;
  bool iftmp.70_29;
  bool retval.69_30;
  CharType * _31;
  bool retval.72_32;
  long int _34;
  bool retval.73_35;
  CharType * _36;
  CharType * _37;
  CharType * _39;
  long int _41;
  bool retval.71_42;
  long int _44;
  CharType * _45;
  unsigned int _47;
  long unsigned int _48;
  long unsigned int _49;
  bool _50;
  unsigned int _51;
  bool _52;
  CharType * _53;
  bool _54;
  unsigned int _55;
  bool _56;
  CharType * _57;

  <bb 2> [100.00%]:
  _37 = MEM[(const struct BZ2StreamScanner *)this_19(D)]._inBuffEnd;
  _34 = (long int) _37;
  _31 = MEM[(const struct BZ2StreamScanner *)this_19(D)]._inBuffSearchPtr;
  _44 = (long int) _31;
  _41 = _34 - _44;
  _26 = (long unsigned int) _41;
  _58 = _26;
  _1 = _58;
  retval.68_21 = _1 != 0;
  if (retval.68_21 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  pbzip2::BZ2StreamScanner::searchNextHeaderInBuff (this_19(D));

  <bb 4> [0.00%]:

  <bb 5> [100.00%]:
  _25 = MEM[(const struct BZ2StreamScanner *)this_19(D)]._searchStatus;
  _59 = _25;
  _2 = _59;
  _3 = ~_2;
  if (_3 != 0)
    goto <bb 6>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 6> [100.00%]:
  _24 = MEM[(const struct BZ2StreamScanner *)this_19(D)]._eof;
  _60 = _24;
  _4 = _60;
  _5 = ~_4;
  if (_5 != 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 7> [100.00%]:
  _23 = this_19(D)->_errState;
  _20 = _23 != 0;
  _61 = _20;
  _6 = _61;
  _7 = ~_6;
  if (_7 != 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 8> [100.00%]:
  _47 = MEM[(const struct BZ2StreamScanner *)this_19(D)]._outBuff.bufSize;
  _48 = (long unsigned int) _47;
  _49 = MEM[(const struct BZ2StreamScanner *)this_19(D)]._outBuffCapacityLimit;
  _50 = _48 >= _49;
  _62 = _50;
  _27 = _62;
  _8 = _27;
  _9 = ~_8;
  if (_9 != 0)
    goto <bb 9>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 9> [0.00%]:
  iftmp.70_28 = 1;
  goto <bb 11>; [0.00%]

  <bb 10> [0.00%]:
  iftmp.70_29 = 0;

  <bb 11> [0.00%]:
  # iftmp.70_11 = PHI <iftmp.70_28(9), iftmp.70_29(10)>
  retval.69_30 = iftmp.70_11;
  if (retval.69_30 != 0)
    goto <bb 12>; [0.00%]
  else
    goto <bb 15>; [0.00%]

  <bb 12> [100.00%]:
  pbzip2::BZ2StreamScanner::readData (this_19(D));
  _51 = this_19(D)->_errState;
  _52 = _51 != 0;
  _66 = _52;
  retval.71_42 = _66;
  if (retval.71_42 != 0)
    goto <bb 13>; [0.00%]
  else
    goto <bb 14>; [0.00%]

  <bb 13> [100.00%]:
  _53 = this_19(D)->_inBuffEnd;
  _67 = _53;
  _45 = _67;
  goto <bb 20>; [0.00%]

  <bb 14> [0.00%]:
  pbzip2::BZ2StreamScanner::searchNextHeaderInBuff (this_19(D));
  goto <bb 5>; [0.00%]

  <bb 15> [100.00%]:
  _54 = MEM[(const struct BZ2StreamScanner *)this_19(D)]._searchStatus;
  _63 = _54;
  retval.72_32 = _63;
  if (retval.72_32 != 0)
    goto <bb 16>; [0.00%]
  else
    goto <bb 17>; [0.00%]

  <bb 16> [0.00%]:
  this_19(D)->_bz2HeaderFound = 1;

  <bb 17> [100.00%]:
  _55 = this_19(D)->_errState;
  _56 = _55 != 0;
  _64 = _56;
  retval.73_35 = _64;
  if (retval.73_35 != 0)
    goto <bb 18>; [0.00%]
  else
    goto <bb 19>; [0.00%]

  <bb 18> [100.00%]:
  _57 = this_19(D)->_inBuffEnd;
  _65 = _57;
  _10 = _65;
  this_19(D)->_inBuffSearchPtr = _10;
  _39 = this_19(D)->_inBuffSearchPtr;
  goto <bb 20>; [0.00%]

  <bb 19> [0.00%]:
  _36 = this_19(D)->_inBuffSearchPtr;

  <bb 20> [0.00%]:
  # _12 = PHI <_45(13), _39(18), _36(19)>
  return _12;

}



;; Function pbzip2::BZ2StreamScanner::getNextStream() (_ZN6pbzip216BZ2StreamScanner13getNextStreamEv, funcdef_no=1940, decl_uid=29308, cgraph_uid=681, symbol_order=684)

Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSearchPtr().
 Inlining pbzip2::BZ2StreamScanner::getInBuffSearchPtr() into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffCurrent().
 Inlining pbzip2::BZ2StreamScanner::getInBuffCurrent() into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSearchPtr().
 Inlining pbzip2::BZ2StreamScanner::getInBuffSearchPtr() into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffCurrent().
 Inlining pbzip2::BZ2StreamScanner::getInBuffCurrent() into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate pbzip2::BZ2StreamScanner::failed().
 Inlining pbzip2::BZ2StreamScanner::failed() into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate pbzip2::BZ2StreamScanner::failed().
 Inlining pbzip2::BZ2StreamScanner::failed() into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate std::min<unsigned char*>(unsigned char* const&, unsigned char* const&)unsigned char* const&.
 Inlining std::min<unsigned char*>(unsigned char* const&, unsigned char* const&)unsigned char* const& into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSearchPtr().
 Inlining pbzip2::BZ2StreamScanner::getInBuffSearchPtr() into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffEnd().
 Inlining pbzip2::BZ2StreamScanner::getInBuffEnd() into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate pbzip2::BZ2StreamScanner::eof() const.
 Inlining pbzip2::BZ2StreamScanner::eof() const into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate pbzip2::BZ2StreamScanner::getSearchStatus() const.
 Inlining pbzip2::BZ2StreamScanner::getSearchStatus() const into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffSearchPtr().
 Inlining pbzip2::BZ2StreamScanner::getInBuffSearchPtr() into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffCurrent().
 Inlining pbzip2::BZ2StreamScanner::getInBuffCurrent() into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate pbzip2::BZ2StreamScanner::eof() const.
 Inlining pbzip2::BZ2StreamScanner::eof() const into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffEnd().
 Inlining pbzip2::BZ2StreamScanner::getInBuffEnd() into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate pbzip2::BZ2StreamScanner::getInBuffCurrent().
 Inlining pbzip2::BZ2StreamScanner::getInBuffCurrent() into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate pbzip2::BZ2StreamScanner::failed().
 Inlining pbzip2::BZ2StreamScanner::failed() into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate pbzip2::BZ2StreamScanner::isBz2HeaderFound() const.
 Inlining pbzip2::BZ2StreamScanner::isBz2HeaderFound() const into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate pbzip2::BZ2StreamScanner::failed().
 Inlining pbzip2::BZ2StreamScanner::failed() into pbzip2::BZ2StreamScanner::getNextStream().
Considering inline candidate outBuff::outBuff(char*, unsigned int, int, int, unsigned int, bool, outBuff*).
 Inlining outBuff::outBuff(char*, unsigned int, int, int, unsigned int, bool, outBuff*) into pbzip2::BZ2StreamScanner::getNextStream().
Iterations: 1
Removing basic block 3
Merging blocks 7 and 44
Removing basic block 8
Merging blocks 13 and 48
Removing basic block 15
Removing basic block 16
Removing basic block 21
Removing basic block 22
Removing basic block 23
Removing basic block 27
Merging blocks 28 and 74
Merging blocks 30 and 76
Removing basic block 34
Merging blocks 36 and 84
Merging blocks 42 and 41
Merging blocks 46 and 45
Merging blocks 52 and 51
Merging blocks 54 and 53
Merging blocks 58 and 57
Merging blocks 60 and 59
Merging blocks 62 and 61
Merging blocks 66 and 63
Merging blocks 72 and 71
Merging blocks 80 and 79
Merging blocks 7 and 43
Merging blocks 13 and 47
Merging blocks 28 and 73
Merging blocks 30 and 75
Merging blocks 36 and 83
Merging blocks 36 and 82
Merging blocks 36 and 81
Merging blocks 52 and 50
Merging blocks 52 and 49
Merging blocks 58 and 56
Merging blocks 58 and 55
Merging blocks 72 and 70
Merging blocks 72 and 69
Merging blocks 72 and 68
Merging blocks 72 and 67
Merging blocks 72 and 64
Merging blocks 80 and 78
Merging blocks 80 and 77

Symbols to be put in SSA form
{ D.41824 D.42377 D.42379 D.42381 D.42383 D.42385 D.42387 D.42389 D.42391 D.42393 D.42395 D.42398 D.42400 D.42402 D.42404 D.42406 D.42408 D.42410 D.42412 D.42414 D.42416 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 43
Number of blocks to update: 42 ( 98%)


pbzip2::BZ2StreamScanner::getNextStream() (struct BZ2StreamScanner * const this)
{
  CharType * D.42416;
  CharType * D.42414;
  CharType * D.42412;
  CharType * D.42410;
  bool D.42408;
  bool D.42406;
  CharType * D.42404;
  CharType * D.42402;
  size_type D.42400;
  unsigned char * const & D.42398;
  bool D.42395;
  bool D.42393;
  CharType * D.42391;
  CharType * D.42389;
  bool D.42387;
  CharType * D.42385;
  CharType * D.42383;
  bool D.42381;
  bool D.42379;
  bool D.42377;
  struct outBuff * res;
  unsigned char * const D.36611;
  unsigned char * const D.36612;
  unsigned int _1;
  unsigned int _2;
  bool _3;
  bool _4;
  bool _5;
  bool _6;
  CharType * _7;
  CharType * _8;
  bool _9;
  CharType * _10;
  CharType * _11;
  bool _12;
  bool _13;
  bool _14;
  bool _15;
  CharType * _16;
  CharType * _17;
  struct basic_string * _18;
  long unsigned int _19;
  CharType * _20;
  unsigned char * const & _21;
  unsigned char * _22;
  int _23;
  int _24;
  int _25;
  CharType * _26;
  CharType * _27;
  int _28;
  unsigned int _29;
  int _30;
  CharType * _31;
  CharType * _32;
  int _33;
  int _34;
  struct outBuff * iftmp.74_35;
  struct outBuff * _36;
  bool iftmp.76_37;
  bool iftmp.79_38;
  bool iftmp.81_39;
  void * _57;
  struct outBuff * iftmp.74_58;
  struct outBuff * iftmp.74_60;
  bool _64;
  unsigned int _65;
  bool iftmp.76_66;
  bool iftmp.76_67;
  bool retval.75_68;
  CharType * _71;
  bool retval.77_72;
  CharType * _73;
  long unsigned int _74;
  unsigned char * const & _75;
  bool iftmp.79_76;
  bool iftmp.79_77;
  bool retval.78_78;
  unsigned char * _79;
  unsigned char * _80;
  bool _81;
  bool _82;
  bool iftmp.81_83;
  bool iftmp.81_84;
  bool retval.80_85;
  CharType * _86;
  CharType * _88;
  bool _89;
  CharType * _91;
  CharType * _97;
  bool retval.82_98;
  bool _100;
  bool retval.83_101;
  unsigned int _102;
  bool _103;
  bool retval.84_104;
  bool _110;
  unsigned int _111;
  bool retval.85_112;
  struct outBuff * _119;
  struct outBuff * _120;
  struct outBuff * _121;
  struct outBuff * _123;
  struct outBuff * _124;
  struct outBuff * _127;
  unsigned int _128;
  bool _129;
  CharType * _130;
  CharType * _131;
  CharType * _132;
  CharType * _133;

  <bb 2> [0.00%]:
  pbzip2::BZ2StreamScanner::initOutBuff (this_54(D), 0B, 0, 0);
  _57 = operator new (40, &nothrow);
  if (_57 != 0B)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [100.00%]:
  MEM[(struct  &)_57] ={v} {CLOBBER};
  MEM[(struct outBuff *)_57].buf = 0B;
  MEM[(struct outBuff *)_57].bufSize = 0;
  MEM[(struct outBuff *)_57].blockNumber = 0;
  MEM[(struct outBuff *)_57].sequenceNumber = 0;
  MEM[(struct outBuff *)_57].inSize = 0;
  MEM[(struct outBuff *)_57].isLastInSequence = 1;
  MEM[(struct outBuff *)_57].next = 0B;
  iftmp.74_60 = _57;
  goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  iftmp.74_58 = _57;

  <bb 5> [0.00%]:
  # iftmp.74_35 = PHI <iftmp.74_60(3), iftmp.74_58(4)>
  res_61 = iftmp.74_35;
  if (res_61 == 0B)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 6> [0.00%]:
  handle_error (1, -1, "pbzip2: *ERROR: Could not allocate memory (getNextStream/%u)!Aborting...\n", 40);
  _1 = this_54(D)->_errState;
  _2 = _1 | 2;
  this_54(D)->_errState = _2;
  _127 = res_61;
  goto <bb 42>; [0.00%]

  <bb 7> [100.00%]:
  res_61->buf = 0B;
  res_61->bufSize = 4294967295;
  _111 = this_54(D)->_errState;
  _110 = _111 != 0;
  _142 = _110;
  _3 = _142;
  _4 = ~_3;
  if (_4 != 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 8> [100.00%]:
  _103 = MEM[(const struct BZ2StreamScanner *)this_54(D)]._bz2HeaderFound;
  _143 = _103;
  _5 = _143;
  _6 = ~_5;
  if (_6 != 0)
    goto <bb 9>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 9> [0.00%]:
  iftmp.76_66 = 1;
  goto <bb 11>; [0.00%]

  <bb 10> [0.00%]:
  iftmp.76_67 = 0;

  <bb 11> [0.00%]:
  # iftmp.76_37 = PHI <iftmp.76_66(9), iftmp.76_67(10)>
  retval.75_68 = iftmp.76_37;
  if (retval.75_68 != 0)
    goto <bb 12>; [0.00%]
  else
    goto <bb 13>; [0.00%]

  <bb 12> [0.00%]:
  this_54(D)->_searchStatus = 0;
  pbzip2::BZ2StreamScanner::searchNextHeader (this_54(D));

  <bb 13> [100.00%]:
  _102 = this_54(D)->_errState;
  _100 = _102 != 0;
  _144 = _100;
  retval.77_72 = _144;
  if (retval.77_72 != 0)
    goto <bb 14>; [0.00%]
  else
    goto <bb 15>; [0.00%]

  <bb 14> [0.00%]:
  _124 = res_61;
  goto <bb 42>; [0.00%]

  <bb 15> [100.00%]:
  _91 = this_54(D)->_inBuffCurrent;
  _145 = _91;
  _7 = _145;
  _97 = this_54(D)->_inBuffEnd;
  _146 = _97;
  _8 = _146;
  if (_7 == _8)
    goto <bb 16>; [0.00%]
  else
    goto <bb 18>; [0.00%]

  <bb 16> [100.00%]:
  _89 = MEM[(const struct BZ2StreamScanner *)this_54(D)]._eof;
  _147 = _89;
  _9 = _147;
  if (_9 != 0)
    goto <bb 17>; [0.00%]
  else
    goto <bb 18>; [0.00%]

  <bb 17> [0.00%]:
  iftmp.79_76 = 1;
  goto <bb 19>; [0.00%]

  <bb 18> [0.00%]:
  iftmp.79_77 = 0;

  <bb 19> [0.00%]:
  # iftmp.79_38 = PHI <iftmp.79_76(17), iftmp.79_77(18)>
  retval.78_78 = iftmp.79_38;
  if (retval.78_78 != 0)
    goto <bb 20>; [0.00%]
  else
    goto <bb 21>; [0.00%]

  <bb 20> [0.00%]:
  res_61->bufSize = 0;
  _123 = res_61;
  goto <bb 42>; [0.00%]

  <bb 21> [100.00%]:
  _86 = this_54(D)->_inBuffCurrent;
  _148 = _86;
  _10 = _148;
  _88 = this_54(D)->_inBuffSearchPtr;
  _149 = _88;
  _11 = _149;
  if (_10 == _11)
    goto <bb 24>; [0.00%]
  else
    goto <bb 22>; [0.00%]

  <bb 22> [100.00%]:
  _82 = MEM[(const struct BZ2StreamScanner *)this_54(D)]._searchStatus;
  _150 = _82;
  _12 = _150;
  _13 = ~_12;
  if (_13 != 0)
    goto <bb 23>; [0.00%]
  else
    goto <bb 25>; [0.00%]

  <bb 23> [100.00%]:
  _81 = MEM[(const struct BZ2StreamScanner *)this_54(D)]._eof;
  _151 = _81;
  _14 = _151;
  _15 = ~_14;
  if (_15 != 0)
    goto <bb 24>; [0.00%]
  else
    goto <bb 25>; [0.00%]

  <bb 24> [0.00%]:
  iftmp.81_84 = 1;
  goto <bb 26>; [0.00%]

  <bb 25> [0.00%]:
  iftmp.81_83 = 0;

  <bb 26> [0.00%]:
  # iftmp.81_39 = PHI <iftmp.81_84(24), iftmp.81_83(25)>
  retval.80_85 = iftmp.81_39;
  if (retval.80_85 != 0)
    goto <bb 27>; [0.00%]
  else
    goto <bb 30>; [0.00%]

  <bb 27> [100.00%]:
  _71 = this_54(D)->_inBuffEnd;
  _152 = _71;
  _16 = _152;
  D.36612 = _16;
  _73 = this_54(D)->_inBuffSearchPtr;
  _153 = _73;
  _17 = _153;
  _18 = &this_54(D)->_bz2Header;
  _74 = MEM[(const struct basic_string *)_18]._M_string_length;
  _154 = _74;
  _19 = _154;
  _20 = _17 + _19;
  D.36611 = _20;
  _80 = D.36612;
  _79 = D.36611;
  if (_79 > _80)
    goto <bb 29>; [46.00%]
  else
    goto <bb 28>; [54.00%]

  <bb 28> [54.00%]:

  <bb 29> [100.00%]:
  # _75 = PHI <&D.36612(27), &D.36611(28)>
  _155 = _75;
  _21 = _155;
  _22 = *_21;
  this_54(D)->_inBuffSearchPtr = _22;
  D.36611 ={v} {CLOBBER};
  D.36612 ={v} {CLOBBER};
  this_54(D)->_searchStatus = 0;
  pbzip2::BZ2StreamScanner::searchNextHeader (this_54(D));

  <bb 30> [100.00%]:
  _65 = this_54(D)->_errState;
  _64 = _65 != 0;
  _156 = _64;
  retval.82_98 = _156;
  if (retval.82_98 != 0)
    goto <bb 31>; [0.00%]
  else
    goto <bb 32>; [0.00%]

  <bb 31> [0.00%]:
  _121 = res_61;
  goto <bb 42>; [0.00%]

  <bb 32> [100.00%]:
  pbzip2::BZ2StreamScanner::appendOutBuffDataUpToLimit (this_54(D));
  _128 = this_54(D)->_errState;
  _129 = _128 != 0;
  _157 = _129;
  retval.83_101 = _157;
  if (retval.83_101 != 0)
    goto <bb 33>; [0.00%]
  else
    goto <bb 34>; [0.00%]

  <bb 33> [0.00%]:
  _120 = res_61;
  goto <bb 42>; [0.00%]

  <bb 34> [0.00%]:
  _23 = this_54(D)->_outSequenceNumber;
  if (_23 > 0)
    goto <bb 35>; [0.00%]
  else
    goto <bb 36>; [0.00%]

  <bb 35> [0.00%]:
  _24 = this_54(D)->_outSequenceNumber;
  _25 = _24 + 1;
  this_54(D)->_outSequenceNumber = _25;
  goto <bb 38>; [0.00%]

  <bb 36> [100.00%]:
  _131 = this_54(D)->_inBuffCurrent;
  _158 = _131;
  _26 = _158;
  _130 = this_54(D)->_inBuffSearchPtr;
  _159 = _130;
  _27 = _159;
  retval.84_104 = _26 != _27;
  if (retval.84_104 != 0)
    goto <bb 37>; [0.00%]
  else
    goto <bb 38>; [0.00%]

  <bb 37> [0.00%]:
  this_54(D)->_outSequenceNumber = 1;

  <bb 38> [100.00%]:
  _28 = this_54(D)->_outSequenceNumber;
  this_54(D)->_outBuff.sequenceNumber = _28;
  _29 = this_54(D)->_outBuff.bufSize;
  this_54(D)->_outBuff.inSize = _29;
  _30 = this_54(D)->_streamNumber;
  this_54(D)->_outBuff.blockNumber = _30;
  _133 = this_54(D)->_inBuffCurrent;
  _160 = _133;
  _31 = _160;
  _132 = this_54(D)->_inBuffSearchPtr;
  _161 = _132;
  _32 = _161;
  retval.85_112 = _31 == _32;
  if (retval.85_112 != 0)
    goto <bb 39>; [0.00%]
  else
    goto <bb 40>; [0.00%]

  <bb 39> [0.00%]:
  this_54(D)->_outBuff.isLastInSequence = 1;
  this_54(D)->_outSequenceNumber = 0;
  _33 = this_54(D)->_streamNumber;
  _34 = _33 + 1;
  this_54(D)->_streamNumber = _34;
  goto <bb 41>; [0.00%]

  <bb 40> [0.00%]:
  this_54(D)->_outBuff.isLastInSequence = 0;

  <bb 41> [0.00%]:
  *res_61 = this_54(D)->_outBuff;
  pbzip2::BZ2StreamScanner::initOutBuff (this_54(D), 0B, 0, 0);
  _119 = res_61;

  <bb 42> [0.00%]:
  # _36 = PHI <_127(6), _124(14), _123(20), _121(31), _120(33), _119(41)>
  return _36;

}



;; Function std::__addressof<unsigned char const>(unsigned char const&)unsigned char const* (_ZSt11__addressofIKhEPT_RS1_, funcdef_no=2499, decl_uid=41065, cgraph_uid=1239, symbol_order=1242)

Iterations: 0
std::__addressof<unsigned char const>(unsigned char const&)unsigned char const* (const unsigned char & __r)
{
  const unsigned char * _2;

  <bb 2> [0.00%]:
  _2 = __r_1(D);
  return _2;

}



;; Function std::addressof<unsigned char const>(unsigned char const&)unsigned char const* (_ZSt9addressofIKhEPT_RS1_, funcdef_no=2498, decl_uid=41002, cgraph_uid=1240, symbol_order=1243)

Considering inline candidate std::__addressof<unsigned char const>(unsigned char const&)unsigned char const*.
 Inlining std::__addressof<unsigned char const>(unsigned char const&)unsigned char const* into std::addressof<unsigned char const>(unsigned char const&)unsigned char const*.
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.42420 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


std::addressof<unsigned char const>(unsigned char const&)unsigned char const* (const unsigned char & __r)
{
  const unsigned char * D.42420;
  const unsigned char * _4;

  <bb 2> [100.00%]:
  _3 = __r_2(D);
  _4 = _3;
  return _4;

}



;; Function std::pointer_traits<unsigned char const*>::pointer_to(unsigned char const&) (_ZNSt14pointer_traitsIPKhE10pointer_toERS0_, funcdef_no=2469, decl_uid=40591, cgraph_uid=1210, symbol_order=1213)

Considering inline candidate std::addressof<unsigned char const>(unsigned char const&)unsigned char const*.
 Inlining std::addressof<unsigned char const>(unsigned char const&)unsigned char const* into std::pointer_traits<unsigned char const*>::pointer_to(unsigned char const&).
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.42423 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


std::pointer_traits<unsigned char const*>::pointer_to(unsigned char const&) (const __make_not_void & __r)
{
  const unsigned char * D.42423;
  const unsigned char * _4;

  <bb 2> [100.00%]:
  _3 = __r_2(D);
  _4 = _3;
  return _4;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_local_data() const (_ZNKSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE13_M_local_dataEv, funcdef_no=2417, decl_uid=29822, cgraph_uid=1158, symbol_order=1161)

Considering inline candidate std::pointer_traits<unsigned char const*>::pointer_to(unsigned char const&).
 Inlining std::pointer_traits<unsigned char const*>::pointer_to(unsigned char const&) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_local_data() const.
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.42426 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_local_data() const (const struct basic_string * const this)
{
  const unsigned char * D.42426;
  const unsigned char[16] * _1;
  const unsigned char * _5;

  <bb 2> [100.00%]:
  _1 = &this_2(D)->D.29808._M_local_buf;
  _4 = _1;
  _5 = _4;
  return _5;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_is_local() const (_ZNKSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE11_M_is_localEv, funcdef_no=2367, decl_uid=29830, cgraph_uid=1108, symbol_order=1111)

Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_local_data() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_local_data() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_is_local() const.
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_is_local() const.
Iterations: 1
Merging blocks 2 and 6
Merging blocks 2 and 5
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.41829 D.42429 D.42431 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_is_local() const (const struct basic_string * const this)
{
  unsigned char * D.42431;
  const unsigned char * D.42429;
  unsigned char * _1;
  const unsigned char * _2;
  unsigned char * _5;
  const unsigned char[16] * _6;
  bool _7;

  <bb 2> [100.00%]:
  _5 = this_4(D)->_M_dataplus._M_p;
  _8 = _5;
  _1 = _8;
  _6 = &this_4(D)->D.29808._M_local_buf;
  _9 = _6;
  _2 = _9;
  _7 = _1 == _2;
  return _7;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_dispose() (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE10_M_disposeEv, funcdef_no=2306, decl_uid=29836, cgraph_uid=1047, symbol_order=1050)

Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_destroy(unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_destroy(unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_dispose().
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_is_local() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_is_local() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_dispose().
Iterations: 1
Merging blocks 2 and 6
Merging blocks 3 and 8
Removing basic block 7
Merging blocks 2 and 5

Symbols to be put in SSA form
{ D.41830 D.42434 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_dispose() (struct basic_string * const this)
{
  bool D.42434;
  bool _1;
  long unsigned int _2;
  unsigned char * _6;
  bool _7;
  bool retval.0_8;
  const unsigned char[16] * _10;
  bool _11;
  unsigned char * _12;

  <bb 2> [100.00%]:
  _6 = MEM[(const struct basic_string *)this_5(D)]._M_dataplus._M_p;
  _10 = &MEM[(const struct basic_string *)this_5(D)].D.29808._M_local_buf;
  _11 = _6 == _10;
  _13 = _11;
  _7 = _13;
  _1 = _7;
  retval.0_8 = ~_1;
  if (retval.0_8 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [100.00%]:
  _2 = this_5(D)->D.29808._M_allocated_capacity;
  _12 = MEM[(const struct basic_string *)this_5(D)]._M_dataplus._M_p;
  operator delete (_12);

  <bb 4> [0.00%]:
  return;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::~basic_string() (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEED2Ev, funcdef_no=2181, decl_uid=30734, cgraph_uid=922, symbol_order=925)

Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_Alloc_hider::~_Alloc_hider().
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_Alloc_hider::~_Alloc_hider() into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::~basic_string().
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_dispose().
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_dispose() into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::~basic_string().
Iterations: 1
Merging blocks 2 and 6
Removing basic block 8
Merging blocks 5 and 4
Merging blocks 5 and 3

Symbols to be put in SSA form
{ D.41831 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::~basic_string() (struct basic_string * const this)
{
  struct _Alloc_hider * _1;
  unsigned char * _7;
  const unsigned char[16] * _8;

  <bb 2> [100.00%]:
  _7 = MEM[(const struct basic_string *)this_3(D)]._M_dataplus._M_p;
  _8 = &MEM[(const struct basic_string *)this_3(D)].D.29808._M_local_buf;
  if (_7 != _8)
    goto <bb 3>; [57.44%]
  else
    goto <bb 4>; [42.56%]

  <bb 3> [57.44%]:
  operator delete (_7);

  <bb 4> [100.00%]:
  _1 = &this_3(D)->_M_dataplus;
  MEM[(struct  &)_1] ={v} {CLOBBER};
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  return;

}



;; Function pbzip2::BZ2StreamScanner::~BZ2StreamScanner() (_ZN6pbzip216BZ2StreamScannerD2Ev, funcdef_no=1928, decl_uid=30776, cgraph_uid=669, symbol_order=672)

Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::~basic_string().
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::~basic_string() into pbzip2::BZ2StreamScanner::~BZ2StreamScanner().
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::~basic_string().
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::~basic_string() into pbzip2::BZ2StreamScanner::~BZ2StreamScanner().
Iterations: 1
Merging blocks 2 and 8
Merging blocks 6 and 3
Merging blocks 10 and 7
Merging blocks 10 and 4

Symbols to be put in SSA form
{ D.41832 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 7
Number of blocks to update: 6 ( 86%)


pbzip2::BZ2StreamScanner::~BZ2StreamScanner() (struct BZ2StreamScanner * const this)
{
  int (*__vtbl_ptr_type) () * _1;
  struct basic_string * _2;
  struct basic_string * _3;
  unsigned char * _11;
  const unsigned char[16] * _12;
  unsigned char * _13;
  const unsigned char[16] * _14;

  <bb 2> [100.00%]:
  _1 = &_ZTVN6pbzip216BZ2StreamScannerE + 16;
  this_5(D)->_vptr.BZ2StreamScanner = _1;
  pbzip2::BZ2StreamScanner::dispose (this_5(D));
  _2 = &this_5(D)->_bz2HeaderZero;
  _13 = MEM[(const struct basic_string *)_2]._M_dataplus._M_p;
  _14 = &MEM[(const struct basic_string *)_2].D.29808._M_local_buf;
  if (_13 != _14)
    goto <bb 3>; [57.44%]
  else
    goto <bb 4>; [42.56%]

  <bb 3> [57.44%]:
  operator delete (_13);

  <bb 4> [100.00%]:
  MEM[(struct  &)_2] ={v} {CLOBBER};
  _3 = &this_5(D)->_bz2Header;
  _11 = MEM[(const struct basic_string *)_3]._M_dataplus._M_p;
  _12 = &MEM[(const struct basic_string *)_3].D.29808._M_local_buf;
  if (_11 != _12)
    goto <bb 5>; [57.44%]
  else
    goto <bb 6>; [42.56%]

  <bb 5> [57.44%]:
  operator delete (_11);

  <bb 6> [100.00%]:
  MEM[(struct  &)_3] ={v} {CLOBBER};
  MEM[(struct  &)this_5(D)] ={v} {CLOBBER};
  return;

}



;; Function pbzip2::BZ2StreamScanner::~BZ2StreamScanner() (_ZN6pbzip216BZ2StreamScannerD0Ev, funcdef_no=1930, decl_uid=30770, cgraph_uid=671, symbol_order=674)

Iterations: 0
pbzip2::BZ2StreamScanner::~BZ2StreamScanner() (struct BZ2StreamScanner * const this)
{
  <bb 2> [0.00%]:
  pbzip2::BZ2StreamScanner::~BZ2StreamScanner (this_2(D));
  operator delete (this_2(D), 208);
  return;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::capacity() const (_ZNKSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE8capacityEv, funcdef_no=2421, decl_uid=30127, cgraph_uid=1162, symbol_order=1165)

Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_is_local() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_is_local() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::capacity() const.
Iterations: 1
Merging blocks 2 and 7
Merging blocks 2 and 6

Symbols to be put in SSA form
{ D.41834 D.42446 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 6
Number of blocks to update: 5 ( 83%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::capacity() const (const struct basic_string * const this)
{
  bool D.42446;
  bool _1;
  size_type iftmp.9_2;
  unsigned char * _5;
  bool _6;
  size_type iftmp.9_7;
  size_type iftmp.9_8;
  size_type _9;
  const unsigned char[16] * _10;
  bool _11;

  <bb 2> [100.00%]:
  _5 = this_4(D)->_M_dataplus._M_p;
  _10 = &this_4(D)->D.29808._M_local_buf;
  _11 = _5 == _10;
  _12 = _11;
  _6 = _12;
  _1 = _6;
  if (_1 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  iftmp.9_8 = 15;
  goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  iftmp.9_7 = this_4(D)->D.29808._M_allocated_capacity;

  <bb 5> [0.00%]:
  # iftmp.9_2 = PHI <iftmp.9_8(3), iftmp.9_7(4)>
  _9 = iftmp.9_2;
  return _9;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_get_allocator() const (_ZNKSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE16_M_get_allocatorEv, funcdef_no=2501, decl_uid=29915, cgraph_uid=1242, symbol_order=1245)

Iterations: 0
std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_get_allocator() const (const struct basic_string * const this)
{
  const struct allocator_type & _2;

  <bb 2> [0.00%]:
  _2 = &this_1(D)->_M_dataplus;
  return _2;

}



;; Function __gnu_cxx::new_allocator<unsigned char>::max_size() const (_ZNK9__gnu_cxx13new_allocatorIhE8max_sizeEv, funcdef_no=2510, decl_uid=29662, cgraph_uid=1251, symbol_order=1254)

Iterations: 0
__gnu_cxx::new_allocator<unsigned char>::max_size() const (const struct new_allocator * const this)
{
  size_type _1;

  <bb 2> [0.00%]:
  _1 = 18446744073709551615;
  return _1;

}



;; Function std::allocator_traits<std::allocator<unsigned char> >::max_size(std::allocator<unsigned char> const&) (_ZNSt16allocator_traitsISaIhEE8max_sizeERKS0_, funcdef_no=2500, decl_uid=29443, cgraph_uid=1241, symbol_order=1244)

Considering inline candidate __gnu_cxx::new_allocator<unsigned char>::max_size() const.
 Inlining __gnu_cxx::new_allocator<unsigned char>::max_size() const into std::allocator_traits<std::allocator<unsigned char> >::max_size(std::allocator<unsigned char> const&).
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.42451 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


std::allocator_traits<std::allocator<unsigned char> >::max_size(std::allocator<unsigned char> const&) (const struct allocator_type & __a)
{
  size_type D.42451;
  size_type _4;

  <bb 2> [100.00%]:
  _3 = 18446744073709551615;
  _4 = _3;
  return _4;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::max_size() const (_ZNKSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE8max_sizeEv, funcdef_no=2471, decl_uid=30116, cgraph_uid=1212, symbol_order=1215)

Considering inline candidate std::allocator_traits<std::allocator<unsigned char> >::max_size(std::allocator<unsigned char> const&).
 Inlining std::allocator_traits<std::allocator<unsigned char> >::max_size(std::allocator<unsigned char> const&) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::max_size() const.
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_get_allocator() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_get_allocator() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::max_size() const.
Iterations: 1
Merging blocks 2 and 6
Merging blocks 2 and 5
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.42454 D.42456 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::max_size() const (const struct basic_string * const this)
{
  const struct allocator_type & D.42456;
  size_type D.42454;
  const struct allocator_type & _1;
  long unsigned int _2;
  long unsigned int _3;
  const struct allocator_type & _7;
  size_type _8;

  <bb 2> [100.00%]:
  _7 = &this_5(D)->_M_dataplus;
  _6 = _7;
  _1 = _6;
  _9 = 18446744073709551615;
  _2 = _9;
  _3 = _2 + 18446744073709551615;
  _8 = _3 / 2;
  return _8;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_check_length(unsigned long, unsigned long, char const*) const (_ZNKSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE15_M_check_lengthEmmPKc, funcdef_no=2420, decl_uid=29921, cgraph_uid=1161, symbol_order=1164)

Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_check_length(unsigned long, unsigned long, char const*) const.
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::max_size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::max_size() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_check_length(unsigned long, unsigned long, char const*) const.
Iterations: 1
Merging blocks 2 and 8
Merging blocks 2 and 7
Merging blocks 2 and 6
Merging blocks 2 and 5

Symbols to be put in SSA form
{ D.41839 D.42459 D.42461 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


No longer having address taken: __s

Symbols to be put in SSA form
{ D.29925 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_check_length(unsigned long, unsigned long, char const*) const (const struct basic_string * const this, size_type __n1, size_type __n2, const char * __s)
{
  size_type D.42461;
  size_type D.42459;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  const char * __s.8_5;
  long unsigned int _9;
  bool retval.7_12;

  <bb 2> [100.00%]:
  _8 = 9223372036854775807;
  _1 = _8;
  _9 = this_7(D)->_M_string_length;
  _14 = _9;
  _2 = _14;
  _3 = __n1_10(D) - _2;
  _4 = _1 + _3;
  retval.7_12 = __n2_11(D) > _4;
  if (retval.7_12 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  __s.8_5 = __s_15(D);
  std::__throw_length_error (__s.8_5);

  <bb 4> [0.00%]:
  return;

}



;; Function std::__miter_base<unsigned char const*>(unsigned char const*)unsigned char const* (_ZSt12__miter_baseIPKhET_S2_, funcdef_no=2511, decl_uid=41077, cgraph_uid=1252, symbol_order=1255)

Iterations: 0
std::__miter_base<unsigned char const*>(unsigned char const*)unsigned char const* (const unsigned char * __it)
{
  const unsigned char * _2;

  <bb 2> [0.00%]:
  _2 = __it_1(D);
  return _2;

}



;; Function __gnu_cxx::new_allocator<unsigned char>::allocate(unsigned long, void const*) (_ZN9__gnu_cxx13new_allocatorIhE8allocateEmPKv, funcdef_no=2513, decl_uid=29654, cgraph_uid=1254, symbol_order=1257)

Considering inline candidate __gnu_cxx::new_allocator<unsigned char>::max_size() const.
 Inlining __gnu_cxx::new_allocator<unsigned char>::max_size() const into __gnu_cxx::new_allocator<unsigned char>::allocate(unsigned long, void const*).
Iterations: 1
Merging blocks 2 and 6
Merging blocks 2 and 5

Symbols to be put in SSA form
{ D.42465 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


__gnu_cxx::new_allocator<unsigned char>::allocate(unsigned long, void const*) (struct new_allocator * const this, size_type __n, const void * D.29657)
{
  size_type D.42465;
  long unsigned int _1;
  bool retval.18_6;
  unsigned char * _8;
  unsigned char * _9;

  <bb 2> [100.00%]:
  _4 = 18446744073709551615;
  _1 = _4;
  retval.18_6 = __n_5(D) > _1;
  if (retval.18_6 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  std::__throw_bad_alloc ();

  <bb 4> [0.00%]:
  _8 = operator new (__n_5(D));
  _9 = _8;
  return _9;

}



;; Function std::allocator_traits<std::allocator<unsigned char> >::allocate(std::allocator<unsigned char>&, unsigned long) (_ZNSt16allocator_traitsISaIhEE8allocateERS0_m, funcdef_no=2503, decl_uid=29408, cgraph_uid=1244, symbol_order=1247)

Considering inline candidate __gnu_cxx::new_allocator<unsigned char>::allocate(unsigned long, void const*).
 Inlining __gnu_cxx::new_allocator<unsigned char>::allocate(unsigned long, void const*) into std::allocator_traits<std::allocator<unsigned char> >::allocate(std::allocator<unsigned char>&, unsigned long).
Iterations: 1
Merging blocks 2 and 4
Merging blocks 2 and 3

Symbols to be put in SSA form
{ D.41842 D.42471 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 3
Number of blocks to update: 2 ( 67%)


std::allocator_traits<std::allocator<unsigned char> >::allocate(std::allocator<unsigned char>&, unsigned long) (struct allocator_type & __a, size_type __n)
{
  unsigned char * D.42471;
  unsigned char * _5;
  unsigned char * _6;
  unsigned char * _7;

  <bb 2> [100.00%]:
  _7 = operator new (__n_3(D));
  _9 = _7;
  _5 = _9;
  _6 = _5;
  return _6;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_create(unsigned long&, unsigned long) (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE9_M_createERmm, funcdef_no=2476, decl_uid=29832, cgraph_uid=1217, symbol_order=1220)

Considering inline candidate std::allocator_traits<std::allocator<unsigned char> >::allocate(std::allocator<unsigned char>&, unsigned long).
 Inlining std::allocator_traits<std::allocator<unsigned char> >::allocate(std::allocator<unsigned char>&, unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_create(unsigned long&, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_get_allocator().
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_get_allocator() into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_create(unsigned long&, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::max_size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::max_size() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_create(unsigned long&, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::max_size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::max_size() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_create(unsigned long&, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::max_size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::max_size() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_create(unsigned long&, unsigned long).
Iterations: 1
Merging blocks 2 and 10
Merging blocks 6 and 12
Removing basic block 7
Merging blocks 8 and 18
Merging blocks 14 and 13
Merging blocks 2 and 9
Merging blocks 6 and 11
Merging blocks 8 and 17
Merging blocks 8 and 16
Merging blocks 8 and 15

Symbols to be put in SSA form
{ D.41843 D.42475 D.42477 D.42479 D.42482 D.42484 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 9
Number of blocks to update: 8 ( 89%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_create(unsigned long&, unsigned long) (struct basic_string * const this, size_type & __capacity, size_type __old_capacity)
{
  struct allocator_type & D.42484;
  unsigned char * D.42482;
  size_type D.42479;
  size_type D.42477;
  size_type D.42475;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  struct allocator_type & _12;
  bool retval.16_18;
  bool retval.17_22;
  struct allocator_type & _23;
  unsigned char * _25;
  unsigned char * _27;
  unsigned char * _28;

  <bb 2> [100.00%]:
  _1 = *__capacity_15(D);
  _21 = 9223372036854775807;
  _2 = _21;
  retval.16_18 = _1 > _2;
  if (retval.16_18 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  std::__throw_length_error ("basic_string::_M_create");

  <bb 4> [0.00%]:
  _3 = *__capacity_15(D);
  if (__old_capacity_19(D) < _3)
    goto <bb 5>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 5> [0.00%]:
  _4 = *__capacity_15(D);
  _5 = __old_capacity_19(D) * 2;
  if (_4 < _5)
    goto <bb 6>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 6> [100.00%]:
  _6 = __old_capacity_19(D) * 2;
  *__capacity_15(D) = _6;
  _7 = *__capacity_15(D);
  _17 = 9223372036854775807;
  _8 = _17;
  retval.17_22 = _7 > _8;
  if (retval.17_22 != 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 7> [100.00%]:
  _30 = 9223372036854775807;
  _9 = _30;
  *__capacity_15(D) = _9;

  <bb 8> [100.00%]:
  _10 = *__capacity_15(D);
  _11 = _10 + 1;
  _23 = &this_16(D)->_M_dataplus;
  _31 = _23;
  _12 = _31;
  _25 = operator new (_11);
  _33 = _25;
  _27 = _33;
  _28 = _27;
  return _28;

}



;; Function std::__niter_base<unsigned char const*>(unsigned char const*)unsigned char const* (_ZSt12__niter_baseIPKhET_S2_, funcdef_no=2516, decl_uid=41093, cgraph_uid=1257, symbol_order=1260)

Iterations: 0
std::__niter_base<unsigned char const*>(unsigned char const*)unsigned char const* (const unsigned char * __it)
{
  const unsigned char * _2;

  <bb 2> [0.00%]:
  _2 = __it_1(D);
  return _2;

}



;; Function std::__copy_move_a<false, unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char* (_ZSt13__copy_move_aILb0EPKhPhET1_T0_S4_S3_, funcdef_no=2517, decl_uid=41095, cgraph_uid=1258, symbol_order=1261)

Considering inline candidate std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned char>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char*.
 Inlining std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned char>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char* into std::__copy_move_a<false, unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char*.
Iterations: 1
Merging blocks 2 and 4
Merging blocks 6 and 3

Symbols to be put in SSA form
{ D.41845 D.42493 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


std::__copy_move_a<false, unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char* (const unsigned char * __first, const unsigned char * __last, unsigned char * __result)
{
  const ptrdiff_t _Num;
  unsigned char * D.42493;
  const bool __simple;
  unsigned char * _7;
  long int __last.11_8;
  long int __first.12_9;
  long unsigned int _Num.13_11;
  sizetype _Num.14_12;
  unsigned char * _13;

  <bb 2> [100.00%]:
  __simple_1 = 1;
  __last.11_8 = (long int) __last_4(D);
  __first.12_9 = (long int) __first_3(D);
  _Num_10 = __last.11_8 - __first.12_9;
  if (_Num_10 != 0)
    goto <bb 3>; [36.64%]
  else
    goto <bb 4>; [63.36%]

  <bb 3> [36.64%]:
  _Num.13_11 = (long unsigned int) _Num_10;
  memmove (__result_5(D), __first_3(D), _Num.13_11);

  <bb 4> [100.00%]:
  _Num.14_12 = (sizetype) _Num_10;
  _13 = __result_5(D) + _Num.14_12;
  _16 = _13;
  _7 = _16;
  return _7;

}



;; Function std::__copy_move_a2<false, unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char* (_ZSt14__copy_move_a2ILb0EPKhPhET1_T0_S4_S3_, funcdef_no=2512, decl_uid=41079, cgraph_uid=1253, symbol_order=1256)

Considering inline candidate std::__copy_move_a<false, unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char*.
 Inlining std::__copy_move_a<false, unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char* into std::__copy_move_a2<false, unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char*.
Considering inline candidate std::__niter_base<unsigned char const*>(unsigned char const*)unsigned char const*.
 Inlining std::__niter_base<unsigned char const*>(unsigned char const*)unsigned char const* into std::__copy_move_a2<false, unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char*.
Considering inline candidate std::__niter_base<unsigned char const*>(unsigned char const*)unsigned char const*.
 Inlining std::__niter_base<unsigned char const*>(unsigned char const*)unsigned char const* into std::__copy_move_a2<false, unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char*.
Considering inline candidate std::__niter_base<unsigned char*>(unsigned char*)unsigned char*.
 Inlining std::__niter_base<unsigned char*>(unsigned char*)unsigned char* into std::__copy_move_a2<false, unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char*.
Iterations: 1
Merging blocks 2 and 12
Merging blocks 6 and 3
Merging blocks 2 and 11
Merging blocks 2 and 10
Merging blocks 2 and 9
Merging blocks 2 and 8
Merging blocks 2 and 7
Merging blocks 2 and 4

Symbols to be put in SSA form
{ D.41846 D.42503 D.42505 D.42507 D.42509 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


std::__copy_move_a2<false, unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char* (const unsigned char * __first, const unsigned char * __last, unsigned char * __result)
{
  unsigned char * D.42509;
  const unsigned char * D.42507;
  const unsigned char * D.42505;
  const ptrdiff_t _Num;
  unsigned char * D.42503;
  unsigned char * _1;
  const unsigned char * _2;
  const unsigned char * _3;
  long int __first.12_8;
  long int __last.11_10;
  unsigned char * _12;
  long unsigned int _Num.13_13;
  sizetype _Num.14_14;
  unsigned char * _15;

  <bb 2> [100.00%]:
  _17 = __result_5(D);
  _1 = _17;
  _18 = __last_7(D);
  _2 = _18;
  _19 = __first_9(D);
  _3 = _19;
  __last.11_10 = (long int) _2;
  __first.12_8 = (long int) _3;
  _Num_6 = __last.11_10 - __first.12_8;
  if (_Num_6 != 0)
    goto <bb 3>; [36.64%]
  else
    goto <bb 4>; [63.36%]

  <bb 3> [36.64%]:
  _Num.13_13 = (long unsigned int) _Num_6;
  memmove (_1, _3, _Num.13_13);

  <bb 4> [100.00%]:
  _Num.14_14 = (sizetype) _Num_6;
  _15 = _1 + _Num.14_14;
  _21 = _15;
  _12 = _21;
  return _12;

}



;; Function std::copy<unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char* (_ZSt4copyIPKhPhET0_T_S4_S3_, funcdef_no=2502, decl_uid=41009, cgraph_uid=1243, symbol_order=1246)

Considering inline candidate std::__copy_move_a2<false, unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char*.
 Inlining std::__copy_move_a2<false, unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char* into std::copy<unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char*.
Considering inline candidate std::__miter_base<unsigned char const*>(unsigned char const*)unsigned char const*.
 Inlining std::__miter_base<unsigned char const*>(unsigned char const*)unsigned char const* into std::copy<unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char*.
Considering inline candidate std::__miter_base<unsigned char const*>(unsigned char const*)unsigned char const*.
 Inlining std::__miter_base<unsigned char const*>(unsigned char const*)unsigned char const* into std::copy<unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char*.
Iterations: 1
Merging blocks 2 and 10
Merging blocks 6 and 3
Merging blocks 2 and 9
Merging blocks 2 and 8
Merging blocks 2 and 7
Merging blocks 2 and 4

Symbols to be put in SSA form
{ D.41847 D.42516 D.42518 D.42520 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


std::copy<unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char* (const unsigned char * __first, const unsigned char * __last, unsigned char * __result)
{
  const unsigned char * D.42520;
  const unsigned char * D.42518;
  const ptrdiff_t _Num;
  unsigned char * D.42516;
  const unsigned char * _1;
  const unsigned char * _2;
  long int __first.12_5;
  long int __last.11_7;
  unsigned char * _10;
  unsigned char * _11;
  long unsigned int _Num.13_13;
  sizetype _Num.14_14;
  unsigned char * _15;

  <bb 2> [100.00%]:
  _17 = __last_4(D);
  _1 = _17;
  _18 = __first_6(D);
  _2 = _18;
  __last.11_7 = (long int) _1;
  __first.12_5 = (long int) _2;
  _Num_12 = __last.11_7 - __first.12_5;
  if (_Num_12 != 0)
    goto <bb 3>; [36.64%]
  else
    goto <bb 4>; [63.36%]

  <bb 3> [36.64%]:
  _Num.13_13 = (long unsigned int) _Num_12;
  memmove (__result_8(D), _2, _Num.13_13);

  <bb 4> [100.00%]:
  _Num.14_14 = (sizetype) _Num_12;
  _15 = __result_8(D) + _Num.14_14;
  _20 = _15;
  _10 = _20;
  _11 = _10;
  return _11;

}



;; Function __gnu_cxx::char_traits<unsigned char>::copy(unsigned char*, unsigned char const*, unsigned long) (_ZN9__gnu_cxx11char_traitsIhE4copyEPhPKhm, funcdef_no=2474, decl_uid=29568, cgraph_uid=1215, symbol_order=1218)

Considering inline candidate std::copy<unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char*.
 Inlining std::copy<unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)unsigned char* into __gnu_cxx::char_traits<unsigned char>::copy(unsigned char*, unsigned char const*, unsigned long).
Iterations: 1
Merging blocks 2 and 4
Merging blocks 6 and 3

Symbols to be put in SSA form
{ D.41848 D.42527 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 5
Number of blocks to update: 4 ( 80%)


__gnu_cxx::char_traits<unsigned char>::copy(unsigned char*, unsigned char const*, unsigned long) (char_type * __s1, const char_type * __s2, size_t __n)
{
  const ptrdiff_t _Num;
  unsigned char * D.42527;
  const char_type * _1;
  char_type * _7;
  long int __last.11_8;
  long int __first.12_9;
  long unsigned int _Num.13_11;
  sizetype _Num.14_12;
  unsigned char * _13;

  <bb 2> [100.00%]:
  _1 = __s2_2(D) + __n_3(D);
  __last.11_8 = (long int) _1;
  __first.12_9 = (long int) __s2_2(D);
  _Num_10 = __last.11_8 - __first.12_9;
  if (_Num_10 != 0)
    goto <bb 3>; [36.64%]
  else
    goto <bb 4>; [63.36%]

  <bb 3> [36.64%]:
  _Num.13_11 = (long unsigned int) _Num_10;
  memmove (__s1_5(D), __s2_2(D), _Num.13_11);

  <bb 4> [100.00%]:
  _Num.14_12 = (sizetype) _Num_10;
  _13 = __s1_5(D) + _Num.14_12;
  _16 = _13;
  _7 = __s1_5(D);
  return _7;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_copy(unsigned char*, unsigned char const*, unsigned long) (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE7_S_copyEPhPKhm, funcdef_no=2424, decl_uid=29933, cgraph_uid=1165, symbol_order=1168)

Considering inline candidate __gnu_cxx::char_traits<unsigned char>::assign(unsigned char&, unsigned char const&).
 Inlining __gnu_cxx::char_traits<unsigned char>::assign(unsigned char&, unsigned char const&) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_copy(unsigned char*, unsigned char const*, unsigned long).
Iterations: 1
Removing basic block 3
Removing basic block 6

Symbols to be put in SSA form
{ D.41849 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 6
Number of blocks to update: 5 ( 83%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_copy(unsigned char*, unsigned char const*, unsigned long) (unsigned char * __d, const unsigned char * __s, size_type __n)
{
  unsigned char _8;

  <bb 2> [0.00%]:
  if (__n_2(D) == 1)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [100.00%]:
  _8 = MEM[(const char_type &)__s_5(D)];
  MEM[(char_type &)__d_4(D)] = _8;
  goto <bb 5>; [100.00%]

  <bb 4> [0.00%]:
  __gnu_cxx::char_traits<unsigned char>::copy (__d_4(D), __s_5(D), __n_2(D));

  <bb 5> [0.00%]:
  return;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_mutate(unsigned long, unsigned long, unsigned char const*, unsigned long) (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE9_M_mutateEmmPKhm, funcdef_no=2425, decl_uid=29979, cgraph_uid=1166, symbol_order=1169)

Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_capacity(unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_capacity(unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_mutate(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data(unsigned char*).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data(unsigned char*) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_mutate(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_dispose().
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_dispose() into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_mutate(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_copy(unsigned char*, unsigned char const*, unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_copy(unsigned char*, unsigned char const*, unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_mutate(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_mutate(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_copy(unsigned char*, unsigned char const*, unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_copy(unsigned char*, unsigned char const*, unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_mutate(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_copy(unsigned char*, unsigned char const*, unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_copy(unsigned char*, unsigned char const*, unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_mutate(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_mutate(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::capacity() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::capacity() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_mutate(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::length() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::length() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_mutate(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::length() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::length() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_mutate(unsigned long, unsigned long, unsigned char const*, unsigned long).
Iterations: 1
Merging blocks 2 and 18
Removing basic block 4
Merging blocks 6 and 27
Removing basic block 8
Merging blocks 9 and 43
Merging blocks 14 and 11
Removing basic block 19
Removing basic block 23
Merging blocks 25 and 24
Removing basic block 26
Removing basic block 30
Removing basic block 31
Removing basic block 35
Merging blocks 37 and 36
Removing basic block 42
Removing basic block 45
Merging blocks 2 and 17
Merging blocks 2 and 16
Merging blocks 2 and 15
Merging blocks 2 and 12
Merging blocks 25 and 20
Merging blocks 37 and 32
Merging blocks 41 and 40
Merging blocks 41 and 39
Merging blocks 41 and 38

Symbols to be put in SSA form
{ D.41850 D.42533 D.42535 D.42537 D.42542 D.42550 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 21
Number of blocks to update: 20 ( 95%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_mutate(unsigned long, unsigned long, unsigned char const*, unsigned long) (struct basic_string * const this, size_type __pos, size_type __len1, const unsigned char * __s, size_type __len2)
{
  unsigned char * D.42550;
  unsigned char * D.42542;
  size_type D.42537;
  size_type D.42535;
  size_type D.42533;
  unsigned char * __r;
  size_type __new_capacity;
  const size_type __how_much;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  unsigned char * _7;
  bool _8;
  bool _9;
  bool _10;
  unsigned char * _11;
  unsigned char * _12;
  sizetype _13;
  unsigned char * _14;
  sizetype _15;
  unsigned char * _16;
  long unsigned int __new_capacity.15_17;
  long unsigned int _23;
  long unsigned int iftmp.9_27;
  long unsigned int iftmp.9_30;
  unsigned char * _32;
  const unsigned char[16] * _34;
  unsigned char * _38;
  long unsigned int _45;
  unsigned char _46;
  unsigned char * _47;
  unsigned char _48;
  unsigned char _49;
  unsigned char * _50;
  unsigned char * _51;
  const unsigned char[16] * _52;

  <bb 2> [100.00%]:
  _45 = MEM[(const struct basic_string *)this_22(D)]._M_string_length;
  _54 = _45;
  _1 = _54;
  _2 = _1 - __pos_24(D);
  __how_much_26 = _2 - __len1_25(D);
  _23 = MEM[(const struct basic_string *)this_22(D)]._M_string_length;
  _55 = _23;
  _3 = _55;
  _4 = __len2_28(D) + _3;
  _5 = _4 - __len1_25(D);
  __new_capacity = _5;
  _38 = MEM[(const struct basic_string *)this_22(D)]._M_dataplus._M_p;
  _34 = &MEM[(const struct basic_string *)this_22(D)].D.29808._M_local_buf;
  if (_34 == _38)
    goto <bb 4>; [16.15%]
  else
    goto <bb 3>; [83.85%]

  <bb 3> [83.85%]:
  iftmp.9_30 = MEM[(const struct basic_string *)this_22(D)].D.29808._M_allocated_capacity;

  <bb 4> [100.00%]:
  # iftmp.9_27 = PHI <15(2), iftmp.9_30(3)>
  _56 = iftmp.9_27;
  _6 = _56;
  _32 = std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_create (this_22(D), &__new_capacity, _6);

  <bb 5> [0.00%]:
  __r_33 = _32;
  if (__pos_24(D) != 0)
    goto <bb 6>; [0.00%]
  else
    goto <bb 9>; [0.00%]

  <bb 6> [100.00%]:
  _47 = MEM[(const struct basic_string *)this_22(D)]._M_dataplus._M_p;
  _57 = _47;
  _7 = _57;
  if (__pos_24(D) == 1)
    goto <bb 7>; [47.12%]
  else
    goto <bb 8>; [52.88%]

  <bb 7> [47.12%]:
  _46 = MEM[(const char_type &)_7];
  MEM[(char_type &)__r_33] = _46;
  goto <bb 9>; [100.00%]

  <bb 8> [52.88%]:
  __gnu_cxx::char_traits<unsigned char>::copy (__r_33, _7, __pos_24(D));

  <bb 9> [0.00%]:
  _8 = __s_36(D) != 0B;
  _9 = __len2_28(D) != 0;
  _10 = _8 & _9;
  if (_10 != 0)
    goto <bb 10>; [0.00%]
  else
    goto <bb 13>; [0.00%]

  <bb 10> [100.00%]:
  _11 = __r_33 + __pos_24(D);
  if (__len2_28(D) == 1)
    goto <bb 11>; [47.12%]
  else
    goto <bb 12>; [52.88%]

  <bb 11> [47.12%]:
  _48 = MEM[(const char_type &)__s_36(D)];
  MEM[(char_type &)_11] = _48;
  goto <bb 13>; [100.00%]

  <bb 12> [52.88%]:
  __gnu_cxx::char_traits<unsigned char>::copy (_11, __s_36(D), __len2_28(D));

  <bb 13> [0.00%]:
  if (__how_much_26 != 0)
    goto <bb 14>; [0.00%]
  else
    goto <bb 17>; [0.00%]

  <bb 14> [100.00%]:
  _50 = MEM[(const struct basic_string *)this_22(D)]._M_dataplus._M_p;
  _62 = _50;
  _12 = _62;
  _13 = __pos_24(D) + __len1_25(D);
  _14 = _12 + _13;
  _15 = __pos_24(D) + __len2_28(D);
  _16 = __r_33 + _15;
  if (__how_much_26 == 1)
    goto <bb 15>; [47.12%]
  else
    goto <bb 16>; [52.88%]

  <bb 15> [47.12%]:
  _49 = MEM[(const char_type &)_14];
  MEM[(char_type &)_16] = _49;
  goto <bb 17>; [100.00%]

  <bb 16> [52.88%]:
  __gnu_cxx::char_traits<unsigned char>::copy (_16, _14, __how_much_26);

  <bb 17> [100.00%]:
  _51 = MEM[(const struct basic_string *)this_22(D)]._M_dataplus._M_p;
  _52 = &MEM[(const struct basic_string *)this_22(D)].D.29808._M_local_buf;
  if (_51 != _52)
    goto <bb 18>; [57.44%]
  else
    goto <bb 19>; [42.56%]

  <bb 18> [57.44%]:
  operator delete (_51);

  <bb 19> [100.00%]:
  this_22(D)->_M_dataplus._M_p = __r_33;
  __new_capacity.15_17 = __new_capacity;
  this_22(D)->D.29808._M_allocated_capacity = __new_capacity.15_17;
  __new_capacity ={v} {CLOBBER};
  return;

<L9> [0.00%]:
  __new_capacity ={v} {CLOBBER};
  resx 1

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_replace(unsigned long, unsigned long, unsigned char const*, unsigned long) (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE10_M_replaceEmmPKhm, funcdef_no=2369, decl_uid=30451, cgraph_uid=1110, symbol_order=1113)

Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_set_length(unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_set_length(unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_replace(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_copy(unsigned char*, unsigned char const*, unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_copy(unsigned char*, unsigned char const*, unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_replace(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_move(unsigned char*, unsigned char const*, unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_move(unsigned char*, unsigned char const*, unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_replace(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_copy(unsigned char*, unsigned char const*, unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_copy(unsigned char*, unsigned char const*, unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_replace(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_move(unsigned char*, unsigned char const*, unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_move(unsigned char*, unsigned char const*, unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_replace(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_move(unsigned char*, unsigned char const*, unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_move(unsigned char*, unsigned char const*, unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_replace(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_move(unsigned char*, unsigned char const*, unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_move(unsigned char*, unsigned char const*, unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_replace(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_copy(unsigned char*, unsigned char const*, unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_copy(unsigned char*, unsigned char const*, unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_replace(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_move(unsigned char*, unsigned char const*, unsigned long).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_S_move(unsigned char*, unsigned char const*, unsigned long) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_replace(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_disjunct(unsigned char const*) const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_disjunct(unsigned char const*) const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_replace(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_data() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_replace(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::capacity() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::capacity() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_replace(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_replace(unsigned long, unsigned long, unsigned char const*, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_check_length(unsigned long, unsigned long, char const*) const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_check_length(unsigned long, unsigned long, char const*) const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_replace(unsigned long, unsigned long, unsigned char const*, unsigned long).
Iterations: 1
Merging blocks 2 and 27
Removing basic block 3
Merging blocks 5 and 38
Removing basic block 7
Removing basic block 9
Merging blocks 11 and 53
Removing basic block 14
Merging blocks 16 and 63
Merging blocks 17 and 73
Merging blocks 19 and 78
Merging blocks 23 and 20
Removing basic block 26
Removing basic block 29
Merging blocks 34 and 30
Merging blocks 36 and 35
Removing basic block 37
Removing basic block 41
Removing basic block 42
Removing basic block 46
Removing basic block 47
Removing basic block 51
Removing basic block 52
Removing basic block 56
Removing basic block 57
Removing basic block 61
Removing basic block 62
Removing basic block 66
Removing basic block 67
Removing basic block 71
Removing basic block 76
Merging blocks 19 and 77
Merging blocks 25 and 24
Merging blocks 25 and 21
Merging blocks 36 and 31
Merging blocks 72 and 68

Symbols to be put in SSA form
{ D.41851 D.42558 D.42560 D.42567 D.42569 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 44
Number of blocks to update: 43 ( 98%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_replace(unsigned long, unsigned long, unsigned char const*, unsigned long) (struct basic_string * const this, size_type __pos, size_type __len1, const unsigned char * __s, const size_type __len2)
{
  unsigned char * D.42569;
  bool D.42567;
  size_type D.42560;
  size_type D.42558;
  const size_type __nleft;
  const size_type __how_much;
  unsigned char * __p;
  const size_type __new_size;
  const size_type __old_size;
  long unsigned int _1;
  long unsigned int _2;
  unsigned char * _3;
  long unsigned int _4;
  bool _5;
  bool _6;
  bool _7;
  unsigned char * _8;
  unsigned char * _9;
  bool _10;
  bool _11;
  bool _12;
  bool _13;
  bool _14;
  bool _15;
  unsigned char * _16;
  unsigned char * _17;
  const unsigned char * _18;
  unsigned char * _19;
  unsigned char * _20;
  sizetype _21;
  const unsigned char * _22;
  unsigned char * _23;
  long int _24;
  long int __s.6_25;
  long int _26;
  long unsigned int _27;
  unsigned char * _28;
  unsigned char * _29;
  long unsigned int iftmp.9_39;
  long unsigned int iftmp.9_42;
  bool retval.4_43;
  const unsigned char[16] * _47;
  unsigned char * _50;
  bool retval.5_51;
  struct basic_string & _62;
  long unsigned int _63;
  long unsigned int _64;
  long unsigned int _65;
  long unsigned int _66;
  unsigned char * _67;
  long unsigned int _68;
  unsigned char * _69;
  bool iftmp.10_70;
  unsigned char * _71;
  unsigned char _72;
  unsigned char _73;
  unsigned char _74;
  unsigned char _75;
  unsigned char _76;
  unsigned char _77;
  unsigned char _78;
  unsigned char _79;
  unsigned char * _80;
  unsigned char * _81;

  <bb 2> [100.00%]:
  _64 = MEM[(const struct basic_string *)this_35(D)]._M_string_length;
  _65 = __len1_36(D) - _64;
  _66 = _65 + 9223372036854775807;
  if (__len2_37(D) > _66)
    goto <bb 3>; [0.04%]
  else
    goto <bb 4>; [99.96%]

  <bb 3> [0.04%]:
  std::__throw_length_error ("basic_string::_M_replace");

  <bb 4> [100.00%]:
  _63 = MEM[(const struct basic_string *)this_35(D)]._M_string_length;
  _83 = _63;
  __old_size_40 = _83;
  _1 = __old_size_40 + __len2_37(D);
  __new_size_41 = _1 - __len1_36(D);
  _50 = MEM[(const struct basic_string *)this_35(D)]._M_dataplus._M_p;
  _47 = &MEM[(const struct basic_string *)this_35(D)].D.29808._M_local_buf;
  if (_47 == _50)
    goto <bb 6>; [16.15%]
  else
    goto <bb 5>; [83.85%]

  <bb 5> [83.85%]:
  iftmp.9_42 = MEM[(const struct basic_string *)this_35(D)].D.29808._M_allocated_capacity;

  <bb 6> [100.00%]:
  # iftmp.9_39 = PHI <15(4), iftmp.9_42(5)>
  _84 = iftmp.9_39;
  _2 = _84;
  retval.4_43 = __new_size_41 <= _2;
  if (retval.4_43 != 0)
    goto <bb 7>; [0.00%]
  else
    goto <bb 42>; [0.00%]

  <bb 7> [100.00%]:
  _71 = MEM[(const struct basic_string *)this_35(D)]._M_dataplus._M_p;
  _85 = _71;
  _3 = _85;
  __p_48 = _3 + __pos_44(D);
  _4 = __old_size_40 - __pos_44(D);
  __how_much_49 = _4 - __len1_36(D);
  _67 = MEM[(const struct basic_string *)this_35(D)]._M_dataplus._M_p;
  if (__s_45(D) < _67)
    goto <bb 10>; [46.00%]
  else
    goto <bb 8>; [54.00%]

  <bb 8> [54.00%]:
  _68 = MEM[(const struct basic_string *)this_35(D)]._M_string_length;
  _69 = _67 + _68;
  if (__s_45(D) > _69)
    goto <bb 9>; [54.00%]
  else
    goto <bb 10>; [46.00%]

  <bb 9> [29.16%]:

  <bb 10> [100.00%]:
  # iftmp.10_70 = PHI <1(7), 0(8), 1(9)>
  _86 = iftmp.10_70;
  retval.5_51 = _86;
  if (retval.5_51 != 0)
    goto <bb 11>; [0.00%]
  else
    goto <bb 19>; [0.00%]

  <bb 11> [0.00%]:
  _5 = __how_much_49 != 0;
  _6 = __len1_36(D) != __len2_37(D);
  _7 = _5 & _6;
  if (_7 != 0)
    goto <bb 12>; [0.00%]
  else
    goto <bb 15>; [0.00%]

  <bb 12> [100.00%]:
  _8 = __p_48 + __len1_36(D);
  _9 = __p_48 + __len2_37(D);
  if (__how_much_49 == 1)
    goto <bb 13>; [47.12%]
  else
    goto <bb 14>; [52.88%]

  <bb 13> [47.12%]:
  _72 = MEM[(const char_type &)_8];
  MEM[(char_type &)_9] = _72;
  goto <bb 15>; [100.00%]

  <bb 14> [52.88%]:
  __gnu_cxx::char_traits<unsigned char>::move (_9, _8, __how_much_49);

  <bb 15> [0.00%]:
  if (__len2_37(D) != 0)
    goto <bb 16>; [0.00%]
  else
    goto <bb 43>; [0.00%]

  <bb 16> [100.00%]:
  if (__len2_37(D) == 1)
    goto <bb 17>; [47.12%]
  else
    goto <bb 18>; [52.88%]

  <bb 17> [47.12%]:
  _73 = MEM[(const char_type &)__s_45(D)];
  MEM[(char_type &)__p_48] = _73;
  goto <bb 43>; [100.00%]

  <bb 18> [52.88%]:
  __gnu_cxx::char_traits<unsigned char>::copy (__p_48, __s_45(D), __len2_37(D));
  goto <bb 43>; [100.00%]

  <bb 19> [0.00%]:
  _10 = __len2_37(D) != 0;
  _11 = __len2_37(D) <= __len1_36(D);
  _12 = _10 & _11;
  if (_12 != 0)
    goto <bb 20>; [0.00%]
  else
    goto <bb 23>; [0.00%]

  <bb 20> [100.00%]:
  if (__len2_37(D) == 1)
    goto <bb 21>; [47.12%]
  else
    goto <bb 22>; [52.88%]

  <bb 21> [47.12%]:
  _74 = MEM[(const char_type &)__s_45(D)];
  MEM[(char_type &)__p_48] = _74;
  goto <bb 23>; [100.00%]

  <bb 22> [52.88%]:
  __gnu_cxx::char_traits<unsigned char>::move (__p_48, __s_45(D), __len2_37(D));

  <bb 23> [0.00%]:
  _13 = __how_much_49 != 0;
  _14 = __len1_36(D) != __len2_37(D);
  _15 = _13 & _14;
  if (_15 != 0)
    goto <bb 24>; [0.00%]
  else
    goto <bb 27>; [0.00%]

  <bb 24> [100.00%]:
  _16 = __p_48 + __len1_36(D);
  _17 = __p_48 + __len2_37(D);
  if (__how_much_49 == 1)
    goto <bb 25>; [47.12%]
  else
    goto <bb 26>; [52.88%]

  <bb 25> [47.12%]:
  _75 = MEM[(const char_type &)_16];
  MEM[(char_type &)_17] = _75;
  goto <bb 27>; [100.00%]

  <bb 26> [52.88%]:
  __gnu_cxx::char_traits<unsigned char>::move (_17, _16, __how_much_49);

  <bb 27> [0.00%]:
  if (__len2_37(D) > __len1_36(D))
    goto <bb 28>; [0.00%]
  else
    goto <bb 43>; [0.00%]

  <bb 28> [0.00%]:
  _18 = __s_45(D) + __len2_37(D);
  _19 = __p_48 + __len1_36(D);
  if (_18 <= _19)
    goto <bb 29>; [0.00%]
  else
    goto <bb 32>; [0.00%]

  <bb 29> [100.00%]:
  if (__len2_37(D) == 1)
    goto <bb 30>; [47.12%]
  else
    goto <bb 31>; [52.88%]

  <bb 30> [47.12%]:
  _76 = MEM[(const char_type &)__s_45(D)];
  MEM[(char_type &)__p_48] = _76;
  goto <bb 43>; [100.00%]

  <bb 31> [52.88%]:
  __gnu_cxx::char_traits<unsigned char>::move (__p_48, __s_45(D), __len2_37(D));
  goto <bb 43>; [100.00%]

  <bb 32> [0.00%]:
  _20 = __p_48 + __len1_36(D);
  if (__s_45(D) >= _20)
    goto <bb 33>; [0.00%]
  else
    goto <bb 36>; [0.00%]

  <bb 33> [100.00%]:
  _21 = __len2_37(D) - __len1_36(D);
  _22 = __s_45(D) + _21;
  if (__len2_37(D) == 1)
    goto <bb 34>; [47.12%]
  else
    goto <bb 35>; [52.88%]

  <bb 34> [47.12%]:
  _77 = MEM[(const char_type &)_22];
  MEM[(char_type &)__p_48] = _77;
  goto <bb 43>; [100.00%]

  <bb 35> [52.88%]:
  __gnu_cxx::char_traits<unsigned char>::copy (__p_48, _22, __len2_37(D));
  goto <bb 43>; [100.00%]

  <bb 36> [100.00%]:
  _23 = __p_48 + __len1_36(D);
  _24 = (long int) _23;
  __s.6_25 = (long int) __s_45(D);
  _26 = _24 - __s.6_25;
  __nleft_54 = (const size_type) _26;
  if (__nleft_54 == 1)
    goto <bb 37>; [47.12%]
  else
    goto <bb 38>; [52.88%]

  <bb 37> [47.12%]:
  _79 = MEM[(const char_type &)__s_45(D)];
  MEM[(char_type &)__p_48] = _79;
  goto <bb 39>; [100.00%]

  <bb 38> [52.88%]:
  __gnu_cxx::char_traits<unsigned char>::move (__p_48, __s_45(D), __nleft_54);

  <bb 39> [100.00%]:
  _27 = __len2_37(D) - __nleft_54;
  _28 = __p_48 + __len2_37(D);
  _29 = __p_48 + __nleft_54;
  if (_27 == 1)
    goto <bb 40>; [47.12%]
  else
    goto <bb 41>; [52.88%]

  <bb 40> [47.12%]:
  _78 = MEM[(const char_type &)_28];
  MEM[(char_type &)_29] = _78;
  goto <bb 43>; [100.00%]

  <bb 41> [52.88%]:
  __gnu_cxx::char_traits<unsigned char>::copy (_29, _28, _27);
  goto <bb 43>; [100.00%]

  <bb 42> [0.00%]:
  std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_mutate (this_35(D), __pos_44(D), __len1_36(D), __s_45(D), __len2_37(D));

  <bb 43> [100.00%]:
  this_35(D)->_M_string_length = __new_size_41;
  _80 = MEM[(const struct basic_string *)this_35(D)]._M_dataplus._M_p;
  _81 = _80 + __new_size_41;
  MEM[(char_type &)_81] = 0;
  _62 = this_35(D);
  return _62;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::assign(unsigned char const*) (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEE6assignEPKh, funcdef_no=2307, decl_uid=30224, cgraph_uid=1050, symbol_order=1053)

Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::assign(unsigned char const*).
Considering inline candidate __gnu_cxx::char_traits<unsigned char>::length(unsigned char const*).
 Inlining __gnu_cxx::char_traits<unsigned char>::length(unsigned char const*) into std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::assign(unsigned char const*).
Iterations: 1
Merging blocks 2 and 6
Merging blocks 9 and 5
Merging blocks 9 and 4
Merging blocks 9 and 3

Symbols to be put in SSA form
{ D.41852 D.42598 D.42601 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 6
Number of blocks to update: 5 ( 83%)


std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::assign(unsigned char const*) (struct basic_string * const this, const unsigned char * __s)
{
  size_t __i;
  size_t D.42601;
  size_type D.42598;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _6;
  long unsigned int _8;
  struct basic_string & _10;
  struct basic_string & _11;
  const char_type * _12;
  unsigned char _13;

  <bb 2> [15.00%]:

  <bb 3> [100.00%]:
  # __i_5 = PHI <0(2), __i_14(4)>
  _12 = __s_4(D) + __i_5;
  _13 = *_12;
  if (_13 != 0)
    goto <bb 4>; [85.00%]
  else
    goto <bb 5>; [15.00%]

  <bb 4> [85.00%]:
  __i_14 = __i_5 + 1;
  goto <bb 3>; [100.00%]

  <bb 5> [100.00%]:
  _15 = __i_5;
  _6 = _15;
  _1 = _6;
  _8 = MEM[(const struct basic_string *)this_7(D)]._M_string_length;
  _16 = _8;
  _2 = _16;
  _10 = std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::_M_replace (this_7(D), 0, _2, __s_4(D), _1);
  _11 = _10;
  return _11;

}



;; Function std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::operator=(unsigned char const*) (_ZNSt7__cxx1112basic_stringIhSt11char_traitsIhESaIhEEaSEPKh, funcdef_no=2183, decl_uid=30076, cgraph_uid=924, symbol_order=927)

Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::assign(unsigned char const*).
  will not early inline: std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::operator=(unsigned char const*)/927->std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::assign(unsigned char const*)/1053, growth 9 exceeds --param early-inlining-insns divided by number of calls
Iterations: 0
std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::operator=(unsigned char const*) (struct basic_string * const this, const unsigned char * __s)
{
  struct basic_string & _5;
  struct basic_string & _6;

  <bb 2> [0.00%]:
  _5 = std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::assign (this_2(D), __s_3(D));
  _6 = _5;
  return _6;

}



;; Function pbzip2::BZ2StreamScanner::init(int, unsigned long) (_ZN6pbzip216BZ2StreamScanner4initEim, funcdef_no=1925, decl_uid=29303, cgraph_uid=666, symbol_order=669)

Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const into pbzip2::BZ2StreamScanner::init(int, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const.
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::size() const into pbzip2::BZ2StreamScanner::init(int, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::operator=(unsigned char const*).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::operator=(unsigned char const*) into pbzip2::BZ2StreamScanner::init(int, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::operator=(unsigned char const*).
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::operator=(unsigned char const*) into pbzip2::BZ2StreamScanner::init(int, unsigned long).
Iterations: 1
Merging blocks 3 and 14
Merging blocks 6 and 22
Removing basic block 13
Merging blocks 15 and 4
Removing basic block 16
Merging blocks 18 and 5
Merging blocks 6 and 21
Merging blocks 15 and 17
Merging blocks 18 and 20
Merging blocks 18 and 19

Symbols to be put in SSA form
{ D.41854 D.42606 D.42609 D.42611 D.42613 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 13
Number of blocks to update: 12 ( 92%)


pbzip2::BZ2StreamScanner::init(int, unsigned long) (struct BZ2StreamScanner * const this, int hInFile, size_t inBuffCapacity)
{
  size_type D.42613;
  size_type D.42611;
  struct basic_string & D.42609;
  struct basic_string & D.42606;
  CharType bz2ZeroHeader[11];
  CharType bz2header[11];
  int (*__vtbl_ptr_type) () * _1;
  int (*__vtbl_ptr_type) () * _2;
  int (*__vtbl_ptr_type) () _3;
  struct basic_string * _4;
  struct basic_string * _5;
  struct basic_string * _6;
  long unsigned int _7;
  long unsigned int _8;
  struct basic_string * _9;
  long unsigned int _10;
  void * _11;
  CharType * _12;
  unsigned int _13;
  unsigned int _14;
  CharType * _15;
  CharType * _16;
  CharType * _17;
  int _19;
  struct basic_string & _51;
  bool retval.1_53;
  struct basic_string & _54;
  long unsigned int inBuffCapacity.2_56;
  int _63;
  int _67;
  long unsigned int _72;
  long unsigned int _73;

  <bb 2> [0.00%]:
  _1 = this_24(D)->_vptr.BZ2StreamScanner;
  _2 = _1 + 16;
  _3 = *_2;
  OBJ_TYPE_REF(_3;(struct BZ2StreamScanner)this_24(D)->2) (this_24(D));

  <bb 3> [100.00%]:
  bz2header = "BZh91AY&SY";
  bz2ZeroHeader[0] = 66;
  bz2ZeroHeader[1] = 90;
  bz2ZeroHeader[2] = 104;
  bz2ZeroHeader[3] = 57;
  bz2ZeroHeader[4] = 23;
  bz2ZeroHeader[5] = 114;
  bz2ZeroHeader[6] = 69;
  bz2ZeroHeader[7] = 56;
  bz2ZeroHeader[8] = 80;
  bz2ZeroHeader[9] = 144;
  bz2ZeroHeader[10] = 0;
  this_24(D)->_hInFile = hInFile_38(D);
  this_24(D)->_eof = 0;
  _4 = &this_24(D)->_bz2Header;
  _54 = std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::assign (_4, &bz2header);

  <bb 4> [100.00%]:
  _75 = _54;
  _5 = &this_24(D)->_bz2HeaderZero;
  _51 = std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::assign (_5, &bz2ZeroHeader);

  <bb 5> [100.00%]:
  _77 = _51;
  this_24(D)->_bz2HeaderFound = 0;
  this_24(D)->_inBuffCapacity = 0;
  this_24(D)->_errState = 0;
  this_24(D)->_searchStatus = 0;
  this_24(D)->_outBuffCapacityHint = 0;
  this_24(D)->_outBuffCapacityLimit = 1048576;
  this_24(D)->_outSequenceNumber = 0;
  this_24(D)->_streamNumber = 0;
  _6 = &this_24(D)->_bz2Header;
  _72 = MEM[(const struct basic_string *)_6]._M_string_length;
  _78 = _72;
  _7 = _78;
  _8 = _7 * 2;
  retval.1_53 = inBuffCapacity_52(D) < _8;
  if (retval.1_53 != 0)
    goto <bb 6>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 6> [100.00%]:
  _9 = &this_24(D)->_bz2Header;
  _73 = MEM[(const struct basic_string *)_9]._M_string_length;
  _79 = _73;
  _10 = _79;
  inBuffCapacity_55 = _10 * 2;

  <bb 7> [0.00%]:
  # inBuffCapacity_18 = PHI <inBuffCapacity_52(D)(5), inBuffCapacity_55(6)>
  inBuffCapacity.2_56 = inBuffCapacity_18;
  _11 = operator new[] (inBuffCapacity.2_56, &nothrow);
  this_24(D)->_inBuff = _11;
  _12 = this_24(D)->_inBuff;
  if (_12 == 0B)
    goto <bb 8>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 8> [0.00%]:
  _13 = this_24(D)->_errState;
  _14 = _13 | 1;
  this_24(D)->_errState = _14;
  this_24(D)->_inBuffEnd = 0B;
  handle_error (1, -1, "pbzip2: *ERROR: Could not allocate memory (FileData)!  Aborting...\n");

  <bb 9> [0.00%]:
  _67 = -1;
  goto <bb 11>; [0.00%]

  <bb 10> [0.00%]:
  this_24(D)->_inBuffCapacity = inBuffCapacity_18;
  _15 = this_24(D)->_inBuff;
  this_24(D)->_inBuffEnd = _15;
  _16 = this_24(D)->_inBuffEnd;
  this_24(D)->_inBuffSearchPtr = _16;
  _17 = this_24(D)->_inBuffSearchPtr;
  this_24(D)->_inBuffCurrent = _17;
  _63 = 0;

  <bb 11> [0.00%]:
  # _19 = PHI <_67(9), _63(10)>
  bz2header ={v} {CLOBBER};
  bz2ZeroHeader ={v} {CLOBBER};
  return _19;

<L7> [0.00%]:
  bz2header ={v} {CLOBBER};
  bz2ZeroHeader ={v} {CLOBBER};
  resx 1

}



;; Function pbzip2::BZ2StreamScanner::BZ2StreamScanner(int, unsigned long) (_ZN6pbzip216BZ2StreamScannerC2Eim, funcdef_no=1923, decl_uid=30766, cgraph_uid=664, symbol_order=667)

Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::~basic_string().
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::~basic_string() into pbzip2::BZ2StreamScanner::BZ2StreamScanner(int, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::~basic_string().
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::~basic_string() into pbzip2::BZ2StreamScanner::BZ2StreamScanner(int, unsigned long).
Considering inline candidate outBuff::outBuff(char*, unsigned int, int, int, unsigned int, bool, outBuff*).
 Inlining outBuff::outBuff(char*, unsigned int, int, int, unsigned int, bool, outBuff*) into pbzip2::BZ2StreamScanner::BZ2StreamScanner(int, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::basic_string().
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::basic_string() into pbzip2::BZ2StreamScanner::BZ2StreamScanner(int, unsigned long).
Considering inline candidate std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::basic_string().
 Inlining std::__cxx11::basic_string<unsigned char, std::char_traits<unsigned char>, std::allocator<unsigned char> >::basic_string() into pbzip2::BZ2StreamScanner::BZ2StreamScanner(int, unsigned long).
Iterations: 1
Merging blocks 2 and 11
Merging blocks 4 and 13
Merging blocks 5 and 17
Merging blocks 15 and 12
Merging blocks 19 and 16
Merging blocks 2 and 10
Merging blocks 2 and 9
Merging blocks 2 and 8
Merging blocks 2 and 7
Merging blocks 2 and 6

Symbols to be put in SSA form
{ D.41855 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


pbzip2::BZ2StreamScanner::BZ2StreamScanner(int, unsigned long) (struct BZ2StreamScanner * const this, int hInFile, size_t inBuffCapacity)
{
  int (*__vtbl_ptr_type) () * _1;
  struct basic_string * _2;
  struct basic_string * _3;
  struct outBuff * _4;
  struct basic_string * _5;
  struct basic_string * _6;
  unsigned char[16] * _23;
  unsigned char[16] * _24;
  unsigned char * _25;
  const unsigned char[16] * _26;
  unsigned char * _27;
  const unsigned char[16] * _28;

  <bb 2> [100.00%]:
  MEM[(struct  &)this_8(D)] ={v} {CLOBBER};
  _1 = &_ZTVN6pbzip216BZ2StreamScannerE + 16;
  this_8(D)->_vptr.BZ2StreamScanner = _1;
  _2 = &this_8(D)->_bz2Header;
  MEM[(struct  &)_2] ={v} {CLOBBER};
  _24 = &_2->D.29808._M_local_buf;
  MEM[(struct  &)_2] ={v} {CLOBBER};
  MEM[(struct _Alloc_hider *)_2]._M_p = _24;
  _2->_M_string_length = 0;
  MEM[(char_type &)_24] = 0;
  _3 = &this_8(D)->_bz2HeaderZero;
  MEM[(struct  &)_3] ={v} {CLOBBER};
  _23 = &_3->D.29808._M_local_buf;
  MEM[(struct  &)_3] ={v} {CLOBBER};
  MEM[(struct _Alloc_hider *)_3]._M_p = _23;
  _3->_M_string_length = 0;
  MEM[(char_type &)_23] = 0;
  this_8(D)->_inBuff = 0B;
  this_8(D)->_inBuffCapacity = 0;
  _4 = &this_8(D)->_outBuff;
  MEM[(struct  &)_4] ={v} {CLOBBER};
  MEM[(struct outBuff *)_4].buf = 0B;
  MEM[(struct outBuff *)_4].bufSize = 0;
  MEM[(struct outBuff *)_4].blockNumber = 0;
  MEM[(struct outBuff *)_4].sequenceNumber = 0;
  MEM[(struct outBuff *)_4].inSize = 0;
  MEM[(struct outBuff *)_4].isLastInSequence = 1;
  MEM[(struct outBuff *)_4].next = 0B;
  this_8(D)->_outBuff.buf = 0B;
  this_8(D)->_outBuff.bufSize = 0;
  pbzip2::BZ2StreamScanner::init (this_8(D), hInFile_18(D), inBuffCapacity_19(D));

  <bb 3> [0.00%]:
  return;

<L0> [100.00%]:
  _5 = &this_8(D)->_bz2HeaderZero;
  _25 = MEM[(const struct basic_string *)_5]._M_dataplus._M_p;
  _26 = &MEM[(const struct basic_string *)_5].D.29808._M_local_buf;
  if (_25 != _26)
    goto <bb 5>; [57.44%]
  else
    goto <bb 6>; [42.56%]

  <bb 5> [57.44%]:
  operator delete (_25);

  <bb 6> [100.00%]:
  MEM[(struct  &)_5] ={v} {CLOBBER};
  resx 2

<L1> [100.00%]:
  _6 = &this_8(D)->_bz2Header;
  _27 = MEM[(const struct basic_string *)_6]._M_dataplus._M_p;
  _28 = &MEM[(const struct basic_string *)_6].D.29808._M_local_buf;
  if (_27 != _28)
    goto <bb 8>; [57.44%]
  else
    goto <bb 9>; [42.56%]

  <bb 8> [57.44%]:
  operator delete (_27);

  <bb 9> [100.00%]:
  MEM[(struct  &)_6] ={v} {CLOBBER};
  resx 1

}


