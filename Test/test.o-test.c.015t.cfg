
;; Function foo (foo, funcdef_no=0, decl_uid=1943, cgraph_uid=1, symbol_order=0)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
int * foo ()
{
  int * ptr1;
  int * D.1981;

  <bb 2> :
  ptr1 = malloc (20);
  D.1981 = ptr1;
  return D.1981;

}



;; Function changePtr (changePtr, funcdef_no=1, decl_uid=1949, cgraph_uid=2, symbol_order=2)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void changePtr (int * * ptr)
{
  int a2;
  int a;
  int test;

  <bb 2> :
  if (test != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = malloc (40);
  _2 = (long int) _1;
  a = (int) _2;
  _3 = (long int) a;
  _4 = (int *) _3;
  *ptr = _4;
  goto <bb 5>; [INV]

  <bb 4> :
  _5 = malloc (40);
  _6 = (long int) _5;
  a2 = (int) _6;
  printf ("%d\n", a2);
  _7 = (long int) a2;
  _8 = (int *) _7;
  *ptr = _8;

  <bb 5> :
  return;

}



;; Function fun (fun, funcdef_no=2, decl_uid=1958, cgraph_uid=3, symbol_order=3)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void fun (int * fptr)
{
  <bb 2> :
  _1 = malloc (40);
  _2 = (long int) _1;
  _3 = (int) _2;
  *fptr = _3;
  *fptr = 0;
  return;

}



;; Function changePtr2 (changePtr2, funcdef_no=3, decl_uid=1962, cgraph_uid=4, symbol_order=4)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void changePtr2 (int * * * ptr)
{
  int a2;
  int a;
  int test;

  <bb 2> :
  if (test != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = malloc (40);
  _2 = (long int) _1;
  a = (int) _2;
  _3 = (long int) a;
  _4 = (int * *) _3;
  *ptr = _4;
  goto <bb 5>; [INV]

  <bb 4> :
  _5 = malloc (40);
  _6 = (long int) _5;
  a2 = (int) _6;
  printf ("%d\n", a2);
  _7 = (long int) a2;
  _8 = (int * *) _7;
  *ptr = _8;

  <bb 5> :
  return;

}



;; Function main (main, funcdef_no=4, decl_uid=1971, cgraph_uid=5, symbol_order=5)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
int main ()
{
  int * * * ptr3;
  int * * ptr2;
  int * ptr;
  int num;
  int test;
  int * a;
  int D.1989;

  <bb 2> :
  num = 100;
  ptr = &num;
  ptr2 = &ptr;
  ptr3 = &ptr2;
  ptr3.0_1 = ptr3;
  changePtr2 (ptr3.0_1);
  ptr3.1_2 = ptr3;
  _3 = *ptr3.1_2;
  _4 = *_3;
  _5 = *_4;
  printf ("\xe9\x80\x8f\xe9\x81\x8eptr3\xe5\x8f\x96\xe5\xbe\x97\xe5\x88\xb0num\xe5\x80\xbc \t%d\n", _5);
  ptr3.2_6 = ptr3;
  _7 = *ptr3.2_6;
  _8 = *_7;
  printf ("ptr3\xe6\x8c\x87\xe5\x88\xb0ptr\xe4\xbd\x8d\xe5\x9d\x80 \t%p\n", _8);
  ptr3.3_9 = ptr3;
  _10 = *ptr3.3_9;
  printf ("ptr3\xe6\x8c\x87\xe5\x88\xb0ptr\xe7\x9a\x84\xe8\xa8\x98\xe6\x86\xb6\xe9\xab\x94\xe4\xbd\x8d\xe7\xbd\xae \t%p\n", _10);
  ptr3.4_11 = ptr3;
  printf ("ptr3\xe6\x8c\x87\xe5\x88\xb0ptr2\xe7\x9a\x84\xe8\xa8\x98\xe6\x86\xb6\xe9\xab\x94\xe4\xbd\x8d\xe7\xbd\xae \t%p\n", ptr3.4_11);
  printf ("ptr3\xe8\xa8\x98\xe6\x86\xb6\xe9\xab\x94\xe4\xbd\x8d\xe5\x9d\x80 \t%p\n\n\n", &ptr3);
  ptr3.5_12 = ptr3;
  printf ("ptr3\xe8\xa8\x98\xe6\x86\xb6\xe9\xab\x94\xe4\xbd\x8d\xe5\x9d\x80 \t%p\n\n\n", ptr3.5_12);
  num = {CLOBBER};
  ptr = {CLOBBER};
  ptr2 = {CLOBBER};
  ptr3 = {CLOBBER};
  D.1989 = 0;
  return D.1989;

}


