
;; Function foo5 (foo5, funcdef_no=51, decl_uid=4319, cgraph_uid=51, symbol_order=56)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__attribute__((noinline))
foo5 (int * z, int * y)
{
  int p2;
  int D.4472;

  <bb 2> [0.00%]:
  p2 = 10;
  _1 = *z;
  printf ("test1%d\n", _1);
  _2 = *y;
  printf ("test2%d\n", _2);
  printf ("test3%d\n", p2);
  D.4472 = p2;
  return D.4472;

}



;; Function printf (<unset-asm-name>, funcdef_no=31, decl_uid=798, cgraph_uid=31, symbol_order=31)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__attribute__((__artificial__, __gnu_inline__, __always_inline__))
printf (const char * restrict __fmt)
{
  int D.4474;

  <bb 2> [0.00%]:
  D.4474 = __printf_chk (1, __fmt, __builtin_va_arg_pack ());
  return D.4474;

}



;; Function foo3 (foo3, funcdef_no=52, decl_uid=4316, cgraph_uid=52, symbol_order=57)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
__attribute__((noinline))
foo3 (int * z)
{
  int test;
  int * p2;

  <bb 2> [0.00%]:
  if (test != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  _1 = malloc (1);
  _2 = (long int) _1;
  _3 = (int) _2;
  *z = _3;
  goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  p2 = malloc (2);

  <bb 5> [0.00%]:
  *p2 = 10;
  printf ("%d", p2);
  return;

}



;; Function foo2 (foo2, funcdef_no=53, decl_uid=4314, cgraph_uid=53, symbol_order=58)

Removing basic block 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
__attribute__((noinline))
foo2 (int z)
{
  int tmp;
  int * p4;
  int * p3;
  int * a2;
  int * D.4481;

  <bb 2> [0.00%]:
  _1 = (long unsigned int) z;
  a2 = malloc (_1);
  _2 = (long unsigned int) z;
  p3 = malloc (_2);
  _3 = (long unsigned int) z;
  p4 = malloc (_3);
  _4 = malloc (200);
  p99 = _4;
  p99.0_5 = p99;
  *p99.0_5 = 99;
  p99.1_6 = p99;
  _7 = p99.1_6 + 4;
  *_7 = 100;
  pthread_mutex_lock (&mLock);
  pthread_mutex_lock (&mLock2);
  pthread_mutex_lock (&mLock3);
  foo3 (p3);
  if (tmp > 10)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  p99.2_8 = p99;
  _9 = p99.2_8 + 4;
  *_9 = 200;
  *p3 = 10;
  free (p3);
  D.4481 = p3;
  goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  *p4 = 10;
  free (p4);
  D.4481 = p4;

  <bb 5> [0.00%]:
  return D.4481;

}



;; Function foo4 (foo4, funcdef_no=54, decl_uid=4345, cgraph_uid=54, symbol_order=59)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
foo4 (int z)
{
  int * p2;
  int * b;
  int * D.4483;

  <bb 2> [0.00%]:
  _1 = malloc (1);
  b = _1;
  p2 = malloc (1);
  b.3_2 = b;
  *b.3_2 = 2;
  *p2 = 1;
  p2 = &b;
  free (p2);
  D.4483 = p2;
  b = {CLOBBER};
  return D.4483;

}



;; Function foo (foo, funcdef_no=55, decl_uid=4312, cgraph_uid=55, symbol_order=60)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__attribute__((noinline))
foo (int z)
{
  int * p2;
  int * D.4486;

  <bb 2> [0.00%]:
  p2 = malloc (1);
  *p2 = 1;
  p99.4_1 = p99;
  _2 = p99.4_1 + 4;
  *_2 = 1000;
  p99.5_3 = p99;
  _4 = p99.5_3 + 8;
  *_4 = 200;
  D.4486 = foo2 (z);
  return D.4486;

}



;; Function child (child, funcdef_no=56, decl_uid=4329, cgraph_uid=56, symbol_order=61)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__attribute__((noinline))
child (void * data)
{
  int test;
  int data2;
  int * pData2;
  int * pData;
  int * * ppData;
  int * a99;
  union pthread_mutex_t mLock2;

  <bb 2> [0.00%]:
  pthread_mutex_lock (&mLock);
  pthread_mutex_lock (&mLock);
  a99 = foo (20);
  printf ("asdda%d\n", a99);
  ppData = malloc (10);
  data.6_1 = data;
  pData = data.6_1;
  pData2 = malloc (10);
  pData.7_2 = pData;
  _3 = *pData.7_2;
  pData.8_4 = pData;
  _5 = _3 + 1;
  *pData.8_4 = _5;
  data2 = 0;
  data = 10B;
  ppData = &pData;
  pData = &data2;
  _6 = *ppData;
  *_6 = 10;
  _7 = *ppData;
  *_7 = 12;
  child4 (&data);
  child3 (&data);
  child5 (pData2);
  p98.9_8 = p98;
  *p98.9_8 = 98;
  pData.10_9 = pData;
  free (pData.10_9);
  data.11_10 = data;
  free (data.11_10);
  data.12_11 = data;
  boo (data.12_11);
  free (ppData);
  pthread_mutex_unlock (&mLock);
  free (ppData);
  test = 100;
  mLock2 = {CLOBBER};
  pData = {CLOBBER};
  data2 = {CLOBBER};
  return;

}



;; Function child4 (child4, funcdef_no=57, decl_uid=4335, cgraph_uid=57, symbol_order=62)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
__attribute__((noinline))
child4 (int * data)
{
  int t;
  int * test;
  int * pData;

  <bb 2> [0.00%]:
  pData = &data;
  test = &data;
  if (t != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  data.13_1 = data;
  _2 = *data.13_1;
  data.14_3 = data;
  _4 = _2 + 1;
  *data.14_3 = _4;
  goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  data.15_5 = data;
  *data.15_5 = 2;

  <bb 5> [0.00%]:
  printf ("asdda%d\n", pData);
  return;

}



;; Function child3 (child3, funcdef_no=58, decl_uid=4333, cgraph_uid=58, symbol_order=63)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__attribute__((noinline))
child3 (void * data)
{
  int c;
  int * pData;

  <bb 2> [0.00%]:
  _1 = pthread_self ();
  pthread_detach (_1);
  pData = &data;
  c = 10;
  pData = pData + 4;
  printf ("asdda%d\n", pData);
  printf ("asdda%d\n", c);
  free (&data);
  return;

}



;; Function child5 (child5, funcdef_no=59, decl_uid=4337, cgraph_uid=59, symbol_order=64)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
__attribute__((noinline))
child5 (void * data)
{
  int c;
  int * pData;

  <bb 2> [0.00%]:
  _1 = pthread_self ();
  pthread_detach (_1);
  pData = data;
  pData = pData + 4;
  if (c != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  printf ("asdda%d\n", pData);
  goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  printf ("asdda%d\n", c);
  free (pData);

  <bb 5> [0.00%]:
  return;

}



;; Function child6 (child6, funcdef_no=60, decl_uid=4340, cgraph_uid=60, symbol_order=65)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
__attribute__((noinline))
child6 (void * data, void * test)
{
  int c;
  int * pData;

  <bb 2> [0.00%]:
  _1 = pthread_self ();
  pthread_detach (_1);
  pData = test;
  pData = pData + 4;
  if (c != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  pData = pData + 80;
  printf ("asdda%d\n", pData);
  goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  pData = pData + 80;
  printf ("asdda%d\n", c);
  free (pData);

  <bb 5> [0.00%]:
  return;

}



;; Function child7 (child7, funcdef_no=61, decl_uid=4343, cgraph_uid=61, symbol_order=66)

Removing basic block 6
Removing basic block 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
__attribute__((noinline))
child7 (void * data, void * test)
{
  int c;
  int * pData;
  int * D.4499;

  <bb 2> [0.00%]:
  _1 = pthread_self ();
  pthread_detach (_1);
  pData = test;
  pData = pData + 4;
  if (c != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  p98.16_2 = p98;
  _3 = p98.16_2 + 12;
  *_3 = 300;
  D.4499 = malloc (10);
  goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  p98.17_4 = p98;
  _5 = p98.17_4 + 8;
  *_5 = 300;
  pData = pData + 80;
  printf ("asdda%d\n", c);
  D.4499 = malloc (30);

  <bb 5> [0.00%]:
  return D.4499;

}



;; Function child2 (child2, funcdef_no=62, decl_uid=4331, cgraph_uid=62, symbol_order=67)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__attribute__((noinline))
child2 (void * data)
{
  int * pData;

  <bb 2> [0.00%]:
  pData = &data;
  p98.18_1 = p98;
  _2 = p98.18_1 + 4;
  *_2 = 99;
  data.19_3 = data;
  child3 (data.19_3);
  data.20_4 = data;
  free (data.20_4);
  return;

}



;; Function boo (boo, funcdef_no=63, decl_uid=4321, cgraph_uid=63, symbol_order=68)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__attribute__((noinline))
boo (int * b)
{
  <bb 2> [0.00%]:
  free (b);
  free (b);
  test22 (b);
  printf ("asdda\n");
  return;

}



;; Function test44 (test44, funcdef_no=64, decl_uid=4327, cgraph_uid=64, symbol_order=69)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__attribute__((noinline))
test44 (int * k)
{
  <bb 2> [0.00%]:
  free (k);
  return;

}



;; Function test33 (test33, funcdef_no=65, decl_uid=4325, cgraph_uid=65, symbol_order=70)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__attribute__((noinline))
test33 (int * k)
{
  <bb 2> [0.00%]:
  test44 (k);
  return;

}



;; Function test22 (test22, funcdef_no=66, decl_uid=4323, cgraph_uid=66, symbol_order=71)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__attribute__((noinline))
test22 (int * k)
{
  int * w;

  <bb 2> [0.00%]:
  free (k);
  free (k);
  free (k);
  free (k);
  free (k);
  free (k);
  w = malloc (5);
  free (w);
  return;

}



;; Function main (main, funcdef_no=67, decl_uid=4435, cgraph_uid=67, symbol_order=74)

Removing basic block 25
Merging blocks 23 and 24
Merging blocks 23 and 26
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
;;
;; Loop 4
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15
;;
;; Loop 3
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 7 }
;; 6 succs { 7 }
;; 7 succs { 6 8 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 9 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 15 17 }
;; 17 succs { 18 21 }
;; 18 succs { 19 20 }
;; 19 succs { }
;; 20 succs { 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 1 }
main ()
{
  int i;
  int err;
  int i;
  int i;
  int i;
  int * p4;
  int * data;
  int test;
  int * q2;
  int * q;
  pthread_t t2[3];
  pthread_t t;
  union pthread_attr_t attr2;
  union pthread_attr_t attr;
  char buff[50];
  int input2;
  int input[2];
  struct adresse * a;
  int * p3;
  int size;
  int * p2;
  int * p;
  int D.4511;

  <bb 2> [0.00%]:
  size = 2;
  p3 = &size;
  size.21_1 = size;
  _2 = (long unsigned int) size.21_1;
  _3 = _2 * 16;
  a = malloc (_3);
  i = 0;
  goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  _4 = (long unsigned int) i;
  _5 = _4 * 16;
  _6 = a + _5;
  _6->name = "Testname";
  _7 = (long unsigned int) i;
  _8 = _7 * 16;
  _9 = a + _8;
  _9->nummer = 123;
  i = i + 1;

  <bb 4> [0.00%]:
  size.22_10 = size;
  if (i < size.22_10)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 5> [0.00%]:
  free (a);
  i = 0;
  goto <bb 7>; [0.00%]

  <bb 6> [0.00%]:
  _11 = (long unsigned int) i;
  _12 = _11 * 16;
  _13 = a + _12;
  _14 = _13->nummer;
  _15 = (long unsigned int) i;
  _16 = _15 * 16;
  _17 = a + _16;
  _18 = _17->name;
  printf ("%s, %d\n", _18, _14);
  i = i + 1;

  <bb 7> [0.00%]:
  size.23_19 = size;
  if (i < size.23_19)
    goto <bb 6>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 8> [0.00%]:
  input[0] = 1;
  input[1] = 2;
  pthread_attr_init (&attr);
  pthread_attr_init (&attr2);
  pthread_attr_setdetachstate (&attr, 1);
  pthread_attr_setdetachstate (&attr2, 0);
  _20 = (long int) input2;
  _21 = (void *) _20;
  pthread_create (&t, &attr2, child2, _21);
  t.24_22 = t;
  pthread_join (t.24_22, 0B);
  i = 0;
  goto <bb 10>; [0.00%]

  <bb 9> [0.00%]:
  _23 = &t2[i];
  err = pthread_create (_23, &attr2, child, 0B);
  _24 = t2[i];
  printf ("%ld\n", _24);
  i = i + 1;

  <bb 10> [0.00%]:
  if (i <= 2)
    goto <bb 9>; [0.00%]
  else
    goto <bb 11>; [0.00%]

  <bb 11> [0.00%]:
  q = malloc (70);
  q2 = malloc (20);
  _25 = q != 0B;
  _26 = test != 0;
  _27 = _25 & _26;
  if (_27 != 0)
    goto <bb 12>; [0.00%]
  else
    goto <bb 13>; [0.00%]

  <bb 12> [0.00%]:
  child (q);
  *q = 10;
  free (q);
  goto <bb 14>; [0.00%]

  <bb 13> [0.00%]:
  *q = 20;
  printf ("test\n");

  <bb 14> [0.00%]:
  i = 0;
  goto <bb 16>; [0.00%]

  <bb 15> [0.00%]:
  _28 = t2[i];
  pthread_join (_28, 0B);
  i = i + 1;

  <bb 16> [0.00%]:
  if (i <= 2)
    goto <bb 15>; [0.00%]
  else
    goto <bb 17>; [0.00%]

  <bb 17> [0.00%]:
  data = 0B;
  staticTrue.25_29 = staticTrue;
  if (staticTrue.25_29 != 0)
    goto <bb 18>; [0.00%]
  else
    goto <bb 21>; [0.00%]

  <bb 18> [0.00%]:
  data = malloc (400);
  if (data == 0B)
    goto <bb 19>; [0.00%]
  else
    goto <bb 20>; [0.00%]

  <bb 19> [0.00%]:
  exit (-1);

  <bb 20> [0.00%]:
  free (data);

  <bb 21> [0.00%]:
  staticTrue.26_30 = staticTrue;
  if (staticTrue.26_30 != 0)
    goto <bb 22>; [0.00%]
  else
    goto <bb 23>; [0.00%]

  <bb 22> [0.00%]:
  free (data);

  <bb 23> [0.00%]:
  _31 = foo5 (q, q);
  printf ("123%d\n", _31);
  p4 = malloc (10);
  p4 = 0B;
  p4 = 1B;
  child4 (p4);
  _32 = (long int) test;
  _33 = (void *) _32;
  p4 = child7 (_33, p4);
  free (p4);
  _34 = malloc (201);
  p98 = _34;
  p98.27_35 = p98;
  child (p98.27_35);
  p98.28_36 = p98;
  free (p98.28_36);
  D.4511 = 0;
  size = {CLOBBER};
  input = {CLOBBER};
  buff = {CLOBBER};
  attr = {CLOBBER};
  attr2 = {CLOBBER};
  t = {CLOBBER};
  t2 = {CLOBBER};
  return D.4511;

}


