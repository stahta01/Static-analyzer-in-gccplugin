
;; Function xrealloc (xrealloc, funcdef_no=22, decl_uid=4033, cgraph_uid=23, symbol_order=22)

Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 6 }
;; 5 succs { }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 1 }
void * xrealloc (void * oldptr, size_t nmemb, size_t size)
{
  void * newptr;
  size_t newsize;
  void * D.4163;

  <bb 2> :
  newsize = nmemb * size;
  if (newsize == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  printf ("zero size%s", "");
  exit (1);

  <bb 4> :
  _1 = 1073741824 / nmemb;
  if (size > _1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  printf ("nmemb * size > SIZE_MAX%s", "");
  exit (1);

  <bb 6> :
  newptr = realloc (oldptr, newsize);
  if (newptr == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  printf ("xrealloc failed%s", "");
  exit (1);

  <bb 8> :
  D.4163 = newptr;
  return D.4163;

}



;; Function cmd_string_getc (cmd_string_getc, funcdef_no=23, decl_uid=4015, cgraph_uid=24, symbol_order=23)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int cmd_string_getc (const char * s, size_t * p)
{
  int D.4167;

  <bb 2> :
  _1 = *p;
  _2 = s + _1;
  _3 = *_2;
  if (_3 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.4167 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _4 = *p;
  _5 = _4;
  _6 = _5 + 1;
  *p = _6;
  _7 = s + _5;
  _8 = *_7;
  D.4167 = (int) _8;

  <bb 5> :
  return D.4167;

}



;; Function cmd_string_ungetc (cmd_string_ungetc, funcdef_no=24, decl_uid=4018, cgraph_uid=25, symbol_order=24)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void cmd_string_ungetc (const char * s, size_t * p)
{
  <bb 2> :
  _1 = *p;
  _2 = _1 + 18446744073709551615;
  *p = _2;
  return;

}



;; Function cmd_string_string (cmd_string_string, funcdef_no=25, decl_uid=4023, cgraph_uid=26, symbol_order=25)

Removing basic block 12
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
;;
;; Loop 1
;;  header 19, multiple latches: 15 18
;;  depth 1, outer 0
;;  nodes: 19 15 18 16 3 5 8 12 6 11 10 9 13
;; 2 succs { 19 }
;; 3 succs { 16 4 12 5 }
;; 4 succs { 21 }
;; 5 succs { 16 6 }
;; 6 succs { 16 7 8 10 9 11 }
;; 7 succs { 21 }
;; 8 succs { 16 }
;; 9 succs { 16 }
;; 10 succs { 16 }
;; 11 succs { 16 }
;; 12 succs { 16 13 }
;; 13 succs { 14 15 }
;; 14 succs { 21 }
;; 15 succs { 19 }
;; 16 succs { 17 18 }
;; 17 succs { 21 }
;; 18 succs { 19 }
;; 19 succs { 3 20 }
;; 20 succs { 24 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 24 }
;; 24 succs { 1 }
char * cmd_string_string (const char * s, size_t * p, char endch, int esc)
{
  size_t len;
  char * t;
  char * buf;
  int ch;
  char * D.4177;

  <bb 2> :
  buf = 0B;
  len = 0;
  goto <bb 19>; [INV]

  <bb 3> :
  switch (ch) <default: <L15> [INV], case -1: <L1> [INV], case 36: <L11> [INV], case 92: <L2> [INV]>

  <bb 4> :
<L1>:
  // predicted unlikely by goto predictor.
  goto <bb 21>; [INV]

  <bb 5> :
<L2>:
  if (esc == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  ch = cmd_string_getc (s, p);
  switch (ch) <default: <L15> [INV], case -1: <L4> [INV], case 101: <L5> [INV], case 110: <L7> [INV], case 114: <L6> [INV], case 116: <L8> [INV]>

  <bb 7> :
<L4>:
  // predicted unlikely by goto predictor.
  goto <bb 21>; [INV]

  <bb 8> :
<L5>:
  ch = 27;
  goto <bb 16>; [INV]

  <bb 9> :
<L6>:
  ch = 13;
  goto <bb 16>; [INV]

  <bb 10> :
<L7>:
  ch = 10;
  goto <bb 16>; [INV]

  <bb 11> :
<L8>:
  ch = 9;
  goto <bb 16>; [INV]

  <bb 12> :
<L11>:
  if (esc == 0)
    goto <bb 16>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  t = cmd_string_variable (s, p);
  if (t == 0B)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  // predicted unlikely by goto predictor.
  goto <bb 21>; [INV]

  <bb 15> :
  _1 = strlen (t);
  _2 = len + _1;
  _3 = _2 + 1;
  buf = xrealloc (buf, 1, _3);
  _4 = buf + len;
  strcpy (_4, t);
  _5 = strlen (t);
  len = len + _5;
  free (t);
  // predicted unlikely by continue predictor.
  goto <bb 19>; [INV]

  <bb 16> :
<L15>:
  if (len > 1073741821)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 17> :
  // predicted unlikely by goto predictor.
  goto <bb 21>; [INV]

  <bb 18> :
  _6 = len + 1;
  buf = xrealloc (buf, 1, _6);
  len.0_7 = len;
  len = len.0_7 + 1;
  _8 = buf + len.0_7;
  _9 = (char) ch;
  *_8 = _9;

  <bb 19> :
  ch = cmd_string_getc (s, p);
  _10 = (int) endch;
  if (ch != _10)
    goto <bb 3>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 20> :
  _11 = len + 1;
  buf = xrealloc (buf, 1, _11);
  _12 = buf + len;
  *_12 = 0;
  D.4177 = buf;
  goto <bb 24>; [INV]

  <bb 21> :
error:
  if (buf != 0B)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]

  <bb 22> :
  free (buf);

  <bb 23> :
  D.4177 = 0B;

  <bb 24> :
  return D.4177;

}



;; Function cmd_string_variable (cmd_string_variable, funcdef_no=26, decl_uid=4026, cgraph_uid=27, symbol_order=26)

Removing basic block 15
Merging blocks 18 and 19
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
;;
;; Loop 1
;;  header 11, latch 17
;;  depth 1, outer 0
;;  nodes: 11 17 15 12 13 14
;; 2 succs { 7 3 4 }
;; 3 succs { 25 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 25 }
;; 7 succs { 8 10 }
;; 8 succs { 9 10 }
;; 9 succs { 28 }
;; 10 succs { 11 }
;; 11 succs { 18 12 }
;; 12 succs { 13 15 }
;; 13 succs { 14 15 }
;; 14 succs { 18 15 }
;; 15 succs { 16 17 }
;; 16 succs { 25 }
;; 17 succs { 11 }
;; 18 succs { 19 20 }
;; 19 succs { 25 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 24 }
;; 23 succs { 28 }
;; 24 succs { 28 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 28 }
;; 28 succs { 1 }
char * cmd_string_variable (const char * s, size_t * p)
{
  size_t len;
  char * t;
  char * buf;
  int fch;
  int ch;
  char * D.4189;

  <bb 2> :
  buf = 0B;
  len = 0;
  fch = -1;
  ch = cmd_string_getc (s, p);
  switch (ch) <default: <L4> [INV], case -1: <L0> [INV], case 123: <L1> [INV]>

  <bb 3> :
<L0>:
  // predicted unlikely by goto predictor.
  goto <bb 25>; [INV]

  <bb 4> :
<L1>:
  fch = 123;
  ch = cmd_string_getc (s, p);
  _1 = ch != 95;
  ch.1_2 = (unsigned int) ch;
  _3 = ch.1_2 + 4294967199;
  _4 = _3 > 25;
  _5 = _1 & _4;
  if (_5 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  ch.2_6 = (unsigned int) ch;
  _7 = ch.2_6 + 4294967231;
  if (_7 > 25)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  // predicted unlikely by goto predictor.
  goto <bb 25>; [INV]

  <bb 7> :
<L4>:
  _8 = ch != 95;
  ch.3_9 = (unsigned int) ch;
  _10 = ch.3_9 + 4294967199;
  _11 = _10 > 25;
  _12 = _8 & _11;
  if (_12 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  ch.4_13 = (unsigned int) ch;
  _14 = ch.4_13 + 4294967231;
  if (_14 > 25)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  t = strdup ("$");
  D.4189 = t;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 28>; [INV]

  <bb 10> :
  _15 = len + 1;
  buf = xrealloc (buf, 1, _15);
  len.5_16 = len;
  len = len.5_16 + 1;
  _17 = buf + len.5_16;
  _18 = (char) ch;
  *_17 = _18;

  <bb 11> :
  ch = cmd_string_getc (s, p);
  if (ch == -1)
    goto <bb 18>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  _19 = ch != 95;
  ch.6_20 = (unsigned int) ch;
  _21 = ch.6_20 + 4294967199;
  _22 = _21 > 25;
  _23 = _19 & _22;
  if (_23 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  ch.7_24 = (unsigned int) ch;
  _25 = ch.7_24 + 4294967231;
  if (_25 > 25)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 14> :
  ch.8_26 = (unsigned int) ch;
  _27 = ch.8_26 + 4294967248;
  if (_27 > 9)
    goto <bb 18>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  if (len > 1073741820)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  // predicted unlikely by goto predictor.
  goto <bb 25>; [INV]

  <bb 17> :
  _28 = len + 1;
  buf = xrealloc (buf, 1, _28);
  len.9_29 = len;
  len = len.9_29 + 1;
  _30 = buf + len.9_29;
  _31 = (char) ch;
  *_30 = _31;
  goto <bb 11>; [INV]

  <bb 18> :
  _32 = fch == 123;
  _33 = ch != 125;
  _34 = _32 & _33;
  if (_34 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  // predicted unlikely by goto predictor.
  goto <bb 25>; [INV]

  <bb 20> :
  _35 = ch != -1;
  _36 = fch != 123;
  _37 = _35 & _36;
  if (_37 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  cmd_string_ungetc (s, p);

  <bb 22> :
  _38 = len + 1;
  buf = xrealloc (buf, 1, _38);
  _39 = buf + len;
  *_39 = 0;
  t = getenv (buf);
  if (t == 0B)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  free (buf);
  D.4189 = strdup ("");
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 28>; [INV]

  <bb 24> :
  free (buf);
  D.4189 = strdup (t);
  goto <bb 28>; [INV]

  <bb 25> :
error:
  if (buf != 0B)
    goto <bb 26>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 26> :
  free (buf);

  <bb 27> :
  D.4189 = 0B;

  <bb 28> :
  return D.4189;

}



;; Function cmd_string_expand_tilde (cmd_string_expand_tilde, funcdef_no=27, decl_uid=4029, cgraph_uid=28, symbol_order=27)

Removing basic block 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 3 6 }
;; 3 succs { 4 12 }
;; 4 succs { 5 12 }
;; 5 succs { 12 }
;; 6 succs { 7 8 }
;; 7 succs { 15 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 1 }
char * cmd_string_expand_tilde (const char * s, size_t * p)
{
  char * username;
  char * path;
  char * home;
  struct passwd * pw;
  char * D.4215;

  <bb 2> :
  home = 0B;
  _1 = cmd_string_getc (s, p);
  if (_1 == 47)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  home = getenv ("HOME");
  if (home == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 4> :
  _2 = getuid ();
  _3 = getpwuid (_2);
  _4 = (long int) _3;
  pw = (struct passwd *) _4;
  if (pw != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 5> :
  home = pw->pw_dir;
  goto <bb 12>; [INV]

  <bb 6> :
  cmd_string_ungetc (s, p);
  username = cmd_string_string (s, p, 47, 0);
  if (username == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.4215 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 8> :
  _5 = getpwnam (username);
  _6 = (long int) _5;
  pw = (struct passwd *) _6;
  if (pw != 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  home = pw->pw_dir;

  <bb 10> :
  if (username != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  free (username);

  <bb 12> :
  if (home == 0B)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  D.4215 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 14> :
  path = strdup (home);
  D.4215 = path;

  <bb 15> :
  return D.4215;

}



;; Function cmd_string_parse (cmd_string_parse, funcdef_no=28, decl_uid=4109, cgraph_uid=29, symbol_order=28)

Removing basic block 4
Removing basic block 9
Merging blocks 18 and 21
Removing basic block 20
Merging blocks 29 and 30
Merging blocks 29 and 31
;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
;;
;; Loop 5
;;  header 23, latch 22
;;  depth 1, outer 0
;;  nodes: 23 22
;;
;; Loop 4
;;  header 13, latch 13
;;  depth 1, outer 0
;;  nodes: 13
;;
;; Loop 3
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 8
;;
;; Loop 1
;;  header 3, multiple latches: 17 7
;;  depth 1, outer 0
;;  nodes: 3 17 7 5 6 4 15
;;
;; Loop 2
;;  header 4, latch 4
;;  depth 2, outer 1
;;  nodes: 4
;; 2 succs { 3 }
;; 3 succs { 15 5 4 }
;; 4 succs { 4 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 3 10 }
;; 8 succs { 11 9 }
;; 9 succs { 10 }
;; 10 succs { 8 11 }
;; 11 succs { 12 13 }
;; 12 succs { 18 }
;; 13 succs { 13 14 }
;; 14 succs { 18 }
;; 15 succs { 16 17 }
;; 16 succs { 18 }
;; 17 succs { 3 }
;; 18 succs { 19 20 }
;; 19 succs { 20 }
;; 20 succs { 21 25 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 22 24 }
;; 24 succs { 25 }
;; 25 succs { 1 }
int cmd_string_parse (const char * s, struct cmd_list * * cmdlist, char * * cause)
{
  size_t len;
  const char * equals;
  const char * whitespace;
  char * t;
  char * buf;
  char * * argv;
  int have_arg;
  int rval;
  int argc;
  int i;
  int ch;
  size_t p;
  int D.4235;

  <bb 2> :
  argv = 0B;
  argc = 0;
  buf = 0B;
  len = 0;
  have_arg = 0;
  *cause = 0B;
  *cmdlist = 0B;
  rval = -1;
  p = 0;

  <bb 3> :
  ch = cmd_string_getc (s, &p);
  switch (ch) <default: <L19> [INV], case -1: <L4> [INV], case 9: <L4> [INV], case 32: <L4> [INV], case 35: <L34> [INV]>

  <bb 4> :
<L34>:
  ch = cmd_string_getc (s, &p);
  if (ch != -1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
<L4>:
  if (have_arg != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _1 = len + 1;
  buf = xrealloc (buf, 1, _1);
  _2 = buf + len;
  *_2 = 0;
  _3 = argc + 1;
  _4 = (long unsigned int) _3;
  argv = xrealloc (argv, _4, 8);
  argc.10_5 = argc;
  argc = argc.10_5 + 1;
  _6 = (long unsigned int) argc.10_5;
  _7 = _6 * 8;
  _8 = argv + _7;
  *_8 = buf;
  buf = 0B;
  len = 0;
  have_arg = 0;

  <bb 7> :
  if (ch != -1)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 8> :
  _9 = *argv;
  equals = strchr (_9, 61);
  _10 = *argv;
  _11 = *argv;
  _12 = strcspn (_11, " \t");
  whitespace = _10 + _12;
  _13 = equals == 0B;
  _14 = equals > whitespace;
  _15 = _13 | _14;
  if (_15 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  argc = argc + -1;
  _16 = (long unsigned int) argc;
  _17 = _16 * 8;
  _18 = argv + 8;
  memmove (argv, _18, _17);

  <bb 10> :
  if (argc != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  if (argc == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  // predicted unlikely by goto predictor.
  goto <bb 18>; [INV]

  <bb 13> :
  _19 = (long unsigned int) argc;
  _20 = _19 * 8;
  _21 = _20 + 18446744073709551608;
  _22 = argv + _21;
  _23 = *_22;
  free (_23);
  argc = argc + -1;
  if (argc > 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  rval = 0;
  // predicted unlikely by goto predictor.
  goto <bb 18>; [INV]

  <bb 15> :
<L19>:
  if (len > 1073741821)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  // predicted unlikely by goto predictor.
  goto <bb 18>; [INV]

  <bb 17> :
  _24 = len + 1;
  buf = xrealloc (buf, 1, _24);
  len.11_25 = len;
  len = len.11_25 + 1;
  _26 = buf + len.11_25;
  _27 = (char) ch;
  *_26 = _27;
  have_arg = 1;
  goto <bb 3>; [INV]

  <bb 18> :
out:
  if (buf != 0B)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 19> :
  free (buf);

  <bb 20> :
  if (argv != 0B)
    goto <bb 21>; [INV]
  else
    goto <bb 25>; [INV]

  <bb 21> :
  i = 0;
  goto <bb 23>; [INV]

  <bb 22> :
  _28 = (long unsigned int) argc;
  _29 = _28 * 8;
  _30 = argv + _29;
  _31 = *_30;
  free (_31);
  i = i + 1;

  <bb 23> :
  if (i < argc)
    goto <bb 22>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  free (argv);

  <bb 25> :
  D.4235 = rval;
  p = {CLOBBER};
  return D.4235;

}



;; Function main (main, funcdef_no=29, decl_uid=4152, cgraph_uid=30, symbol_order=29)

Removing basic block 6
Merging blocks 4 and 5
Merging blocks 4 and 7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
int main (int argc, char * * argv)
{
  struct cmd_list * cmdlist;
  char * cause;
  int D.4241;

  <bb 2> :
  if (argc > 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = argv + 8;
  _2 = *_1;
  cmd_string_parse (_2, &cmdlist, &cause);

  <bb 4> :
  D.4241 = 0;
  cause = {CLOBBER};
  cmdlist = {CLOBBER};
  return D.4241;

}


