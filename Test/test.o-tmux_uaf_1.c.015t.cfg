
;; Function mode_key_init (mode_key_init, funcdef_no=22, decl_uid=4117, cgraph_uid=23, symbol_order=24)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
void mode_key_init (struct mode_key_data * mdata, struct mode_key_tree * mtree)
{
  <bb 2> :
  mdata->tree = mtree;
  mdata->mode = 0;
  return;

}



;; Function window_pane_set_mode (window_pane_set_mode, funcdef_no=23, decl_uid=4121, cgraph_uid=24, symbol_order=25)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
int window_pane_set_mode (struct window_pane * wp, const struct window_mode * mode)
{
  struct screen * s;
  int D.4270;

  <bb 2> :
  _1 = wp->mode;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.4270 = 1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  wp->mode = mode;
  _2 = wp->mode;
  _3 = _2->init;
  s = _3 (wp);
  if (s != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  wp->screen = s;

  <bb 6> :
  _4 = wp->flags;
  _5 = _4 | 1;
  wp->flags = _5;
  D.4270 = 0;

  <bb 7> :
  return D.4270;

}



;; Function xrealloc (xrealloc, funcdef_no=24, decl_uid=4127, cgraph_uid=25, symbol_order=26)

Merging blocks 8 and 9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 6 }
;; 5 succs { }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 1 }
void * xrealloc (void * oldptr, size_t nmemb, size_t size)
{
  void * newptr;
  size_t newsize;
  void * D.4280;

  <bb 2> :
  newsize = nmemb * size;
  if (newsize == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  printf ("zero size%s", "");
  exit (1);

  <bb 4> :
  _1 = 1073741824 / nmemb;
  if (size > _1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  printf ("nmemb * size > SIZE_MAX%s", "");
  exit (1);

  <bb 6> :
  newptr = realloc (oldptr, newsize);
  if (newptr == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  printf ("xrealloc failed%s", "");
  exit (1);

  <bb 8> :
  D.4280 = newptr;
  return D.4280;

}



;; Function window_pane_reset_mode (window_pane_reset_mode, funcdef_no=25, decl_uid=4132, cgraph_uid=26, symbol_order=27)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void window_pane_reset_mode (struct window_pane * wp)
{
  <bb 2> :
  _1 = wp->mode;
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = wp->mode;
  _3 = _2->free;
  _3 (wp);
  wp->mode = 0B;
  _4 = &wp->base;
  wp->screen = _4;
  _5 = wp->flags;
  _6 = _5 | 1;
  wp->flags = _6;

  <bb 5> :
  return;

}



;; Function window_copy_init (window_copy_init, funcdef_no=26, decl_uid=3967, cgraph_uid=27, symbol_order=28)

Merging blocks 2 and 3
Merging blocks 2 and 4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
struct screen * window_copy_init (struct window_pane * wp)
{
  int keys;
  u_int i;
  struct screen_write_ctx ctx;
  struct screen * s;
  struct window_copy_mode_data * data;
  struct screen * D.4285;

  <bb 2> :
  data = malloc (224);
  wp->modedata = data;
  data->oy = 0;
  _1 = wp->base.cx;
  data->cx = _1;
  _2 = wp->base.cy;
  data->cy = _2;
  data->lastcx = 0;
  data->lastsx = 0;
  data->rectflag = 0;
  data->inputtype = 0;
  data->inputprompt = 0B;
  _3 = strdup ("");
  data->inputstr = _3;
  data->numprefix = 0;
  data->searchtype = 0;
  data->searchstr = 0B;
  _4 = wp->flags;
  _5 = _4 | 2;
  wp->flags = _5;
  s = &data->screen;
  _6 = data->cx;
  s->cx = _6;
  _7 = data->cy;
  s->cy = _7;
  D.4285 = s;
  ctx = {CLOBBER};
  return D.4285;

}



;; Function window_copy_free (window_copy_free, funcdef_no=27, decl_uid=3969, cgraph_uid=28, symbol_order=29)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
void window_copy_free (struct window_pane * wp)
{
  struct window_copy_mode_data * data;

  <bb 2> :
  data = wp->modedata;
  _1 = wp->flags;
  _2 = _1 & -3;
  wp->flags = _2;
  _3 = data->searchstr;
  if (_3 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = data->searchstr;
  free (_4);

  <bb 4> :
  _5 = data->inputstr;
  free (_5);
  free (data);
  return;

}



;; Function window_copy_key (window_copy_key, funcdef_no=28, decl_uid=3977, cgraph_uid=29, symbol_order=30)

Merging blocks 8 and 19
Removing basic block 11
Removing basic block 14
Merging blocks 15 and 18
Removing basic block 16
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 12, latch 11
;;  depth 1, outer 0
;;  nodes: 12 11
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 10 }
;; 6 succs { 7 10 }
;; 7 succs { 8 9 }
;; 8 succs { 15 }
;; 9 succs { 15 }
;; 10 succs { 14 12 13 }
;; 11 succs { 12 }
;; 12 succs { 11 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 1 }
void window_copy_key (struct window_pane * wp, struct client * c, int key)
{
  mode_key_cmd cmd;
  int keys;
  u_int np;
  u_int n;
  struct screen * s;
  struct window_copy_mode_data * data;
  const char * word_separators;

  <bb 2> :
  data = wp->modedata;
  s = &data->screen;
  np = data->numprefix;
  if (np == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  np = 1;

  <bb 4> :
  _1 = data->inputtype;
  if (_1 == 1)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  data->inputtype = 0;
  goto <bb 10>; [INV]

  <bb 6> :
  _2 = data->inputtype;
  if (_2 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 7> :
  _3 = getchar ();
  if (_3 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  // predicted unlikely by goto predictor.
  data->inputtype = 0;
  data->inputprompt = 0B;
  goto <bb 15>; [INV]

  <bb 9> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 10> :
  switch (cmd) <default: <L20> [INV], case 29: <L19> [INV], case 34: <L13> [INV]>

  <bb 11> :
  window_pane_reset_mode (wp);
  np = np + 4294967295;

  <bb 12> :
<L19>:
  if (np != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
<L13>:
  _4 = data->inputstr;
  *_4 = 0;
  // predicted unlikely by goto predictor.
  data->inputtype = 4;
  data->inputprompt = "Goto Line";
  goto <bb 15>; [INV]

  <bb 14> :
<L20>:
  data->numprefix = 0;

  <bb 15> :
  return;

}



;; Function getchar (getchar, funcdef_no=1, decl_uid=2214, cgraph_uid=2, symbol_order=1)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__attribute__((gnu_inline))
int getchar ()
{
  int D.4302;

  <bb 2> :
  stdin.0_1 = stdin;
  D.4302 = getc (stdin.0_1);
  return D.4302;

}



;; Function window_pane_destroy (window_pane_destroy, funcdef_no=29, decl_uid=4170, cgraph_uid=30, symbol_order=31)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
void window_pane_destroy (struct window_pane * wp)
{
  <bb 2> :
  window_pane_reset_mode (wp);
  _1 = wp->cwd;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = wp->cwd;
  free (_2);

  <bb 4> :
  _3 = wp->shell;
  if (_3 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  _4 = wp->shell;
  free (_4);

  <bb 6> :
  free (wp);
  return;

}



;; Function window_destroy_panes (window_destroy_panes, funcdef_no=30, decl_uid=4173, cgraph_uid=31, symbol_order=32)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 4 5 3
;; 2 succs { 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 1 }
void window_destroy_panes (struct window * w)
{
  struct window_pane * wp;

  <bb 2> :
  goto <bb 7>; [INV]

  <bb 3> :
  wp = w->panes.tqh_first;
  _1 = wp->entry.tqe_next;
  if (_1 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _2 = wp->entry.tqe_next;
  _3 = wp->entry.tqe_prev;
  _2->entry.tqe_prev = _3;
  goto <bb 6>; [INV]

  <bb 5> :
  _4 = wp->entry.tqe_prev;
  w->panes.tqh_last = _4;

  <bb 6> :
  _5 = wp->entry.tqe_prev;
  _6 = wp->entry.tqe_next;
  *_5 = _6;
  window_pane_destroy (wp);

  <bb 7> :
  _7 = w->panes.tqh_first;
  if (_7 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  return;

}



;; Function window_index (window_index, funcdef_no=31, decl_uid=4183, cgraph_uid=32, symbol_order=33)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
int window_index (struct window * s, u_int * i)
{
  int D.4313;

  <bb 2> :
  *i = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  _1 = windows.list;
  _2 = *i;
  _3 = (long unsigned int) _2;
  _4 = _3 * 8;
  _5 = _1 + _4;
  _6 = *_5;
  if (s == _6)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.4313 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  _7 = *i;
  _8 = _7 + 1;
  *i = _8;

  <bb 6> :
  _9 = *i;
  _10 = windows.num;
  if (_9 < _10)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  D.4313 = -1;

  <bb 8> :
  return D.4313;

}



;; Function window_destroy (window_destroy, funcdef_no=32, decl_uid=4190, cgraph_uid=33, symbol_order=34)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;;
;; Loop 1
;;  header 8, multiple latches: 6 7
;;  depth 1, outer 0
;;  nodes: 8 6 7 5 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 8 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 5 10 }
;; 10 succs { 11 12 }
;; 11 succs { 12 }
;; 12 succs { 1 }
void window_destroy (struct window * w)
{
  u_int i;

  <bb 2> :
  _1 = window_index (w, &i);
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  printf ("index not found%s", "");
  exit (1);

  <bb 4> :
  _2 = windows.list;
  i.1_3 = i;
  _4 = (long unsigned int) i.1_3;
  _5 = _4 * 8;
  _6 = _2 + _5;
  *_6 = 0B;
  goto <bb 8>; [INV]

  <bb 5> :
  _7 = windows.num;
  if (_7 > 1)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _8 = windows.num;
  _9 = _8 + 4294967295;
  windows.num = _9;
  goto <bb 8>; [INV]

  <bb 7> :
  _10 = windows.list;
  free (_10);
  windows.num = 0;
  windows.list = 0B;
  windows.space = 0;

  <bb 8> :
  _11 = windows.num;
  if (_11 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _12 = windows.list;
  _13 = windows.num;
  _14 = _13 + 4294967295;
  _15 = (long unsigned int) _14;
  _16 = _15 * 8;
  _17 = _12 + _16;
  _18 = *_17;
  if (_18 == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  window_destroy_panes (w);
  _19 = w->name;
  if (_19 != 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  _20 = w->name;
  free (_20);

  <bb 12> :
  free (w);
  i = {CLOBBER};
  return;

}



;; Function window_create1 (window_create1, funcdef_no=33, decl_uid=4008, cgraph_uid=34, symbol_order=35)

Removing basic block 14
Merging blocks 18 and 19
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17
;;
;; Loop 2
;;  header 15, latch 14
;;  depth 1, outer 0
;;  nodes: 15 14
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 7 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 8 17 }
;; 8 succs { 9 10 }
;; 9 succs { }
;; 10 succs { 11 12 }
;; 11 succs { }
;; 12 succs { 13 15 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 14 16 }
;; 16 succs { 17 }
;; 17 succs { 1 }
struct window * window_create1 (u_int sx, u_int sy)
{
  u_int i;
  struct window * w;
  struct window * D.4333;

  <bb 2> :
  w = malloc (88);
  w->name = 0B;
  w->flags = 0;
  w->panes.tqh_first = 0B;
  _1 = &w->panes.tqh_first;
  w->panes.tqh_last = _1;
  w->active = 0B;
  w->lastlayout = -1;
  w->layout_root = 0B;
  w->sx = sx;
  w->sy = sy;
  i = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  _2 = windows.list;
  _3 = (long unsigned int) i;
  _4 = _3 * 8;
  _5 = _2 + _4;
  _6 = *_5;
  if (_6 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _7 = windows.list;
  _8 = (long unsigned int) i;
  _9 = _8 * 8;
  _10 = _7 + _9;
  *_10 = w;
  goto <bb 7>; [INV]

  <bb 5> :
  i = i + 1;

  <bb 6> :
  _11 = windows.num;
  if (i < _11)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  _12 = windows.num;
  if (i == _12)
    goto <bb 8>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 8> :
  _13 = windows.num;
  if (_13 > 1073741823)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  printf ("number too big%s", "");
  exit (1);

  <bb 10> :
  _14 = windows.num;
  _15 = _14 + 1;
  _16 = 1073741824 / _15;
  if (_16 <= 7)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  printf ("size too big%s", "");
  exit (1);

  <bb 12> :
  _17 = windows.space;
  if (_17 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 13> :
  windows.space = 80;
  _18 = windows.space;
  _19 = windows.list;
  _20 = xrealloc (_19, 1, _18);
  windows.list = _20;
  goto <bb 15>; [INV]

  <bb 14> :
  _21 = windows.space;
  _22 = windows.list;
  _23 = xrealloc (_22, 2, _21);
  windows.list = _23;
  _24 = windows.space;
  _25 = _24 * 2;
  windows.space = _25;

  <bb 15> :
  _26 = windows.space;
  _27 = windows.num;
  _28 = _27 + 1;
  _29 = (long unsigned int) _28;
  _30 = _29 * 8;
  if (_26 <= _30)
    goto <bb 14>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 16> :
  _31 = windows.list;
  _32 = windows.num;
  _33 = (long unsigned int) _32;
  _34 = _33 * 8;
  _35 = _31 + _34;
  *_35 = w;
  _36 = windows.num;
  _37 = _36 + 1;
  windows.num = _37;

  <bb 17> :
  w->references = 0;
  D.4333 = w;
  return D.4333;

}



;; Function window_add_pane (window_add_pane, funcdef_no=34, decl_uid=4227, cgraph_uid=35, symbol_order=36)

Merging blocks 11 and 12
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;; 2 succs { 3 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 11 }
;; 7 succs { 8 9 }
;; 8 succs { 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 1 }
struct window_pane * window_add_pane (struct window * w, u_int hlimit)
{
  struct window_pane * wp;
  struct window_pane * D.4344;

  <bb 2> :
  _1 = w->sy;
  _2 = w->sx;
  wp = window_pane_create (w, _2, _1, hlimit);
  _3 = w->panes.tqh_first;
  if (_3 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 3> :
  _4 = w->panes.tqh_first;
  wp->entry.tqe_next = _4;
  _5 = wp->entry.tqe_next;
  if (_5 != 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _6 = w->panes.tqh_first;
  _7 = &wp->entry.tqe_next;
  _6->entry.tqe_prev = _7;
  goto <bb 6>; [INV]

  <bb 5> :
  _8 = &wp->entry.tqe_next;
  w->panes.tqh_last = _8;

  <bb 6> :
  w->panes.tqh_first = wp;
  _9 = &w->panes.tqh_first;
  wp->entry.tqe_prev = _9;
  goto <bb 11>; [INV]

  <bb 7> :
  _10 = w->active;
  _11 = _10->entry.tqe_next;
  wp->entry.tqe_next = _11;
  _12 = wp->entry.tqe_next;
  if (_12 != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _13 = wp->entry.tqe_next;
  _14 = &wp->entry.tqe_next;
  _13->entry.tqe_prev = _14;
  goto <bb 10>; [INV]

  <bb 9> :
  _15 = &wp->entry.tqe_next;
  w->panes.tqh_last = _15;

  <bb 10> :
  _16 = w->active;
  _16->entry.tqe_next = wp;
  _17 = w->active;
  _18 = &_17->entry.tqe_next;
  wp->entry.tqe_prev = _18;

  <bb 11> :
  D.4344 = wp;
  return D.4344;

}



;; Function window_create (window_create, funcdef_no=35, decl_uid=4017, cgraph_uid=36, symbol_order=37)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
struct window * window_create (const char * name, const char * cmd, const char * shell, const char * cwd, u_int sx, u_int sy, u_int hlimit, char * * cause)
{
  struct window_pane * wp;
  struct window * w;
  struct window * D.4346;

  <bb 2> :
  w = window_create1 (sx, sy);
  wp = window_add_pane (w, hlimit);
  _1 = w->panes.tqh_first;
  w->active = _1;
  _2 = strdup (name);
  w->name = _2;
  D.4346 = w;
  return D.4346;

}



;; Function window_pane_create (window_pane_create, funcdef_no=36, decl_uid=4022, cgraph_uid=37, symbol_order=38)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
struct window_pane * window_pane_create (struct window * w, u_int sx, u_int sy, u_int hlimit)
{
  struct window_pane * wp;
  struct window_pane * D.4348;

  <bb 2> :
  wp = calloc (1, 600);
  wp->window = w;
  wp->shell = 0B;
  wp->cwd = 0B;
  wp->fd = -1;
  wp->event = 0B;
  wp->mode = 0B;
  wp->layout_cell = 0B;
  wp->xoff = 0;
  wp->yoff = 0;
  wp->sx = sx;
  wp->sy = sy;
  wp->pipe_fd = -1;
  wp->pipe_off = 0;
  wp->pipe_event = 0B;
  wp->saved_grid = 0B;
  D.4348 = wp;
  return D.4348;

}



;; Function main (main, funcdef_no=37, decl_uid=4254, cgraph_uid=38, symbol_order=39)

Removing basic block 7
Merging blocks 5 and 6
Merging blocks 5 and 8
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
int main ()
{
  char * env;
  u_int hlimit;
  u_int sy;
  u_int sx;
  int key;
  struct client c;
  struct window_pane * wp;
  struct window * w;
  int D.4350;

  <bb 2> :
  w = window_create ("name", "cmd", "shell", "cwd", sx, sy, hlimit, 0B);
  wp = w->active;
  window_pane_set_mode (wp, &window_copy_mode);
  goto <bb 4>; [INV]

  <bb 3> :
  scanf ("%d", &key);
  _1 = wp->mode;
  _2 = _1->key;
  key.2_3 = key;
  _2 (wp, &c, key.2_3);

  <bb 4> :
  _4 = getchar ();
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _5 = wp->mode;
  _6 = _5->free;
  _6 (wp);
  window_destroy (w);
  D.4350 = 0;
  c = {CLOBBER};
  key = {CLOBBER};
  return D.4350;

}


