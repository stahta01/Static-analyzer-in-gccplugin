digraph "test.o-openssl_uaf_4.c.015t.cfg" {
overlap=false;
subgraph "cluster_ASN1_STRING_type_new" {
	style="dashed";
	color="black";
	label="ASN1_STRING_type_new ()";
	fn_22_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_22_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_22_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|ret\ =\ malloc\ (24);\l\
|if\ (ret\ ==\ 0B)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_22_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|ASN1err\ (130,\ 65);\l\
|D.3662\ =\ 0B;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_22_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|ret-\>length\ =\ 0;\l\
|ret-\>type\ =\ type;\l\
|ret-\>data\ =\ 0B;\l\
|ret-\>flags\ =\ 0;\l\
|D.3662\ =\ ret;\l\
}"];

	fn_22_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|return\ D.3662;\l\
}"];

	fn_22_basic_block_0:s -> fn_22_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_22_basic_block_2:s -> fn_22_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_2:s -> fn_22_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_3:s -> fn_22_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_22_basic_block_4:s -> fn_22_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_22_basic_block_5:s -> fn_22_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_0:s -> fn_22_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_ASN1_mbstring_copy" {
	style="dashed";
	color="black";
	label="ASN1_mbstring_copy ()";
	fn_24_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_24_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_24_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|D.3664\ =\ ASN1_mbstring_ncopy\ (out,\ in,\ len,\ inform,\ mask,\ 0,\ 0);\l\
|return\ D.3664;\l\
}"];

	fn_24_basic_block_0:s -> fn_24_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_24_basic_block_2:s -> fn_24_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_24_basic_block_0:s -> fn_24_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_ASN1_mbstring_ncopy" {
	style="dashed";
	color="black";
	label="ASN1_mbstring_ncopy ()";
	fn_25_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_25_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_25_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|outlen\ =\ 0;\l\
|cpyfunc\ =\ 0B;\l\
|if\ (len\ ==\ -1)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_25_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|_1\ =\ strlen\ (in);\l\
|len\ =\ (int)\ _1;\l\
}"];

	fn_25_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|if\ (mask\ ==\ 0)\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_25_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|mask\ =\ 10246;\l\
}"];

	fn_25_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|switch\ (inform)\ \<default:\ \<L12\>\ [INV],\ case\ 4096:\ \<L10\>\ [INV],\ case\ 4097:\ \<L11\>\ [INV],\ case\ 4098:\ \<L4\>\ [INV],\ case\ 4100:\ \<L7\>\ [INV]\>\l\
}"];

	fn_25_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|\<L4\>:\l\
|_2\ =\ len\ &\ 1;\l\
|if\ (_2\ !=\ 0)\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
}"];

	fn_25_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|ASN1err\ (122,\ 129);\l\
|D.3672\ =\ -1;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 51\>;\ [INV]\l\
}"];

	fn_25_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|nchar\ =\ len\ \>\>\ 1;\l\
goto\ \<bb\ 16\>;\ [INV]\l\
}"];

	fn_25_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 10\>:\l\
|\<L7\>:\l\
|_3\ =\ len\ &\ 3;\l\
|if\ (_3\ !=\ 0)\l\
\ \ goto\ \<bb\ 11\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 12\>;\ [INV]\l\
}"];

	fn_25_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 11\>:\l\
|ASN1err\ (122,\ 133);\l\
|D.3672\ =\ -1;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 51\>;\ [INV]\l\
}"];

	fn_25_basic_block_12 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 12\>:\l\
|nchar\ =\ len\ \>\>\ 2;\l\
goto\ \<bb\ 16\>;\ [INV]\l\
}"];

	fn_25_basic_block_13 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 13\>:\l\
|\<L10\>:\l\
|nchar\ =\ 0;\l\
goto\ \<bb\ 16\>;\ [INV]\l\
}"];

	fn_25_basic_block_14 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 14\>:\l\
|\<L11\>:\l\
|nchar\ =\ len;\l\
goto\ \<bb\ 16\>;\ [INV]\l\
}"];

	fn_25_basic_block_15 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 15\>:\l\
|\<L12\>:\l\
|ASN1err\ (122,\ 160);\l\
|D.3672\ =\ -1;\l\
goto\ \<bb\ 51\>;\ [INV]\l\
}"];

	fn_25_basic_block_16 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 16\>:\l\
|if\ (minsize\ \>\ 0)\l\
\ \ goto\ \<bb\ 17\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 19\>;\ [INV]\l\
}"];

	fn_25_basic_block_17 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 17\>:\l\
|_4\ =\ (long\ int)\ nchar;\l\
|if\ (minsize\ \>\ _4)\l\
\ \ goto\ \<bb\ 18\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 19\>;\ [INV]\l\
}"];

	fn_25_basic_block_18 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 18\>:\l\
|ASN1err\ (122,\ 152);\l\
|BIO_snprintf\ (&strbuf,\ 32,\ \"%ld\",\ minsize);\l\
|ERR_add_error_data\ (2,\ \"minsize=\",\ &strbuf);\l\
|D.3672\ =\ -1;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 51\>;\ [INV]\l\
}"];

	fn_25_basic_block_19 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 19\>:\l\
|if\ (maxsize\ \>\ 0)\l\
\ \ goto\ \<bb\ 20\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 22\>;\ [INV]\l\
}"];

	fn_25_basic_block_20 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 20\>:\l\
|_5\ =\ (long\ int)\ nchar;\l\
|if\ (maxsize\ \<\ _5)\l\
\ \ goto\ \<bb\ 21\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 22\>;\ [INV]\l\
}"];

	fn_25_basic_block_21 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 21\>:\l\
|ASN1err\ (122,\ 151);\l\
|BIO_snprintf\ (&strbuf,\ 32,\ \"%ld\",\ maxsize);\l\
|ERR_add_error_data\ (2,\ \"maxsize=\",\ &strbuf);\l\
|D.3672\ =\ -1;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 51\>;\ [INV]\l\
}"];

	fn_25_basic_block_22 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 22\>:\l\
|outform\ =\ 4097;\l\
|_6\ =\ mask\ &\ 2;\l\
|if\ (_6\ !=\ 0)\l\
\ \ goto\ \<bb\ 23\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 24\>;\ [INV]\l\
}"];

	fn_25_basic_block_23 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 23\>:\l\
|str_type\ =\ 19;\l\
goto\ \<bb\ 33\>;\ [INV]\l\
}"];

	fn_25_basic_block_24 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 24\>:\l\
|_7\ =\ mask\ &\ 16;\l\
|if\ (_7\ !=\ 0)\l\
\ \ goto\ \<bb\ 25\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 26\>;\ [INV]\l\
}"];

	fn_25_basic_block_25 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 25\>:\l\
|str_type\ =\ 22;\l\
goto\ \<bb\ 33\>;\ [INV]\l\
}"];

	fn_25_basic_block_26 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 26\>:\l\
|_8\ =\ mask\ &\ 4;\l\
|if\ (_8\ !=\ 0)\l\
\ \ goto\ \<bb\ 27\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 28\>;\ [INV]\l\
}"];

	fn_25_basic_block_27 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 27\>:\l\
|str_type\ =\ 20;\l\
goto\ \<bb\ 33\>;\ [INV]\l\
}"];

	fn_25_basic_block_28 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 28\>:\l\
|_9\ =\ mask\ &\ 2048;\l\
|if\ (_9\ !=\ 0)\l\
\ \ goto\ \<bb\ 29\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 30\>;\ [INV]\l\
}"];

	fn_25_basic_block_29 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 29\>:\l\
|str_type\ =\ 30;\l\
|outform\ =\ 4098;\l\
goto\ \<bb\ 33\>;\ [INV]\l\
}"];

	fn_25_basic_block_30 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 30\>:\l\
|_10\ =\ mask\ &\ 256;\l\
|if\ (_10\ !=\ 0)\l\
\ \ goto\ \<bb\ 31\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 32\>;\ [INV]\l\
}"];

	fn_25_basic_block_31 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 31\>:\l\
|str_type\ =\ 28;\l\
|outform\ =\ 4100;\l\
goto\ \<bb\ 33\>;\ [INV]\l\
}"];

	fn_25_basic_block_32 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 32\>:\l\
|str_type\ =\ 12;\l\
|outform\ =\ 4096;\l\
}"];

	fn_25_basic_block_33 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 33\>:\l\
|if\ (out\ ==\ 0B)\l\
\ \ goto\ \<bb\ 34\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 35\>;\ [INV]\l\
}"];

	fn_25_basic_block_34 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 34\>:\l\
|D.3672\ =\ str_type;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 51\>;\ [INV]\l\
}"];

	fn_25_basic_block_35 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 35\>:\l\
|_11\ =\ *out;\l\
|if\ (_11\ !=\ 0B)\l\
\ \ goto\ \<bb\ 36\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 39\>;\ [INV]\l\
}"];

	fn_25_basic_block_36 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 36\>:\l\
|free_out\ =\ 0;\l\
|dest\ =\ *out;\l\
|_12\ =\ dest-\>data;\l\
|if\ (_12\ !=\ 0B)\l\
\ \ goto\ \<bb\ 37\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 38\>;\ [INV]\l\
}"];

	fn_25_basic_block_37 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 37\>:\l\
|dest-\>length\ =\ 0;\l\
|_13\ =\ dest-\>data;\l\
|free\ (_13);\l\
|dest-\>data\ =\ 0B;\l\
}"];

	fn_25_basic_block_38 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 38\>:\l\
|dest-\>type\ =\ str_type;\l\
goto\ \<bb\ 42\>;\ [INV]\l\
}"];

	fn_25_basic_block_39 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 39\>:\l\
|free_out\ =\ 1;\l\
|dest\ =\ ASN1_STRING_type_new\ (str_type);\l\
|if\ (dest\ ==\ 0B)\l\
\ \ goto\ \<bb\ 40\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 41\>;\ [INV]\l\
}"];

	fn_25_basic_block_40 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 40\>:\l\
|ASN1err\ (122,\ 65);\l\
|D.3672\ =\ -1;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 51\>;\ [INV]\l\
}"];

	fn_25_basic_block_41 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 41\>:\l\
|*out\ =\ dest;\l\
}"];

	fn_25_basic_block_42 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 42\>:\l\
|if\ (inform\ ==\ outform)\l\
\ \ goto\ \<bb\ 43\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 46\>;\ [INV]\l\
}"];

	fn_25_basic_block_43 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 43\>:\l\
|_14\ =\ ASN1_STRING_set\ (dest,\ in,\ len);\l\
|if\ (_14\ ==\ 0)\l\
\ \ goto\ \<bb\ 44\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 45\>;\ [INV]\l\
}"];

	fn_25_basic_block_44 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 44\>:\l\
|ASN1err\ (122,\ 65);\l\
|D.3672\ =\ -1;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 51\>;\ [INV]\l\
}"];

	fn_25_basic_block_45 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 45\>:\l\
|D.3672\ =\ str_type;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 51\>;\ [INV]\l\
}"];

	fn_25_basic_block_46 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 46\>:\l\
|_15\ =\ outlen\ +\ 1;\l\
|_16\ =\ (long\ unsigned\ int)\ _15;\l\
|_17\ =\ malloc\ (_16);\l\
|p\ =\ _17;\l\
|p.0_18\ =\ p;\l\
|if\ (p.0_18\ ==\ 0B)\l\
\ \ goto\ \<bb\ 47\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 50\>;\ [INV]\l\
}"];

	fn_25_basic_block_47 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 47\>:\l\
|if\ (free_out\ !=\ 0)\l\
\ \ goto\ \<bb\ 48\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 49\>;\ [INV]\l\
}"];

	fn_25_basic_block_48 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 48\>:\l\
|ASN1_STRING_free\ (dest);\l\
}"];

	fn_25_basic_block_49 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 49\>:\l\
|ASN1err\ (122,\ 65);\l\
|D.3672\ =\ -1;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 51\>;\ [INV]\l\
}"];

	fn_25_basic_block_50 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 50\>:\l\
|dest-\>length\ =\ outlen;\l\
|p.1_19\ =\ p;\l\
|dest-\>data\ =\ p.1_19;\l\
|p.2_20\ =\ p;\l\
|_21\ =\ (sizetype)\ outlen;\l\
|_22\ =\ p.2_20\ +\ _21;\l\
|*_22\ =\ 0;\l\
|traverse_string\ (in,\ len,\ inform,\ cpyfunc,\ &p);\l\
|D.3672\ =\ str_type;\l\
}"];

	fn_25_basic_block_51 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 51\>:\l\
|p\ =\ \{CLOBBER\};\l\
|strbuf\ =\ \{CLOBBER\};\l\
|return\ D.3672;\l\
}"];

	fn_25_basic_block_0:s -> fn_25_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_2:s -> fn_25_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_2:s -> fn_25_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_3:s -> fn_25_basic_block_4:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_4:s -> fn_25_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_4:s -> fn_25_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_5:s -> fn_25_basic_block_6:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_6:s -> fn_25_basic_block_15:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_6:s -> fn_25_basic_block_13:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_6:s -> fn_25_basic_block_14:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_6:s -> fn_25_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_6:s -> fn_25_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_7:s -> fn_25_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_7:s -> fn_25_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_8:s -> fn_25_basic_block_51:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_9:s -> fn_25_basic_block_16:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_10:s -> fn_25_basic_block_11:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_10:s -> fn_25_basic_block_12:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_11:s -> fn_25_basic_block_51:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_12:s -> fn_25_basic_block_16:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_13:s -> fn_25_basic_block_16:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_14:s -> fn_25_basic_block_16:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_15:s -> fn_25_basic_block_51:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_16:s -> fn_25_basic_block_17:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_16:s -> fn_25_basic_block_19:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_17:s -> fn_25_basic_block_18:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_17:s -> fn_25_basic_block_19:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_18:s -> fn_25_basic_block_51:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_19:s -> fn_25_basic_block_20:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_19:s -> fn_25_basic_block_22:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_20:s -> fn_25_basic_block_21:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_20:s -> fn_25_basic_block_22:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_21:s -> fn_25_basic_block_51:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_22:s -> fn_25_basic_block_23:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_22:s -> fn_25_basic_block_24:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_23:s -> fn_25_basic_block_33:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_24:s -> fn_25_basic_block_25:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_24:s -> fn_25_basic_block_26:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_25:s -> fn_25_basic_block_33:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_26:s -> fn_25_basic_block_27:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_26:s -> fn_25_basic_block_28:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_27:s -> fn_25_basic_block_33:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_28:s -> fn_25_basic_block_29:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_28:s -> fn_25_basic_block_30:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_29:s -> fn_25_basic_block_33:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_30:s -> fn_25_basic_block_31:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_30:s -> fn_25_basic_block_32:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_31:s -> fn_25_basic_block_33:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_32:s -> fn_25_basic_block_33:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_33:s -> fn_25_basic_block_34:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_33:s -> fn_25_basic_block_35:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_34:s -> fn_25_basic_block_51:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_35:s -> fn_25_basic_block_36:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_35:s -> fn_25_basic_block_39:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_36:s -> fn_25_basic_block_37:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_36:s -> fn_25_basic_block_38:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_37:s -> fn_25_basic_block_38:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_38:s -> fn_25_basic_block_42:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_39:s -> fn_25_basic_block_40:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_39:s -> fn_25_basic_block_41:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_40:s -> fn_25_basic_block_51:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_41:s -> fn_25_basic_block_42:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_42:s -> fn_25_basic_block_43:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_42:s -> fn_25_basic_block_46:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_43:s -> fn_25_basic_block_44:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_43:s -> fn_25_basic_block_45:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_44:s -> fn_25_basic_block_51:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_45:s -> fn_25_basic_block_51:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_46:s -> fn_25_basic_block_47:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_46:s -> fn_25_basic_block_50:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_47:s -> fn_25_basic_block_48:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_47:s -> fn_25_basic_block_49:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_48:s -> fn_25_basic_block_49:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_49:s -> fn_25_basic_block_51:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_50:s -> fn_25_basic_block_51:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_51:s -> fn_25_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_0:s -> fn_25_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_ASN1_STRING_to_UTF8" {
	style="dashed";
	color="black";
	label="ASN1_STRING_to_UTF8 ()";
	fn_26_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_26_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_26_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|str\ =\ &stmp;\l\
|if\ (in\ ==\ 0B)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_26_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|D.3719\ =\ -1;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 11\>;\ [INV]\l\
}"];

	fn_26_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|type\ =\ in-\>type;\l\
|type.3_1\ =\ (unsigned\ int)\ type;\l\
|if\ (type.3_1\ \>\ 30)\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_26_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|D.3719\ =\ -1;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 11\>;\ [INV]\l\
}"];

	fn_26_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|_2\ =\ tag2nbyte[type];\l\
|mbflag\ =\ (int)\ _2;\l\
|if\ (mbflag\ ==\ -1)\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
}"];

	fn_26_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|D.3719\ =\ -1;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 11\>;\ [INV]\l\
}"];

	fn_26_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|mbflag\ =\ mbflag\ \|\ 4096;\l\
|stmp.data\ =\ 0B;\l\
|stmp.length\ =\ 0;\l\
|_3\ =\ in-\>length;\l\
|_4\ =\ in-\>data;\l\
|ret\ =\ ASN1_mbstring_copy\ (&str,\ _4,\ _3,\ mbflag,\ 8192);\l\
|if\ (ret\ \<\ 0)\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 10\>;\ [INV]\l\
}"];

	fn_26_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|D.3719\ =\ ret;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 11\>;\ [INV]\l\
}"];

	fn_26_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 10\>:\l\
|_5\ =\ stmp.data;\l\
|*out\ =\ _5;\l\
|D.3719\ =\ stmp.length;\l\
}"];

	fn_26_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 11\>:\l\
|stmp\ =\ \{CLOBBER\};\l\
|str\ =\ \{CLOBBER\};\l\
|return\ D.3719;\l\
}"];

	fn_26_basic_block_0:s -> fn_26_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_2:s -> fn_26_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_2:s -> fn_26_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_3:s -> fn_26_basic_block_11:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_4:s -> fn_26_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_4:s -> fn_26_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_5:s -> fn_26_basic_block_11:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_6:s -> fn_26_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_6:s -> fn_26_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_7:s -> fn_26_basic_block_11:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_8:s -> fn_26_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_8:s -> fn_26_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_9:s -> fn_26_basic_block_11:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_10:s -> fn_26_basic_block_11:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_11:s -> fn_26_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_0:s -> fn_26_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_main" {
	style="dashed";
	color="black";
	label="main ()";
	fn_28_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_28_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_28_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|b\ =\ \"bbbb\";\l\
|peername\ =\ b;\l\
|blen\ =\ strlen\ (b);\l\
|do_check_string\ (&a,\ cmp_type,\ equal_nocase,\ flags,\ b,\ blen,\ &peername);\l\
|D.3728\ =\ 0;\l\
|a\ =\ \{CLOBBER\};\l\
|peername\ =\ \{CLOBBER\};\l\
|return\ D.3728;\l\
}"];

	fn_28_basic_block_0:s -> fn_28_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_2:s -> fn_28_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_0:s -> fn_28_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_equal_nocase" {
	style="dashed";
	color="black";
	label="equal_nocase ()";
	subgraph cluster_23_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	fn_23_basic_block_14 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 14\>:\l\
|pattern_len.8_9\ =\ pattern_len;\l\
|if\ (pattern_len.8_9\ !=\ 0)\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 15\>;\ [INV]\l\
}"];

	fn_23_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|pattern.5_2\ =\ pattern;\l\
|l\ =\ *pattern.5_2;\l\
|r\ =\ *subject;\l\
|if\ (l\ ==\ 0)\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_23_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|if\ (l\ !=\ r)\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 13\>;\ [INV]\l\
}"];

	fn_23_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|_3\ =\ l\ +\ 191;\l\
|if\ (_3\ \<=\ 25)\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
}"];

	fn_23_basic_block_13 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 13\>:\l\
|pattern.6_5\ =\ pattern;\l\
|_6\ =\ pattern.6_5\ +\ 1;\l\
|pattern\ =\ _6;\l\
|subject\ =\ subject\ +\ 1;\l\
|pattern_len.7_7\ =\ pattern_len;\l\
|_8\ =\ pattern_len.7_7\ +\ 18446744073709551615;\l\
|pattern_len\ =\ _8;\l\
}"];

	fn_23_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|l\ =\ l\ +\ 32;\l\
}"];

	fn_23_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|_4\ =\ r\ +\ 191;\l\
|if\ (_4\ \<=\ 25)\l\
\ \ goto\ \<bb\ 10\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 11\>;\ [INV]\l\
}"];

	fn_23_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 10\>:\l\
|r\ =\ r\ +\ 32;\l\
}"];

	fn_23_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 11\>:\l\
|if\ (l\ !=\ r)\l\
\ \ goto\ \<bb\ 12\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 13\>;\ [INV]\l\
}"];

	}
	fn_23_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_23_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_23_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|skip_prefix\ (&pattern,\ &pattern_len,\ subject,\ subject_len,\ flags);\l\
|pattern_len.4_1\ =\ pattern_len;\l\
|if\ (subject_len\ !=\ pattern_len.4_1)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 14\>;\ [INV]\l\
}"];

	fn_23_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|D.3733\ =\ 0;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 16\>;\ [INV]\l\
}"];

	fn_23_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|D.3733\ =\ 0;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 16\>;\ [INV]\l\
}"];

	fn_23_basic_block_12 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 12\>:\l\
|D.3733\ =\ 0;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 16\>;\ [INV]\l\
}"];

	fn_23_basic_block_15 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 15\>:\l\
|D.3733\ =\ 1;\l\
}"];

	fn_23_basic_block_16 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 16\>:\l\
|return\ D.3733;\l\
}"];

	fn_23_basic_block_0:s -> fn_23_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_23_basic_block_2:s -> fn_23_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_2:s -> fn_23_basic_block_14:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_3:s -> fn_23_basic_block_16:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_23_basic_block_4:s -> fn_23_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_4:s -> fn_23_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_5:s -> fn_23_basic_block_16:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_23_basic_block_6:s -> fn_23_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_6:s -> fn_23_basic_block_13:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_7:s -> fn_23_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_7:s -> fn_23_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_8:s -> fn_23_basic_block_9:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_23_basic_block_9:s -> fn_23_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_9:s -> fn_23_basic_block_11:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_10:s -> fn_23_basic_block_11:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_23_basic_block_11:s -> fn_23_basic_block_12:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_11:s -> fn_23_basic_block_13:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_12:s -> fn_23_basic_block_16:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_23_basic_block_13:s -> fn_23_basic_block_14:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_23_basic_block_14:s -> fn_23_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_14:s -> fn_23_basic_block_15:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_15:s -> fn_23_basic_block_16:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_23_basic_block_16:s -> fn_23_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_0:s -> fn_23_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_do_check_string" {
	style="dashed";
	color="black";
	label="do_check_string ()";
	fn_27_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_27_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_27_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|rv\ =\ 0;\l\
|_1\ =\ a-\>data;\l\
|if\ (_1\ ==\ 0B)\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
}"];

	fn_27_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|_2\ =\ a-\>length;\l\
|if\ (_2\ ==\ 0)\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_27_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|D.3748\ =\ 0;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 21\>;\ [INV]\l\
}"];

	fn_27_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|if\ (cmp_type\ \>\ 0)\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 15\>;\ [INV]\l\
}"];

	fn_27_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|_3\ =\ a-\>type;\l\
|if\ (cmp_type\ !=\ _3)\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
}"];

	fn_27_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|D.3748\ =\ 0;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 21\>;\ [INV]\l\
}"];

	fn_27_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|if\ (cmp_type\ ==\ 22)\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 10\>;\ [INV]\l\
}"];

	fn_27_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|_4\ =\ a-\>length;\l\
|_5\ =\ (long\ unsigned\ int)\ _4;\l\
|_6\ =\ a-\>data;\l\
|rv\ =\ equal\ (_6,\ _5,\ b,\ blen,\ flags);\l\
goto\ \<bb\ 13\>;\ [INV]\l\
}"];

	fn_27_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 10\>:\l\
|_7\ =\ a-\>length;\l\
|_8\ =\ (int)\ blen;\l\
|if\ (_7\ ==\ _8)\l\
\ \ goto\ \<bb\ 11\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 13\>;\ [INV]\l\
}"];

	fn_27_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 11\>:\l\
|_9\ =\ a-\>data;\l\
|_10\ =\ memcmp\ (_9,\ b,\ blen);\l\
|if\ (_10\ ==\ 0)\l\
\ \ goto\ \<bb\ 12\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 13\>;\ [INV]\l\
}"];

	fn_27_basic_block_12 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 12\>:\l\
|rv\ =\ 1;\l\
}"];

	fn_27_basic_block_13 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 13\>:\l\
|_11\ =\ rv\ \>\ 0;\l\
|_12\ =\ peername\ !=\ 0B;\l\
|_13\ =\ _11\ &\ _12;\l\
|if\ (_13\ !=\ 0)\l\
\ \ goto\ \<bb\ 14\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 20\>;\ [INV]\l\
}"];

	fn_27_basic_block_14 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 14\>:\l\
|_14\ =\ a-\>length;\l\
|_15\ =\ a-\>data;\l\
|_16\ =\ BUF_strndup\ (_15,\ _14);\l\
|_17\ =\ (long\ int)\ _16;\l\
|_18\ =\ (char\ *)\ _17;\l\
|*peername\ =\ _18;\l\
goto\ \<bb\ 20\>;\ [INV]\l\
}"];

	fn_27_basic_block_15 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 15\>:\l\
|astrlen\ =\ ASN1_STRING_to_UTF8\ (&astr,\ a);\l\
|if\ (astrlen\ \<\ 0)\l\
\ \ goto\ \<bb\ 16\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 17\>;\ [INV]\l\
}"];

	fn_27_basic_block_16 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 16\>:\l\
|D.3748\ =\ -1;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
|astr\ =\ \{CLOBBER\};\l\
goto\ \<bb\ 21\>;\ [INV]\l\
}"];

	fn_27_basic_block_17 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 17\>:\l\
|_19\ =\ (long\ unsigned\ int)\ astrlen;\l\
|astr.9_20\ =\ astr;\l\
|rv\ =\ equal\ (astr.9_20,\ _19,\ b,\ blen,\ flags);\l\
|astr.10_21\ =\ astr;\l\
|free\ (astr.10_21);\l\
|_22\ =\ rv\ \>\ 0;\l\
|_23\ =\ peername\ !=\ 0B;\l\
|_24\ =\ _22\ &\ _23;\l\
|if\ (_24\ !=\ 0)\l\
\ \ goto\ \<bb\ 18\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 19\>;\ [INV]\l\
}"];

	fn_27_basic_block_18 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 18\>:\l\
|astr.11_25\ =\ astr;\l\
|_26\ =\ BUF_strndup\ (astr.11_25,\ astrlen);\l\
|_27\ =\ (long\ int)\ _26;\l\
|_28\ =\ (char\ *)\ _27;\l\
|*peername\ =\ _28;\l\
}"];

	fn_27_basic_block_19 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 19\>:\l\
|astr\ =\ \{CLOBBER\};\l\
}"];

	fn_27_basic_block_20 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 20\>:\l\
|D.3748\ =\ rv;\l\
}"];

	fn_27_basic_block_21 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 21\>:\l\
|return\ D.3748;\l\
}"];

	fn_27_basic_block_0:s -> fn_27_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_2:s -> fn_27_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_2:s -> fn_27_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_3:s -> fn_27_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_3:s -> fn_27_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_4:s -> fn_27_basic_block_21:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_5:s -> fn_27_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_5:s -> fn_27_basic_block_15:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_6:s -> fn_27_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_6:s -> fn_27_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_7:s -> fn_27_basic_block_21:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_8:s -> fn_27_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_8:s -> fn_27_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_9:s -> fn_27_basic_block_13:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_10:s -> fn_27_basic_block_11:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_10:s -> fn_27_basic_block_13:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_11:s -> fn_27_basic_block_12:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_11:s -> fn_27_basic_block_13:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_12:s -> fn_27_basic_block_13:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_13:s -> fn_27_basic_block_14:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_13:s -> fn_27_basic_block_20:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_14:s -> fn_27_basic_block_20:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_15:s -> fn_27_basic_block_16:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_15:s -> fn_27_basic_block_17:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_16:s -> fn_27_basic_block_21:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_17:s -> fn_27_basic_block_18:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_17:s -> fn_27_basic_block_19:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_18:s -> fn_27_basic_block_19:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_19:s -> fn_27_basic_block_20:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_20:s -> fn_27_basic_block_21:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_21:s -> fn_27_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_0:s -> fn_27_basic_block_1:n [style="invis",constraint=true];
}
}
