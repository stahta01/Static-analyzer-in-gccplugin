
;; Function main (main, funcdef_no=2, decl_uid=3985, cgraph_uid=0, symbol_order=67) (executed once)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 23 20 3 22 4 24 5 19 6 26 7 27 21 8 28 9 29 10 11 12 13 14 15 16 17 25 18 30
;;
;; Loop 1
;;  header 6, latch 21
;;  depth 1, outer 0
;;  nodes: 6 21 7
;;
;; Loop 2
;;  header 3, latch 22
;;  depth 1, outer 0
;;  nodes: 3 22
;; 2 succs { 20 23 }
;; 23 succs { 12 }
;; 20 succs { 3 }
;; 3 succs { 22 4 }
;; 22 succs { 3 }
;; 4 succs { 5 24 }
;; 24 succs { 12 }
;; 5 succs { 19 25 }
;; 19 succs { 6 }
;; 6 succs { 7 26 }
;; 26 succs { 12 }
;; 7 succs { 21 27 }
;; 27 succs { 18 }
;; 21 succs { 6 }
;; 8 succs { 9 28 }
;; 28 succs { 11 }
;; 9 succs { 10 29 }
;; 29 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 17 }
;; 14 succs { 15 16 }
;; 15 succs { 17 }
;; 16 succs { 17 }
;; 17 succs { 1 }
;; 25 succs { 18 }
;; 18 succs { 8 30 }
;; 30 succs { 11 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

base_63 -> { base_45 }
base_64 -> { base_79 }
Incremental SSA update started at block: 3
Number of blocks in CFG: 31
Number of blocks to update: 11 ( 35%)


main ()
{
  const char * base;
  const char * D.4119;
  const char * name;
  const char * D.4112;
  const char * base;
  char * dirname;
  char * D.4107;
  void * ret;
  void * D.4097;
  char * progname;
  size_t progsize;
  char * oldloc;
  wchar_t * progname_copy;
  bool D.4090;
  int _4;
  int _12;
  long int _13;
  const char * _14;
  long unsigned int _17;
  long unsigned int _18;
  struct FILE * _20;
  int _21;
  long unsigned int _24;
  char _25;
  char _26;
  long unsigned int _34;
  struct FILE * _36;
  int _37;
  char _46;
  long int _47;
  long int _50;
  long unsigned int _51;
  long int _53;
  long unsigned int _56;
  long int _57;
  char _60;
  char _61;
  long int _70;
  sizetype _73;
  char * _74;
  char * _76;
  char _81;
  int _84;
  int _85;

  <bb 2> [14.44%]:
  _26 = MEM[(const char *)0B];
  if (_26 != 0)
    goto <bb 20>; [85.00%]
  else
    goto <bb 23>; [15.00%]

  <bb 23> [2.17%]:
  goto <bb 12>; [100.00%]

  <bb 20> [12.27%]:

  <bb 3> [81.81%]:
  # name_104 = PHI <base_79(22), 0B(20)>
  base_79 = name_104 + 1;
  name_80 = base_79;
  _81 = *base_79;
  if (_81 != 0)
    goto <bb 22>; [85.00%]
  else
    goto <bb 4>; [15.00%]

  <bb 22> [69.54%]:
  goto <bb 3>; [100.00%]

  <bb 4> [12.27%]:
  # base_64 = PHI <base_79(3)>
  if (base_64 != 0B)
    goto <bb 5>; [100.00%]
  else
    goto <bb 24>; [0.00%]

  <bb 24> [0.00%]:
  goto <bb 12>; [100.00%]

  <bb 5> [13.32%]:
  _25 = MEM[(const char *)base_64 + -1B];
  if (_25 == 47)
    goto <bb 19>; [92.50%]
  else
    goto <bb 25>; [7.50%]

  <bb 19> [12.32%]:

  <bb 6> [85.60%]:
  # base_27 = PHI <base_45(21), base_64(19)>
  base_45 = base_27 + 18446744073709551615;
  if (base_45 != 0B)
    goto <bb 7>; [92.50%]
  else
    goto <bb 26>; [7.50%]

  <bb 26> [6.42%]:
  goto <bb 12>; [100.00%]

  <bb 7> [79.18%]:
  _46 = MEM[(const char *)base_45 + -1B];
  if (_46 == 47)
    goto <bb 21>; [92.50%]
  else
    goto <bb 27>; [7.50%]

  <bb 27> [5.94%]:
  # base_63 = PHI <base_45(7)>
  goto <bb 18>; [100.00%]

  <bb 21> [73.24%]:
  goto <bb 6>; [100.00%]

  <bb 8> [4.52%]:
  _60 = MEM[(const char *)2B];
  if (_60 == 47)
    goto <bb 9>; [34.00%]
  else
    goto <bb 28>; [66.00%]

  <bb 28> [2.98%]:
  goto <bb 11>; [100.00%]

  <bb 9> [1.54%]:
  _61 = MEM[(const char *)0B];
  if (_61 != 47)
    goto <bb 10>; [66.00%]
  else
    goto <bb 29>; [34.00%]

  <bb 29> [0.52%]:
  goto <bb 11>; [100.00%]

  <bb 10> [1.01%]:
  MEM[(char *)dirname_52 + 2B] = 46;

  <bb 11> [13.29%]:
  # base_69 = PHI <base_82(30), 2B(28), 2B(29), 3B(10)>
  _70 = (long int) base_69;
  _73 = (sizetype) base_69;
  _74 = dirname_52 + _73;
  *_74 = 0;

  <bb 12> [14.44%]:
  # _76 = PHI <0B(23), dirname_52(11), 0B(26), 0B(24)>
  progname_11 = concat (_76, "bin");
  _12 = setlocale ("LC_ALL", 0B);
  _13 = (long int) _12;
  _14 = (const char *) _13;
  oldloc_15 = strdup (_14);
  setlocale ("LC_ALL", "");
  progsize_16 = strlen (progname_11);
  _17 = progsize_16 + 1;
  _18 = _17 * 4;
  ret_41 = malloc (_18);
  if (ret_41 == 0B)
    goto <bb 13>; [15.24%]
  else
    goto <bb 14>; [84.76%]

  <bb 13> [2.20%]:
  free (oldloc_15);
  _20 = stderr;
  _21 = __fprintf_chk (_20, 1, "out of memory\n");
  goto <bb 17>; [100.00%]

  <bb 14> [12.24%]:
  _24 = __builtin_object_size (ret_41, 1);
  _34 = __mbstowcs_alias (ret_41, progname_11, _17);
  if (_34 == 18446744073709551615)
    goto <bb 15>; [30.50%]
  else
    goto <bb 16>; [69.50%]

  <bb 15> [3.73%]:
  free (oldloc_15);
  free (ret_41);
  _36 = stderr;
  _37 = __fprintf_chk (_36, 1, "Could not convert python path to string\n");
  goto <bb 17>; [100.00%]

  <bb 16> [8.50%]:
  setlocale ("LC_ALL", oldloc_15);
  free (oldloc_15);
  _84 = MEM[(int *)ret_41];
  _85 = __printf_chk (1, "%d\n", _84);
  free (ret_41);

  <bb 17> [14.44%]:
  concat ("dummy", "");
  _4 = __printf_chk (1, "%d\n", 1835890020);
  return 0;

  <bb 25> [1.00%]:

  <bb 18> [13.29%]:
  # base_82 = PHI <base_64(25), base_63(27)>
  _47 = (long int) base_82;
  _50 = _47 + 2;
  _51 = (long unsigned int) _50;
  dirname_52 = malloc (_51);
  _53 = _47;
  _56 = (long unsigned int) base_82;
  memcpy (dirname_52, 0B, _56);
  _57 = _47;
  if (base_82 == 2B)
    goto <bb 8>; [34.00%]
  else
    goto <bb 30>; [66.00%]

  <bb 30> [8.77%]:
  goto <bb 11>; [100.00%]

}


