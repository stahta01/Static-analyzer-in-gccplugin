
;; Function nextword (nextword, funcdef_no=1, decl_uid=3990, cgraph_uid=4, symbol_order=63)

;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 36 31 3 37 4 5 38 35 6 7 8 9 10 39 11 30 12 40 13 14 41 33 34 15 42 16 29 17 18 19 20 21 22 23 44 32 43 24 45 25 26 27 28
;;
;; Loop 4
;;  header 17, latch 32
;;  depth 1, outer 0
;;  nodes: 17 32 23 19 20 21 22 18
;;
;; Loop 3
;;  header 12, latch 33
;;  depth 1, outer 0
;;  nodes: 12 33 14 40 13
;;
;; Loop 2
;;  header 15, latch 34
;;  depth 1, outer 0
;;  nodes: 15 34
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 38 6 3 5 35 4 37 27 9
;;
;; Loop 5
;;  header 5, latch 35
;;  depth 2, outer 1
;;  nodes: 5 35
;; 2 succs { 36 31 }
;; 36 succs { 26 }
;; 31 succs { 8 }
;; 3 succs { 37 6 }
;; 37 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 35 38 }
;; 38 succs { 7 }
;; 35 succs { 5 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 3 9 }
;; 9 succs { 27 10 }
;; 10 succs { 39 11 }
;; 39 succs { 26 }
;; 11 succs { 30 28 }
;; 30 succs { 12 }
;; 12 succs { 13 40 }
;; 40 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 33 41 }
;; 41 succs { 16 }
;; 33 succs { 12 }
;; 34 succs { 15 }
;; 15 succs { 34 42 }
;; 42 succs { 16 }
;; 16 succs { 29 43 }
;; 29 succs { 17 }
;; 17 succs { 18 22 }
;; 18 succs { 21 20 19 }
;; 19 succs { 23 }
;; 20 succs { 23 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 32 44 }
;; 44 succs { 24 }
;; 32 succs { 17 }
;; 43 succs { 24 }
;; 24 succs { 25 45 }
;; 45 succs { 26 }
;; 25 succs { 26 }
;; 26 succs { 1 }
;; 27 succs { 4 }
;; 28 succs { 15 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

string_1 -> { string_91 }
_9 -> { _5 }
string_10 -> { string_43 }
string_11 -> { string_45 }
length_32 -> { length_53 }
string_34 -> { string_64 }
dst_39 -> { dst_50 }
length_93 -> { length_65 }
Incremental SSA update started at block: 8
Number of blocks in CFG: 46
Number of blocks to update: 27 ( 59%)


nextword (char * string, char * * word)
{
  int length;
  char * src;
  char * dst;
  int idx;
  char * word_start;
  _Bool _2;
  _Bool _3;
  _Bool _4;
  char _5;
  unsigned char _6;
  int _7;
  int _8;
  char _9;
  char _12;
  char _13;
  char _14;
  unsigned char _15;
  int _16;
  int _17;
  int _18;
  long unsigned int _19;
  void * _20;
  sizetype _21;
  char * _22;
  char _23;
  sizetype _24;
  sizetype _25;
  char * _26;
  char _27;
  int _28;
  sizetype _30;
  sizetype _31;
  sizetype _36;
  char * _37;
  char _40;
  char _41;
  int _42;
  char * _56;
  int _63;
  unsigned char _74;
  char * _77;
  char _90;

  <bb 2> [6.05%]:
  if (string_61(D) == 0B)
    goto <bb 36>; [4.07%]
  else
    goto <bb 31>; [95.93%]

  <bb 36> [0.25%]:
  goto <bb 26>; [100.00%]

  <bb 31> [5.80%]:
  goto <bb 8>; [100.00%]

  <bb 3> [38.66%]:
  if (_5 == 45)
    goto <bb 37>; [0.00%]
  else
    goto <bb 6>; [100.00%]

  <bb 37> [0.00%]:

  <bb 4> [15.00%]:

  <bb 5> [85.00%]:
  # string_104 = PHI <string_91(35), string_43(4)>
  string_91 = string_104 + 1;
  _90 = *string_91;
  _2 = _90 != 0;
  _3 = _90 != 10;
  _4 = _2 & _3;
  if (_4 != 0)
    goto <bb 35>; [85.00%]
  else
    goto <bb 38>; [15.00%]

  <bb 38> [12.75%]:
  # string_1 = PHI <string_91(5)>
  goto <bb 7>; [100.00%]

  <bb 35> [72.25%]:
  goto <bb 5>; [100.00%]

  <bb 6> [56.53%]:
  string_89 = string_43 + 1;

  <bb 7> [71.53%]:
  # string_60 = PHI <string_1(38), string_89(6)>

  <bb 8> [77.33%]:
  # string_43 = PHI <string_60(7), string_61(D)(31)>
  _5 = *string_43;
  _6 = (unsigned char) _5;
  _7 = (int) _6;
  _8 = isspace (_7);
  if (_8 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 9> [38.67%]:
  if (_5 == 45)
    goto <bb 27>; [85.00%]
  else
    goto <bb 10>; [15.00%]

  <bb 10> [5.80%]:
  # _9 = PHI <_5(9)>
  # string_10 = PHI <string_43(9)>
  if (_9 == 0)
    goto <bb 39>; [9.00%]
  else
    goto <bb 11>; [91.00%]

  <bb 39> [0.52%]:
  goto <bb 26>; [100.00%]

  <bb 11> [5.28%]:
  if (_9 == 34)
    goto <bb 30>; [34.00%]
  else
    goto <bb 28>; [66.00%]

  <bb 30> [1.80%]:

  <bb 12> [11.96%]:
  # string_44 = PHI <string_10(30), string_45(33)>
  # length_52 = PHI <0(30), length_53(33)>
  _12 = MEM[(char *)string_44 + 1B];
  if (_12 == 92)
    goto <bb 13>; [34.00%]
  else
    goto <bb 40>; [66.00%]

  <bb 40> [7.89%]:
  string_66 = string_44 + 1;
  length_67 = length_52 + 1;
  goto <bb 14>; [100.00%]

  <bb 13> [4.07%]:
  string_68 = &MEM[(void *)string_44 + 3B];
  length_69 = length_52 + 3;

  <bb 14> [11.96%]:
  # string_45 = PHI <string_66(40), string_68(13)>
  # length_53 = PHI <length_67(40), length_69(13)>
  _13 = *string_45;
  if (_13 != 34)
    goto <bb 33>; [85.00%]
  else
    goto <bb 41>; [15.00%]

  <bb 41> [1.79%]:
  # string_11 = PHI <string_45(14)>
  # length_32 = PHI <length_53(14)>
  goto <bb 16>; [100.00%]

  <bb 33> [10.17%]:
  goto <bb 12>; [100.00%]

  <bb 34> [16.26%]:

  <bb 15> [19.74%]:
  # string_110 = PHI <string_64(34), string_10(28)>
  # length_111 = PHI <length_65(34), 0(28)>
  string_64 = string_110 + 1;
  length_65 = length_111 + 1;
  _14 = *string_64;
  _15 = (unsigned char) _14;
  _16 = (int) _15;
  _17 = isspace (_16);
  if (_17 == 0)
    goto <bb 34>; [82.36%]
  else
    goto <bb 42>; [17.64%]

  <bb 42> [3.48%]:
  # string_34 = PHI <string_64(15)>
  # length_93 = PHI <length_65(15)>

  <bb 16> [5.28%]:
  # string_47 = PHI <string_11(41), string_34(42)>
  # length_55 = PHI <length_32(41), length_93(42)>
  _18 = length_55 + 1;
  _19 = (long unsigned int) _18;
  _20 = malloc (_19);
  *word_71(D) = _20;
  dst_73 = _20;
  if (length_55 > 0)
    goto <bb 29>; [85.00%]
  else
    goto <bb 43>; [15.00%]

  <bb 29> [4.49%]:

  <bb 17> [29.90%]:
  # idx_105 = PHI <idx_88(32), 0(29)>
  # dst_106 = PHI <dst_50(32), _20(29)>
  _21 = (sizetype) idx_105;
  _22 = string_10 + _21;
  _23 = *_22;
  if (_23 == 92)
    goto <bb 18>; [34.00%]
  else
    goto <bb 22>; [66.00%]

  <bb 18> [10.17%]:
  _24 = _21;
  _25 = _21 + 1;
  _26 = string_10 + _25;
  _27 = *_26;
  _28 = (int) _27;
  switch (_27) <default: <L2> [33.33%], case 34: <L1> [33.33%], case 92: <L1> [33.33%], case 110: <L0> [33.33%]>

<L0> [3.39%]:
  dst_80 = dst_106 + 1;
  *dst_106 = 10;
  idx_82 = idx_105 + 1;
  goto <bb 23>; [100.00%]

<L1> [3.39%]:
  _30 = _21;
  _31 = _25;
  dst_83 = dst_106 + 1;
  *dst_106 = _27;
  idx_85 = idx_105 + 1;
  goto <bb 23>; [100.00%]

<L2> [3.39%]:
  dst_86 = dst_106 + 1;
  *dst_106 = 92;
  goto <bb 23>; [100.00%]

  <bb 22> [19.74%]:
  _36 = _21;
  _37 = _22;
  dst_78 = dst_106 + 1;
  *dst_106 = _23;

  <bb 23> [29.90%]:
  # idx_48 = PHI <idx_82(19), idx_85(20), idx_105(21), idx_105(22)>
  # dst_50 = PHI <dst_80(19), dst_83(20), dst_86(21), dst_78(22)>
  idx_88 = idx_48 + 1;
  if (length_55 > idx_88)
    goto <bb 32>; [85.00%]
  else
    goto <bb 44>; [15.00%]

  <bb 44> [4.49%]:
  # dst_39 = PHI <dst_50(23)>
  goto <bb 24>; [100.00%]

  <bb 32> [25.42%]:
  goto <bb 17>; [100.00%]

  <bb 43> [0.79%]:

  <bb 24> [5.28%]:
  # dst_107 = PHI <dst_39(44), _20(43)>
  dst_75 = dst_107 + 1;
  *dst_107 = 0;
  _41 = *string_47;
  if (_41 != 0)
    goto <bb 25>; [91.00%]
  else
    goto <bb 45>; [9.00%]

  <bb 45> [0.48%]:
  goto <bb 26>; [100.00%]

  <bb 25> [4.80%]:
  _77 = string_47 + 1;

  <bb 26> [6.04%]:
  # _56 = PHI <0B(36), 0B(39), 0B(45), _77(25)>
  return _56;

  <bb 27> [32.87%]:
  goto <bb 4>; [100.00%]

  <bb 28> [3.48%]:
  _40 = *string_10;
  _74 = (unsigned char) _40;
  _63 = (int) _74;
  _42 = isspace (_63);
  goto <bb 15>; [100.00%]

}



;; Function main (main, funcdef_no=2, decl_uid=3985, cgraph_uid=0, symbol_order=65) (executed once)

;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 31 4 32 26 5 6 7 8 9 10 33 11 12 13 14 15 34 29 16 35 17 18 19 36 20 37 21 38 28 30 22 25 23 40 27 39 24
;;
;; Loop 1
;;  header 23, latch 27
;;  depth 1, outer 0
;;  nodes: 23 27
;;
;; Loop 2
;;  header 5, latch 28
;;  depth 1, outer 0
;;  nodes: 5 28 21 20 19 17 6 18 7 34 35 16 8 29 15 12 13 14 9 33 11 10
;;
;; Loop 3
;;  header 16, latch 29
;;  depth 2, outer 2
;;  nodes: 16 29 15 12 13 14 9 33 11 10
;; 2 succs { 3 30 }
;; 3 succs { 4 31 }
;; 31 succs { 22 }
;; 4 succs { 26 32 }
;; 32 succs { 22 }
;; 26 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 19 }
;; 7 succs { 8 18 }
;; 8 succs { 16 }
;; 9 succs { 14 10 13 }
;; 10 succs { 11 33 }
;; 33 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 15 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 34 29 }
;; 34 succs { 17 }
;; 29 succs { 16 }
;; 16 succs { 9 35 }
;; 35 succs { 17 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 20 36 }
;; 36 succs { 22 }
;; 20 succs { 21 37 }
;; 37 succs { 22 }
;; 21 succs { 28 38 }
;; 38 succs { 22 }
;; 28 succs { 5 }
;; 30 succs { 22 }
;; 22 succs { 25 39 }
;; 25 succs { 23 }
;; 23 succs { 27 40 }
;; 40 succs { 24 }
;; 27 succs { 23 }
;; 39 succs { 24 }
;; 24 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

string_24 -> { string_43 }
Incremental SSA update started at block: 16
Number of blocks in CFG: 41
Number of blocks to update: 5 ( 12%)


main ()
{
  unsigned int D.4100;
  struct dict_type * new_d;
  char * word;
  struct dict_type * ptr;
  char * string;
  struct dict_type * dict;
  char * _1;
  char * _2;
  int _10;
  int _18;
  char * _19;
  int _20;
  char * _22;
  char _25;
  char * _28;
  int _33;
  char * _35;
  void (*<Ta03>) () _36;
  int _37;
  int _38;
  int _40;
  int _41;
  char * _45;
  char _46;
  int _47;
  int _48;
  char * _51;
  struct FILE * _52;
  int _53;
  char _54;
  char * _55;
  char _56;
  int _59;
  int _60;
  int _62;
  long unsigned int _64;
  long unsigned int _65;
  void (*stinst_type) () * _66;
  void * _67;
  void (*stinst_type) () * _68;
  int _69;
  long unsigned int _70;
  long unsigned int _71;
  void (*stinst_type) () * _72;
  int _73;
  int _74;
  unsigned int _75;
  char _108;
  char * _109;
  char _110;

  <bb 2> [14.30%]:
  string_16 = nextword ("var second : stored_in_dict 5 ; : next", &word);
  if (string_16 != 0B)
    goto <bb 3>; [95.00%]
  else
    goto <bb 30>; [5.00%]

  <bb 3> [13.59%]:
  _108 = *string_16;
  if (_108 != 0)
    goto <bb 4>; [95.00%]
  else
    goto <bb 31>; [5.00%]

  <bb 31> [0.68%]:
  goto <bb 22>; [100.00%]

  <bb 4> [12.91%]:
  _109 = word;
  _110 = *_109;
  if (_110 != 0)
    goto <bb 26>; [95.00%]
  else
    goto <bb 32>; [5.00%]

  <bb 32> [0.65%]:
  goto <bb 22>; [100.00%]

  <bb 26> [12.26%]:

  <bb 5> [85.74%]:
  # string_114 = PHI <string_57(28), string_16(26)>
  _18 = __printf_chk (1, "string: %s\n", string_114);
  _19 = word;
  _20 = strcmp (_19, "var");
  if (_20 == 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 6> [28.29%]:
  string_21 = nextword (string_114, &word);
  _22 = word;
  new_d_58 = newentry (_22);
  string_23 = nextword (string_21, &word);
  goto <bb 19>; [100.00%]

  <bb 7> [57.44%]:
  _25 = *_19;
  if (_25 == 58)
    goto <bb 8>; [20.97%]
  else
    goto <bb 18>; [79.03%]

  <bb 8> [12.05%]:
  free (_19);
  string_27 = nextword (string_114, &word);
  _28 = word;
  ptr_29 = newentry (_28);
  string_30 = nextword (string_27, &word);
  goto <bb 16>; [100.00%]

  <bb 9> [77.13%]:
  _33 = (int) _46;
  switch (_46) <default: <L2> [33.33%], case 34: <L0> [33.33%], case 48 ... 57: <L1> [33.33%]>

<L0> [25.71%]:
  _35 = _45 + 1;
  _36 = (void (*<Ta03>) ()) _35;
  _59 = ptr_29->code_end;
  _60 = ptr_29->code_length;
  if (_59 == _60)
    goto <bb 11>; [22.95%]
  else
    goto <bb 33>; [77.05%]

  <bb 33> [19.81%]:
  goto <bb 12>; [100.00%]

  <bb 11> [5.90%]:
  _62 = _60 + 2;
  ptr_29->code_length = _62;
  _64 = (long unsigned int) _62;
  _65 = _64 * 8;
  _66 = ptr_29->code;
  _67 = realloc (_66, _65);
  ptr_29->code = _67;

  <bb 12> [25.71%]:
  _68 = ptr_29->code;
  _69 = ptr_29->code_end;
  _70 = (long unsigned int) _69;
  _71 = _70 * 8;
  _72 = _68 + _71;
  *_72 = _36;
  _73 = ptr_29->code_end;
  _74 = _73 + 1;
  ptr_29->code_end = _74;
  _75 = (unsigned int) _73;
  goto <bb 15>; [100.00%]

<L1> [25.71%]:
  _37 = MEM[(int *)ptr_29];
  _38 = __printf_chk (1, "%d\n", _37);
  free (_45);
  goto <bb 15>; [100.00%]

<L2> [25.71%]:
  _40 = MEM[(int *)ptr_29];
  _41 = __printf_chk (1, "%d\n", _40);
  free (_45);

  <bb 15> [77.12%]:
  string_44 = nextword (string_43, &word);
  if (string_44 == 0B)
    goto <bb 34>; [7.50%]
  else
    goto <bb 29>; [92.50%]

  <bb 34> [5.78%]:
  goto <bb 17>; [100.00%]

  <bb 29> [71.34%]:

  <bb 16> [83.39%]:
  # string_43 = PHI <string_30(8), string_44(29)>
  _45 = word;
  _46 = *_45;
  if (_46 != 59)
    goto <bb 9>; [92.50%]
  else
    goto <bb 35>; [7.50%]

  <bb 35> [6.25%]:
  # string_24 = PHI <string_43(16)>

  <bb 17> [12.04%]:
  # string_49 = PHI <0B(34), string_24(35)>
  _47 = MEM[(int *)ptr_29];
  _48 = __printf_chk (1, "%d\n", _47);
  string_50 = nextword (string_49, &word);
  goto <bb 19>; [100.00%]

  <bb 18> [45.40%]:
  _51 = string_114 + 18446744073709551615;
  _52 = stderr;
  _53 = __fprintf_chk (_52, 1, "syntax error at %s\n", _51);

  <bb 19> [85.73%]:
  # string_57 = PHI <string_50(17), string_23(6), string_114(18)>
  if (string_57 != 0B)
    goto <bb 20>; [95.00%]
  else
    goto <bb 36>; [5.00%]

  <bb 36> [4.29%]:
  goto <bb 22>; [100.00%]

  <bb 20> [81.42%]:
  _54 = *string_57;
  if (_54 != 0)
    goto <bb 21>; [95.00%]
  else
    goto <bb 37>; [5.00%]

  <bb 37> [4.07%]:
  goto <bb 22>; [100.00%]

  <bb 21> [77.34%]:
  _55 = word;
  _56 = *_55;
  if (_56 != 0)
    goto <bb 28>; [95.00%]
  else
    goto <bb 38>; [5.00%]

  <bb 38> [3.87%]:
  goto <bb 22>; [100.00%]

  <bb 28> [73.47%]:
  goto <bb 5>; [100.00%]

  <bb 30> [0.72%]:

  <bb 22> [14.26%]:
  word ={v} {CLOBBER};
  dict_7 = root;
  if (dict_7 != 0B)
    goto <bb 25>; [85.00%]
  else
    goto <bb 39>; [15.00%]

  <bb 25> [12.12%]:

  <bb 23> [80.82%]:
  # dict_111 = PHI <dict_9(27), dict_7(25)>
  _1 = dict_111->word;
  _10 = __printf_chk (1, "%s\n", _1);
  _2 = dict_111->word;
  free (_2);
  dict_9 = dict_111->next;
  if (dict_9 != 0B)
    goto <bb 27>; [85.00%]
  else
    goto <bb 40>; [15.00%]

  <bb 40> [12.12%]:
  goto <bb 24>; [100.00%]

  <bb 27> [68.70%]:
  goto <bb 23>; [100.00%]

  <bb 39> [2.14%]:

  <bb 24> [14.26%]:
  return 0;

}


