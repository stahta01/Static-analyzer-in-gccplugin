
;; Function EVP_DecodeBlock (EVP_DecodeBlock, funcdef_no=22, decl_uid=3545, cgraph_uid=23, symbol_order=23)

Removing basic block 6
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
;;
;; Loop 3
;;  header 18, latch 17
;;  depth 1, outer 0
;;  nodes: 18 17 15 14 13 12
;;
;; Loop 2
;;  header 7, latch 6
;;  depth 1, outer 0
;;  nodes: 7 6 8
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3 5
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 5 7 }
;; 5 succs { 3 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 6 9 }
;; 9 succs { 10 11 }
;; 10 succs { 20 }
;; 11 succs { 18 }
;; 12 succs { 16 13 }
;; 13 succs { 16 14 }
;; 14 succs { 16 15 }
;; 15 succs { 16 17 }
;; 16 succs { 20 }
;; 17 succs { 18 }
;; 18 succs { 12 19 }
;; 19 succs { 20 }
;; 20 succs { 1 }
int EVP_DecodeBlock (unsigned char * t, const unsigned char * f, int n)
{
  long unsigned int l;
  int d;
  int c;
  int b;
  int a;
  int ret;
  int i;
  int D.3609;

  <bb 2> :
  ret = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  f = f + 1;
  n = n + -1;

  <bb 4> :
  _1 = *f;
  _2 = (int) _1;
  _3 = conv_ascii2bin (_2);
  if (_3 == 224)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 5> :
  if (n > 0)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  n = n + -1;

  <bb 7> :
  if (n > 3)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  _4 = (sizetype) n;
  _5 = _4 + 18446744073709551615;
  _6 = f + _5;
  _7 = *_6;
  _8 = (int) _7;
  _9 = conv_ascii2bin (_8);
  _10 = _9 | 19;
  if (_10 == 243)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  n.0_11 = (unsigned int) n;
  _12 = n.0_11 & 3;
  if (_12 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  D.3609 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 20>; [INV]

  <bb 11> :
  i = 0;
  goto <bb 18>; [INV]

  <bb 12> :
  f.1_13 = f;
  f = f.1_13 + 1;
  _14 = *f.1_13;
  _15 = (int) _14;
  a = conv_ascii2bin (_15);
  f.2_16 = f;
  f = f.2_16 + 1;
  _17 = *f.2_16;
  _18 = (int) _17;
  b = conv_ascii2bin (_18);
  f.3_19 = f;
  f = f.3_19 + 1;
  _20 = *f.3_19;
  _21 = (int) _20;
  c = conv_ascii2bin (_21);
  f.4_22 = f;
  f = f.4_22 + 1;
  _23 = *f.4_22;
  _24 = (int) _23;
  d = conv_ascii2bin (_24);
  _25 = a & 128;
  if (_25 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 13> :
  _26 = b & 128;
  if (_26 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  _27 = c & 128;
  if (_27 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  _28 = d & 128;
  if (_28 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.3609 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 20>; [INV]

  <bb 17> :
  _29 = (long unsigned int) a;
  _30 = _29 << 18;
  _31 = (long unsigned int) b;
  _32 = _31 << 12;
  _33 = _30 | _32;
  _34 = (long unsigned int) c;
  _35 = _34 << 6;
  _36 = _33 | _35;
  _37 = (long unsigned int) d;
  l = _36 | _37;
  _38 = l >> 16;
  t.5_39 = t;
  t = t.5_39 + 1;
  _40 = (unsigned char) _38;
  *t.5_39 = _40;
  _41 = l >> 8;
  t.6_42 = t;
  t = t.6_42 + 1;
  _43 = (unsigned char) _41;
  *t.6_42 = _43;
  t.7_44 = t;
  t = t.7_44 + 1;
  _45 = (unsigned char) l;
  *t.7_44 = _45;
  ret = ret + 3;
  i = i + 4;

  <bb 18> :
  if (i < n)
    goto <bb 12>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  D.3609 = ret;

  <bb 20> :
  return D.3609;

}



;; Function CTLOG_new_from_base64 (CTLOG_new_from_base64, funcdef_no=24, decl_uid=3586, cgraph_uid=25, symbol_order=25)

Merging blocks 11 and 12
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;; 2 succs { 3 4 }
;; 3 succs { 11 }
;; 4 succs { 5 6 }
;; 5 succs { 11 }
;; 6 succs { 7 8 }
;; 7 succs { 11 }
;; 8 succs { 9 10 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
int CTLOG_new_from_base64 (struct CTLOG * * ct_log, const char * pkey_base64, const char * name)
{
  struct EVP_PKEY * pkey;
  const unsigned char * p;
  int pkey_der_len;
  unsigned char * pkey_der;
  int D.3618;

  <bb 2> :
  pkey_der = 0B;
  pkey_der_len = ct_base64_decode (pkey_base64, &pkey_der);
  pkey = 0B;
  if (ct_log == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  CTerr (118, 7);
  D.3618 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 4> :
  if (pkey_der_len <= 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  CTerr (118, 110);
  D.3618 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 6> :
  pkey_der.8_1 = pkey_der;
  p = pkey_der.8_1;
  _2 = d2i_PUBKEY (0B, &p, pkey_der_len);
  _3 = (long int) _2;
  pkey = (struct EVP_PKEY *) _3;
  pkey_der.9_4 = pkey_der;
  free (pkey_der.9_4);
  if (pkey == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  CTerr (118, 110);
  D.3618 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 8> :
  _5 = CTLOG_new (pkey, name);
  _6 = (long int) _5;
  _7 = (struct CTLOG *) _6;
  *ct_log = _7;
  _8 = *ct_log;
  if (_8 == 0B)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  EVP_PKEY_free (pkey);
  D.3618 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 10> :
  D.3618 = 1;

  <bb 11> :
  pkey_der = {CLOBBER};
  p = {CLOBBER};
  return D.3618;

}



;; Function ct_base64_decode (ct_base64_decode, funcdef_no=23, decl_uid=3570, cgraph_uid=24, symbol_order=24)

Removing basic block 8
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;;
;; Loop 1
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8
;; 2 succs { 3 4 }
;; 3 succs { 12 }
;; 4 succs { 5 6 }
;; 5 succs { 11 }
;; 6 succs { 7 9 }
;; 7 succs { 11 }
;; 8 succs { 9 }
;; 9 succs { 8 10 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 1 }
int ct_base64_decode (const char * in, unsigned char * * out)
{
  unsigned char * outbuf;
  int outlen;
  size_t inlen;
  int D.3629;

  <bb 2> :
  inlen = strlen (in);
  outbuf = 0B;
  if (inlen == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  *out = 0B;
  D.3629 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 12>; [INV]

  <bb 4> :
  _1 = inlen / 4;
  _2 = (unsigned int) _1;
  _3 = _2 * 3;
  outlen = (int) _3;
  _4 = (long unsigned int) outlen;
  outbuf = malloc (_4);
  if (outbuf == 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  CTerr (124, 65);
  // predicted unlikely by goto predictor.
  goto <bb 11>; [INV]

  <bb 6> :
  _5 = (int) inlen;
  outlen = EVP_DecodeBlock (outbuf, in, _5);
  if (outlen < 0)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 7> :
  CTerr (124, 108);
  // predicted unlikely by goto predictor.
  goto <bb 11>; [INV]

  <bb 8> :
  outlen = outlen + -1;

  <bb 9> :
  inlen = inlen + 18446744073709551615;
  _6 = in + inlen;
  _7 = *_6;
  if (_7 == 61)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 10> :
  *out = outbuf;
  D.3629 = outlen;
  goto <bb 12>; [INV]

  <bb 11> :
err:
  free (outbuf);
  D.3629 = -1;

  <bb 12> :
  return D.3629;

}



;; Function main (main, funcdef_no=25, decl_uid=3601, cgraph_uid=26, symbol_order=26)

Removing basic block 4
Merging blocks 2 and 3
Merging blocks 2 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
int main ()
{
  struct CTLOG * ct_log;
  int D.3635;

  <bb 2> :
  CTLOG_new_from_base64 (&ct_log, "pkey_base64", "name");
  D.3635 = 0;
  ct_log = {CLOBBER};
  return D.3635;

}


