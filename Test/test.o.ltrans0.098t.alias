
;; Function test22 (test22, funcdef_no=2, decl_uid=3987, cgraph_uid=2, symbol_order=61)


Not re-computing points-to information because IPA points-to information is available.



Alias information for test22

Aliased symbols


Call clobber information

ESCAPED, points-to anything, points-to NULL

Flow-insensitive points-to information

k_2(D), points-to NULL, points-to vars: { D.4060 } (nonlocal, escaped, escaped heap)

__attribute__((noinline))
test22 (int * k)
{
  <bb 2> [100.00%]:
  test22 (k_2(D));
  free (k_2(D));
  return;

}



;; Function foo2 (foo2, funcdef_no=0, decl_uid=3989, cgraph_uid=4, symbol_order=54)


Not re-computing points-to information because IPA points-to information is available.



Alias information for foo2

Aliased symbols


Call clobber information

ESCAPED, points-to anything, points-to NULL

Flow-insensitive points-to information

_4, points-to NULL, points-to vars: { D.4055 D.4056 } (nonlocal, escaped, escaped heap)
a2_9, points-to NULL, points-to vars: { D.4054 } (nonlocal, escaped, escaped heap)
p3_11, points-to NULL, points-to vars: { D.4055 } (nonlocal, escaped, escaped heap)
p4_13, points-to NULL, points-to vars: { D.4056 } (nonlocal, escaped, escaped heap)
_18, points-to NULL, points-to vars: { D.4056 } (nonlocal, escaped, escaped heap)
_22, points-to NULL, points-to vars: { D.4055 } (nonlocal, escaped, escaped heap)

__attribute__((noinline))
foo2 (int z)
{
  int tmp;
  int * p4;
  int * p3;
  int * a2;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  int * _4;
  int * _18;
  int * _22;

  <bb 2> [100.00%]:
  _1 = (long unsigned int) z_6(D);
  a2_9 = malloc (_1);
  _2 = (long unsigned int) z_6(D);
  p3_11 = malloc (_2);
  _3 = (long unsigned int) z_6(D);
  p4_13 = malloc (_3);
  *a2_9 = 10;
  if (tmp_15(D) > 10)
    goto <bb 3>; [46.00%]
  else
    goto <bb 4>; [54.00%]

  <bb 3> [46.00%]:
  pthread_mutex_unlock (&mLock);
  *p3_11 = 10;
  free (p3_11);
  _22 = p3_11;
  goto <bb 5>; [100.00%]

  <bb 4> [54.00%]:
  *p4_13 = 10;
  free (p4_13);
  _18 = p4_13;

  <bb 5> [100.00%]:
  # _4 = PHI <p3_11(3), p4_13(4)>
  return _4;

}



;; Function foo (foo, funcdef_no=1, decl_uid=3988, cgraph_uid=3, symbol_order=56)


Not re-computing points-to information because IPA points-to information is available.



Alias information for foo

Aliased symbols


Call clobber information

ESCAPED, points-to anything, points-to NULL

Flow-insensitive points-to information

p2_3, points-to NULL, points-to vars: { D.4057 } (nonlocal, escaped, escaped heap)
_7, points-to NULL, points-to vars: { D.4055 D.4056 } (nonlocal, escaped, escaped heap)

__attribute__((noinline))
foo (int z)
{
  int * p2;
  int * _7;

  <bb 2> [100.00%]:
  p2_3 = malloc (1);
  *p2_3 = 1;
  _7 = foo2 (z_5(D));
  return _7;

}



;; Function child (child, funcdef_no=3, decl_uid=3986, cgraph_uid=1, symbol_order=57)


Not re-computing points-to information because IPA points-to information is available.



Alias information for child

Aliased symbols

data2, UID D.4039, int, is addressable
pData, UID D.4041, int *, is addressable
mLock2, UID D.4043, union pthread_mutex_t, is addressable

Call clobber information

ESCAPED, points-to anything, points-to NULL

Flow-insensitive points-to information

_1, points-to NULL, points-to vars: { D.4059 } (nonlocal, escaped, escaped heap)
_2, points-to NULL, points-to vars: { D.4039 D.4059 } (nonlocal, escaped, escaped heap)
_3, points-to NULL, points-to vars: { D.4039 D.4059 } (nonlocal, escaped, escaped heap)
_4, points-to NULL, points-to vars: { D.4039 D.4059 } (nonlocal, escaped, escaped heap)
_5, points-to NULL, points-to vars: { D.4039 D.4059 } (nonlocal, escaped, escaped heap)
_6, points-to NULL, points-to vars: { D.4039 D.4059 } (nonlocal, escaped, escaped heap)
ppData_13, points-to NULL, points-to vars: { D.4058 } (nonlocal)
a_17, points-to NULL, points-to vars: { D.4055 D.4056 } (nonlocal, escaped, escaped heap)

child (void * data)
{
  int data2;
  int * a;
  int * pData;
  int * * ppData;
  union pthread_mutex_t mLock2;
  void * _1;
  int * _2;
  int * _3;
  int * _4;
  int * _5;
  int * _6;

  <bb 2> [100.00%]:
  pthread_mutex_lock (&mLock2);
  pthread_mutex_lock (&mLock2);
  pthread_mutex_lock (&mLock);
  pthread_mutex_lock (&mLock);
  ppData_13 = malloc (10);
  _1 = malloc (20);
  pData = _1;
  a_17 = foo (1);
  data2 = 0;
  pData = &data2;
  _2 = pData;
  *_2 = 10;
  _3 = MEM[(int * *)&pData + 8B];
  *_3 = 10;
  _4 = MEM[(int * *)&pData + 16B];
  *_4 = 10;
  _5 = pData;
  *_5 = 12;
  _6 = pData;
  free (_6);
  pthread_mutex_unlock (&mLock);
  free (&pData);
  mLock2 ={v} {CLOBBER};
  pData ={v} {CLOBBER};
  data2 ={v} {CLOBBER};
  return;

}



;; Function main (main, funcdef_no=4, decl_uid=3985, cgraph_uid=0, symbol_order=62) (executed once)


Not re-computing points-to information because IPA points-to information is available.



Alias information for main

Aliased symbols

t, UID D.4046, pthread_t, is addressable
buff, UID D.4048, char[50], is addressable

Call clobber information

ESCAPED, points-to anything, points-to NULL

Flow-insensitive points-to information

_4, points-to NULL, points-to vars: { D.4060 } (nonlocal, escaped, escaped heap)
p3_8, points-to NULL, points-to vars: { D.4055 D.4056 } (nonlocal, escaped, escaped heap)
p_12, points-to NULL, points-to vars: { D.4055 D.4056 } (nonlocal, escaped, escaped heap)
p2_15, points-to NULL, points-to vars: { D.4055 D.4056 } (nonlocal, escaped, escaped heap)
q_20, points-to NULL, points-to vars: { D.4060 } (nonlocal, escaped, escaped heap)

main ()
{
  pthread_t t;
  int * q;
  char buff[50];
  int * p3;
  int * p2;
  int * p;
  long int _1;
  int _2;
  long int _3;
  void * _4;
  long unsigned int _5;

  <bb 2> [100.00%]:
  p3_8 = foo (2);
  *p3_8 = 1;
  free (p3_8);
  p_12 = foo2 (2);
  *p_12 = 2;
  p2_15 = foo2 (2);
  *p2_15 = 4;
  free (p_12);
  free (p2_15);
  q_20 = malloc (5);
  *q_20 = 10;
  test22 (q_20);
  _1 = (long int) q_20;
  _2 = (int) _1;
  _3 = (long int) _2;
  _4 = (void *) _3;
  child (_4);
  pthread_mutex_destroy (&mLock);
  pthread_create (&t, 0B, child, &buff);
  _5 = t;
  pthread_join (_5, 0B);
  pthread_mutex_destroy (&mLock);
  buff ={v} {CLOBBER};
  t ={v} {CLOBBER};
  return 0;

}


