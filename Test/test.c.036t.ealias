
;; Function foo3 (foo3, funcdef_no=51, decl_uid=4314, cgraph_uid=51, symbol_order=51)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
p = &NONLOCAL
_1 = *p
ESCAPED = &NONLOCAL
q_8 = &HEAP(12)
q_6 = *p + 64
q_2 = q_8
q_2 = q_6
ESCAPED = q_2

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences
Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles
Solving graph

Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { ESCAPED NONLOCAL HEAP(12) }
NONLOCAL = { ESCAPED NONLOCAL }
STOREDANYTHING = { }
INTEGER = { ANYTHING }
p = { NONLOCAL }
_1 = { ESCAPED NONLOCAL }
malloc = { }
q_8 = { HEAP(12) }
HEAP(12) = { ESCAPED NONLOCAL }
q_6 = { ESCAPED NONLOCAL }
q_2 = { ESCAPED NONLOCAL HEAP(12) }


Alias information for foo3

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to vars: { D.4388 } (escaped, escaped heap)

Flow-insensitive points-to information

q_2, points-to non-local, points-to escaped, points-to NULL, points-to vars: { D.4388 } (escaped, escaped heap)
p_5(D), points-to non-local, points-to NULL, points-to vars: { }
q_6, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
q_8, points-to NULL, points-to vars: { D.4388 } (escaped, escaped heap)

foo3 (struct st * p)
{
  int * q;
  int _1;

  <bb 2> [0.00%]:
  _1 = p_5(D)->flag;
  if (_1 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  q_8 = malloc (1);
  goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  q_6 = p_5(D)->f;

  <bb 5> [0.00%]:
  # q_2 = PHI <q_8(3), q_6(4)>
  return q_2;

}



;; Function foo (foo, funcdef_no=52, decl_uid=4307, cgraph_uid=52, symbol_order=52)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
z = &NONLOCAL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences
Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles
Solving graph

Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { }
NONLOCAL = { ESCAPED NONLOCAL }
STOREDANYTHING = { }
INTEGER = { ANYTHING }
z = { NONLOCAL }


Alias information for foo

Aliased symbols


Call clobber information

ESCAPED, points-to vars: { }

Flow-insensitive points-to information

z_2(D), points-to non-local, points-to NULL, points-to vars: { }

__attribute__((noinline))
foo (int * z)
{
  <bb 2> [0.00%]:
  free (z_2(D));
  return;

}



;; Function main (main, funcdef_no=53, decl_uid=4320, cgraph_uid=53, symbol_order=53)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
ESCAPED = &NONLOCAL
p6_44 = &HEAP(10)
q_45 = p6_44
p6_47 = &HEAP(13)
doubledereftmp(14) = *p6_44
*p6_47 = doubledereftmp(14)
p6_47 = p6_44
_1 = &STRING
_2 = _1
*q_45 = _2
_3 = &STRING
_5 = _3
*q_45 = _5
ESCAPED = &NULL
p9_52 = &HEAP(20)
ESCAPED = &NONLOCAL
_7 = &HEAP(22)
*p9_52 + 64 = _7
ESCAPED = &NONLOCAL
p_57 = &HEAP(24)
ESCAPED = &NONLOCAL
_9 = &HEAP(26)
*p_57 + 64 = _9
_10 = i_25
_11 = _10
_11 = &NONLOCAL
_12 = p_57
ESCAPED = &NONLOCAL
_13 = &HEAP(32)
*_12 + 64 = _13
i_99 = i_25
i_99 = &NONLOCAL
i_25 = &NULL
i_25 = i_99
ESCAPED = &NONLOCAL
_15 = &HEAP(35)
*p_57 + 64 = _15
ESCAPED = p_57
_16 = i_26
_17 = _16
_17 = &NONLOCAL
_18 = p_57
_19 = *_18 + 64
_20 = i_26
_21 = _20
_21 = &NONLOCAL
_22 = p9_52
_23 = *_22 + 64
i_95 = i_26
i_95 = &NONLOCAL
i_26 = &NULL
i_26 = i_95
ESCAPED = &NONLOCAL
p100_67 = &HEAP(48)
ESCAPED = &NONLOCAL
p100_69 = &HEAP(50)
p100_27 = p100_67
p100_27 = p100_69
ESCAPED = p5_72
ESCAPED = p5_72
_24 = test5_75
_24 = &NONLOCAL
ESCAPED = p5_72
ESCAPED = p5_72
ESCAPED = p5_72
ESCAPED = p_57
ESCAPED = p_57
ESCAPED = p_57
ESCAPED = p_57
ESCAPED = p3_85
ESCAPED = p5_72
ESCAPED = p_57
ESCAPED = p_57
ESCAPED = p4_80
_28 = &NONLOCAL
_28 = &NULL
ESCAPED = _28

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences
Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles
Solving graph

Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL ESCAPED NONLOCAL HEAP(24) HEAP(26) HEAP(32) HEAP(35) }
NONLOCAL = { ESCAPED NONLOCAL }
STOREDANYTHING = { }
INTEGER = { ANYTHING }
malloc = { }
p6_44 = { HEAP(10) }
HEAP(10) = { STRING }
q_45 = { HEAP(10) } same as p6_44
p6_47 = { HEAP(10) HEAP(13) }
HEAP(13) = { STRING }
doubledereftmp(14) = { STRING }
_1 = { STRING }
_2 = { STRING } same as _1
_3 = { STRING } same as _1
_5 = { STRING } same as _1
p9_52 = { HEAP(20) }
HEAP(20) = { HEAP(22) }
_7 = { HEAP(22) }
HEAP(22) = { }
p_57 = { HEAP(24) }
HEAP(24) = { ESCAPED NONLOCAL HEAP(26) HEAP(32) HEAP(35) }
_9 = { HEAP(26) }
HEAP(26) = { ESCAPED NONLOCAL }
_10 = { NULL NONLOCAL }
i_25 = { NULL NONLOCAL } same as _10
_11 = { NULL NONLOCAL } same as _10
_12 = { HEAP(24) } same as p_57
_13 = { HEAP(32) }
HEAP(32) = { ESCAPED NONLOCAL }
i_99 = { NULL NONLOCAL } same as _10
_15 = { HEAP(35) }
HEAP(35) = { ESCAPED NONLOCAL }
foo = { }
_16 = { NULL NONLOCAL } same as _10
i_26 = { NULL NONLOCAL } same as _10
_17 = { NULL NONLOCAL } same as _10
_18 = { HEAP(24) } same as p_57
_19 = { ESCAPED NONLOCAL HEAP(26) HEAP(32) HEAP(35) }
_20 = { NULL NONLOCAL } same as _10
_21 = { NULL NONLOCAL } same as _10
_22 = { HEAP(20) } same as p9_52
_23 = { HEAP(22) }
i_95 = { NULL NONLOCAL } same as _10
p100_67 = { HEAP(48) }
HEAP(48) = { }
p100_69 = { HEAP(50) }
HEAP(50) = { }
p100_27 = { HEAP(48) HEAP(50) }
p5_72 = { }
_24 = { NONLOCAL }
test5_75 = { }
p3_85 = { }
p4_80 = { }
_28 = { NULL NONLOCAL } same as _10


Alias information for main

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { D.4393 D.4394 D.4395 D.4396 } (escaped, escaped heap)

Flow-insensitive points-to information

_7, points-to NULL, points-to vars: { D.4392 }
_9, points-to NULL, points-to vars: { D.4394 } (escaped, escaped heap)
_12, points-to NULL, points-to vars: { D.4393 } (escaped, escaped heap)
_13, points-to NULL, points-to vars: { D.4395 } (escaped, escaped heap)
_15, points-to NULL, points-to vars: { D.4396 } (escaped, escaped heap)
_18, points-to NULL, points-to vars: { D.4393 } (escaped, escaped heap)
_19, points-to non-local, points-to escaped, points-to NULL, points-to vars: { D.4394 D.4395 D.4396 } (escaped, escaped heap)
_22, points-to NULL, points-to vars: { D.4391 }
_23, points-to NULL, points-to vars: { D.4392 }
p100_27, points-to NULL, points-to vars: { D.4397 D.4398 }
p6_44, points-to NULL, points-to vars: { D.4389 }
q_45, points-to NULL, points-to vars: { D.4389 }
p6_47, points-to NULL, points-to vars: { D.4389 D.4390 }
p9_52, points-to NULL, points-to vars: { D.4391 }
p_57, points-to NULL, points-to vars: { D.4393 } (escaped, escaped heap)
p100_67, points-to NULL, points-to vars: { D.4397 }
p100_69, points-to NULL, points-to vars: { D.4398 }
p5_72(D), points-to NULL, points-to vars: { }
p4_80(D), points-to NULL, points-to vars: { }
p3_85(D), points-to NULL, points-to vars: { }

main ()
{
  int i;
  int i;
  int * p100;
  struct st * p;
  struct st * p9;
  int * p6;
  int * q;
  int d;
  int c;
  int b;
  int a;
  int test5;
  int test3;
  int test2;
  int test;
  int * p5;
  int * p4;
  int * p3;
  long int _1;
  int _2;
  long int _3;
  int _5;
  void * _7;
  void * _9;
  long unsigned int _10;
  long unsigned int _11;
  struct st * _12;
  void * _13;
  void * _15;
  long unsigned int _16;
  long unsigned int _17;
  struct st * _18;
  int * _19;
  long unsigned int _20;
  long unsigned int _21;
  struct st * _22;
  int * _23;
  int _24;
  int _28;

  <bb 2> [0.00%]:
  p6_44 = malloc (100);
  q_45 = p6_44;
  p6_47 = realloc (p6_44, 100);
  _1 = (long int) "0";
  _2 = (int) _1;
  *q_45 = _2;
  _3 = (long int) "0";
  _5 = (int) _3;
  MEM[(int *)q_45 + 4B] = _5;
  free (p6_47);
  p9_52 = malloc (0);
  _7 = malloc (1);
  MEM[(struct st *)p9_52 + 48B].f = _7;
  free (p9_52);
  p_57 = malloc (10);
  _9 = malloc (1);
  MEM[(struct st *)p_57 + 48B].f = _9;
  goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  _10 = (long unsigned int) i_25;
  _11 = _10 * 16;
  _12 = p_57 + _11;
  _13 = malloc (1);
  _12->f = _13;
  i_99 = i_25 + 1;

  <bb 4> [0.00%]:
  # i_25 = PHI <0(2), i_99(3)>
  if (i_25 <= 9)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 5> [0.00%]:
  _15 = malloc (1);
  MEM[(struct st *)p_57 + 32B].f = _15;
  foo (p_57);
  if (test_64(D) != 0)
    goto <bb 31>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 6> [0.00%]:
  _16 = (long unsigned int) i_26;
  _17 = _16 * 16;
  _18 = p_57 + _17;
  _19 = _18->f;
  free (_19);
  _20 = (long unsigned int) i_26;
  _21 = _20 * 16;
  _22 = p9_52 + _21;
  _23 = _22->f;
  free (_23);
  i_95 = i_26 + 1;

  <bb 7> [0.00%]:
  # i_26 = PHI <0(5), i_95(6)>
  if (i_26 <= 9)
    goto <bb 6>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 8> [0.00%]:
  p100_67 = malloc (1);
  if (test_64(D) != 0)
    goto <bb 9>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 9> [0.00%]:
  p100_69 = malloc (2);
  free (p100_69);

  <bb 10> [0.00%]:
  # p100_27 = PHI <p100_67(8), p100_69(9)>
  free (p100_27);

label2 [0.00%]:
  foo (p5_72(D));

label3 [0.00%]:
  foo (p5_72(D));
  _24 = test5_75(D) / 10;
  switch (_24) <default: <L14> [0.00%], case 5: <L12> [0.00%], case 10: <L13> [0.00%]>

<L12> [0.00%]:
  foo (p5_72(D));
  goto <bb 16>; [0.00%]

<L13> [0.00%]:
  foo (p5_72(D));
  goto <bb 16>; [0.00%]

<L14> [0.00%]:
  foo (p5_72(D));

  <bb 16> [0.00%]:
  if (test_64(D) != 0)
    goto <bb 17>; [0.00%]
  else
    goto <bb 26>; [0.00%]

  <bb 17> [0.00%]:
  if (test_64(D) > test2_79(D))
    goto <bb 18>; [0.00%]
  else
    goto <bb 21>; [0.00%]

  <bb 18> [0.00%]:
  foo (p_57);
  if (test_64(D) < test2_79(D))
    goto <bb 19>; [0.00%]
  else
    goto <bb 20>; [0.00%]

  <bb 19> [0.00%]:
  foo (p_57);
  goto <bb 24>; [0.00%]

  <bb 20> [0.00%]:
  foo (p_57);
  goto <bb 24>; [0.00%]

  <bb 21> [0.00%]:
  foo (p_57);
  if (test_64(D) < test2_79(D))
    goto <bb 22>; [0.00%]
  else
    goto <bb 23>; [0.00%]

  <bb 22> [0.00%]:
  foo (p3_85(D));
  goto <bb 12> (label3); [0.00%]

  <bb 23> [0.00%]:
  foo (p5_72(D));
  goto <bb 12> (label3); [0.00%]

  <bb 24> [0.00%]:
  if (test3_90(D) != 0)
    goto <bb 25>; [0.00%]
  else
    goto <bb 30>; [0.00%]

  <bb 25> [0.00%]:
  foo (p_57);
  goto <bb 11> (label2); [0.00%]

  <bb 26> [0.00%]:
  if (test_64(D) == test2_79(D))
    goto <bb 27>; [0.00%]
  else
    goto <bb 28>; [0.00%]

  <bb 27> [0.00%]:
  foo (p_57);
  goto <bb 30>; [0.00%]

  <bb 28> [0.00%]:
  if (test_64(D) > test2_79(D))
    goto <bb 29>; [0.00%]
  else
    goto <bb 30>; [0.00%]

  <bb 29> [0.00%]:
  foo (p4_80(D));

  <bb 30> [0.00%]:

  <bb 31> [0.00%]:
  # _28 = PHI <200(5), 0(30)>
  return _28;

}


