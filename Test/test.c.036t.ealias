
;; Function foo3 (foo3, funcdef_no=51, decl_uid=4314, cgraph_uid=51, symbol_order=51)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
p = &NONLOCAL
_1 = *p
ESCAPED = &NONLOCAL
q_8 = &HEAP(12)
q_6 = *p + 64
q_2 = q_8
q_2 = q_6
ESCAPED = q_2

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences
Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles
Solving graph

Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { ESCAPED NONLOCAL HEAP(12) }
NONLOCAL = { ESCAPED NONLOCAL }
STOREDANYTHING = { }
INTEGER = { ANYTHING }
p = { NONLOCAL }
_1 = { ESCAPED NONLOCAL }
malloc = { }
q_8 = { HEAP(12) }
HEAP(12) = { ESCAPED NONLOCAL }
q_6 = { ESCAPED NONLOCAL }
q_2 = { ESCAPED NONLOCAL HEAP(12) }


Alias information for foo3

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to vars: { D.4357 } (escaped, escaped heap)

Flow-insensitive points-to information

q_2, points-to non-local, points-to escaped, points-to NULL, points-to vars: { D.4357 } (escaped, escaped heap)
p_5(D), points-to non-local, points-to NULL, points-to vars: { }
q_6, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
q_8, points-to NULL, points-to vars: { D.4357 } (escaped, escaped heap)

foo3 (struct st * p)
{
  int * q;
  int _1;

  <bb 2> [0.00%]:
  _1 = p_5(D)->flag;
  if (_1 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  q_8 = malloc (1);
  goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  q_6 = p_5(D)->f;

  <bb 5> [0.00%]:
  # q_2 = PHI <q_8(3), q_6(4)>
  return q_2;

}



;; Function foo (foo, funcdef_no=52, decl_uid=4307, cgraph_uid=52, symbol_order=52)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
z = &NONLOCAL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences
Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles
Solving graph

Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { }
NONLOCAL = { ESCAPED NONLOCAL }
STOREDANYTHING = { }
INTEGER = { ANYTHING }
z = { NONLOCAL }


Alias information for foo

Aliased symbols


Call clobber information

ESCAPED, points-to vars: { }

Flow-insensitive points-to information

z_2(D), points-to non-local, points-to NULL, points-to vars: { }

__attribute__((noinline))
foo (int * z)
{
  <bb 2> [0.00%]:
  free (z_2(D));
  return;

}



;; Function main (main, funcdef_no=53, decl_uid=4320, cgraph_uid=53, symbol_order=53)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
ESCAPED = &NONLOCAL
p_23 = &HEAP(10)
_1 = i_11
_2 = _1
_2 = &NONLOCAL
_3 = p_23
ESCAPED = &NONLOCAL
_4 = &HEAP(16)
*_3 + 64 = _4
i_35 = i_11
i_35 = &NONLOCAL
i_11 = &NULL
i_11 = i_35
ESCAPED = &NONLOCAL
_6 = &HEAP(19)
*p_23 + 64 = _6
_7 = i_12
_8 = _7
_8 = &NONLOCAL
_9 = p_23
_10 = *_9 + 64
i_31 = i_12
i_31 = &NONLOCAL
i_12 = &NULL
i_12 = i_31
_13 = &NONLOCAL
_13 = &NULL
ESCAPED = _13

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences
Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles
Solving graph

Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL ESCAPED NONLOCAL }
NONLOCAL = { ESCAPED NONLOCAL }
STOREDANYTHING = { }
INTEGER = { ANYTHING }
malloc = { }
p_23 = { HEAP(10) }
HEAP(10) = { HEAP(16) HEAP(19) }
_1 = { NULL NONLOCAL }
i_11 = { NULL NONLOCAL } same as _1
_2 = { NULL NONLOCAL } same as _1
_3 = { HEAP(10) } same as p_23
_4 = { HEAP(16) }
HEAP(16) = { }
i_35 = { NULL NONLOCAL } same as _1
_6 = { HEAP(19) }
HEAP(19) = { }
_7 = { NULL NONLOCAL } same as _1
i_12 = { NULL NONLOCAL } same as _1
_8 = { NULL NONLOCAL } same as _1
_9 = { HEAP(10) } same as p_23
_10 = { HEAP(16) HEAP(19) }
i_31 = { NULL NONLOCAL } same as _1
_13 = { NULL NONLOCAL } same as _1


Alias information for main

Aliased symbols


Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { }

Flow-insensitive points-to information

_3, points-to NULL, points-to vars: { D.4358 }
_4, points-to NULL, points-to vars: { D.4359 }
_6, points-to NULL, points-to vars: { D.4360 }
_9, points-to NULL, points-to vars: { D.4358 }
_10, points-to NULL, points-to vars: { D.4359 D.4360 }
p_23, points-to NULL, points-to vars: { D.4358 }

main ()
{
  int i;
  int i;
  struct st * p;
  int d;
  int c;
  int b;
  int a;
  int test;
  long unsigned int _1;
  long unsigned int _2;
  struct st * _3;
  void * _4;
  void * _6;
  long unsigned int _7;
  long unsigned int _8;
  struct st * _9;
  int * _10;
  int _13;

  <bb 2> [0.00%]:
  p_23 = malloc (10);
  goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  _1 = (long unsigned int) i_11;
  _2 = _1 * 16;
  _3 = p_23 + _2;
  _4 = malloc (1);
  _3->f = _4;
  i_35 = i_11 + 1;

  <bb 4> [0.00%]:
  # i_11 = PHI <0(2), i_35(3)>
  if (i_11 <= 9)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 5> [0.00%]:
  _6 = malloc (1);
  MEM[(struct st *)p_23 + 32B].f = _6;
  if (test_27(D) != 0)
    goto <bb 8>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 6> [0.00%]:
  _7 = (long unsigned int) i_12;
  _8 = _7 * 16;
  _9 = p_23 + _8;
  _10 = _9->f;
  free (_10);
  i_31 = i_12 + 1;

  <bb 7> [0.00%]:
  # i_12 = PHI <0(5), i_31(6)>
  if (i_12 <= 9)
    goto <bb 6>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 8> [0.00%]:
  # _13 = PHI <100(5), 0(7)>
  return _13;

}


