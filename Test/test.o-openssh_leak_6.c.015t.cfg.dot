digraph "test.o-openssh_leak_6.c.015t.cfg" {
overlap=false;
subgraph "cluster_sshkey_type_plain" {
	style="dashed";
	color="black";
	label="sshkey_type_plain ()";
	fn_22_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_22_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_22_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|switch\ (type)\ \<default:\ \<L6\>\ [INV],\ case\ 5:\ \<L0\>\ [INV],\ case\ 6:\ \<L2\>\ [INV],\ case\ 7:\ \<L4\>\ [INV],\ case\ 8:\ \<L5\>\ [INV],\ case\ 9:\ \<L0\>\ [INV],\ case\ 10:\ \<L2\>\ [INV]\>\l\
}"];

	fn_22_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|\<L0\>:\l\
|D.3563\ =\ 1;\l\
goto\ \<bb\ 8\>;\ [INV]\l\
}"];

	fn_22_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|\<L2\>:\l\
|D.3563\ =\ 2;\l\
goto\ \<bb\ 8\>;\ [INV]\l\
}"];

	fn_22_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|\<L4\>:\l\
|D.3563\ =\ 3;\l\
goto\ \<bb\ 8\>;\ [INV]\l\
}"];

	fn_22_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|\<L5\>:\l\
|D.3563\ =\ 4;\l\
goto\ \<bb\ 8\>;\ [INV]\l\
}"];

	fn_22_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|\<L6\>:\l\
|D.3563\ =\ type;\l\
}"];

	fn_22_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|return\ D.3563;\l\
}"];

	fn_22_basic_block_0:s -> fn_22_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_22_basic_block_2:s -> fn_22_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_2:s -> fn_22_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_2:s -> fn_22_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_2:s -> fn_22_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_2:s -> fn_22_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_3:s -> fn_22_basic_block_8:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_22_basic_block_4:s -> fn_22_basic_block_8:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_22_basic_block_5:s -> fn_22_basic_block_8:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_22_basic_block_6:s -> fn_22_basic_block_8:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_22_basic_block_7:s -> fn_22_basic_block_8:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_22_basic_block_8:s -> fn_22_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_0:s -> fn_22_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_sshbuf_len" {
	style="dashed";
	color="black";
	label="sshbuf_len ()";
	fn_23_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_23_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_23_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|_1\ =\ buf-\>size;\l\
|_2\ =\ buf-\>off;\l\
|D.3565\ =\ _1\ -\ _2;\l\
|return\ D.3565;\l\
}"];

	fn_23_basic_block_0:s -> fn_23_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_23_basic_block_2:s -> fn_23_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_0:s -> fn_23_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_sshbuf_ptr" {
	style="dashed";
	color="black";
	label="sshbuf_ptr ()";
	fn_24_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_24_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_24_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|_1\ =\ buf-\>cd;\l\
|_2\ =\ buf-\>off;\l\
|D.3567\ =\ _1\ +\ _2;\l\
|return\ D.3567;\l\
}"];

	fn_24_basic_block_0:s -> fn_24_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_24_basic_block_2:s -> fn_24_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_24_basic_block_0:s -> fn_24_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_sshbuf_from" {
	style="dashed";
	color="black";
	label="sshbuf_from ()";
	fn_25_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_25_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_25_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|_1\ =\ blob\ ==\ 0B;\l\
|_2\ =\ len\ \>\ 134217728;\l\
|_3\ =\ _1\ \|\ _2;\l\
|if\ (_3\ !=\ 0)\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
}"];

	fn_25_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|ret\ =\ calloc\ (72,\ 1);\l\
|if\ (ret\ ==\ 0B)\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_25_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|D.3572\ =\ 0B;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_25_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|ret-\>max_size\ =\ len;\l\
|_4\ =\ ret-\>max_size;\l\
|ret-\>size\ =\ _4;\l\
|_5\ =\ ret-\>size;\l\
|ret-\>alloc\ =\ _5;\l\
|ret-\>readonly\ =\ 1;\l\
|ret-\>refcount\ =\ 1;\l\
|ret-\>parent\ =\ 0B;\l\
|ret-\>cd\ =\ blob;\l\
|ret-\>d\ =\ 0B;\l\
|D.3572\ =\ ret;\l\
}"];

	fn_25_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|return\ D.3572;\l\
}"];

	fn_25_basic_block_0:s -> fn_25_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_2:s -> fn_25_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_2:s -> fn_25_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_3:s -> fn_25_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_3:s -> fn_25_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_4:s -> fn_25_basic_block_6:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_5:s -> fn_25_basic_block_6:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_6:s -> fn_25_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_0:s -> fn_25_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_sshbuf_get_string_direct" {
	style="dashed";
	color="black";
	label="sshbuf_get_string_direct ()";
	fn_26_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_26_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_26_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|if\ (valp\ !=\ 0B)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_26_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|*valp\ =\ 0B;\l\
}"];

	fn_26_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|if\ (lenp\ !=\ 0B)\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_26_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|*lenp\ =\ 0;\l\
}"];

	fn_26_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|r\ =\ sshbuf_peek_string_direct\ (buf,\ &p,\ &len);\l\
|if\ (r\ \<\ 0)\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
}"];

	fn_26_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|D.3580\ =\ r;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 13\>;\ [INV]\l\
}"];

	fn_26_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|if\ (valp\ !=\ 0B)\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 10\>;\ [INV]\l\
}"];

	fn_26_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|p.0_1\ =\ p;\l\
|*valp\ =\ p.0_1;\l\
}"];

	fn_26_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 10\>:\l\
|if\ (lenp\ !=\ 0B)\l\
\ \ goto\ \<bb\ 11\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 12\>;\ [INV]\l\
}"];

	fn_26_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 11\>:\l\
|len.1_2\ =\ len;\l\
|*lenp\ =\ len.1_2;\l\
}"];

	fn_26_basic_block_12 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 12\>:\l\
|D.3580\ =\ 0;\l\
}"];

	fn_26_basic_block_13 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 13\>:\l\
|len\ =\ \{CLOBBER\};\l\
|p\ =\ \{CLOBBER\};\l\
|return\ D.3580;\l\
}"];

	fn_26_basic_block_0:s -> fn_26_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_2:s -> fn_26_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_2:s -> fn_26_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_3:s -> fn_26_basic_block_4:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_4:s -> fn_26_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_4:s -> fn_26_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_5:s -> fn_26_basic_block_6:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_6:s -> fn_26_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_6:s -> fn_26_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_7:s -> fn_26_basic_block_13:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_8:s -> fn_26_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_8:s -> fn_26_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_9:s -> fn_26_basic_block_10:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_10:s -> fn_26_basic_block_11:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_10:s -> fn_26_basic_block_12:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_11:s -> fn_26_basic_block_12:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_12:s -> fn_26_basic_block_13:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_13:s -> fn_26_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_0:s -> fn_26_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_sshbuf_peek_string_direct" {
	style="dashed";
	color="black";
	label="sshbuf_peek_string_direct ()";
	fn_27_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_27_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_27_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|p\ =\ sshbuf_ptr\ (buf);\l\
|if\ (valp\ !=\ 0B)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_27_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|*valp\ =\ 0B;\l\
}"];

	fn_27_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|if\ (lenp\ !=\ 0B)\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_27_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|*lenp\ =\ 0;\l\
}"];

	fn_27_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|_1\ =\ sshbuf_len\ (buf);\l\
|if\ (_1\ \<=\ 3)\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
}"];

	fn_27_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|printf\ (\"%s:%d\ %s:\ \",\ \"./benchmarks/openssh-portable/leak_6/openssh_leak_6.c\",\ 108,\ &__func__);\l\
|printf\ (\"SSH_ERR_MESSAGE_INCOMPLETE\");\l\
|__builtin_putchar\ (10);\l\
|stdout.2_2\ =\ stdout;\l\
|fflush\ (stdout.2_2);\l\
|D.3593\ =\ -3;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 15\>;\ [INV]\l\
}"];

	fn_27_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|len\ =\ 15;\l\
|if\ (len\ \>\ 134217724)\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 10\>;\ [INV]\l\
}"];

	fn_27_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|printf\ (\"%s:%d\ %s:\ \",\ \"./benchmarks/openssh-portable/leak_6/openssh_leak_6.c\",\ 113,\ &__func__);\l\
|printf\ (\"SSH_ERR_STRING_TOO_LARGE\");\l\
|__builtin_putchar\ (10);\l\
|stdout.3_3\ =\ stdout;\l\
|fflush\ (stdout.3_3);\l\
|D.3593\ =\ -6;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 15\>;\ [INV]\l\
}"];

	fn_27_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 10\>:\l\
|if\ (valp\ !=\ 0B)\l\
\ \ goto\ \<bb\ 11\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 12\>;\ [INV]\l\
}"];

	fn_27_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 11\>:\l\
|_4\ =\ p\ +\ 4;\l\
|*valp\ =\ _4;\l\
}"];

	fn_27_basic_block_12 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 12\>:\l\
|if\ (lenp\ !=\ 0B)\l\
\ \ goto\ \<bb\ 13\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 14\>;\ [INV]\l\
}"];

	fn_27_basic_block_13 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 13\>:\l\
|_5\ =\ (long\ unsigned\ int)\ len;\l\
|*lenp\ =\ _5;\l\
}"];

	fn_27_basic_block_14 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 14\>:\l\
|D.3593\ =\ 0;\l\
}"];

	fn_27_basic_block_15 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 15\>:\l\
|return\ D.3593;\l\
}"];

	fn_27_basic_block_0:s -> fn_27_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_2:s -> fn_27_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_2:s -> fn_27_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_3:s -> fn_27_basic_block_4:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_4:s -> fn_27_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_4:s -> fn_27_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_5:s -> fn_27_basic_block_6:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_6:s -> fn_27_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_6:s -> fn_27_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_7:s -> fn_27_basic_block_15:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_8:s -> fn_27_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_8:s -> fn_27_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_9:s -> fn_27_basic_block_15:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_10:s -> fn_27_basic_block_11:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_10:s -> fn_27_basic_block_12:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_11:s -> fn_27_basic_block_12:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_12:s -> fn_27_basic_block_13:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_12:s -> fn_27_basic_block_14:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_13:s -> fn_27_basic_block_14:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_14:s -> fn_27_basic_block_15:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_15:s -> fn_27_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_0:s -> fn_27_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_sshbuf_get_cstring" {
	style="dashed";
	color="black";
	label="sshbuf_get_cstring ()";
	fn_28_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_28_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_28_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|if\ (valp\ !=\ 0B)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_28_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|*valp\ =\ 0B;\l\
}"];

	fn_28_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|if\ (lenp\ !=\ 0B)\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_28_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|*lenp\ =\ 0;\l\
}"];

	fn_28_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|r\ =\ sshbuf_peek_string_direct\ (buf,\ &p,\ &len);\l\
|if\ (r\ !=\ 0)\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
}"];

	fn_28_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|D.3607\ =\ r;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 17\>;\ [INV]\l\
}"];

	fn_28_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|r\ =\ sshbuf_get_string_direct\ (buf,\ 0B,\ 0B);\l\
|if\ (r\ !=\ 0)\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 10\>;\ [INV]\l\
}"];

	fn_28_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|D.3607\ =\ -1;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 17\>;\ [INV]\l\
}"];

	fn_28_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 10\>:\l\
|if\ (valp\ !=\ 0B)\l\
\ \ goto\ \<bb\ 11\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 14\>;\ [INV]\l\
}"];

	fn_28_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 11\>:\l\
|len.4_1\ =\ len;\l\
|_2\ =\ len.4_1\ +\ 1;\l\
|_3\ =\ malloc\ (_2);\l\
|*valp\ =\ _3;\l\
|_4\ =\ *valp;\l\
|if\ (_4\ ==\ 0B)\l\
\ \ goto\ \<bb\ 12\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 13\>;\ [INV]\l\
}"];

	fn_28_basic_block_12 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 12\>:\l\
|printf\ (\"%s:%d\ %s:\ \",\ \"./benchmarks/openssh-portable/leak_6/openssh_leak_6.c\",\ 141,\ &__func__);\l\
|printf\ (\"SSH_ERR_ALLOC_FAIL\");\l\
|__builtin_putchar\ (10);\l\
|stdout.5_5\ =\ stdout;\l\
|fflush\ (stdout.5_5);\l\
|D.3607\ =\ -2;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 17\>;\ [INV]\l\
}"];

	fn_28_basic_block_13 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 13\>:\l\
|len.6_6\ =\ len;\l\
|p.7_7\ =\ p;\l\
|_8\ =\ *valp;\l\
|memcpy\ (_8,\ p.7_7,\ len.6_6);\l\
|_9\ =\ *valp;\l\
|len.8_10\ =\ len;\l\
|_11\ =\ _9\ +\ len.8_10;\l\
|*_11\ =\ 0;\l\
}"];

	fn_28_basic_block_14 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 14\>:\l\
|if\ (lenp\ !=\ 0B)\l\
\ \ goto\ \<bb\ 15\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 16\>;\ [INV]\l\
}"];

	fn_28_basic_block_15 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 15\>:\l\
|len.9_12\ =\ len;\l\
|*lenp\ =\ len.9_12;\l\
}"];

	fn_28_basic_block_16 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 16\>:\l\
|D.3607\ =\ 0;\l\
}"];

	fn_28_basic_block_17 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 17\>:\l\
|len\ =\ \{CLOBBER\};\l\
|p\ =\ \{CLOBBER\};\l\
|return\ D.3607;\l\
}"];

	fn_28_basic_block_0:s -> fn_28_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_2:s -> fn_28_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_2:s -> fn_28_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_3:s -> fn_28_basic_block_4:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_4:s -> fn_28_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_4:s -> fn_28_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_5:s -> fn_28_basic_block_6:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_6:s -> fn_28_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_6:s -> fn_28_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_7:s -> fn_28_basic_block_17:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_8:s -> fn_28_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_8:s -> fn_28_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_9:s -> fn_28_basic_block_17:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_10:s -> fn_28_basic_block_11:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_10:s -> fn_28_basic_block_14:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_11:s -> fn_28_basic_block_12:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_11:s -> fn_28_basic_block_13:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_12:s -> fn_28_basic_block_17:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_13:s -> fn_28_basic_block_14:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_14:s -> fn_28_basic_block_15:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_14:s -> fn_28_basic_block_16:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_15:s -> fn_28_basic_block_16:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_16:s -> fn_28_basic_block_17:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_17:s -> fn_28_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_0:s -> fn_28_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_ssh_ed25519_verify" {
	style="dashed";
	color="black";
	label="ssh_ed25519_verify ()";
	fn_29_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_29_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_29_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|b\ =\ 0B;\l\
|ktype\ =\ 0B;\l\
|sm\ =\ 0B;\l\
|m\ =\ 0B;\l\
|smlen\ =\ 0;\l\
|mlen\ =\ 0;\l\
|b\ =\ sshbuf_from\ (signature,\ signaturelen);\l\
|if\ (b\ ==\ 0B)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_29_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|D.3620\ =\ -2;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 15\>;\ [INV]\l\
}"];

	fn_29_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|r\ =\ sshbuf_get_cstring\ (b,\ &ktype,\ 0B);\l\
|if\ (r\ !=\ 0)\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_29_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|r\ =\ sshbuf_get_string_direct\ (b,\ &sigblob,\ &len);\l\
|if\ (r\ !=\ 0)\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_29_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|//\ predicted\ unlikely\ by\ goto\ predictor.\l\
goto\ \<bb\ 14\>;\ [INV]\l\
}"];

	fn_29_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|ktype.10_1\ =\ ktype;\l\
|_2\ =\ strcmp\ (\"ssh-ed25519\",\ ktype.10_1);\l\
|if\ (_2\ !=\ 0)\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
}"];

	fn_29_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|r\ =\ -13;\l\
|//\ predicted\ unlikely\ by\ goto\ predictor.\l\
goto\ \<bb\ 14\>;\ [INV]\l\
}"];

	fn_29_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|len.11_3\ =\ len;\l\
|if\ (len.11_3\ \>\ 64)\l\
\ \ goto\ \<bb\ 10\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 11\>;\ [INV]\l\
}"];

	fn_29_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 10\>:\l\
|r\ =\ -4;\l\
|//\ predicted\ unlikely\ by\ goto\ predictor.\l\
goto\ \<bb\ 14\>;\ [INV]\l\
}"];

	fn_29_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 11\>:\l\
|len.12_4\ =\ len;\l\
|_5\ =\ 15\ -\ len.12_4;\l\
|if\ (datalen\ \>=\ _5)\l\
\ \ goto\ \<bb\ 12\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 13\>;\ [INV]\l\
}"];

	fn_29_basic_block_12 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 12\>:\l\
|D.3620\ =\ -10;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 15\>;\ [INV]\l\
}"];

	fn_29_basic_block_13 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 13\>:\l\
|r\ =\ 0;\l\
}"];

	fn_29_basic_block_14 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 14\>:\l\
|out:\l\
|free\ (b);\l\
|ktype.13_6\ =\ ktype;\l\
|free\ (ktype.13_6);\l\
|D.3620\ =\ r;\l\
}"];

	fn_29_basic_block_15 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 15\>:\l\
|ktype\ =\ \{CLOBBER\};\l\
|sigblob\ =\ \{CLOBBER\};\l\
|len\ =\ \{CLOBBER\};\l\
|return\ D.3620;\l\
}"];

	fn_29_basic_block_0:s -> fn_29_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_29_basic_block_2:s -> fn_29_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_2:s -> fn_29_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_3:s -> fn_29_basic_block_15:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_29_basic_block_4:s -> fn_29_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_4:s -> fn_29_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_5:s -> fn_29_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_5:s -> fn_29_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_6:s -> fn_29_basic_block_14:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_29_basic_block_7:s -> fn_29_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_7:s -> fn_29_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_8:s -> fn_29_basic_block_14:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_29_basic_block_9:s -> fn_29_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_9:s -> fn_29_basic_block_11:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_10:s -> fn_29_basic_block_14:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_29_basic_block_11:s -> fn_29_basic_block_12:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_11:s -> fn_29_basic_block_13:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_12:s -> fn_29_basic_block_15:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_29_basic_block_13:s -> fn_29_basic_block_14:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_29_basic_block_14:s -> fn_29_basic_block_15:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_29_basic_block_15:s -> fn_29_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_0:s -> fn_29_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_main" {
	style="dashed";
	color="black";
	label="main ()";
	fn_30_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_30_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_30_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|sign\ =\ \"key:ssh-ed25519\";\l\
|siglen\ =\ strlen\ (sign);\l\
|_1\ =\ time\ (0B);\l\
|_2\ =\ (unsigned\ int)\ _1;\l\
|srand\ (_2);\l\
|if\ (argc\ ==\ 1)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_30_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|_3\ =\ *argv;\l\
|printf\ (\"no\ data\ %s\\n\",\ _3);\l\
|exit\ (1);\l\
}"];

	fn_30_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|data\ =\ MEM[(char\ *\ *)argv\ +\ 8B];\l\
|datalen\ =\ strlen\ (data);\l\
|ssh_ed25519_verify\ (&key,\ sign,\ siglen,\ data,\ datalen);\l\
|D.3634\ =\ 0;\l\
|b\ =\ \{CLOBBER\};\l\
|key\ =\ \{CLOBBER\};\l\
|return\ D.3634;\l\
}"];

	fn_30_basic_block_0:s -> fn_30_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_2:s -> fn_30_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_2:s -> fn_30_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_4:s -> fn_30_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_0:s -> fn_30_basic_block_1:n [style="invis",constraint=true];
}
}
