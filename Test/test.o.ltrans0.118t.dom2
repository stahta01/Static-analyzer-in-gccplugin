
;; Function winlink_stack_remove (winlink_stack_remove, funcdef_no=11, decl_uid=4468, cgraph_uid=30, symbol_order=77)

Created preheader block for loop 1
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 13 6 7 8 9 12 10 11
;;
;; Loop 1
;;  header 10, latch 13
;;  depth 1, outer 0
;;  nodes: 10 13 5
;; 2 succs { 11 3 }
;; 3 succs { 4 11 }
;; 4 succs { 6 12 }
;; 5 succs { 6 13 }
;; 13 succs { 10 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 11 }
;; 12 succs { 10 }
;; 10 succs { 5 11 }
;; 11 succs { 1 }
Removing basic block 12
Removing basic block 13
winlink_stack_remove (struct winlink_stack * stack, struct winlink * wl)
{
  struct winlink * wl2;
  struct winlink * _1;
  struct winlink * _2;
  struct winlink * * _3;
  struct winlink * * _4;
  struct winlink * * _5;
  struct winlink * _6;

  <bb 2> [19.71%]:
  if (wl_10(D) == 0B)
    goto <bb 11>; [26.74%]
  else
    goto <bb 3>; [73.26%]

  <bb 3> [14.44%]:
  wl2_13 = stack_12(D)->tqh_first;
  if (wl2_13 != 0B)
    goto <bb 4>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 4> [13.32%]:
  if (wl_10(D) == wl2_13)
    goto <bb 6>; [7.50%]
  else
    goto <bb 10>; [92.50%]

  <bb 5> [79.18%]:
  if (wl_10(D) == wl2_14)
    goto <bb 6>; [7.50%]
  else
    goto <bb 10>; [92.50%]

  <bb 6> [6.94%]:
  _1 = wl_10(D)->sentry.tqe_next;
  if (_1 != 0B)
    goto <bb 7>; [70.00%]
  else
    goto <bb 8>; [30.00%]

  <bb 7> [4.86%]:
  _2 = _1;
  _3 = wl_10(D)->sentry.tqe_prev;
  _1->sentry.tqe_prev = _3;
  goto <bb 9>; [100.00%]

  <bb 8> [2.08%]:
  _4 = wl_10(D)->sentry.tqe_prev;
  stack_12(D)->tqh_last = _4;

  <bb 9> [6.94%]:
  _5 = wl_10(D)->sentry.tqe_prev;
  _6 = wl_10(D)->sentry.tqe_next;
  *_5 = _6;
  goto <bb 11>; [100.00%]

  <bb 10> [85.60%]:
  # wl2_22 = PHI <wl2_14(5), wl2_13(4)>
  wl2_14 = wl2_22->sentry.tqe_next;
  if (wl2_14 != 0B)
    goto <bb 5>; [92.50%]
  else
    goto <bb 11>; [7.50%]

  <bb 11> [19.71%]:
  return;

}



;; Function session_group_find (session_group_find, funcdef_no=6, decl_uid=4483, cgraph_uid=36, symbol_order=70)

Created preheader block for loop 1
Created preheader block for loop 2
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 9 3 4 10 5 12 6 7 11 8
;;
;; Loop 1
;;  header 3, latch 11
;;  depth 1, outer 0
;;  nodes: 3 11 7 6 12 10 4 5
;;
;; Loop 2
;;  header 6, latch 12
;;  depth 2, outer 1
;;  nodes: 6 12 5
;; 2 succs { 9 8 }
;; 9 succs { 3 }
;; 3 succs { 4 7 }
;; 4 succs { 8 10 }
;; 10 succs { 6 }
;; 5 succs { 8 12 }
;; 12 succs { 6 }
;; 6 succs { 5 7 }
;; 7 succs { 11 8 }
;; 11 succs { 3 }
;; 8 succs { 1 }
Removing basic block 9
Removing basic block 10
Removing basic block 11
Removing basic block 12
session_group_find (struct session * target)
{
  struct session * s;
  struct session_group * sg;
  struct session_group * _3;

  <bb 2> [8.12%]:
  sg_5 = session_groups.tqh_first;
  if (sg_5 != 0B)
    goto <bb 3>; [92.50%]
  else
    goto <bb 8>; [7.50%]

  <bb 3> [14.44%]:
  # sg_13 = PHI <sg_7(7), sg_5(2)>
  s_6 = sg_13->sessions.tqh_first;
  if (s_6 != 0B)
    goto <bb 4>; [92.50%]
  else
    goto <bb 7>; [7.50%]

  <bb 4> [13.32%]:
  if (s_6 == target_8(D))
    goto <bb 8>; [7.50%]
  else
    goto <bb 6>; [92.50%]

  <bb 5> [79.18%]:
  if (target_8(D) == s_9)
    goto <bb 8>; [7.50%]
  else
    goto <bb 6>; [92.50%]

  <bb 6> [85.60%]:
  # s_14 = PHI <s_9(5), s_6(4)>
  s_9 = s_14->gentry.tqe_next;
  if (s_9 != 0B)
    goto <bb 5>; [92.50%]
  else
    goto <bb 7>; [7.50%]

  <bb 7> [7.50%]:
  sg_7 = sg_13->entry.tqe_next;
  if (sg_7 != 0B)
    goto <bb 3>; [92.50%]
  else
    goto <bb 8>; [7.50%]

  <bb 8> [8.11%]:
  # _3 = PHI <sg_13(5), 0B(7), 0B(2), sg_13(4)>
  return _3;

}



;; Function winlinks_RB_NEXT (winlinks_RB_NEXT, funcdef_no=0, decl_uid=4488, cgraph_uid=42, symbol_order=60)

Created preheader block for loop 2
Created preheader block for loop 1
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 14 4 16 5 6 7 8 9 15 10 11 17 12 13
;;
;; Loop 2
;;  header 4, latch 16
;;  depth 1, outer 0
;;  nodes: 4 16
;;
;; Loop 1
;;  header 10, latch 17
;;  depth 1, outer 0
;;  nodes: 10 17 11
;; 2 succs { 3 5 }
;; 3 succs { 14 13 }
;; 14 succs { 4 }
;; 4 succs { 16 13 }
;; 16 succs { 4 }
;; 5 succs { 8 6 }
;; 6 succs { 7 12 }
;; 7 succs { 15 12 }
;; 8 succs { 9 6 }
;; 9 succs { 13 }
;; 15 succs { 10 }
;; 10 succs { 11 12 }
;; 11 succs { 17 12 }
;; 17 succs { 10 }
;; 12 succs { 13 }
;; 13 succs { 1 }
Removing basic block 6
Removing basic block 14
Removing basic block 15
Removing basic block 16
Removing basic block 17
Merging blocks 18 and 7

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

elm_9 -> { elm_19 elm_23 }
_10 -> { _24 }
_21 -> { _10 _24 }
elm_23 -> { elm_19 }

SSA names to release after updating the SSA web

elm_19 _24 
Incremental SSA update started at block: 5
Number of blocks in CFG: 14
Number of blocks to update: 5 ( 36%)


winlinks_RB_NEXT (struct winlink * elm)
{
  struct winlink * _1;
  struct winlink * _2;
  struct winlink * _3;
  struct winlink * _4;
  struct winlink * _5;
  struct winlink * _6;
  struct winlink * _7;
  struct winlink * _8;
  struct winlink * _10;
  struct winlink * _21;
  struct winlink * _22;
  struct winlink * _25;
  struct winlink * _26;

  <bb 2> [21.43%]:
  _1 = elm_13(D)->entry.rbe_right;
  if (_1 != 0B)
    goto <bb 3>; [70.00%]
  else
    goto <bb 5>; [30.00%]

  <bb 3> [15.00%]:
  elm_17 = _1;
  _22 = _1->entry.rbe_left;
  if (_22 != 0B)
    goto <bb 4>; [85.00%]
  else
    goto <bb 11>; [15.00%]

  <bb 4> [85.00%]:
  # elm_27 = PHI <elm_18(4), _1(3)>
  elm_18 = elm_27->entry.rbe_left;
  _2 = elm_18->entry.rbe_left;
  if (_2 != 0B)
    goto <bb 4>; [85.00%]
  else
    goto <bb 11>; [15.00%]

  <bb 5> [6.43%]:
  _3 = elm_13(D)->entry.rbe_parent;
  if (_3 != 0B)
    goto <bb 6>; [70.00%]
  else
    goto <bb 13>; [30.00%]

  <bb 6> [4.50%]:
  _4 = _3;
  _5 = _3->entry.rbe_left;
  if (_5 == elm_13(D))
    goto <bb 7>; [26.74%]
  else
    goto <bb 12>; [73.26%]

  <bb 7> [1.20%]:
  elm_14 = _5->entry.rbe_parent;
  goto <bb 11>; [100.00%]

  <bb 8> [30.97%]:
  # elm_28 = PHI <_8(9), elm_13(D)(12)>
  elm_15 = elm_28->entry.rbe_parent;
  _6 = elm_15->entry.rbe_parent;
  if (_6 != 0B)
    goto <bb 9>; [92.50%]
  else
    goto <bb 10>; [7.50%]

  <bb 9> [28.63%]:
  _7 = _6;
  _8 = _6->entry.rbe_right;
  if (_8 == elm_15)
    goto <bb 8>; [92.50%]
  else
    goto <bb 10>; [7.50%]

  <bb 10> [5.23%]:
  # elm_29 = PHI <elm_15(8), elm_15(9), elm_13(D)(13), elm_13(D)(12)>
  elm_16 = elm_29->entry.rbe_parent;

  <bb 11> [21.43%]:
  # elm_11 = PHI <elm_18(4), elm_14(7), elm_16(10), _1(3)>
  return elm_11;

  <bb 12> [4.85%]:
  # elm_23 = PHI <elm_13(D)(6)>
  _10 = _3;
  _25 = _3;
  _26 = _3->entry.rbe_right;
  if (elm_13(D) == _26)
    goto <bb 8>; [92.50%]
  else
    goto <bb 10>; [7.50%]

  <bb 13> [1.93%]:
  # elm_9 = PHI <elm_13(D)(5)>
  _21 = _3;
  goto <bb 10>; [100.00%]

}



;; Function cmd_find_pane (cmd_find_pane, funcdef_no=5, decl_uid=4484, cgraph_uid=37, symbol_order=68) (executed once)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { 9 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 1 }
cmd_find_pane (int arg, struct session * * sp)
{
  struct session * s;
  unsigned int _1;
  struct session * * _2;
  struct winlink * _3;
  struct winlink * _4;
  int _12;
  struct winlink * _13;
  struct winlink * _14;

  <bb 2> [100.00%]:
  _1 = sessions.num;
  if (_1 == 0)
    goto <bb 3>; [4.64%]
  else
    goto <bb 4>; [95.36%]

  <bb 3> [4.64%]:
  _12 = __printf_chk (1, "can\'t establish current session\n");
  goto <bb 9>; [100.00%]

  <bb 4> [95.36%]:
  _2 = sessions.list;
  s_8 = MEM[(struct session * *)_2 + 8B];
  if (sp_9(D) != 0B)
    goto <bb 5>; [70.00%]
  else
    goto <bb 6>; [30.00%]

  <bb 5> [66.75%]:
  *sp_9(D) = s_8;

  <bb 6> [95.36%]:
  if (arg_11(D) != 0)
    goto <bb 7>; [63.36%]
  else
    goto <bb 8>; [36.64%]

  <bb 7> [60.42%]:
  _14 = s_8->curw;
  goto <bb 9>; [100.00%]

  <bb 8> [34.94%]:
  _3 = s_8->curw;
  _13 = winlinks_RB_NEXT (_3);

  <bb 9> [100.00%]:
  # _4 = PHI <0B(3), _14(7), _13(8)>
  return _4;

}



;; Function winlink_find_by_index (winlink_find_by_index, funcdef_no=2, decl_uid=4485, cgraph_uid=38, symbol_order=64)

Created preheader block for loop 1
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 11 5 6 7 8 9 12 10
;;
;; Loop 1
;;  header 5, latch 12
;;  depth 1, outer 0
;;  nodes: 5 12 9 8 6 7
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 11 10 }
;; 11 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 9 }
;; 7 succs { 8 10 }
;; 8 succs { 9 }
;; 9 succs { 12 10 }
;; 12 succs { 5 }
;; 10 succs { 1 }
Removing basic block 11
Removing basic block 12
winlink_find_by_index (struct winlinks * wwl, int idx)
{
  int wl$idx;
  int D.4548;
  struct winlink * tmp;
  int comp;
  struct winlink * D.4541;
  struct winlink wl;
  int _5;
  struct winlink * _18;
  int _20;
  int _21;
  int _22;

  <bb 2> [11.94%]:
  if (idx_1(D) < 0)
    goto <bb 3>; [0.04%]
  else
    goto <bb 4>; [99.96%]

  <bb 3> [0.00%]:
  _5 = __printf_chk (1, "bad index%s", "");
  exit (1);

  <bb 4> [11.94%]:
  wl$idx_13 = idx_1(D);
  tmp_12 = wwl_4(D)->rbh_root;
  if (tmp_12 != 0B)
    goto <bb 5>; [92.50%]
  else
    goto <bb 10>; [7.50%]

  <bb 5> [92.50%]:
  # tmp_23 = PHI <tmp_19(9), tmp_12(4)>
  _20 = idx_1(D);
  _21 = tmp_23->idx;
  _22 = idx_1(D) - _21;
  if (_22 < 0)
    goto <bb 6>; [36.00%]
  else
    goto <bb 7>; [64.00%]

  <bb 6> [33.30%]:
  tmp_15 = tmp_23->entry.rbe_left;
  goto <bb 9>; [100.00%]

  <bb 7> [59.20%]:
  if (_22 > 0)
    goto <bb 8>; [92.50%]
  else
    goto <bb 10>; [7.50%]

  <bb 8> [54.76%]:
  tmp_16 = tmp_23->entry.rbe_right;

  <bb 9> [88.10%]:
  # tmp_19 = PHI <tmp_16(8), tmp_15(6)>
  if (tmp_19 != 0B)
    goto <bb 5>; [92.50%]
  else
    goto <bb 10>; [7.50%]

  <bb 10> [11.94%]:
  # _18 = PHI <tmp_23(7), 0B(9), 0B(4)>
  wl ={v} {CLOBBER};
  return _18;

}



;; Function session_select (session_select, funcdef_no=23, decl_uid=4456, cgraph_uid=17, symbol_order=88)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 10 3 }
;; 3 succs { 10 4 }
;; 4 succs { 9 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 1 }
session_select (struct session * s, int idx)
{
  struct winlink * wl;
  struct winlinks * _1;
  struct winlink * _2;
  struct winlink_stack * _3;
  struct winlink * _4;
  struct winlink_stack * _5;
  int _6;
  struct winlink * _19;
  struct winlink * _20;
  struct winlink * _21;
  struct winlink * * _22;
  struct winlink * * _23;
  struct winlink * * _24;

  <bb 2> [100.00%]:
  _1 = &s_8(D)->windows;
  wl_12 = winlink_find_by_index (_1, idx_10(D));
  if (wl_12 == 0B)
    goto <bb 10>; [0.87%]
  else
    goto <bb 3>; [99.13%]

  <bb 3> [99.13%]:
  _2 = s_8(D)->curw;
  if (_2 == wl_12)
    goto <bb 10>; [42.57%]
  else
    goto <bb 4>; [57.43%]

  <bb 4> [56.93%]:
  _3 = &s_8(D)->lastw;
  winlink_stack_remove (_3, wl_12);
  _4 = s_8(D)->curw;
  _5 = _3;
  if (_4 == 0B)
    goto <bb 9>; [42.57%]
  else
    goto <bb 5>; [57.43%]

  <bb 5> [32.70%]:
  winlink_stack_remove (_3, _4);
  _19 = MEM[(struct winlink_stack *)s_8(D) + 24B].tqh_first;
  _4->sentry.tqe_next = _19;
  _20 = _19;
  if (_19 != 0B)
    goto <bb 6>; [70.00%]
  else
    goto <bb 7>; [30.00%]

  <bb 6> [22.89%]:
  _21 = MEM[(struct winlink_stack *)s_8(D) + 24B].tqh_first;
  _22 = &_4->sentry.tqe_next;
  _21->sentry.tqe_prev = _22;
  goto <bb 8>; [100.00%]

  <bb 7> [9.81%]:
  _23 = &_4->sentry.tqe_next;
  MEM[(struct winlink_stack *)s_8(D) + 24B].tqh_last = _23;

  <bb 8> [32.70%]:
  MEM[(struct winlink_stack *)s_8(D) + 24B].tqh_first = _4;
  _24 = &MEM[(struct winlink_stack *)s_8(D) + 24B].tqh_first;
  _4->sentry.tqe_prev = _24;

  <bb 9> [56.93%]:
  s_8(D)->curw = wl_12;

  <bb 10> [100.00%]:
  # _6 = PHI <-1(2), 1(3), 0(9)>
  return _6;

}



;; Function winlink_remove (winlink_remove, funcdef_no=12, decl_uid=4463, cgraph_uid=25, symbol_order=80)

Created preheader block for loop 5
Created preheader block for loop 3
Created preheader block for loop 1
;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 140 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 137 25 139 26 27 28 29 30 31 32 33 136 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 135 120 138 121 122 123 124 125 126 127 128 129 130 131 132 133 134
;;
;; Loop 4
;;  header 129, latch 128
;;  depth 1, outer 0
;;  nodes: 129 128 127 126 125 130
;;
;; Loop 5
;;  header 121, latch 138
;;  depth 1, outer 0
;;  nodes: 121 138 120
;;
;; Loop 3
;;  header 108, latch 107
;;  depth 1, outer 0
;;  nodes: 108 107 84 48 46 47 44 45 35 43 40 41 42 38 36 37 39 34 110 109 82 83 80 81 71 79 76 77 78 74 72 73 75
;;
;; Loop 1
;;  header 25, latch 139
;;  depth 1, outer 0
;;  nodes: 25 139
;;
;; Loop 2
;;  header 7, latch 140
;;  depth 1, outer 0
;;  nodes: 7 140
;; 2 succs { 3 4 }
;; 3 succs { 26 }
;; 4 succs { 5 6 }
;; 5 succs { 26 }
;; 6 succs { 7 }
;; 7 succs { 140 8 }
;; 140 succs { 7 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 14 }
;; 11 succs { 12 13 }
;; 12 succs { 15 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 17 }
;; 16 succs { 17 }
;; 17 succs { 18 21 }
;; 18 succs { 19 20 }
;; 19 succs { 22 }
;; 20 succs { 22 }
;; 21 succs { 22 }
;; 22 succs { 23 24 }
;; 23 succs { 24 }
;; 24 succs { 137 33 }
;; 137 succs { 25 }
;; 25 succs { 139 33 }
;; 139 succs { 25 }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 29 32 }
;; 29 succs { 30 31 }
;; 30 succs { 33 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 136 113 }
;; 136 succs { 108 }
;; 34 succs { 35 71 }
;; 35 succs { 36 44 }
;; 36 succs { 37 38 }
;; 37 succs { 38 }
;; 38 succs { 39 42 }
;; 39 succs { 40 41 }
;; 40 succs { 43 }
;; 41 succs { 43 }
;; 42 succs { 43 }
;; 43 succs { 44 }
;; 44 succs { 46 45 }
;; 45 succs { 46 49 }
;; 46 succs { 48 47 }
;; 47 succs { 48 49 }
;; 48 succs { 107 }
;; 49 succs { 51 50 }
;; 50 succs { 51 61 }
;; 51 succs { 52 53 }
;; 52 succs { 53 }
;; 53 succs { 54 55 }
;; 54 succs { 55 }
;; 55 succs { 56 59 }
;; 56 succs { 57 58 }
;; 57 succs { 60 }
;; 58 succs { 60 }
;; 59 succs { 60 }
;; 60 succs { 61 }
;; 61 succs { 62 63 }
;; 62 succs { 63 }
;; 63 succs { 64 65 }
;; 64 succs { 65 }
;; 65 succs { 66 69 }
;; 66 succs { 67 68 }
;; 67 succs { 70 }
;; 68 succs { 70 }
;; 69 succs { 70 }
;; 70 succs { 111 }
;; 71 succs { 72 80 }
;; 72 succs { 73 74 }
;; 73 succs { 74 }
;; 74 succs { 75 78 }
;; 75 succs { 76 77 }
;; 76 succs { 79 }
;; 77 succs { 79 }
;; 78 succs { 79 }
;; 79 succs { 80 }
;; 80 succs { 82 81 }
;; 81 succs { 82 85 }
;; 82 succs { 84 83 }
;; 83 succs { 84 85 }
;; 84 succs { 107 }
;; 85 succs { 87 86 }
;; 86 succs { 87 97 }
;; 87 succs { 88 89 }
;; 88 succs { 89 }
;; 89 succs { 90 91 }
;; 90 succs { 91 }
;; 91 succs { 92 95 }
;; 92 succs { 93 94 }
;; 93 succs { 96 }
;; 94 succs { 96 }
;; 95 succs { 96 }
;; 96 succs { 97 }
;; 97 succs { 98 99 }
;; 98 succs { 99 }
;; 99 succs { 100 101 }
;; 100 succs { 101 }
;; 101 succs { 102 105 }
;; 102 succs { 103 104 }
;; 103 succs { 106 }
;; 104 succs { 106 }
;; 105 succs { 106 }
;; 106 succs { 111 }
;; 107 succs { 108 }
;; 108 succs { 110 109 }
;; 109 succs { 110 111 }
;; 110 succs { 34 111 }
;; 111 succs { 112 113 }
;; 112 succs { 113 }
;; 113 succs { 114 115 }
;; 114 succs { 115 }
;; 115 succs { 116 117 }
;; 116 succs { }
;; 117 succs { 118 134 }
;; 118 succs { 119 122 }
;; 119 succs { 122 135 }
;; 135 succs { 121 }
;; 120 succs { 122 138 }
;; 138 succs { 121 }
;; 121 succs { 120 122 }
;; 122 succs { 123 124 }
;; 123 succs { }
;; 124 succs { 129 }
;; 125 succs { 126 127 }
;; 126 succs { 128 }
;; 127 succs { 128 }
;; 128 succs { 129 }
;; 129 succs { 130 131 }
;; 130 succs { 125 131 }
;; 131 succs { 132 133 }
;; 132 succs { 133 }
;; 133 succs { 134 }
;; 134 succs { 1 }
Removing basic block 122
Removing basic block 85
Removing basic block 49
Removing basic block 135
Removing basic block 136
Removing basic block 137
Removing basic block 138
Removing basic block 139
Removing basic block 140
Merging blocks 149 and 123
Merging blocks 150 and 124

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_23 -> { _86 }
oleft_27 -> { oleft_89 }
parent_240 -> { parent_54 }
_324 -> { _86 }
color_325 -> { color_55 }
child_338 -> { child_56 }
_342 -> { _141 }
oright_343 -> { oright_144 }
_344 -> { _141 }
elm_345 -> { elm_175 }
.MEM_346 -> { .MEM_238 }
_347 -> { _209 }
.MEM_348 -> { .MEM_326 }
i_349 -> { i_335 }
_350 -> { _209 _347 }
.MEM_351 -> { .MEM_326 .MEM_348 }
i_352 -> { i_335 i_349 }
parent_353 -> { parent_54 }
parent_354 -> { parent_54 }
color_355 -> { color_55 }
color_356 -> { color_55 }
child_357 -> { child_56 }
child_358 -> { child_56 }
_359 -> { _86 }
oright_360 -> { oright_144 }
elm_361 -> { elm_175 }
.MEM_362 -> { .MEM_238 }

SSA names to release after updating the SSA web

_86 _141 _209 .MEM_326 i_335 
Incremental SSA update started at block: 2
Number of blocks in CFG: 140
Number of blocks to update: 35 ( 25%)


winlink_remove (struct winlinks * wwl, struct winlink * wl)
{
  int D.4654;
  u_int i;
  struct winlink * tmp;
  struct winlink * oleft;
  struct winlink * oright;
  struct winlink * parent;
  struct winlink * elm;
  struct winlink * child;
  struct winlink * parent;
  int color;
  struct winlink * left;
  struct winlink * D.4627;
  struct winlink * elm;
  struct window * w;
  char * _1;
  char * _2;
  unsigned int _3;
  unsigned int _4;
  unsigned int _5;
  unsigned int _6;
  int _19;
  struct winlink * _23;
  struct winlink * _30;
  struct winlink * _32;
  struct winlink * _40;
  struct winlink * _41;
  struct window * * _42;
  struct winlink * _43;
  struct winlink * _44;
  struct winlink * _45;
  struct winlink * _46;
  struct winlink * _47;
  struct winlink * _48;
  struct winlink * _49;
  struct winlink * _50;
  struct winlink * _57;
  struct winlink * _62;
  int _65;
  struct winlink * _67;
  struct winlink * _68;
  struct winlink * _69;
  struct winlink * _70;
  struct winlink * _71;
  struct winlink * _72;
  struct winlink * _73;
  struct winlink * _74;
  struct winlink * _75;
  struct winlink * _76;
  struct winlink * _79;
  struct winlink * _80;
  int _81;
  struct winlink * _82;
  struct winlink * _83;
  int _84;
  struct winlink * _87;
  int _88;
  struct winlink * _91;
  struct winlink * _92;
  struct winlink * _93;
  struct winlink * _94;
  struct winlink * _95;
  struct winlink * _96;
  struct winlink * _97;
  struct winlink * _98;
  struct winlink * _99;
  struct winlink * _100;
  int _102;
  struct winlink * _104;
  struct winlink * _105;
  struct winlink * _107;
  struct winlink * _108;
  struct winlink * _109;
  struct winlink * _110;
  struct winlink * _111;
  struct winlink * _112;
  struct winlink * _113;
  struct winlink * _114;
  struct winlink * _115;
  struct winlink * _116;
  int _119;
  struct winlink * _121;
  struct winlink * _122;
  struct winlink * _123;
  struct winlink * _124;
  struct winlink * _125;
  struct winlink * _126;
  struct winlink * _127;
  struct winlink * _128;
  struct winlink * _129;
  struct winlink * _130;
  struct winlink * _133;
  struct winlink * _134;
  int _135;
  struct winlink * _136;
  struct winlink * _137;
  int _138;
  struct winlink * _142;
  int _143;
  struct winlink * _146;
  struct winlink * _147;
  struct winlink * _148;
  struct winlink * _149;
  struct winlink * _150;
  struct winlink * _151;
  struct winlink * _152;
  struct winlink * _153;
  struct winlink * _154;
  struct winlink * _155;
  int _157;
  struct winlink * _159;
  struct winlink * _160;
  struct winlink * _162;
  struct winlink * _163;
  struct winlink * _164;
  struct winlink * _165;
  struct winlink * _166;
  struct winlink * _167;
  struct winlink * _168;
  struct winlink * _169;
  struct winlink * _170;
  struct winlink * _171;
  int _173;
  struct winlink * _174;
  int _179;
  struct window * * _180;
  long unsigned int _181;
  long unsigned int _182;
  long unsigned int _183;
  struct window * * _184;
  unsigned int _185;
  unsigned int _186;
  unsigned int _187;
  struct window * * _188;
  unsigned int _189;
  struct window * * _190;
  unsigned int _191;
  unsigned int _192;
  long unsigned int _193;
  long unsigned int _194;
  struct window * * _195;
  struct window * _196;
  char * _197;
  char * _198;
  struct window * * _199;
  unsigned int _200;
  long unsigned int _201;
  long unsigned int _202;
  struct window * * _203;
  struct window * _204;
  struct window * * _205;
  unsigned int _206;
  unsigned int _208;
  struct window * _323;
  struct winlink * _324;
  long unsigned int _340;
  struct winlink * _342;
  struct winlink * _344;
  int _347;
  int _350;
  struct winlink * _359;

  <bb 2> [20.55%]:
  w_11 = wl_10(D)->window;
  _30 = wl_10(D)->entry.rbe_left;
  if (_30 == 0B)
    goto <bb 3>; [30.00%]
  else
    goto <bb 4>; [70.00%]

  <bb 3> [6.17%]:
  child_31 = wl_10(D)->entry.rbe_right;
  goto <bb 26>; [100.00%]

  <bb 4> [14.39%]:
  _32 = wl_10(D)->entry.rbe_right;
  if (_32 == 0B)
    goto <bb 5>; [30.00%]
  else
    goto <bb 6>; [70.00%]

  <bb 5> [4.32%]:
  child_33 = _30;
  goto <bb 130>; [100.00%]

  <bb 6> [10.07%]:
  elm_34 = _32;

  <bb 7> [67.13%]:
  # elm_35 = PHI <_32(6), left_36(7)>
  left_36 = elm_35->entry.rbe_left;
  if (left_36 != 0B)
    goto <bb 7>; [85.00%]
  else
    goto <bb 8>; [15.00%]

  <bb 8> [10.07%]:
  child_37 = elm_35->entry.rbe_right;
  parent_38 = elm_35->entry.rbe_parent;
  color_39 = elm_35->entry.rbe_color;
  if (child_37 != 0B)
    goto <bb 9>; [70.00%]
  else
    goto <bb 10>; [30.00%]

  <bb 9> [7.05%]:
  child_37->entry.rbe_parent = parent_38;

  <bb 10> [10.07%]:
  if (parent_38 != 0B)
    goto <bb 11>; [70.00%]
  else
    goto <bb 14>; [30.00%]

  <bb 11> [7.05%]:
  _40 = parent_38->entry.rbe_left;
  if (elm_35 == _40)
    goto <bb 12>; [30.00%]
  else
    goto <bb 13>; [70.00%]

  <bb 12> [2.11%]:
  parent_38->entry.rbe_left = child_37;
  goto <bb 15>; [100.00%]

  <bb 13> [4.93%]:
  parent_38->entry.rbe_right = child_37;
  goto <bb 15>; [100.00%]

  <bb 14> [3.02%]:
  wwl_12(D)->rbh_root = child_37;

  <bb 15> [10.07%]:
  _41 = elm_35->entry.rbe_parent;
  if (wl_10(D) == _41)
    goto <bb 16>; [30.00%]
  else
    goto <bb 17>; [70.00%]

  <bb 16> [3.02%]:

  <bb 17> [10.07%]:
  # parent_51 = PHI <parent_38(15), elm_35(16)>
  elm_35->entry = wl_10(D)->entry;
  _43 = wl_10(D)->entry.rbe_parent;
  if (_43 != 0B)
    goto <bb 18>; [70.00%]
  else
    goto <bb 21>; [30.00%]

  <bb 18> [7.05%]:
  _44 = _43;
  _45 = _43->entry.rbe_left;
  if (wl_10(D) == _45)
    goto <bb 19>; [30.00%]
  else
    goto <bb 20>; [70.00%]

  <bb 19> [2.11%]:
  _46 = _43;
  _43->entry.rbe_left = elm_35;
  goto <bb 22>; [100.00%]

  <bb 20> [4.93%]:
  _47 = _43;
  _43->entry.rbe_right = elm_35;
  goto <bb 22>; [100.00%]

  <bb 21> [3.02%]:
  wwl_12(D)->rbh_root = elm_35;

  <bb 22> [10.07%]:
  _48 = wl_10(D)->entry.rbe_left;
  _48->entry.rbe_parent = elm_35;
  _49 = wl_10(D)->entry.rbe_right;
  if (_49 != 0B)
    goto <bb 23>; [70.00%]
  else
    goto <bb 24>; [30.00%]

  <bb 23> [7.05%]:
  _50 = _49;
  _49->entry.rbe_parent = elm_35;

  <bb 24> [10.07%]:
  if (parent_51 != 0B)
    goto <bb 25>; [70.00%]
  else
    goto <bb 33> (color); [30.00%]

  <bb 25> [46.99%]:
  # left_52 = PHI <parent_51(24), left_53(25)>
  left_53 = left_52->entry.rbe_parent;
  if (left_53 != 0B)
    goto <bb 25>; [85.00%]
  else
    goto <bb 33> (color); [15.00%]

  <bb 26> [6.16%]:
  # child_56 = PHI <child_31(3)>
  parent_54 = wl_10(D)->entry.rbe_parent;
  color_55 = wl_10(D)->entry.rbe_color;
  if (child_56 != 0B)
    goto <bb 27>; [48.96%]
  else
    goto <bb 28>; [51.04%]

  <bb 27> [7.34%]:
  # parent_353 = PHI <parent_54(26), parent_240(130)>
  # color_355 = PHI <color_55(26), color_325(130)>
  # child_357 = PHI <child_56(26), child_338(130)>
  child_357->entry.rbe_parent = parent_353;

  <bb 28> [10.48%]:
  # parent_354 = PHI <parent_54(26), parent_353(27)>
  # color_356 = PHI <color_55(26), color_355(27)>
  # child_358 = PHI <child_56(26), child_357(27)>
  if (parent_354 != 0B)
    goto <bb 29>; [70.00%]
  else
    goto <bb 32>; [30.00%]

  <bb 29> [7.34%]:
  _57 = parent_354->entry.rbe_left;
  if (wl_10(D) == _57)
    goto <bb 30>; [30.00%]
  else
    goto <bb 31>; [70.00%]

  <bb 30> [2.20%]:
  parent_354->entry.rbe_left = child_358;
  goto <bb 33> (color); [100.00%]

  <bb 31> [5.14%]:
  parent_354->entry.rbe_right = child_358;
  goto <bb 33> (color); [100.00%]

  <bb 32> [3.14%]:
  wwl_12(D)->rbh_root = child_358;

  # child_60 = PHI <child_37(24), child_37(25), child_358(30), child_358(31), child_358(32)>
  # parent_59 = PHI <0B(24), parent_51(25), parent_354(30), parent_354(31), 0B(32)>
  # color_58 = PHI <color_39(24), color_39(25), color_356(30), color_356(31), color_356(32)>
color [20.55%]:
  if (color_58 == 0)
    goto <bb 106>; [36.64%]
  else
    goto <bb 111>; [63.36%]

  <bb 34> [95.79%]:
  _62 = parent_61->entry.rbe_left;
  if (_62 == elm_63)
    goto <bb 35>; [30.00%]
  else
    goto <bb 70>; [70.00%]

  <bb 35> [28.74%]:
  tmp_64 = parent_61->entry.rbe_right;
  _65 = tmp_64->entry.rbe_color;
  if (_65 == 1)
    goto <bb 36>; [34.00%]
  else
    goto <bb 44>; [66.00%]

  <bb 36> [9.77%]:
  tmp_64->entry.rbe_color = 0;
  parent_61->entry.rbe_color = 1;
  tmp_66 = parent_61->entry.rbe_right;
  _67 = tmp_66->entry.rbe_left;
  parent_61->entry.rbe_right = _67;
  _68 = _67;
  if (_67 != 0B)
    goto <bb 37>; [70.00%]
  else
    goto <bb 38>; [30.00%]

  <bb 37> [6.84%]:
  _69 = tmp_66->entry.rbe_left;
  _69->entry.rbe_parent = parent_61;

  <bb 38> [9.77%]:
  _70 = parent_61->entry.rbe_parent;
  tmp_66->entry.rbe_parent = _70;
  _71 = _70;
  if (_70 != 0B)
    goto <bb 39>; [70.00%]
  else
    goto <bb 42>; [30.00%]

  <bb 39> [6.84%]:
  _72 = parent_61->entry.rbe_parent;
  _73 = _72->entry.rbe_left;
  if (parent_61 == _73)
    goto <bb 40>; [30.00%]
  else
    goto <bb 41>; [70.00%]

  <bb 40> [2.05%]:
  _74 = _72;
  _72->entry.rbe_left = tmp_66;
  goto <bb 43>; [100.00%]

  <bb 41> [4.79%]:
  _75 = _72;
  _72->entry.rbe_right = tmp_66;
  goto <bb 43>; [100.00%]

  <bb 42> [2.93%]:
  wwl_12(D)->rbh_root = tmp_66;

  <bb 43> [9.77%]:
  tmp_66->entry.rbe_left = parent_61;
  parent_61->entry.rbe_parent = tmp_66;
  _76 = tmp_66->entry.rbe_parent;
  tmp_77 = parent_61->entry.rbe_right;

  <bb 44> [28.74%]:
  # tmp_78 = PHI <tmp_64(35), tmp_77(43)>
  _79 = tmp_78->entry.rbe_left;
  if (_79 == 0B)
    goto <bb 46>; [30.00%]
  else
    goto <bb 45>; [70.00%]

  <bb 45> [20.12%]:
  _80 = _79;
  _81 = _79->entry.rbe_color;
  if (_81 == 0)
    goto <bb 46>; [97.50%]
  else
    goto <bb 133>; [2.50%]

  <bb 46> [28.24%]:
  _82 = tmp_78->entry.rbe_right;
  if (_82 == 0B)
    goto <bb 48>; [30.00%]
  else
    goto <bb 47>; [70.00%]

  <bb 47> [19.76%]:
  _83 = _82;
  _84 = _82->entry.rbe_color;
  if (_84 == 0)
    goto <bb 48>; [97.50%]
  else
    goto <bb 131>; [2.50%]

  <bb 48> [27.74%]:
  tmp_78->entry.rbe_color = 1;
  parent_85 = parent_61->entry.rbe_parent;
  goto <bb 105>; [100.00%]

  <bb 49> [0.70%]:
  # _359 = PHI <_23(133), _324(131)>
  _87 = _359;
  _88 = _359->entry.rbe_color;
  if (_88 == 0)
    goto <bb 50>; [50.00%]
  else
    goto <bb 60>; [50.00%]

  <bb 50> [0.35%]:
  oleft_89 = _79;
  if (_79 != 0B)
    goto <bb 51>; [44.57%]
  else
    goto <bb 52>; [55.43%]

  <bb 51> [0.45%]:
  _79->entry.rbe_color = 0;

  <bb 52> [0.65%]:
  tmp_78->entry.rbe_color = 1;
  oleft_90 = tmp_78->entry.rbe_left;
  _91 = oleft_90->entry.rbe_right;
  tmp_78->entry.rbe_left = _91;
  _92 = _91;
  if (_91 != 0B)
    goto <bb 53>; [70.00%]
  else
    goto <bb 54>; [30.00%]

  <bb 53> [0.45%]:
  _93 = oleft_90->entry.rbe_right;
  _93->entry.rbe_parent = tmp_78;

  <bb 54> [0.65%]:
  _94 = tmp_78->entry.rbe_parent;
  oleft_90->entry.rbe_parent = _94;
  _95 = _94;
  if (_94 != 0B)
    goto <bb 55>; [70.00%]
  else
    goto <bb 58>; [30.00%]

  <bb 55> [0.45%]:
  _96 = tmp_78->entry.rbe_parent;
  _97 = _96->entry.rbe_left;
  if (tmp_78 == _97)
    goto <bb 56>; [30.00%]
  else
    goto <bb 57>; [70.00%]

  <bb 56> [0.14%]:
  _98 = _96;
  _96->entry.rbe_left = oleft_90;
  goto <bb 59>; [100.00%]

  <bb 57> [0.32%]:
  _99 = _96;
  _96->entry.rbe_right = oleft_90;
  goto <bb 59>; [100.00%]

  <bb 58> [0.19%]:
  wwl_12(D)->rbh_root = oleft_90;

  <bb 59> [0.65%]:
  oleft_90->entry.rbe_right = tmp_78;
  tmp_78->entry.rbe_parent = oleft_90;
  _100 = oleft_90->entry.rbe_parent;
  tmp_101 = parent_61->entry.rbe_right;

  <bb 60> [1.00%]:
  # tmp_103 = PHI <tmp_78(49), tmp_101(59)>
  _102 = parent_61->entry.rbe_color;
  tmp_103->entry.rbe_color = _102;
  parent_61->entry.rbe_color = 0;
  _104 = tmp_103->entry.rbe_right;
  if (_104 != 0B)
    goto <bb 61>; [70.00%]
  else
    goto <bb 62>; [30.00%]

  <bb 61> [0.70%]:
  _105 = _104;
  _104->entry.rbe_color = 0;

  <bb 62> [1.00%]:
  tmp_106 = parent_61->entry.rbe_right;
  _107 = tmp_106->entry.rbe_left;
  parent_61->entry.rbe_right = _107;
  _108 = _107;
  if (_107 != 0B)
    goto <bb 63>; [70.00%]
  else
    goto <bb 64>; [30.00%]

  <bb 63> [0.70%]:
  _109 = tmp_106->entry.rbe_left;
  _109->entry.rbe_parent = parent_61;

  <bb 64> [1.00%]:
  _110 = parent_61->entry.rbe_parent;
  tmp_106->entry.rbe_parent = _110;
  _111 = _110;
  if (_110 != 0B)
    goto <bb 65>; [70.00%]
  else
    goto <bb 68>; [30.00%]

  <bb 65> [0.70%]:
  _112 = parent_61->entry.rbe_parent;
  _113 = _112->entry.rbe_left;
  if (parent_61 == _113)
    goto <bb 66>; [30.00%]
  else
    goto <bb 67>; [70.00%]

  <bb 66> [0.21%]:
  _114 = _112;
  _112->entry.rbe_left = tmp_106;
  goto <bb 69>; [100.00%]

  <bb 67> [0.49%]:
  _115 = _112;
  _112->entry.rbe_right = tmp_106;
  goto <bb 69>; [100.00%]

  <bb 68> [0.30%]:
  wwl_12(D)->rbh_root = tmp_106;

  <bb 69> [1.00%]:
  tmp_106->entry.rbe_left = parent_61;
  parent_61->entry.rbe_parent = tmp_106;
  _116 = tmp_106->entry.rbe_parent;
  elm_117 = wwl_12(D)->rbh_root;
  goto <bb 109>; [100.00%]

  <bb 70> [67.06%]:
  tmp_118 = _62;
  _119 = _62->entry.rbe_color;
  if (_119 == 1)
    goto <bb 71>; [34.00%]
  else
    goto <bb 79>; [66.00%]

  <bb 71> [22.80%]:
  _62->entry.rbe_color = 0;
  parent_61->entry.rbe_color = 1;
  tmp_120 = parent_61->entry.rbe_left;
  _121 = tmp_120->entry.rbe_right;
  parent_61->entry.rbe_left = _121;
  _122 = _121;
  if (_121 != 0B)
    goto <bb 72>; [70.00%]
  else
    goto <bb 73>; [30.00%]

  <bb 72> [15.96%]:
  _123 = tmp_120->entry.rbe_right;
  _123->entry.rbe_parent = parent_61;

  <bb 73> [22.80%]:
  _124 = parent_61->entry.rbe_parent;
  tmp_120->entry.rbe_parent = _124;
  _125 = _124;
  if (_124 != 0B)
    goto <bb 74>; [70.00%]
  else
    goto <bb 77>; [30.00%]

  <bb 74> [15.96%]:
  _126 = parent_61->entry.rbe_parent;
  _127 = _126->entry.rbe_left;
  if (parent_61 == _127)
    goto <bb 75>; [30.00%]
  else
    goto <bb 76>; [70.00%]

  <bb 75> [4.79%]:
  _128 = _126;
  _126->entry.rbe_left = tmp_120;
  goto <bb 78>; [100.00%]

  <bb 76> [11.17%]:
  _129 = _126;
  _126->entry.rbe_right = tmp_120;
  goto <bb 78>; [100.00%]

  <bb 77> [6.84%]:
  wwl_12(D)->rbh_root = tmp_120;

  <bb 78> [22.80%]:
  tmp_120->entry.rbe_right = parent_61;
  parent_61->entry.rbe_parent = tmp_120;
  _130 = tmp_120->entry.rbe_parent;
  tmp_131 = parent_61->entry.rbe_left;

  <bb 79> [67.06%]:
  # tmp_132 = PHI <_62(70), tmp_131(78)>
  _133 = tmp_132->entry.rbe_left;
  if (_133 == 0B)
    goto <bb 81>; [30.00%]
  else
    goto <bb 80>; [70.00%]

  <bb 80> [46.94%]:
  _134 = _133;
  _135 = _133->entry.rbe_color;
  if (_135 == 0)
    goto <bb 81>; [97.50%]
  else
    goto <bb 134>; [2.50%]

  <bb 81> [65.88%]:
  _136 = tmp_132->entry.rbe_right;
  if (_136 == 0B)
    goto <bb 83>; [30.00%]
  else
    goto <bb 82>; [70.00%]

  <bb 82> [46.12%]:
  _137 = _136;
  _138 = _136->entry.rbe_color;
  if (_138 == 0)
    goto <bb 83>; [97.50%]
  else
    goto <bb 136>; [2.50%]

  <bb 83> [64.73%]:
  tmp_132->entry.rbe_color = 1;
  parent_140 = parent_61->entry.rbe_parent;
  goto <bb 105>; [100.00%]

  <bb 84> [1.63%]:
  _142 = _133;
  _143 = _133->entry.rbe_color;
  if (_143 == 0)
    goto <bb 85>; [50.00%]
  else
    goto <bb 95>; [50.00%]

  <bb 85> [0.81%]:
  oright_144 = tmp_132->entry.rbe_right;
  if (oright_144 != 0B)
    goto <bb 86>; [44.29%]
  else
    goto <bb 87>; [55.71%]

  <bb 86> [1.06%]:
  # oright_360 = PHI <oright_144(85), oright_343(135)>
  oright_360->entry.rbe_color = 0;

  <bb 87> [1.51%]:
  tmp_132->entry.rbe_color = 1;
  oright_145 = tmp_132->entry.rbe_right;
  _146 = oright_145->entry.rbe_left;
  tmp_132->entry.rbe_right = _146;
  _147 = _146;
  if (_146 != 0B)
    goto <bb 88>; [70.00%]
  else
    goto <bb 89>; [30.00%]

  <bb 88> [1.06%]:
  _148 = oright_145->entry.rbe_left;
  _148->entry.rbe_parent = tmp_132;

  <bb 89> [1.51%]:
  _149 = tmp_132->entry.rbe_parent;
  oright_145->entry.rbe_parent = _149;
  _150 = _149;
  if (_149 != 0B)
    goto <bb 90>; [70.00%]
  else
    goto <bb 93>; [30.00%]

  <bb 90> [1.06%]:
  _151 = tmp_132->entry.rbe_parent;
  _152 = _151->entry.rbe_left;
  if (tmp_132 == _152)
    goto <bb 91>; [30.00%]
  else
    goto <bb 92>; [70.00%]

  <bb 91> [0.32%]:
  _153 = _151;
  _151->entry.rbe_left = oright_145;
  goto <bb 94>; [100.00%]

  <bb 92> [0.74%]:
  _154 = _151;
  _151->entry.rbe_right = oright_145;
  goto <bb 94>; [100.00%]

  <bb 93> [0.45%]:
  wwl_12(D)->rbh_root = oright_145;

  <bb 94> [1.51%]:
  oright_145->entry.rbe_left = tmp_132;
  tmp_132->entry.rbe_parent = oright_145;
  _155 = oright_145->entry.rbe_parent;
  tmp_156 = parent_61->entry.rbe_left;

  <bb 95> [2.33%]:
  # tmp_158 = PHI <tmp_132(84), tmp_156(94)>
  _157 = parent_61->entry.rbe_color;
  tmp_158->entry.rbe_color = _157;
  parent_61->entry.rbe_color = 0;
  _159 = tmp_158->entry.rbe_left;
  if (_159 != 0B)
    goto <bb 96>; [70.00%]
  else
    goto <bb 97>; [30.00%]

  <bb 96> [1.63%]:
  _160 = _159;
  _159->entry.rbe_color = 0;

  <bb 97> [2.33%]:
  tmp_161 = parent_61->entry.rbe_left;
  _162 = tmp_161->entry.rbe_right;
  parent_61->entry.rbe_left = _162;
  _163 = _162;
  if (_162 != 0B)
    goto <bb 98>; [70.00%]
  else
    goto <bb 99>; [30.00%]

  <bb 98> [1.63%]:
  _164 = tmp_161->entry.rbe_right;
  _164->entry.rbe_parent = parent_61;

  <bb 99> [2.33%]:
  _165 = parent_61->entry.rbe_parent;
  tmp_161->entry.rbe_parent = _165;
  _166 = _165;
  if (_165 != 0B)
    goto <bb 100>; [70.00%]
  else
    goto <bb 103>; [30.00%]

  <bb 100> [1.63%]:
  _167 = parent_61->entry.rbe_parent;
  _168 = _167->entry.rbe_left;
  if (parent_61 == _168)
    goto <bb 101>; [30.00%]
  else
    goto <bb 102>; [70.00%]

  <bb 101> [0.49%]:
  _169 = _167;
  _167->entry.rbe_left = tmp_161;
  goto <bb 104>; [100.00%]

  <bb 102> [1.14%]:
  _170 = _167;
  _167->entry.rbe_right = tmp_161;
  goto <bb 104>; [100.00%]

  <bb 103> [0.70%]:
  wwl_12(D)->rbh_root = tmp_161;

  <bb 104> [2.33%]:
  tmp_161->entry.rbe_right = parent_61;
  parent_61->entry.rbe_parent = tmp_161;
  _171 = tmp_161->entry.rbe_parent;
  elm_172 = wwl_12(D)->rbh_root;
  goto <bb 109>; [100.00%]

  <bb 105> [92.47%]:
  # parent_177 = PHI <parent_140(83), parent_85(48)>
  # elm_236 = PHI <parent_61(83), parent_61(48)>

  <bb 106> [100.00%]:
  # parent_61 = PHI <parent_177(105), parent_59(33)>
  # elm_63 = PHI <parent_61(105), child_60(33)>
  if (elm_63 == 0B)
    goto <bb 108>; [30.00%]
  else
    goto <bb 107>; [70.00%]

  <bb 107> [70.00%]:
  _173 = elm_63->entry.rbe_color;
  if (_173 == 0)
    goto <bb 108>; [97.50%]
  else
    goto <bb 137>; [2.50%]

  <bb 108> [98.25%]:
  _174 = wwl_12(D)->rbh_root;
  if (elm_63 != _174)
    goto <bb 34>; [97.50%]
  else
    goto <bb 109>; [2.50%]

  <bb 109> [5.78%]:
  # elm_175 = PHI <elm_117(69), elm_172(104), _174(108)>
  if (elm_175 != 0B)
    goto <bb 110>; [65.16%]
  else
    goto <bb 111>; [34.84%]

  <bb 110> [5.52%]:
  # elm_361 = PHI <elm_175(109), elm_345(137)>
  elm_361->entry.rbe_color = 0;

  <bb 111> [20.55%]:
  _1 = wl_10(D)->status_text;
  if (_1 != 0B)
    goto <bb 112>; [53.47%]
  else
    goto <bb 113>; [46.53%]

  <bb 112> [10.99%]:
  _2 = _1;
  free (_1);

  <bb 113> [20.55%]:
  free (wl_10(D));
  _3 = w_11->references;
  if (_3 == 0)
    goto <bb 114>; [0.04%]
  else
    goto <bb 115>; [99.96%]

  <bb 114> [0.01%]:
  _19 = __printf_chk (1, "bad reference count%s\n", "");
  exit (1);

  <bb 115> [20.54%]:
  _4 = _3;
  _5 = _3 + 4294967295;
  w_11->references = _5;
  _6 = _5;
  if (_5 == 0)
    goto <bb 116>; [36.64%]
  else
    goto <bb 129>; [63.36%]

  <bb 116> [7.51%]:
  # i_207 = PHI <0(115)>
  _200 = windows.num;
  if (_200 != 0)
    goto <bb 117>; [92.50%]
  else
    goto <bb 138>; [7.50%]

  <bb 117> [6.94%]:
  _205 = windows.list;
  _340 = 0;
  _181 = 0;
  _42 = _205;
  _323 = *_205;
  if (w_11 == _323)
    goto <bb 139>; [7.50%]
  else
    goto <bb 119>; [92.50%]

  <bb 118> [41.28%]:
  _199 = _205;
  _201 = (long unsigned int) _206;
  _202 = _201 * 8;
  _203 = _205 + _202;
  _204 = *_203;
  if (w_11 == _204)
    goto <bb 139>; [7.50%]
  else
    goto <bb 119>; [92.50%]

  <bb 119> [44.62%]:
  # i_178 = PHI <_206(118), 0(117)>
  _206 = i_178 + 1;
  _208 = _200;
  if (_200 > _206)
    goto <bb 118>; [92.50%]
  else
    goto <bb 138>; [7.50%]

  <bb 120> [44.59%]:
  _185 = _189;
  if (_189 > 1)
    goto <bb 121>; [78.31%]
  else
    goto <bb 122>; [21.69%]

  <bb 121> [34.92%]:
  _186 = _189;
  _187 = _192;
  windows.num = _192;
  goto <bb 123>; [100.00%]

  <bb 122> [9.67%]:
  _188 = _190;
  free (_190);
  windows.num = 0;
  windows.list = 0B;
  windows.space = 0;

  <bb 123> [44.59%]:

  <bb 124> [52.11%]:
  _189 = windows.num;
  if (_189 != 0)
    goto <bb 125>; [92.50%]
  else
    goto <bb 126>; [7.50%]

  <bb 125> [48.20%]:
  _190 = windows.list;
  _191 = _189;
  _192 = _189 + 4294967295;
  _193 = (long unsigned int) _192;
  _194 = _193 * 8;
  _195 = _190 + _194;
  _196 = *_195;
  if (_196 == 0B)
    goto <bb 120>; [92.50%]
  else
    goto <bb 126>; [7.50%]

  <bb 126> [7.52%]:
  _197 = w_11->name;
  if (_197 != 0B)
    goto <bb 127>; [57.44%]
  else
    goto <bb 128>; [42.56%]

  <bb 127> [4.32%]:
  _198 = _197;
  free (_197);

  <bb 128> [7.52%]:
  free (w_11);

  <bb 129> [20.54%]:
  return;

  <bb 130> [4.32%]:
  # child_338 = PHI <_30(5)>
  parent_240 = wl_10(D)->entry.rbe_parent;
  color_325 = wl_10(D)->entry.rbe_color;
  goto <bb 27>; [100.00%]

  <bb 131> [0.49%]:
  _324 = tmp_78->entry.rbe_right;
  goto <bb 49>; [100.00%]

  <bb 132> [0.30%]:
  oleft_27 = _79;
  goto <bb 51>; [100.00%]

  <bb 133> [0.50%]:
  _23 = tmp_78->entry.rbe_right;
  if (_23 == 0B)
    goto <bb 132>; [59.29%]
  else
    goto <bb 49>; [40.71%]

  <bb 134> [1.17%]:
  _342 = _133;
  goto <bb 84>; [100.00%]

  <bb 135> [0.70%]:
  oright_343 = tmp_132->entry.rbe_right;
  goto <bb 86>; [100.00%]

  <bb 136> [1.15%]:
  _344 = _133;
  if (_133 == 0B)
    goto <bb 135>; [60.44%]
  else
    goto <bb 84>; [39.56%]

  <bb 137> [1.75%]:
  # elm_345 = PHI <elm_63(107)>
  goto <bb 110>; [100.00%]

  <bb 138> [3.91%]:
  # _347 = PHI <-1(116), -1(119)>
  # i_349 = PHI <0(116), _206(119)>
  _179 = __printf_chk (1, "index not found%s\n", "");
  exit (1);

  <bb 139> [7.52%]:
  # _350 = PHI <0(117), 0(118)>
  # i_352 = PHI <0(117), _206(118)>
  _180 = windows.list;
  _182 = (long unsigned int) i_352;
  _183 = _182 * 8;
  _184 = _180 + _183;
  *_184 = 0B;
  goto <bb 124>; [100.00%]

}



;; Function session_destroy (session_destroy, funcdef_no=20, decl_uid=4458, cgraph_uid=19, symbol_order=84)

Created preheader block for loop 3
Created preheader block for loop 2
Created preheader block for loop 4
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 36 4 39 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 35 30 38 31 34 32 37 33
;;
;; Loop 3
;;  header 32, latch 37
;;  depth 1, outer 0
;;  nodes: 32 37
;;
;; Loop 2
;;  header 30, latch 38
;;  depth 1, outer 0
;;  nodes: 30 38
;;
;; Loop 1
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12 11 10 9 14
;;
;; Loop 4
;;  header 5, latch 39
;;  depth 1, outer 0
;;  nodes: 5 39 4
;; 2 succs { 3 6 }
;; 3 succs { 6 36 }
;; 36 succs { 5 }
;; 4 succs { 6 39 }
;; 39 succs { 5 }
;; 5 succs { 4 6 }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 13 }
;; 9 succs { 10 11 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 14 15 }
;; 14 succs { 9 15 }
;; 15 succs { 29 16 }
;; 16 succs { 17 18 }
;; 17 succs { 19 }
;; 18 succs { 19 }
;; 19 succs { 20 24 }
;; 20 succs { 21 22 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 24 }
;; 24 succs { 25 29 }
;; 25 succs { 26 27 }
;; 26 succs { 28 }
;; 27 succs { 28 }
;; 28 succs { 29 }
;; 29 succs { 35 31 }
;; 35 succs { 30 }
;; 30 succs { 38 31 }
;; 38 succs { 30 }
;; 31 succs { 34 33 }
;; 34 succs { 32 }
;; 32 succs { 37 33 }
;; 37 succs { 32 }
;; 33 succs { 1 }
Removing basic block 6
Removing basic block 21
Merging blocks 20 and 22
Removing basic block 34
Removing basic block 35
Removing basic block 36
Removing basic block 37
Removing basic block 38
Removing basic block 39
Merging blocks 40 and 7
Merging blocks 41 and 8
Merging blocks 20 and 23

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_49 -> { _77 _79 }
.MEM_50 -> { .MEM_135 }
i_75 -> { i_137 }
_77 -> { _79 }
i_108 -> { i_75 i_137 }
.MEM_126 -> { .MEM_50 .MEM_135 }

SSA names to release after updating the SSA web

_79 .MEM_135 i_137 
Incremental SSA update started at block: 2
Number of blocks in CFG: 30
Number of blocks to update: 2 (  7%)


session_destroy (struct session * s)
{
  struct session_group * sg;
  int D.4691;
  u_int i;
  char * _1;
  struct session * * _2;
  struct session * * _3;
  long unsigned int _5;
  long unsigned int _6;
  struct session * * _7;
  unsigned int _8;
  unsigned int _9;
  unsigned int _10;
  struct session * * _11;
  unsigned int _12;
  struct session * * _13;
  unsigned int _14;
  unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  struct session * * _18;
  struct session * _19;
  struct winlink * _20;
  struct winlink_stack * _21;
  struct winlink * _22;
  struct winlink * _23;
  struct winlinks * _24;
  struct winlink * _25;
  char * _26;
  int _46;
  int _47;
  int _49;
  struct session * _54;
  struct session * * _61;
  struct session * * _69;
  struct winlink * _70;
  long unsigned int _71;
  long unsigned int _72;
  struct session * * _73;
  struct session * _74;
  unsigned int _76;
  int _77;
  unsigned int _78;
  struct session * _81;
  struct session * _82;
  struct session * * _83;
  struct session * * _84;
  struct session * * _85;
  struct session * _86;
  struct session * _87;
  struct session * _88;
  struct session * _89;
  struct session * _90;
  struct session * _95;
  struct session * * _96;
  struct session * _97;
  struct session * _98;
  struct session * * _99;
  struct session * _100;
  struct session * _101;
  struct session_group * _102;
  struct session_group * _103;
  struct session_group * * _104;
  struct session_group * * _105;
  struct session_group * * _106;
  struct session_group * _107;
  long unsigned int _113;
  long unsigned int _114;
  unsigned int _115;
  struct winlink * _128;

  <bb 2> [14.44%]:
  _1 = s_31(D)->name;
  _46 = __printf_chk (1, "session %s destroyed\n", _1);
  _115 = sessions.num;
  if (_115 != 0)
    goto <bb 3>; [92.50%]
  else
    goto <bb 28>; [7.50%]

  <bb 3> [13.32%]:
  _2 = sessions.list;
  _114 = 0;
  _113 = 0;
  _61 = _2;
  _54 = *_2;
  if (s_31(D) == _54)
    goto <bb 29>; [7.50%]
  else
    goto <bb 5>; [92.50%]

  <bb 4> [79.18%]:
  _69 = _2;
  _71 = (long unsigned int) _76;
  _72 = _71 * 8;
  _73 = _2 + _72;
  _74 = *_73;
  if (s_31(D) == _74)
    goto <bb 29>; [7.50%]
  else
    goto <bb 5>; [92.50%]

  <bb 5> [85.60%]:
  # i_136 = PHI <_76(4), 0(3)>
  _76 = i_136 + 1;
  _78 = _115;
  if (_76 < _115)
    goto <bb 4>; [92.50%]
  else
    goto <bb 28>; [7.50%]

  <bb 6> [85.53%]:
  _8 = _12;
  if (_12 > 1)
    goto <bb 7>; [78.31%]
  else
    goto <bb 8>; [21.69%]

  <bb 7> [66.98%]:
  _9 = _12;
  _10 = _15;
  sessions.num = _15;
  goto <bb 9>; [100.00%]

  <bb 8> [18.55%]:
  _11 = _13;
  free (_13);
  sessions.num = 0;
  sessions.list = 0B;
  sessions.space = 0;

  <bb 9> [85.53%]:

  <bb 10> [99.96%]:
  _12 = sessions.num;
  if (_12 != 0)
    goto <bb 11>; [92.50%]
  else
    goto <bb 12>; [7.50%]

  <bb 11> [92.46%]:
  _13 = sessions.list;
  _14 = _12;
  _15 = _12 + 4294967295;
  _16 = (long unsigned int) _15;
  _17 = _16 * 8;
  _18 = _13 + _17;
  _19 = *_18;
  if (_19 == 0B)
    goto <bb 6>; [92.50%]
  else
    goto <bb 12>; [7.50%]

  <bb 12> [14.43%]:
  sg_80 = session_group_find (s_31(D));
  if (sg_80 == 0B)
    goto <bb 23>; [26.74%]
  else
    goto <bb 13>; [73.26%]

  <bb 13> [10.57%]:
  _81 = s_31(D)->gentry.tqe_next;
  if (_81 != 0B)
    goto <bb 14>; [70.00%]
  else
    goto <bb 15>; [30.00%]

  <bb 14> [7.40%]:
  _82 = _81;
  _83 = s_31(D)->gentry.tqe_prev;
  _81->gentry.tqe_prev = _83;
  goto <bb 16>; [100.00%]

  <bb 15> [3.17%]:
  _84 = s_31(D)->gentry.tqe_prev;
  sg_80->sessions.tqh_last = _84;

  <bb 16> [10.57%]:
  _85 = s_31(D)->gentry.tqe_prev;
  _86 = s_31(D)->gentry.tqe_next;
  *_85 = _86;
  _87 = sg_80->sessions.tqh_first;
  _88 = _87->gentry.tqe_next;
  if (_88 == 0B)
    goto <bb 17>; [30.00%]
  else
    goto <bb 18>; [70.00%]

  <bb 17> [3.17%]:
  _89 = _87;
  _90 = 0B;
  _95 = _87;
  _96 = _87->gentry.tqe_prev;
  sg_80->sessions.tqh_last = _96;
  _97 = sg_80->sessions.tqh_first;
  _98 = _97;
  _99 = _97->gentry.tqe_prev;
  _100 = _97->gentry.tqe_next;
  *_99 = _100;

  <bb 18> [10.57%]:
  _101 = sg_80->sessions.tqh_first;
  if (_101 == 0B)
    goto <bb 19>; [33.47%]
  else
    goto <bb 23>; [66.53%]

  <bb 19> [3.54%]:
  _102 = sg_80->entry.tqe_next;
  if (_102 != 0B)
    goto <bb 20>; [70.00%]
  else
    goto <bb 21>; [30.00%]

  <bb 20> [2.48%]:
  _103 = _102;
  _104 = sg_80->entry.tqe_prev;
  _102->entry.tqe_prev = _104;
  goto <bb 22>; [100.00%]

  <bb 21> [1.06%]:
  _105 = sg_80->entry.tqe_prev;
  session_groups.tqh_last = _105;

  <bb 22> [3.54%]:
  _106 = sg_80->entry.tqe_prev;
  _107 = sg_80->entry.tqe_next;
  *_106 = _107;
  free (sg_80);

  <bb 23> [14.43%]:
  _128 = s_31(D)->lastw.tqh_first;
  if (_128 != 0B)
    goto <bb 24>; [85.00%]
  else
    goto <bb 25>; [15.00%]

  <bb 24> [81.78%]:
  _20 = s_31(D)->lastw.tqh_first;
  _21 = &s_31(D)->lastw;
  winlink_stack_remove (_21, _20);
  _22 = s_31(D)->lastw.tqh_first;
  if (_22 != 0B)
    goto <bb 24>; [85.00%]
  else
    goto <bb 25>; [15.00%]

  <bb 25> [14.43%]:
  _70 = s_31(D)->windows.rbh_root;
  if (_70 != 0B)
    goto <bb 26>; [85.00%]
  else
    goto <bb 27>; [15.00%]

  <bb 26> [81.78%]:
  _23 = s_31(D)->windows.rbh_root;
  _24 = &s_31(D)->windows;
  winlink_remove (_24, _23);
  _25 = s_31(D)->windows.rbh_root;
  if (_25 != 0B)
    goto <bb 26>; [85.00%]
  else
    goto <bb 27>; [15.00%]

  <bb 27> [14.43%]:
  _26 = s_31(D)->name;
  free (_26);
  free (s_31(D));
  return;

  <bb 28> [7.50%]:
  # _77 = PHI <-1(2), -1(5)>
  # i_75 = PHI <0(2), _76(5)>
  _47 = __printf_chk (1, "session not found%s\n", "");
  exit (1);

  <bb 29> [14.43%]:
  # _49 = PHI <0(3), 0(4)>
  # i_108 = PHI <0(3), _76(4)>
  _3 = sessions.list;
  _5 = (long unsigned int) i_108;
  _6 = _5 * 8;
  _7 = _3 + _6;
  *_7 = 0B;
  goto <bb 10>; [100.00%]

}



;; Function winlink_add (winlink_add, funcdef_no=7, decl_uid=4469, cgraph_uid=31, symbol_order=72)

Created preheader block for loop 2
;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 71 8 9 10 69 11 12 13 14 15 70 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
;;
;; Loop 3
;;  header 64, latch 63
;;  depth 1, outer 0
;;  nodes: 64 63 62 42 45 25 24 23 22 65 44 43 39 40 41 37 35 36 26 34 31 32 33 29 27 28 30 38 59 60 61 57 55 56 46 54 51 52 53 49 47 48 50 58
;;
;; Loop 2
;;  header 11, latch 70
;;  depth 1, outer 0
;;  nodes: 11 70 15 14 12 13
;;
;; Loop 1
;;  header 4, latch 71
;;  depth 1, outer 0
;;  nodes: 4 71 7 5 6
;; 2 succs { 3 9 }
;; 3 succs { 4 }
;; 4 succs { 8 5 }
;; 5 succs { 7 6 }
;; 6 succs { 7 }
;; 7 succs { 71 8 }
;; 71 succs { 4 }
;; 8 succs { 68 10 }
;; 9 succs { 68 10 }
;; 10 succs { 69 16 }
;; 69 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 15 }
;; 13 succs { 14 67 }
;; 14 succs { 15 }
;; 15 succs { 70 16 }
;; 70 succs { 11 }
;; 16 succs { 17 21 }
;; 17 succs { 18 19 }
;; 18 succs { 20 }
;; 19 succs { 20 }
;; 20 succs { 64 }
;; 21 succs { 20 }
;; 22 succs { 23 43 }
;; 23 succs { 24 26 }
;; 24 succs { 25 26 }
;; 25 succs { 63 }
;; 26 succs { 27 35 }
;; 27 succs { 28 29 }
;; 28 succs { 29 }
;; 29 succs { 30 33 }
;; 30 succs { 31 32 }
;; 31 succs { 34 }
;; 32 succs { 34 }
;; 33 succs { 34 }
;; 34 succs { 35 }
;; 35 succs { 36 37 }
;; 36 succs { 37 }
;; 37 succs { 38 41 }
;; 38 succs { 39 40 }
;; 39 succs { 42 }
;; 40 succs { 42 }
;; 41 succs { 42 }
;; 42 succs { 63 }
;; 43 succs { 44 46 }
;; 44 succs { 45 46 }
;; 45 succs { 63 }
;; 46 succs { 47 55 }
;; 47 succs { 48 49 }
;; 48 succs { 49 }
;; 49 succs { 50 53 }
;; 50 succs { 51 52 }
;; 51 succs { 54 }
;; 52 succs { 54 }
;; 53 succs { 54 }
;; 54 succs { 55 }
;; 55 succs { 56 57 }
;; 56 succs { 57 }
;; 57 succs { 58 61 }
;; 58 succs { 59 60 }
;; 59 succs { 62 }
;; 60 succs { 62 }
;; 61 succs { 62 }
;; 62 succs { 63 }
;; 63 succs { 64 }
;; 64 succs { 65 66 }
;; 65 succs { 22 66 }
;; 66 succs { 67 }
;; 67 succs { 68 }
;; 68 succs { 1 }
Removing basic block 69
Removing basic block 70
Removing basic block 71

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_27 -> { .MEM_133 }
comp_39 -> { comp_183 }
.MEM_41 -> { .MEM_135 }
_44 -> { _46 }
parent_45 -> { parent_14 }
_47 -> { _37 }
.MEM_51 -> { .MEM_136 }
.MEM_116 -> { .MEM_134 }
.MEM_184 -> { .MEM_136 }
Incremental SSA update started at block: 2
Number of blocks in CFG: 71
Number of blocks to update: 13 ( 18%)


winlink_add (struct winlinks * wwl, struct window * w, int idx)
{
  struct winlink * parent;
  struct winlink * gparent;
  struct winlink * tmp;
  struct winlink * elm;
  int D.4589;
  struct winlink * tmp;
  struct winlink * parent;
  int comp;
  struct winlink * D.4586;
  int i;
  int D.4573;
  struct winlink * wl;
  int _1;
  struct winlink * _2;
  unsigned int _3;
  unsigned int _4;
  struct winlink * _6;
  struct winlink * _34;
  int _37;
  struct winlink * _44;
  struct winlink * _46;
  int _47;
  struct winlink * _48;
  int _52;
  int _53;
  int _54;
  struct winlink * _57;
  int _59;
  struct winlink * _60;
  struct winlink * _63;
  struct winlink * _64;
  struct winlink * _65;
  struct winlink * _66;
  struct winlink * _67;
  struct winlink * _68;
  struct winlink * _69;
  struct winlink * _70;
  struct winlink * _71;
  struct winlink * _72;
  struct winlink * _75;
  struct winlink * _76;
  struct winlink * _77;
  struct winlink * _78;
  struct winlink * _79;
  struct winlink * _80;
  struct winlink * _81;
  struct winlink * _82;
  struct winlink * _83;
  struct winlink * _84;
  int _86;
  struct winlink * _87;
  struct winlink * _89;
  struct winlink * _90;
  struct winlink * _91;
  struct winlink * _92;
  struct winlink * _93;
  struct winlink * _94;
  struct winlink * _95;
  struct winlink * _96;
  struct winlink * _97;
  struct winlink * _98;
  struct winlink * _102;
  struct winlink * _103;
  struct winlink * _104;
  struct winlink * _105;
  struct winlink * _106;
  struct winlink * _107;
  struct winlink * _108;
  struct winlink * _109;
  struct winlink * _110;
  struct winlink * _111;
  int _112;
  struct winlink * _113;

  <bb 2> [13.84%]:
  if (idx_9(D) < 0)
    goto <bb 3>; [36.00%]
  else
    goto <bb 9>; [64.00%]

  <bb 3> [4.98%]:
  _1 = ~idx_9(D);

  <bb 4> [34.52%]:
  # i_33 = PHI <_1(3), i_36(7)>
  _34 = winlink_find_by_index (wwl_11(D), i_33);
  if (_34 == 0B)
    goto <bb 8>; [7.50%]
  else
    goto <bb 5>; [92.50%]

  <bb 5> [31.93%]:
  if (i_33 == 10000)
    goto <bb 7>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 6> [21.07%]:
  i_35 = i_33 + 1;

  <bb 7> [31.93%]:
  # i_36 = PHI <0(5), i_35(6)>
  if (_1 != i_36)
    goto <bb 4>; [92.50%]
  else
    goto <bb 69>; [7.50%]

  <bb 8> [2.59%]:
  # _37 = PHI <i_33(4)>
  if (_37 == -1)
    goto <bb 68>; [0.00%]
  else
    goto <bb 10>; [100.00%]

  <bb 9> [8.86%]:
  _2 = winlink_find_by_index (wwl_11(D), idx_9(D));
  if (_2 != 0B)
    goto <bb 68>; [18.75%]
  else
    goto <bb 10>; [81.25%]

  <bb 10> [11.94%]:
  # idx_5 = PHI <_37(8), idx_9(D)(9)>
  wl_16 = calloc (1, 136);
  wl_16->idx = idx_5;
  wl_16->window = w_18(D);
  tmp_38 = wwl_11(D)->rbh_root;
  if (tmp_38 != 0B)
    goto <bb 11>; [92.50%]
  else
    goto <bb 70>; [7.50%]

  <bb 11> [92.50%]:
  # tmp_22 = PHI <tmp_49(15), tmp_38(10)>
  _52 = idx_5;
  _53 = tmp_22->idx;
  _54 = idx_5 - _53;
  if (_54 < 0)
    goto <bb 12>; [36.00%]
  else
    goto <bb 13>; [64.00%]

  <bb 12> [33.30%]:
  tmp_42 = tmp_22->entry.rbe_left;
  goto <bb 15>; [100.00%]

  <bb 13> [59.20%]:
  if (_54 > 0)
    goto <bb 14>; [92.50%]
  else
    goto <bb 67>; [7.50%]

  <bb 14> [54.76%]:
  tmp_43 = tmp_22->entry.rbe_right;

  <bb 15> [88.10%]:
  # tmp_49 = PHI <tmp_43(14), tmp_42(12)>
  # parent_50 = PHI <tmp_22(14), tmp_22(12)>
  # comp_31 = PHI <_54(14), _54(12)>
  if (tmp_49 != 0B)
    goto <bb 11>; [92.50%]
  else
    goto <bb 16>; [7.50%]

  <bb 16> [6.60%]:
  # parent_14 = PHI <tmp_22(15)>
  # comp_183 = PHI <_54(15)>
  wl_16->entry.rbe_parent = parent_14;
  wl_16->entry.rbe_right = 0B;
  _46 = 0B;
  wl_16->entry.rbe_left = 0B;
  wl_16->entry.rbe_color = 1;
  if (parent_14 != 0B)
    goto <bb 17>; [79.49%]
  else
    goto <bb 21>; [20.51%]

  <bb 17> [5.25%]:
  if (comp_183 < 0)
    goto <bb 18>; [36.00%]
  else
    goto <bb 19>; [64.00%]

  <bb 18> [1.89%]:
  parent_14->entry.rbe_left = wl_16;
  goto <bb 20>; [100.00%]

  <bb 19> [3.36%]:
  parent_14->entry.rbe_right = wl_16;

  <bb 20> [7.50%]:
  # elm_99 = PHI <wl_16(19), wl_16(21), wl_16(18)>
  goto <bb 64>; [100.00%]

  <bb 21> [2.25%]:
  wwl_11(D)->rbh_root = wl_16;
  goto <bb 20>; [100.00%]

  <bb 22> [44.45%]:
  gparent_56 = parent_55->entry.rbe_parent;
  _57 = gparent_56->entry.rbe_left;
  if (parent_55 == _57)
    goto <bb 23>; [30.00%]
  else
    goto <bb 43>; [70.00%]

  <bb 23> [13.33%]:
  tmp_58 = gparent_56->entry.rbe_right;
  if (tmp_58 != 0B)
    goto <bb 24>; [70.00%]
  else
    goto <bb 26>; [30.00%]

  <bb 24> [9.33%]:
  _59 = tmp_58->entry.rbe_color;
  if (_59 == 1)
    goto <bb 25>; [20.24%]
  else
    goto <bb 26>; [79.76%]

  <bb 25> [1.89%]:
  tmp_58->entry.rbe_color = 0;
  _57->entry.rbe_color = 0;
  gparent_56->entry.rbe_color = 1;
  goto <bb 63>; [100.00%]

  <bb 26> [11.45%]:
  _60 = _57->entry.rbe_right;
  if (_60 == elm_61)
    goto <bb 27>; [30.00%]
  else
    goto <bb 35>; [70.00%]

  <bb 27> [3.43%]:
  tmp_62 = elm_61;
  _63 = _60->entry.rbe_left;
  _57->entry.rbe_right = _63;
  _64 = _63;
  if (_63 != 0B)
    goto <bb 28>; [70.00%]
  else
    goto <bb 29>; [30.00%]

  <bb 28> [2.40%]:
  _65 = _60->entry.rbe_left;
  _65->entry.rbe_parent = _57;

  <bb 29> [3.43%]:
  _66 = _57->entry.rbe_parent;
  _60->entry.rbe_parent = _66;
  _67 = _66;
  if (_66 != 0B)
    goto <bb 30>; [70.00%]
  else
    goto <bb 33>; [30.00%]

  <bb 30> [2.40%]:
  _68 = _57->entry.rbe_parent;
  _69 = _68->entry.rbe_left;
  if (_57 == _69)
    goto <bb 31>; [30.00%]
  else
    goto <bb 32>; [70.00%]

  <bb 31> [0.72%]:
  _70 = _68;
  _68->entry.rbe_left = _60;
  goto <bb 34>; [100.00%]

  <bb 32> [1.68%]:
  _71 = _68;
  _68->entry.rbe_right = _60;
  goto <bb 34>; [100.00%]

  <bb 33> [1.03%]:
  wwl_11(D)->rbh_root = _60;

  <bb 34> [3.43%]:
  _60->entry.rbe_left = _57;
  _57->entry.rbe_parent = _60;
  _72 = _60->entry.rbe_parent;

  <bb 35> [11.45%]:
  # elm_114 = PHI <elm_61(26), _57(34)>
  # parent_73 = PHI <_57(26), _60(34)>
  parent_73->entry.rbe_color = 0;
  gparent_56->entry.rbe_color = 1;
  tmp_74 = gparent_56->entry.rbe_left;
  _75 = tmp_74->entry.rbe_right;
  gparent_56->entry.rbe_left = _75;
  _76 = _75;
  if (_75 != 0B)
    goto <bb 36>; [70.00%]
  else
    goto <bb 37>; [30.00%]

  <bb 36> [8.01%]:
  _77 = tmp_74->entry.rbe_right;
  _77->entry.rbe_parent = gparent_56;

  <bb 37> [11.45%]:
  _78 = gparent_56->entry.rbe_parent;
  tmp_74->entry.rbe_parent = _78;
  _79 = _78;
  if (_78 != 0B)
    goto <bb 38>; [70.00%]
  else
    goto <bb 41>; [30.00%]

  <bb 38> [8.01%]:
  _80 = gparent_56->entry.rbe_parent;
  _81 = _80->entry.rbe_left;
  if (gparent_56 == _81)
    goto <bb 39>; [30.00%]
  else
    goto <bb 40>; [70.00%]

  <bb 39> [2.40%]:
  _82 = _80;
  _80->entry.rbe_left = tmp_74;
  goto <bb 42>; [100.00%]

  <bb 40> [5.61%]:
  _83 = _80;
  _80->entry.rbe_right = tmp_74;
  goto <bb 42>; [100.00%]

  <bb 41> [3.43%]:
  wwl_11(D)->rbh_root = tmp_74;

  <bb 42> [11.45%]:
  tmp_74->entry.rbe_right = gparent_56;
  gparent_56->entry.rbe_parent = tmp_74;
  _84 = tmp_74->entry.rbe_parent;
  goto <bb 63>; [100.00%]

  <bb 43> [31.11%]:
  tmp_85 = _57;
  if (_57 != 0B)
    goto <bb 44>; [70.00%]
  else
    goto <bb 46>; [30.00%]

  <bb 44> [21.78%]:
  _86 = _57->entry.rbe_color;
  if (_86 == 1)
    goto <bb 45>; [20.24%]
  else
    goto <bb 46>; [79.76%]

  <bb 45> [4.41%]:
  _57->entry.rbe_color = 0;
  parent_55->entry.rbe_color = 0;
  gparent_56->entry.rbe_color = 1;
  goto <bb 63>; [100.00%]

  <bb 46> [26.71%]:
  _87 = parent_55->entry.rbe_left;
  if (elm_61 == _87)
    goto <bb 47>; [30.00%]
  else
    goto <bb 55>; [70.00%]

  <bb 47> [8.01%]:
  tmp_88 = elm_61;
  _89 = elm_61->entry.rbe_right;
  parent_55->entry.rbe_left = _89;
  _90 = _89;
  if (_89 != 0B)
    goto <bb 48>; [70.00%]
  else
    goto <bb 49>; [30.00%]

  <bb 48> [5.61%]:
  _91 = elm_61->entry.rbe_right;
  _91->entry.rbe_parent = parent_55;

  <bb 49> [8.01%]:
  _92 = parent_55->entry.rbe_parent;
  elm_61->entry.rbe_parent = _92;
  _93 = _92;
  if (_92 != 0B)
    goto <bb 50>; [70.00%]
  else
    goto <bb 53>; [30.00%]

  <bb 50> [5.61%]:
  _94 = parent_55->entry.rbe_parent;
  _95 = _94->entry.rbe_left;
  if (parent_55 == _95)
    goto <bb 51>; [30.00%]
  else
    goto <bb 52>; [70.00%]

  <bb 51> [1.68%]:
  _96 = _94;
  _94->entry.rbe_left = elm_61;
  goto <bb 54>; [100.00%]

  <bb 52> [3.93%]:
  _97 = _94;
  _94->entry.rbe_right = elm_61;
  goto <bb 54>; [100.00%]

  <bb 53> [2.40%]:
  wwl_11(D)->rbh_root = elm_61;

  <bb 54> [8.01%]:
  elm_61->entry.rbe_right = parent_55;
  parent_55->entry.rbe_parent = elm_61;
  _98 = elm_61->entry.rbe_parent;

  <bb 55> [26.71%]:
  # elm_115 = PHI <elm_61(46), parent_55(54)>
  # parent_100 = PHI <parent_55(46), elm_61(54)>
  parent_100->entry.rbe_color = 0;
  gparent_56->entry.rbe_color = 1;
  tmp_101 = gparent_56->entry.rbe_right;
  _102 = tmp_101->entry.rbe_left;
  gparent_56->entry.rbe_right = _102;
  _103 = _102;
  if (_102 != 0B)
    goto <bb 56>; [70.00%]
  else
    goto <bb 57>; [30.00%]

  <bb 56> [18.69%]:
  _104 = tmp_101->entry.rbe_left;
  _104->entry.rbe_parent = gparent_56;

  <bb 57> [26.71%]:
  _105 = gparent_56->entry.rbe_parent;
  tmp_101->entry.rbe_parent = _105;
  _106 = _105;
  if (_105 != 0B)
    goto <bb 58>; [70.00%]
  else
    goto <bb 61>; [30.00%]

  <bb 58> [18.69%]:
  _107 = gparent_56->entry.rbe_parent;
  _108 = _107->entry.rbe_left;
  if (gparent_56 == _108)
    goto <bb 59>; [30.00%]
  else
    goto <bb 60>; [70.00%]

  <bb 59> [5.61%]:
  _109 = _107;
  _107->entry.rbe_left = tmp_101;
  goto <bb 62>; [100.00%]

  <bb 60> [13.09%]:
  _110 = _107;
  _107->entry.rbe_right = tmp_101;
  goto <bb 62>; [100.00%]

  <bb 61> [8.01%]:
  wwl_11(D)->rbh_root = tmp_101;

  <bb 62> [26.71%]:
  tmp_101->entry.rbe_left = gparent_56;
  gparent_56->entry.rbe_parent = tmp_101;
  _111 = tmp_101->entry.rbe_parent;

  <bb 63> [44.46%]:
  # elm_128 = PHI <elm_115(62), elm_114(42), gparent_56(45), gparent_56(25)>

  <bb 64> [51.95%]:
  # elm_61 = PHI <wl_16(20), elm_128(63)>
  parent_55 = elm_61->entry.rbe_parent;
  if (parent_55 != 0B)
    goto <bb 65>; [92.50%]
  else
    goto <bb 66>; [7.50%]

  <bb 65> [48.05%]:
  _112 = parent_55->entry.rbe_color;
  if (_112 == 1)
    goto <bb 22>; [92.50%]
  else
    goto <bb 66>; [7.50%]

  <bb 66> [7.50%]:
  _113 = wwl_11(D)->rbh_root;
  _113->entry.rbe_color = 0;

  <bb 67> [11.94%]:
  # _48 = PHI <tmp_22(13), 0B(66)>
  _3 = w_18(D)->references;
  _4 = _3 + 1;
  w_18(D)->references = _4;

  <bb 68> [13.84%]:
  # _6 = PHI <0B(8), 0B(9), wl_16(67), 0B(69)>
  return _6;

  <bb 69> [2.39%]:
  # _47 = PHI <-1(7)>
  goto <bb 68>; [100.00%]

  <bb 70> [0.90%]:
  # parent_45 = PHI <0B(10)>
  # comp_39 = PHI <0(10)>
  wl_16->entry.rbe_parent = parent_45;
  wl_16->entry.rbe_right = 0B;
  _44 = 0B;
  wl_16->entry.rbe_left = 0B;
  wl_16->entry.rbe_color = 1;
  goto <bb 21>; [100.00%]

}



;; Function session_group_synchronize1 (session_group_synchronize1, funcdef_no=17, decl_uid=4462, cgraph_uid=23, symbol_order=81)

Created preheader block for loop 3
Created preheader block for loop 2
Created preheader block for loop 1
Created preheader block for loop 4
;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 19 4 23 5 18 6 22 7 17 8 9 10 21 11 16 12 20 13 14 15
;;
;; Loop 3
;;  header 12, latch 20
;;  depth 1, outer 0
;;  nodes: 12 20
;;
;; Loop 2
;;  header 8, latch 21
;;  depth 1, outer 0
;;  nodes: 8 21 10 9
;;
;; Loop 1
;;  header 6, latch 22
;;  depth 1, outer 0
;;  nodes: 6 22
;;
;; Loop 4
;;  header 4, latch 23
;;  depth 1, outer 0
;;  nodes: 4 23
;; 2 succs { 14 3 }
;; 3 succs { 19 5 }
;; 19 succs { 4 }
;; 4 succs { 23 5 }
;; 23 succs { 4 }
;; 5 succs { 18 7 }
;; 18 succs { 6 }
;; 6 succs { 22 7 }
;; 22 succs { 6 }
;; 7 succs { 17 11 }
;; 17 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 21 11 }
;; 21 succs { 8 }
;; 11 succs { 16 13 }
;; 16 succs { 12 }
;; 12 succs { 20 13 }
;; 20 succs { 12 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 1 }
Removing basic block 16
Removing basic block 17
Removing basic block 18
Removing basic block 19
Removing basic block 20
Removing basic block 21
Removing basic block 22
Removing basic block 23

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

parent_76 -> { parent_87 }
Incremental SSA update started at block: 3
Number of blocks in CFG: 17
Number of blocks to update: 4 ( 24%)


session_group_synchronize1 (struct session * target, struct session * s)
{
  struct winlink * tmp;
  struct winlink * parent;
  struct winlink * D.4675;
  struct winlink * wl2;
  struct winlink * wl;
  struct winlink_stack old_lastw;
  struct winlinks * ww;
  struct winlinks old_windows;
  struct winlink * _1;
  int _2;
  struct window * _3;
  struct winlinks * _4;
  struct winlink * * _5;
  int _6;
  struct winlinks * _7;
  struct winlink * * _8;
  struct winlink * * _9;
  struct winlink * * _10;
  struct winlink * _11;
  struct winlink * _12;
  uint128_t _24;
  long unsigned int _27;
  struct winlink * _77;

  <bb 2> [28.05%]:
  _1 = MEM[(struct winlinks *)target_20(D) + 40B].rbh_root;
  if (_1 == 0B)
    goto <bb 14>; [46.53%]
  else
    goto <bb 3>; [53.47%]

  <bb 3> [15.00%]:
  _27 = MEM[(char * {ref-all})s_23(D) + 40B];
  MEM[(char * {ref-all})&old_windows] = _27;
  s_23(D)->windows.rbh_root = 0B;
  tmp_68 = MEM[(struct winlinks *)target_20(D) + 40B].rbh_root;
  if (tmp_68 != 0B)
    goto <bb 4>; [85.00%]
  else
    goto <bb 16>; [15.00%]

  <bb 4> [85.00%]:
  # tmp_86 = PHI <tmp_71(4), tmp_68(3)>
  tmp_71 = tmp_86->entry.rbe_left;
  if (tmp_71 != 0B)
    goto <bb 4>; [85.00%]
  else
    goto <bb 5>; [15.00%]

  <bb 5> [12.75%]:
  # parent_87 = PHI <tmp_86(4)>
  if (parent_87 != 0B)
    goto <bb 6>; [100.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 6> [85.00%]:
  # wl_78 = PHI <wl_44(6), parent_87(5)>
  _2 = wl_78->idx;
  _3 = wl_78->window;
  _4 = &s_23(D)->windows;
  winlink_add (_4, _3, _2);
  wl_44 = winlinks_RB_NEXT (wl_78);
  if (wl_44 != 0B)
    goto <bb 6>; [85.00%]
  else
    goto <bb 7>; [15.00%]

  <bb 7> [15.00%]:
  _24 = MEM[(char * {ref-all})s_23(D) + 24B];
  MEM[(char * {ref-all})&old_lastw] = _24;
  s_23(D)->lastw.tqh_first = 0B;
  _5 = &s_23(D)->lastw.tqh_first;
  s_23(D)->lastw.tqh_last = _5;
  wl_30 = old_lastw.tqh_first;
  if (wl_30 != 0B)
    goto <bb 8>; [85.00%]
  else
    goto <bb 11>; [15.00%]

  <bb 8> [85.00%]:
  # wl_79 = PHI <wl_42(10), wl_30(7)>
  _6 = wl_79->idx;
  _7 = &s_23(D)->windows;
  wl2_37 = winlink_find_by_index (_7, _6);
  if (wl2_37 != 0B)
    goto <bb 9>; [70.00%]
  else
    goto <bb 10>; [30.00%]

  <bb 9> [59.50%]:
  wl2_37->sentry.tqe_next = 0B;
  _8 = s_23(D)->lastw.tqh_last;
  wl2_37->sentry.tqe_prev = _8;
  _9 = s_23(D)->lastw.tqh_last;
  *_9 = wl2_37;
  _10 = &wl2_37->sentry.tqe_next;
  s_23(D)->lastw.tqh_last = _10;

  <bb 10> [85.00%]:
  wl_42 = wl_79->sentry.tqe_next;
  if (wl_42 != 0B)
    goto <bb 8>; [85.00%]
  else
    goto <bb 11>; [15.00%]

  <bb 11> [15.00%]:
  _11 = s_23(D)->lastw.tqh_first;
  s_23(D)->curw = _11;
  _77 = old_windows.rbh_root;
  if (_77 != 0B)
    goto <bb 12>; [85.00%]
  else
    goto <bb 13>; [15.00%]

  <bb 12> [85.00%]:
  wl_34 = old_windows.rbh_root;
  winlink_remove (&old_windows, wl_34);
  _12 = old_windows.rbh_root;
  if (_12 != 0B)
    goto <bb 12>; [85.00%]
  else
    goto <bb 13>; [15.00%]

  <bb 13> [15.00%]:
  old_windows ={v} {CLOBBER};
  old_lastw ={v} {CLOBBER};
  goto <bb 15>; [100.00%]

  <bb 14> [13.05%]:
  old_windows ={v} {CLOBBER};
  old_lastw ={v} {CLOBBER};

  <bb 15> [28.05%]:
  return;

  <bb 16> [2.25%]:
  # parent_76 = PHI <0B(3)>
  goto <bb 7>; [100.00%]

}



;; Function session_group_synchronize_from (session_group_synchronize_from, funcdef_no=19, decl_uid=4461, cgraph_uid=22, symbol_order=83)

Created preheader block for loop 1
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 8 4 5 6 9 7
;;
;; Loop 1
;;  header 4, latch 9
;;  depth 1, outer 0
;;  nodes: 4 9 6 5
;; 2 succs { 7 3 }
;; 3 succs { 8 7 }
;; 8 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 9 7 }
;; 9 succs { 4 }
;; 7 succs { 1 }
Removing basic block 8
Removing basic block 9
session_group_synchronize_from (struct session * target)
{
  struct session * s;
  struct session_group * sg;

  <bb 2> [20.48%]:
  sg_7 = session_group_find (target_6(D));
  if (sg_7 == 0B)
    goto <bb 7>; [26.74%]
  else
    goto <bb 3>; [73.26%]

  <bb 3> [15.00%]:
  s_8 = sg_7->sessions.tqh_first;
  if (s_8 != 0B)
    goto <bb 4>; [85.00%]
  else
    goto <bb 7>; [15.00%]

  <bb 4> [85.00%]:
  # s_18 = PHI <s_10(6), s_8(3)>
  if (s_18 != target_6(D))
    goto <bb 5>; [53.47%]
  else
    goto <bb 6>; [46.53%]

  <bb 5> [45.45%]:
  session_group_synchronize1 (target_6(D), s_18);

  <bb 6> [85.00%]:
  s_10 = s_18->gentry.tqe_next;
  if (s_10 != 0B)
    goto <bb 4>; [85.00%]
  else
    goto <bb 7>; [15.00%]

  <bb 7> [20.48%]:
  return;

}



;; Function xrealloc (xrealloc, funcdef_no=1, decl_uid=4487, cgraph_uid=41, symbol_order=63)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 6 }
;; 5 succs { }
;; 6 succs { 7 8 }
;; 7 succs { }
;; 8 succs { 1 }
xrealloc (void * oldptr, size_t nmemb, size_t size)
{
  void * newptr;
  size_t newsize;
  long unsigned int _1;
  int _13;
  int _14;
  int _15;

  <bb 2> [100.00%]:
  newsize_4 = nmemb_2(D) * size_3(D);
  if (newsize_4 == 0)
    goto <bb 3>; [0.04%]
  else
    goto <bb 4>; [99.96%]

  <bb 3> [0.04%]:
  _13 = __printf_chk (1, "zero size%s", "");
  exit (1);

  <bb 4> [99.96%]:
  _1 = 1073741824 / nmemb_2(D);
  if (_1 < size_3(D))
    goto <bb 5>; [0.04%]
  else
    goto <bb 6>; [99.96%]

  <bb 5> [0.04%]:
  _14 = __printf_chk (1, "nmemb * size > SIZE_MAX%s", "");
  exit (1);

  <bb 6> [99.92%]:
  newptr_8 = realloc (oldptr_6(D), newsize_4);
  if (newptr_8 == 0B)
    goto <bb 7>; [0.04%]
  else
    goto <bb 8>; [99.96%]

  <bb 7> [0.04%]:
  _15 = __printf_chk (1, "xrealloc failed%s", "");
  exit (1);

  <bb 8> [99.88%]:
  return newptr_8;

}



;; Function window_create1 (window_create1, funcdef_no=25, decl_uid=4455, cgraph_uid=16, symbol_order=90)

Created preheader block for loop 2
Created preheader block for loop 1
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 21 5 19 6 7 8 9 10 11 12 13 14 18 15 20 16 17
;;
;; Loop 2
;;  header 15, latch 20
;;  depth 1, outer 0
;;  nodes: 15 20
;;
;; Loop 1
;;  header 6, latch 21
;;  depth 1, outer 0
;;  nodes: 6 21 4
;; 2 succs { 3 7 }
;; 3 succs { 5 19 }
;; 4 succs { 5 21 }
;; 21 succs { 6 }
;; 5 succs { 7 }
;; 19 succs { 6 }
;; 6 succs { 4 7 }
;; 7 succs { 8 17 }
;; 8 succs { 9 10 }
;; 9 succs { }
;; 10 succs { 11 12 }
;; 11 succs { }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 18 16 }
;; 18 succs { 15 }
;; 15 succs { 20 16 }
;; 20 succs { 15 }
;; 16 succs { 17 }
;; 17 succs { 1 }
Removing basic block 18
Removing basic block 19
Removing basic block 20
Removing basic block 21

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_37 -> { _11 }
.MEM_66 -> { .MEM_70 }
i_73 -> { i_111 }
.MEM_102 -> { .MEM_70 }
Incremental SSA update started at block: 2
Number of blocks in CFG: 19
Number of blocks to update: 10 ( 53%)


window_create1 (u_int sx, u_int sy)
{
  u_int i;
  struct window * w;
  struct window * * _1;
  long unsigned int _2;
  long unsigned int _3;
  struct window * * _4;
  struct window * _5;
  struct window * * _6;
  long unsigned int _7;
  long unsigned int _8;
  struct window * * _9;
  unsigned int _10;
  unsigned int _11;
  unsigned int _12;
  unsigned int _13;
  unsigned int _14;
  unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  struct window * * _18;
  void * _19;
  long unsigned int _20;
  struct window * * _21;
  void * _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  unsigned int _26;
  unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  struct window * * _30;
  unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  struct window * * _34;
  unsigned int _35;
  unsigned int _36;
  unsigned int _37;
  int _68;
  int _69;
  long unsigned int _97;
  unsigned int _98;
  unsigned int _99;
  long unsigned int _100;
  long unsigned int _101;
  unsigned int _103;
  struct window * * _104;
  long unsigned int _105;
  long unsigned int _106;
  struct window * * _107;
  struct window * _108;

  <bb 2> [14.44%]:
  w_43 = malloc (88);
  w_43->name = 0B;
  w_43->flags = 0;
  w_43->active = 0B;
  w_43->lastlayout = -1;
  w_43->layout_root = 0B;
  w_43->sx = sx_49(D);
  w_43->sy = sy_51(D);
  _103 = windows.num;
  if (_103 != 0)
    goto <bb 3>; [92.50%]
  else
    goto <bb 18>; [7.50%]

  <bb 3> [13.32%]:
  _104 = windows.list;
  _105 = 0;
  _106 = 0;
  _107 = _104;
  _108 = *_104;
  if (_108 == 0B)
    goto <bb 5>; [7.50%]
  else
    goto <bb 6>; [92.50%]

  <bb 4> [79.18%]:
  _1 = _104;
  _2 = (long unsigned int) i_53;
  _3 = _2 * 8;
  _4 = _104 + _3;
  _5 = *_4;
  if (_5 == 0B)
    goto <bb 5>; [7.50%]
  else
    goto <bb 6>; [92.50%]

  <bb 5> [6.94%]:
  # i_109 = PHI <i_53(4), 0(3)>
  _6 = _104;
  _7 = (long unsigned int) i_109;
  _8 = _7 * 8;
  _9 = _104 + _8;
  *_9 = w_43;
  goto <bb 7>; [100.00%]

  <bb 6> [85.60%]:
  # i_110 = PHI <i_53(4), 0(3)>
  i_53 = i_110 + 1;
  _10 = _103;
  if (i_53 < _103)
    goto <bb 4>; [92.50%]
  else
    goto <bb 7>; [7.50%]

  <bb 7> [13.36%]:
  # i_111 = PHI <i_109(5), i_53(6)>
  _11 = _103;
  if (_103 == i_111)
    goto <bb 8>; [32.63%]
  else
    goto <bb 17>; [67.37%]

  <bb 8> [5.44%]:
  _12 = _103;
  if (_103 > 1073741823)
    goto <bb 9>; [0.04%]
  else
    goto <bb 10>; [99.96%]

  <bb 9> [0.00%]:
  _68 = __printf_chk (1, "number too big%s", "");
  exit (1);

  <bb 10> [5.44%]:
  _13 = _103;
  _14 = _103 + 1;
  _15 = 1073741824 / _14;
  if (_15 <= 7)
    goto <bb 11>; [0.04%]
  else
    goto <bb 12>; [99.96%]

  <bb 11> [0.00%]:
  _69 = __printf_chk (1, "size too big%s", "");
  exit (1);

  <bb 12> [5.44%]:
  _16 = windows.space;
  if (_16 == 0)
    goto <bb 13>; [33.00%]
  else
    goto <bb 14>; [67.00%]

  <bb 13> [1.79%]:
  windows.space = 80;
  _17 = 80;
  _18 = windows.list;
  _19 = xrealloc (_18, 1, 80);
  windows.list = _19;

  <bb 14> [5.44%]:
  _97 = windows.space;
  _98 = windows.num;
  _99 = _98 + 1;
  _100 = (long unsigned int) _99;
  _101 = _100 * 8;
  if (_97 <= _101)
    goto <bb 15>; [85.00%]
  else
    goto <bb 16>; [15.00%]

  <bb 15> [30.80%]:
  _20 = windows.space;
  _21 = windows.list;
  _22 = xrealloc (_21, 2, _20);
  windows.list = _22;
  _23 = windows.space;
  _24 = _23 * 2;
  windows.space = _24;
  _25 = _24;
  _26 = windows.num;
  _27 = _26 + 1;
  _28 = (long unsigned int) _27;
  _29 = _28 * 8;
  if (_24 <= _29)
    goto <bb 15>; [85.00%]
  else
    goto <bb 16>; [15.00%]

  <bb 16> [5.44%]:
  _30 = windows.list;
  _31 = windows.num;
  _32 = (long unsigned int) _31;
  _33 = _32 * 8;
  _34 = _30 + _33;
  *_34 = w_43;
  _35 = _31;
  _36 = _31 + 1;
  windows.num = _36;

  <bb 17> [14.43%]:
  w_43->references = 0;
  return w_43;

  <bb 18> [1.08%]:
  # i_73 = PHI <0(2)>
  _37 = _103;
  goto <bb 8>; [100.00%]

}



;; Function main (main, funcdef_no=26, decl_uid=3986, cgraph_uid=0, symbol_order=94) (executed once)

Created preheader block for loop 2
Created preheader block for loop 7
Created preheader block for loop 8
Created preheader block for loop 11
Created preheader block for loop 12
Created preheader block for loop 9
Created preheader block for loop 10
Created preheader block for loop 1
Created preheader block for loop 6
Created preheader block for loop 4
Created preheader block for loop 5
Created preheader block for loop 3
;; 13 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 88 3 4 5 92 6 7 8 104 9 10 11 12 13 103 14 91 15 16 17 18 19 20 21 22 23 90 24 102 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 89 44 101 45 46 47 100 48 49 50 51 52 82 53 54 87 55 99 56 57 86 58 98 59 60 61 62 63 95 64 65 66 67 68 83 69 85 70 97 71 72 84 73 96 74 75 76 94 77 78 81 79 93 80
;;
;; Loop 2
;;  header 79, latch 93
;;  depth 1, outer 0
;;  nodes: 79 93
;;
;; Loop 7
;;  header 53, latch 94
;;  depth 1, outer 0
;;  nodes: 53 94 76 60 68 75 64 63 61 62 73 74 71 72 70 69 95 83 97 85 96 84 66 67 65 58 59 56 57 55 54 99 87 98 86
;;
;; Loop 8
;;  header 69, latch 95
;;  depth 2, outer 7
;;  nodes: 69 95 63 61 62 75 73 74 71 72 70 97 85 96 84
;;
;; Loop 11
;;  header 74, latch 96
;;  depth 3, outer 8
;;  nodes: 74 96 73
;;
;; Loop 12
;;  header 70, latch 97
;;  depth 3, outer 8
;;  nodes: 70 97
;;
;; Loop 9
;;  header 59, latch 98
;;  depth 2, outer 7
;;  nodes: 59 98 58
;;
;; Loop 10
;;  header 55, latch 99
;;  depth 2, outer 7
;;  nodes: 55 99
;;
;; Loop 1
;;  header 3, latch 100
;;  depth 1, outer 0
;;  nodes: 3 100 47 39 46 45 42 40 41 44 43 101 89 37 38 34 36 28 35 33 29 32 30 31 26 16 25 24 23 22 21 19 17 102 90 14 15 11 9 10 7 8 5 4 6 104 92 103 91 12 13
;;
;; Loop 6
;;  header 44, latch 101
;;  depth 2, outer 1
;;  nodes: 44 101
;;
;; Loop 4
;;  header 24, latch 102
;;  depth 2, outer 1
;;  nodes: 24 102
;;
;; Loop 5
;;  header 15, latch 103
;;  depth 2, outer 1
;;  nodes: 15 103 13
;;
;; Loop 3
;;  header 6, latch 104
;;  depth 2, outer 1
;;  nodes: 6 104 8 7
;; 2 succs { 88 48 }
;; 88 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 92 9 }
;; 92 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 8 }
;; 8 succs { 104 9 }
;; 104 succs { 6 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 16 }
;; 12 succs { 14 91 }
;; 13 succs { 14 103 }
;; 103 succs { 15 }
;; 14 succs { 16 }
;; 91 succs { 15 }
;; 15 succs { 13 16 }
;; 16 succs { 17 26 }
;; 17 succs { 18 19 }
;; 18 succs { }
;; 19 succs { 20 21 }
;; 20 succs { }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 90 25 }
;; 90 succs { 24 }
;; 24 succs { 102 25 }
;; 102 succs { 24 }
;; 25 succs { 26 }
;; 26 succs { 27 28 }
;; 27 succs { }
;; 28 succs { 29 36 }
;; 29 succs { 33 30 }
;; 30 succs { 31 32 }
;; 31 succs { 32 }
;; 32 succs { 33 }
;; 33 succs { 34 35 }
;; 34 succs { 37 }
;; 35 succs { 36 }
;; 36 succs { 37 }
;; 37 succs { 38 39 }
;; 38 succs { 39 }
;; 39 succs { 40 47 }
;; 40 succs { 41 42 }
;; 41 succs { 42 }
;; 42 succs { 46 43 }
;; 43 succs { 45 89 }
;; 89 succs { 44 }
;; 44 succs { 45 101 }
;; 101 succs { 44 }
;; 45 succs { 46 }
;; 46 succs { 47 }
;; 47 succs { 100 48 }
;; 100 succs { 3 }
;; 48 succs { 78 49 }
;; 49 succs { 78 50 }
;; 50 succs { 52 51 }
;; 51 succs { 82 77 }
;; 52 succs { 78 }
;; 82 succs { 53 }
;; 53 succs { 76 54 }
;; 54 succs { 87 56 }
;; 87 succs { 55 }
;; 55 succs { 99 56 }
;; 99 succs { 55 }
;; 56 succs { 57 60 }
;; 57 succs { 60 86 }
;; 86 succs { 59 }
;; 58 succs { 60 98 }
;; 98 succs { 59 }
;; 59 succs { 58 60 }
;; 60 succs { 76 83 }
;; 61 succs { 62 63 }
;; 62 succs { 63 }
;; 63 succs { 64 95 }
;; 95 succs { 69 }
;; 64 succs { 76 65 }
;; 65 succs { 66 67 }
;; 66 succs { 68 }
;; 67 succs { 68 }
;; 68 succs { 76 }
;; 83 succs { 69 }
;; 69 succs { 85 71 }
;; 85 succs { 70 }
;; 70 succs { 97 71 }
;; 97 succs { 70 }
;; 71 succs { 72 75 }
;; 72 succs { 75 84 }
;; 84 succs { 74 }
;; 73 succs { 75 96 }
;; 96 succs { 74 }
;; 74 succs { 73 75 }
;; 75 succs { 61 76 }
;; 76 succs { 94 77 }
;; 94 succs { 53 }
;; 77 succs { 78 }
;; 78 succs { 81 80 }
;; 81 succs { 79 }
;; 79 succs { 93 80 }
;; 93 succs { 79 }
;; 80 succs { 1 }
Removing basic block 63
Removing basic block 81
Removing basic block 82
Removing basic block 83
Removing basic block 84
Removing basic block 85
Removing basic block 86
Removing basic block 87
Removing basic block 88
Removing basic block 89
Removing basic block 90
Removing basic block 91
Removing basic block 92
Removing basic block 93
Removing basic block 94
Removing basic block 95
Removing basic block 96
Removing basic block 97
Removing basic block 98
Removing basic block 99
Removing basic block 100
Removing basic block 101
Removing basic block 102
Removing basic block 103
Removing basic block 104
Merging blocks 112 and 64

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

parent_17 -> { parent_358 }
_20 -> { _220 _227 }
_28 -> { _29 _239 }
_29 -> { _239 }
.MEM_61 -> { .MEM_216 .MEM_259 }
parent_74 -> { parent_361 }
.MEM_75 -> { .MEM_71 }
.MEM_92 -> { .MEM_71 }
.MEM_100 -> { .MEM_71 }
target_116 -> { target_26 }
_162 -> { _109 }
i_198 -> { i_352 }
target_205 -> { target_26 }
_206 -> { _94 }
_209 -> { _94 }
_211 -> { _214 _217 }
.MEM_216 -> { .MEM_259 }
_217 -> { _214 }
_220 -> { _227 }
.MEM_223 -> { .MEM_71 }
_236 -> { _127 }
.MEM_241 -> { .MEM_253 }
_245 -> { _168 }
target_250 -> { target_26 }
.MEM_263 -> { .MEM_249 }
_270 -> { _94 }
_283 -> { _94 }
target_284 -> { target_26 }
target_315 -> { target_26 }
_366 -> { _94 }
_367 -> { _109 }
_368 -> { _109 }
_369 -> { _239 }
.MEM_370 -> { .MEM_249 }
.MEM_371 -> { .MEM_253 }

SSA names to release after updating the SSA web

_227 .MEM_259 
Incremental SSA update started at block: 2
Number of blocks in CFG: 92
Number of blocks to update: 51 ( 55%)


main (int argc, char * * argv)
{
  struct winlink * tmp;
  struct winlink * parent;
  struct winlink * D.4879;
  struct winlink * wl;
  struct winlink * D.4874;
  struct session_group * sg;
  int D.4859;
  struct winlink * tmp;
  struct winlink * parent;
  struct winlink * D.4852;
  struct winlink * wl;
  int D.4847;
  struct session * s;
  struct winlink * wl;
  u_int i;
  struct session * dst_s;
  struct winlink * src_wl;
  struct winlink * dst_wl;
  struct window * src_w;
  struct window * dst_w;
  int D.4828;
  struct session_group * sg;
  struct session_group * sg;
  struct session * target;
  struct winlink * wl;
  struct winlink * D.4799;
  struct window * w;
  struct winlink * D.4793;
  struct session * s;
  u_int i;
  struct session * D.4776;
  struct winlink * wl;
  struct winlink * D.4751;
  struct session * s;
  u_int i;
  struct session * D.4738;
  int i;
  int sy;
  int sx;
  int idx;
  char * name;
  char * cmd;
  char * target;
  struct window * w;
  struct session * groupwith;
  struct session * s;
  long unsigned int _1;
  long unsigned int _2;
  char * * _3;
  char * _4;
  char _5;
  long unsigned int _6;
  long unsigned int _7;
  sizetype _8;
  char * * _9;
  char * _10;
  long unsigned int _11;
  long unsigned int _12;
  char * * _13;
  char * _14;
  unsigned int _15;
  unsigned int _16;
  unsigned int _18;
  unsigned int _19;
  int _20;
  struct winlink * _21;
  int _22;
  struct session * * _23;
  struct session * _24;
  unsigned int _25;
  struct winlink * _28;
  struct winlink * _29;
  bool _51;
  long unsigned int _85;
  unsigned int _86;
  unsigned int _94;
  struct session * * _96;
  struct session * _97;
  struct session * * _99;
  long unsigned int _101;
  long unsigned int _102;
  struct session * * _103;
  char * _105;
  int _106;
  unsigned int _108;
  struct session * _109;
  struct winlinks * _110;
  int _112;
  struct winlink * * _114;
  struct session * * _115;
  long unsigned int _117;
  long unsigned int _118;
  struct session * * _119;
  struct session * _120;
  struct session * * _121;
  long unsigned int _122;
  long unsigned int _123;
  struct session * * _124;
  unsigned int _126;
  unsigned int _127;
  unsigned int _128;
  int _129;
  unsigned int _130;
  unsigned int _131;
  unsigned int _132;
  int _133;
  long unsigned int _134;
  long unsigned int _135;
  struct session * * _136;
  void * _137;
  long unsigned int _138;
  struct session * * _139;
  void * _140;
  long unsigned int _141;
  long unsigned int _142;
  long unsigned int _143;
  unsigned int _144;
  unsigned int _145;
  long unsigned int _146;
  long unsigned int _147;
  struct session * * _148;
  unsigned int _149;
  long unsigned int _150;
  long unsigned int _151;
  struct session * * _152;
  unsigned int _153;
  unsigned int _154;
  int _155;
  char * _156;
  long unsigned int _157;
  struct winlink * _158;
  int _159;
  char * _160;
  int _161;
  struct session * _162;
  struct session * _163;
  unsigned int _164;
  unsigned int _165;
  bool _167;
  struct winlink * _168;
  struct winlinks * _169;
  int _171;
  struct session_group * * _178;
  struct session_group * * _179;
  struct session_group * * _180;
  struct session * * _181;
  struct session * * _182;
  struct session * * _183;
  struct session * * _184;
  struct session * * _186;
  struct session * * _187;
  struct session * * _188;
  int _193;
  int _194;
  struct session * _195;
  int _196;
  struct session * * _197;
  long unsigned int _199;
  long unsigned int _200;
  struct session * * _201;
  bool _203;
  unsigned int _206;
  unsigned int _208;
  unsigned int _209;
  bool _210;
  int _211;
  struct window * _212;
  int _214;
  int _217;
  long unsigned int _219;
  int _220;
  bool _221;
  unsigned int _222;
  struct winlink_stack * _224;
  struct winlinks * _225;
  struct winlink * _226;
  struct session_group * _229;
  struct session_group * _230;
  struct session_group * * _231;
  struct session_group * * _232;
  struct session_group * * _233;
  struct session_group * _234;
  unsigned int _235;
  unsigned int _236;
  struct window * _237;
  struct winlink * _239;
  struct window * _242;
  struct session * * _244;
  struct winlink * _245;
  bool _246;
  long unsigned int _247;
  long unsigned int _248;
  bool _268;
  bool _269;
  unsigned int _270;
  unsigned int _276;
  unsigned int _283;
  bool _314;
  struct window * _319;
  unsigned int _323;
  unsigned int _366;
  struct session * _367;
  struct session * _368;
  struct winlink * _369;

  <bb 2> [1.07%]:
  windows.num = 0;
  windows.list = 0B;
  windows.space = 0;
  sessions.num = 0;
  sessions.list = 0B;
  sessions.space = 0;
  session_groups.tqh_first = 0B;
  session_groups.tqh_last = &session_groups.tqh_first;
  if (argc_44(D) > 0)
    goto <bb 3>; [85.00%]
  else
    goto <bb 48>; [15.00%]

  <bb 3> [6.03%]:
  # idx_343 = PHI <idx_64(47), 0(2)>
  # i_344 = PHI <i_70(47), 0(2)>
  _1 = (long unsigned int) i_344;
  _2 = _1 * 8;
  _3 = argv_48(D) + _2;
  _4 = *_3;
  _5 = *_4;
  _221 = i_344 > 0;
  _268 = _5 == 116;
  _210 = _221 & _268;
  if (_210 != 0)
    goto <bb 4>; [33.22%]
  else
    goto <bb 81>; [66.78%]

  <bb 4> [2.00%]:
  _6 = _1;
  _7 = _2;
  _8 = _2 + 18446744073709551608;
  _9 = argv_48(D) + _8;
  _10 = *_9;
  target_50 = strdup (_10);

  <bb 5> [2.02%]:
  # target_26 = PHI <target_50(4)>
  _94 = sessions.num;
  if (_94 != 0)
    goto <bb 6>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 6> [45.16%]:
  # i_349 = PHI <i_107(8), 0(81), 0(5)>
  # target_284 = PHI <target_284(8), target_205(81), target_26(5)>
  # _283 = PHI <_283(8), _270(81), _94(5)>
  _99 = sessions.list;
  _101 = (long unsigned int) i_349;
  _102 = _101 * 8;
  _103 = _99 + _102;
  s_104 = *_103;
  if (s_104 != 0B)
    goto <bb 7>; [70.00%]
  else
    goto <bb 8>; [30.00%]

  <bb 7> [31.61%]:
  _105 = s_104->name;
  _106 = strcmp (_105, target_284);
  if (_106 == 0)
    goto <bb 9>; [7.50%]
  else
    goto <bb 8>; [92.50%]

  <bb 8> [42.79%]:
  i_107 = i_349 + 1;
  _108 = _283;
  if (_283 > i_107)
    goto <bb 6>; [92.50%]
  else
    goto <bb 9>; [7.50%]

  <bb 9> [5.73%]:
  # _109 = PHI <s_104(7), 0B(8), 0B(5)>
  # target_315 = PHI <target_284(7), target_284(8), target_26(5)>
  # _209 = PHI <_283(7), _283(8), _94(5)>
  if (target_315 == 0B)
    goto <bb 10>; [13.08%]
  else
    goto <bb 11>; [86.92%]

  <bb 10> [1.05%]:
  # target_250 = PHI <target_315(9), target_205(80)>
  # _206 = PHI <_209(9), _270(80)>
  # _367 = PHI <_109(9), _162(80)>
  cmd_53 = strdup ("cmd");

  <bb 11> [6.03%]:
  # cmd_27 = PHI <0B(9), cmd_53(10)>
  # target_116 = PHI <target_315(9), target_250(10)>
  # _366 = PHI <_209(9), _206(10)>
  # _368 = PHI <_109(9), _367(10)>
  free (target_116);
  _11 = _1;
  _12 = _2;
  _13 = _3;
  _14 = *_3;
  name_56 = strdup (_14);
  _15 = (unsigned int) sy_57(D);
  _16 = (unsigned int) sx_58(D);
  idx_59 = idx_343 + 1;
  s_113 = malloc (112);
  s_113->references = 0;
  s_113->flags = 0;
  s_113->curw = 0B;
  s_113->lastw.tqh_first = 0B;
  _114 = &s_113->lastw.tqh_first;
  s_113->lastw.tqh_last = _114;
  s_113->windows.rbh_root = 0B;
  s_113->tio = 0B;
  s_113->sx = _16;
  s_113->sy = _15;
  _222 = _366;
  if (_366 != 0)
    goto <bb 12>; [92.50%]
  else
    goto <bb 82>; [7.50%]

  <bb 12> [5.57%]:
  _244 = sessions.list;
  _219 = 0;
  _85 = 0;
  _96 = _244;
  _97 = *_244;
  if (_97 == 0B)
    goto <bb 14>; [7.50%]
  else
    goto <bb 15>; [92.50%]

  <bb 13> [33.08%]:
  _115 = _244;
  _117 = (long unsigned int) i_125;
  _118 = _117 * 8;
  _119 = _244 + _118;
  _120 = *_119;
  if (_120 == 0B)
    goto <bb 14>; [7.50%]
  else
    goto <bb 15>; [92.50%]

  <bb 14> [2.90%]:
  # i_350 = PHI <i_125(13), 0(12)>
  _121 = _244;
  _122 = (long unsigned int) i_350;
  _123 = _122 * 8;
  _124 = _244 + _123;
  *_124 = s_113;
  goto <bb 16>; [100.00%]

  <bb 15> [35.76%]:
  # i_351 = PHI <i_125(13), 0(12)>
  i_125 = i_351 + 1;
  _126 = _366;
  if (_366 > i_125)
    goto <bb 13>; [92.50%]
  else
    goto <bb 16>; [7.50%]

  <bb 16> [5.58%]:
  # i_352 = PHI <i_350(14), i_125(15)>
  _127 = _366;
  if (_366 == i_352)
    goto <bb 17>; [28.65%]
  else
    goto <bb 26>; [71.35%]

  <bb 17> [2.05%]:
  _128 = _366;
  if (_366 > 1073741823)
    goto <bb 18>; [0.04%]
  else
    goto <bb 19>; [99.96%]

  <bb 18> [0.00%]:
  _129 = __printf_chk (1, "number too big%s", "");
  exit (1);

  <bb 19> [2.05%]:
  _130 = _366;
  _131 = _366 + 1;
  _132 = 1073741824 / _131;
  if (_132 <= 7)
    goto <bb 20>; [0.04%]
  else
    goto <bb 21>; [99.96%]

  <bb 20> [0.00%]:
  _133 = __printf_chk (1, "size too big%s", "");
  exit (1);

  <bb 21> [2.05%]:
  _134 = sessions.space;
  if (_134 == 0)
    goto <bb 22>; [33.00%]
  else
    goto <bb 23>; [67.00%]

  <bb 22> [0.68%]:
  sessions.space = 80;
  _135 = 80;
  _136 = sessions.list;
  _137 = xrealloc (_136, 1, 80);
  sessions.list = _137;

  <bb 23> [2.05%]:
  _157 = sessions.space;
  _323 = sessions.num;
  _86 = _323 + 1;
  _248 = (long unsigned int) _86;
  _247 = _248 * 8;
  if (_157 <= _247)
    goto <bb 24>; [85.00%]
  else
    goto <bb 25>; [15.00%]

  <bb 24> [11.61%]:
  _138 = sessions.space;
  _139 = sessions.list;
  _140 = xrealloc (_139, 2, _138);
  sessions.list = _140;
  _141 = sessions.space;
  _142 = _141 * 2;
  sessions.space = _142;
  _143 = _142;
  _144 = sessions.num;
  _145 = _144 + 1;
  _146 = (long unsigned int) _145;
  _147 = _146 * 8;
  if (_142 <= _147)
    goto <bb 24>; [85.00%]
  else
    goto <bb 25>; [15.00%]

  <bb 25> [2.05%]:
  _148 = sessions.list;
  _149 = sessions.num;
  _150 = (long unsigned int) _149;
  _151 = _150 * 8;
  _152 = _148 + _151;
  *_152 = s_113;
  _153 = _149;
  _154 = _149 + 1;
  sessions.num = _154;

  <bb 26> [6.03%]:
  if (name_56 == 0B)
    goto <bb 27>; [0.04%]
  else
    goto <bb 28>; [99.96%]

  <bb 27> [0.00%]:
  _155 = __printf_chk (1, "no name%s\n", "");
  exit (1);

  <bb 28> [6.03%]:
  _156 = strdup (name_56);
  s_113->name = _156;
  if (cmd_27 != 0B)
    goto <bb 29>; [70.00%]
  else
    goto <bb 36>; [30.00%]

  <bb 29> [4.22%]:
  _164 = s_113->sy;
  _165 = s_113->sx;
  w_166 = window_create1 (_165, _164);
  if (w_166 == 0B)
    goto <bb 83>; [7.92%]
  else
    goto <bb 30>; [92.08%]

  <bb 30> [3.89%]:
  _169 = &s_113->windows;
  wl_170 = winlink_add (_169, w_166, idx_343);
  if (wl_170 == 0B)
    goto <bb 31>; [19.86%]
  else
    goto <bb 32>; [80.14%]

  <bb 31> [0.77%]:
  _171 = __printf_chk (1, "index in use: %d\n", idx_343);

  <bb 32> [3.89%]:
  session_group_synchronize_from (s_113);

  <bb 33> [3.89%]:
  # _168 = PHI <wl_170(32)>
  if (_168 == 0B)
    goto <bb 34>; [0.00%]
  else
    goto <bb 35>; [100.00%]

  <bb 34> [0.17%]:
  session_destroy (s_113);
  goto <bb 37>; [100.00%]

  <bb 35> [4.05%]:
  _158 = s_113->windows.rbh_root;
  _159 = _158->idx;
  session_select (s_113, _159);

  <bb 36> [5.86%]:
  _160 = s_113->name;
  _161 = __printf_chk (1, "session %s created\n", _160);

  <bb 37> [6.03%]:
  # _163 = PHI <0B(34), s_113(36)>
  _18 = _15;
  _19 = _16;
  w_63 = window_create1 (_16, _15);
  idx_64 = idx_343 + 2;
  _110 = &_163->windows;
  wl_111 = winlink_add (_110, w_63, idx_59);
  if (wl_111 == 0B)
    goto <bb 38>; [19.86%]
  else
    goto <bb 39>; [80.14%]

  <bb 38> [1.20%]:
  _112 = __printf_chk (1, "index in use: %d\n", idx_59);

  <bb 39> [6.03%]:
  session_group_synchronize_from (_163);
  free (cmd_27);
  if (_368 != 0B)
    goto <bb 40>; [53.47%]
  else
    goto <bb 47>; [46.53%]

  <bb 40> [3.22%]:
  sg_176 = session_group_find (_368);
  if (sg_176 == 0B)
    goto <bb 41>; [19.86%]
  else
    goto <bb 42>; [80.14%]

  <bb 41> [0.64%]:
  sg_177 = malloc (32);
  sg_177->entry.tqe_next = 0B;
  _178 = session_groups.tqh_last;
  sg_177->entry.tqe_prev = _178;
  _179 = _178;
  *_178 = sg_177;
  _180 = &sg_177->entry.tqe_next;
  session_groups.tqh_last = _180;
  sg_177->sessions.tqh_first = 0B;
  _181 = &sg_177->sessions.tqh_first;
  sg_177->sessions.tqh_last = _181;
  _368->gentry.tqe_next = 0B;
  _182 = sg_177->sessions.tqh_last;
  _368->gentry.tqe_prev = _182;
  _183 = sg_177->sessions.tqh_last;
  *_183 = _368;
  _184 = &_368->gentry.tqe_next;
  sg_177->sessions.tqh_last = _184;

  <bb 42> [3.22%]:
  # sg_185 = PHI <sg_176(40), sg_177(41)>
  _163->gentry.tqe_next = 0B;
  _186 = sg_185->sessions.tqh_last;
  _163->gentry.tqe_prev = _186;
  _187 = sg_185->sessions.tqh_last;
  *_187 = _163;
  _188 = &_163->gentry.tqe_next;
  sg_185->sessions.tqh_last = _188;
  sg_172 = session_group_find (_163);
  if (sg_172 == 0B)
    goto <bb 46>; [26.74%]
  else
    goto <bb 43>; [73.26%]

  <bb 43> [2.36%]:
  target_173 = sg_172->sessions.tqh_first;
  _51 = _163 != target_173;
  _314 = target_173 == 0B;
  _167 = _314 | _51;
  if (_167 != 0)
    goto <bb 45>; [14.44%]
  else
    goto <bb 44>; [85.56%]

  <bb 44> [14.00%]:
  # target_353 = PHI <target_175(44), target_173(43)>
  target_175 = target_353->gentry.tqe_next;
  _269 = _163 != target_175;
  _203 = target_175 == 0B;
  _246 = _203 | _269;
  if (_246 != 0)
    goto <bb 45>; [14.44%]
  else
    goto <bb 44>; [85.56%]

  <bb 45> [2.36%]:
  # target_354 = PHI <target_175(44), target_173(43)>
  session_group_synchronize1 (target_354, _163);

  <bb 46> [3.22%]:
  _21 = _163->windows.rbh_root;
  _22 = _21->idx;
  session_select (_163, _22);

  <bb 47> [6.03%]:
  i_70 = i_344 + 1;
  if (argc_44(D) > i_70)
    goto <bb 3>; [85.00%]
  else
    goto <bb 48>; [15.00%]

  <bb 48> [1.06%]:
  dst_wl_189 = cmd_find_pane (0, &dst_s);
  if (dst_wl_189 == 0B)
    goto <bb 77>; [1.74%]
  else
    goto <bb 49>; [98.26%]

  <bb 49> [1.05%]:
  dst_w_190 = dst_wl_189->window;
  src_wl_191 = cmd_find_pane (1, 0B);
  if (src_wl_191 == 0B)
    goto <bb 77>; [0.87%]
  else
    goto <bb 50>; [99.13%]

  <bb 50> [1.04%]:
  src_w_192 = src_wl_191->window;
  if (dst_w_190 == src_w_192)
    goto <bb 52>; [0.87%]
  else
    goto <bb 51>; [99.13%]

  <bb 51> [1.03%]:
  # i_271 = PHI <0(50)>
  _276 = sessions.num;
  if (_276 != 0)
    goto <bb 53>; [85.00%]
  else
    goto <bb 76>; [15.00%]

  <bb 52> [0.01%]:
  _193 = __printf_chk (1, "can\'t join a pane to its own window\n");
  goto <bb 77>; [100.00%]

  <bb 53> [5.82%]:
  # i_355 = PHI <i_207(75), 0(51)>
  _197 = sessions.list;
  _199 = (long unsigned int) i_355;
  _200 = _199 * 8;
  _201 = _197 + _200;
  s_202 = *_201;
  if (s_202 == 0B)
    goto <bb 75>; [30.00%]
  else
    goto <bb 54>; [70.00%]

  <bb 54> [4.08%]:
  tmp_215 = MEM[(struct winlinks *)s_202 + 40B].rbh_root;
  if (tmp_215 != 0B)
    goto <bb 55>; [85.00%]
  else
    goto <bb 84>; [15.00%]

  <bb 55> [23.11%]:
  # tmp_357 = PHI <tmp_218(55), tmp_215(54)>
  tmp_218 = tmp_357->entry.rbe_left;
  if (tmp_218 != 0B)
    goto <bb 55>; [85.00%]
  else
    goto <bb 56>; [15.00%]

  <bb 56> [3.47%]:
  # parent_358 = PHI <tmp_357(55)>
  if (parent_358 != 0B)
    goto <bb 57>; [100.00%]
  else
    goto <bb 85>; [0.00%]

  <bb 57> [3.76%]:
  _319 = parent_358->window;
  if (src_w_192 == _319)
    goto <bb 86>; [7.50%]
  else
    goto <bb 59>; [92.50%]

  <bb 58> [22.36%]:
  _212 = wl_213->window;
  if (src_w_192 == _212)
    goto <bb 86>; [7.50%]
  else
    goto <bb 59>; [92.50%]

  <bb 59> [24.17%]:
  # wl_356 = PHI <wl_213(58), parent_358(57)>
  wl_213 = winlinks_RB_NEXT (wl_356);
  if (wl_213 != 0B)
    goto <bb 58>; [92.50%]
  else
    goto <bb 85>; [7.50%]

  <bb 60> [0.31%]:
  # _214 = PHI <0(84)>
  if (_214 == 0)
    goto <bb 75>; [58.81%]
  else
    goto <bb 67>; [41.19%]

  <bb 61> [13.35%]:
  # _369 = PHI <_239(74), _29(90)>
  _224 = &s_202->lastw;
  winlink_stack_remove (_224, _369);
  _225 = &s_202->windows;
  winlink_remove (_225, _369);
  session_group_synchronize_from (s_202);
  _226 = s_202->windows.rbh_root;
  if (_226 == 0B)
    goto <bb 62>; [19.86%]
  else
    goto <bb 88>; [80.14%]

  <bb 62> [2.65%]:
  session_destroy (s_202);
  goto <bb 87>; [100.00%]

  <bb 63> [0.73%]:
  _229 = sg_228->entry.tqe_next;
  if (_229 != 0B)
    goto <bb 64>; [70.00%]
  else
    goto <bb 65>; [30.00%]

  <bb 64> [0.51%]:
  _230 = _229;
  _231 = sg_228->entry.tqe_prev;
  _229->entry.tqe_prev = _231;
  goto <bb 66>; [100.00%]

  <bb 65> [0.22%]:
  _232 = sg_228->entry.tqe_prev;
  session_groups.tqh_last = _232;

  <bb 66> [0.73%]:
  _233 = sg_228->entry.tqe_prev;
  _234 = sg_228->entry.tqe_next;
  *_233 = _234;
  free (sg_228);
  goto <bb 75>; [100.00%]

  <bb 67> [2.09%]:

  <bb 68> [14.44%]:
  tmp_240 = MEM[(struct winlinks *)s_202 + 40B].rbh_root;
  if (tmp_240 != 0B)
    goto <bb 69>; [85.00%]
  else
    goto <bb 89>; [15.00%]

  <bb 69> [81.81%]:
  # tmp_360 = PHI <tmp_243(69), tmp_240(68)>
  tmp_243 = tmp_360->entry.rbe_left;
  if (tmp_243 != 0B)
    goto <bb 69>; [85.00%]
  else
    goto <bb 70>; [15.00%]

  <bb 70> [12.27%]:
  # parent_361 = PHI <tmp_360(69)>
  if (parent_361 != 0B)
    goto <bb 71>; [100.00%]
  else
    goto <bb 91>; [0.00%]

  <bb 71> [13.32%]:
  _242 = parent_361->window;
  if (src_w_192 == _242)
    goto <bb 90>; [7.50%]
  else
    goto <bb 73>; [92.50%]

  <bb 72> [79.18%]:
  _237 = wl_238->window;
  if (src_w_192 == _237)
    goto <bb 90>; [7.50%]
  else
    goto <bb 73>; [92.50%]

  <bb 73> [85.60%]:
  # wl_359 = PHI <wl_238(72), parent_361(71)>
  wl_238 = winlinks_RB_NEXT (wl_359);
  if (wl_238 != 0B)
    goto <bb 72>; [92.50%]
  else
    goto <bb 91>; [7.50%]

  <bb 74> [1.08%]:
  # _239 = PHI <0B(89)>
  if (_239 != 0B)
    goto <bb 61>; [100.00%]
  else
    goto <bb 75>; [0.00%]

  <bb 75> [5.82%]:
  i_207 = i_355 + 1;
  _208 = sessions.num;
  if (i_207 < _208)
    goto <bb 53>; [85.00%]
  else
    goto <bb 76>; [15.00%]

  <bb 76> [1.03%]:
  _194 = dst_wl_189->idx;
  _195 = dst_s;
  session_select (_195, _194);

  <bb 77> [1.06%]:
  # _196 = PHI <-1(48), -1(49), -1(52), 0(76)>
  dst_s ={v} {CLOBBER};
  _235 = sessions.num;
  if (_235 != 0)
    goto <bb 78>; [85.00%]
  else
    goto <bb 79>; [15.00%]

  <bb 78> [6.04%]:
  _23 = sessions.list;
  _24 = *_23;
  session_destroy (_24);
  _25 = sessions.num;
  if (_25 != 0)
    goto <bb 78>; [85.00%]
  else
    goto <bb 79>; [15.00%]

  <bb 79> [1.06%]:
  return 0;

  <bb 80> [0.30%]:
  # _162 = PHI <0B(81)>
  goto <bb 10>; [100.00%]

  <bb 81> [4.03%]:
  # target_205 = PHI <0B(3)>
  _270 = sessions.num;
  if (_270 != 0)
    goto <bb 6>; [92.50%]
  else
    goto <bb 80>; [7.50%]

  <bb 82> [0.45%]:
  # i_198 = PHI <0(11)>
  _236 = _366;
  goto <bb 17>; [100.00%]

  <bb 83> [0.33%]:
  # _245 = PHI <0B(29)>
  goto <bb 34>; [100.00%]

  <bb 84> [0.61%]:
  # parent_17 = PHI <0B(54)>
  goto <bb 60>; [100.00%]

  <bb 85> [1.81%]:
  # _217 = PHI <0(56), 0(59)>
  goto <bb 75>; [100.00%]

  <bb 86> [1.96%]:
  # _211 = PHI <1(57), 1(58)>
  goto <bb 67>; [100.00%]

  <bb 87> [2.65%]:
  # _220 = PHI <1(62)>
  sg_228 = session_group_find (s_202);
  if (sg_228 == 0B)
    goto <bb 75>; [26.74%]
  else
    goto <bb 63>; [73.26%]

  <bb 88> [10.70%]:
  # _20 = PHI <0(61)>
  goto <bb 68>; [100.00%]

  <bb 89> [2.17%]:
  # parent_74 = PHI <0B(68)>
  goto <bb 74>; [100.00%]

  <bb 90> [6.94%]:
  # _29 = PHI <parent_361(71), wl_238(72)>
  goto <bb 61>; [100.00%]

  <bb 91> [6.42%]:
  # _28 = PHI <0B(70), 0B(73)>
  goto <bb 75>; [100.00%]

}


