
;; Function strbuf_release (strbuf_release, funcdef_no=0, decl_uid=4045, cgraph_uid=8, symbol_order=52)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
strbuf_release (struct strbuf * sb)
{
  long unsigned int _1;
  char * _2;

  <bb 2> [100.00%]:
  _1 = sb_5(D)->alloc;
  if (_1 != 0)
    goto <bb 3>; [36.64%]
  else
    goto <bb 4>; [63.36%]

  <bb 3> [36.64%]:
  _2 = sb_5(D)->buf;
  free (_2);
  strbuf_init (sb_5(D), 0);

  <bb 4> [100.00%]:
  return;

}



;; Function main (main, funcdef_no=1, decl_uid=3985, cgraph_uid=0, symbol_order=57) (executed once)

;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 78 35 36 37 38 77 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
;;
;; Loop 1
;;  header 47, latch 46
;;  depth 1, outer 0
;;  nodes: 47 46
;;
;; Loop 2
;;  header 5, latch 77
;;  depth 1, outer 0
;;  nodes: 5 77 38 37 33 35 36 31 34 32 30 29 28 16 27 22 25 23 24 20 21 18 19 17 14 15 12 11 78 10 6
;;
;; Loop 3
;;  header 11, latch 78
;;  depth 2, outer 2
;;  nodes: 11 78 34 31 32 30 29 28 16 27 22 25 23 24 20 21 18 19 17 14 15 12
;; 2 succs { 3 4 }
;; 3 succs { 76 4 }
;; 4 succs { 5 }
;; 5 succs { 53 6 }
;; 6 succs { 7 10 }
;; 7 succs { 53 8 }
;; 8 succs { 9 53 }
;; 9 succs { 53 }
;; 10 succs { 11 }
;; 11 succs { 13 12 }
;; 12 succs { 13 14 }
;; 13 succs { }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 17 28 }
;; 17 succs { 18 19 }
;; 18 succs { 20 }
;; 19 succs { 20 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 27 }
;; 23 succs { 24 25 }
;; 24 succs { 25 }
;; 25 succs { 26 27 }
;; 26 succs { }
;; 27 succs { 28 }
;; 28 succs { 29 30 }
;; 29 succs { 30 }
;; 30 succs { 31 32 }
;; 31 succs { 35 34 }
;; 32 succs { 33 34 }
;; 33 succs { 37 }
;; 34 succs { 78 35 }
;; 78 succs { 11 }
;; 35 succs { 36 37 }
;; 36 succs { 37 }
;; 37 succs { 38 39 }
;; 38 succs { 77 53 }
;; 77 succs { 5 }
;; 39 succs { 40 42 }
;; 40 succs { 41 42 }
;; 41 succs { 53 }
;; 42 succs { 43 44 }
;; 43 succs { 53 }
;; 44 succs { 45 49 }
;; 45 succs { 47 }
;; 46 succs { 47 }
;; 47 succs { 46 48 }
;; 48 succs { 53 }
;; 49 succs { 52 50 }
;; 50 succs { 51 53 }
;; 51 succs { 52 53 }
;; 52 succs { 53 }
;; 53 succs { 54 57 }
;; 54 succs { 55 57 }
;; 55 succs { 56 57 }
;; 56 succs { 57 }
;; 57 succs { 58 59 }
;; 58 succs { 76 }
;; 59 succs { 60 66 }
;; 60 succs { 61 65 }
;; 61 succs { 62 64 }
;; 62 succs { 63 67 }
;; 63 succs { 76 }
;; 64 succs { 76 67 }
;; 65 succs { 76 67 }
;; 66 succs { 76 67 }
;; 67 succs { 68 73 }
;; 68 succs { 69 70 }
;; 69 succs { 73 70 }
;; 70 succs { 71 72 }
;; 71 succs { 76 }
;; 72 succs { 73 }
;; 73 succs { 74 76 }
;; 74 succs { 76 75 }
;; 75 succs { 76 }
;; 76 succs { 1 }
Removing basic block 53
Removing basic block 37
Removing basic block 16
Removing basic block 6
Removing basic block 77
Removing basic block 78
Merging blocks 83 and 38
Merging blocks 84 and 39
Merging blocks 86 and 54

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_4 -> { .MEM_265 .MEM_271 }
.MEM_11 -> { .MEM_49 .MEM_188 }
ret_12 -> { ret_120 }
.MEM_14 -> { .MEM_122 .MEM_179 }
_19 -> { _75 _139 }
_24 -> { _141 _159 }
.MEM_27 -> { .MEM_267 }
_32 -> { _69 _142 }
_37 -> { _140 _299 }
.MEM_44 -> { .MEM_268 }
_45 -> { _129 }
.MEM_48 -> { .MEM_269 }
.MEM_49 -> { .MEM_188 }
_58 -> { _45 _129 }
.MEM_64 -> { .MEM_190 }
.MEM_65 -> { .MEM_266 }
_69 -> { _142 }
_75 -> { _139 }
save_errno_82 -> { save_errno_118 }
.MEM_122 -> { .MEM_179 }
save_errno_130 -> { save_errno_82 save_errno_118 }
_159 -> { _141 }
.MEM_186 -> { .MEM_184 }
_205 -> { _117 _243 }
_243 -> { _117 }
.MEM_271 -> { .MEM_265 }
.MEM_274 -> { .MEM_64 .MEM_190 }
.MEM_277 -> { .MEM_184 }
ret_296 -> { ret_12 ret_120 }
.MEM_297 -> { .MEM_270 }
_299 -> { _140 }
_300 -> { _119 }
.MEM_302 -> { .MEM_65 .MEM_266 }
_303 -> { _119 _300 }
.MEM_304 -> { .MEM_27 .MEM_267 }
.MEM_305 -> { .MEM_44 .MEM_268 }
.MEM_306 -> { .MEM_48 .MEM_269 }
.MEM_307 -> { .MEM_270 .MEM_297 }
ret_308 -> { ret_68 }
.MEM_309 -> { .MEM_191 }
lock_310 -> { lock_298 }
.MEM_311 -> { .MEM_275 }
.MEM_312 -> { .MEM_276 }
ret_313 -> { ret_68 ret_308 }
.MEM_314 -> { .MEM_191 .MEM_309 }
lock_315 -> { lock_298 lock_310 }
.MEM_316 -> { .MEM_275 .MEM_311 }
.MEM_317 -> { .MEM_276 .MEM_312 }
remaining_retries_318 -> { remaining_retries_74 }
.MEM_319 -> { .MEM_177 }
remaining_retries_320 -> { remaining_retries_76 }
ret_321 -> { ret_68 }
remaining_retries_322 -> { remaining_retries_76 }
_323 -> { _142 }
.MEM_324 -> { .MEM_177 }
.MEM_325 -> { .MEM_179 }
.MEM_326 -> { .MEM_184 }
.MEM_327 -> { .MEM_276 }
.MEM_328 -> { .MEM_276 }
lock_329 -> { lock_298 }

SSA names to release after updating the SSA web

_117 save_errno_118 _119 ret_120 _129 _139 _140 _141 _142 .MEM_179 .MEM_188 .MEM_190 .MEM_265 .MEM_266 .MEM_267 .MEM_268 .MEM_269 .MEM_270 
Incremental SSA update started at block: 2
Number of blocks in CFG: 82
Number of blocks to update: 33 ( 40%)


main ()
{
  unsigned char _swap_buffer[24];
  void * ret;
  void * D.4293;
  int new_buf;
  size_t oldalloc;
  int len;
  int D.4273;
  size_t hint;
  struct files_ref_store * refs;
  struct strbuf sb_contents;
  struct strbuf sb_path;
  const char * path;
  const char * buf;
  int fd;
  int ret;
  int save_errno;
  int remaining_retries;
  struct stat st;
  int save_errno;
  int D.4258;
  struct ref_lock * lock;
  struct strbuf ref_file;
  int ret;
  int D.4207;
  struct strbuf referent;
  int mustexist;
  int ret;
  struct ref_lock * lock;
  char * reason;
  char * write_err;
  int D.4174;
  struct strbuf err;
  struct string_list affected_refnames;
  char * head_ref;
  struct ref_transaction transaction;
  struct ref_update update;
  struct files_ref_store refs;
  int _15;
  long int _16;
  int _18;
  long unsigned int _19;
  unsigned int _20;
  unsigned int _21;
  unsigned int _22;
  unsigned int _23;
  long unsigned int _24;
  unsigned char[20] * _25;
  char * _26;
  int _28;
  unsigned int _29;
  unsigned int _30;
  int _31;
  long unsigned int _32;
  struct object_id * _33;
  int _34;
  char * _35;
  long unsigned int _37;
  struct object_id * _38;
  int _39;
  unsigned int _40;
  unsigned int _41;
  unsigned int _42;
  unsigned int _43;
  int _45;
  struct object_id * _46;
  int _47;
  int _50;
  int _51;
  long int _52;
  unsigned int _54;
  unsigned int _55;
  unsigned int _56;
  unsigned int _57;
  int _58;
  int _59;
  int _60;
  char * _62;
  unsigned char[20] * _63;
  int * _66;
  int _67;
  long unsigned int _69;
  int _70;
  long int _71;
  long unsigned int _75;
  int _77;
  int * _78;
  int _79;
  int _80;
  int * _81;
  int * _83;
  int _84;
  _Bool _85;
  _Bool _86;
  _Bool _87;
  char * _88;
  int _89;
  char * _90;
  int _91;
  unsigned int _92;
  unsigned int _93;
  int _95;
  int * _96;
  int * _98;
  int _100;
  char _104;
  int _105;
  int _106;
  unsigned int _107;
  unsigned int _108;
  int _109;
  char _110;
  char _111;
  int _112;
  int _113;
  unsigned int _114;
  unsigned int _115;
  int * _116;
  char * _123;
  int * _125;
  int _126;
  long unsigned int _127;
  long unsigned int _131;
  _Bool _132;
  int _134;
  long unsigned int _135;
  long unsigned int _136;
  int _137;
  int _138;
  long unsigned int _143;
  int _144;
  long unsigned int _145;
  long unsigned int _146;
  long unsigned int _147;
  long unsigned int _148;
  long unsigned int _149;
  long unsigned int _150;
  long unsigned int _151;
  long unsigned int _152;
  int _153;
  long unsigned int _154;
  long unsigned int _155;
  int _156;
  long unsigned int _157;
  char * _158;
  long unsigned int _159;
  char * _160;
  _Bool _162;
  _Bool _163;
  _Bool _164;
  _Bool _168;
  _Bool _169;
  _Bool _170;
  int _173;
  int * _205;
  int * _243;
  long unsigned int _299;
  int * _300;
  int * _303;
  long unsigned int _323;

  <bb 2> [6.76%]:
  referent.alloc = 0;
  referent.len = 0;
  referent.buf = &strbuf_slopbuf;
  if (head_ref_2(D) != 0B)
    goto <bb 3>; [70.00%]
  else
    goto <bb 4>; [30.00%]

  <bb 3> [4.73%]:
  ret_10 = split_head_update (&update, &transaction, head_ref_2(D), &affected_refnames, &err);
  if (ret_10 != 0)
    goto <bb 70>; [46.00%]
  else
    goto <bb 4>; [54.00%]

  <bb 4> [4.58%]:
  ref_file.alloc = 0;
  ref_file.len = 0;
  ref_file.buf = &strbuf_slopbuf;
  MEM[(unsigned int *)&update + 56B] = 0;
  lock_61 = calloc (1, 40);
  _62 = strdup (&update.refname);
  lock_61->ref_name = _62;
  files_ref_path (&refs, &ref_file, &update.refname);
  _63 = &lock_61->old_oid.hash;
  _70 = files_downcast (&refs.base, 1, "read_raw_ref");
  _71 = (long int) _70;
  refs_72 = (struct files_ref_store *) _71;
  sb_contents.alloc = 0;
  sb_contents.len = 0;
  sb_contents.buf = &strbuf_slopbuf;
  sb_path.alloc = 0;
  sb_path.len = 0;
  sb_path.buf = &strbuf_slopbuf;
  MEM[(unsigned int *)&update + 56B] = 0;
  strbuf_reset (&sb_path);
  files_ref_path (refs_72, &sb_path, &update.refname);
  path_73 = sb_path.buf;
  goto <bb 81>; [100.00%]

  # remaining_retries_74 = PHI <remaining_retries_322(75)>
stat_ref [9.03%]:
  remaining_retries_76 = remaining_retries_74 + -1;
  if (remaining_retries_74 <= 0)
    goto <bb 78>; [37.68%]
  else
    goto <bb 6>; [62.32%]

  <bb 6> [10.21%]:
  # remaining_retries_322 = PHI <remaining_retries_76(5), remaining_retries_320(81)>
  _77 = __lxstat (1, path_73, &st);
  if (_77 < 0)
    goto <bb 7>; [3.75%]
  else
    goto <bb 10>; [96.25%]

  <bb 7> [0.38%]:
  _78 = __errno_location ();
  _79 = *_78;
  if (_79 != 2)
    goto <bb 78>; [7.44%]
  else
    goto <bb 8>; [92.56%]

  <bb 8> [0.35%]:
  _80 = resolve_packed_ref (refs_72, &update.refname, _63, &update.type);
  if (_80 != 0)
    goto <bb 9>; [2.00%]
  else
    goto <bb 77>; [98.00%]

  <bb 9> [0.01%]:
  _81 = _78;
  *_78 = 2;
  goto <bb 78>; [100.00%]

  <bb 10> [9.82%]:
  strbuf_reset (&sb_contents);
  oldalloc_121 = sb_contents.alloc;

  <bb 11> [95.00%]:
  # hint_175 = PHI <hint_128(33), 32(10)>
  _131 = sb_contents.alloc;
  _132 = _131 == 0;
  new_buf_133 = (int) _132;
  _134 = unsigned_add_overflows (hint_175, 1);
  if (_134 != 0)
    goto <bb 13>; [0.04%]
  else
    goto <bb 12>; [99.96%]

  <bb 12> [94.96%]:
  _135 = hint_175 + 1;
  _136 = sb_contents.len;
  _137 = unsigned_add_overflows (_136, _135);
  if (_137 != 0)
    goto <bb 13>; [0.04%]
  else
    goto <bb 14>; [99.96%]

  <bb 13> [0.08%]:
  _138 = __printf_chk (1, "you want to use way too much memory%s", "");
  exit (1);

  <bb 14> [94.92%]:
  if (_132 != 0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 74>; [50.00%]

  <bb 15> [47.46%]:
  sb_contents.buf = 0B;
  goto <bb 72>; [100.00%]

  <bb 16> [31.32%]:
  # _323 = PHI <_32(74), _69(72)>
  _143 = _323;
  _144 = alloc_nr (_323);
  _145 = (long unsigned int) _144;
  _146 = sb_contents.len;
  _147 = hint_175 + _146;
  _148 = _147 + 1;
  if (_145 < _148)
    goto <bb 17>; [67.00%]
  else
    goto <bb 18>; [33.00%]

  <bb 17> [20.99%]:
  _149 = _146;
  _150 = _147;
  _151 = _148;
  sb_contents.alloc = _148;
  goto <bb 19>; [100.00%]

  <bb 18> [10.34%]:
  _152 = sb_contents.alloc;
  _153 = alloc_nr (_152);
  _154 = (long unsigned int) _153;
  sb_contents.alloc = _154;

  <bb 19> [31.32%]:
  _155 = sb_contents.alloc;
  _156 = st_mult (1, _155);
  _157 = (long unsigned int) _156;
  _158 = sb_contents.buf;
  ret_161 = realloc (_158, _157);
  _162 = ret_161 == 0B;
  _163 = _157 == 0;
  _164 = _162 & _163;
  if (_164 != 0)
    goto <bb 20>; [33.00%]
  else
    goto <bb 21>; [67.00%]

  <bb 20> [10.34%]:
  ret_165 = realloc (_158, 1);

  <bb 21> [31.32%]:
  # ret_166 = PHI <ret_161(19), ret_165(20)>
  if (ret_166 == 0B)
    goto <bb 22>; [19.86%]
  else
    goto <bb 26>; [80.14%]

  <bb 22> [6.22%]:
  ret_167 = realloc (_158, _157);
  _168 = ret_167 == 0B;
  _169 = _163;
  _170 = _163 & _168;
  if (_170 != 0)
    goto <bb 23>; [33.00%]
  else
    goto <bb 24>; [67.00%]

  <bb 23> [2.05%]:
  ret_171 = realloc (_158, 1);

  <bb 24> [6.22%]:
  # ret_172 = PHI <ret_167(22), ret_171(23)>
  if (ret_172 == 0B)
    goto <bb 25>; [0.04%]
  else
    goto <bb 26>; [99.96%]

  <bb 25> [0.00%]:
  _173 = __printf_chk (1, "Out of memory, realloc failed%s", "");
  exit (1);

  <bb 26> [31.32%]:
  # ret_174 = PHI <ret_166(21), ret_172(24)>
  sb_contents.buf = ret_174;

  <bb 27> [31.33%]:
  if (_132 != 0)
    goto <bb 28>; [100.00%]
  else
    goto <bb 29>; [0.00%]

  <bb 28> [51.26%]:
  _160 = sb_contents.buf;
  *_160 = 0;

  <bb 29> [94.92%]:
  _123 = sb_contents.buf;
  len_124 = readlink (path_73, _123, hint_175);
  if (len_124 < 0)
    goto <bb 30>; [36.00%]
  else
    goto <bb 31>; [64.00%]

  <bb 30> [34.17%]:
  _125 = __errno_location ();
  _126 = *_125;
  if (_126 != 34)
    goto <bb 34>; [5.00%]
  else
    goto <bb 33>; [95.00%]

  <bb 31> [60.75%]:
  _127 = (long unsigned int) len_124;
  if (hint_175 > _127)
    goto <bb 32>; [5.00%]
  else
    goto <bb 33>; [95.00%]

  <bb 32> [3.04%]:
  strbuf_setlen (&sb_contents, len_124);
  goto <bb 76>; [100.00%]

  <bb 33> [90.20%]:
  hint_128 = hint_175 * 2;
  if (hint_128 <= 8191)
    goto <bb 11>; [95.00%]
  else
    goto <bb 34>; [5.00%]

  <bb 34> [6.71%]:
  if (oldalloc_121 == 0)
    goto <bb 35>; [33.00%]
  else
    goto <bb 75>; [67.00%]

  <bb 35> [2.21%]:
  strbuf_release (&sb_contents);
  goto <bb 75>; [100.00%]

  <bb 36> [0.18%]:
  _90 = sb_contents.buf;
  _91 = check_refname_format (_90, 0);
  if (_91 == 0)
    goto <bb 37>; [29.56%]
  else
    goto <bb 38>; [70.44%]

  <bb 37> [0.05%]:
  MEM[(char * {ref-all})&_swap_buffer] = MEM[(char * {ref-all})&sb_contents];
  MEM[(char * {ref-all})&sb_contents] = MEM[(char * {ref-all})&referent];
  MEM[(char * {ref-all})&referent] = MEM[(char * {ref-all})&_swap_buffer];
  _swap_buffer ={v} {CLOBBER};
  _92 = MEM[(unsigned int *)&update + 56B];
  _93 = _92 | 1;
  MEM[(unsigned int *)&update + 56B] = _93;
  goto <bb 77>; [100.00%]

  <bb 38> [0.31%]:
  strbuf_reset (&sb_contents);
  _95 = strbuf_read (&sb_contents, fd_94(D), 256);
  if (_95 < 0)
    goto <bb 39>; [1.13%]
  else
    goto <bb 40>; [98.87%]

  <bb 39> [0.00%]:
  _96 = __errno_location ();
  save_errno_97 = *_96;
  close (fd_94(D));
  _98 = _96;
  *_96 = save_errno_97;
  goto <bb 78>; [100.00%]

  <bb 40> [0.31%]:
  strbuf_rtrim (&sb_contents);
  buf_99 = sb_contents.buf;
  _100 = starts_with (buf_99, "ref:");
  if (_100 != 0)
    goto <bb 41>; [67.00%]
  else
    goto <bb 45>; [33.00%]

  <bb 41> [0.21%]:
  buf_101 = buf_99 + 4;
  goto <bb 43>; [100.00%]

  <bb 42> [1.17%]:
  buf_103 = buf_102 + 1;

  <bb 43> [1.38%]:
  # buf_102 = PHI <buf_101(41), buf_103(42)>
  _104 = *buf_102;
  _105 = (int) _104;
  _106 = isspace (_105);
  if (_106 != 0)
    goto <bb 42>; [85.00%]
  else
    goto <bb 44>; [15.00%]

  <bb 44> [0.21%]:
  strbuf_reset (&referent);
  strbuf_addstr (&referent, buf_102);
  _107 = MEM[(unsigned int *)&update + 56B];
  _108 = _107 | 1;
  MEM[(unsigned int *)&update + 56B] = _108;
  goto <bb 77>; [100.00%]

  <bb 45> [0.10%]:
  _109 = get_sha1_hex (buf_99, _63);
  if (_109 != 0)
    goto <bb 48>; [2.00%]
  else
    goto <bb 46>; [98.00%]

  <bb 46> [0.10%]:
  _110 = MEM[(const char *)buf_99 + 40B];
  if (_110 != 0)
    goto <bb 47>; [54.00%]
  else
    goto <bb 77>; [46.00%]

  <bb 47> [0.05%]:
  _111 = _110;
  _112 = (int) _110;
  _113 = isspace (_112);
  if (_113 == 0)
    goto <bb 48>; [2.00%]
  else
    goto <bb 77>; [98.00%]

  <bb 48> [0.00%]:
  _114 = MEM[(unsigned int *)&update + 56B];
  _115 = _114 | 4;
  MEM[(unsigned int *)&update + 56B] = _115;
  _116 = __errno_location ();
  *_116 = 22;
  goto <bb 78>; [100.00%]

  <bb 49> [0.92%]:
  if (mustexist_13(D) != 0)
    goto <bb 50>; [1.00%]
  else
    goto <bb 80>; [99.00%]

  <bb 50> [0.01%]:
  strbuf_addf (&err, "unable to resolve reference \'%s\'", &update.refname);
  unlock_ref (lock_61);
  goto <bb 79>; [100.00%]

  # ret_68 = PHI <0(77)>
  # lock_298 = PHI <lock_61(77)>
out [2.06%]:
  strbuf_release (&ref_file);
  ref_file ={v} {CLOBBER};
  if (ret_68 != 0)
    goto <bb 52>; [64.25%]
  else
    goto <bb 53>; [35.75%]

  <bb 52> [1.33%]:
  # ret_321 = PHI <ret_68(51), ret_308(79)>
  _15 = strbuf_detach (&err, 0B);
  _16 = (long int) _15;
  reason_17 = (char *) _16;
  _18 = original_update_refname (&update);
  strbuf_addf (&err, "cannot lock ref \'%s\': %s", _18, reason_17);
  free (reason_17);
  goto <bb 70>; [100.00%]

  <bb 53> [3.17%]:
  # lock_329 = PHI <lock_298(51), lock_315(80)>
  update.backend_data = lock_329;
  _20 = update.type;
  _21 = _20 & 1;
  if (_21 != 0)
    goto <bb 54>; [67.00%]
  else
    goto <bb 60>; [33.00%]

  <bb 54> [2.12%]:
  _22 = update.flags;
  _23 = _22 & 1;
  if (_23 != 0)
    goto <bb 55>; [50.00%]
  else
    goto <bb 59>; [50.00%]

  <bb 55> [1.06%]:
  _25 = &lock_329->old_oid.hash;
  _26 = referent.buf;
  _28 = refs_read_ref_full (&refs.base, _26, 0, _25, 0B);
  if (_28 != 0)
    goto <bb 56>; [67.00%]
  else
    goto <bb 58>; [33.00%]

  <bb 56> [0.71%]:
  _29 = update.flags;
  _30 = _29 & 16;
  if (_30 != 0)
    goto <bb 57>; [1.00%]
  else
    goto <bb 61>; [99.00%]

  <bb 57> [0.01%]:
  _31 = original_update_refname (&update);
  strbuf_addf (&err, "cannot lock ref \'%s\': error reading reference", _31);
  goto <bb 70>; [100.00%]

  <bb 58> [0.35%]:
  _33 = &lock_329->old_oid;
  _34 = check_old_oid (&update, _33, &err);
  if (_34 != 0)
    goto <bb 70>; [2.00%]
  else
    goto <bb 61>; [98.00%]

  <bb 59> [1.06%]:
  _35 = referent.buf;
  ret_36 = split_symref_update (&refs, &update, _35, &transaction, &affected_refnames, &err);
  if (ret_36 != 0)
    goto <bb 70>; [46.00%]
  else
    goto <bb 61>; [54.00%]

  <bb 60> [1.05%]:
  _38 = &lock_329->old_oid;
  _39 = check_old_oid (&update, _38, &err);
  if (_39 != 0)
    goto <bb 70>; [2.00%]
  else
    goto <bb 61>; [98.00%]

  <bb 61> [2.65%]:
  _40 = BIT_FIELD_REF <update, 32, 320>;
  _41 = _40 & 138;
  if (_41 == 8)
    goto <bb 62>; [34.00%]
  else
    goto <bb 67>; [66.00%]

  <bb 62> [0.90%]:
  _42 = update.type;
  _43 = _42 & 1;
  if (_43 == 0)
    goto <bb 63>; [50.00%]
  else
    goto <bb 64>; [50.00%]

  <bb 63> [0.45%]:
  _46 = &lock_329->old_oid;
  _47 = oidcmp (_46, &update.new_oid);
  if (_47 == 0)
    goto <bb 67>; [50.00%]
  else
    goto <bb 64>; [50.00%]

  <bb 64> [0.68%]:
  _50 = write_ref_to_lockfile (lock_329, &update.new_oid, &err);
  if (_50 != 0)
    goto <bb 65>; [1.00%]
  else
    goto <bb 66>; [99.00%]

  <bb 65> [0.01%]:
  _51 = strbuf_detach (&err, 0B);
  _52 = (long int) _51;
  write_err_53 = (char *) _52;
  update.backend_data = 0B;
  goto <bb 70>; [100.00%]

  <bb 66> [0.67%]:
  _54 = update.flags;
  _55 = _54 | 32;
  update.flags = _55;

  <bb 67> [2.64%]:
  _56 = update.flags;
  _57 = _56 & 32;
  if (_57 == 0)
    goto <bb 68>; [36.64%]
  else
    goto <bb 70>; [63.36%]

  <bb 68> [0.97%]:
  _59 = close_ref (lock_329);
  if (_59 != 0)
    goto <bb 70>; [2.00%]
  else
    goto <bb 69>; [98.00%]

  <bb 69> [0.95%]:

  <bb 70> [6.68%]:
  # _60 = PHI <ret_10(3), ret_321(52), -1(57), -2(58), ret_36(59), -2(60), -2(65), 0(67), -2(68), 0(69)>
  referent ={v} {CLOBBER};
  refs ={v} {CLOBBER};
  update ={v} {CLOBBER};
  transaction ={v} {CLOBBER};
  affected_refnames ={v} {CLOBBER};
  err ={v} {CLOBBER};
  return 0;

  <bb 71> [19.93%]:
  goto <bb 28>; [100.00%]

  <bb 72> [47.46%]:
  _75 = sb_contents.len;
  _299 = hint_175 + _75;
  _159 = _299 + 1;
  _69 = sb_contents.alloc;
  if (_159 > _69)
    goto <bb 16>; [58.00%]
  else
    goto <bb 71>; [42.00%]

  <bb 73> [43.66%]:
  goto <bb 29>; [100.00%]

  <bb 74> [47.46%]:
  _19 = sb_contents.len;
  _37 = hint_175 + _19;
  _24 = _37 + 1;
  _32 = sb_contents.alloc;
  if (_24 > _32)
    goto <bb 16>; [8.00%]
  else
    goto <bb 73>; [92.00%]

  <bb 75> [9.38%]:
  # _45 = PHI <-1(35), -1(34)>
  _83 = __errno_location ();
  _84 = *_83;
  _85 = _84 == 2;
  _86 = _84 == 22;
  _87 = _85 | _86;
  if (_87 != 0)
    goto <bb 5> (stat_ref); [96.25%]
  else
    goto <bb 78>; [3.75%]

  <bb 76> [3.04%]:
  # _58 = PHI <0(32)>
  _88 = sb_contents.buf;
  _89 = starts_with (_88, "refs/");
  if (_89 != 0)
    goto <bb 36>; [50.00%]
  else
    goto <bb 38>; [50.00%]

  <bb 77> [0.70%]:
  # ret_12 = PHI <0(47), 0(46), 0(44), 0(37), 0(8)>
  _243 = __errno_location ();
  save_errno_82 = *_243;
  strbuf_release (&sb_path);
  strbuf_release (&sb_contents);
  _300 = _243;
  *_243 = save_errno_82;
  sb_contents ={v} {CLOBBER};
  sb_path ={v} {CLOBBER};
  st ={v} {CLOBBER};
  goto <bb 51> (out); [100.00%]

  <bb 78> [3.79%]:
  # ret_296 = PHI <-1(48), -1(39), -1(75), -1(9), -1(7), -1(5)>
  _205 = __errno_location ();
  save_errno_130 = *_205;
  strbuf_release (&sb_path);
  strbuf_release (&sb_contents);
  _303 = _205;
  *_205 = save_errno_130;
  sb_contents ={v} {CLOBBER};
  sb_path ={v} {CLOBBER};
  st ={v} {CLOBBER};
  _66 = _205;
  _67 = save_errno_130;
  if (save_errno_130 == 2)
    goto <bb 49>; [37.68%]
  else
    goto <bb 80>; [62.32%]

  <bb 79> [0.01%]:
  # ret_308 = PHI <-2(50)>
  # lock_310 = PHI <0B(50)>
  strbuf_release (&ref_file);
  ref_file ={v} {CLOBBER};
  goto <bb 52>; [100.00%]

  <bb 80> [2.43%]:
  # ret_313 = PHI <0(49), 0(78)>
  # lock_315 = PHI <lock_61(49), lock_61(78)>
  strbuf_release (&ref_file);
  ref_file ={v} {CLOBBER};
  goto <bb 53>; [100.00%]

  <bb 81> [4.58%]:
  # remaining_retries_318 = PHI <3(4)>
  remaining_retries_320 = remaining_retries_318 + -1;
  goto <bb 6>; [100.00%]

}


