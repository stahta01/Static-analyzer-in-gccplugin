
;; Function tilde_expand_filename (tilde_expand_filename, funcdef_no=0, decl_uid=4040, cgraph_uid=3, symbol_order=41)

__attribute__((noinline))
tilde_expand_filename (const char * filename, uid_t uid)
{
  const size_t srclen;
  const size_t dstlen;
  size_t D.4090;
  u_int slash;
  char ret[64];
  char user[128];
  const char * path;
  char _1;
  _Bool _2;
  _Bool _3;
  _Bool _4;
  long int _5;
  long int _6;
  long int _7;
  long unsigned int _8;
  char * _11;
  char * _25;
  char * _28;
  int _31;
  int _32;
  long int _34;
  int _50;
  long unsigned int _52;
  long unsigned int _53;
  long unsigned int _54;
  char * _55;
  char * _57;
  long unsigned int _58;
  sizetype _59;
  char * _60;
  long unsigned int _61;
  long unsigned int _62;

  <bb 2> [100.00%]:
  _1 = *filename_15(D);
  if (_1 != 126)
    goto <bb 3>; [44.89%]
  else
    goto <bb 4>; [55.11%]

  <bb 3> [44.89%]:
  _28 = strdup (filename_15(D));
  goto <bb 19>; [100.00%]

  <bb 4> [55.11%]:
  filename_16 = filename_15(D) + 1;
  path_17 = strchr (filename_16, 47);
  _2 = path_17 != 0B;
  _3 = filename_16 < path_17;
  _4 = _2 & _3;
  if (_4 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 20>; [50.00%]

  <bb 20> [27.56%]:
  goto <bb 8>; [100.00%]

  <bb 5> [27.55%]:
  _5 = (long int) path_17;
  _6 = (long int) filename_16;
  _7 = _5 - _6;
  slash_18 = (u_int) _7;
  if (slash_18 > 127)
    goto <bb 6>; [0.04%]
  else
    goto <bb 7>; [99.96%]

  <bb 6> [0.01%]:
  _31 = __printf_chk (1, "tilde_expand_filename: ~username too long%s\n", "");
  exit (1);

  <bb 7> [27.54%]:
  _34 = _7 & 4294967295;
  _8 = (long unsigned int) _34;
  memcpy (&user, filename_16, _8);
  user[slash_18] = 0;

  <bb 8> [55.10%]:
  if (path_17 != 0B)
    goto <bb 9>; [70.00%]
  else
    goto <bb 21>; [30.00%]

  <bb 21> [16.53%]:
  goto <bb 10>; [100.00%]

  <bb 9> [38.57%]:
  filename_22 = path_17 + 1;

  <bb 10> [55.10%]:
  # filename_10 = PHI <filename_16(21), filename_22(9)>
  srclen_49 = strlen (filename_10);
  _50 = strnlen (&ret, 64);
  dstlen_51 = (const size_t) _50;
  if (dstlen_51 == 64)
    goto <bb 11>; [30.50%]
  else
    goto <bb 12>; [69.50%]

  <bb 11> [16.81%]:
  _52 = srclen_49 + 64;
  goto <bb 16>; [100.00%]

  <bb 12> [38.29%]:
  _53 = 64 - dstlen_51;
  if (srclen_49 < _53)
    goto <bb 13>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 13> [19.15%]:
  _54 = srclen_49 + 1;
  _55 = &ret + dstlen_51;
  memcpy (_55, filename_10, _54);
  goto <bb 15>; [100.00%]

  <bb 14> [19.15%]:
  _57 = &ret + dstlen_51;
  memcpy (_57, filename_10, 63);
  _58 = dstlen_51 + 64;
  _59 = dstlen_51 + 63;
  _60 = &ret + _59;
  *_60 = 0;

  <bb 15> [38.29%]:
  _61 = srclen_49 + dstlen_51;

  <bb 16> [55.10%]:
  # _62 = PHI <_52(11), _61(15)>
  if (_62 > 63)
    goto <bb 17>; [0.04%]
  else
    goto <bb 18>; [99.96%]

  <bb 17> [0.02%]:
  _32 = __printf_chk (1, "tilde_expand_filename: Path too long%s\n", "");
  exit (1);

  <bb 18> [55.08%]:
  _25 = strdup (&ret);

  <bb 19> [99.97%]:
  # _11 = PHI <_28(3), _25(18)>
  user ={v} {CLOBBER};
  ret ={v} {CLOBBER};
  return _11;

}


