digraph "test.o-git_leak_1.c.015t.cfg" {
overlap=false;
subgraph "cluster_xrealloc" {
	style="dashed";
	color="black";
	label="xrealloc ()";
	fn_26_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_26_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_26_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|ret\ =\ realloc\ (ptr,\ size);\l\
|_1\ =\ ret\ ==\ 0B;\l\
|_2\ =\ size\ ==\ 0;\l\
|_3\ =\ _1\ &\ _2;\l\
|if\ (_3\ !=\ 0)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_26_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|ret\ =\ realloc\ (ptr,\ 1);\l\
}"];

	fn_26_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|if\ (ret\ ==\ 0B)\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
}"];

	fn_26_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|ret\ =\ realloc\ (ptr,\ size);\l\
|_4\ =\ ret\ ==\ 0B;\l\
|_5\ =\ size\ ==\ 0;\l\
|_6\ =\ _4\ &\ _5;\l\
|if\ (_6\ !=\ 0)\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_26_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|ret\ =\ realloc\ (ptr,\ 1);\l\
}"];

	fn_26_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|if\ (ret\ ==\ 0B)\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
}"];

	fn_26_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|printf\ (\"Out\ of\ memory,\ realloc\ failed%s\",\ \"\");\l\
|exit\ (1);\l\
}"];

	fn_26_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|D.3379\ =\ ret;\l\
|return\ D.3379;\l\
}"];

	fn_26_basic_block_0:s -> fn_26_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_2:s -> fn_26_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_2:s -> fn_26_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_3:s -> fn_26_basic_block_4:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_4:s -> fn_26_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_4:s -> fn_26_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_5:s -> fn_26_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_5:s -> fn_26_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_6:s -> fn_26_basic_block_7:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_7:s -> fn_26_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_7:s -> fn_26_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_9:s -> fn_26_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_0:s -> fn_26_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_string_list_init" {
	style="dashed";
	color="black";
	label="string_list_init ()";
	fn_27_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_27_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_27_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|memset\ (list,\ 0,\ 32);\l\
|_1\ =\ (\<unnamed-unsigned:1\>)\ strdup_strings;\l\
|list-\>strdup_strings\ =\ _1;\l\
|return;\l\
}"];

	fn_27_basic_block_0:s -> fn_27_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_2:s -> fn_27_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_0:s -> fn_27_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_string_list_insert" {
	style="dashed";
	color="black";
	label="string_list_insert ()";
	fn_29_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_29_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_29_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|index\ =\ add_entry\ (-1,\ list,\ string);\l\
|if\ (index\ \<\ 0)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_29_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|index\ =\ ~index;\l\
}"];

	fn_29_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|_1\ =\ list-\>items;\l\
|_2\ =\ (long\ unsigned\ int)\ index;\l\
|_3\ =\ _2\ *\ 16;\l\
|D.3383\ =\ _1\ +\ _3;\l\
|return\ D.3383;\l\
}"];

	fn_29_basic_block_0:s -> fn_29_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_29_basic_block_2:s -> fn_29_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_2:s -> fn_29_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_3:s -> fn_29_basic_block_4:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_29_basic_block_4:s -> fn_29_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_0:s -> fn_29_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_add_entry" {
	style="dashed";
	color="black";
	label="add_entry ()";
	fn_28_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_28_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_28_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|exact_match\ =\ 0;\l\
|if\ (insert_at\ ==\ -1)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_28_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|iftmp.0\ =\ get_entry_index\ (list,\ string,\ &exact_match);\l\
goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_28_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|iftmp.0\ =\ insert_at;\l\
}"];

	fn_28_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|index\ =\ iftmp.0;\l\
|exact_match.1_1\ =\ exact_match;\l\
|if\ (exact_match.1_1\ !=\ 0)\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_28_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|D.3391\ =\ ~index;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 18\>;\ [INV]\l\
}"];

	fn_28_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|_2\ =\ list-\>nr;\l\
|_3\ =\ _2\ +\ 1;\l\
|_4\ =\ list-\>alloc;\l\
|if\ (_3\ \>\ _4)\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 12\>;\ [INV]\l\
}"];

	fn_28_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|_5\ =\ list-\>alloc;\l\
|_6\ =\ alloc_nr\ (_5);\l\
|_7\ =\ (unsigned\ int)\ _6;\l\
|_8\ =\ list-\>nr;\l\
|_9\ =\ _8\ +\ 1;\l\
|if\ (_7\ \<\ _9)\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 10\>;\ [INV]\l\
}"];

	fn_28_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|_10\ =\ list-\>nr;\l\
|_11\ =\ _10\ +\ 1;\l\
|list-\>alloc\ =\ _11;\l\
goto\ \<bb\ 11\>;\ [INV]\l\
}"];

	fn_28_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 10\>:\l\
|_12\ =\ list-\>alloc;\l\
|_13\ =\ alloc_nr\ (_12);\l\
|_14\ =\ (unsigned\ int)\ _13;\l\
|list-\>alloc\ =\ _14;\l\
}"];

	fn_28_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 11\>:\l\
|_15\ =\ list-\>alloc;\l\
|_16\ =\ st_mult\ (16,\ _15);\l\
|_17\ =\ (long\ unsigned\ int)\ _16;\l\
|_18\ =\ list-\>items;\l\
|_19\ =\ xrealloc\ (_18,\ _17);\l\
|list-\>items\ =\ _19;\l\
}"];

	fn_28_basic_block_12 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 12\>:\l\
|_20\ =\ list-\>nr;\l\
|index.2_21\ =\ (unsigned\ int)\ index;\l\
|if\ (_20\ \>\ index.2_21)\l\
\ \ goto\ \<bb\ 13\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 14\>;\ [INV]\l\
}"];

	fn_28_basic_block_13 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 13\>:\l\
|_22\ =\ list-\>nr;\l\
|index.3_23\ =\ (unsigned\ int)\ index;\l\
|_24\ =\ _22\ -\ index.3_23;\l\
|_25\ =\ (long\ unsigned\ int)\ _24;\l\
|_26\ =\ list-\>items;\l\
|_27\ =\ (long\ unsigned\ int)\ index;\l\
|_28\ =\ _27\ *\ 16;\l\
|_29\ =\ _26\ +\ _28;\l\
|_30\ =\ list-\>items;\l\
|_31\ =\ (sizetype)\ index;\l\
|_32\ =\ _31\ +\ 1;\l\
|_33\ =\ _32\ *\ 16;\l\
|_34\ =\ _30\ +\ _33;\l\
|move_array\ (_34,\ _29,\ _25,\ 16);\l\
}"];

	fn_28_basic_block_14 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 14\>:\l\
|_35\ =\ BIT_FIELD_REF\ \<*list,\ 8,\ 128\>;\l\
|_36\ =\ _35\ &\ 1;\l\
|if\ (_36\ !=\ 0)\l\
\ \ goto\ \<bb\ 15\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 16\>;\ [INV]\l\
}"];

	fn_28_basic_block_15 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 15\>:\l\
|iftmp.4\ =\ strdup\ (string);\l\
goto\ \<bb\ 17\>;\ [INV]\l\
}"];

	fn_28_basic_block_16 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 16\>:\l\
|iftmp.4\ =\ string;\l\
}"];

	fn_28_basic_block_17 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 17\>:\l\
|_37\ =\ list-\>items;\l\
|_38\ =\ (long\ unsigned\ int)\ index;\l\
|_39\ =\ _38\ *\ 16;\l\
|_40\ =\ _37\ +\ _39;\l\
|_40-\>string\ =\ iftmp.4;\l\
|_41\ =\ list-\>items;\l\
|_42\ =\ (long\ unsigned\ int)\ index;\l\
|_43\ =\ _42\ *\ 16;\l\
|_44\ =\ _41\ +\ _43;\l\
|_44-\>util\ =\ 0B;\l\
|_45\ =\ list-\>nr;\l\
|_46\ =\ _45\ +\ 1;\l\
|list-\>nr\ =\ _46;\l\
|D.3391\ =\ index;\l\
}"];

	fn_28_basic_block_18 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 18\>:\l\
|exact_match\ =\ \{CLOBBER\};\l\
|return\ D.3391;\l\
}"];

	fn_28_basic_block_0:s -> fn_28_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_2:s -> fn_28_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_2:s -> fn_28_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_3:s -> fn_28_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_4:s -> fn_28_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_5:s -> fn_28_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_5:s -> fn_28_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_6:s -> fn_28_basic_block_18:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_7:s -> fn_28_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_7:s -> fn_28_basic_block_12:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_8:s -> fn_28_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_8:s -> fn_28_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_9:s -> fn_28_basic_block_11:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_10:s -> fn_28_basic_block_11:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_11:s -> fn_28_basic_block_12:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_12:s -> fn_28_basic_block_13:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_12:s -> fn_28_basic_block_14:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_13:s -> fn_28_basic_block_14:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_14:s -> fn_28_basic_block_15:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_14:s -> fn_28_basic_block_16:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_15:s -> fn_28_basic_block_17:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_16:s -> fn_28_basic_block_17:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_17:s -> fn_28_basic_block_18:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_18:s -> fn_28_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_0:s -> fn_28_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_move_array" {
	style="dashed";
	color="black";
	label="move_array ()";
	fn_23_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_23_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_23_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|if\ (n\ !=\ 0)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_23_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|_1\ =\ st_mult\ (size,\ n);\l\
|_2\ =\ (long\ unsigned\ int)\ _1;\l\
|memmove\ (dst,\ src,\ _2);\l\
}"];

	fn_23_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|return;\l\
}"];

	fn_23_basic_block_0:s -> fn_23_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_23_basic_block_2:s -> fn_23_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_2:s -> fn_23_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_3:s -> fn_23_basic_block_4:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_23_basic_block_4:s -> fn_23_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_0:s -> fn_23_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_parse_pathspec" {
	style="dashed";
	color="black";
	label="parse_pathspec ()";
	subgraph cluster_30_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	fn_30_basic_block_25 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 25\>:\l\
|if\ (i\ \<\ n)\l\
\ \ goto\ \<bb\ 17\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 26\>;\ [INV]\l\
}"];

	fn_30_basic_block_17 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 17\>:\l\
|_19\ =\ (long\ unsigned\ int)\ i;\l\
|_20\ =\ _19\ *\ 8;\l\
|_21\ =\ argv\ +\ _20;\l\
|entry\ =\ *_21;\l\
|_22\ =\ (long\ unsigned\ int)\ i;\l\
|_23\ =\ _22\ *\ 56;\l\
|_24\ =\ item\ +\ _23;\l\
|_25\ =\ malloc\ (10);\l\
|_24-\>match\ =\ _25;\l\
|_26\ =\ (long\ unsigned\ int)\ i;\l\
|_27\ =\ _26\ *\ 56;\l\
|_28\ =\ item\ +\ _27;\l\
|_29\ =\ malloc\ (100);\l\
|_28-\>original\ =\ _29;\l\
|_30\ =\ (long\ unsigned\ int)\ i;\l\
|_31\ =\ _30\ *\ 56;\l\
|_32\ =\ item\ +\ _31;\l\
|_33\ =\ _32-\>magic;\l\
|_34\ =\ _33\ &\ 32;\l\
|if\ (_34\ !=\ 0)\l\
\ \ goto\ \<bb\ 18\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 19\>;\ [INV]\l\
}"];

	fn_30_basic_block_18 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 18\>:\l\
|nr_exclude\ =\ nr_exclude\ +\ 1;\l\
}"];

	fn_30_basic_block_19 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 19\>:\l\
|_35\ =\ flags\ &\ 8;\l\
|if\ (_35\ !=\ 0)\l\
\ \ goto\ \<bb\ 20\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 22\>;\ [INV]\l\
}"];

	fn_30_basic_block_20 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 20\>:\l\
|_36\ =\ (long\ unsigned\ int)\ i;\l\
|_37\ =\ _36\ *\ 56;\l\
|_38\ =\ item\ +\ _37;\l\
|_39\ =\ _38-\>len;\l\
|_40\ =\ (long\ unsigned\ int)\ i;\l\
|_41\ =\ _40\ *\ 56;\l\
|_42\ =\ item\ +\ _41;\l\
|_43\ =\ _42-\>match;\l\
|_44\ =\ has_symlink_leading_path\ (_43,\ _39);\l\
|if\ (_44\ !=\ 0)\l\
\ \ goto\ \<bb\ 21\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 22\>;\ [INV]\l\
}"];

	fn_30_basic_block_22 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 22\>:\l\
|_48\ =\ (long\ unsigned\ int)\ i;\l\
|_49\ =\ _48\ *\ 56;\l\
|_50\ =\ item\ +\ _49;\l\
|_51\ =\ _50-\>nowildcard_len;\l\
|_52\ =\ (long\ unsigned\ int)\ i;\l\
|_53\ =\ _52\ *\ 56;\l\
|_54\ =\ item\ +\ _53;\l\
|_55\ =\ _54-\>len;\l\
|if\ (_51\ \<\ _55)\l\
\ \ goto\ \<bb\ 23\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 24\>;\ [INV]\l\
}"];

	fn_30_basic_block_23 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 23\>:\l\
|pathspec-\>has_wildcard\ =\ 1;\l\
}"];

	fn_30_basic_block_24 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 24\>:\l\
|_56\ =\ pathspec-\>magic;\l\
|_57\ =\ (long\ unsigned\ int)\ i;\l\
|_58\ =\ _57\ *\ 56;\l\
|_59\ =\ item\ +\ _58;\l\
|_60\ =\ _59-\>magic;\l\
|_61\ =\ _56\ \|\ _60;\l\
|pathspec-\>magic\ =\ _61;\l\
|i\ =\ i\ +\ 1;\l\
}"];

	}
	fn_30_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_30_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_30_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|if\ (argv\ !=\ 0B)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_30_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|iftmp.5\ =\ *argv;\l\
goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_30_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|iftmp.5\ =\ 0B;\l\
}"];

	fn_30_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|entry\ =\ iftmp.5;\l\
|nr_exclude\ =\ 0;\l\
|memset\ (pathspec,\ 0,\ 24);\l\
|_1\ =\ flags\ &\ 4;\l\
|if\ (_1\ !=\ 0)\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_30_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|_2\ =\ pathspec-\>magic;\l\
|_3\ =\ _2\ \|\ 2;\l\
|pathspec-\>magic\ =\ _3;\l\
}"];

	fn_30_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|_4\ =\ entry\ ==\ 0B;\l\
|_5\ =\ prefix\ ==\ 0B;\l\
|_6\ =\ _4\ &\ _5;\l\
|if\ (_6\ !=\ 0)\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
}"];

	fn_30_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 31\>;\ [INV]\l\
}"];

	fn_30_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|if\ (entry\ ==\ 0B)\l\
\ \ goto\ \<bb\ 10\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 13\>;\ [INV]\l\
}"];

	fn_30_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 10\>:\l\
|_7\ =\ flags\ &\ 2;\l\
|if\ (_7\ !=\ 0)\l\
\ \ goto\ \<bb\ 11\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 12\>;\ [INV]\l\
}"];

	fn_30_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 11\>:\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 31\>;\ [INV]\l\
}"];

	fn_30_basic_block_12 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 12\>:\l\
|item\ =\ calloc\ (1,\ 56);\l\
|pathspec-\>items\ =\ item;\l\
|_8\ =\ strdup\ (prefix);\l\
|item-\>match\ =\ _8;\l\
|_9\ =\ strdup\ (prefix);\l\
|item-\>original\ =\ _9;\l\
|_10\ =\ strlen\ (prefix);\l\
|_11\ =\ (int)\ _10;\l\
|item-\>len\ =\ _11;\l\
|_12\ =\ item-\>len;\l\
|item-\>nowildcard_len\ =\ _12;\l\
|_13\ =\ item-\>len;\l\
|item-\>prefix\ =\ _13;\l\
|pathspec-\>nr\ =\ 1;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 31\>;\ [INV]\l\
}"];

	fn_30_basic_block_13 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 13\>:\l\
|n\ =\ 0;\l\
|warn_empty_string\ =\ 1;\l\
|pathspec-\>nr\ =\ n;\l\
|_14\ =\ n\ +\ 1;\l\
|_15\ =\ st_mult\ (56,\ _14);\l\
|_16\ =\ (long\ unsigned\ int)\ _15;\l\
|_17\ =\ malloc\ (_16);\l\
|pathspec-\>items\ =\ _17;\l\
|item\ =\ pathspec-\>items;\l\
|if\ (prefix\ !=\ 0B)\l\
\ \ goto\ \<bb\ 14\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 15\>;\ [INV]\l\
}"];

	fn_30_basic_block_14 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 14\>:\l\
|_18\ =\ strlen\ (prefix);\l\
|iftmp.6\ =\ (int)\ _18;\l\
goto\ \<bb\ 16\>;\ [INV]\l\
}"];

	fn_30_basic_block_15 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 15\>:\l\
|iftmp.6\ =\ 0;\l\
}"];

	fn_30_basic_block_16 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 16\>:\l\
|prefixlen\ =\ iftmp.6;\l\
|i\ =\ 0;\l\
goto\ \<bb\ 25\>;\ [INV]\l\
}"];

	fn_30_basic_block_21 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 21\>:\l\
|_45\ =\ _\ (\"pathspec\ \\'%s\\'\ is\ beyond\ a\ symbolic\ link\");\l\
|_46\ =\ (long\ int)\ _45;\l\
|_47\ =\ (const\ char\ *)\ _46;\l\
|printf\ (_47,\ entry);\l\
|exit\ (1);\l\
}"];

	fn_30_basic_block_26 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 26\>:\l\
|if\ (nr_exclude\ ==\ n)\l\
\ \ goto\ \<bb\ 27\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 31\>;\ [INV]\l\
}"];

	fn_30_basic_block_27 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 27\>:\l\
|_62\ =\ flags\ &\ 1;\l\
|if\ (_62\ !=\ 0)\l\
\ \ goto\ \<bb\ 28\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 29\>;\ [INV]\l\
}"];

	fn_30_basic_block_28 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 28\>:\l\
|iftmp.7\ =\ prefixlen;\l\
goto\ \<bb\ 30\>;\ [INV]\l\
}"];

	fn_30_basic_block_29 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 29\>:\l\
|iftmp.7\ =\ 0;\l\
}"];

	fn_30_basic_block_30 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 30\>:\l\
|plen\ =\ iftmp.7;\l\
|_63\ =\ (long\ unsigned\ int)\ n;\l\
|_64\ =\ _63\ *\ 56;\l\
|_65\ =\ item\ +\ _64;\l\
|init_pathspec_item\ (_65,\ 0,\ prefix,\ plen,\ \"\");\l\
|_66\ =\ pathspec-\>nr;\l\
|_67\ =\ _66\ +\ 1;\l\
|pathspec-\>nr\ =\ _67;\l\
}"];

	fn_30_basic_block_31 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 31\>:\l\
|return;\l\
}"];

	fn_30_basic_block_0:s -> fn_30_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_2:s -> fn_30_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_2:s -> fn_30_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_3:s -> fn_30_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_4:s -> fn_30_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_5:s -> fn_30_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_5:s -> fn_30_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_6:s -> fn_30_basic_block_7:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_7:s -> fn_30_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_7:s -> fn_30_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_8:s -> fn_30_basic_block_31:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_9:s -> fn_30_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_9:s -> fn_30_basic_block_13:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_10:s -> fn_30_basic_block_11:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_10:s -> fn_30_basic_block_12:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_11:s -> fn_30_basic_block_31:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_12:s -> fn_30_basic_block_31:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_13:s -> fn_30_basic_block_14:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_13:s -> fn_30_basic_block_15:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_14:s -> fn_30_basic_block_16:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_15:s -> fn_30_basic_block_16:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_16:s -> fn_30_basic_block_25:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_17:s -> fn_30_basic_block_18:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_17:s -> fn_30_basic_block_19:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_18:s -> fn_30_basic_block_19:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_19:s -> fn_30_basic_block_20:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_19:s -> fn_30_basic_block_22:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_20:s -> fn_30_basic_block_21:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_20:s -> fn_30_basic_block_22:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_22:s -> fn_30_basic_block_23:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_22:s -> fn_30_basic_block_24:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_23:s -> fn_30_basic_block_24:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_24:s -> fn_30_basic_block_25:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_30_basic_block_25:s -> fn_30_basic_block_17:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_25:s -> fn_30_basic_block_26:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_26:s -> fn_30_basic_block_27:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_26:s -> fn_30_basic_block_31:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_27:s -> fn_30_basic_block_28:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_27:s -> fn_30_basic_block_29:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_28:s -> fn_30_basic_block_30:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_29:s -> fn_30_basic_block_30:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_30:s -> fn_30_basic_block_31:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_31:s -> fn_30_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_0:s -> fn_30_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_main" {
	style="dashed";
	color="black";
	label="main ()";
	fn_33_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_33_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_33_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|prepare_index\ (argc,\ argv,\ \"prefix\",\ current_head,\ is_status);\l\
|D.3438\ =\ 0;\l\
|return\ D.3438;\l\
}"];

	fn_33_basic_block_0:s -> fn_33_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_33_basic_block_2:s -> fn_33_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_0:s -> fn_33_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_prepare_index" {
	style="dashed";
	color="black";
	label="prepare_index ()";
	fn_32_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_32_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_32_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|refresh_flags\ =\ 4;\l\
|if\ (is_status\ !=\ 0)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_32_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|refresh_flags\ =\ refresh_flags\ \|\ 2;\l\
}"];

	fn_32_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|parse_pathspec\ (&pathspec,\ 0,\ 2,\ prefix,\ argv);\l\
|_1\ =\ read_index_preload\ (&the_index,\ &pathspec);\l\
|if\ (_1\ \<\ 0)\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_32_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|_2\ =\ _\ (\"index\ file\ corrupt%s\");\l\
|_3\ =\ (long\ int)\ _2;\l\
|_4\ =\ (const\ char\ *)\ _3;\l\
|printf\ (_4,\ \"\");\l\
|exit\ (1);\l\
}"];

	fn_32_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|interactive.8_5\ =\ interactive;\l\
|if\ (interactive.8_5\ !=\ 0)\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 10\>;\ [INV]\l\
}"];

	fn_32_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|old_index_env\ =\ 0B;\l\
|patch_interactive.9_6\ =\ patch_interactive;\l\
|_7\ =\ interactive_add\ (argc,\ argv,\ prefix,\ patch_interactive.9_6);\l\
|if\ (_7\ !=\ 0)\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
}"];

	fn_32_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|_8\ =\ _\ (\"interactive\ add\ failed%s\");\l\
|_9\ =\ (long\ int)\ _8;\l\
|_10\ =\ (const\ char\ *)\ _9;\l\
|printf\ (_10,\ \"\");\l\
|exit\ (1);\l\
}"];

	fn_32_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|_11\ =\ get_lock_file_path\ (&index_lock);\l\
|read_index_from\ (&the_index,\ _11);\l\
|commit_style\ =\ 2;\l\
|_12\ =\ get_lock_file_path\ (&index_lock);\l\
|_13\ =\ (long\ int)\ _12;\l\
|D.3448\ =\ (const\ char\ *)\ _13;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 28\>;\ [INV]\l\
}"];

	fn_32_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 10\>:\l\
|all.10_14\ =\ all;\l\
|if\ (all.10_14\ !=\ 0)\l\
\ \ goto\ \<bb\ 13\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 11\>;\ [INV]\l\
}"];

	fn_32_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 11\>:\l\
|also.11_15\ =\ also;\l\
|if\ (also.11_15\ !=\ 0)\l\
\ \ goto\ \<bb\ 12\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 17\>;\ [INV]\l\
}"];

	fn_32_basic_block_12 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 12\>:\l\
|_16\ =\ pathspec.nr;\l\
|if\ (_16\ !=\ 0)\l\
\ \ goto\ \<bb\ 13\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 17\>;\ [INV]\l\
}"];

	fn_32_basic_block_13 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 13\>:\l\
|also.13_17\ =\ also;\l\
|if\ (also.13_17\ !=\ 0)\l\
\ \ goto\ \<bb\ 14\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 15\>;\ [INV]\l\
}"];

	fn_32_basic_block_14 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 14\>:\l\
|iftmp.12\ =\ prefix;\l\
goto\ \<bb\ 16\>;\ [INV]\l\
}"];

	fn_32_basic_block_15 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 15\>:\l\
|iftmp.12\ =\ 0B;\l\
}"];

	fn_32_basic_block_16 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 16\>:\l\
|add_files_to_cache\ (iftmp.12,\ &pathspec,\ 0);\l\
|commit_style\ =\ 2;\l\
|_18\ =\ get_lock_file_path\ (&index_lock);\l\
|_19\ =\ (long\ int)\ _18;\l\
|D.3448\ =\ (const\ char\ *)\ _19;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 28\>;\ [INV]\l\
}"];

	fn_32_basic_block_17 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 17\>:\l\
|only.14_20\ =\ only;\l\
|if\ (only.14_20\ ==\ 0)\l\
\ \ goto\ \<bb\ 18\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 22\>;\ [INV]\l\
}"];

	fn_32_basic_block_18 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 18\>:\l\
|_21\ =\ pathspec.nr;\l\
|if\ (_21\ ==\ 0)\l\
\ \ goto\ \<bb\ 19\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 22\>;\ [INV]\l\
}"];

	fn_32_basic_block_19 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 19\>:\l\
|_22\ =\ the_index.cache_changed;\l\
|if\ (_22\ !=\ 0)\l\
\ \ goto\ \<bb\ 20\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 21\>;\ [INV]\l\
}"];

	fn_32_basic_block_20 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 20\>:\l\
|_23\ =\ _\ (\"unable\ to\ write\ new_index\ file%s\");\l\
|_24\ =\ (long\ int)\ _23;\l\
|_25\ =\ (const\ char\ *)\ _24;\l\
|printf\ (_25,\ \"\");\l\
|exit\ (1);\l\
}"];

	fn_32_basic_block_21 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 21\>:\l\
|rollback_lock_file\ (&index_lock);\l\
|commit_style\ =\ 1;\l\
|_26\ =\ get_index_file\ ();\l\
|_27\ =\ (long\ int)\ _26;\l\
|D.3448\ =\ (const\ char\ *)\ _27;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 28\>;\ [INV]\l\
}"];

	fn_32_basic_block_22 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 22\>:\l\
|commit_style\ =\ 3;\l\
|string_list_init\ (&partial,\ 1);\l\
|if\ (current_head\ !=\ 0B)\l\
\ \ goto\ \<bb\ 23\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 24\>;\ [INV]\l\
}"];

	fn_32_basic_block_23 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 23\>:\l\
|iftmp.15\ =\ \"HEAD\";\l\
goto\ \<bb\ 25\>;\ [INV]\l\
}"];

	fn_32_basic_block_24 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 24\>:\l\
|iftmp.15\ =\ 0B;\l\
}"];

	fn_32_basic_block_25 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 25\>:\l\
|_28\ =\ list_paths\ (&partial,\ iftmp.15,\ prefix,\ &pathspec);\l\
|if\ (_28\ !=\ 0)\l\
\ \ goto\ \<bb\ 26\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 27\>;\ [INV]\l\
}"];

	fn_32_basic_block_26 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 26\>:\l\
|exit\ (1);\l\
}"];

	fn_32_basic_block_27 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 27\>:\l\
|discard_index\ (&the_index);\l\
|D.3448\ =\ ret;\l\
}"];

	fn_32_basic_block_28 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 28\>:\l\
|partial\ =\ \{CLOBBER\};\l\
|pathspec\ =\ \{CLOBBER\};\l\
|return\ D.3448;\l\
}"];

	fn_32_basic_block_0:s -> fn_32_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_32_basic_block_2:s -> fn_32_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_2:s -> fn_32_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_3:s -> fn_32_basic_block_4:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_32_basic_block_4:s -> fn_32_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_4:s -> fn_32_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_6:s -> fn_32_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_6:s -> fn_32_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_7:s -> fn_32_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_7:s -> fn_32_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_9:s -> fn_32_basic_block_28:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_32_basic_block_10:s -> fn_32_basic_block_13:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_10:s -> fn_32_basic_block_11:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_11:s -> fn_32_basic_block_12:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_11:s -> fn_32_basic_block_17:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_12:s -> fn_32_basic_block_13:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_12:s -> fn_32_basic_block_17:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_13:s -> fn_32_basic_block_14:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_13:s -> fn_32_basic_block_15:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_14:s -> fn_32_basic_block_16:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_32_basic_block_15:s -> fn_32_basic_block_16:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_32_basic_block_16:s -> fn_32_basic_block_28:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_32_basic_block_17:s -> fn_32_basic_block_18:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_17:s -> fn_32_basic_block_22:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_18:s -> fn_32_basic_block_19:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_18:s -> fn_32_basic_block_22:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_19:s -> fn_32_basic_block_20:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_19:s -> fn_32_basic_block_21:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_21:s -> fn_32_basic_block_28:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_32_basic_block_22:s -> fn_32_basic_block_23:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_22:s -> fn_32_basic_block_24:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_23:s -> fn_32_basic_block_25:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_32_basic_block_24:s -> fn_32_basic_block_25:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_32_basic_block_25:s -> fn_32_basic_block_26:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_25:s -> fn_32_basic_block_27:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_27:s -> fn_32_basic_block_28:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_32_basic_block_28:s -> fn_32_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_0:s -> fn_32_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_list_paths" {
	style="dashed";
	color="black";
	label="list_paths ()";
	subgraph cluster_31_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	fn_31_basic_block_13 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 13\>:\l\
|_10\ =\ the_index.cache_nr;\l\
|i.17_11\ =\ (unsigned\ int)\ i;\l\
|if\ (_10\ \>\ i.17_11)\l\
\ \ goto\ \<bb\ 10\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 14\>;\ [INV]\l\
}"];

	fn_31_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 10\>:\l\
|_4\ =\ the_index.cache;\l\
|_5\ =\ (long\ unsigned\ int)\ i;\l\
|_6\ =\ _5\ *\ 8;\l\
|_7\ =\ _4\ +\ _6;\l\
|ce\ =\ *_7;\l\
|_8\ =\ &ce-\>name;\l\
|item\ =\ string_list_insert\ (list,\ _8);\l\
|_9\ =\ ce_skip_worktree\ (ce);\l\
|if\ (_9\ !=\ 0)\l\
\ \ goto\ \<bb\ 11\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 12\>;\ [INV]\l\
}"];

	fn_31_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 11\>:\l\
|item-\>util\ =\ item;\l\
}"];

	fn_31_basic_block_12 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 12\>:\l\
|i\ =\ i\ +\ 1;\l\
}"];

	}
	fn_31_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_31_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_31_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|_1\ =\ pattern-\>nr;\l\
|if\ (_1\ ==\ 0)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_31_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|D.3473\ =\ 0;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 15\>;\ [INV]\l\
}"];

	fn_31_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|if\ (with_tree\ !=\ 0B)\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
}"];

	fn_31_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|_2\ =\ common_prefix\ (pattern);\l\
|_3\ =\ (long\ int)\ _2;\l\
|max_prefix\ =\ (char\ *)\ _3;\l\
|if\ (max_prefix\ !=\ 0B)\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_31_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|iftmp.16\ =\ max_prefix;\l\
goto\ \<bb\ 8\>;\ [INV]\l\
}"];

	fn_31_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|iftmp.16\ =\ prefix;\l\
}"];

	fn_31_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|overlay_tree_on_index\ (&the_index,\ with_tree,\ iftmp.16);\l\
|free\ (max_prefix);\l\
}"];

	fn_31_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|i\ =\ 0;\l\
goto\ \<bb\ 13\>;\ [INV]\l\
}"];

	fn_31_basic_block_14 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 14\>:\l\
|ret\ =\ report_path_error\ (m,\ pattern,\ prefix);\l\
|free\ (m);\l\
|D.3473\ =\ ret;\l\
}"];

	fn_31_basic_block_15 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 15\>:\l\
|return\ D.3473;\l\
}"];

	fn_31_basic_block_0:s -> fn_31_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_2:s -> fn_31_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_2:s -> fn_31_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_3:s -> fn_31_basic_block_15:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_4:s -> fn_31_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_4:s -> fn_31_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_5:s -> fn_31_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_5:s -> fn_31_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_6:s -> fn_31_basic_block_8:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_7:s -> fn_31_basic_block_8:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_8:s -> fn_31_basic_block_9:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_9:s -> fn_31_basic_block_13:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_10:s -> fn_31_basic_block_11:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_10:s -> fn_31_basic_block_12:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_11:s -> fn_31_basic_block_12:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_12:s -> fn_31_basic_block_13:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_31_basic_block_13:s -> fn_31_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_13:s -> fn_31_basic_block_14:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_14:s -> fn_31_basic_block_15:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_15:s -> fn_31_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_0:s -> fn_31_basic_block_1:n [style="invis",constraint=true];
}
}
