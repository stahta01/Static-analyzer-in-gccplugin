
;; Function ASN1_STRING_type_new (ASN1_STRING_type_new, funcdef_no=22, decl_uid=3549, cgraph_uid=23, symbol_order=23)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct ASN1_STRING * ASN1_STRING_type_new (int type)
{
  struct ASN1_STRING * ret;
  struct ASN1_STRING * D.3662;

  <bb 2> :
  ret = malloc (24);
  if (ret == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  ASN1err (130, 65);
  D.3662 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  ret->length = 0;
  ret->type = type;
  ret->data = 0B;
  ret->flags = 0;
  D.3662 = ret;

  <bb 5> :
  return D.3662;

}



;; Function ASN1_mbstring_copy (ASN1_mbstring_copy, funcdef_no=24, decl_uid=3573, cgraph_uid=25, symbol_order=25)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
int ASN1_mbstring_copy (struct ASN1_STRING * * out, const unsigned char * in, int len, int inform, long unsigned int mask)
{
  int D.3664;

  <bb 2> :
  D.3664 = ASN1_mbstring_ncopy (out, in, len, inform, mask, 0, 0);
  return D.3664;

}



;; Function ASN1_mbstring_ncopy (ASN1_mbstring_ncopy, funcdef_no=25, decl_uid=3575, cgraph_uid=26, symbol_order=26)

Merging blocks 51 and 52
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 15 13 14 7 10 }
;; 7 succs { 8 9 }
;; 8 succs { 51 }
;; 9 succs { 16 }
;; 10 succs { 11 12 }
;; 11 succs { 51 }
;; 12 succs { 16 }
;; 13 succs { 16 }
;; 14 succs { 16 }
;; 15 succs { 51 }
;; 16 succs { 17 19 }
;; 17 succs { 18 19 }
;; 18 succs { 51 }
;; 19 succs { 20 22 }
;; 20 succs { 21 22 }
;; 21 succs { 51 }
;; 22 succs { 23 24 }
;; 23 succs { 33 }
;; 24 succs { 25 26 }
;; 25 succs { 33 }
;; 26 succs { 27 28 }
;; 27 succs { 33 }
;; 28 succs { 29 30 }
;; 29 succs { 33 }
;; 30 succs { 31 32 }
;; 31 succs { 33 }
;; 32 succs { 33 }
;; 33 succs { 34 35 }
;; 34 succs { 51 }
;; 35 succs { 36 39 }
;; 36 succs { 37 38 }
;; 37 succs { 38 }
;; 38 succs { 42 }
;; 39 succs { 40 41 }
;; 40 succs { 51 }
;; 41 succs { 42 }
;; 42 succs { 43 46 }
;; 43 succs { 44 45 }
;; 44 succs { 51 }
;; 45 succs { 51 }
;; 46 succs { 47 50 }
;; 47 succs { 48 49 }
;; 48 succs { 49 }
;; 49 succs { 51 }
;; 50 succs { 51 }
;; 51 succs { 1 }
int ASN1_mbstring_ncopy (struct ASN1_STRING * * out, const unsigned char * in, int len, int inform, long unsigned int mask, long int minsize, long int maxsize)
{
  int (*<T752>) (long unsigned int, void *) cpyfunc;
  char strbuf[32];
  int nchar;
  unsigned char * p;
  struct ASN1_STRING * dest;
  int outlen;
  int outform;
  char free_out;
  int ret;
  int str_type;
  int D.3672;

  <bb 2> :
  outlen = 0;
  cpyfunc = 0B;
  if (len == -1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = strlen (in);
  len = (int) _1;

  <bb 4> :
  if (mask == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  mask = 10246;

  <bb 6> :
  switch (inform) <default: <L12> [INV], case 4096: <L10> [INV], case 4097: <L11> [INV], case 4098: <L4> [INV], case 4100: <L7> [INV]>

  <bb 7> :
<L4>:
  _2 = len & 1;
  if (_2 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  ASN1err (122, 129);
  D.3672 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 51>; [INV]

  <bb 9> :
  nchar = len >> 1;
  goto <bb 16>; [INV]

  <bb 10> :
<L7>:
  _3 = len & 3;
  if (_3 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  ASN1err (122, 133);
  D.3672 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 51>; [INV]

  <bb 12> :
  nchar = len >> 2;
  goto <bb 16>; [INV]

  <bb 13> :
<L10>:
  nchar = 0;
  goto <bb 16>; [INV]

  <bb 14> :
<L11>:
  nchar = len;
  goto <bb 16>; [INV]

  <bb 15> :
<L12>:
  ASN1err (122, 160);
  D.3672 = -1;
  goto <bb 51>; [INV]

  <bb 16> :
  if (minsize > 0)
    goto <bb 17>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 17> :
  _4 = (long int) nchar;
  if (minsize > _4)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  ASN1err (122, 152);
  BIO_snprintf (&strbuf, 32, "%ld", minsize);
  ERR_add_error_data (2, "minsize=", &strbuf);
  D.3672 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 51>; [INV]

  <bb 19> :
  if (maxsize > 0)
    goto <bb 20>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 20> :
  _5 = (long int) nchar;
  if (maxsize < _5)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]

  <bb 21> :
  ASN1err (122, 151);
  BIO_snprintf (&strbuf, 32, "%ld", maxsize);
  ERR_add_error_data (2, "maxsize=", &strbuf);
  D.3672 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 51>; [INV]

  <bb 22> :
  outform = 4097;
  _6 = mask & 2;
  if (_6 != 0)
    goto <bb 23>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 23> :
  str_type = 19;
  goto <bb 33>; [INV]

  <bb 24> :
  _7 = mask & 16;
  if (_7 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 26>; [INV]

  <bb 25> :
  str_type = 22;
  goto <bb 33>; [INV]

  <bb 26> :
  _8 = mask & 4;
  if (_8 != 0)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]

  <bb 27> :
  str_type = 20;
  goto <bb 33>; [INV]

  <bb 28> :
  _9 = mask & 2048;
  if (_9 != 0)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 29> :
  str_type = 30;
  outform = 4098;
  goto <bb 33>; [INV]

  <bb 30> :
  _10 = mask & 256;
  if (_10 != 0)
    goto <bb 31>; [INV]
  else
    goto <bb 32>; [INV]

  <bb 31> :
  str_type = 28;
  outform = 4100;
  goto <bb 33>; [INV]

  <bb 32> :
  str_type = 12;
  outform = 4096;

  <bb 33> :
  if (out == 0B)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]

  <bb 34> :
  D.3672 = str_type;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 51>; [INV]

  <bb 35> :
  _11 = *out;
  if (_11 != 0B)
    goto <bb 36>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 36> :
  free_out = 0;
  dest = *out;
  _12 = dest->data;
  if (_12 != 0B)
    goto <bb 37>; [INV]
  else
    goto <bb 38>; [INV]

  <bb 37> :
  dest->length = 0;
  _13 = dest->data;
  free (_13);
  dest->data = 0B;

  <bb 38> :
  dest->type = str_type;
  goto <bb 42>; [INV]

  <bb 39> :
  free_out = 1;
  dest = ASN1_STRING_type_new (str_type);
  if (dest == 0B)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]

  <bb 40> :
  ASN1err (122, 65);
  D.3672 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 51>; [INV]

  <bb 41> :
  *out = dest;

  <bb 42> :
  if (inform == outform)
    goto <bb 43>; [INV]
  else
    goto <bb 46>; [INV]

  <bb 43> :
  _14 = ASN1_STRING_set (dest, in, len);
  if (_14 == 0)
    goto <bb 44>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 44> :
  ASN1err (122, 65);
  D.3672 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 51>; [INV]

  <bb 45> :
  D.3672 = str_type;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 51>; [INV]

  <bb 46> :
  _15 = outlen + 1;
  _16 = (long unsigned int) _15;
  _17 = malloc (_16);
  p = _17;
  p.0_18 = p;
  if (p.0_18 == 0B)
    goto <bb 47>; [INV]
  else
    goto <bb 50>; [INV]

  <bb 47> :
  if (free_out != 0)
    goto <bb 48>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 48> :
  ASN1_STRING_free (dest);

  <bb 49> :
  ASN1err (122, 65);
  D.3672 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 51>; [INV]

  <bb 50> :
  dest->length = outlen;
  p.1_19 = p;
  dest->data = p.1_19;
  p.2_20 = p;
  _21 = (sizetype) outlen;
  _22 = p.2_20 + _21;
  *_22 = 0;
  traverse_string (in, len, inform, cpyfunc, &p);
  D.3672 = str_type;

  <bb 51> :
  p = {CLOBBER};
  strbuf = {CLOBBER};
  return D.3672;

}



;; Function ASN1_STRING_to_UTF8 (ASN1_STRING_to_UTF8, funcdef_no=26, decl_uid=3627, cgraph_uid=27, symbol_order=27)

Merging blocks 11 and 12
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;; 2 succs { 3 4 }
;; 3 succs { 11 }
;; 4 succs { 5 6 }
;; 5 succs { 11 }
;; 6 succs { 7 8 }
;; 7 succs { 11 }
;; 8 succs { 9 10 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
int ASN1_STRING_to_UTF8 (unsigned char * * out, struct ASN1_STRING * in)
{
  int ret;
  int type;
  int mbflag;
  struct ASN1_STRING * str;
  struct ASN1_STRING stmp;
  int D.3719;

  <bb 2> :
  str = &stmp;
  if (in == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3719 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 4> :
  type = in->type;
  type.3_1 = (unsigned int) type;
  if (type.3_1 > 30)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.3719 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 6> :
  _2 = tag2nbyte[type];
  mbflag = (int) _2;
  if (mbflag == -1)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.3719 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 8> :
  mbflag = mbflag | 4096;
  stmp.data = 0B;
  stmp.length = 0;
  _3 = in->length;
  _4 = in->data;
  ret = ASN1_mbstring_copy (&str, _4, _3, mbflag, 8192);
  if (ret < 0)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  D.3719 = ret;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 11>; [INV]

  <bb 10> :
  _5 = stmp.data;
  *out = _5;
  D.3719 = stmp.length;

  <bb 11> :
  stmp = {CLOBBER};
  str = {CLOBBER};
  return D.3719;

}



;; Function main (main, funcdef_no=28, decl_uid=3650, cgraph_uid=29, symbol_order=29)

Removing basic block 4
Merging blocks 2 and 3
Merging blocks 2 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
int main ()
{
  size_t blen;
  char * peername;
  const char * b;
  unsigned int flags;
  int cmp_type;
  struct ASN1_STRING a;
  int D.3728;

  <bb 2> :
  b = "bbbb";
  peername = b;
  blen = strlen (b);
  do_check_string (&a, cmp_type, equal_nocase, flags, b, blen, &peername);
  D.3728 = 0;
  a = {CLOBBER};
  peername = {CLOBBER};
  return D.3728;

}



;; Function equal_nocase (equal_nocase, funcdef_no=23, decl_uid=3559, cgraph_uid=24, symbol_order=24)

Removing basic block 4
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;;
;; Loop 1
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13 6 11 9 10 7 8 4
;; 2 succs { 3 14 }
;; 3 succs { 16 }
;; 4 succs { 5 6 }
;; 5 succs { 16 }
;; 6 succs { 7 13 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 16 }
;; 13 succs { 14 }
;; 14 succs { 4 15 }
;; 15 succs { 16 }
;; 16 succs { 1 }
int equal_nocase (const unsigned char * pattern, size_t pattern_len, const unsigned char * subject, size_t subject_len, unsigned int flags)
{
  unsigned char r;
  unsigned char l;
  int D.3733;

  <bb 2> :
  skip_prefix (&pattern, &pattern_len, subject, subject_len, flags);
  pattern_len.4_1 = pattern_len;
  if (subject_len != pattern_len.4_1)
    goto <bb 3>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 3> :
  D.3733 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 4> :
  pattern.5_2 = pattern;
  l = *pattern.5_2;
  r = *subject;
  if (l == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  D.3733 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 6> :
  if (l != r)
    goto <bb 7>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 7> :
  _3 = l + 191;
  if (_3 <= 25)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  l = l + 32;

  <bb 9> :
  _4 = r + 191;
  if (_4 <= 25)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  r = r + 32;

  <bb 11> :
  if (l != r)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.3733 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 16>; [INV]

  <bb 13> :
  pattern.6_5 = pattern;
  _6 = pattern.6_5 + 1;
  pattern = _6;
  subject = subject + 1;
  pattern_len.7_7 = pattern_len;
  _8 = pattern_len.7_7 + 18446744073709551615;
  pattern_len = _8;

  <bb 14> :
  pattern_len.8_9 = pattern_len;
  if (pattern_len.8_9 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  D.3733 = 1;

  <bb 16> :
  return D.3733;

}



;; Function do_check_string (do_check_string, funcdef_no=27, decl_uid=3641, cgraph_uid=28, symbol_order=28)

Removing basic block 15
Merging blocks 17 and 21
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 21 }
;; 5 succs { 6 15 }
;; 6 succs { 7 8 }
;; 7 succs { 21 }
;; 8 succs { 9 10 }
;; 9 succs { 13 }
;; 10 succs { 11 13 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 20 }
;; 14 succs { 20 }
;; 15 succs { 16 17 }
;; 16 succs { 21 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 1 }
int do_check_string (struct ASN1_STRING * a, int cmp_type, int (*equal_fn) (const unsigned char *, size_t, const unsigned char *, size_t, unsigned int) equal, unsigned int flags, const char * b, size_t blen, char * * peername)
{
  unsigned char * astr;
  int astrlen;
  int rv;
  int D.3748;

  <bb 2> :
  rv = 0;
  _1 = a->data;
  if (_1 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _2 = a->length;
  if (_2 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.3748 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 5> :
  if (cmp_type > 0)
    goto <bb 6>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 6> :
  _3 = a->type;
  if (cmp_type != _3)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  D.3748 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 21>; [INV]

  <bb 8> :
  if (cmp_type == 22)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _4 = a->length;
  _5 = (long unsigned int) _4;
  _6 = a->data;
  rv = equal (_6, _5, b, blen, flags);
  goto <bb 13>; [INV]

  <bb 10> :
  _7 = a->length;
  _8 = (int) blen;
  if (_7 == _8)
    goto <bb 11>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 11> :
  _9 = a->data;
  _10 = memcmp (_9, b, blen);
  if (_10 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  rv = 1;

  <bb 13> :
  _11 = rv > 0;
  _12 = peername != 0B;
  _13 = _11 & _12;
  if (_13 != 0)
    goto <bb 14>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 14> :
  _14 = a->length;
  _15 = a->data;
  _16 = BUF_strndup (_15, _14);
  _17 = (long int) _16;
  _18 = (char *) _17;
  *peername = _18;
  goto <bb 20>; [INV]

  <bb 15> :
  astrlen = ASN1_STRING_to_UTF8 (&astr, a);
  if (astrlen < 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  D.3748 = -1;
  // predicted unlikely by early return (on trees) predictor.
  astr = {CLOBBER};
  goto <bb 21>; [INV]

  <bb 17> :
  _19 = (long unsigned int) astrlen;
  astr.9_20 = astr;
  rv = equal (astr.9_20, _19, b, blen, flags);
  astr.10_21 = astr;
  free (astr.10_21);
  _22 = rv > 0;
  _23 = peername != 0B;
  _24 = _22 & _23;
  if (_24 != 0)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  astr.11_25 = astr;
  _26 = BUF_strndup (astr.11_25, astrlen);
  _27 = (long int) _26;
  _28 = (char *) _27;
  *peername = _28;

  <bb 19> :
  astr = {CLOBBER};

  <bb 20> :
  D.3748 = rv;

  <bb 21> :
  return D.3748;

}


