digraph "test.o-git_leak_10.c.015t.cfg" {
overlap=false;
subgraph "cluster_xrealloc" {
	style="dashed";
	color="black";
	label="xrealloc ()";
	fn_26_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_26_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_26_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|ret\ =\ realloc\ (ptr,\ size);\l\
|_1\ =\ ret\ ==\ 0B;\l\
|_2\ =\ size\ ==\ 0;\l\
|_3\ =\ _1\ &\ _2;\l\
|if\ (_3\ !=\ 0)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_26_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|ret\ =\ realloc\ (ptr,\ 1);\l\
}"];

	fn_26_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|if\ (ret\ ==\ 0B)\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
}"];

	fn_26_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|ret\ =\ realloc\ (ptr,\ size);\l\
|_4\ =\ ret\ ==\ 0B;\l\
|_5\ =\ size\ ==\ 0;\l\
|_6\ =\ _4\ &\ _5;\l\
|if\ (_6\ !=\ 0)\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_26_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|ret\ =\ realloc\ (ptr,\ 1);\l\
}"];

	fn_26_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|if\ (ret\ ==\ 0B)\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
}"];

	fn_26_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|printf\ (\"Out\ of\ memory,\ realloc\ failed%s\",\ \"\");\l\
|exit\ (1);\l\
}"];

	fn_26_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|D.3406\ =\ ret;\l\
|return\ D.3406;\l\
}"];

	fn_26_basic_block_0:s -> fn_26_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_2:s -> fn_26_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_2:s -> fn_26_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_3:s -> fn_26_basic_block_4:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_4:s -> fn_26_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_4:s -> fn_26_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_5:s -> fn_26_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_5:s -> fn_26_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_6:s -> fn_26_basic_block_7:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_7:s -> fn_26_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_7:s -> fn_26_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_9:s -> fn_26_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_0:s -> fn_26_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_update_tree_entry" {
	style="dashed";
	color="black";
	label="update_tree_entry ()";
	fn_28_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_28_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_28_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|err.alloc\ =\ 0;\l\
|err.len\ =\ 0;\l\
|err.buf\ =\ &strbuf_slopbuf;\l\
|_1\ =\ update_tree_entry_internal\ (desc,\ &err);\l\
|if\ (_1\ !=\ 0)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_28_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|_2\ =\ err.buf;\l\
|printf\ (\"%s\",\ _2);\l\
|exit\ (1);\l\
}"];

	fn_28_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|strbuf_release\ (&err);\l\
|err\ =\ \{CLOBBER\};\l\
|return;\l\
}"];

	fn_28_basic_block_0:s -> fn_28_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_2:s -> fn_28_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_2:s -> fn_28_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_4:s -> fn_28_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_0:s -> fn_28_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_update_tree_entry_internal" {
	style="dashed";
	color="black";
	label="update_tree_entry_internal ()";
	fn_27_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_27_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_27_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|buf\ =\ desc-\>buffer;\l\
|_1\ =\ desc-\>entry.oid;\l\
|_2\ =\ &_1-\>hash;\l\
|end\ =\ _2\ +\ 20;\l\
|_3\ =\ desc-\>size;\l\
|size\ =\ (long\ unsigned\ int)\ _3;\l\
|_4\ =\ end\ -\ buf;\l\
|len\ =\ (long\ unsigned\ int)\ _4;\l\
|if\ (size\ \<\ len)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_27_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|printf\ (\"too-short\ tree\ file%s\",\ buf);\l\
|exit\ (1);\l\
}"];

	fn_27_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|buf\ =\ end;\l\
|size\ =\ size\ -\ len;\l\
|desc-\>buffer\ =\ buf;\l\
|_5\ =\ (unsigned\ int)\ size;\l\
|desc-\>size\ =\ _5;\l\
|if\ (size\ !=\ 0)\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_27_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|D.3414\ =\ decode_tree_entry\ (desc,\ buf,\ size,\ err);\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_27_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|D.3414\ =\ 0;\l\
}"];

	fn_27_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|return\ D.3414;\l\
}"];

	fn_27_basic_block_0:s -> fn_27_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_2:s -> fn_27_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_2:s -> fn_27_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_4:s -> fn_27_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_4:s -> fn_27_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_5:s -> fn_27_basic_block_7:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_6:s -> fn_27_basic_block_7:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_7:s -> fn_27_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_0:s -> fn_27_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_traverse_trees" {
	style="dashed";
	color="black";
	label="traverse_trees ()";
	subgraph cluster_30_2 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 2";
	labeljust=l;
	penwidth=2;
	fn_30_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|if\ (i\ \<\ n)\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
}"];

	fn_30_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|_10\ =\ (long\ unsigned\ int)\ i;\l\
|_11\ =\ _10\ *\ 24;\l\
|e\ =\ entry\ +\ _11;\l\
|_12\ =\ (long\ unsigned\ int)\ i;\l\
|_13\ =\ _12\ *\ 48;\l\
|_14\ =\ tx\ +\ _13;\l\
|extended_entry_extract\ (_14,\ e,\ 0B,\ 0);\l\
|i\ =\ i\ +\ 1;\l\
}"];

	}
	subgraph cluster_30_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	fn_30_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|if\ (i\ \<\ n)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_30_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|_4\ =\ (long\ unsigned\ int)\ i;\l\
|_5\ =\ _4\ *\ 40;\l\
|_6\ =\ t\ +\ _5;\l\
|_7\ =\ (long\ unsigned\ int)\ i;\l\
|_8\ =\ _7\ *\ 48;\l\
|_9\ =\ tx\ +\ _8;\l\
|_9-\>d\ =\ *_6;\l\
|i\ =\ i\ +\ 1;\l\
}"];

	}
	fn_30_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_30_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_30_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|_1\ =\ (long\ unsigned\ int)\ n;\l\
|tx\ =\ calloc\ (_1,\ 48);\l\
|_2\ =\ (long\ unsigned\ int)\ n;\l\
|_3\ =\ _2\ *\ 24;\l\
|entry\ =\ malloc\ (_3);\l\
|e\ =\ 0B;\l\
|i\ =\ 0;\l\
goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_30_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|i\ =\ 0;\l\
goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_30_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|free\ (tx);\l\
|D.3416\ =\ 1;\l\
|return\ D.3416;\l\
}"];

	fn_30_basic_block_0:s -> fn_30_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_2:s -> fn_30_basic_block_4:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_3:s -> fn_30_basic_block_4:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_30_basic_block_4:s -> fn_30_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_4:s -> fn_30_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_5:s -> fn_30_basic_block_7:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_6:s -> fn_30_basic_block_7:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_30_basic_block_7:s -> fn_30_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_7:s -> fn_30_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_8:s -> fn_30_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_0:s -> fn_30_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_extended_entry_extract" {
	style="dashed";
	color="black";
	label="extended_entry_extract ()";
	subgraph cluster_29_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	subgraph cluster_29_2 {
	style="filled";
	color="darkgreen";
	fillcolor="grey77";
	label="loop 2";
	labeljust=l;
	penwidth=2;
	fn_29_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|if\ (skip\ !=\ 0B)\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
}"];

	fn_29_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|_3\ =\ a-\>path;\l\
|_4\ =\ skip-\>ptr;\l\
|if\ (_3\ ==\ _4)\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_29_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|skip\ =\ skip-\>prev;\l\
}"];

	}
	fn_29_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|_1\ =\ t-\>d.size;\l\
|if\ (_1\ ==\ 0)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_29_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|_2\ =\ &t-\>d;\l\
|entry_extract\ (_2,\ a);\l\
|skip\ =\ t-\>skip;\l\
goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_29_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|if\ (skip\ ==\ 0B)\l\
\ \ goto\ \<bb\ 10\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
}"];

	fn_29_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|_5\ =\ &t-\>d;\l\
|update_tree_entry\ (_5);\l\
goto\ \<bb\ 2\>;\ [INV]\l\
}"];

	}
	fn_29_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_29_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_29_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|entry_clear\ (a);\l\
goto\ \<bb\ 10\>;\ [INV]\l\
}"];

	fn_29_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 10\>:\l\
|probe\ =\ \{CLOBBER\};\l\
|return;\l\
}"];

	fn_29_basic_block_0:s -> fn_29_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_29_basic_block_2:s -> fn_29_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_2:s -> fn_29_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_3:s -> fn_29_basic_block_10:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_29_basic_block_4:s -> fn_29_basic_block_7:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_29_basic_block_5:s -> fn_29_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_5:s -> fn_29_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_6:s -> fn_29_basic_block_7:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_29_basic_block_7:s -> fn_29_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_7:s -> fn_29_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_8:s -> fn_29_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_8:s -> fn_29_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_9:s -> fn_29_basic_block_2:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_29_basic_block_10:s -> fn_29_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_0:s -> fn_29_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_unpack_trees" {
	style="dashed";
	color="black";
	label="unpack_trees ()";
	fn_31_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_31_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_31_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|len.0_1\ =\ (int)\ len;\l\
|traverse_trees\ (len.0_1,\ t,\ 0B);\l\
|D.3422\ =\ 0;\l\
|return\ D.3422;\l\
}"];

	fn_31_basic_block_0:s -> fn_31_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_2:s -> fn_31_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_0:s -> fn_31_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_init_tree_desc" {
	style="dashed";
	color="black";
	label="init_tree_desc ()";
	fn_33_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_33_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_33_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|err.alloc\ =\ 0;\l\
|err.len\ =\ 0;\l\
|err.buf\ =\ &strbuf_slopbuf;\l\
|_1\ =\ init_tree_desc_internal\ (desc,\ buffer,\ size,\ &err);\l\
|if\ (_1\ !=\ 0)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_33_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|_2\ =\ err.buf;\l\
|printf\ (\"%s\",\ _2);\l\
|exit\ (1);\l\
}"];

	fn_33_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|strbuf_release\ (&err);\l\
|err\ =\ \{CLOBBER\};\l\
|return;\l\
}"];

	fn_33_basic_block_0:s -> fn_33_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_33_basic_block_2:s -> fn_33_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_2:s -> fn_33_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_4:s -> fn_33_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_0:s -> fn_33_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_init_tree_desc_internal" {
	style="dashed";
	color="black";
	label="init_tree_desc_internal ()";
	fn_32_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_32_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_32_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|desc-\>buffer\ =\ buffer;\l\
|_1\ =\ (unsigned\ int)\ size;\l\
|desc-\>size\ =\ _1;\l\
|if\ (size\ !=\ 0)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_32_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|D.3428\ =\ decode_tree_entry\ (desc,\ buffer,\ size,\ err);\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_32_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|D.3428\ =\ 0;\l\
}"];

	fn_32_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|return\ D.3428;\l\
}"];

	fn_32_basic_block_0:s -> fn_32_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_32_basic_block_2:s -> fn_32_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_2:s -> fn_32_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_3:s -> fn_32_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_32_basic_block_4:s -> fn_32_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_32_basic_block_5:s -> fn_32_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_0:s -> fn_32_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_fill_tree_descriptor" {
	style="dashed";
	color="black";
	label="fill_tree_descriptor ()";
	fn_34_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_34_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_34_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|size\ =\ 0;\l\
|buf\ =\ 0B;\l\
|if\ (oid\ !=\ 0B)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_34_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|buf\ =\ malloc\ (100);\l\
|if\ (buf\ ==\ 0B)\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_34_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|_1\ =\ oid_to_hex\ (oid);\l\
|printf\ (\"unable\ to\ read\ tree\ %s\",\ _1);\l\
|exit\ (1);\l\
}"];

	fn_34_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|init_tree_desc\ (desc,\ buf,\ size);\l\
|return;\l\
}"];

	fn_34_basic_block_0:s -> fn_34_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_34_basic_block_2:s -> fn_34_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_34_basic_block_2:s -> fn_34_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_34_basic_block_3:s -> fn_34_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_34_basic_block_3:s -> fn_34_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_34_basic_block_5:s -> fn_34_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_34_basic_block_0:s -> fn_34_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_main" {
	style="dashed";
	color="black";
	label="main ()";
	fn_36_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_36_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_36_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|reset_index\ (&oid,\ type,\ quiet);\l\
|D.3434\ =\ 0;\l\
|oid\ =\ \{CLOBBER\};\l\
|return\ D.3434;\l\
}"];

	fn_36_basic_block_0:s -> fn_36_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_36_basic_block_2:s -> fn_36_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_36_basic_block_0:s -> fn_36_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_reset_index" {
	style="dashed";
	color="black";
	label="reset_index ()";
	fn_35_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_35_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_35_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|nr\ =\ 0;\l\
|memset\ (&opts,\ 0,\ 640);\l\
|opts.head_idx\ =\ 1;\l\
|opts.src_index\ =\ &the_index;\l\
|opts.dst_index\ =\ &the_index;\l\
|opts.fn\ =\ oneway_merge;\l\
|opts.merge\ =\ 1;\l\
|if\ (quiet\ ==\ 0)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_35_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|opts.verbose_update\ =\ 1;\l\
}"];

	fn_35_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|switch\ (reset_type)\ \<default:\ \<L5\>\ [INV],\ case\ 2:\ \<L4\>\ [INV],\ case\ 3\ ...\ 4:\ \<L2\>\ [INV]\>\l\
}"];

	fn_35_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|\<L2\>:\l\
|opts.update\ =\ 1;\l\
goto\ \<bb\ 8\>;\ [INV]\l\
}"];

	fn_35_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|\<L4\>:\l\
|opts.update\ =\ 1;\l\
}"];

	fn_35_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|\<L5\>:\l\
|opts.reset\ =\ 1;\l\
}"];

	fn_35_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|read_cache_unmerged\ ();\l\
|if\ (reset_type\ ==\ 4)\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 12\>;\ [INV]\l\
}"];

	fn_35_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|_1\ =\ get_oid\ (\"HEAD\",\ &head_oid);\l\
|if\ (_1\ !=\ 0)\l\
\ \ goto\ \<bb\ 10\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 11\>;\ [INV]\l\
}"];

	fn_35_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 10\>:\l\
|_2\ =\ _\ (\"You\ do\ not\ have\ a\ valid\ HEAD.\");\l\
|D.3443\ =\ error\ (_2);\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
|head_oid\ =\ \{CLOBBER\};\l\
goto\ \<bb\ 17\>;\ [INV]\l\
}"];

	fn_35_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 11\>:\l\
|_3\ =\ (long\ unsigned\ int)\ nr;\l\
|_4\ =\ _3\ *\ 40;\l\
|_5\ =\ &desc\ +\ _4;\l\
|fill_tree_descriptor\ (_5,\ &head_oid);\l\
|nr\ =\ nr\ +\ 1;\l\
|opts.fn\ =\ twoway_merge;\l\
|head_oid\ =\ \{CLOBBER\};\l\
}"];

	fn_35_basic_block_12 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 12\>:\l\
|_6\ =\ (long\ unsigned\ int)\ nr;\l\
|_7\ =\ _6\ *\ 40;\l\
|_8\ =\ &desc\ +\ _7;\l\
|fill_tree_descriptor\ (_8,\ oid);\l\
|nr\ =\ nr\ +\ 1;\l\
|_9\ =\ desc[nr].buffer;\l\
|printf\ (\"%d\\n\",\ _9);\l\
|nr.1_10\ =\ (unsigned\ int)\ nr;\l\
|_11\ =\ unpack_trees\ (nr.1_10,\ &desc,\ &opts);\l\
|if\ (_11\ !=\ 0)\l\
\ \ goto\ \<bb\ 13\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 14\>;\ [INV]\l\
}"];

	fn_35_basic_block_13 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 13\>:\l\
|D.3443\ =\ -1;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 17\>;\ [INV]\l\
}"];

	fn_35_basic_block_14 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 14\>:\l\
|_12\ =\ reset_type\ ==\ 0;\l\
|_13\ =\ reset_type\ ==\ 2;\l\
|_14\ =\ _12\ \|\ _13;\l\
|if\ (_14\ !=\ 0)\l\
\ \ goto\ \<bb\ 15\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 16\>;\ [INV]\l\
}"];

	fn_35_basic_block_15 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 15\>:\l\
|_15\ =\ parse_tree_indirect\ (oid);\l\
|_16\ =\ (long\ int)\ _15;\l\
|tree\ =\ (struct\ tree\ *)\ _16;\l\
|prime_cache_tree\ (&the_index,\ tree);\l\
}"];

	fn_35_basic_block_16 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 16\>:\l\
|D.3443\ =\ 0;\l\
}"];

	fn_35_basic_block_17 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 17\>:\l\
|desc\ =\ \{CLOBBER\};\l\
|opts\ =\ \{CLOBBER\};\l\
|return\ D.3443;\l\
}"];

	fn_35_basic_block_0:s -> fn_35_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_35_basic_block_2:s -> fn_35_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_35_basic_block_2:s -> fn_35_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_35_basic_block_3:s -> fn_35_basic_block_4:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_35_basic_block_4:s -> fn_35_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_35_basic_block_4:s -> fn_35_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_35_basic_block_4:s -> fn_35_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_35_basic_block_5:s -> fn_35_basic_block_8:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_35_basic_block_6:s -> fn_35_basic_block_7:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_35_basic_block_7:s -> fn_35_basic_block_8:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_35_basic_block_8:s -> fn_35_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_35_basic_block_8:s -> fn_35_basic_block_12:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_35_basic_block_9:s -> fn_35_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_35_basic_block_9:s -> fn_35_basic_block_11:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_35_basic_block_10:s -> fn_35_basic_block_17:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_35_basic_block_11:s -> fn_35_basic_block_12:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_35_basic_block_12:s -> fn_35_basic_block_13:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_35_basic_block_12:s -> fn_35_basic_block_14:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_35_basic_block_13:s -> fn_35_basic_block_17:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_35_basic_block_14:s -> fn_35_basic_block_15:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_35_basic_block_14:s -> fn_35_basic_block_16:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_35_basic_block_15:s -> fn_35_basic_block_16:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_35_basic_block_16:s -> fn_35_basic_block_17:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_35_basic_block_17:s -> fn_35_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_35_basic_block_0:s -> fn_35_basic_block_1:n [style="invis",constraint=true];
}
}
