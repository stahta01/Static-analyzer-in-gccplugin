
;; Function discard_cleanups (discard_cleanups, funcdef_no=45, decl_uid=3162, cgraph_uid=45, symbol_order=50)

discard_cleanups (struct cleanup * old_chain)
{
  discard_my_cleanups (&cleanup_chain, old_chain);
}



;; Function discard_final_cleanups (discard_final_cleanups, funcdef_no=46, decl_uid=3167, cgraph_uid=46, symbol_order=51)

discard_final_cleanups (struct cleanup * old_chain)
{
  discard_my_cleanups (&final_cleanup_chain, old_chain);
}



;; Function discard_my_cleanups (discard_my_cleanups, funcdef_no=47, decl_uid=3165, cgraph_uid=47, symbol_order=52)

discard_my_cleanups (struct cleanup * * pmy_chain, struct cleanup * old_chain)
{
  struct cleanup * ptr;

  goto <D.3198>;
  <D.3197>:
  _1 = ptr->next;
  *pmy_chain = _1;
  _2 = ptr->free_arg;
  if (_2 != 0B) goto <D.3285>; else goto <D.3286>;
  <D.3285>:
  _3 = ptr->free_arg;
  _4 = ptr->arg;
  _3 (_4);
  <D.3286>:
  free (ptr);
  <D.3198>:
  ptr = *pmy_chain;
  if (ptr != old_chain) goto <D.3197>; else goto <D.3199>;
  <D.3199>:
  _5 = ptr->arg;
  printf ("freearg: %x\n", _5);
}



;; Function printf (<unset-asm-name>, funcdef_no=15, decl_uid=798, cgraph_uid=15, symbol_order=15)

__attribute__((__artificial__, __gnu_inline__, __always_inline__))
printf (const char * restrict __fmt)
{
  int D.3287;

  D.3287 = __printf_chk (1, __fmt, __builtin_va_arg_pack ());
  return D.3287;
}



;; Function do_cleanups (do_cleanups, funcdef_no=49, decl_uid=3172, cgraph_uid=49, symbol_order=54)

do_cleanups (struct cleanup * old_chain)
{
  do_my_cleanups (&cleanup_chain, old_chain);
}



;; Function do_my_cleanups (do_my_cleanups, funcdef_no=48, decl_uid=3170, cgraph_uid=48, symbol_order=53)

do_my_cleanups (struct cleanup * * pmy_chain, struct cleanup * old_chain)
{
  struct cleanup * ptr;

  goto <D.3206>;
  <D.3205>:
  _1 = ptr->next;
  *pmy_chain = _1;
  _2 = ptr->function;
  _3 = ptr->arg;
  _2 (_3);
  printf ("cleanup!!!!! =========\n");
  _4 = ptr->arg;
  printf ("%x\n", _4);
  _5 = ptr->free_arg;
  if (_5 != 0B) goto <D.3289>; else goto <D.3290>;
  <D.3289>:
  _6 = ptr->free_arg;
  _7 = ptr->arg;
  _6 (_7);
  <D.3290>:
  free (ptr);
  <D.3206>:
  ptr = *pmy_chain;
  if (ptr != old_chain) goto <D.3205>; else goto <D.3207>;
  <D.3207>:
}



;; Function make_cleanup (make_cleanup, funcdef_no=52, decl_uid=3185, cgraph_uid=52, symbol_order=57)

make_cleanup (void (*<Ta1d>) (void *) function, void * arg)
{
  struct cleanup * D.3291;

  D.3291 = make_my_cleanup (&cleanup_chain, function, arg);
  return D.3291;
}



;; Function make_my_cleanup (make_my_cleanup, funcdef_no=51, decl_uid=3182, cgraph_uid=51, symbol_order=56)

make_my_cleanup (struct cleanup * * pmy_chain, void (*<Ta1d>) (void *) function, void * arg)
{
  struct cleanup * D.3293;

  D.3293 = make_my_cleanup2 (pmy_chain, function, arg, 0B);
  return D.3293;
}



;; Function make_my_cleanup2 (make_my_cleanup2, funcdef_no=50, decl_uid=3178, cgraph_uid=50, symbol_order=55)

make_my_cleanup2 (struct cleanup * * pmy_chain, void (*<Ta1d>) (void *) function, void * arg, void (*<Ted>) (void *) free_arg)
{
  struct cleanup * D.3297;
  struct cleanup * new;
  struct cleanup * old_chain;

  new = malloc (32);
  old_chain = *pmy_chain;
  _1 = *pmy_chain;
  new->next = _1;
  new->function = function;
  new->free_arg = free_arg;
  new->arg = arg;
  *pmy_chain = new;
  if (old_chain == 0B) goto <D.3295>; else goto <D.3296>;
  <D.3295>:
  exit (1);
  <D.3296>:
  D.3297 = old_chain;
  return D.3297;
}



;; Function xrealloc (xrealloc, funcdef_no=53, decl_uid=3240, cgraph_uid=53, symbol_order=58)

xrealloc (void * oldmem, size_t size)
{
  void * D.3306;
  void * newmem;

  if (size == 0) goto <D.3299>; else goto <D.3300>;
  <D.3299>:
  size = 1;
  <D.3300>:
  if (oldmem == 0B) goto <D.3301>; else goto <D.3302>;
  <D.3301>:
  newmem = malloc (size);
  goto <D.3303>;
  <D.3302>:
  newmem = realloc (oldmem, size);
  <D.3303>:
  if (newmem == 0B) goto <D.3304>; else goto <D.3305>;
  <D.3304>:
  exit (1);
  <D.3305>:
  D.3306 = newmem;
  return D.3306;
}



;; Function remote_filename_p (remote_filename_p, funcdef_no=54, decl_uid=3244, cgraph_uid=54, symbol_order=59)

remote_filename_p (const char * filename)
{
  int D.3308;
  extern int strncmp ();

  _1 = strncmp (filename, "remote:", 7);
  _2 = _1 == 0;
  D.3308 = (int) _2;
  return D.3308;
}



;; Function rs6000_aix_ld_info_to_xml (rs6000_aix_ld_info_to_xml, funcdef_no=57, decl_uid=3265, cgraph_uid=57, symbol_order=62)

rs6000_aix_ld_info_to_xml (const gdb_byte * ldi_buf)
{
  ULONGEST D.3310;
  int i;

  _1 = *ldi_buf;
  i = (int) _1;
  D.3310 = (ULONGEST) i;
  return D.3310;
}



;; Function main (main, funcdef_no=59, decl_uid=3275, cgraph_uid=59, symbol_order=64)

main ()
{
  gdb_byte * iftmp.0;
  int D.3316;

  {
    time_t t;
    extern int time ();
    char buf[10];
    int len;
    gdb_byte * writebuf;
    ULONGEST * xfered_len;

    try
      {
        _1 = time (&t);
        _2 = (unsigned int) _1;
        srand (_2);
        xfered_len = &len;
        _3 = rand ();
        _4 = _3 % 2;
        if (_4 == 1) goto <D.3313>; else goto <D.3314>;
        <D.3313>:
        iftmp.0 = &buf;
        goto <D.3315>;
        <D.3314>:
        iftmp.0 = 0B;
        <D.3315>:
        writebuf = iftmp.0;
        rs6000_xfer_shared_libraries (writebuf, xfered_len);
      }
    finally
      {
        t = {CLOBBER};
        buf = {CLOBBER};
        len = {CLOBBER};
      }
  }
  D.3316 = 0;
  return D.3316;
}



;; Function rs6000_xfer_shared_libraries (rs6000_xfer_shared_libraries, funcdef_no=58, decl_uid=3270, cgraph_uid=58, symbol_order=63)

rs6000_xfer_shared_libraries (const gdb_byte * writebuf, ULONGEST * xfered_len)
{
  target_xfer_status D.3320;
  gdb_byte * ldi_buf;
  ULONGEST result;
  struct cleanup * cleanup;

  if (writebuf != 0B) goto <D.3318>; else goto <D.3319>;
  <D.3318>:
  D.3320 = -1;
  return D.3320;
  <D.3319>:
  ldi_buf = rs6000_ptrace_ldinfo ();
  if (ldi_buf == 0B) goto <D.3321>; else goto <D.3322>;
  <D.3321>:
  exit (1);
  <D.3322>:
  cleanup = make_cleanup (free, ldi_buf);
  result = rs6000_aix_ld_info_to_xml (ldi_buf);
  free (ldi_buf);
  do_cleanups (cleanup);
  if (result == 0) goto <D.3323>; else goto <D.3324>;
  <D.3323>:
  D.3320 = 0;
  return D.3320;
  <D.3324>:
  *xfered_len = result;
  D.3320 = 1;
  return D.3320;
}



;; Function rs6000_ptrace_ldinfo (rs6000_ptrace_ldinfo, funcdef_no=56, decl_uid=3256, cgraph_uid=56, symbol_order=61)

rs6000_ptrace_ldinfo ()
{
  gdb_byte * D.3327;
  const int pid;
  int ldi_size;
  void * ldi;
  int rc;

  pid = 1;
  ldi_size = 1024;
  _1 = (long unsigned int) ldi_size;
  ldi = malloc (_1);
  rc = -1;
  <D.3263>:
  ldi.1_2 = (long long int) ldi;
  rc = rs6000_ptrace64 (1, pid, ldi.1_2, ldi_size, 0B);
  if (rc != -1) goto <D.3262>; else goto <D.3326>;
  <D.3326>:
  ldi_size = ldi_size * 2;
  _3 = (long unsigned int) ldi_size;
  ldi = xrealloc (ldi, _3);
  goto <D.3263>;
  <D.3262>:
  D.3327 = ldi;
  return D.3327;
}



;; Function rs6000_ptrace64 (rs6000_ptrace64, funcdef_no=55, decl_uid=3252, cgraph_uid=55, symbol_order=60)

rs6000_ptrace64 (int req, int id, long long int addr, int data, void * buf)
{
  int iftmp.3;
  int D.3333;
  int i;
  int ret;

  addr.2_1 = (int *) addr;
  i = *addr.2_1;
  _2 = rand ();
  _3 = _2 % 2;
  if (_3 == 1) goto <D.3330>; else goto <D.3331>;
  <D.3330>:
  iftmp.3 = 1;
  goto <D.3332>;
  <D.3331>:
  iftmp.3 = -1;
  <D.3332>:
  ret = iftmp.3;
  D.3333 = ret;
  return D.3333;
}


