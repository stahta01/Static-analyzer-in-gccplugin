
;; Function ASYNC_WAIT_CTX_get_all_fds (ASYNC_WAIT_CTX_get_all_fds, funcdef_no=22, decl_uid=3581, cgraph_uid=23, symbol_order=22)

Merging blocks 9 and 10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 8, multiple latches: 4 7
;;  depth 1, outer 0
;;  nodes: 8 4 7 5 6 3
;; 2 succs { 8 }
;; 3 succs { 4 5 }
;; 4 succs { 8 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 3 9 }
;; 9 succs { 1 }
int ASYNC_WAIT_CTX_get_all_fds (struct ASYNC_WAIT_CTX * ctx, int * fd, size_t * numfds)
{
  struct fd_lookup_st * curr;
  int D.3611;

  <bb 2> :
  curr = ctx->fds;
  *numfds = 0;
  goto <bb 8>; [INV]

  <bb 3> :
  _1 = curr->del;
  if (_1 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  curr = curr->next;
  // predicted unlikely by continue predictor.
  goto <bb 8>; [INV]

  <bb 5> :
  if (fd != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  _2 = curr->fd;
  *fd = _2;
  fd = fd + 4;

  <bb 7> :
  _3 = *numfds;
  _4 = _3 + 1;
  *numfds = _4;
  curr = curr->next;

  <bb 8> :
  if (curr != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  D.3611 = 1;
  return D.3611;

}



;; Function SSL_get_all_async_fds (SSL_get_all_async_fds, funcdef_no=23, decl_uid=3590, cgraph_uid=24, symbol_order=23)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
int SSL_get_all_async_fds (struct SSL * s, int * fds, size_t * numfds)
{
  struct ASYNC_WAIT_CTX * ctx;
  int D.3615;

  <bb 2> :
  ctx = s->waitctx;
  if (ctx == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3615 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  D.3615 = ASYNC_WAIT_CTX_get_all_fds (ctx, fds, numfds);

  <bb 5> :
  return D.3615;

}



;; Function wait_for_async (wait_for_async, funcdef_no=24, decl_uid=3594, cgraph_uid=25, symbol_order=24)

Removing basic block 8
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 11, latch 10
;;  depth 1, outer 0
;;  nodes: 11 10 8 9
;; 2 succs { 3 4 }
;; 3 succs { 13 }
;; 4 succs { 5 6 }
;; 5 succs { 13 }
;; 6 succs { 7 11 }
;; 7 succs { 11 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 8 12 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
void wait_for_async (struct SSL * s)
{
  size_t numfds;
  int * fds;
  struct fd_set asyncfds;
  int width;
  int D.3625;

  <bb 2> :
  width = 0;
  _1 = SSL_get_all_async_fds (s, 0B, &numfds);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 4> :
  numfds.0_2 = numfds;
  if (numfds.0_2 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 13>; [INV]

  <bb 6> :
  numfds.1_3 = numfds;
  _4 = numfds.1_3 * 4;
  fds = malloc (_4);
  _5 = SSL_get_all_async_fds (s, fds, &numfds);
  if (_5 == 0)
    goto <bb 7>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 7> :
  free (fds);
  goto <bb 11>; [INV]

  <bb 8> :
  _6 = *fds;
  if (width <= _6)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 9> :
  _7 = *fds;
  width = _7 + 1;

  <bb 10> :
  _8 = *fds;
  D.3625 = _8 / 64;
  _9 = asyncfds.__fds_bits[D.3625];
  _10 = *fds;
  _11 = _10 & 63;
  _12 = 1 << _11;
  _13 = (long int) _12;
  _14 = _9 | _13;
  asyncfds.__fds_bits[D.3625] = _14;
  numfds.2_15 = numfds;
  _16 = numfds.2_15 + 18446744073709551615;
  numfds = _16;
  fds = fds + 4;

  <bb 11> :
  numfds.3_17 = numfds;
  if (numfds.3_17 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  select (width, &asyncfds, 0B, 0B, 0B);
  asyncfds = {CLOBBER};
  numfds = {CLOBBER};
  goto <bb 14>; [INV]

  <bb 13> :
  asyncfds = {CLOBBER};
  numfds = {CLOBBER};

  <bb 14> :
  return;

}



;; Function main (main, funcdef_no=25, decl_uid=3603, cgraph_uid=26, symbol_order=25)

Removing basic block 4
Merging blocks 2 and 3
Merging blocks 2 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
int main ()
{
  struct SSL s;
  int D.3629;

  <bb 2> :
  wait_for_async (&s);
  D.3629 = 0;
  s = {CLOBBER};
  return D.3629;

}


