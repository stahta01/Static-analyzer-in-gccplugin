digraph "test.o-binutils_df_2.c.015t.cfg" {
overlap=false;
subgraph "cluster_discard_cleanups" {
	style="dashed";
	color="black";
	label="discard_cleanups ()";
	fn_22_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_22_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_22_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|discard_my_cleanups\ (&cleanup_chain,\ old_chain);\l\
|return;\l\
}"];

	fn_22_basic_block_0:s -> fn_22_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_22_basic_block_2:s -> fn_22_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_0:s -> fn_22_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_discard_final_cleanups" {
	style="dashed";
	color="black";
	label="discard_final_cleanups ()";
	fn_23_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_23_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_23_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|discard_my_cleanups\ (&final_cleanup_chain,\ old_chain);\l\
|return;\l\
}"];

	fn_23_basic_block_0:s -> fn_23_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_23_basic_block_2:s -> fn_23_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_0:s -> fn_23_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_discard_my_cleanups" {
	style="dashed";
	color="black";
	label="discard_my_cleanups ()";
	subgraph cluster_24_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	fn_24_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|ptr\ =\ *pmy_chain;\l\
|if\ (ptr\ !=\ old_chain)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_24_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|_1\ =\ ptr-\>next;\l\
|*pmy_chain\ =\ _1;\l\
|_2\ =\ ptr-\>free_arg;\l\
|if\ (_2\ !=\ 0B)\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_24_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|_3\ =\ ptr-\>free_arg;\l\
|_4\ =\ ptr-\>arg;\l\
|_3\ (_4);\l\
}"];

	fn_24_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|free\ (ptr);\l\
}"];

	}
	fn_24_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_24_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_24_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_24_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|_5\ =\ ptr-\>arg;\l\
|printf\ (\"freearg:\ %x\\n\",\ _5);\l\
|return;\l\
}"];

	fn_24_basic_block_0:s -> fn_24_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_24_basic_block_2:s -> fn_24_basic_block_6:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_24_basic_block_3:s -> fn_24_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_24_basic_block_3:s -> fn_24_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_24_basic_block_4:s -> fn_24_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_24_basic_block_5:s -> fn_24_basic_block_6:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_24_basic_block_6:s -> fn_24_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_24_basic_block_6:s -> fn_24_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_24_basic_block_7:s -> fn_24_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_24_basic_block_0:s -> fn_24_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_do_cleanups" {
	style="dashed";
	color="black";
	label="do_cleanups ()";
	fn_26_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_26_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_26_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|do_my_cleanups\ (&cleanup_chain,\ old_chain);\l\
|return;\l\
}"];

	fn_26_basic_block_0:s -> fn_26_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_2:s -> fn_26_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_0:s -> fn_26_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_do_my_cleanups" {
	style="dashed";
	color="black";
	label="do_my_cleanups ()";
	subgraph cluster_25_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	fn_25_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|ptr\ =\ *pmy_chain;\l\
|if\ (ptr\ !=\ old_chain)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_25_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|_1\ =\ ptr-\>next;\l\
|*pmy_chain\ =\ _1;\l\
|_2\ =\ ptr-\>function;\l\
|_3\ =\ ptr-\>arg;\l\
|_2\ (_3);\l\
|__builtin_puts\ (&\"cleanup!!!!!\ =========\"[0]);\l\
|_4\ =\ ptr-\>arg;\l\
|printf\ (\"%x\\n\",\ _4);\l\
|_5\ =\ ptr-\>free_arg;\l\
|if\ (_5\ !=\ 0B)\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_25_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|_6\ =\ ptr-\>free_arg;\l\
|_7\ =\ ptr-\>arg;\l\
|_6\ (_7);\l\
}"];

	fn_25_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|free\ (ptr);\l\
}"];

	}
	fn_25_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_25_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_25_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_25_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|return;\l\
}"];

	fn_25_basic_block_0:s -> fn_25_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_2:s -> fn_25_basic_block_6:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_3:s -> fn_25_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_3:s -> fn_25_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_4:s -> fn_25_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_5:s -> fn_25_basic_block_6:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_25_basic_block_6:s -> fn_25_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_6:s -> fn_25_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_7:s -> fn_25_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_0:s -> fn_25_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_make_cleanup" {
	style="dashed";
	color="black";
	label="make_cleanup ()";
	fn_29_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_29_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_29_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|D.3510\ =\ make_my_cleanup\ (&cleanup_chain,\ function,\ arg);\l\
|return\ D.3510;\l\
}"];

	fn_29_basic_block_0:s -> fn_29_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_29_basic_block_2:s -> fn_29_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_0:s -> fn_29_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_make_my_cleanup" {
	style="dashed";
	color="black";
	label="make_my_cleanup ()";
	fn_28_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_28_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_28_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|D.3512\ =\ make_my_cleanup2\ (pmy_chain,\ function,\ arg,\ 0B);\l\
|return\ D.3512;\l\
}"];

	fn_28_basic_block_0:s -> fn_28_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_2:s -> fn_28_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_0:s -> fn_28_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_make_my_cleanup2" {
	style="dashed";
	color="black";
	label="make_my_cleanup2 ()";
	fn_27_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_27_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_27_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|new\ =\ malloc\ (32);\l\
|old_chain\ =\ *pmy_chain;\l\
|_1\ =\ *pmy_chain;\l\
|new-\>next\ =\ _1;\l\
|new-\>function\ =\ function;\l\
|new-\>free_arg\ =\ free_arg;\l\
|new-\>arg\ =\ arg;\l\
|*pmy_chain\ =\ new;\l\
|if\ (old_chain\ ==\ 0B)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_27_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|exit\ (1);\l\
}"];

	fn_27_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|D.3516\ =\ old_chain;\l\
|return\ D.3516;\l\
}"];

	fn_27_basic_block_0:s -> fn_27_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_2:s -> fn_27_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_2:s -> fn_27_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_4:s -> fn_27_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_0:s -> fn_27_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster__bfd_elf_link_read_relocs" {
	style="dashed";
	color="black";
	label="_bfd_elf_link_read_relocs ()";
	fn_30_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_30_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_30_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|alloc2\ =\ 0B;\l\
|_1\ =\ rand\ ();\l\
|_2\ =\ _1\ %\ 2;\l\
|if\ (_2\ ==\ 1)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_30_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|_3\ =\ abfd-\>memory;\l\
|if\ (_3\ !=\ 0B)\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_30_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|__builtin_puts\ (&\"cached\ memory(abfd-\>memory)\ is\ returned\"[0]);\l\
|D.3522\ =\ abfd-\>memory;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 15\>;\ [INV]\l\
}"];

	fn_30_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|if\ (internal_relocs\ ==\ 0B)\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 10\>;\ [INV]\l\
}"];

	fn_30_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|alloc2\ =\ malloc\ (4);\l\
|internal_relocs\ =\ alloc2;\l\
|if\ (keep_memory\ !=\ 0)\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
}"];

	fn_30_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|abfd-\>memory\ =\ alloc2;\l\
}"];

	fn_30_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|if\ (internal_relocs\ ==\ 0B)\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 10\>;\ [INV]\l\
}"];

	fn_30_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|//\ predicted\ unlikely\ by\ goto\ predictor.\l\
goto\ \<bb\ 12\>;\ [INV]\l\
}"];

	fn_30_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 10\>:\l\
|if\ (alloc1\ ==\ 0B)\l\
\ \ goto\ \<bb\ 11\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 12\>;\ [INV]\l\
}"];

	fn_30_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 11\>:\l\
|D.3522\ =\ internal_relocs;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 15\>;\ [INV]\l\
}"];

	fn_30_basic_block_12 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 12\>:\l\
|error_return:\l\
|if\ (keep_memory\ !=\ 0)\l\
\ \ goto\ \<bb\ 13\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 14\>;\ [INV]\l\
}"];

	fn_30_basic_block_13 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 13\>:\l\
|abfd-\>memory\ =\ 0B;\l\
}"];

	fn_30_basic_block_14 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 14\>:\l\
|D.3522\ =\ 0B;\l\
}"];

	fn_30_basic_block_15 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 15\>:\l\
|return\ D.3522;\l\
}"];

	fn_30_basic_block_0:s -> fn_30_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_2:s -> fn_30_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_2:s -> fn_30_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_3:s -> fn_30_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_3:s -> fn_30_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_4:s -> fn_30_basic_block_15:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_5:s -> fn_30_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_5:s -> fn_30_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_6:s -> fn_30_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_6:s -> fn_30_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_7:s -> fn_30_basic_block_8:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_8:s -> fn_30_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_8:s -> fn_30_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_9:s -> fn_30_basic_block_12:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_10:s -> fn_30_basic_block_11:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_10:s -> fn_30_basic_block_12:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_11:s -> fn_30_basic_block_15:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_12:s -> fn_30_basic_block_13:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_12:s -> fn_30_basic_block_14:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_13:s -> fn_30_basic_block_14:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_14:s -> fn_30_basic_block_15:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_15:s -> fn_30_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_0:s -> fn_30_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_main" {
	style="dashed";
	color="black";
	label="main ()";
	fn_33_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_33_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_33_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|_1\ =\ time\ (&t);\l\
|_2\ =\ (unsigned\ int)\ _1;\l\
|srand\ (_2);\l\
|symval\ =\ 1;\l\
|_3\ =\ malloc\ (4);\l\
|bfd.memory\ =\ _3;\l\
|_4\ =\ rand\ ();\l\
|_5\ =\ _4\ %\ 2;\l\
|_6\ =\ _5\ ==\ 1;\l\
|_7\ =\ (int)\ _6;\l\
|link_info.keep_memory\ =\ _7;\l\
|info.abfd\ =\ &bfd;\l\
|info.link_info\ =\ &link_info;\l\
|_8\ =\ link_info.keep_memory;\l\
|printf\ (\"keep_memory:\ %d\\n\",\ _8);\l\
|elf64_alpha_relax_with_lituse\ (&info,\ symval);\l\
|_9\ =\ bfd.memory;\l\
|MEM[(int\ *)_9]\ =\ 1;\l\
|_10\ =\ bfd.memory;\l\
|free\ (_10);\l\
|t\ =\ \{CLOBBER\};\l\
|info\ =\ \{CLOBBER\};\l\
|bfd\ =\ \{CLOBBER\};\l\
|link_info\ =\ \{CLOBBER\};\l\
|D.3534\ =\ 0;\l\
|return\ D.3534;\l\
}"];

	fn_33_basic_block_0:s -> fn_33_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_33_basic_block_2:s -> fn_33_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_0:s -> fn_33_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_elf64_alpha_relax_with_lituse" {
	style="dashed";
	color="black";
	label="elf64_alpha_relax_with_lituse ()";
	fn_32_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_32_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_32_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|abfd\ =\ info-\>abfd;\l\
|_1\ =\ info-\>link_info;\l\
|_2\ =\ _1-\>keep_memory;\l\
|internal_relocs\ =\ _bfd_elf_link_read_relocs\ (abfd,\ 0B,\ _2);\l\
|optdest\ =\ elf64_alpha_relax_opt_call\ (info,\ symval);\l\
|free\ (internal_relocs);\l\
|return;\l\
}"];

	fn_32_basic_block_0:s -> fn_32_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_32_basic_block_2:s -> fn_32_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_0:s -> fn_32_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_elf64_alpha_relax_opt_call" {
	style="dashed";
	color="black";
	label="elf64_alpha_relax_opt_call ()";
	fn_31_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_31_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_31_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|_1\ =\ info-\>link_info;\l\
|_2\ =\ _1-\>keep_memory;\l\
|_3\ =\ info-\>abfd;\l\
|tsec_relocs\ =\ _bfd_elf_link_read_relocs\ (_3,\ 0B,\ _2);\l\
|if\ (tsec_relocs\ ==\ 0B)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_31_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|D.3538\ =\ 0;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 10\>;\ [INV]\l\
}"];

	fn_31_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|MEM[(int\ *)tsec_relocs]\ =\ 1;\l\
|_4\ =\ info-\>link_info;\l\
|_5\ =\ _4-\>keep_memory;\l\
|if\ (_5\ ==\ 0)\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_31_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|iftmp.0\ =\ tsec_relocs;\l\
goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_31_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|iftmp.0\ =\ 0B;\l\
}"];

	fn_31_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|tsec_free\ =\ iftmp.0;\l\
|if\ (tsec_free\ !=\ 0B)\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
}"];

	fn_31_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|free\ (tsec_free);\l\
}"];

	fn_31_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|D.3538\ =\ 0;\l\
}"];

	fn_31_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 10\>:\l\
|return\ D.3538;\l\
}"];

	fn_31_basic_block_0:s -> fn_31_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_2:s -> fn_31_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_2:s -> fn_31_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_3:s -> fn_31_basic_block_10:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_4:s -> fn_31_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_4:s -> fn_31_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_5:s -> fn_31_basic_block_7:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_6:s -> fn_31_basic_block_7:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_7:s -> fn_31_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_7:s -> fn_31_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_8:s -> fn_31_basic_block_9:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_9:s -> fn_31_basic_block_10:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_10:s -> fn_31_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_0:s -> fn_31_basic_block_1:n [style="invis",constraint=true];
}
}
