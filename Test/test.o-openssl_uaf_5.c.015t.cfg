
;; Function pitem_new (pitem_new, funcdef_no=22, decl_uid=3587, cgraph_uid=23, symbol_order=22)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pitem * pitem_new (unsigned char * prio64be, void * data)
{
  long unsigned int D.3677;
  struct pitem * item;
  struct pitem * D.3675;

  <bb 2> :
  item = malloc (24);
  if (item == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3675 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  _1 = &item->priority;
  D.3677 = MEM <long unsigned int> [(char * {ref-all})prio64be];
  MEM <long unsigned int> [(char * {ref-all})_1] = D.3677;
  item->data = data;
  item->next = 0B;
  D.3675 = item;

  <bb 5> :
  return D.3675;

}



;; Function pitem_free (pitem_free, funcdef_no=23, decl_uid=3592, cgraph_uid=24, symbol_order=23)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void pitem_free (struct pitem * item)
{
  <bb 2> :
  if (item == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  free (item);

  <bb 5> :
  return;

}



;; Function pqueue_new (pqueue_new, funcdef_no=24, decl_uid=3594, cgraph_uid=25, symbol_order=24)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
struct pqueue_s * pqueue_new ()
{
  struct pqueue_s * pq;
  struct pqueue_s * D.3683;

  <bb 2> :
  pq = malloc (16);
  if (pq == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3683 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  memset (pq, 0, 16);
  D.3683 = pq;

  <bb 5> :
  return D.3683;

}



;; Function pqueue_free (pqueue_free, funcdef_no=25, decl_uid=3599, cgraph_uid=26, symbol_order=25)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
void pqueue_free (struct pqueue_s * pq)
{
  <bb 2> :
  if (pq == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 5>; [INV]

  <bb 4> :
  free (pq);

  <bb 5> :
  return;

}



;; Function pqueue_insert (pqueue_insert, funcdef_no=26, decl_uid=3603, cgraph_uid=27, symbol_order=26)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12 10 5
;; 2 succs { 3 4 }
;; 3 succs { 15 }
;; 4 succs { 13 }
;; 5 succs { 6 10 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 15 }
;; 10 succs { 11 12 }
;; 11 succs { 15 }
;; 12 succs { 13 }
;; 13 succs { 5 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
struct pitem * pqueue_insert (struct pqueue_s * pq, struct pitem * item)
{
  int cmp;
  struct pitem * next;
  struct pitem * curr;
  struct pitem * D.3690;

  <bb 2> :
  _1 = pq->items;
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  pq->items = item;
  D.3690 = item;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 4> :
  curr = 0B;
  next = pq->items;
  goto <bb 13>; [INV]

  <bb 5> :
  _2 = &item->priority;
  _3 = &next->priority;
  cmp = memcmp (_3, _2, 8);
  if (cmp > 0)
    goto <bb 6>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 6> :
  item->next = next;
  if (curr == 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  pq->items = item;
  goto <bb 9>; [INV]

  <bb 8> :
  curr->next = item;

  <bb 9> :
  D.3690 = item;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 10> :
  if (cmp == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  D.3690 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 12> :
  curr = next;
  next = next->next;

  <bb 13> :
  if (next != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  item->next = 0B;
  curr->next = item;
  D.3690 = item;

  <bb 15> :
  return D.3690;

}



;; Function pqueue_peek (pqueue_peek, funcdef_no=27, decl_uid=3614, cgraph_uid=28, symbol_order=27)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
struct pitem * pqueue_peek (struct pqueue_s * pq)
{
  struct pitem * D.3699;

  <bb 2> :
  D.3699 = pq->items;
  return D.3699;

}



;; Function pqueue_pop (pqueue_pop, funcdef_no=28, decl_uid=3617, cgraph_uid=29, symbol_order=28)

Merging blocks 4 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
struct pitem * pqueue_pop (struct pqueue_s * pq)
{
  struct pitem * item;
  struct pitem * D.3703;

  <bb 2> :
  item = pq->items;
  _1 = pq->items;
  if (_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _2 = pq->items;
  _3 = _2->next;
  pq->items = _3;

  <bb 4> :
  D.3703 = item;
  return D.3703;

}



;; Function pqueue_find (pqueue_find, funcdef_no=29, decl_uid=3622, cgraph_uid=30, symbol_order=29)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5
;; 2 succs { 3 4 }
;; 3 succs { 14 }
;; 4 succs { 8 }
;; 5 succs { 6 7 }
;; 6 succs { 9 }
;; 7 succs { 8 }
;; 8 succs { 5 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }
struct pitem * pqueue_find (struct pqueue_s * pq, unsigned char * prio64be)
{
  struct pitem * found;
  struct pitem * next;
  struct pitem * D.3707;

  <bb 2> :
  found = 0B;
  _1 = pq->items;
  if (_1 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3707 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]

  <bb 4> :
  next = pq->items;
  goto <bb 8>; [INV]

  <bb 5> :
  _2 = &next->priority;
  _3 = memcmp (_2, prio64be, 8);
  if (_3 == 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  found = next;
  goto <bb 9>; [INV]

  <bb 7> :
  next = next->next;

  <bb 8> :
  _4 = next->next;
  if (_4 != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  _5 = &next->priority;
  _6 = memcmp (_5, prio64be, 8);
  if (_6 == 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 10> :
  found = next;

  <bb 11> :
  if (found == 0B)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]

  <bb 12> :
  D.3707 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]

  <bb 13> :
  D.3707 = found;

  <bb 14> :
  return D.3707;

}



;; Function pqueue_print (pqueue_print, funcdef_no=30, decl_uid=3633, cgraph_uid=31, symbol_order=30)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
void pqueue_print (struct pqueue_s * pq)
{
  struct pitem * item;

  <bb 2> :
  item = pq->items;
  goto <bb 4>; [INV]

  <bb 3> :
  _1 = item->priority[7];
  _2 = (int) _1;
  _3 = item->priority[6];
  _4 = (int) _3;
  _5 = item->priority[5];
  _6 = (int) _5;
  _7 = item->priority[4];
  _8 = (int) _7;
  _9 = item->priority[3];
  _10 = (int) _9;
  _11 = item->priority[2];
  _12 = (int) _11;
  _13 = item->priority[1];
  _14 = (int) _13;
  _15 = item->priority[0];
  _16 = (int) _15;
  printf ("item\t%02x%02x%02x%02x%02x%02x%02x%02x\n", _16, _14, _12, _10, _8, _6, _4, _2);
  item = item->next;

  <bb 4> :
  if (item != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  return;

}



;; Function pqueue_iterator (pqueue_iterator, funcdef_no=31, decl_uid=3640, cgraph_uid=32, symbol_order=31)

Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
struct pitem * pqueue_iterator (struct pqueue_s * pq)
{
  struct pitem * D.3715;

  <bb 2> :
  D.3715 = pqueue_peek (pq);
  return D.3715;

}



;; Function pqueue_next (pqueue_next, funcdef_no=32, decl_uid=3643, cgraph_uid=33, symbol_order=32)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 4 3 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
struct pitem * pqueue_next (struct pitem * * item)
{
  struct pitem * ret;
  struct pitem * D.3720;

  <bb 2> :
  if (item == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  _1 = *item;
  if (_1 == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  D.3720 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 6>; [INV]

  <bb 5> :
  ret = *item;
  _2 = *item;
  _3 = _2->next;
  *item = _3;
  D.3720 = ret;

  <bb 6> :
  return D.3720;

}



;; Function pqueue_size (pqueue_size, funcdef_no=33, decl_uid=3647, cgraph_uid=34, symbol_order=33)

Merging blocks 5 and 6
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
int pqueue_size (struct pqueue_s * pq)
{
  int count;
  struct pitem * item;
  int D.3722;

  <bb 2> :
  item = pq->items;
  count = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  count = count + 1;
  item = item->next;

  <bb 4> :
  if (item != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  D.3722 = count;
  return D.3722;

}



;; Function main (main, funcdef_no=35, decl_uid=3665, cgraph_uid=36, symbol_order=35)

Removing basic block 7
Merging blocks 5 and 6
Merging blocks 5 and 8
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
int main ()
{
  struct pitem * item;
  struct record_pqueue queue;
  int D.3724;

  <bb 2> :
  _1 = pqueue_new ();
  queue.q = _1;
  dtls1_buffer_record (0B, &queue, 0B);
  dtls1_buffer_record (0B, &queue, 1B);
  dtls1_buffer_record (0B, &queue, 2B);
  goto <bb 4>; [INV]

  <bb 3> :
  printf ("%d\n", item);
  pitem_free (item);

  <bb 4> :
  _2 = queue.q;
  item = pqueue_pop (_2);
  if (item == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _3 = queue.q;
  pqueue_free (_3);
  D.3724 = 0;
  queue = {CLOBBER};
  return D.3724;

}



;; Function dtls1_buffer_record (dtls1_buffer_record, funcdef_no=34, decl_uid=3657, cgraph_uid=35, symbol_order=34)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 3 4 }
;; 3 succs { 15 }
;; 4 succs { 5 10 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 15 }
;; 10 succs { 11 12 }
;; 11 succs { 15 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 1 }
int dtls1_buffer_record (struct SSL * s, struct record_pqueue * queue, unsigned char * priority)
{
  struct pitem * item;
  struct DTLS1_RECORD_DATA * rdata;
  int D.3729;

  <bb 2> :
  _1 = queue->q;
  _2 = pqueue_size (_1);
  if (_2 > 99)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  D.3729 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 4> :
  rdata = malloc (96);
  item = pitem_new (priority, rdata);
  _3 = rdata == 0B;
  _4 = item == 0B;
  _5 = _3 | _4;
  if (_5 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 5> :
  if (rdata != 0B)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  free (rdata);

  <bb 7> :
  if (item != 0B)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  pitem_free (item);

  <bb 9> :
  D.3729 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 10> :
  _6 = s->packet;
  rdata->packet = _6;
  _7 = s->packet_length;
  rdata->packet_length = _7;
  _8 = s->s3;
  _9 = &_8->rbuf;
  _10 = &rdata->rbuf;
  memcpy (_10, _9, 24);
  _11 = s->s3;
  _12 = &_11->rrec;
  _13 = &rdata->rrec;
  memcpy (_13, _12, 56);
  item->data = rdata;
  _14 = queue->q;
  _15 = pqueue_insert (_14, item);
  if (_15 == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  free (rdata);
  pitem_free (item);
  D.3729 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 12> :
  s->packet = 0B;
  s->packet_length = 0;
  _16 = s->s3;
  _17 = &_16->rbuf;
  memset (_17, 0, 24);
  _18 = s->s3;
  _19 = &_18->rrec;
  memset (_19, 0, 56);
  _20 = ssl3_setup_buffers (s);
  if (_20 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  free (rdata);
  pitem_free (item);
  D.3729 = 0;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 14> :
  D.3729 = 1;

  <bb 15> :
  return D.3729;

}


