digraph "test.o-openssh_uaf_3.c.015t.cfg" {
overlap=false;
subgraph "cluster_key_to_blob" {
	style="dashed";
	color="black";
	label="key_to_blob ()";
	fn_23_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_23_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_23_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|D.3552\ =\ to_blob\ (key,\ blobp,\ lenp,\ 0);\l\
|return\ D.3552;\l\
}"];

	fn_23_basic_block_0:s -> fn_23_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_23_basic_block_2:s -> fn_23_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_0:s -> fn_23_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_to_blob" {
	style="dashed";
	color="black";
	label="to_blob ()";
	fn_22_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_22_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_22_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|if\ (key\ ==\ 0B)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_22_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|error\ (\"key_to_blob:\ key\ ==\ NULL\");\l\
|D.3556\ =\ 0;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 12\>;\ [INV]\l\
}"];

	fn_22_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|buffer_init\ (&b);\l\
|if\ (force_plain\ !=\ 0)\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_22_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|_1\ =\ key-\>type;\l\
|iftmp.0\ =\ key_type_plain\ (_1);\l\
goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_22_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|iftmp.0\ =\ key-\>type;\l\
}"];

	fn_22_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|type\ =\ iftmp.0;\l\
|len\ =\ buffer_len\ (&b);\l\
|if\ (lenp\ !=\ 0B)\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
}"];

	fn_22_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|len.1_2\ =\ (unsigned\ int)\ len;\l\
|*lenp\ =\ len.1_2;\l\
}"];

	fn_22_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|if\ (blobp\ !=\ 0B)\l\
\ \ goto\ \<bb\ 10\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 11\>;\ [INV]\l\
}"];

	fn_22_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 10\>:\l\
|_3\ =\ (long\ unsigned\ int)\ len;\l\
|_4\ =\ malloc\ (_3);\l\
|*blobp\ =\ _4;\l\
|_5\ =\ (long\ unsigned\ int)\ len;\l\
|_6\ =\ buffer_ptr\ (&b);\l\
|_7\ =\ (long\ int)\ _6;\l\
|_8\ =\ (const\ void\ *)\ _7;\l\
|_9\ =\ *blobp;\l\
|memcpy\ (_9,\ _8,\ _5);\l\
}"];

	fn_22_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 11\>:\l\
|_10\ =\ (long\ unsigned\ int)\ len;\l\
|_11\ =\ buffer_ptr\ (&b);\l\
|_12\ =\ (long\ int)\ _11;\l\
|_13\ =\ (void\ *)\ _12;\l\
|memset\ (_13,\ 0,\ _10);\l\
|buffer_free\ (&b);\l\
|D.3556\ =\ len;\l\
}"];

	fn_22_basic_block_12 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 12\>:\l\
|b\ =\ \{CLOBBER\};\l\
|return\ D.3556;\l\
}"];

	fn_22_basic_block_0:s -> fn_22_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_22_basic_block_2:s -> fn_22_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_2:s -> fn_22_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_3:s -> fn_22_basic_block_12:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_22_basic_block_4:s -> fn_22_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_4:s -> fn_22_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_5:s -> fn_22_basic_block_7:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_22_basic_block_6:s -> fn_22_basic_block_7:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_22_basic_block_7:s -> fn_22_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_7:s -> fn_22_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_8:s -> fn_22_basic_block_9:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_22_basic_block_9:s -> fn_22_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_9:s -> fn_22_basic_block_11:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_10:s -> fn_22_basic_block_11:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_22_basic_block_11:s -> fn_22_basic_block_12:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_22_basic_block_12:s -> fn_22_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_0:s -> fn_22_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_buffer_append" {
	style="dashed";
	color="black";
	label="buffer_append ()";
	fn_24_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_24_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_24_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|_1\ =\ buffer_append_space\ (buffer,\ len);\l\
|_2\ =\ (long\ int)\ _1;\l\
|p\ =\ (void\ *)\ _2;\l\
|_3\ =\ (long\ unsigned\ int)\ len;\l\
|memcpy\ (p,\ data,\ _3);\l\
|return;\l\
}"];

	fn_24_basic_block_0:s -> fn_24_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_24_basic_block_2:s -> fn_24_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_24_basic_block_0:s -> fn_24_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_buffer_put_string" {
	style="dashed";
	color="black";
	label="buffer_put_string ()";
	fn_25_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_25_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_25_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|buffer_put_int\ (buffer,\ len);\l\
|buffer_append\ (buffer,\ buf,\ len);\l\
|return;\l\
}"];

	fn_25_basic_block_0:s -> fn_25_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_2:s -> fn_25_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_0:s -> fn_25_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_main" {
	style="dashed";
	color="black";
	label="main ()";
	fn_27_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_27_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_27_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|process_add\ ();\l\
|D.3567\ =\ 0;\l\
|return\ D.3567;\l\
}"];

	fn_27_basic_block_0:s -> fn_27_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_2:s -> fn_27_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_0:s -> fn_27_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_process_add" {
	style="dashed";
	color="black";
	label="process_add ()";
	subgraph cluster_26_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	fn_26_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|if\ (i\ \<\ nkeys)\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_26_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|keys.2_5\ =\ keys;\l\
|_6\ =\ (long\ unsigned\ int)\ i;\l\
|_7\ =\ _6\ *\ 8;\l\
|_8\ =\ keys.2_5\ +\ _7;\l\
|_9\ =\ *_8;\l\
|key_to_blob\ (_9,\ &blob,\ &blen);\l\
|blen.3_10\ =\ blen;\l\
|blob.4_11\ =\ blob;\l\
|buffer_put_string\ (&msg,\ blob.4_11,\ blen.3_10);\l\
|buffer_put_cstring\ (&msg,\ name);\l\
|blob.5_12\ =\ blob;\l\
|*blob.5_12\ =\ 1;\l\
|blob.6_13\ =\ blob;\l\
|free\ (blob.6_13);\l\
|keys.7_14\ =\ keys;\l\
|_15\ =\ (long\ unsigned\ int)\ i;\l\
|_16\ =\ _15\ *\ 8;\l\
|_17\ =\ keys.7_14\ +\ _16;\l\
|_18\ =\ *_17;\l\
|add_key\ (_18,\ name);\l\
|i\ =\ i\ +\ 1;\l\
}"];

	}
	fn_26_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_26_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_26_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|buffer_init\ (&msg);\l\
|_1\ =\ get_string\ (0B);\l\
|_2\ =\ (long\ int)\ _1;\l\
|name\ =\ (char\ *)\ _2;\l\
|_3\ =\ get_string\ (0B);\l\
|_4\ =\ (long\ int)\ _3;\l\
|pin\ =\ (char\ *)\ _4;\l\
|nkeys\ =\ pkcs11_add_provider\ (name,\ pin,\ &keys);\l\
|if\ (nkeys\ \>\ 0)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_26_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|buffer_put_char\ (&msg,\ 12);\l\
|buffer_put_int\ (&msg,\ nkeys);\l\
|i\ =\ 0;\l\
goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_26_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|keys.8_19\ =\ keys;\l\
|free\ (keys.8_19);\l\
goto\ \<bb\ 8\>;\ [INV]\l\
}"];

	fn_26_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|buffer_put_char\ (&msg,\ 5);\l\
}"];

	fn_26_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|free\ (pin);\l\
|free\ (name);\l\
|send_msg\ (&msg);\l\
|buffer_free\ (&msg);\l\
|keys\ =\ \{CLOBBER\};\l\
|blob\ =\ \{CLOBBER\};\l\
|blen\ =\ \{CLOBBER\};\l\
|msg\ =\ \{CLOBBER\};\l\
|return;\l\
}"];

	fn_26_basic_block_0:s -> fn_26_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_2:s -> fn_26_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_2:s -> fn_26_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_3:s -> fn_26_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_4:s -> fn_26_basic_block_5:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_26_basic_block_5:s -> fn_26_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_5:s -> fn_26_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_6:s -> fn_26_basic_block_8:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_7:s -> fn_26_basic_block_8:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_8:s -> fn_26_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_0:s -> fn_26_basic_block_1:n [style="invis",constraint=true];
}
}
