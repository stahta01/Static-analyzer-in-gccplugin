
;; Function fprintf (fprintf, funcdef_no=14, decl_uid=776, cgraph_uid=14, symbol_order=14)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__attribute__((__artificial__, __gnu_inline__, __always_inline__))
fprintf (struct FILE * restrict __stream, const char * restrict __fmt)
{
  int _5;

  <bb 2> [0.00%]:
  _5 = __fprintf_chk (__stream_2(D), 1, __fmt_3(D), __builtin_va_arg_pack ());
  return _5;

}



;; Function printf (printf, funcdef_no=15, decl_uid=798, cgraph_uid=15, symbol_order=15)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
__attribute__((__artificial__, __gnu_inline__, __always_inline__))
printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> [0.00%]:
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function do_my_cleanups (do_my_cleanups, funcdef_no=48, decl_uid=3170, cgraph_uid=48, symbol_order=53)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3 4
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 1 }
do_my_cleanups (struct cleanup * * pmy_chain, struct cleanup * old_chain)
{
  int D.3397;
  int D.3395;
  struct cleanup * ptr;
  struct cleanup * _1;
  void (*<Ted>) (void *) _2;
  void * _3;
  void * _4;
  void (*<Ted>) (void *) _5;
  void (*<Ted>) (void *) _6;
  void * _7;
  int _20;
  int _21;

  <bb 2> [0.00%]:
  goto <bb 6>; [0.00%]

  <bb 3> [100.00%]:
  _1 = ptr_12->next;
  *pmy_chain_11(D) = _1;
  _2 = ptr_12->function;
  _3 = ptr_12->arg;
  _2 (_3);
  _21 = __printf_chk (1, "cleanup!!!!! =========\n");
  _4 = ptr_12->arg;
  _20 = __printf_chk (1, "%x\n", _4);
  _5 = ptr_12->free_arg;
  if (_5 != 0B)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  _6 = ptr_12->free_arg;
  _7 = ptr_12->arg;
  _6 (_7);

  <bb 5> [0.00%]:
  free (ptr_12);

  <bb 6> [0.00%]:
  ptr_12 = *pmy_chain_11(D);
  if (ptr_12 != old_chain_13(D))
    goto <bb 3>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 7> [0.00%]:
  return;

}



;; Function make_my_cleanup2 (make_my_cleanup2, funcdef_no=50, decl_uid=3178, cgraph_uid=50, symbol_order=55)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
make_my_cleanup2 (struct cleanup * * pmy_chain, void (*<Ta1d>) (void *) function, void * arg, void (*<Ted>) (void *) free_arg)
{
  struct cleanup * old_chain;
  struct cleanup * new;
  struct cleanup * _1;

  <bb 2> [0.00%]:
  new_4 = malloc (32);
  old_chain_6 = *pmy_chain_5(D);
  _1 = *pmy_chain_5(D);
  new_4->next = _1;
  new_4->function = function_8(D);
  new_4->free_arg = free_arg_10(D);
  new_4->arg = arg_12(D);
  *pmy_chain_5(D) = new_4;
  if (old_chain_6 == 0B)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  exit (1);

  <bb 4> [0.00%]:
  return old_chain_6;

}



;; Function make_my_cleanup (make_my_cleanup, funcdef_no=51, decl_uid=3182, cgraph_uid=51, symbol_order=56)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
make_my_cleanup (struct cleanup * * pmy_chain, void (*<Ta1d>) (void *) function, void * arg)
{
  struct cleanup * _6;

  <bb 2> [0.00%]:
  _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
  return _6;

}



;; Function discard_my_cleanups (discard_my_cleanups, funcdef_no=47, decl_uid=3165, cgraph_uid=47, symbol_order=52)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 6, latch 5
;;  depth 1, outer 0
;;  nodes: 6 5 3 4
;; 2 succs { 6 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 }
;; 6 succs { 3 7 }
;; 7 succs { 1 }
discard_my_cleanups (struct cleanup * * pmy_chain, struct cleanup * old_chain)
{
  int D.3400;
  struct cleanup * ptr;
  struct cleanup * _1;
  void (*<Ted>) (void *) _2;
  void (*<Ted>) (void *) _3;
  void * _4;
  void * _5;
  int _16;

  <bb 2> [0.00%]:
  goto <bb 6>; [0.00%]

  <bb 3> [0.00%]:
  _1 = ptr_10->next;
  *pmy_chain_9(D) = _1;
  _2 = ptr_10->free_arg;
  if (_2 != 0B)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  _3 = ptr_10->free_arg;
  _4 = ptr_10->arg;
  _3 (_4);

  <bb 5> [0.00%]:
  free (ptr_10);

  <bb 6> [0.00%]:
  ptr_10 = *pmy_chain_9(D);
  if (ptr_10 != old_chain_11(D))
    goto <bb 3>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 7> [100.00%]:
  _5 = ptr_10->arg;
  _16 = __printf_chk (1, "freearg: %x\n", _5);
  return;

}



;; Function discard_cleanups (discard_cleanups, funcdef_no=45, decl_uid=3162, cgraph_uid=45, symbol_order=50)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
discard_cleanups (struct cleanup * old_chain)
{
  <bb 2> [0.00%]:
  discard_my_cleanups (&cleanup_chain, old_chain_2(D));
  return;

}



;; Function discard_final_cleanups (discard_final_cleanups, funcdef_no=46, decl_uid=3167, cgraph_uid=46, symbol_order=51)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
discard_final_cleanups (struct cleanup * old_chain)
{
  <bb 2> [0.00%]:
  discard_my_cleanups (&final_cleanup_chain, old_chain_2(D));
  return;

}



;; Function do_cleanups (do_cleanups, funcdef_no=49, decl_uid=3172, cgraph_uid=49, symbol_order=54)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
do_cleanups (struct cleanup * old_chain)
{
  <bb 2> [0.00%]:
  do_my_cleanups (&cleanup_chain, old_chain_2(D));
  return;

}



;; Function make_cleanup (make_cleanup, funcdef_no=52, decl_uid=3185, cgraph_uid=52, symbol_order=57)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
make_cleanup (void (*<Ta1d>) (void *) function, void * arg)
{
  struct cleanup * _5;

  <bb 2> [0.00%]:
  _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
  return _5;

}



;; Function newentry (newentry, funcdef_no=53, decl_uid=3247, cgraph_uid=53, symbol_order=60)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
newentry (char * word)
{
  struct dict_type * new_d;
  struct dict_type * root.0_1;
  void * _2;
  struct dict_type * _14;

  <bb 2> [0.00%]:
  new_d_5 = malloc (40);
  new_d_5->word = word_6(D);
  root.0_1 = root;
  new_d_5->next = root.0_1;
  root = new_d_5;
  _2 = malloc (8);
  new_d_5->code = _2;
  new_d_5->code_length = 1;
  new_d_5->code_end = 0;
  _14 = new_d_5;
  return new_d_5;

}



;; Function add_var (add_var, funcdef_no=54, decl_uid=3250, cgraph_uid=54, symbol_order=61)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
add_var (char * name)
{
  struct dict_type * new_d;

  <bb 2> [0.00%]:
  new_d_4 = newentry (name_2(D));
  return;

}



;; Function add_to_definition (add_to_definition, funcdef_no=55, decl_uid=3254, cgraph_uid=55, symbol_order=62)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }
add_to_definition (struct dict_type * entry, void (*stinst_type) () word)
{
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  void (*stinst_type) () * _8;
  void * _9;
  void (*stinst_type) () * _10;
  int _11;
  long unsigned int _12;
  long unsigned int _13;
  void (*stinst_type) () * _14;
  int _15;
  int _17;
  unsigned int _27;

  <bb 2> [0.00%]:
  _1 = entry_20(D)->code_end;
  _2 = entry_20(D)->code_length;
  if (_1 == _2)
    goto <bb 3>; [0.00%]
  else
    goto <bb 4>; [0.00%]

  <bb 3> [0.00%]:
  _3 = entry_20(D)->code_length;
  _4 = _3 + 2;
  entry_20(D)->code_length = _4;
  _5 = entry_20(D)->code_length;
  _6 = (long unsigned int) _5;
  _7 = _6 * 8;
  _8 = entry_20(D)->code;
  _9 = realloc (_8, _7);
  entry_20(D)->code = _9;

  <bb 4> [0.00%]:
  _10 = entry_20(D)->code;
  _11 = entry_20(D)->code_end;
  _12 = (long unsigned int) _11;
  _13 = _12 * 8;
  _14 = _10 + _13;
  *_14 = word_24(D);
  _15 = entry_20(D)->code_end;
  _17 = _15 + 1;
  entry_20(D)->code_end = _17;
  _27 = (unsigned int) _15;
  return _27;

}



;; Function nextword (nextword, funcdef_no=56, decl_uid=3258, cgraph_uid=56, symbol_order=63)

;; 6 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 4
;;  header 24, latch 23
;;  depth 1, outer 0
;;  nodes: 24 23 20 22 19 21 18 17
;;
;; Loop 3
;;  header 11, latch 13
;;  depth 1, outer 0
;;  nodes: 11 13 12
;;
;; Loop 2
;;  header 15, latch 14
;;  depth 1, outer 0
;;  nodes: 15 14
;;
;; Loop 1
;;  header 7, multiple latches: 5 6
;;  depth 1, outer 0
;;  nodes: 7 5 6 3 8 4
;;
;; Loop 5
;;  header 5, latch 4
;;  depth 2, outer 1
;;  nodes: 5 4
;; 2 succs { 27 7 }
;; 3 succs { 5 6 }
;; 4 succs { 5 }
;; 5 succs { 4 7 }
;; 6 succs { 7 }
;; 7 succs { 3 8 }
;; 8 succs { 3 9 }
;; 9 succs { 27 10 }
;; 10 succs { 11 15 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 11 16 }
;; 14 succs { 15 }
;; 15 succs { 14 16 }
;; 16 succs { 24 }
;; 17 succs { 18 22 }
;; 18 succs { 21 20 19 }
;; 19 succs { 23 }
;; 20 succs { 23 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 24 }
;; 24 succs { 17 25 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
nextword (char * string, char * * word)
{
  int length;
  char * src;
  char * dst;
  int idx;
  char * word_start;
  char _1;
  _Bool _2;
  _Bool _3;
  _Bool _4;
  char _5;
  unsigned char _6;
  int _7;
  int _8;
  char _9;
  char _10;
  char _11;
  char _12;
  char _13;
  char _14;
  unsigned char _15;
  int _16;
  int _17;
  int _18;
  long unsigned int _19;
  void * _20;
  sizetype _21;
  char * _22;
  char _23;
  sizetype _24;
  sizetype _25;
  char * _26;
  char _27;
  int _28;
  char * dst.1_29;
  sizetype _30;
  sizetype _31;
  char * _32;
  char * dst.2_33;
  char _34;
  char * dst.3_35;
  sizetype _36;
  char * _37;
  char * dst.4_38;
  char _39;
  char * dst.5_40;
  char _41;
  char * _56;
  char * _79;
  char _93;

  <bb 2> [0.00%]:
  if (string_61(D) == 0B)
    goto <bb 27>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 3> [0.00%]:
  _1 = *string_43;
  if (_1 == 45)
    goto <bb 5>; [0.00%]
  else
    goto <bb 6>; [0.00%]

  <bb 4> [0.00%]:
  string_94 = string_42 + 1;

  <bb 5> [0.00%]:
  # string_42 = PHI <string_43(3), string_94(4)>
  _93 = *string_42;
  _2 = _93 != 0;
  _3 = _93 != 10;
  _4 = _2 & _3;
  if (_4 != 0)
    goto <bb 4>; [0.00%]
  else
    goto <bb 7>; [0.00%]

  <bb 6> [0.00%]:
  string_92 = string_43 + 1;

  <bb 7> [0.00%]:
  # string_43 = PHI <string_61(D)(2), string_42(5), string_92(6)>
  _5 = *string_43;
  _6 = (unsigned char) _5;
  _7 = (int) _6;
  _8 = isspace (_7);
  if (_8 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 8>; [0.00%]

  <bb 8> [0.00%]:
  _9 = *string_43;
  if (_9 == 45)
    goto <bb 3>; [0.00%]
  else
    goto <bb 9>; [0.00%]

  <bb 9> [0.00%]:
  _10 = *string_43;
  if (_10 == 0)
    goto <bb 27>; [0.00%]
  else
    goto <bb 10>; [0.00%]

  <bb 10> [0.00%]:
  word_start_63 = string_43;
  _11 = *string_43;
  if (_11 == 34)
    goto <bb 11>; [0.00%]
  else
    goto <bb 15>; [0.00%]

  <bb 11> [0.00%]:
  # string_44 = PHI <string_43(10), string_45(13)>
  # length_52 = PHI <0(10), length_53(13)>
  string_66 = string_44 + 1;
  length_67 = length_52 + 1;
  _12 = MEM[(char *)string_44 + 1B];
  if (_12 == 92)
    goto <bb 12>; [0.00%]
  else
    goto <bb 13>; [0.00%]

  <bb 12> [0.00%]:
  string_68 = &MEM[(void *)string_44 + 3B];
  length_69 = length_52 + 3;

  <bb 13> [0.00%]:
  # string_45 = PHI <string_66(11), string_68(12)>
  # length_53 = PHI <length_67(11), length_69(12)>
  _13 = *string_45;
  if (_13 != 34)
    goto <bb 11>; [0.00%]
  else
    goto <bb 16>; [0.00%]

  <bb 14> [0.00%]:
  string_64 = string_46 + 1;
  length_65 = length_54 + 1;

  <bb 15> [0.00%]:
  # string_46 = PHI <string_43(10), string_64(14)>
  # length_54 = PHI <0(10), length_65(14)>
  _14 = *string_46;
  _15 = (unsigned char) _14;
  _16 = (int) _15;
  _17 = isspace (_16);
  if (_17 == 0)
    goto <bb 14>; [0.00%]
  else
    goto <bb 16>; [0.00%]

  <bb 16> [0.00%]:
  # string_47 = PHI <string_45(13), string_46(15)>
  # length_55 = PHI <length_53(13), length_54(15)>
  _18 = length_55 + 1;
  _19 = (long unsigned int) _18;
  _20 = malloc (_19);
  *word_71(D) = _20;
  dst_73 = *word_71(D);
  src_74 = string_43;
  goto <bb 24>; [0.00%]

  <bb 17> [0.00%]:
  _21 = (sizetype) idx_49;
  _22 = string_43 + _21;
  _23 = *_22;
  if (_23 == 92)
    goto <bb 18>; [0.00%]
  else
    goto <bb 22>; [0.00%]

  <bb 18> [0.00%]:
  _24 = (sizetype) idx_49;
  _25 = _24 + 1;
  _26 = string_43 + _25;
  _27 = *_26;
  _28 = (int) _27;
  switch (_27) <default: <L29> [0.00%], case 34: <L27> [0.00%], case 92: <L27> [0.00%], case 110: <L26> [0.00%]>

<L26> [0.00%]:
  dst.1_29 = dst_51;
  dst_82 = dst_51 + 1;
  *dst.1_29 = 10;
  idx_84 = idx_49 + 1;
  goto <bb 23>; [0.00%]

<L27> [0.00%]:
  _30 = (sizetype) idx_49;
  _31 = _30 + 1;
  _32 = string_43 + _31;
  dst.2_33 = dst_51;
  dst_85 = dst_51 + 1;
  _34 = *_32;
  *dst.2_33 = _34;
  idx_87 = idx_49 + 1;
  goto <bb 23>; [0.00%]

<L29> [0.00%]:
  dst.3_35 = dst_51;
  dst_88 = dst_51 + 1;
  *dst.3_35 = 92;
  goto <bb 23>; [0.00%]

  <bb 22> [0.00%]:
  _36 = (sizetype) idx_49;
  _37 = string_43 + _36;
  dst.4_38 = dst_51;
  dst_80 = dst_51 + 1;
  _39 = *_37;
  *dst.4_38 = _39;

  <bb 23> [0.00%]:
  # idx_48 = PHI <idx_87(20), idx_49(22), idx_84(19), idx_49(21)>
  # dst_50 = PHI <dst_85(20), dst_80(22), dst_82(19), dst_88(21)>
  idx_90 = idx_48 + 1;

  <bb 24> [0.00%]:
  # idx_49 = PHI <0(16), idx_90(23)>
  # dst_51 = PHI <dst_73(16), dst_50(23)>
  if (idx_49 < length_55)
    goto <bb 17>; [0.00%]
  else
    goto <bb 25>; [0.00%]

  <bb 25> [0.00%]:
  dst.5_40 = dst_51;
  dst_76 = dst_51 + 1;
  *dst.5_40 = 0;
  _41 = *string_47;
  if (_41 != 0)
    goto <bb 26>; [0.00%]
  else
    goto <bb 27>; [0.00%]

  <bb 26> [0.00%]:
  _79 = string_47 + 1;

  <bb 27> [0.00%]:
  # _56 = PHI <0B(2), 0B(9), _79(26), 0B(25)>
  return _56;

}



;; Function compile (compile, funcdef_no=57, decl_uid=3289, cgraph_uid=57, symbol_order=64)

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
;;
;; Loop 1
;;  header 15, multiple latches: 4 13 14
;;  depth 1, outer 0
;;  nodes: 15 4 13 14 5 3 17 16 11 12 6 8 9 10 7
;;
;; Loop 2
;;  header 12, latch 11
;;  depth 2, outer 1
;;  nodes: 12 11 8 9 10 7
;; 2 succs { 15 }
;; 3 succs { 4 5 }
;; 4 succs { 15 }
;; 5 succs { 6 14 }
;; 6 succs { 12 }
;; 7 succs { 10 8 9 }
;; 8 succs { 11 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 13 12 }
;; 12 succs { 7 13 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 18 }
;; 16 succs { 17 18 }
;; 17 succs { 3 18 }
;; 18 succs { 1 }
compile (char * string)
{
  int D.3415;
  int D.3412;
  int D.3410;
  int D.3408;
  int D.3406;
  struct dict_type * ptr;
  char * word;
  char * word.6_1;
  int _2;
  char * word.7_3;
  char * word.8_4;
  char _5;
  char * word.9_6;
  char * word.10_7;
  char * word.11_8;
  char _9;
  int _10;
  char * word.12_11;
  char * _12;
  void (*<T1d2>) () _13;
  int _14;
  char * word.13_15;
  int _16;
  char * word.14_17;
  char * word.15_18;
  char _19;
  int _20;
  char * _21;
  struct FILE * stderr.16_22;
  char _23;
  char * word.17_24;
  char _25;
  int _62;
  int _63;
  int _64;
  int _65;
  int _66;

  <bb 2> [0.00%]:
  string_36 = nextword (string_34(D), &word);
  goto <bb 15>; [0.00%]

  <bb 3> [100.00%]:
  _62 = __printf_chk (1, "string: %s\n", string_28);
  word.6_1 = word;
  _2 = strcmp (word.6_1, "var");
  if (_2 == 0)
    goto <bb 4>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 4> [0.00%]:
  string_57 = nextword (string_28, &word);
  word.7_3 = word;
  add_var (word.7_3);
  string_60 = nextword (string_57, &word);
  goto <bb 15>; [0.00%]

  <bb 5> [0.00%]:
  word.8_4 = word;
  _5 = *word.8_4;
  if (_5 == 58)
    goto <bb 6>; [0.00%]
  else
    goto <bb 14>; [0.00%]

  <bb 6> [0.00%]:
  word.9_6 = word;
  free (word.9_6);
  string_41 = nextword (string_28, &word);
  word.10_7 = word;
  ptr_43 = newentry (word.10_7);
  string_45 = nextword (string_41, &word);
  goto <bb 12>; [0.00%]

  <bb 7> [0.00%]:
  word.11_8 = word;
  _9 = *word.11_8;
  _10 = (int) _9;
  switch (_9) <default: <L16> [0.00%], case 34: <L5> [0.00%], case 48 ... 57: <L6> [0.00%]>

<L5> [0.00%]:
  word.12_11 = word;
  _12 = word.12_11 + 1;
  _13 = (void (*<T1d2>) ()) _12;
  add_to_definition (ptr_43, _13);
  goto <bb 11>; [0.00%]

<L6> [100.00%]:
  _14 = MEM[(int *)ptr_43];
  _63 = __printf_chk (1, "%d\n", _14);
  word.13_15 = word;
  free (word.13_15);
  goto <bb 11>; [0.00%]

<L16> [100.00%]:
  _16 = MEM[(int *)ptr_43];
  _64 = __printf_chk (1, "%d\n", _16);
  word.14_17 = word;
  free (word.14_17);

  <bb 11> [0.00%]:
  string_52 = nextword (string_26, &word);
  if (string_52 == 0B)
    goto <bb 13>; [0.00%]
  else
    goto <bb 12>; [0.00%]

  <bb 12> [0.00%]:
  # string_26 = PHI <string_45(6), string_52(11)>
  word.15_18 = word;
  _19 = *word.15_18;
  if (_19 != 59)
    goto <bb 7>; [0.00%]
  else
    goto <bb 13>; [0.00%]

  <bb 13> [100.00%]:
  # string_27 = PHI <string_52(11), string_26(12)>
  _20 = MEM[(int *)ptr_43];
  _65 = __printf_chk (1, "%d\n", _20);
  string_55 = nextword (string_27, &word);
  goto <bb 15>; [0.00%]

  <bb 14> [100.00%]:
  _21 = string_28 + 18446744073709551615;
  stderr.16_22 = stderr;
  _66 = __fprintf_chk (stderr.16_22, 1, "syntax error at %s\n", _21);

  <bb 15> [0.00%]:
  # string_28 = PHI <string_36(2), string_60(4), string_55(13), string_28(14)>
  if (string_28 != 0B)
    goto <bb 16>; [0.00%]
  else
    goto <bb 18>; [0.00%]

  <bb 16> [0.00%]:
  _23 = *string_28;
  if (_23 != 0)
    goto <bb 17>; [0.00%]
  else
    goto <bb 18>; [0.00%]

  <bb 17> [0.00%]:
  word.17_24 = word;
  _25 = *word.17_24;
  if (_25 != 0)
    goto <bb 3>; [0.00%]
  else
    goto <bb 18>; [0.00%]

  <bb 18> [0.00%]:
  word ={v} {CLOBBER};
  return;

}



;; Function main (main, funcdef_no=58, decl_uid=3313, cgraph_uid=58, symbol_order=65)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
main ()
{
  int D.3417;
  char * string;
  struct dict_type * dict;
  char * _1;
  char * _2;
  int _13;

  <bb 2> [0.00%]:
  compile ("var second : stored_in_dict 5 ; : next");
  dict_8 = root;
  goto <bb 4>; [0.00%]

  <bb 3> [100.00%]:
  _1 = dict_3->word;
  _13 = __printf_chk (1, "%s\n", _1);
  _2 = dict_3->word;
  free (_2);
  dict_12 = dict_3->next;

  <bb 4> [0.00%]:
  # dict_3 = PHI <dict_8(2), dict_12(3)>
  if (dict_3 != 0B)
    goto <bb 3>; [0.00%]
  else
    goto <bb 5>; [0.00%]

  <bb 5> [0.00%]:
  return 0;

}


