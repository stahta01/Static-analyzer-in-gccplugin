digraph "test.o-binutils_uaf_4.c.015t.cfg" {
overlap=false;
subgraph "cluster_discard_cleanups" {
	style="dashed";
	color="black";
	label="discard_cleanups ()";
	fn_22_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_22_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_22_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|discard_my_cleanups\ (&cleanup_chain,\ old_chain);\l\
|return;\l\
}"];

	fn_22_basic_block_0:s -> fn_22_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_22_basic_block_2:s -> fn_22_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_22_basic_block_0:s -> fn_22_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_discard_final_cleanups" {
	style="dashed";
	color="black";
	label="discard_final_cleanups ()";
	fn_23_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_23_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_23_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|discard_my_cleanups\ (&final_cleanup_chain,\ old_chain);\l\
|return;\l\
}"];

	fn_23_basic_block_0:s -> fn_23_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_23_basic_block_2:s -> fn_23_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_23_basic_block_0:s -> fn_23_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_discard_my_cleanups" {
	style="dashed";
	color="black";
	label="discard_my_cleanups ()";
	subgraph cluster_24_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	fn_24_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|ptr\ =\ *pmy_chain;\l\
|if\ (ptr\ !=\ old_chain)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_24_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|_1\ =\ ptr-\>next;\l\
|*pmy_chain\ =\ _1;\l\
|_2\ =\ ptr-\>free_arg;\l\
|if\ (_2\ !=\ 0B)\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_24_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|_3\ =\ ptr-\>free_arg;\l\
|_4\ =\ ptr-\>arg;\l\
|_3\ (_4);\l\
}"];

	fn_24_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|free\ (ptr);\l\
}"];

	}
	fn_24_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_24_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_24_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_24_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|_5\ =\ ptr-\>arg;\l\
|printf\ (\"freearg:\ %x\\n\",\ _5);\l\
|return;\l\
}"];

	fn_24_basic_block_0:s -> fn_24_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_24_basic_block_2:s -> fn_24_basic_block_6:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_24_basic_block_3:s -> fn_24_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_24_basic_block_3:s -> fn_24_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_24_basic_block_4:s -> fn_24_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_24_basic_block_5:s -> fn_24_basic_block_6:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_24_basic_block_6:s -> fn_24_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_24_basic_block_6:s -> fn_24_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_24_basic_block_7:s -> fn_24_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_24_basic_block_0:s -> fn_24_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_do_cleanups" {
	style="dashed";
	color="black";
	label="do_cleanups ()";
	fn_26_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_26_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_26_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|do_my_cleanups\ (&cleanup_chain,\ old_chain);\l\
|return;\l\
}"];

	fn_26_basic_block_0:s -> fn_26_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_26_basic_block_2:s -> fn_26_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_26_basic_block_0:s -> fn_26_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_do_my_cleanups" {
	style="dashed";
	color="black";
	label="do_my_cleanups ()";
	subgraph cluster_25_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	fn_25_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|ptr\ =\ *pmy_chain;\l\
|if\ (ptr\ !=\ old_chain)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_25_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|_1\ =\ ptr-\>next;\l\
|*pmy_chain\ =\ _1;\l\
|_2\ =\ ptr-\>function;\l\
|_3\ =\ ptr-\>arg;\l\
|_2\ (_3);\l\
|__builtin_puts\ (&\"cleanup!!!!!\ =========\"[0]);\l\
|_4\ =\ ptr-\>arg;\l\
|printf\ (\"%x\\n\",\ _4);\l\
|_5\ =\ ptr-\>free_arg;\l\
|if\ (_5\ !=\ 0B)\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_25_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|_6\ =\ ptr-\>free_arg;\l\
|_7\ =\ ptr-\>arg;\l\
|_6\ (_7);\l\
}"];

	fn_25_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|free\ (ptr);\l\
}"];

	}
	fn_25_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_25_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_25_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
goto\ \<bb\ 6\>;\ [INV]\l\
}"];

	fn_25_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|return;\l\
}"];

	fn_25_basic_block_0:s -> fn_25_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_2:s -> fn_25_basic_block_6:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_3:s -> fn_25_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_3:s -> fn_25_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_4:s -> fn_25_basic_block_5:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_25_basic_block_5:s -> fn_25_basic_block_6:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_25_basic_block_6:s -> fn_25_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_6:s -> fn_25_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_7:s -> fn_25_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_25_basic_block_0:s -> fn_25_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_make_cleanup" {
	style="dashed";
	color="black";
	label="make_cleanup ()";
	fn_29_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_29_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_29_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|D.3328\ =\ make_my_cleanup\ (&cleanup_chain,\ function,\ arg);\l\
|return\ D.3328;\l\
}"];

	fn_29_basic_block_0:s -> fn_29_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_29_basic_block_2:s -> fn_29_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_29_basic_block_0:s -> fn_29_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_make_my_cleanup" {
	style="dashed";
	color="black";
	label="make_my_cleanup ()";
	fn_28_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_28_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_28_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|D.3330\ =\ make_my_cleanup2\ (pmy_chain,\ function,\ arg,\ 0B);\l\
|return\ D.3330;\l\
}"];

	fn_28_basic_block_0:s -> fn_28_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_28_basic_block_2:s -> fn_28_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_28_basic_block_0:s -> fn_28_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_make_my_cleanup2" {
	style="dashed";
	color="black";
	label="make_my_cleanup2 ()";
	fn_27_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_27_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_27_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|new\ =\ malloc\ (32);\l\
|old_chain\ =\ *pmy_chain;\l\
|_1\ =\ *pmy_chain;\l\
|new-\>next\ =\ _1;\l\
|new-\>function\ =\ function;\l\
|new-\>free_arg\ =\ free_arg;\l\
|new-\>arg\ =\ arg;\l\
|*pmy_chain\ =\ new;\l\
|if\ (old_chain\ ==\ 0B)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
}"];

	fn_27_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|exit\ (1);\l\
}"];

	fn_27_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|D.3334\ =\ old_chain;\l\
|return\ D.3334;\l\
}"];

	fn_27_basic_block_0:s -> fn_27_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_27_basic_block_2:s -> fn_27_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_2:s -> fn_27_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_4:s -> fn_27_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_27_basic_block_0:s -> fn_27_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_free_so" {
	style="dashed";
	color="black";
	label="free_so ()";
	fn_30_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_30_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_30_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|free\ (so);\l\
|return;\l\
}"];

	fn_30_basic_block_0:s -> fn_30_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_30_basic_block_2:s -> fn_30_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_30_basic_block_0:s -> fn_30_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_make_cleanup_free_so" {
	style="dashed";
	color="black";
	label="make_cleanup_free_so ()";
	fn_32_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_32_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_32_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|D.3336\ =\ make_cleanup\ (do_free_so,\ so);\l\
|return\ D.3336;\l\
}"];

	fn_32_basic_block_0:s -> fn_32_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_32_basic_block_2:s -> fn_32_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_32_basic_block_0:s -> fn_32_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_do_free_so" {
	style="dashed";
	color="black";
	label="do_free_so ()";
	fn_31_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_31_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_31_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|so\ =\ arg;\l\
|free_so\ (so);\l\
|return;\l\
}"];

	fn_31_basic_block_0:s -> fn_31_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_31_basic_block_2:s -> fn_31_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_31_basic_block_0:s -> fn_31_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_main" {
	style="dashed";
	color="black";
	label="main ()";
	fn_34_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_34_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_34_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|_1\ =\ argc\ +\ -1;\l\
|svr4_read_so_list\ (argc,\ _1,\ &link_ptr,\ 1);\l\
|D.3338\ =\ 0;\l\
|link_ptr\ =\ \{CLOBBER\};\l\
|return\ D.3338;\l\
}"];

	fn_34_basic_block_0:s -> fn_34_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_34_basic_block_2:s -> fn_34_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_34_basic_block_0:s -> fn_34_basic_block_1:n [style="invis",constraint=true];
}
subgraph "cluster_svr4_read_so_list" {
	style="dashed";
	color="black";
	label="svr4_read_so_list ()";
	subgraph cluster_33_1 {
	style="filled";
	color="darkgreen";
	fillcolor="grey88";
	label="loop 1";
	labeljust=l;
	penwidth=2;
	fn_33_basic_block_22 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 22\>:\l\
|if\ (lm\ !=\ 0)\l\
\ \ goto\ \<bb\ 3\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 23\>;\ [INV]\l\
}"];

	fn_33_basic_block_3 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 3\>:\l\
|new\ =\ calloc\ (1,\ 1040);\l\
|old_chain\ =\ make_cleanup_free_so\ (new);\l\
|_1\ =\ lm_info_read\ (lm);\l\
|_2\ =\ (long\ int)\ _1;\l\
|_3\ =\ (struct\ lm_info\ *)\ _2;\l\
|new-\>lm_info\ =\ _3;\l\
|_4\ =\ new-\>lm_info;\l\
|if\ (_4\ ==\ 0B)\l\
\ \ goto\ \<bb\ 4\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 5\>;\ [INV]\l\
}"];

	fn_33_basic_block_5 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 5\>:\l\
|_5\ =\ new-\>lm_info;\l\
|next_lm\ =\ _5-\>l_next;\l\
|_6\ =\ new-\>lm_info;\l\
|_7\ =\ _6-\>l_prev;\l\
|if\ (prev_lm\ !=\ _7)\l\
\ \ goto\ \<bb\ 6\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 7\>;\ [INV]\l\
}"];

	fn_33_basic_block_7 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 7\>:\l\
|if\ (ignore_first\ !=\ 0)\l\
\ \ goto\ \<bb\ 8\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 10\>;\ [INV]\l\
}"];

	fn_33_basic_block_8 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 8\>:\l\
|_15\ =\ new-\>lm_info;\l\
|_16\ =\ _15-\>l_prev;\l\
|if\ (_16\ ==\ 0)\l\
\ \ goto\ \<bb\ 9\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 10\>;\ [INV]\l\
}"];

	fn_33_basic_block_10 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 10\>:\l\
|_21\ =\ new-\>lm_info;\l\
|_22\ =\ _21-\>l_name;\l\
|target_read_string\ (_22,\ &buffer,\ 511,\ &errcode);\l\
|errcode.0_23\ =\ errcode;\l\
|if\ (errcode.0_23\ !=\ 0)\l\
\ \ goto\ \<bb\ 11\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 15\>;\ [INV]\l\
}"];

	fn_33_basic_block_9 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 9\>:\l\
|_17\ =\ get_svr4_info\ ();\l\
|_18\ =\ (long\ int)\ _17;\l\
|info\ =\ (struct\ svr4_info\ *)\ _18;\l\
|first\ =\ new;\l\
|_19\ =\ new-\>lm_info;\l\
|_20\ =\ _19-\>lm_addr;\l\
|info-\>main_lm_addr\ =\ _20;\l\
|do_cleanups\ (old_chain);\l\
|//\ predicted\ unlikely\ by\ continue\ predictor.\l\
goto\ \<bb\ 20\>;\ [INV]\l\
}"];

	fn_33_basic_block_11 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 11\>:\l\
|if\ (first\ ==\ 0B)\l\
\ \ goto\ \<bb\ 13\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 12\>;\ [INV]\l\
}"];

	fn_33_basic_block_15 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 15\>:\l\
|buffer.2_31\ =\ buffer;\l\
|_32\ =\ &new-\>so_name;\l\
|strncpy\ (_32,\ buffer.2_31,\ 511);\l\
|new-\>so_name[511]\ =\ 0;\l\
|_33\ =\ &new-\>so_name;\l\
|_34\ =\ &new-\>so_original_name;\l\
|strcpy\ (_34,\ _33);\l\
|buffer.3_35\ =\ buffer;\l\
|free\ (buffer.3_35);\l\
|_36\ =\ new-\>so_name[0];\l\
|if\ (_36\ ==\ 0)\l\
\ \ goto\ \<bb\ 17\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 16\>;\ [INV]\l\
}"];

	fn_33_basic_block_20 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 20\>:\l\
|errcode\ =\ \{CLOBBER\};\l\
|buffer\ =\ \{CLOBBER\};\l\
}"];

	fn_33_basic_block_13 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 13\>:\l\
|errcode.1_28\ =\ errcode;\l\
|_29\ =\ safe_strerror\ (errcode.1_28);\l\
|_30\ =\ _\ (\"Can\\'t\ read\ pathname\ for\ load\ map:\ %s.\");\l\
|warning\ (_30,\ _29);\l\
}"];

	fn_33_basic_block_12 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 12\>:\l\
|_24\ =\ new-\>lm_info;\l\
|_25\ =\ _24-\>l_name;\l\
|_26\ =\ first-\>lm_info;\l\
|_27\ =\ _26-\>l_name;\l\
|if\ (_25\ !=\ _27)\l\
\ \ goto\ \<bb\ 13\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 14\>;\ [INV]\l\
}"];

	fn_33_basic_block_17 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 17\>:\l\
|do_cleanups\ (old_chain);\l\
|//\ predicted\ unlikely\ by\ continue\ predictor.\l\
goto\ \<bb\ 20\>;\ [INV]\l\
}"];

	fn_33_basic_block_16 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 16\>:\l\
|_37\ =\ &new-\>so_name;\l\
|_38\ =\ match_main\ (_37);\l\
|if\ (_38\ !=\ 0)\l\
\ \ goto\ \<bb\ 17\>;\ [INV]\l\
else\l\
\ \ goto\ \<bb\ 18\>;\ [INV]\l\
}"];

	fn_33_basic_block_21 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 21\>:\l\
|prev_lm\ =\ lm;\l\
|lm\ =\ next_lm;\l\
}"];

	fn_33_basic_block_14 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 14\>:\l\
|do_cleanups\ (old_chain);\l\
|//\ predicted\ unlikely\ by\ continue\ predictor.\l\
goto\ \<bb\ 20\>;\ [INV]\l\
}"];

	fn_33_basic_block_18 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 18\>:\l\
|discard_cleanups\ (old_chain);\l\
|new-\>next\ =\ 0B;\l\
|_39\ =\ *link_ptr_ptr;\l\
|*_39\ =\ new;\l\
|_40\ =\ &new-\>next;\l\
|*link_ptr_ptr\ =\ _40;\l\
|errcode\ =\ \{CLOBBER\};\l\
|buffer\ =\ \{CLOBBER\};\l\
goto\ \<bb\ 21\>;\ [INV]\l\
}"];

	}
	fn_33_basic_block_0 [shape=Mdiamond,style=filled,fillcolor=white,label="ENTRY"];

	fn_33_basic_block_1 [shape=Mdiamond,style=filled,fillcolor=white,label="EXIT"];

	fn_33_basic_block_2 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 2\>:\l\
|first\ =\ 0B;\l\
goto\ \<bb\ 22\>;\ [INV]\l\
}"];

	fn_33_basic_block_4 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 4\>:\l\
|do_cleanups\ (old_chain);\l\
|D.3343\ =\ 0;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 19\>;\ [INV]\l\
}"];

	fn_33_basic_block_6 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 6\>:\l\
|_8\ =\ new-\>lm_info;\l\
|_9\ =\ _8-\>l_prev;\l\
|_10\ =\ target_gdbarch\ ();\l\
|_11\ =\ paddress\ (_10,\ _9);\l\
|_12\ =\ target_gdbarch\ ();\l\
|_13\ =\ paddress\ (_12,\ prev_lm);\l\
|_14\ =\ _\ (\"Corrupted\ shared\ library\ list:\ %s\ !=\ %s\");\l\
|warning\ (_14,\ _13,\ _11);\l\
|do_cleanups\ (old_chain);\l\
|D.3343\ =\ 0;\l\
|//\ predicted\ unlikely\ by\ early\ return\ (on\ trees)\ predictor.\l\
goto\ \<bb\ 19\>;\ [INV]\l\
}"];

	fn_33_basic_block_19 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 19\>:\l\
|errcode\ =\ \{CLOBBER\};\l\
|buffer\ =\ \{CLOBBER\};\l\
goto\ \<bb\ 24\>;\ [INV]\l\
}"];

	fn_33_basic_block_23 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 23\>:\l\
|D.3343\ =\ 1;\l\
}"];

	fn_33_basic_block_24 [shape=record,style=filled,fillcolor=lightgrey,label="{\<bb\ 24\>:\l\
|return\ D.3343;\l\
}"];

	fn_33_basic_block_0:s -> fn_33_basic_block_2:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_33_basic_block_2:s -> fn_33_basic_block_22:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_33_basic_block_3:s -> fn_33_basic_block_4:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_3:s -> fn_33_basic_block_5:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_4:s -> fn_33_basic_block_19:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_33_basic_block_5:s -> fn_33_basic_block_6:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_5:s -> fn_33_basic_block_7:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_6:s -> fn_33_basic_block_19:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_33_basic_block_7:s -> fn_33_basic_block_8:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_7:s -> fn_33_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_8:s -> fn_33_basic_block_9:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_8:s -> fn_33_basic_block_10:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_9:s -> fn_33_basic_block_20:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_33_basic_block_10:s -> fn_33_basic_block_11:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_10:s -> fn_33_basic_block_15:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_11:s -> fn_33_basic_block_13:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_11:s -> fn_33_basic_block_12:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_12:s -> fn_33_basic_block_13:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_12:s -> fn_33_basic_block_14:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_13:s -> fn_33_basic_block_14:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_33_basic_block_14:s -> fn_33_basic_block_20:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_33_basic_block_15:s -> fn_33_basic_block_17:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_15:s -> fn_33_basic_block_16:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_16:s -> fn_33_basic_block_17:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_16:s -> fn_33_basic_block_18:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_17:s -> fn_33_basic_block_20:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_33_basic_block_18:s -> fn_33_basic_block_21:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_33_basic_block_19:s -> fn_33_basic_block_24:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_33_basic_block_20:s -> fn_33_basic_block_21:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_33_basic_block_21:s -> fn_33_basic_block_22:n [style="dotted,bold",color=blue,weight=10,constraint=false];
	fn_33_basic_block_22:s -> fn_33_basic_block_3:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_22:s -> fn_33_basic_block_23:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_23:s -> fn_33_basic_block_24:n [style="solid,bold",color=blue,weight=100,constraint=true];
	fn_33_basic_block_24:s -> fn_33_basic_block_1:n [style="solid,bold",color=black,weight=10,constraint=true];
	fn_33_basic_block_0:s -> fn_33_basic_block_1:n [style="invis",constraint=true];
}
}
