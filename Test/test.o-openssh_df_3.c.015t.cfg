
;; Function buffer_get_string_ret (buffer_get_string_ret, funcdef_no=22, decl_uid=3480, cgraph_uid=23, symbol_order=22)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 7 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
void * buffer_get_string_ret (char * buffer, u_int * length_ptr)
{
  u_int len;
  u_char * value;
  void * D.3514;

  <bb 2> :
  _1 = strlen (buffer);
  len = (u_int) _1;
  printf ("len : %d\n", len);
  printf ("buf : %s\n", buffer);
  _2 = len + 1;
  _3 = (long unsigned int) _2;
  value = malloc (_3);
  if (len > 10)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  __builtin_puts (&"buffer_get_string_ret: buffer_get failed"[0]);
  free (value);
  D.3514 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]

  <bb 4> :
  _4 = (sizetype) len;
  _5 = value + _4;
  *_5 = 0;
  if (length_ptr != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  *length_ptr = len;

  <bb 6> :
  D.3514 = value;

  <bb 7> :
  return D.3514;

}



;; Function main (main, funcdef_no=24, decl_uid=3509, cgraph_uid=25, symbol_order=24)

Removing basic block 5
Merging blocks 4 and 6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
int main (int argc, char * * argv)
{
  int D.3520;

  <bb 2> :
  if (argc == 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  printf ("no argument%s\n", "");
  exit (1);

  <bb 4> :
  process_mux_new_session (argc, argv);
  D.3520 = 0;
  return D.3520;

}



;; Function process_mux_new_session (process_mux_new_session, funcdef_no=23, decl_uid=3487, cgraph_uid=24, symbol_order=23)

Merging blocks 15 and 16
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;;
;; Loop 1
;;  header 13, latch 12
;;  depth 1, outer 0
;;  nodes: 13 12 10
;; 2 succs { 4 3 }
;; 3 succs { 4 9 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 15 }
;; 9 succs { 13 }
;; 10 succs { 11 12 }
;; 11 succs { 4 }
;; 12 succs { 13 }
;; 13 succs { 10 14 }
;; 14 succs { 15 }
;; 15 succs { 1 }
int process_mux_new_session (int ac, char * * av)
{
  static const char __func__[24] = "process_mux_new_session";
  int new_fd[3];
  u_int packetmax;
  u_int window;
  u_int escape_char;
  u_int env_len;
  u_int len;
  u_int j;
  u_int i;
  char * cp;
  char * cmd;
  char * reserved;
  struct mux_session_confirm_ctx * cctx;
  int D.3529;

  <bb 2> :
  i = 0;
  cctx = calloc (1, 32);
  reserved = 0B;
  cmd = reserved;
  i.0_1 = i;
  i = i.0_1 + 1;
  _2 = (long unsigned int) i.0_1;
  _3 = _2 * 8;
  _4 = av + _3;
  _5 = *_4;
  reserved = buffer_get_string_ret (_5, 0B);
  if (reserved == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  i.1_6 = i;
  i = i.1_6 + 1;
  _7 = (long unsigned int) i.1_6;
  _8 = _7 * 8;
  _9 = av + _8;
  _10 = *_9;
  cmd = buffer_get_string_ret (_10, &len);
  if (cmd == 0B)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 4> :
malf:
  free (cctx);
  if (cmd != 0B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  free (cmd);

  <bb 6> :
  if (reserved != 0B)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 7> :
  free (reserved);

  <bb 8> :
  printf ("%s: malformed message\n", &__func__);
  D.3529 = -1;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 15>; [INV]

  <bb 9> :
  free (reserved);
  reserved = 0B;
  env_len = 0;
  goto <bb 13>; [INV]

  <bb 10> :
  i.2_11 = i;
  i = i.2_11 + 1;
  _12 = (long unsigned int) i.2_11;
  _13 = _12 * 8;
  _14 = av + _13;
  _15 = *_14;
  cp = buffer_get_string_ret (_15, &len);
  if (cp == 0B)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 11> :
  free (cmd);
  // predicted unlikely by goto predictor.
  goto <bb 4>; [INV]

  <bb 12> :
  free (cp);

  <bb 13> :
  ac.3_16 = (unsigned int) ac;
  if (i < ac.3_16)
    goto <bb 10>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  printf ("%s channel request cmd \"%s\"\n", &__func__, cmd);
  _17 = strdup (cmd);
  cctx->cmd = _17;
  free (cmd);
  cmd = 0B;
  _18 = cctx->cmd;
  free (_18);
  free (cctx);
  D.3529 = 0;

  <bb 15> :
  len = {CLOBBER};
  new_fd = {CLOBBER};
  return D.3529;

}


