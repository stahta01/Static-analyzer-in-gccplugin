In file included from test.c:5:0:
common.h: In function ‘discard_my_cleanups’:
common.h:94:21: warning: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘void *’ [-Wformat=]
   printf("freearg: %x\n", ptr->arg);
                    ~^     ~~~~~~~~
                    %p
common.h: In function ‘do_my_cleanups’:
common.h:108:13: warning: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘void *’ [-Wformat=]
    printf("%x\n", ptr->arg);
            ~^     ~~~~~~~~
            %p
test.c: In function ‘filename_cmp’:
test.c:131:10: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
   return strcmp(s1, s2);
          ^~~~~~
test.c: In function ‘template_in_dir’:
test.c:170:23: warning: implicit declaration of function ‘strrchr’ [-Wimplicit-function-declaration]
   const char *slash = strrchr (path, '/');
                       ^~~~~~~
test.c:170:23: warning: incompatible implicit declaration of built-in function ‘strrchr’
test.c:170:23: note: include ‘<string.h>’ or provide a declaration of ‘strrchr’
test.c:178:7: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
       memcpy (tmpname, path, len);
       ^~~~~~
test.c:178:7: warning: incompatible implicit declaration of built-in function ‘memcpy’
test.c:178:7: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
test.c:187:3: warning: incompatible implicit declaration of built-in function ‘memcpy’
   memcpy (tmpname + len, template, sizeof (template));
   ^~~~~~
test.c:187:3: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
test.c: In function ‘make_tempname’:
test.c:206:3: warning: implicit declaration of function ‘close’; did you mean ‘pclose’? [-Wimplicit-function-declaration]
   close (fd);
   ^~~~~
   pclose
test.c: In function ‘set_times’:
test.c:228:14: warning: implicit declaration of function ‘utime’; did you mean ‘futimens’? [-Wimplicit-function-declaration]
     result = utime (destination, tb);
              ^~~~~
              futimens
test.c: In function ‘smart_rename’:
test.c:281:12: warning: implicit declaration of function ‘chown’ [-Wimplicit-function-declaration]
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^~~~~
test.c:289:4: warning: implicit declaration of function ‘unlink’; did you mean ‘unix’? [-Wimplicit-function-declaration]
    unlink (from);
    ^~~~~~
    unix
test.c: In function ‘copy_main’:
test.c:372:25: warning: passing argument 2 of ‘set_times’ from incompatible pointer type [-Wincompatible-pointer-types]
     set_times (tmpname, &statbuf);
                         ^
test.c:211:1: note: expected ‘const struct stat *’ but argument is of type ‘int *’
 set_times (const char *destination, const struct stat *statbuf)
 ^~~~~~~~~
=======ipa_pta=========
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
====================POINTER_TYPE============================
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
====================POINTER_TYPE============================
 <ssa_name 0x7ffaafcbd3f0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7ffaafcb1c18>
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
------------------------------
# VUSE <.MEM_14(D)>
_1 = statbuf_5(D)->st_atim.tv_sec;
 <component_ref 0x7ffab014d570
    type <integer_type 0x7ffaafca4540 __time_t readonly DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014ee70 -9223372036854775808> max <integer_cst 0x7ffab014ee88 9223372036854775807> context <translation_unit_decl 0x7ffab0159168 test.c>>
    readonly
    arg 0 <component_ref 0x7ffab014d540
        type <record_type 0x7ffaafca4498 timespec readonly TI
            size <integer_cst 0x7ffab014ec30 constant 128>
            unit size <integer_cst 0x7ffab014ec48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7ffaafc9c498 fields <field_decl 0x7ffaafc95ed8 tv_sec> context <translation_unit_decl 0x7ffab0159168 test.c>>
        readonly
        arg 0 <mem_ref 0x7ffaafcb2410 type <record_type 0x7ffaafc9cd20 stat>
           
            arg 0 <ssa_name 0x7ffab0156990 type <pointer_type 0x7ffaafc9cdc8>
                var <parm_decl 0x7ffaafca7380 statbuf>
                def_stmt GIMPLE_NOP
                version 5
                ptr-info 0x7ffaafcb1af8>
            arg 1 <integer_cst 0x7ffaafcb17f8 constant 0>
            test.c:226:20 start: test.c:226:20 finish: test.c:226:20>
        arg 1 <field_decl 0x7ffaafc9e7b8 st_atim type <record_type 0x7ffaafc9c498 timespec>
            TI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 71 col 21 size <integer_cst 0x7ffab014ec30 128> unit size <integer_cst 0x7ffab014ec48 16>
            align 64 offset_align 128
            offset <integer_cst 0x7ffab0207c18 constant 64> bit offset <integer_cst 0x7ffab014ebe8 64> context <record_type 0x7ffaafc9cc78 stat> chain <field_decl 0x7ffaafc9e720 st_mtim>>
        test.c:226:20 start: test.c:226:20 finish: test.c:226:20>
    arg 1 <field_decl 0x7ffaafc95ed8 tv_sec
        type <integer_type 0x7ffaafc9c3f0 __time_t DI size <integer_cst 0x7ffab014ebe8 64> unit size <integer_cst 0x7ffab014ec00 8>
            align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014ee70 -9223372036854775808> max <integer_cst 0x7ffab014ee88 9223372036854775807> context <translation_unit_decl 0x7ffab0159168 test.c>>
        DI file /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h line 12 col 12 size <integer_cst 0x7ffab014ebe8 64> unit size <integer_cst 0x7ffab014ec00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7ffab014ec18 constant 0>
        bit offset <integer_cst 0x7ffab014ec60 constant 0> context <record_type 0x7ffaafc9c498 timespec>
        chain <field_decl 0x7ffaafc95e40 tv_nsec type <integer_type 0x7ffaafc9c348 __syscall_slong_t>
            DI file /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h line 16 col 21 size <integer_cst 0x7ffab014ebe8 64> unit size <integer_cst 0x7ffab014ec00 8>
            align 64 offset_align 128 offset <integer_cst 0x7ffab014ec18 0> bit offset <integer_cst 0x7ffab014ebe8 64> context <record_type 0x7ffaafc9c498 timespec>>>
    test.c:226:22 start: test.c:226:22 finish: test.c:226:22>
sssssssssssssssssaaaaaaaaa name array_ref--------
# .MEM_15 = VDEF <.MEM_14(D)>
tb[0] = _1;
 <array_ref 0x7ffab01581c0
    type <integer_type 0x7ffab0162738 long int DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014ee70 -9223372036854775808> max <integer_cst 0x7ffab014ee88 9223372036854775807>
        pointer_to_this <pointer_type 0x7ffab016e930>>
   
    arg 0 <var_decl 0x7ffab0ee3e10 tb
        type <array_type 0x7ffaafca43f0 type <integer_type 0x7ffab0162738 long int>
            TI
            size <integer_cst 0x7ffab014ec30 constant 128>
            unit size <integer_cst 0x7ffab014ec48 constant 16>
            align 64 symtab 0 alias set -1 structural equality domain <integer_type 0x7ffaafca4348>
            pointer_to_this <pointer_type 0x7ffaafca45e8>>
        addressable TI file test.c line 224 col 10 size <integer_cst 0x7ffab014ec30 128> unit size <integer_cst 0x7ffab014ec48 16>
        align 128 context <function_decl 0x7ffaafc9d200 set_times>
        chain <function_decl 0x7ffaafca2700 utime type <function_type 0x7ffaafca00a8>
            addressable public external QI file test.c line 228 col 14 align 8 context <function_decl 0x7ffaafc9d200 set_times>>>
    arg 1 <integer_cst 0x7ffab014ef78 type <integer_type 0x7ffab01625e8 int> constant 0>
    test.c:226:7 start: test.c:226:7 finish: test.c:226:7>
------------------------------
# VUSE <.MEM_15>
_2 = statbuf_5(D)->st_mtim.tv_sec;
 <component_ref 0x7ffab014d5d0
    type <integer_type 0x7ffaafca4540 __time_t readonly DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014ee70 -9223372036854775808> max <integer_cst 0x7ffab014ee88 9223372036854775807> context <translation_unit_decl 0x7ffab0159168 test.c>>
    readonly
    arg 0 <component_ref 0x7ffab014d5a0
        type <record_type 0x7ffaafca4498 timespec readonly TI
            size <integer_cst 0x7ffab014ec30 constant 128>
            unit size <integer_cst 0x7ffab014ec48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7ffaafc9c498 fields <field_decl 0x7ffaafc95ed8 tv_sec> context <translation_unit_decl 0x7ffab0159168 test.c>>
        readonly
        arg 0 <mem_ref 0x7ffaafcb2438 type <record_type 0x7ffaafc9cd20 stat>
           
            arg 0 <ssa_name 0x7ffab0156990 type <pointer_type 0x7ffaafc9cdc8>
                var <parm_decl 0x7ffaafca7380 statbuf>
                def_stmt GIMPLE_NOP
                version 5
                ptr-info 0x7ffaafcb1af8>
            arg 1 <integer_cst 0x7ffaafcb17f8 constant 0>
            test.c:227:20 start: test.c:227:20 finish: test.c:227:20>
        arg 1 <field_decl 0x7ffaafc9e720 st_mtim type <record_type 0x7ffaafc9c498 timespec>
            TI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 72 col 21 size <integer_cst 0x7ffab014ec30 128> unit size <integer_cst 0x7ffab014ec48 16>
            align 64 offset_align 128
            offset <integer_cst 0x7ffaafc96c00 constant 80> bit offset <integer_cst 0x7ffab014ebe8 64> context <record_type 0x7ffaafc9cc78 stat> chain <field_decl 0x7ffaafc9e688 st_ctim>>
        test.c:227:20 start: test.c:227:20 finish: test.c:227:20>
    arg 1 <field_decl 0x7ffaafc95ed8 tv_sec
        type <integer_type 0x7ffaafc9c3f0 __time_t DI size <integer_cst 0x7ffab014ebe8 64> unit size <integer_cst 0x7ffab014ec00 8>
            align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014ee70 -9223372036854775808> max <integer_cst 0x7ffab014ee88 9223372036854775807> context <translation_unit_decl 0x7ffab0159168 test.c>>
        DI file /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h line 12 col 12 size <integer_cst 0x7ffab014ebe8 64> unit size <integer_cst 0x7ffab014ec00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7ffab014ec18 constant 0>
        bit offset <integer_cst 0x7ffab014ec60 constant 0> context <record_type 0x7ffaafc9c498 timespec>
        chain <field_decl 0x7ffaafc95e40 tv_nsec type <integer_type 0x7ffaafc9c348 __syscall_slong_t>
            DI file /usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h line 16 col 21 size <integer_cst 0x7ffab014ebe8 64> unit size <integer_cst 0x7ffab014ec00 8>
            align 64 offset_align 128 offset <integer_cst 0x7ffab014ec18 0> bit offset <integer_cst 0x7ffab014ebe8 64> context <record_type 0x7ffaafc9c498 timespec>>>
    test.c:227:22 start: test.c:227:22 finish: test.c:227:22>
sssssssssssssssssaaaaaaaaa name array_ref--------
# .MEM_16 = VDEF <.MEM_15>
tb[1] = _2;
 <array_ref 0x7ffab01581f8
    type <integer_type 0x7ffab0162738 long int DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014ee70 -9223372036854775808> max <integer_cst 0x7ffab014ee88 9223372036854775807>
        pointer_to_this <pointer_type 0x7ffab016e930>>
   
    arg 0 <var_decl 0x7ffab0ee3e10 tb
        type <array_type 0x7ffaafca43f0 type <integer_type 0x7ffab0162738 long int>
            TI
            size <integer_cst 0x7ffab014ec30 constant 128>
            unit size <integer_cst 0x7ffab014ec48 constant 16>
            align 64 symtab 0 alias set -1 structural equality domain <integer_type 0x7ffaafca4348>
            pointer_to_this <pointer_type 0x7ffaafca45e8>>
        addressable TI file test.c line 224 col 10 size <integer_cst 0x7ffab014ec30 128> unit size <integer_cst 0x7ffab014ec48 16>
        align 128 context <function_decl 0x7ffaafc9d200 set_times>
        chain <function_decl 0x7ffaafca2700 utime type <function_type 0x7ffaafca00a8>
            addressable public external QI file test.c line 228 col 14 align 8 context <function_decl 0x7ffaafc9d200 set_times>>>
    arg 1 <integer_cst 0x7ffab014ef90 type <integer_type 0x7ffab01625e8 int> constant 1>
    test.c:227:7 start: test.c:227:7 finish: test.c:227:7>
 <var_decl 0x7ffab0ee3e10 tb
    type <array_type 0x7ffaafca43f0
        type <integer_type 0x7ffab0162738 long int DI
            size <integer_cst 0x7ffab014ebe8 constant 64>
            unit size <integer_cst 0x7ffab014ec00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014ee70 -9223372036854775808> max <integer_cst 0x7ffab014ee88 9223372036854775807>
            pointer_to_this <pointer_type 0x7ffab016e930>>
        TI
        size <integer_cst 0x7ffab014ec30 constant 128>
        unit size <integer_cst 0x7ffab014ec48 constant 16>
        align 64 symtab 0 alias set -1 structural equality
        domain <integer_type 0x7ffaafca4348 type <integer_type 0x7ffab0162000 sizetype>
            DI size <integer_cst 0x7ffab014ebe8 64> unit size <integer_cst 0x7ffab014ec00 8>
            align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014ec18 0> max <integer_cst 0x7ffab014ecf0 1>>
        pointer_to_this <pointer_type 0x7ffaafca45e8>>
    addressable TI file test.c line 224 col 10 size <integer_cst 0x7ffab014ec30 128> unit size <integer_cst 0x7ffab014ec48 16>
    align 128 context <function_decl 0x7ffaafc9d200 set_times> chain <function_decl 0x7ffaafca2700 utime>>
 <string_cst 0x7ffab014d600
    type <array_type 0x7ffaafca4738
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        BLK
        size <integer_cst 0x7ffaafc96ea0 constant 168>
        unit size <integer_cst 0x7ffaafc96e88 constant 21>
        align 8 symtab 0 alias set -1 structural equality
        domain <integer_type 0x7ffaafca4690 type <integer_type 0x7ffab0162000 sizetype>
            DI
            size <integer_cst 0x7ffab014ebe8 constant 64>
            unit size <integer_cst 0x7ffab014ec00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014ec18 0> max <integer_cst 0x7ffaafc96e70 20>>
        pointer_to_this <pointer_type 0x7ffaafca47e0>>
    readonly constant static "%s: cannot set time:\000">
------------------------------
# VUSE <.MEM_8(D)>
_1 = *argv_3(D);
 <mem_ref 0x7ffaafcb25f0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
   
    arg 0 <ssa_name 0x7ffab0156d38
        type <pointer_type 0x7ffaafc93888 type <pointer_type 0x7ffaafc937e0>
            public unsigned DI size <integer_cst 0x7ffab014ebe8 64> unit size <integer_cst 0x7ffab014ec00 8>
            align 64 symtab 0 alias set -1 structural equality>
        var <parm_decl 0x7ffaafca7500 argv>
        def_stmt GIMPLE_NOP
        version 3
        ptr-info 0x7ffaafcb1b40>
    arg 1 <integer_cst 0x7ffaafcb1840 type <pointer_type 0x7ffaafc93888> constant 0>
    test.c:385:22 start: test.c:385:22 finish: test.c:385:22>
------------------------------
_12 = (long unsigned int) _11;
 <ssa_name 0x7ffaafcb99d8
    type <integer_type 0x7ffab01625e8 int public SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab01625e8 precision 32 min <integer_cst 0x7ffab014ede0 -2147483648> max <integer_cst 0x7ffab014edf8 2147483647>
        pointer_to_this <pointer_type 0x7ffab0169a80>>
   
    def_stmt _11 = optind;
    version 11>
------------------------------
_13 = _12 * 8;
 <ssa_name 0x7ffaafcb9a20
    type <integer_type 0x7ffab01627e0 long unsigned int public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014eeb8 0> max <integer_cst 0x7ffab0150500 18446744073709551615>
        pointer_to_this <pointer_type 0x7ffab016e9d8>>
   
    def_stmt _12 = (long unsigned int) _11;
    version 12>
------------------------------
_14 = argv_3(D) + _13;
 <ssa_name 0x7ffab0156d38
    type <pointer_type 0x7ffaafc93888
        type <pointer_type 0x7ffaafc937e0 type <integer_type 0x7ffaafc93738 char>
            public unsigned DI
            size <integer_cst 0x7ffab014ebe8 constant 64>
            unit size <integer_cst 0x7ffab014ec00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
            pointer_to_this <pointer_type 0x7ffaafc93888>>
        public unsigned DI size <integer_cst 0x7ffab014ebe8 64> unit size <integer_cst 0x7ffab014ec00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7ffaafca7500 argv>
    def_stmt GIMPLE_NOP
    version 3
    ptr-info 0x7ffaafcb1b40>
------------------------------
# VUSE <.MEM_8(D)>
input_filename_15 = *_14;
 <mem_ref 0x7ffaafcb2e60
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
   
    arg 0 <ssa_name 0x7ffaafcb9ab0
        type <pointer_type 0x7ffaafc93888 type <pointer_type 0x7ffaafc937e0>
            public unsigned DI size <integer_cst 0x7ffab014ebe8 64> unit size <integer_cst 0x7ffab014ec00 8>
            align 64 symtab 0 alias set -1 structural equality>
       
        def_stmt _14 = argv_3(D) + _13;
        version 14
        ptr-info 0x7ffaafcb1b58>
    arg 1 <integer_cst 0x7ffaafcb1840 type <pointer_type 0x7ffaafc93888> constant 0>>
------------------------------
_17 = _16 + 1;
 <ssa_name 0x7ffaafcb9b40
    type <integer_type 0x7ffab01625e8 int public SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab01625e8 precision 32 min <integer_cst 0x7ffab014ede0 -2147483648> max <integer_cst 0x7ffab014edf8 2147483647>
        pointer_to_this <pointer_type 0x7ffab0169a80>>
   
    def_stmt _16 = optind;
    version 16>
------------------------------
_19 = (sizetype) _18;
 <ssa_name 0x7ffaafcb9bd0
    type <integer_type 0x7ffab01625e8 int public SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab01625e8 precision 32 min <integer_cst 0x7ffab014ede0 -2147483648> max <integer_cst 0x7ffab014edf8 2147483647>
        pointer_to_this <pointer_type 0x7ffab0169a80>>
   
    def_stmt _18 = optind;
    version 18>
------------------------------
_20 = _19 + 1;
 <ssa_name 0x7ffaafcb9c18
    type <integer_type 0x7ffab0162000 sizetype public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014ec18 0> max <integer_cst 0x7ffab01504a0 18446744073709551615>>
   
    def_stmt _19 = (sizetype) _18;
    version 19>
------------------------------
_21 = _20 * 8;
 <ssa_name 0x7ffaafcb9c60
    type <integer_type 0x7ffab0162000 sizetype public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014ec18 0> max <integer_cst 0x7ffab01504a0 18446744073709551615>>
   
    def_stmt _20 = _19 + 1;
    version 20>
------------------------------
_22 = argv_3(D) + _21;
 <ssa_name 0x7ffab0156d38
    type <pointer_type 0x7ffaafc93888
        type <pointer_type 0x7ffaafc937e0 type <integer_type 0x7ffaafc93738 char>
            public unsigned DI
            size <integer_cst 0x7ffab014ebe8 constant 64>
            unit size <integer_cst 0x7ffab014ec00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
            pointer_to_this <pointer_type 0x7ffaafc93888>>
        public unsigned DI size <integer_cst 0x7ffab014ebe8 64> unit size <integer_cst 0x7ffab014ec00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7ffaafca7500 argv>
    def_stmt GIMPLE_NOP
    version 3
    ptr-info 0x7ffaafcb1b40>
------------------------------
# VUSE <.MEM_8(D)>
output_filename_23 = *_22;
 <mem_ref 0x7ffaafcb2eb0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
   
    arg 0 <ssa_name 0x7ffaafcb9cf0
        type <pointer_type 0x7ffaafc93888 type <pointer_type 0x7ffaafc937e0>
            public unsigned DI size <integer_cst 0x7ffab014ebe8 64> unit size <integer_cst 0x7ffab014ec00 8>
            align 64 symtab 0 alias set -1 structural equality>
       
        def_stmt _22 = argv_3(D) + _21;
        version 22
        ptr-info 0x7ffaafcb1b88>
    arg 1 <integer_cst 0x7ffaafcb1840 type <pointer_type 0x7ffaafc93888> constant 0>>
------------------------------
_40 = (long int) slash_39;
 <ssa_name 0x7ffaafcbdb40
    type <pointer_type 0x7ffaafc93a80
        type <integer_type 0x7ffaafc939d8 char readonly string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc93a80>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7ffaafcc1990 slash>
    def_stmt slash_39 = strrchr (input_filename_15, 47);
    version 39
    ptr-info 0x7ffaafcb1c48>
------------------------------
_41 = (long int) input_filename_15;
 <ssa_name 0x7ffaafcb9af8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcb7750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7ffaafcb1b70>
------------------------------
_42 = _40 - _41;
 <ssa_name 0x7ffaafcbdb88
    type <integer_type 0x7ffab0162738 long int DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014ee70 -9223372036854775808> max <integer_cst 0x7ffab014ee88 9223372036854775807>
        pointer_to_this <pointer_type 0x7ffab016e930>>
   
    def_stmt _40 = (long int) slash_39;
    version 40>
------------------------------
len_43 = (size_t) _42;
 <ssa_name 0x7ffaafcbdc18
    type <integer_type 0x7ffab0162738 long int DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014ee70 -9223372036854775808> max <integer_cst 0x7ffab014ee88 9223372036854775807>
        pointer_to_this <pointer_type 0x7ffab016e930>>
   
    def_stmt _42 = _40 - _41;
    version 42>
------------------------------
_44 = len_43 + 11;
 <ssa_name 0x7ffaafcbdc60
    type <integer_type 0x7ffaafca07e0 size_t public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014eeb8 0> max <integer_cst 0x7ffab0150500 18446744073709551615> context <translation_unit_decl 0x7ffab0159168 test.c>>
    var <var_decl 0x7ffaafcc1ab0 len>
    def_stmt len_43 = (size_t) _42;
    version 43>
------------------------------
len_46 = len_43 + 1;
 <ssa_name 0x7ffaafcbdc60
    type <integer_type 0x7ffaafca07e0 size_t public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014eeb8 0> max <integer_cst 0x7ffab0150500 18446744073709551615> context <translation_unit_decl 0x7ffab0159168 test.c>>
    var <var_decl 0x7ffaafcc1ab0 len>
    def_stmt len_43 = (size_t) _42;
    version 43>
------------------------------
_47 = tmpname_45 + len_43;
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
------------------------------
_51 = tmpname_49 + len_50;
 <ssa_name 0x7ffaafcbde10
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
    version 49
    ptr-info 0x7ffaafcb1ca8>
 <string_cst 0x7ffaafcc2240
    type <array_type 0x7ffaafca41f8
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        BLK
        size <integer_cst 0x7ffaafc96e58 constant 72>
        unit size <integer_cst 0x7ffaafc96e40 constant 9>
        align 8 symtab 0 alias set -1 structural equality
        domain <integer_type 0x7ffaafca4150 type <integer_type 0x7ffab0162000 sizetype>
            DI
            size <integer_cst 0x7ffab014ebe8 constant 64>
            unit size <integer_cst 0x7ffab014ec00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014ec18 0> max <integer_cst 0x7ffab014ec00 8>>
        pointer_to_this <pointer_type 0x7ffaafca42a0>>
    readonly constant static "stXXXXXX\000">
------------------------------
_52 = tmpname_49;
 <ssa_name 0x7ffaafcbde10
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
    version 49
    ptr-info 0x7ffaafcb1ca8>
------------------------------
_90 = tmpname_49;
 <ssa_name 0x7ffaafcbde10
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
    version 49
    ptr-info 0x7ffaafcb1ca8>
------------------------------
tmpname_36 = _90;
 <ssa_name 0x7ffaafccc798
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1b40 D.4115>
    def_stmt _90 = tmpname_49;
    version 90
    ptr-info 0x7ffaafcb1cf0>
------------------------------
_94 = _38;
 <ssa_name 0x7ffaafcbd480
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
   
    def_stmt _38 = PHI <0B(8), tmpname_36(9)>
    version 38
    ptr-info 0x7ffaafcb1c30>
------------------------------
tmpname_25 = _94;
 <ssa_name 0x7ffaafccc8b8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1240 D.4101>
    def_stmt _94 = _38;
    version 94
    ptr-info 0x7ffaafcb1d08>
 <string_cst 0x7ffaafca6318
    type <array_type 0x7ffaafca0d20
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        BLK
        size <integer_cst 0x7ffaafc96ca8 constant 488>
        unit size <integer_cst 0x7ffaafc96d50 constant 61>
        align 8 symtab 0 alias set -1 structural equality
        domain <integer_type 0x7ffaafca0c78 type <integer_type 0x7ffab0162000 sizetype>
            DI
            size <integer_cst 0x7ffab014ebe8 constant 64>
            unit size <integer_cst 0x7ffab014ec00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014ec18 0> max <integer_cst 0x7ffaafc96d38 60>>
        pointer_to_this <pointer_type 0x7ffaafca0dc8>>
    readonly constant static "warning: could not create temporary file whilst copying '%s'\000">
------------------------------
_54 = _53 % 2;
 <ssa_name 0x7ffab0156798
    type <integer_type 0x7ffab01625e8 int public SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab01625e8 precision 32 min <integer_cst 0x7ffab014ede0 -2147483648> max <integer_cst 0x7ffab014edf8 2147483647>
        pointer_to_this <pointer_type 0x7ffab0169a80>>
   
    def_stmt _53 = rand ();
    version 53>
------------------------------
_55 = _54 == 1;
 <ssa_name 0x7ffaafcc4240
    type <integer_type 0x7ffab01625e8 int public SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab01625e8 precision 32 min <integer_cst 0x7ffab014ede0 -2147483648> max <integer_cst 0x7ffab014edf8 2147483647>
        pointer_to_this <pointer_type 0x7ffab0169a80>>
   
    def_stmt _54 = _53 % 2;
    version 54>
------------------------------
size_56 = (off_t) _55;
 <ssa_name 0x7ffaafcc4288
    type <boolean_type 0x7ffaafca0a80 _Bool public unsigned QI
        size <integer_cst 0x7ffab014ecd8 constant 8>
        unit size <integer_cst 0x7ffab014ecf0 constant 1>
        align 8 symtab 0 alias set -1 canonical type 0x7ffab0162b28 precision 1 min <integer_cst 0x7ffaafc96d20 0> max <integer_cst 0x7ffaafc96d08 1>>
   
    def_stmt _55 = _54 == 1;
    version 55>
 <string_cst 0x7ffab0160040
    type <array_type 0x7ffaafca3bd0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        BLK
        size <integer_cst 0x7ffaafc96d68 constant 288>
        unit size <integer_cst 0x7ffaafc96e10 constant 36>
        align 8 symtab 0 alias set -1 structural equality
        domain <integer_type 0x7ffaafca3b28 type <integer_type 0x7ffab0162000 sizetype>
            DI
            size <integer_cst 0x7ffab014ebe8 constant 64>
            unit size <integer_cst 0x7ffab014ec00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014ec18 0> max <integer_cst 0x7ffaafc96df8 35>>
        pointer_to_this <pointer_type 0x7ffaafca3c78>>
    readonly constant static "error: the input file '%s' is empty\000">
------------------------------
_29 = 0;
 <integer_cst 0x7ffab014ef78 type <integer_type 0x7ffab01625e8 int> constant 0>
 <var_decl 0x7ffaafcb7900 statbuf
    type <integer_type 0x7ffab01625e8 int public SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab01625e8 precision 32 min <integer_cst 0x7ffab014ede0 -2147483648> max <integer_cst 0x7ffab014edf8 2147483647>
        pointer_to_this <pointer_type 0x7ffab0169a80>>
    addressable used SI file test.c line 349 col 7 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
    align 32 context <function_decl 0x7ffaafc94b00 main> abstract_origin <var_decl 0x7ffaafcb7120 statbuf>>
------------------------------
_31 = 0;
 <integer_cst 0x7ffab014ef78 type <integer_type 0x7ffab01625e8 int> constant 0>
 <var_decl 0x7ffaafcc6ab0 s
    type <record_type 0x7ffaafc9cc78 stat BLK
        size <integer_cst 0x7ffaafc96c18 constant 1152>
        unit size <integer_cst 0x7ffaafc96c90 constant 144>
        align 64 symtab 0 alias set -1 canonical type 0x7ffaafc9cc78
        fields <field_decl 0x7ffaafc9ee40 st_dev type <integer_type 0x7ffaafc9c738 __dev_t>
            unsigned DI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 28 col 13
            size <integer_cst 0x7ffab014ebe8 constant 64>
            unit size <integer_cst 0x7ffab014ec00 constant 8>
            align 64 offset_align 128
            offset <integer_cst 0x7ffab014ec18 constant 0>
            bit offset <integer_cst 0x7ffab014ec60 constant 0> context <record_type 0x7ffaafc9cc78 stat> chain <field_decl 0x7ffaafc9eda8 st_ino>> context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafca02a0> chain <type_decl 0x7ffaafc9eed8 D.4041>>
    addressable used BLK file test.c line 249 col 15 size <integer_cst 0x7ffaafc96c18 1152> unit size <integer_cst 0x7ffaafc96c90 144>
    align 128 context <function_decl 0x7ffaafc94b00 main> abstract_origin <var_decl 0x7ffaafcc62d0 s> chain <var_decl 0x7ffaafcc6b40 ret>>
------------------------------
_59 = _58 == 0;
 <ssa_name 0x7ffab0156750
    type <integer_type 0x7ffab01625e8 int public SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab01625e8 precision 32 min <integer_cst 0x7ffab014ede0 -2147483648> max <integer_cst 0x7ffab014edf8 2147483647>
        pointer_to_this <pointer_type 0x7ffab0169a80>>
   
    def_stmt _58 = lstat (input_filename_15, &s);
    version 58>
------------------------------
exists_60 = (bfd_boolean) _59;
 <ssa_name 0x7ffaafcc4cf0
    type <boolean_type 0x7ffaafca0a80 _Bool public unsigned QI
        size <integer_cst 0x7ffab014ecd8 constant 8>
        unit size <integer_cst 0x7ffab014ecf0 constant 1>
        align 8 symtab 0 alias set -1 canonical type 0x7ffab0162b28 precision 1 min <integer_cst 0x7ffaafc96d20 0> max <integer_cst 0x7ffaafc96d08 1>>
   
    def_stmt _59 = _58 == 0;
    version 59>
------------------------------
# VUSE <.MEM_100>
_61 = BIT_FIELD_REF <s, 32, 192>;
 <bit_field_ref 0x7ffab014d9f0
    type <integer_type 0x7ffab0162690 unsigned int public unsigned SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab0162690 precision 32 min <integer_cst 0x7ffab014ee58 0> max <integer_cst 0x7ffab014ee10 4294967295>
        pointer_to_this <pointer_type 0x7ffab016e888>>
   
    arg 0 <var_decl 0x7ffaafcc6ab0 s
        type <record_type 0x7ffaafc9cc78 stat BLK
            size <integer_cst 0x7ffaafc96c18 constant 1152>
            unit size <integer_cst 0x7ffaafc96c90 constant 144>
            align 64 symtab 0 alias set -1 canonical type 0x7ffaafc9cc78 fields <field_decl 0x7ffaafc9ee40 st_dev> context <translation_unit_decl 0x7ffab0159168 test.c>
            pointer_to_this <pointer_type 0x7ffaafca02a0> chain <type_decl 0x7ffaafc9eed8 D.4041>>
        addressable used BLK file test.c line 249 col 15 size <integer_cst 0x7ffaafc96c18 1152> unit size <integer_cst 0x7ffaafc96c90 144>
        align 128 context <function_decl 0x7ffaafc94b00 main> abstract_origin <var_decl 0x7ffaafcc62d0 s>
        chain <var_decl 0x7ffaafcc6b40 ret type <integer_type 0x7ffab01625e8 int>
            used SI file test.c line 250 col 7 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
            align 32 context <function_decl 0x7ffaafc94b00 main> abstract_origin <var_decl 0x7ffaafcc6240 ret>>>
    arg 1 <integer_cst 0x7ffab016a048 type <integer_type 0x7ffab0162000 sizetype> constant 32>
    arg 2 <integer_cst 0x7ffab016a0a8 type <integer_type 0x7ffab01620a8 bitsizetype> constant 192>
    test.c:259:4 start: test.c:259:4 finish: test.c:259:4>
------------------------------
_62 = _61 & 61568;
 <ssa_name 0x7ffaafcc4d80
    type <integer_type 0x7ffab0162690 unsigned int public unsigned SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab0162690 precision 32 min <integer_cst 0x7ffab014ee58 0> max <integer_cst 0x7ffab014ee10 4294967295>
        pointer_to_this <pointer_type 0x7ffab016e888>>
   
    def_stmt _61 = BIT_FIELD_REF <s, 32, 192>;
    version 61>
------------------------------
# VUSE <.MEM_100>
_63 = s.st_nlink;
 <component_ref 0x7ffab014da50
    type <integer_type 0x7ffaafc9c9d8 __nlink_t public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014eeb8 0> max <integer_cst 0x7ffab0150500 18446744073709551615> context <translation_unit_decl 0x7ffab0159168 test.c>>
   
    arg 0 <var_decl 0x7ffaafcc6ab0 s
        type <record_type 0x7ffaafc9cc78 stat BLK
            size <integer_cst 0x7ffaafc96c18 constant 1152>
            unit size <integer_cst 0x7ffaafc96c90 constant 144>
            align 64 symtab 0 alias set -1 canonical type 0x7ffaafc9cc78 fields <field_decl 0x7ffaafc9ee40 st_dev> context <translation_unit_decl 0x7ffab0159168 test.c>
            pointer_to_this <pointer_type 0x7ffaafca02a0> chain <type_decl 0x7ffaafc9eed8 D.4041>>
        addressable used BLK file test.c line 249 col 15 size <integer_cst 0x7ffaafc96c18 1152> unit size <integer_cst 0x7ffaafc96c90 144>
        align 128 context <function_decl 0x7ffaafc94b00 main> abstract_origin <var_decl 0x7ffaafcc62d0 s>
        chain <var_decl 0x7ffaafcc6b40 ret type <integer_type 0x7ffab01625e8 int>
            used SI file test.c line 250 col 7
            size <integer_cst 0x7ffab014ee28 constant 32>
            unit size <integer_cst 0x7ffab014ee40 constant 4>
            align 32 context <function_decl 0x7ffaafc94b00 main> abstract_origin <var_decl 0x7ffaafcc6240 ret>>>
    arg 1 <field_decl 0x7ffaafc9ed10 st_nlink type <integer_type 0x7ffaafc9c9d8 __nlink_t>
        unsigned DI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 41 col 15 size <integer_cst 0x7ffab014ebe8 64> unit size <integer_cst 0x7ffab014ec00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7ffab014ec48 constant 16>
        bit offset <integer_cst 0x7ffab014ec60 constant 0> context <record_type 0x7ffaafc9cc78 stat>
        chain <field_decl 0x7ffaafc9ec78 st_mode type <integer_type 0x7ffaafc9c930 __mode_t>
            unsigned SI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 42 col 14 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
            align 32 offset_align 128 offset <integer_cst 0x7ffab014ec48 16> bit offset <integer_cst 0x7ffab014ebe8 64> context <record_type 0x7ffaafc9cc78 stat> chain <field_decl 0x7ffaafc9ebe0 st_uid>>>
    test.c:260:8 start: test.c:260:8 finish: test.c:260:8>
mappinggggggggggggggggggg22gggggggggggg-------
------------------------------
# VUSE <.MEM_103>
_65 = s.st_mode;
 <component_ref 0x7ffab014dab0
    type <integer_type 0x7ffaafc9c930 __mode_t unsigned SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab0162690 precision 32 min <integer_cst 0x7ffab014ee58 0> max <integer_cst 0x7ffab014ee10 4294967295> context <translation_unit_decl 0x7ffab0159168 test.c>>
   
    arg 0 <var_decl 0x7ffaafcc6ab0 s
        type <record_type 0x7ffaafc9cc78 stat BLK
            size <integer_cst 0x7ffaafc96c18 constant 1152>
            unit size <integer_cst 0x7ffaafc96c90 constant 144>
            align 64 symtab 0 alias set -1 canonical type 0x7ffaafc9cc78 fields <field_decl 0x7ffaafc9ee40 st_dev> context <translation_unit_decl 0x7ffab0159168 test.c>
            pointer_to_this <pointer_type 0x7ffaafca02a0> chain <type_decl 0x7ffaafc9eed8 D.4041>>
        addressable used BLK file test.c line 249 col 15 size <integer_cst 0x7ffaafc96c18 1152> unit size <integer_cst 0x7ffaafc96c90 144>
        align 128 context <function_decl 0x7ffaafc94b00 main> abstract_origin <var_decl 0x7ffaafcc62d0 s>
        chain <var_decl 0x7ffaafcc6b40 ret type <integer_type 0x7ffab01625e8 int>
            used SI file test.c line 250 col 7 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
            align 32 context <function_decl 0x7ffaafc94b00 main> abstract_origin <var_decl 0x7ffaafcc6240 ret>>>
    arg 1 <field_decl 0x7ffaafc9ec78 st_mode type <integer_type 0x7ffaafc9c930 __mode_t>
        unsigned SI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 42 col 14 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
        align 32 offset_align 128
        offset <integer_cst 0x7ffab014ec48 constant 16>
        bit offset <integer_cst 0x7ffab014ebe8 constant 64> context <record_type 0x7ffaafc9cc78 stat>
        chain <field_decl 0x7ffaafc9ebe0 st_uid type <integer_type 0x7ffaafc9c888 __uid_t>
            unsigned SI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 44 col 13 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
            align 32 offset_align 128 offset <integer_cst 0x7ffab014ec48 16>
            bit offset <integer_cst 0x7ffaafc961e0 constant 96> context <record_type 0x7ffaafc9cc78 stat> chain <field_decl 0x7ffaafc9eb48 st_gid>>>
    test.c:280:20 start: test.c:280:20 finish: test.c:280:20>
mappinggggggggggggggggggg22gggggggggggg-------
------------------------------
_66 = _65 & 511;
 <ssa_name 0x7ffaafcc4ea0
    type <integer_type 0x7ffab0162690 unsigned int public unsigned SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab0162690 precision 32 min <integer_cst 0x7ffab014ee58 0> max <integer_cst 0x7ffab014ee10 4294967295>
        pointer_to_this <pointer_type 0x7ffab016e888>>
   
    def_stmt _65 = s.st_mode;
    version 65>
------------------------------
# VUSE <.MEM_106>
_67 = s.st_gid;
 <component_ref 0x7ffab014db10
    type <integer_type 0x7ffaafc9c7e0 __gid_t unsigned SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab0162690 precision 32 min <integer_cst 0x7ffab014ee58 0> max <integer_cst 0x7ffab014ee10 4294967295> context <translation_unit_decl 0x7ffab0159168 test.c>>
   
    arg 0 <var_decl 0x7ffaafcc6ab0 s
        type <record_type 0x7ffaafc9cc78 stat BLK
            size <integer_cst 0x7ffaafc96c18 constant 1152>
            unit size <integer_cst 0x7ffaafc96c90 constant 144>
            align 64 symtab 0 alias set -1 canonical type 0x7ffaafc9cc78 fields <field_decl 0x7ffaafc9ee40 st_dev> context <translation_unit_decl 0x7ffab0159168 test.c>
            pointer_to_this <pointer_type 0x7ffaafca02a0> chain <type_decl 0x7ffaafc9eed8 D.4041>>
        addressable used BLK file test.c line 249 col 15 size <integer_cst 0x7ffaafc96c18 1152> unit size <integer_cst 0x7ffaafc96c90 144>
        align 128 context <function_decl 0x7ffaafc94b00 main> abstract_origin <var_decl 0x7ffaafcc62d0 s>
        chain <var_decl 0x7ffaafcc6b40 ret type <integer_type 0x7ffab01625e8 int>
            used SI file test.c line 250 col 7 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
            align 32 context <function_decl 0x7ffaafc94b00 main> abstract_origin <var_decl 0x7ffaafcc6240 ret>>>
    arg 1 <field_decl 0x7ffaafc9eb48 st_gid type <integer_type 0x7ffaafc9c7e0 __gid_t>
        unsigned SI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 45 col 13 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
        align 32 offset_align 128
        offset <integer_cst 0x7ffab016a048 constant 32>
        bit offset <integer_cst 0x7ffab014ec60 constant 0> context <record_type 0x7ffaafc9cc78 stat>
        chain <field_decl 0x7ffaafc9eab0 __pad0 type <integer_type 0x7ffab01625e8 int>
            SI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 47 col 9 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
            align 32 offset_align 128 offset <integer_cst 0x7ffab016a048 32> bit offset <integer_cst 0x7ffab014ee28 32> context <record_type 0x7ffaafc9cc78 stat> chain <field_decl 0x7ffaafc9ea18 st_rdev>>>
    test.c:281:12 start: test.c:281:12 finish: test.c:281:12>
mappinggggggggggggggggggg22gggggggggggg-------
------------------------------
# VUSE <.MEM_106>
_68 = s.st_uid;
 <component_ref 0x7ffab014db70
    type <integer_type 0x7ffaafc9c888 __uid_t unsigned SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab0162690 precision 32 min <integer_cst 0x7ffab014ee58 0> max <integer_cst 0x7ffab014ee10 4294967295> context <translation_unit_decl 0x7ffab0159168 test.c>>
   
    arg 0 <var_decl 0x7ffaafcc6ab0 s
        type <record_type 0x7ffaafc9cc78 stat BLK
            size <integer_cst 0x7ffaafc96c18 constant 1152>
            unit size <integer_cst 0x7ffaafc96c90 constant 144>
            align 64 symtab 0 alias set -1 canonical type 0x7ffaafc9cc78 fields <field_decl 0x7ffaafc9ee40 st_dev> context <translation_unit_decl 0x7ffab0159168 test.c>
            pointer_to_this <pointer_type 0x7ffaafca02a0> chain <type_decl 0x7ffaafc9eed8 D.4041>>
        addressable used BLK file test.c line 249 col 15 size <integer_cst 0x7ffaafc96c18 1152> unit size <integer_cst 0x7ffaafc96c90 144>
        align 128 context <function_decl 0x7ffaafc94b00 main> abstract_origin <var_decl 0x7ffaafcc62d0 s>
        chain <var_decl 0x7ffaafcc6b40 ret type <integer_type 0x7ffab01625e8 int>
            used SI file test.c line 250 col 7 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
            align 32 context <function_decl 0x7ffaafc94b00 main> abstract_origin <var_decl 0x7ffaafcc6240 ret>>>
    arg 1 <field_decl 0x7ffaafc9ebe0 st_uid type <integer_type 0x7ffaafc9c888 __uid_t>
        unsigned SI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 44 col 13 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
        align 32 offset_align 128
        offset <integer_cst 0x7ffab014ec48 constant 16>
        bit offset <integer_cst 0x7ffaafc961e0 constant 96> context <record_type 0x7ffaafc9cc78 stat>
        chain <field_decl 0x7ffaafc9eb48 st_gid type <integer_type 0x7ffaafc9c7e0 __gid_t>
            unsigned SI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 45 col 13 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
            align 32 offset_align 128
            offset <integer_cst 0x7ffab016a048 constant 32>
            bit offset <integer_cst 0x7ffab014ec60 constant 0> context <record_type 0x7ffaafc9cc78 stat> chain <field_decl 0x7ffaafc9eab0 __pad0>>>
    test.c:281:12 start: test.c:281:12 finish: test.c:281:12>
mappinggggggggggggggggggg22gggggggggggg-------
------------------------------
# VUSE <.MEM_107>
_70 = s.st_mode;
 <component_ref 0x7ffab014dbd0
    type <integer_type 0x7ffaafc9c930 __mode_t unsigned SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab0162690 precision 32 min <integer_cst 0x7ffab014ee58 0> max <integer_cst 0x7ffab014ee10 4294967295> context <translation_unit_decl 0x7ffab0159168 test.c>>
   
    arg 0 <var_decl 0x7ffaafcc6ab0 s
        type <record_type 0x7ffaafc9cc78 stat BLK
            size <integer_cst 0x7ffaafc96c18 constant 1152>
            unit size <integer_cst 0x7ffaafc96c90 constant 144>
            align 64 symtab 0 alias set -1 canonical type 0x7ffaafc9cc78 fields <field_decl 0x7ffaafc9ee40 st_dev> context <translation_unit_decl 0x7ffab0159168 test.c>
            pointer_to_this <pointer_type 0x7ffaafca02a0> chain <type_decl 0x7ffaafc9eed8 D.4041>>
        addressable used BLK file test.c line 249 col 15 size <integer_cst 0x7ffaafc96c18 1152> unit size <integer_cst 0x7ffaafc96c90 144>
        align 128 context <function_decl 0x7ffaafc94b00 main> abstract_origin <var_decl 0x7ffaafcc62d0 s>
        chain <var_decl 0x7ffaafcc6b40 ret type <integer_type 0x7ffab01625e8 int>
            used SI file test.c line 250 col 7 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
            align 32 context <function_decl 0x7ffaafc94b00 main> abstract_origin <var_decl 0x7ffaafcc6240 ret>>>
    arg 1 <field_decl 0x7ffaafc9ec78 st_mode type <integer_type 0x7ffaafc9c930 __mode_t>
        unsigned SI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 42 col 14 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
        align 32 offset_align 128
        offset <integer_cst 0x7ffab014ec48 constant 16>
        bit offset <integer_cst 0x7ffab014ebe8 constant 64> context <record_type 0x7ffaafc9cc78 stat>
        chain <field_decl 0x7ffaafc9ebe0 st_uid type <integer_type 0x7ffaafc9c888 __uid_t>
            unsigned SI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 44 col 13 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
            align 32 offset_align 128 offset <integer_cst 0x7ffab014ec48 16>
            bit offset <integer_cst 0x7ffaafc961e0 constant 96> context <record_type 0x7ffaafc9cc78 stat> chain <field_decl 0x7ffaafc9eb48 st_gid>>>
    test.c:282:15 start: test.c:282:15 finish: test.c:282:15>
mappinggggggggggggggggggg22gggggggggggg-------
------------------------------
_71 = _70 & 4095;
 <ssa_name 0x7ffaafccc048
    type <integer_type 0x7ffab0162690 unsigned int public unsigned SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab0162690 precision 32 min <integer_cst 0x7ffab014ee58 0> max <integer_cst 0x7ffab014ee10 4294967295>
        pointer_to_this <pointer_type 0x7ffab016e888>>
   
    def_stmt _70 = s.st_mode;
    version 70>
 <string_cst 0x7ffab014d990
    type <array_type 0x7ffaafca3888
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        BLK
        size <integer_cst 0x7ffaafc96de0 constant 184>
        unit size <integer_cst 0x7ffaafc96dc8 constant 23>
        align 8 symtab 0 alias set -1 structural equality
        domain <integer_type 0x7ffaafca37e0 type <integer_type 0x7ffab0162000 sizetype>
            DI
            size <integer_cst 0x7ffab014ebe8 constant 64>
            unit size <integer_cst 0x7ffab014ec00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014ec18 0> max <integer_cst 0x7ffaafc96db0 22>>
        pointer_to_this <pointer_type 0x7ffaafca3930>>
    readonly constant static "unable to rename '%s';\000">
 <var_decl 0x7ffaafcc6ab0 s
    type <record_type 0x7ffaafc9cc78 stat BLK
        size <integer_cst 0x7ffaafc96c18 constant 1152>
        unit size <integer_cst 0x7ffaafc96c90 constant 144>
        align 64 symtab 0 alias set -1 canonical type 0x7ffaafc9cc78
        fields <field_decl 0x7ffaafc9ee40 st_dev type <integer_type 0x7ffaafc9c738 __dev_t>
            unsigned DI file /usr/include/x86_64-linux-gnu/bits/struct_stat.h line 28 col 13
            size <integer_cst 0x7ffab014ebe8 constant 64>
            unit size <integer_cst 0x7ffab014ec00 constant 8>
            align 64 offset_align 128
            offset <integer_cst 0x7ffab014ec18 constant 0>
            bit offset <integer_cst 0x7ffab014ec60 constant 0> context <record_type 0x7ffaafc9cc78 stat> chain <field_decl 0x7ffaafc9eda8 st_ino>> context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafca02a0> chain <type_decl 0x7ffaafc9eed8 D.4041>>
    addressable used BLK file test.c line 249 col 15 size <integer_cst 0x7ffaafc96c18 1152> unit size <integer_cst 0x7ffaafc96c90 144>
    align 128 context <function_decl 0x7ffaafc94b00 main> abstract_origin <var_decl 0x7ffaafcc62d0 s> chain <var_decl 0x7ffaafcc6b40 ret>>
------------------------------
_110 = ret_73;
 <ssa_name 0x7ffaafccc120
    type <integer_type 0x7ffab01625e8 int public SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab01625e8 precision 32 min <integer_cst 0x7ffab014ede0 -2147483648> max <integer_cst 0x7ffab014edf8 2147483647>
        pointer_to_this <pointer_type 0x7ffab0169a80>>
    var <var_decl 0x7ffaafcc6b40 ret>
    def_stmt ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
    version 73>
------------------------------
_32 = _110;
 <ssa_name 0x7ffaafcccd38
    type <integer_type 0x7ffab01625e8 int public SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab01625e8 precision 32 min <integer_cst 0x7ffab014ede0 -2147483648> max <integer_cst 0x7ffab014edf8 2147483647>
        pointer_to_this <pointer_type 0x7ffab0169a80>>
    var <var_decl 0x7ffaafcc6bd0 D.4147>
    def_stmt _110 = ret_73;
    version 110>
------------------------------
_33 = _32 != 0;
 <ssa_name 0x7ffab01566c0
    type <integer_type 0x7ffab01625e8 int public SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab01625e8 precision 32 min <integer_cst 0x7ffab014ede0 -2147483648> max <integer_cst 0x7ffab014edf8 2147483647>
        pointer_to_this <pointer_type 0x7ffab0169a80>>
   
    def_stmt _32 = _110;
    version 32>
------------------------------
_34 = (int) _33;
 <ssa_name 0x7ffaafcbd000
    type <boolean_type 0x7ffaafca0a80 _Bool public unsigned QI
        size <integer_cst 0x7ffab014ecd8 constant 8>
        unit size <integer_cst 0x7ffab014ecf0 constant 1>
        align 8 symtab 0 alias set -1 canonical type 0x7ffab0162b28 precision 1 min <integer_cst 0x7ffaafc96d20 0> max <integer_cst 0x7ffaafc96d08 1>>
   
    def_stmt _33 = _32 != 0;
    version 33>
--------------------xxxxxxxxxxxxxxxxxxxxxxx------------------
# .MEM_111 = VDEF <.MEM_109>
status = _34;
 <var_decl 0x7ffab0ee3b40 status
    type <integer_type 0x7ffab01625e8 int public SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab01625e8 precision 32 min <integer_cst 0x7ffab014ede0 -2147483648> max <integer_cst 0x7ffab014edf8 2147483647>
        pointer_to_this <pointer_type 0x7ffab0169a80>>
    static SI file test.c line 123 col 5 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
    align 32 context <translation_unit_decl 0x7ffab0159168 test.c> initial <integer_cst 0x7ffab014ef78 0>>
------------------------------
# VUSE <.MEM_80>
_74 = MEM[(int *)tmpname_26];
 <mem_ref 0x7ffaafcc7ca8
    type <integer_type 0x7ffab01625e8 int public SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ffab01625e8 precision 32 min <integer_cst 0x7ffab014ede0 -2147483648> max <integer_cst 0x7ffab014edf8 2147483647>
        pointer_to_this <pointer_type 0x7ffab0169a80>>
   
    arg 0 <ssa_name 0x7ffaafcb9e10
        type <pointer_type 0x7ffaafc937e0 type <integer_type 0x7ffaafc93738 char>
            public unsigned DI
            size <integer_cst 0x7ffab014ebe8 constant 64>
            unit size <integer_cst 0x7ffab014ec00 constant 8>
            align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
            pointer_to_this <pointer_type 0x7ffaafc93888>>
        var <var_decl 0x7ffaafcb7870 tmpname>
        def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
        version 26
        ptr-info 0x7ffaafcb1bd0>
    arg 1 <integer_cst 0x7ffaafcb1858 type <pointer_type 0x7ffab0169a80> constant 0>>
 <string_cst 0x7ffaafcc2ac0
    type <array_type 0x7ffaafca33f0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        SI
        size <integer_cst 0x7ffab014ee28 constant 32>
        unit size <integer_cst 0x7ffab014ee40 constant 4>
        align 8 symtab 0 alias set -1 structural equality
        domain <integer_type 0x7ffaafca3348 type <integer_type 0x7ffab0162000 sizetype>
            DI
            size <integer_cst 0x7ffab014ebe8 constant 64>
            unit size <integer_cst 0x7ffab014ec00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7ffab0162738 precision 64 min <integer_cst 0x7ffab014ec18 0> max <integer_cst 0x7ffaafc96d98 3>>
        pointer_to_this <pointer_type 0x7ffaafca3498>>
    readonly constant static "%d\012\000">
------------------------------
_113 = 0;
 <integer_cst 0x7ffab014ef78 type <integer_type 0x7ffab01625e8 int> constant 0>
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
qwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqw-1dqwdqwdqwdqwd
max expan 1   3--------GIMPLE goto -------
tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
max expan 2   3--------GIMPLE goto -------
_90 = tmpname_49;
GIMPLE ASSIGN
_90 = tmpname_49;
max expan 3   1tmpname_36 = _90;
--------GIMPLE goto -------
tmpname_36 = _90;
GIMPLE ASSIGN
tmpname_36 = _90;
max expan 4   3--------GIMPLE goto -------
_38 = PHI <0B(8), tmpname_36(9)>
max expan 5   1_94 = _38;
--------GIMPLE goto -------
_94 = _38;
GIMPLE ASSIGN
_94 = _38;
max expan 6   1tmpname_25 = _94;
--------GIMPLE goto -------
tmpname_25 = _94;
GIMPLE ASSIGN
tmpname_25 = _94;
max expan 7   1tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
--------GIMPLE goto -------
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
max expan 8   7--------GIMPLE goto -------
if (tmpname_26 != output_filename_30)
if (tmpname_26 != output_filename_30)
--------GIMPLE goto -------
# VUSE <.MEM_80>
_74 = MEM[(int *)tmpname_26];
GIMPLE ASSIGN
# VUSE <.MEM_80>
_74 = MEM[(int *)tmpname_26];
max expan 9   1# .MEM_98 = VDEF <.MEM_80>
_75 = __printf_chk (1, "%d\n", _74);
--------GIMPLE goto -------
# .MEM_98 = VDEF <.MEM_80>
_75 = __printf_chk (1, "%d\n", _74);
max expan 10   0[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
--------GIMPLE goto -------
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
--------GIMPLE goto -------
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
max expan 11   5--------GIMPLE goto -------
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
max expan 12   1_110 = ret_73;
--------GIMPLE goto -------
_110 = ret_73;
GIMPLE ASSIGN
_110 = ret_73;
max expan 13   1_32 = _110;
--------GIMPLE goto -------
_32 = _110;
GIMPLE ASSIGN
_32 = _110;
max expan 14   1_33 = _32 != 0;
--------GIMPLE goto -------
_33 = _32 != 0;
GIMPLE ASSIGN
_33 = _32 != 0;
max expan 15   1_34 = (int) _33;
--------GIMPLE goto -------
_34 = (int) _33;
GIMPLE ASSIGN
_34 = (int) _33;
max expan 16   1# .MEM_111 = VDEF <.MEM_109>
status = _34;
--------GIMPLE goto -------
# .MEM_111 = VDEF <.MEM_109>
status = _34;
GIMPLE ASSIGN
# .MEM_111 = VDEF <.MEM_109>
status = _34;
------------------VAR_DECL : LHS2------------------
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
if (ret_64 == 0)
if (ret_64 == 0)
max expan 17   12--------GIMPLE goto -------
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
max expan 18   2--------GIMPLE goto -------
_40 = (long int) slash_39;
GIMPLE ASSIGN
_40 = (long int) slash_39;
max expan 19   1_42 = _40 - _41;
--------GIMPLE goto -------
_42 = _40 - _41;
GIMPLE ASSIGN
_42 = _40 - _41;
max expan 20   1len_43 = (size_t) _42;
--------GIMPLE goto -------
len_43 = (size_t) _42;
GIMPLE ASSIGN
len_43 = (size_t) _42;
max expan 21   4--------GIMPLE goto -------
_47 = tmpname_45 + len_43;
GIMPLE ASSIGN
_47 = tmpname_45 + len_43;
max expan 22   1# .MEM_88 = VDEF <.MEM_87>
*_47 = 47;
--------GIMPLE goto -------
# .MEM_88 = VDEF <.MEM_87>
*_47 = 47;
GIMPLE ASSIGN
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
len_46 = len_43 + 1;
GIMPLE ASSIGN
len_46 = len_43 + 1;
max expan 23   1len_50 = PHI <len_46(5), 0(6)>
--------GIMPLE goto -------
len_50 = PHI <len_46(5), 0(6)>
max expan 24   1_51 = tmpname_49 + len_50;
--------GIMPLE goto -------
_51 = tmpname_49 + len_50;
GIMPLE ASSIGN
_51 = tmpname_49 + len_50;
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
# .MEM_87 = VDEF <.MEM_86>
memcpy (tmpname_45, input_filename_15, len_43);
--------GIMPLE goto -------
_44 = len_43 + 11;
GIMPLE ASSIGN
_44 = len_43 + 11;
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
if (slash_39 != 0B)
if (slash_39 != 0B)
--------GIMPLE goto -------
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
--------GIMPLE goto -------
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
max expan 25   0--------GIMPLE goto -------
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
--------GIMPLE goto -------
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
max expan 26   1if (_69 >= 0)
--------GIMPLE goto -------
if (_69 >= 0)
if (_69 >= 0)
max expan 27   1# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
[40;41m =======recursive_stmt========= [0m
max expan 28   1# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
max expan 29   3--------GIMPLE goto -------
if (_58 == 0)
if (_58 == 0)
--------GIMPLE goto -------
if (_58 != 0)
if (_58 != 0)
--------GIMPLE goto -------
_59 = _58 == 0;
GIMPLE ASSIGN
_59 = _58 == 0;
max expan 30   1exists_60 = (bfd_boolean) _59;
--------GIMPLE goto -------
exists_60 = (bfd_boolean) _59;
GIMPLE ASSIGN
exists_60 = (bfd_boolean) _59;
max expan 31   0[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
max expan 32   0--------GIMPLE goto -------
# .MEM_87 = VDEF <.MEM_86>
memcpy (tmpname_45, input_filename_15, len_43);
--------GIMPLE goto -------
_41 = (long int) input_filename_15;
GIMPLE ASSIGN
_41 = (long int) input_filename_15;
max expan 33   1_42 = _40 - _41;
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
max expan 34   0--------GIMPLE goto -------
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
--------GIMPLE goto -------
if (tmpname_26 == 0B)
if (tmpname_26 == 0B)
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
--------GIMPLE goto -------
# .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
max expan 35   2--------GIMPLE goto -------
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
--------GIMPLE goto -------
if (fd_37 == -1)
if (fd_37 == -1)
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
_52 = tmpname_49;
GIMPLE ASSIGN
_52 = tmpname_49;
max expan 36   0[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
# .MEM_87 = VDEF <.MEM_86>
memcpy (tmpname_45, input_filename_15, len_43);
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
qwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqw-1dqwdqwdqwdqwd
max expan 1   1tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
--------GIMPLE goto -------
tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
max expan 2   3--------GIMPLE goto -------
_90 = tmpname_49;
GIMPLE ASSIGN
_90 = tmpname_49;
max expan 3   1tmpname_36 = _90;
--------GIMPLE goto -------
tmpname_36 = _90;
GIMPLE ASSIGN
tmpname_36 = _90;
max expan 4   3--------GIMPLE goto -------
_38 = PHI <0B(8), tmpname_36(9)>
max expan 5   1_94 = _38;
--------GIMPLE goto -------
_94 = _38;
GIMPLE ASSIGN
_94 = _38;
max expan 6   1tmpname_25 = _94;
--------GIMPLE goto -------
tmpname_25 = _94;
GIMPLE ASSIGN
tmpname_25 = _94;
max expan 7   1tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
--------GIMPLE goto -------
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
max expan 8   7--------GIMPLE goto -------
if (tmpname_26 != output_filename_30)
if (tmpname_26 != output_filename_30)
--------GIMPLE goto -------
# VUSE <.MEM_80>
_74 = MEM[(int *)tmpname_26];
GIMPLE ASSIGN
# VUSE <.MEM_80>
_74 = MEM[(int *)tmpname_26];
max expan 9   1# .MEM_98 = VDEF <.MEM_80>
_75 = __printf_chk (1, "%d\n", _74);
--------GIMPLE goto -------
# .MEM_98 = VDEF <.MEM_80>
_75 = __printf_chk (1, "%d\n", _74);
max expan 10   0[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
--------GIMPLE goto -------
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
--------GIMPLE goto -------
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
max expan 11   5--------GIMPLE goto -------
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
max expan 12   1_110 = ret_73;
--------GIMPLE goto -------
_110 = ret_73;
GIMPLE ASSIGN
_110 = ret_73;
max expan 13   1_32 = _110;
--------GIMPLE goto -------
_32 = _110;
GIMPLE ASSIGN
_32 = _110;
max expan 14   1_33 = _32 != 0;
--------GIMPLE goto -------
_33 = _32 != 0;
GIMPLE ASSIGN
_33 = _32 != 0;
max expan 15   1_34 = (int) _33;
--------GIMPLE goto -------
_34 = (int) _33;
GIMPLE ASSIGN
_34 = (int) _33;
max expan 16   1# .MEM_111 = VDEF <.MEM_109>
status = _34;
--------GIMPLE goto -------
# .MEM_111 = VDEF <.MEM_109>
status = _34;
GIMPLE ASSIGN
# .MEM_111 = VDEF <.MEM_109>
status = _34;
------------------VAR_DECL : LHS2------------------
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
if (ret_64 == 0)
if (ret_64 == 0)
max expan 17   12--------GIMPLE goto -------
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
max expan 18   2--------GIMPLE goto -------
_40 = (long int) slash_39;
GIMPLE ASSIGN
_40 = (long int) slash_39;
max expan 19   1_42 = _40 - _41;
--------GIMPLE goto -------
_42 = _40 - _41;
GIMPLE ASSIGN
_42 = _40 - _41;
max expan 20   1len_43 = (size_t) _42;
--------GIMPLE goto -------
len_43 = (size_t) _42;
GIMPLE ASSIGN
len_43 = (size_t) _42;
max expan 21   4--------GIMPLE goto -------
_47 = tmpname_45 + len_43;
GIMPLE ASSIGN
_47 = tmpname_45 + len_43;
max expan 22   1# .MEM_88 = VDEF <.MEM_87>
*_47 = 47;
--------GIMPLE goto -------
# .MEM_88 = VDEF <.MEM_87>
*_47 = 47;
GIMPLE ASSIGN
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
len_46 = len_43 + 1;
GIMPLE ASSIGN
len_46 = len_43 + 1;
max expan 23   1len_50 = PHI <len_46(5), 0(6)>
--------GIMPLE goto -------
len_50 = PHI <len_46(5), 0(6)>
max expan 24   1_51 = tmpname_49 + len_50;
--------GIMPLE goto -------
_51 = tmpname_49 + len_50;
GIMPLE ASSIGN
_51 = tmpname_49 + len_50;
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
# .MEM_87 = VDEF <.MEM_86>
memcpy (tmpname_45, input_filename_15, len_43);
--------GIMPLE goto -------
_44 = len_43 + 11;
GIMPLE ASSIGN
_44 = len_43 + 11;
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
if (slash_39 != 0B)
if (slash_39 != 0B)
--------GIMPLE goto -------
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
--------GIMPLE goto -------
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
max expan 25   0--------GIMPLE goto -------
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
--------GIMPLE goto -------
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
max expan 26   1if (_69 >= 0)
--------GIMPLE goto -------
if (_69 >= 0)
if (_69 >= 0)
max expan 27   1# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
[40;41m =======recursive_stmt========= [0m
max expan 28   1# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
max expan 29   3--------GIMPLE goto -------
if (_58 == 0)
if (_58 == 0)
--------GIMPLE goto -------
if (_58 != 0)
if (_58 != 0)
--------GIMPLE goto -------
_59 = _58 == 0;
GIMPLE ASSIGN
_59 = _58 == 0;
max expan 30   1exists_60 = (bfd_boolean) _59;
--------GIMPLE goto -------
exists_60 = (bfd_boolean) _59;
GIMPLE ASSIGN
exists_60 = (bfd_boolean) _59;
max expan 31   0[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
max expan 32   0--------GIMPLE goto -------
# .MEM_87 = VDEF <.MEM_86>
memcpy (tmpname_45, input_filename_15, len_43);
--------GIMPLE goto -------
_41 = (long int) input_filename_15;
GIMPLE ASSIGN
_41 = (long int) input_filename_15;
max expan 33   1_42 = _40 - _41;
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
max expan 34   0--------GIMPLE goto -------
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
--------GIMPLE goto -------
if (tmpname_26 == 0B)
if (tmpname_26 == 0B)
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
--------GIMPLE goto -------
# .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
max expan 35   2--------GIMPLE goto -------
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
--------GIMPLE goto -------
if (fd_37 == -1)
if (fd_37 == -1)
[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
--------GIMPLE goto -------
_52 = tmpname_49;
GIMPLE ASSIGN
_52 = tmpname_49;
max expan 36   0[40;41m =======recursive_stmt========= [0m
[40;41m =======recursive_stmt========= [0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
=======================================================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 15 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;33m =======POP node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;44m =======print_function_path set_times  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;33m =======POP node_fun stack:utime========= [0m
[40;42m =======pre_check_funciton:set_times========= [0m
[40;42m =======start_check_funciton:set_times========= [0m
[40;33m =======POP node_fun stack:set_times========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;33m =======POP node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;33m =======POP node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;33m =======POP node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;33m =======POP node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;33m =======POP node_fun stack:strrchr========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m
 <function_decl 0x7ffaafc94b00 main
    type <function_type 0x7ffaafc93930
        type <integer_type 0x7ffab01625e8 int public SI
            size <integer_cst 0x7ffab014ee28 constant 32>
            unit size <integer_cst 0x7ffab014ee40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ffab01625e8 precision 32 min <integer_cst 0x7ffab014ede0 -2147483648> max <integer_cst 0x7ffab014edf8 2147483647>
            pointer_to_this <pointer_type 0x7ffab0169a80>>
        QI
        size <integer_cst 0x7ffab014ecd8 constant 8>
        unit size <integer_cst 0x7ffab014ecf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7ffaafc929b0 value <integer_type 0x7ffab01625e8 int>
            chain <tree_list 0x7ffaafc92988 value <pointer_type 0x7ffaafc93888>
                chain <tree_list 0x7ffab0161ac8 value <void_type 0x7ffab0162f18 void>>>>
        pointer_to_this <pointer_type 0x7ffaafca09d8>>
    nothrow public static function-specific-target function-specific-opt QI file test.c line 383 col 1 align 8 context <translation_unit_decl 0x7ffab0159168 test.c> initial <block 0x7ffaafcae180>
    result <result_decl 0x7ffab0159258 D.4073 type <integer_type 0x7ffab01625e8 int>
        ignored SI file test.c line 383 col 1 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
        align 32 context <function_decl 0x7ffaafc94b00 main>>
    arguments <parm_decl 0x7ffaafca7480 argc type <integer_type 0x7ffab01625e8 int>
        SI file test.c line 383 col 11 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
        align 32 context <function_decl 0x7ffaafc94b00 main> arg-type <integer_type 0x7ffab01625e8 int>
        chain <parm_decl 0x7ffaafca7500 argv type <pointer_type 0x7ffaafc93888>
            unsigned DI file test.c line 383 col 23
            size <integer_cst 0x7ffab014ebe8 constant 64>
            unit size <integer_cst 0x7ffab014ec00 constant 8>
            align 64 context <function_decl 0x7ffaafc94b00 main> arg-type <pointer_type 0x7ffaafc93888>>>
    struct-function 0x7ffaafcaf0b0>
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>

dot graph START

======================================================================
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
In function ‘main’:
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

_90 = tmpname_49;
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 7: _90 = tmpname_49;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start _90 = tmpname_49;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _90 = tmpname_49;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_36 = _90;
test.c:197:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: tmpname_36 = _90;
test.c:197:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start tmpname_36 = _90;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start tmpname_36 = _90;
test.c:197:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 10: _38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _38 = PHI <0B(8), tmpname_36(9)>
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

_94 = _38;
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 10: _94 = _38;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _94 = _38;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _94 = _38;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 10: tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start tmpname_25 = _94;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 11: tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 20: if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph stmt start if (tmpname_26 != output_filename_30)
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph stmt end

if (tmpname_26 != output_filename_30)

 ================== find cond branch ================= 
if (tmpname_26 != output_filename_30)
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 33: _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _74 = MEM[(int *)tmpname_26];
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_75 = __printf_chk (1, "%d\n", _74);
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 33: _75 = __printf_chk (1, "%d\n", _74);
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 31: unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 31dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 28: unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 24: ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 24dot graph target basicblock en1

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph stmt end

this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---rename-----
dot graph entry main
dot graph target entry end

_110 = ret_73;
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 32: _110 = ret_73;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _110 = ret_73;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _110 = ret_73;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

_32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _32 = _110;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _33 = _32 != 0;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_34 = (int) _33;
test.c:374:70: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _34 = (int) _33;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start status = _34;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph stmt end

dot graph entry main
dot graph target entry end

if (ret_64 == 0)
test.c:264:10: warning: use location
       if (ret == 0)
          ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 24: if (ret_64 == 0)
test.c:264:10: warning: use location
       if (ret == 0)
          ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 24dot graph target basicblock en1

dot graph stmt start if (ret_64 == 0)
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start if (ret_64 == 0)
test.c:264:10: warning: use location
       if (ret == 0)
          ^
dot graph stmt end

if (ret_64 == 0)

 ================== find cond branch ================= 
if (ret_64 == 0)
Cond in fucntion main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 28
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 4: slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph stmt end

this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _40 = (long int) slash_39;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_42 = _40 - _41;
test.c:176:19: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _42 = _40 - _41;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_43 = (size_t) _42;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _47 = tmpname_45 + len_43;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

*_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start *_47 = 47;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_46 = len_43 + 1;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---strrchr-----
dot graph entry main
dot graph target entry end

memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 4: if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start if (slash_39 != 0B)
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph stmt end

if (slash_39 != 0B)

 ================== find cond branch ================= 
if (slash_39 != 0B)
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 30: set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 30dot graph target basicblock en1

dot graph stmt start set_times (input_filename_15, &s);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph stmt end

this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
dot graph arrowdot graph start relate for1ID : 1086489506
from set_times basic block 2dot graph end relate end

dot graph relate stmt start ID : 176713207 stmt(call) :result_10 = utime (destination_8(D), &tb);
In function ‘set_times’:
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
destination_8(D)
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
In function ‘main’:
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 28: _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 27: chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 27dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _71);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 26: _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph stmt end

this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 26: chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _66);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _58 = lstat (input_filename_15, &s);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph stmt end

this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _59 = _58 == 0;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start exists_60 = (bfd_boolean) _59;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 15: _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 15dot graph target basicblock en1

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _41 = (long int) input_filename_15;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 12: _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 12dot graph target basicblock en1

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 19: set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start set_times (tmpname_26, &statbuf);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph stmt end

this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
dot graph arrowdot graph start relate for1ID : 223726076
from set_times basic block 2dot graph end relate end

dot graph relate stmt start ID : 1453494986 stmt(call) :result_10 = utime (destination_8(D), &tb);
In function ‘set_times’:
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
destination_8(D)
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (tmpname_26 == 0B)
In function ‘main’:
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 11: if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start if (tmpname_26 == 0B)
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph stmt end

if (tmpname_26 == 0B)

 ================== find cond branch ================= 
if (tmpname_26 == 0B)
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 8: free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start free (tmpname_36);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt is child function---free-----

 ================== find ================== 
free (tmpname_36);
test.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
dot graph entry main
dot graph target entry end

fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start fd_37 = mkstemp (tmpname_36);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph stmt end

this stmt is child function---mkstemp-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 9: close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start close (fd_37);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph stmt end

this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start if (fd_37 == -1)
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph stmt end

if (fd_37 == -1)

 ================== find cond branch ================= 
if (fd_37 == -1)
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_52 = tmpname_49;
test.c:188:10: warning: use location
   return tmpname;
          ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: _52 = tmpname_49;
test.c:188:10: warning: use location
   return tmpname;
          ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start _52 = tmpname_49;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _52 = tmpname_49;
test.c:188:10: warning: use location
   return tmpname;
          ^
dot graph stmt end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph arrowsubgraph cluster_1342332890 dot graph subgraph  _74 = MEM[(int *)tmpname_26];
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
dot graph subgrapend

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph arrowsubgraph cluster_747371694 dot graph subgraph  _75 = __printf_chk (1, "%d\n", _74);
_74 = MEM[(int *)tmpname_26];
dot graph subgrapend

 <ssa_name 0x7ffaafcbdcf0
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7ffaafcb1c60>
dot graph start relate for1ID : 1086489506
from set_times basic block 2dot graph end relate end

subgraph cluster_823796336 dot graph subgraph  start ID : 176713207 stmt(relate) ， Tree ID : 1086489506 : result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
dot graph subgrapend

dot graph start relate for1ID : 223726076
from set_times basic block 2dot graph end relate end

subgraph cluster_716680387 dot graph subgraph  start ID : 1453494986 stmt(relate) ， Tree ID : 223726076 : result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
dot graph subgrapend


 ================== Start Use after free Check ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_94 = _38;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_80>
_75 = __printf_chk (1, "%d\n", _74);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (ret_64 == 0)
test.c:264:10: warning: use location
       if (ret == 0)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================

 <function_decl 0x7ffaafc94b00 main
    type <function_type 0x7ffaafc93930
        type <integer_type 0x7ffab01625e8 int public SI
            size <integer_cst 0x7ffab014ee28 constant 32>
            unit size <integer_cst 0x7ffab014ee40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ffab01625e8 precision 32 min <integer_cst 0x7ffab014ede0 -2147483648> max <integer_cst 0x7ffab014edf8 2147483647>
            pointer_to_this <pointer_type 0x7ffab0169a80>>
        QI
        size <integer_cst 0x7ffab014ecd8 constant 8>
        unit size <integer_cst 0x7ffab014ecf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7ffaafc929b0 value <integer_type 0x7ffab01625e8 int>
            chain <tree_list 0x7ffaafc92988 value <pointer_type 0x7ffaafc93888>
                chain <tree_list 0x7ffab0161ac8 value <void_type 0x7ffab0162f18 void>>>>
        pointer_to_this <pointer_type 0x7ffaafca09d8>>
    nothrow public static function-specific-target function-specific-opt QI file test.c line 383 col 1 align 8 context <translation_unit_decl 0x7ffab0159168 test.c> initial <block 0x7ffaafcae180>
    result <result_decl 0x7ffab0159258 D.4073 type <integer_type 0x7ffab01625e8 int>
        ignored SI file test.c line 383 col 1 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
        align 32 context <function_decl 0x7ffaafc94b00 main>>
    arguments <parm_decl 0x7ffaafca7480 argc type <integer_type 0x7ffab01625e8 int>
        SI file test.c line 383 col 11 size <integer_cst 0x7ffab014ee28 32> unit size <integer_cst 0x7ffab014ee40 4>
        align 32 context <function_decl 0x7ffaafc94b00 main> arg-type <integer_type 0x7ffab01625e8 int>
        chain <parm_decl 0x7ffaafca7500 argv type <pointer_type 0x7ffaafc93888>
            unsigned DI file test.c line 383 col 23
            size <integer_cst 0x7ffab014ebe8 constant 64>
            unit size <integer_cst 0x7ffab014ec00 constant 8>
            align 64 context <function_decl 0x7ffaafc94b00 main> arg-type <pointer_type 0x7ffaafc93888>>>
    struct-function 0x7ffaafcaf0b0>
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>

dot graph START

======================================================================
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

_90 = tmpname_49;
lto1: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 7: _90 = tmpname_49;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start _90 = tmpname_49;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _90 = tmpname_49;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_36 = _90;
test.c:197:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: tmpname_36 = _90;
test.c:197:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start tmpname_36 = _90;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start tmpname_36 = _90;
test.c:197:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 10: _38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _38 = PHI <0B(8), tmpname_36(9)>
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

_94 = _38;
lto1: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 10: _94 = _38;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _94 = _38;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _94 = _38;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 10: tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start tmpname_25 = _94;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 11: tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 20: if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph stmt start if (tmpname_26 != output_filename_30)
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph stmt end

if (tmpname_26 != output_filename_30)

 ================== find cond branch ================= 
if (tmpname_26 != output_filename_30)
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 33: _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _74 = MEM[(int *)tmpname_26];
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_75 = __printf_chk (1, "%d\n", _74);
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 33: _75 = __printf_chk (1, "%d\n", _74);
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 31: unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 31dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 28: unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 24: ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 24dot graph target basicblock en1

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph stmt end

this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---rename-----
dot graph entry main
dot graph target entry end

_110 = ret_73;
lto1: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 32: _110 = ret_73;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _110 = ret_73;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _110 = ret_73;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

_32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _32 = _110;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _33 = _32 != 0;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_34 = (int) _33;
test.c:374:70: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _34 = (int) _33;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start status = _34;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph stmt end

dot graph entry main
dot graph target entry end

if (ret_64 == 0)
test.c:264:10: warning: use location
       if (ret == 0)
          ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 24: if (ret_64 == 0)
test.c:264:10: warning: use location
       if (ret == 0)
          ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 24dot graph target basicblock en1

dot graph stmt start if (ret_64 == 0)
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start if (ret_64 == 0)
test.c:264:10: warning: use location
       if (ret == 0)
          ^
dot graph stmt end

if (ret_64 == 0)

 ================== find cond branch ================= 
if (ret_64 == 0)
Cond in fucntion main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 28
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 4: slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph stmt end

this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _40 = (long int) slash_39;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_42 = _40 - _41;
test.c:176:19: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _42 = _40 - _41;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_43 = (size_t) _42;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _47 = tmpname_45 + len_43;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

*_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start *_47 = 47;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_46 = len_43 + 1;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---strrchr-----
dot graph entry main
dot graph target entry end

memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 4: if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start if (slash_39 != 0B)
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph stmt end

if (slash_39 != 0B)

 ================== find cond branch ================= 
if (slash_39 != 0B)
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 30: set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 30dot graph target basicblock en1

dot graph stmt start set_times (input_filename_15, &s);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph stmt end

this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
dot graph arrowdot graph start relate for1ID : 1430608461
from set_times basic block 2dot graph end relate end

dot graph relate stmt start ID : 560392295 stmt(call) :result_10 = utime (destination_8(D), &tb);
In function ‘set_times’:
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
destination_8(D)
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
In function ‘main’:
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 28: _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 27: chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 27dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _71);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 26: _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph stmt end

this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 26: chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _66);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _58 = lstat (input_filename_15, &s);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph stmt end

this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _59 = _58 == 0;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start exists_60 = (bfd_boolean) _59;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 15: _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 15dot graph target basicblock en1

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _41 = (long int) input_filename_15;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 12: _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 12dot graph target basicblock en1

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 19: set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start set_times (tmpname_26, &statbuf);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph stmt end

this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
dot graph arrowdot graph start relate for1ID : 1195099392
from set_times basic block 2dot graph end relate end

dot graph relate stmt start ID : 1352683581 stmt(call) :result_10 = utime (destination_8(D), &tb);
In function ‘set_times’:
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
destination_8(D)
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (tmpname_26 == 0B)
In function ‘main’:
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 11: if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start if (tmpname_26 == 0B)
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph stmt end

if (tmpname_26 == 0B)

 ================== find cond branch ================= 
if (tmpname_26 == 0B)
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 8: free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start free (tmpname_36);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt is child function---free-----

 ================== find ================== 
free (tmpname_36);
test.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
dot graph entry main
dot graph target entry end

fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start fd_37 = mkstemp (tmpname_36);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph stmt end

this stmt is child function---mkstemp-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 9: close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start close (fd_37);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph stmt end

this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start if (fd_37 == -1)
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph stmt end

if (fd_37 == -1)

 ================== find cond branch ================= 
if (fd_37 == -1)
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_52 = tmpname_49;
test.c:188:10: warning: use location
   return tmpname;
          ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: _52 = tmpname_49;
test.c:188:10: warning: use location
   return tmpname;
          ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start _52 = tmpname_49;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _52 = tmpname_49;
test.c:188:10: warning: use location
   return tmpname;
          ^
dot graph stmt end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph arrowsubgraph cluster_695618017 dot graph subgraph  _74 = MEM[(int *)tmpname_26];
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
dot graph subgrapend

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph arrowsubgraph cluster_1402598911 dot graph subgraph  _75 = __printf_chk (1, "%d\n", _74);
_74 = MEM[(int *)tmpname_26];
dot graph subgrapend

 <ssa_name 0x7ffaafcbddc8
    type <pointer_type 0x7ffaafc937e0
        type <integer_type 0x7ffaafc93738 char public string-flag QI
            size <integer_cst 0x7ffab014ecd8 constant 8>
            unit size <integer_cst 0x7ffab014ecf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7ffab01623f0 precision 8 min <integer_cst 0x7ffaafc96180 -128> max <integer_cst 0x7ffaafc96168 127>
            pointer_to_this <pointer_type 0x7ffaafc937e0>>
        public unsigned DI
        size <integer_cst 0x7ffab014ebe8 constant 64>
        unit size <integer_cst 0x7ffab014ec00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7ffab0159168 test.c>
        pointer_to_this <pointer_type 0x7ffaafc93888>>
    var <var_decl 0x7ffaafcc1a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7ffaafcb1c90>
dot graph start relate for1ID : 1430608461
from set_times basic block 2dot graph end relate end

subgraph cluster_300987679 dot graph subgraph  start ID : 560392295 stmt(relate) ， Tree ID : 1430608461 : result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
dot graph subgrapend

dot graph start relate for1ID : 1195099392
from set_times basic block 2dot graph end relate end

subgraph cluster_570147321 dot graph subgraph  start ID : 1352683581 stmt(relate) ， Tree ID : 1195099392 : result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
dot graph subgrapend


 ================== Start Use after free Check ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_94 = _38;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_80>
_75 = __printf_chk (1, "%d\n", _74);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (ret_64 == 0)
test.c:264:10: warning: use location
       if (ret == 0)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================

[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 2
 [0m
[40;34m    used_stmt array stack totalsize of : 2744
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
algorithm time: 0.041778 s
=======Mapping node_fun:set_times=========
<bb 2> [100.00%]:
_1 = statbuf_5(D)->st_atim.tv_sec;
tb[0] = _1;
_2 = statbuf_5(D)->st_mtim.tv_sec;
tb[1] = _2;
result_10 = utime (destination_8(D), &tb);
tb ={v} {CLOBBER};
if (result_10 != 0)
  goto <bb 3>; [36.64%]
else
  goto <bb 4>; [63.36%]

=======is loop:0=========
<bb 3> [36.64%]:
_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));

=======is loop:0=========
<bb 4> [100.00%]:
return;

=======is loop:0=========
=======Mapping node_fun:main=========
<bb 2> [100.00%]:
_1 = *argv_3(D);
_11 = optind;
_12 = (long unsigned int) _11;
_13 = _12 * 8;
_14 = argv_3(D) + _13;
input_filename_15 = *_14;
_16 = optind;
_17 = _16 + 1;
if (argc_5(D) > _17)
  goto <bb 3>; [67.00%]
else
  goto <bb 4>; [33.00%]

=======is loop:0=========
<bb 3> [67.00%]:
_18 = optind;
_19 = (sizetype) _18;
_20 = _19 + 1;
_21 = _20 * 8;
_22 = argv_3(D) + _21;
output_filename_23 = *_22;
if (output_filename_23 == 0B)
  goto <bb 4>; [30.00%]
else
  goto <bb 11>; [70.00%]

=======is loop:0=========
<bb 4> [53.10%]:
# output_filename_35 = PHI <0B(2), output_filename_23(3)>
slash_39 = strrchr (input_filename_15, 47);
if (slash_39 != 0B)
  goto <bb 5>; [66.53%]
else
  goto <bb 6>; [33.47%]

=======is loop:0=========
<bb 5> [35.33%]:
_40 = (long int) slash_39;
_41 = (long int) input_filename_15;
_42 = _40 - _41;
len_43 = (size_t) _42;
_44 = len_43 + 11;
tmpname_45 = malloc (_44);
memcpy (tmpname_45, input_filename_15, len_43);
len_46 = len_43 + 1;
_47 = tmpname_45 + len_43;
*_47 = 47;
goto <bb 7>; [100.00%]

=======is loop:0=========
<bb 6> [17.77%]:
tmpname_48 = malloc (9);

=======is loop:0=========
<bb 7> [53.10%]:
# tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
# len_50 = PHI <len_46(5), 0(6)>
_51 = tmpname_49 + len_50;
memcpy (_51, "stXXXXXX", 9);
_52 = tmpname_49;
_90 = tmpname_49;
tmpname_36 = _90;
fd_37 = mkstemp (tmpname_36);
if (fd_37 == -1)
  goto <bb 8>; [4.85%]
else
  goto <bb 9>; [95.15%]

=======is loop:0=========
<bb 8> [2.58%]:
free (tmpname_36);
goto <bb 10>; [100.00%]

=======is loop:0=========
<bb 9> [50.52%]:
close (fd_37);

=======is loop:0=========
<bb 10> [53.10%]:
# _38 = PHI <0B(8), tmpname_36(9)>
_94 = _38;
tmpname_25 = _94;

=======is loop:0=========
<bb 11> [100.00%]:
# tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
# output_filename_30 = PHI <output_filename_23(3), output_filename_35(10)>
if (tmpname_26 == 0B)
  goto <bb 12>; [0.04%]
else
  goto <bb 13>; [99.96%]

=======is loop:0=========
<bb 12> [0.04%]:
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
exit (1);

=======is loop:0=========
<bb 13> [99.96%]:
_53 = rand ();
_54 = _53 % 2;
_55 = _54 == 1;
size_56 = (off_t) _55;
if (_54 != 1)
  goto <bb 14>; [69.50%]
else
  goto <bb 17>; [30.50%]

=======is loop:0=========
<bb 14> [69.47%]:
if (_54 != 1)
  goto <bb 15>; [48.88%]
else
  goto <bb 16>; [51.12%]

=======is loop:0=========
<bb 15> [33.96%]:
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

=======is loop:0=========
<bb 16> [69.47%]:
status = 1;

=======is loop:0=========
<bb 17> [99.96%]:
_28 = status;
if (_28 == 0)
  goto <bb 18>; [67.00%]
else
  goto <bb 33>; [33.00%]

=======is loop:0=========
<bb 18> [66.97%]:
_29 = 0;
if (_29 != 0)
  goto <bb 19>; [33.00%]
else
  goto <bb 20>; [67.00%]

=======is loop:0=========
<bb 19> [22.10%]:
set_times (tmpname_26, &statbuf);

=======is loop:0=========
<bb 20> [66.97%]:
if (tmpname_26 != output_filename_30)
  goto <bb 21>; [53.47%]
else
  goto <bb 34>; [46.53%]

=======is loop:0=========
<bb 21> [35.81%]:
_31 = 0;
_58 = lstat (input_filename_15, &s);
_59 = _58 == 0;
exists_60 = (bfd_boolean) _59;
if (_58 != 0)
  goto <bb 24>; [33.00%]
else
  goto <bb 22>; [67.00%]

=======is loop:0=========
<bb 22> [23.99%]:
_61 = BIT_FIELD_REF <s, 32, 192>;
_62 = _61 & 61568;
if (_62 == 32896)
  goto <bb 23>; [34.00%]
else
  goto <bb 29>; [66.00%]

=======is loop:0=========
<bb 23> [8.16%]:
_63 = s.st_nlink;
if (_63 == 1)
  goto <bb 24>; [34.00%]
else
  goto <bb 29>; [66.00%]

=======is loop:0=========
<bb 24> [14.59%]:
ret_64 = rename (tmpname_26, input_filename_15);
if (ret_64 == 0)
  goto <bb 25>; [70.44%]
else
  goto <bb 28>; [29.56%]

=======is loop:0=========
<bb 25> [10.28%]:
if (_58 == 0)
  goto <bb 26>; [36.64%]
else
  goto <bb 32>; [63.36%]

=======is loop:0=========
<bb 26> [3.77%]:
_65 = s.st_mode;
_66 = _65 & 511;
chmod (input_filename_15, _66);
_67 = s.st_gid;
_68 = s.st_uid;
_69 = chown (input_filename_15, _68, _67);
if (_69 >= 0)
  goto <bb 27>; [46.68%]
else
  goto <bb 32>; [53.32%]

=======is loop:0=========
<bb 27> [1.76%]:
_70 = s.st_mode;
_71 = _70 & 4095;
chmod (input_filename_15, _71);
goto <bb 32>; [100.00%]

=======is loop:0=========
<bb 28> [4.31%]:
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
unlink (tmpname_26);
goto <bb 32>; [100.00%]

=======is loop:0=========
<bb 29> [21.22%]:
if (_31 != 0)
  goto <bb 30>; [33.00%]
else
  goto <bb 31>; [67.00%]

=======is loop:0=========
<bb 30> [7.00%]:
set_times (input_filename_15, &s);

=======is loop:0=========
<bb 31> [21.22%]:
unlink (tmpname_26);

=======is loop:0=========
<bb 32> [35.81%]:
# ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
s ={v} {CLOBBER};
_110 = ret_73;
_32 = _110;
_33 = _32 != 0;
_34 = (int) _33;
status = _34;
goto <bb 34>; [100.00%]

=======is loop:0=========
<bb 33> [32.99%]:
_74 = MEM[(int *)tmpname_26];
_75 = __printf_chk (1, "%d\n", _74);

=======is loop:0=========
<bb 34> [99.96%]:
statbuf ={v} {CLOBBER};
_113 = 0;
_7 = status;
return _7;

=======is loop:0=========
time: 0.076737 s
