../Compiler/newplugin.so 11.2.0 
test.c: In function ‘foo3’:
test.c:288:12: warning: assignment to ‘int’ from ‘void *’ makes integer from pointer without a cast [-Wint-conversion]
  288 |         *z = malloc(1);
      |            ^
test.c: In function ‘foo4’:
test.c:332:12: warning: assignment to ‘int *’ from incompatible pointer type ‘int **’ [-Wincompatible-pointer-types]
  332 |         p2 = &b;
      |            ^
test.c: In function ‘child’:
test.c:395:14: warning: assignment to ‘void *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
  395 |         data = 10;
      |              ^
test.c: In function ‘child3’:
test.c:421:22: warning: initialization of ‘int *’ from incompatible pointer type ‘void **’ [-Wincompatible-pointer-types]
  421 |         int *pData = &data;
      |                      ^
test.c: In function ‘child2’:
test.c:445:22: warning: initialization of ‘int *’ from incompatible pointer type ‘void **’ [-Wincompatible-pointer-types]
  445 |         int *pData = &data;
      |                      ^
test.c: In function ‘main’:
test.c:534:44: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
  534 |         pthread_create(&t, &attr2, child2, (void *)input2);
      |                                            ^

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 39%)
 phase parsing                      :   0.02 ( 67%)   0.04 (100%)   0.06 ( 86%)  1707k ( 51%)
 phase opt and generate             :   0.01 ( 33%)   0.00 (  0%)   0.01 ( 14%)   303k (  9%)
 callgraph optimization             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)   272  (  0%)
 callgraph ipa passes               :   0.01 ( 33%)   0.00 (  0%)   0.01 ( 14%)   144k (  4%)
 lto stream compression             :   0.01 ( 33%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 preprocessing                      :   0.00 (  0%)   0.01 ( 25%)   0.00 (  0%)   615k ( 19%)
 lexical analysis                   :   0.01 ( 33%)   0.01 ( 25%)   0.04 ( 57%)     0  (  0%)
 parser (global)                    :   0.01 ( 33%)   0.02 ( 50%)   0.02 ( 29%)   914k ( 28%)
 TOTAL                              :   0.03          0.04          0.07         3319k
../Compiler/newplugin.so 11.2.0 
test2.c: In function ‘foo2’:
test2.c:3:14: warning: implicit declaration of function ‘malloc’ [-Wimplicit-function-declaration]
    3 |     int *e = malloc(1);
      |              ^~~~~~
test2.c:1:1: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
  +++ |+#include <stdlib.h>
    1 | void foo2(int *ptr)
test2.c:3:14: warning: incompatible implicit declaration of built-in function ‘malloc’ [-Wbuiltin-declaration-mismatch]
    3 |     int *e = malloc(1);
      |              ^~~~~~
test2.c:3:14: note: include ‘<stdlib.h>’ or provide a declaration of ‘malloc’
test2.c:4:5: warning: implicit declaration of function ‘printf’ [-Wimplicit-function-declaration]
    4 |     printf("%d\n", e);
      |     ^~~~~~
test2.c:1:1: note: include ‘<stdio.h>’ or provide a declaration of ‘printf’
  +++ |+#include <stdio.h>
    1 | void foo2(int *ptr)
test2.c:4:5: warning: incompatible implicit declaration of built-in function ‘printf’ [-Wbuiltin-declaration-mismatch]
    4 |     printf("%d\n", e);
      |     ^~~~~~
test2.c:4:5: note: include ‘<stdio.h>’ or provide a declaration of ‘printf’
test2.c:5:5: warning: implicit declaration of function ‘free’ [-Wimplicit-function-declaration]
    5 |     free(e);
      |     ^~~~
test2.c:5:5: note: include ‘<stdlib.h>’ or provide a declaration of ‘free’
test2.c:5:5: warning: incompatible implicit declaration of built-in function ‘free’ [-Wbuiltin-declaration-mismatch]
test2.c:5:5: note: include ‘<stdlib.h>’ or provide a declaration of ‘free’

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)  1298k ( 89%)
 phase opt and generate             :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)    16k (  1%)
 callgraph optimization             :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 callgraph ipa passes               :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)    11k (  1%)
 TOTAL                              :   0.01          0.00          0.01         1466k
/usr/bin/ld: /tmp/cc84LWZP.o (symbol from plugin): in function `foo2':
(.text+0x0): multiple definition of `foo2'; /tmp/cc2trcHz.o (symbol from plugin):(.text+0x0): first defined here
../Compiler/newplugin.so 11.2.0 
test2.c:1:6: warning: type of ‘foo2’ does not match original declaration [-Wlto-type-mismatch]
    1 | void foo2(int *ptr)
      |      ^
test.c:290:6: note: return value type mismatch
  290 | int *foo2(int z)
      |      ^
test.c:290:6: note: ‘foo2’ was previously declared here
test.c:290:6: note: code may be misoptimized unless ‘-fno-strict-aliasing’ is used

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)  2157k ( 96%)
 phase opt and generate             :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)    80  (  0%)
 ipa inlining heuristics            :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)     0  (  0%)
 TOTAL                              :   0.01          0.00          0.01         2235k
../Compiler/newplugin.so 11.2.0 
--------plugin argument-----------
contextsentive 1
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=4
node:= 3 
 	next_branch :=4
node:= 4 
 	next_branch :=3
	next_branch :=5
node:= 5 
 	next_branch :=6
	next_branch :=7
node:= 6 
 node:= 7 
 	next_branch :=9
node:= 8 
 	next_branch :=9
node:= 9 
 	next_branch :=8
	next_branch :=10
node:= 10 
 	next_branch :=11
	next_branch :=14
node:= 11 
 	next_branch :=12
	next_branch :=13
node:= 12 
 node:= 13 
 	next_branch :=14
node:= 14 
 	next_branch :=15
	next_branch :=16
node:= 15 
 	next_branch :=16
=======node_fun:test22=========
=======node_fun:boo=========
=======node_fun:child2=========
=======node_fun:child3=========
=======node_fun:child=========
=======node_fun:foo=========
=======node_fun:foo2=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=5
node:= 4 
 	next_branch :=5
=======node_fun:foo3=========
=======node_fun:foo5=========
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 38 
===============The second stage : Mapping stmt=================
# .MEM_50 = VDEF <.MEM_49(D)>
pthread_attr_init (&attr);
# .MEM_51 = VDEF <.MEM_50>
pthread_attr_init (&attr2);
# .MEM_52 = VDEF <.MEM_51>
pthread_attr_setdetachstate (&attr, 1);
# .MEM_53 = VDEF <.MEM_52>
pthread_attr_setdetachstate (&attr2, 0);
----------------test-------------
pthread_create (&t, &attr2, child2, _2);
# .MEM_55 = VDEF <.MEM_54>
pthread_join (_3, 0B);
----------------test-------------
pthread_create (_4, &attr, child, 0B);
# .MEM_70 = VDEF <.MEM_69>
printf ("%ld\n", _5);
# .MEM_56 = VDEF <.MEM_45>
q_26 = malloc (5);
# VUSE <.MEM_56>
child (q_26);
# .MEM_57 = VDEF <.MEM_56>
__builtin_puts (&"fuck"[0]);
# .MEM_68 = VDEF <.MEM_46>
pthread_join (_6, 0B);
# .MEM_58 = VDEF <.MEM_46>
data_30 = malloc (400);
# .MEM_62 = VDEF <.MEM_48>
_9 = foo5 (q_26, q_26);
# .MEM_63 = VDEF <.MEM_62>
printf ("fuck%d\n", _9);
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
# .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
# .MEM_7 = VDEF <.MEM_6>
__builtin_puts (&"asdda"[0]);
# .MEM_11 = VDEF <.MEM_10>
child3 (_6);
_1 = pthread_self ();
# .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
# .MEM_14 = VDEF <.MEM_13>
foo (1);
 <var_decl 0x7f20e998e870 pData
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    addressable unsigned DI test.c:392:7 size <integer_cst 0x7f20e9e69bb8 64> unit-size <integer_cst 0x7f20e9e69bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f20e996ee00 child> chain <var_decl 0x7f20e998e7e0 data2>>
# .MEM_23 = VDEF <.MEM_22>
boo (10B);
# .MEM_9 = VDEF <.MEM_8(D)>
p2_3 = malloc (1);
# .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
# .MEM_28 = VDEF <.MEM_27(D)>
a2_12 = malloc (_1);
# .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
# .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
# .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
# .MEM_38 = VDEF <.MEM_37>
foo3 (p3_14);
# .MEM_8 = VDEF <.MEM_7(D)>
_1 = malloc (1);
# .MEM_8 = VDEF <.MEM_7(D)>
printf ("fuck%d\n", _1);
# .MEM_9 = VDEF <.MEM_8>
printf ("fuck%d\n", _2);
# .MEM_10 = VDEF <.MEM_9>
printf ("fuck%d\n", 10);
===============The second stage : Program slicing=================
# .MEM_54 = VDEF <.MEM_53>
pthread_create (&t, &attr2, child2, _2);
# .MEM_54 = VDEF <.MEM_53>
pthread_create (&t, &attr2, child2, _2);
# VUSE <.MEM_54>
_3 = t;
=============== *this point analyzable =================
pthread_create (&t, &attr2, child2, _2);
=============== program slcing stmt count:2=================
test.c:534:9: warning: use location
  534 |         pthread_create(&t, &attr2, child2, (void *)input2);
      |         ^
========================================================
=============== *this point analyzable =================
pthread_create (_4, &attr, child, 0B);
=============== program slcing stmt count:0=================
test.c:541:27: warning: use location
  541 |                 int err = pthread_create(&t2[i], &attr, child, NULL);
      |                           ^
========================================================
 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>
=============== *this point analyzable =================
q_26 = malloc (5);
=============== program slcing stmt count:1=================
test.c:545:18: warning: use location
  545 |         int *q = malloc(5);
      |                  ^
========================================================
 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>
=============== *this point analyzable =================
__builtin_puts (&"fuck"[0]);
=============== program slcing stmt count:1=================
test.c:553:17: warning: use location
  553 |                 printf("fuck\n");
      |                 ^
========================================================
=============== *this point analyzable =================
data_30 = malloc (400);
=============== program slcing stmt count:1=================
test.c:565:31: warning: use location
  565 |                 data = (int *)malloc(100 * sizeof(int));
      |                               ^
========================================================
=============== *this point analyzable =================
_9 = foo5 (q_26, q_26);
=============== program slcing stmt count:1=================
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^
========================================================
 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>
=============== *this point analyzable =================
test22 (k_2(D));
=============== program slcing stmt count:0=================
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
========================================================
 <ssa_name 0x7f20e998b510
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c300 b>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984690>
=============== *this point analyzable =================
test22 (b_2(D));
=============== program slcing stmt count:0=================
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^
========================================================
=============== *this point analyzable =================
__builtin_puts (&"asdda"[0]);
=============== program slcing stmt count:1=================
test.c:476:9: warning: use location
  476 |         printf("asdda\n");
      |         ^
========================================================
 <ssa_name 0x7f20e998b828
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _6 = data;
    version:6
    ptr-info 0x7f20e99846c0>
=============== *this point analyzable =================
child3 (_6);
=============== program slcing stmt count:0=================
test.c:457:9: warning: use location
  457 |         child3(data);
      |         ^
========================================================
 <ssa_name 0x7f20e998bb40
    type <integer_type 0x7f20e9e7e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e738 precision:64 min <integer_cst 0x7f20e9e69e88 0> max <integer_cst 0x7f20e9e6a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f20e9e8a7e0>>
   
    def_stmt _1 = pthread_self ();
    version:1>
=============== *this point analyzable =================
_1 = pthread_self ();
=============== program slcing stmt count:0=================
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
========================================================
 <ssa_name 0x7f20e998bb40
    type <integer_type 0x7f20e9e7e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e738 precision:64 min <integer_cst 0x7f20e9e69e88 0> max <integer_cst 0x7f20e9e6a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f20e9e8a7e0>>
   
    def_stmt _1 = pthread_self ();
    version:1>
=============== *this point analyzable =================
pthread_mutex_lock (&mLock);
=============== program slcing stmt count:1=================
test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
========================================================
# .MEM_13 = VDEF <.MEM_12>
pData = _2;
# .MEM_16 = VDEF <.MEM_15>
pData = &data2;
# VUSE <.MEM_16>
_3 = pData;
# VUSE <.MEM_19>
_6 = pData;
# VUSE <.MEM_20>
_7 = pData;
# .MEM_21 = VDEF <.MEM_20>
free (_7);
# .MEM_24 = VDEF <.MEM_23>
free (&pData);
# .MEM_26 = VDEF <.MEM_25>
free (&pData);
# .MEM_13 = VDEF <.MEM_12>
pData = _2;
# .MEM_16 = VDEF <.MEM_15>
pData = &data2;
# VUSE <.MEM_16>
_3 = pData;
# VUSE <.MEM_19>
_6 = pData;
# VUSE <.MEM_20>
_7 = pData;
# .MEM_21 = VDEF <.MEM_20>
free (_7);
# .MEM_24 = VDEF <.MEM_23>
free (&pData);
# .MEM_26 = VDEF <.MEM_25>
free (&pData);
=============== *this point analyzable =================
_2 = malloc (20);
=============== program slcing stmt count:7=================
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
========================================================
=============== *this point analyzable =================
p2_3 = malloc (1);
=============== program slcing stmt count:1=================
test.c:345:19: warning: use location
  345 |         int *p2 = malloc(1);
      |                   ^
========================================================
=============== *this point analyzable =================
_7 = foo2 (z_5(D));
=============== program slcing stmt count:1=================
test.c:361:16: warning: use location
  361 |         return foo2(z);
      |                ^
========================================================
=============== *this point analyzable =================
_7 = foo2 (z_5(D));
=============== program slcing stmt count:1=================
test.c:361:16: warning: use location
========================================================
=============== *this point analyzable =================
a2_12 = malloc (_1);
=============== program slcing stmt count:1=================
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
========================================================
=============== *this point analyzable =================
p3_14 = malloc (_2);
=============== program slcing stmt count:2=================
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
========================================================
=============== *this point analyzable =================
p4_16 = malloc (_3);
=============== program slcing stmt count:2=================
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
========================================================
# .MEM_32 = VDEF <.MEM_31>
p99 = _5;
# VUSE <.MEM_33>
_6 = p99;
# .MEM_32 = VDEF <.MEM_31>
p99 = _5;
# VUSE <.MEM_33>
_6 = p99;
=============== *this point analyzable =================
_5 = malloc (_4);
=============== program slcing stmt count:2=================
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
========================================================
=============== *this point analyzable =================
pthread_mutex_lock (&mLock2);
=============== program slcing stmt count:1=================
test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
========================================================
=============== *this point analyzable =================
pthread_mutex_lock (&mLock3);
=============== program slcing stmt count:1=================
test.c:303:9: warning: use location
  303 |         pthread_mutex_lock(&mLock3);
      |         ^
========================================================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======print_function_path main  function_call count: 11 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;42m =======pre add _ fucntion:foo5========= [0m
[40;44m =======print_function_path foo5  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;42m =======pre_check_funciton:foo5========= [0m
[40;42m =======start_check_funciton:foo5========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_join========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:child========= [0m
[40;44m =======print_function_path child  function_call count: 9 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:pthread_exit========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_unlock========= [0m
[40;42m =======pre add _ fucntion:boo========= [0m
[40;44m =======print_function_path boo  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;44m =======print_function_path test22  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;42m =======pre_check_funciton:test22========= [0m
[40;42m =======start_check_funciton:test22========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>
 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
dot graph entry test22
dot graph target entry end

test22 (k_2(D));
In function ‘main’:
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: test22 (k_2(D));
test.c:496:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start test22 (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start test22 (k_2(D));
test.c:496:9: warning: use location
dot graph stmt end

this stmt call this function :test22
trace fucntion name:test22 
[40;44m =======trace_function_path test22  function_call count: 2 level :0========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph start relate form ID : 814775397
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 74170162 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 74170162 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph start relate form ID : 814775397
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1652230205 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1652230205 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph start relate form ID : 814775397
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1962566118 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1962566118 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph start relate form ID : 814775397
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 322602624 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 322602624 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph start relate form ID : 814775397
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 863833668 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 863833668 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph start relate form ID : 814775397
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 302033493 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 302033493 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>
[40;36m ======= node_fun:test22========= [0m
[40;36m ======= find relate stmt with k ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :1========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph start relate form ID : 707941558
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1003516006 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1003516006 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph start relate form ID : 707941558
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1468405420 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1468405420 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph start relate form ID : 707941558
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 2088152475 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 2088152475 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph start relate form ID : 707941558
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1267531069 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1267531069 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph start relate form ID : 707941558
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1016126831 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1016126831 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph start relate form ID : 707941558
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1335067326 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1335067326 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>
[40;42m =======pre add _ fucntion:test22========= [0m
[40;41m =======recursive_fun2:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:12 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:493:9: warning: use location
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:493:9: warning: use location
[40;32m    HAS FREE STMT count:13 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:492:9: warning: use location
[40;32m    HAS FREE STMT count:14 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:491:9: warning: use location
[40;32m    HAS FREE STMT count:15 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:490:9: warning: use location
[40;32m    HAS FREE STMT count:16 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:489:9: warning: use location
[40;32m    HAS FREE STMT count:17 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:488:9: warning: use location
[40;32m    HAS FREE STMT count:18 name:free [0m

 ================== find free stmt ================== 
dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1257456808 dot graph subgraph  test22 (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_403235764 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_76173862 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_521025178 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1746872459 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1564266818 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_2047153674 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: free in this location

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: free in this location
  492 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: free in this location
  491 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: free in this location
  490 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: free in this location
  489 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: free in this location
  488 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: free in this location
  488 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: free in this location
  489 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: free in this location
  490 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: free in this location
  491 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: free in this location
  492 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: free in this location
  493 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:6 [0m
[40;31m  	free count:18 [0m
[40;31m  	possible double free [Looserules]:6 [0m
[40;31m  	possible double free [rigorous]:18 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:18 [0m

======================================================================

======================================================================
[40;42m =======pre add _ fucntion:free========= [0m
[40;42m =======pre_check_funciton:boo========= [0m
[40;42m =======start_check_funciton:boo========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f20e998b510
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c300 b>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984690>
 <ssa_name 0x7f20e998b510
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c300 b>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984690>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e998b510
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c300 b>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984690>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
dot graph entry boo
dot graph target entry end

test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^
dot graph target loc start test22 (b_2(D));
test.c:475:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: test22 (b_2(D));
test.c:475:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
dot graph target loc end

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph stmt start test22 (b_2(D));
test22 (b_2(D));
dot graph stmt end

dot graph stmt start test22 (b_2(D));
test.c:475:9: warning: use location
dot graph stmt end

this stmt call this function :test22
trace fucntion name:test22 
[40;44m =======trace_function_path test22  function_call count: 2 level :0========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph start relate form ID : 543450041
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 490571475 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 490571475 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph start relate form ID : 543450041
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1679252495 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1679252495 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph start relate form ID : 543450041
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 159341343 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 159341343 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph start relate form ID : 543450041
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 947266060 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 947266060 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph start relate form ID : 543450041
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 103535006 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 103535006 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph start relate form ID : 543450041
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1832757522 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1832757522 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e998b510
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c300 b>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984690>
[40;36m ======= node_fun:test22========= [0m
[40;36m ======= find relate stmt with b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :1========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph start relate form ID : 1883182557
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 968605859 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 968605859 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph start relate form ID : 1883182557
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 161589419 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 161589419 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph start relate form ID : 1883182557
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 550474306 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 550474306 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph start relate form ID : 1883182557
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1042776021 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1042776021 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph start relate form ID : 1883182557
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1813819624 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1813819624 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph start relate form ID : 1883182557
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 365556776 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 365556776 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e998b510
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c300 b>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984690>
[40;36m ======= node_fun:test22========= [0m
[40;36m ======= find relate stmt with b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test22========= [0m
[40;41m =======recursive_fun2:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:12 
dot graph entry boo
dot graph target entry end

free (b_2(D));
test.c:474:9: warning: use location
  474 |         free(b);
      |         ^
dot graph target loc start test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (b_2(D));
test.c:474:9: warning: use location
  474 |         free(b);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^
dot graph target loc end

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph stmt start free (b_2(D));
test22 (b_2(D));
dot graph stmt end

dot graph stmt start free (b_2(D));
test.c:474:9: warning: use location
  474 |         free(b);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (b_2(D));
test.c:474:9: warning: use location
[40;32m    HAS FREE STMT count:13 name:free [0m

 ================== find free stmt ================== 
dot graph entry boo
dot graph target entry end

free (b_2(D));
test.c:473:9: warning: use location
  473 |         free(b);
      |         ^
dot graph target loc start test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (b_2(D));
test.c:473:9: warning: use location
  473 |         free(b);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^
dot graph target loc end

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph stmt start free (b_2(D));
test22 (b_2(D));
dot graph stmt end

dot graph stmt start free (b_2(D));
test.c:473:9: warning: use location
  473 |         free(b);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (b_2(D));
test.c:473:9: warning: use location
[40;32m    HAS FREE STMT count:14 name:free [0m

 ================== find free stmt ================== 
dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1365378645 dot graph subgraph  test22 (b_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_530169645 dot graph subgraph  free (b_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_667590270 dot graph subgraph  free (b_2(D));
GIMPLE_NOP
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
test.c:473:9: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
test.c:474:9: warning: use location
  474 |         free(b);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
test.c:474:9: warning: free in this location

===== possiable asias =====
# .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
test.c:473:9: warning: free in this location
  473 |         free(b);
      |         ^

===== possiable asias =====
# .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
test.c:473:9: warning: free in this location
  473 |         free(b);
      |         ^

===== possiable asias =====
# .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
test.c:474:9: warning: free in this location
  474 |         free(b);
      |         ^

===== possiable asias =====
# .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:14 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:14 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:14 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <array_ref 0x7f20e9e73188
    type <integer_type 0x7f20e996d888 char readonly QI
        size <integer_cst 0x7f20e9e69ca8 constant 8>
        unit-size <integer_cst 0x7f20e9e69cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e3f0 precision:8 min <integer_cst 0x7f20e9964768 -128> max <integer_cst 0x7f20e9964750 127>
        pointer_to_this <pointer_type 0x7f20e996d930>>
   
    arg:0 <string_cst 0x7f20e998d160
        type <array_type 0x7f20e9977e70 type <integer_type 0x7f20e996d888 char>
            BLK
            size <integer_cst 0x7f20e99647b0 constant 48>
            unit-size <integer_cst 0x7f20e9964870 constant 6>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f20e9977dc8>>
        readonly constant static "asdda\000">
    arg:1 <integer_cst 0x7f20e9e69f48 type <integer_type 0x7f20e9e7e5e8 int> constant 0>>
 <array_ref 0x7f20e9e73188
    type <integer_type 0x7f20e996d888 char readonly QI
        size <integer_cst 0x7f20e9e69ca8 constant 8>
        unit-size <integer_cst 0x7f20e9e69cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e3f0 precision:8 min <integer_cst 0x7f20e9964768 -128> max <integer_cst 0x7f20e9964750 127>
        pointer_to_this <pointer_type 0x7f20e996d930>>
   
    arg:0 <string_cst 0x7f20e998d160
        type <array_type 0x7f20e9977e70 type <integer_type 0x7f20e996d888 char>
            BLK
            size <integer_cst 0x7f20e99647b0 constant 48>
            unit-size <integer_cst 0x7f20e9964870 constant 6>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f20e9977dc8>>
        readonly constant static "asdda\000">
    arg:1 <integer_cst 0x7f20e9e69f48 type <integer_type 0x7f20e9e7e5e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f20e9e73188
    type <integer_type 0x7f20e996d888 char readonly QI
        size <integer_cst 0x7f20e9e69ca8 constant 8>
        unit-size <integer_cst 0x7f20e9e69cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e3f0 precision:8 min <integer_cst 0x7f20e9964768 -128> max <integer_cst 0x7f20e9964750 127>
        pointer_to_this <pointer_type 0x7f20e996d930>>
   
    arg:0 <string_cst 0x7f20e998d160
        type <array_type 0x7f20e9977e70 type <integer_type 0x7f20e996d888 char>
            BLK
            size <integer_cst 0x7f20e99647b0 constant 48>
            unit-size <integer_cst 0x7f20e9964870 constant 6>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f20e9977dc8>>
        readonly constant static "asdda\000">
    arg:1 <integer_cst 0x7f20e9e69f48 type <integer_type 0x7f20e9e7e5e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6>
__builtin_puts (&"asdda"[0]);
dot graph entry boo
dot graph target entry end

__builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
  476 |         printf("asdda\n");
      |         ^
dot graph target loc start __builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: __builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_7 = VDEF <.MEM_6>
__builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target loc end

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph stmt start __builtin_puts (&"asdda"[0]);
__builtin_puts (&"asdda"[0]);
dot graph stmt end

dot graph stmt start __builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph stmt end

this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6>
__builtin_puts (&"asdda"[0]);
dot graph entry boo
dot graph target entry end

__builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target loc start __builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: __builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_7 = VDEF <.MEM_6>
__builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target loc end

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph stmt start __builtin_puts (&"asdda"[0]);
__builtin_puts (&"asdda"[0]);
dot graph stmt end

dot graph stmt start __builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph stmt end

this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_2073320204 dot graph subgraph  __builtin_puts (&"asdda"[0]);
dot graph subgrapend

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1533685651 dot graph subgraph  __builtin_puts (&"asdda"[0]);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;42m =======pre add _ fucntion:foo========= [0m
[40;44m =======print_function_path foo  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:foo2========= [0m
[40;44m =======print_function_path foo2  function_call count: 4 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;44m =======print_function_path foo3  function_call count: 1 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;42m =======pre_check_funciton:foo3========= [0m
[40;42m =======start_check_funciton:foo3========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;42m =======pre_check_funciton:foo2========= [0m
[40;42m =======start_check_funciton:foo2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f20e9994798
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993510 a2>
    def_stmt a2_12 = malloc (_1);
    version:12
    ptr-info 0x7f20e9984810>
 <ssa_name 0x7f20e9994798
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993510 a2>
    def_stmt a2_12 = malloc (_1);
    version:12
    ptr-info 0x7f20e9984810>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
dot graph entry foo2
dot graph target entry end

*a2_12 = 10;
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph target loc start a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 2: *a2_12 = 10;
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph target line desend

dot graph target loc start # .MEM_28 = VDEF <.MEM_27(D)>
a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start *a2_12 = 10;
a2_12 = malloc (_1);
dot graph stmt end

dot graph stmt start *a2_12 = 10;
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

*a2_12 = 10;
test.c:298:15: warning: use location
dot graph target loc start a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 2: *a2_12 = 10;
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph target line desend

dot graph target loc start # .MEM_28 = VDEF <.MEM_27(D)>
a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start *a2_12 = 10;
a2_12 = malloc (_1);
dot graph stmt end

dot graph stmt start *a2_12 = 10;
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph stmt end

# .MEM_28 = VDEF <.MEM_27(D)>
a2_12 = malloc (_1);
dot graph entry foo2
dot graph target entry end

a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc start a2_12 = malloc (_1);
test.c:293:19: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: a2_12 = malloc (_1);
test.c:293:19: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_28 = VDEF <.MEM_27(D)>
a2_12 = malloc (_1);
test.c:293:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start a2_12 = malloc (_1);
a2_12 = malloc (_1);
dot graph stmt end

dot graph stmt start a2_12 = malloc (_1);
test.c:293:19: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_2135995690 dot graph subgraph  *a2_12 = 10;
a2_12 = malloc (_1);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_2013989031 dot graph subgraph  *a2_12 = 10;
a2_12 = malloc (_1);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_653733072 dot graph subgraph  a2_12 = malloc (_1);
a2_12 = malloc (_1);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e99947e0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993480 p3>
    def_stmt p3_14 = malloc (_2);
    version:14
    ptr-info 0x7f20e9984828>
 <ssa_name 0x7f20e99947e0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993480 p3>
    def_stmt p3_14 = malloc (_2);
    version:14
    ptr-info 0x7f20e9984828>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    fucntion exit  [0m
_7 = PHI <p3_14(3), p4_16(4)>
In function ‘foo2’:
lto1: warning: use location
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 5 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

_7 = PHI <p3_14(3), p4_16(4)>
In function ‘main’:
lto1: warning: use location
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 5: _7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 5dot graph target basicblock en1

dot graph stmt start _7 = PHI <p3_14(3), p4_16(4)>
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start _7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---exit-----

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
In function ‘foo2’:
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 3 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

free (p3_14);
In function ‘main’:
test.c:309:17: warning: use location
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 3: free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 3dot graph target basicblock en1

dot graph stmt start free (p3_14);
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (p3_14);
test.c:309:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_41 = VDEF <.MEM_38>
*p3_14 = 10;
In function ‘foo2’:
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 3 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

*p3_14 = 10;
In function ‘main’:
test.c:308:23: warning: use location
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 3: *p3_14 = 10;
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 3dot graph target basicblock en1

dot graph stmt start *p3_14 = 10;
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start *p3_14 = 10;
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
dot graph stmt end


======================================================================
[40;31m    fucntion exit  [0m
# .MEM_41 = VDEF <.MEM_38>
*p3_14 = 10;
In function ‘foo2’:
test.c:308:23: warning: use location
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 3 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

*p3_14 = 10;
In function ‘main’:
test.c:308:23: warning: use location
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 3: *p3_14 = 10;
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 3dot graph target basicblock en1

dot graph stmt start *p3_14 = 10;
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start *p3_14 = 10;
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

foo3 (p3_14);
test.c:304:9: warning: use location
  304 |         foo3(p3);
      |         ^
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 2: foo3 (p3_14);
test.c:304:9: warning: use location
  304 |         foo3(p3);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start foo3 (p3_14);
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start foo3 (p3_14);
test.c:304:9: warning: use location
  304 |         foo3(p3);
      |         ^
dot graph stmt end

this stmt call this function :foo3
trace fucntion name:foo3 
[40;44m =======trace_function_path foo3  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f20e99947e0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993480 p3>
    def_stmt p3_14 = malloc (_2);
    version:14
    ptr-info 0x7f20e9984828>
[40;36m ======= node_fun:foo3========= [0m
[40;36m ======= find relate stmt with p3 ========= [0m
dot graph arrowdot graph start relate for1ID : 1004638873
from foo3 basic block 2dot graph end relate end

_1 = malloc (1);
dot graph relate stmt start ID : 1201572709 stmt(call) :In function ‘foo3’:
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
dot graph entry foo2
dot graph target entry end

p3_14 = malloc (_2);
In function ‘main’:
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start p3_14 = malloc (_2);
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from foo2 basic block 5dot graph target basicblock en1

dot graph arrowsubgraph cluster_1911189881 dot graph subgraph  _7 = PHI <p3_14(3), p4_16(4)>
p3_14 = malloc (_2);
dot graph subgrapend

dot graph start relate for1ID : 1004638873
from foo3 basic block 2dot graph end relate end

subgraph cluster_1407874638 dot graph subgraph  start ID : 1201572709 stmt(relate) ， Tree ID : 1004638873 : _1 = malloc (1);
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: free in this location

===== possiable asias =====
_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: free in this location

===== possiable asias =====
_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e9994828
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e99933f0 p4>
    def_stmt p4_16 = malloc (_3);
    version:16
    ptr-info 0x7f20e9984840>
 <ssa_name 0x7f20e9994828
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e99933f0 p4>
    def_stmt p4_16 = malloc (_3);
    version:16
    ptr-info 0x7f20e9984840>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    fucntion exit  [0m
_7 = PHI <p3_14(3), p4_16(4)>
In function ‘foo2’:
lto1: warning: use location
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 5 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

_7 = PHI <p3_14(3), p4_16(4)>
In function ‘main’:
lto1: warning: use location
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 5: _7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 5dot graph target basicblock en1

dot graph stmt start _7 = PHI <p3_14(3), p4_16(4)>
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start _7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---exit-----

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
In function ‘foo2’:
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
[40;31m    branch possiable have return in bb:4 [0m
gimple stmt in succ := 4 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

free (p4_16);
In function ‘main’:
test.c:315:17: warning: use location
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 4: free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 4dot graph target basicblock en1

dot graph stmt start free (p4_16);
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (p4_16);
test.c:315:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_39 = VDEF <.MEM_38>
*p4_16 = 10;
In function ‘foo2’:
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
[40;31m    branch possiable have return in bb:4 [0m
gimple stmt in succ := 4 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

*p4_16 = 10;
In function ‘main’:
test.c:314:23: warning: use location
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 4: *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 4dot graph target basicblock en1

dot graph stmt start *p4_16 = 10;
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph stmt end


======================================================================
[40;31m    fucntion exit  [0m
# .MEM_39 = VDEF <.MEM_38>
*p4_16 = 10;
In function ‘foo2’:
test.c:314:23: warning: use location
[40;31m    branch possiable have return in bb:4 [0m
gimple stmt in succ := 4 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

*p4_16 = 10;
In function ‘main’:
test.c:314:23: warning: use location
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 4: *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 4dot graph target basicblock en1

dot graph stmt start *p4_16 = 10;
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph stmt end

# .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
dot graph entry foo2
dot graph target entry end

p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start p4_16 = malloc (_3);
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from foo2 basic block 5dot graph target basicblock en1

dot graph arrowsubgraph cluster_1277746572 dot graph subgraph  _7 = PHI <p3_14(3), p4_16(4)>
p4_16 = malloc (_3);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: free in this location

===== possiable asias =====
_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: free in this location

===== possiable asias =====
_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e9994678
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _5 = malloc (_4);
    version:5
    ptr-info 0x7f20e99847c8>
 <ssa_name 0x7f20e9994678
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _5 = malloc (_4);
    version:5
    ptr-info 0x7f20e99847c8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
dot graph entry foo2
dot graph target entry end

p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc en1

dot graph target line desc form basic block 2: p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start p99 = _5;
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

p99 = _5;
test.c:296:13: warning: use location
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc en1

dot graph target line desc form basic block 2: p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start p99 = _5;
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

_6 = p99;
test.c:299:12: warning: use location
  299 |         p99[0] = 10;
      |            ^
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc en1

dot graph target line desc form basic block 2: _6 = p99;
test.c:299:12: warning: use location
  299 |         p99[0] = 10;
      |            ^
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start _6 = p99;
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start _6 = p99;
test.c:299:12: warning: use location
  299 |         p99[0] = 10;
      |            ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

*_6 = 10;
test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc en1

dot graph target line desc form basic block 2: *_6 = 10;
test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start *_6 = 10;
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start *_6 = 10;
test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
dot graph stmt end

# .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
dot graph entry foo2
dot graph target entry end

_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _5 = malloc (_4);
test.c:296:15: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start _5 = malloc (_4);
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start _5 = malloc (_4);
test.c:296:15: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_284731411 dot graph subgraph  p99 = _5;
_5 = malloc (_4);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1007263449 dot graph subgraph  p99 = _5;
_5 = malloc (_4);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_694529742 dot graph subgraph  _6 = p99;
_5 = malloc (_4);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_184401437 dot graph subgraph  *_6 = 10;
_6 = p99;
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1550713490 dot graph subgraph  _5 = malloc (_4);
_5 = malloc (_4);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7f20ea713c60 mLock2
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:246:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f20ea713c60 mLock2
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:246:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35>
pthread_mutex_lock (&mLock2);
dot graph entry foo2
dot graph target entry end

pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
dot graph target loc start pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_36 = VDEF <.MEM_35>
pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock2);
pthread_mutex_lock (&mLock2);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35>
pthread_mutex_lock (&mLock2);
dot graph entry foo2
dot graph target entry end

pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc start pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_36 = VDEF <.MEM_35>
pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock2);
pthread_mutex_lock (&mLock2);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1185101217 dot graph subgraph  pthread_mutex_lock (&mLock2);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1863653932 dot graph subgraph  pthread_mutex_lock (&mLock2);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;31m   malloc def-leak warring [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   memory leak and alloc new memory [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:302:9: warning: use location
[40;31m   memory leak and alloc new memory [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^

dot graph START

======================================================================
 <var_decl 0x7f20ea713cf0 mLock3
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:247:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f20ea713cf0 mLock3
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:247:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_37 = VDEF <.MEM_36>
pthread_mutex_lock (&mLock3);
dot graph entry foo2
dot graph target entry end

pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
  303 |         pthread_mutex_lock(&mLock3);
      |         ^
dot graph target loc start pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_37 = VDEF <.MEM_36>
pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock3);
pthread_mutex_lock (&mLock3);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_37 = VDEF <.MEM_36>
pthread_mutex_lock (&mLock3);
dot graph entry foo2
dot graph target entry end

pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc start pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_37 = VDEF <.MEM_36>
pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock3);
pthread_mutex_lock (&mLock3);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1710054833 dot graph subgraph  pthread_mutex_lock (&mLock3);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_2132367277 dot graph subgraph  pthread_mutex_lock (&mLock3);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;31m   malloc def-leak warring [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   memory leak and alloc new memory [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;31m   malloc def-leak warring [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   memory leak and alloc new memory [0m

test.c:303:9: warning: use location
  303 |         pthread_mutex_lock(&mLock3);
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   malloc def-leak warring [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;31m   memory leak and alloc new memory [0m

test.c:303:9: warning: use location
  303 |         pthread_mutex_lock(&mLock3);
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:303:9: warning: use location
[40;31m   memory leak and alloc new memory [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   malloc def-leak warring [0m

test.c:303:9: warning: use location
  303 |         pthread_mutex_lock(&mLock3);
      |         ^
[40;31m   memory leak and alloc new memory [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;42m =======pre_check_funciton:foo========= [0m
[40;42m =======start_check_funciton:foo========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f20e9994360
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993090 p2>
    def_stmt p2_3 = malloc (1);
    version:3
    ptr-info 0x7f20e9984798>
 <ssa_name 0x7f20e9994360
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993090 p2>
    def_stmt p2_3 = malloc (1);
    version:3
    ptr-info 0x7f20e9984798>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
dot graph entry foo
dot graph target entry end

*p2_3 = 1;
test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
dot graph target loc start p2_3 = malloc (1);
test.c:345:19: warning: use location
  345 |         int *p2 = malloc(1);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 2: *p2_3 = 1;
test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
dot graph target line desend

dot graph target loc start # .MEM_9 = VDEF <.MEM_8(D)>
p2_3 = malloc (1);
test.c:345:19: warning: use location
  345 |         int *p2 = malloc(1);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start *p2_3 = 1;
p2_3 = malloc (1);
dot graph stmt end

dot graph stmt start *p2_3 = 1;
test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
dot graph stmt end

dot graph entry foo
dot graph target entry end

*p2_3 = 1;
test.c:346:15: warning: use location
dot graph target loc start p2_3 = malloc (1);
test.c:345:19: warning: use location
  345 |         int *p2 = malloc(1);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 2: *p2_3 = 1;
test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
dot graph target line desend

dot graph target loc start # .MEM_9 = VDEF <.MEM_8(D)>
p2_3 = malloc (1);
test.c:345:19: warning: use location
  345 |         int *p2 = malloc(1);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start *p2_3 = 1;
p2_3 = malloc (1);
dot graph stmt end

dot graph stmt start *p2_3 = 1;
test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
dot graph stmt end

# .MEM_9 = VDEF <.MEM_8(D)>
p2_3 = malloc (1);
dot graph entry foo
dot graph target entry end

p2_3 = malloc (1);
test.c:345:19: warning: use location
  345 |         int *p2 = malloc(1);
      |                   ^
dot graph target loc start p2_3 = malloc (1);
test.c:345:19: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: p2_3 = malloc (1);
test.c:345:19: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_9 = VDEF <.MEM_8(D)>
p2_3 = malloc (1);
test.c:345:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start p2_3 = malloc (1);
p2_3 = malloc (1);
dot graph stmt end

dot graph stmt start p2_3 = malloc (1);
test.c:345:19: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1967188938 dot graph subgraph  *p2_3 = 1;
p2_3 = malloc (1);
dot graph subgrapend

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1395328707 dot graph subgraph  *p2_3 = 1;
p2_3 = malloc (1);
dot graph subgrapend

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1868066186 dot graph subgraph  p2_3 = malloc (1);
p2_3 = malloc (1);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>
 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
dot graph entry foo
dot graph target entry end

_7 = foo2 (z_5(D));
test.c:361:16: warning: use location
  361 |         return foo2(z);
      |                ^
dot graph target loc start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start _7 = foo2 (z_5(D));
_7 = foo2 (z_5(D));
dot graph stmt end

dot graph stmt start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph stmt end

this stmt call this function :foo2
trace fucntion name:foo2 
[40;44m =======trace_function_path foo2  function_call count: 4 level :0========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph start relate form ID : 788311150
from foo2 basic block 3dot graph end relate end

dot graph relate stmt start ID : 1556918127 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1556918127 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph start relate form ID : 788311150
from foo2 basic block 4dot graph end relate end

dot graph relate stmt start ID : 271056845 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 271056845 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
# .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
dot graph entry foo
dot graph target entry end

_7 = foo2 (z_5(D));
test.c:361:16: warning: use location
  361 |         return foo2(z);
      |                ^
dot graph target loc start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start _7 = foo2 (z_5(D));
_7 = foo2 (z_5(D));
dot graph stmt end

dot graph stmt start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph stmt end

this stmt call this function :foo2
trace fucntion name:foo2 
[40;44m =======trace_function_path foo2  function_call count: 4 level :0========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph start relate form ID : 1223254103
from foo2 basic block 3dot graph end relate end

dot graph relate stmt start ID : 636613621 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 636613621 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph start relate form ID : 1223254103
from foo2 basic block 4dot graph end relate end

dot graph relate stmt start ID : 1048982169 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1048982169 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1304203891 dot graph subgraph  _7 = foo2 (z_5(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_974818725 dot graph subgraph  _7 = foo2 (z_5(D));
GIMPLE_NOP
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>

 ================== pre trace ptable ================== 
trace fucntion name:foo2 
[40;44m =======trace_function_path foo2  function_call count: 4 level :888========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph start relate form ID : 1139625752
from foo2 basic block 3dot graph end relate end

dot graph relate stmt start ID : 1292715934 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1292715934 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph start relate form ID : 1139625752
from foo2 basic block 4dot graph end relate end

dot graph relate stmt start ID : 841324108 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 841324108 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
[40;36m ======= node_fun:foo3========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
dot graph arrowdot graph start relate for1ID : 1793358824
from foo3 basic block 2dot graph end relate end

_1 = malloc (1);
dot graph relate stmt start ID : 149871159 stmt(call) :In function ‘foo3’:
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
is Other function foo2
 
 Start check Pointer Collect  

======================================================================
# .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
dot graph entry foo
dot graph target entry end

_7 = foo2 (z_5(D));
In function ‘main’:
test.c:361:16: warning: use location
  361 |         return foo2(z);
      |                ^
dot graph target loc start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start _7 = foo2 (z_5(D));
_7 = foo2 (z_5(D));
dot graph stmt end

dot graph stmt start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph stmt end

this stmt call this function :foo2
trace fucntion name:foo2 
[40;44m =======trace_function_path foo2  function_call count: 4 level :0========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph start relate form ID : 2042896817
from foo2 basic block 3dot graph end relate end

dot graph relate stmt start ID : 1557065057 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1557065057 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph start relate form ID : 2042896817
from foo2 basic block 4dot graph end relate end

dot graph relate stmt start ID : 1557745797 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1557745797 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
[40;36m ======= node_fun:foo2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 2042896817
from foo2 basic block 2dot graph end relate end

In function ‘foo2’:
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
*a2_12 = 10;
dot graph relate stmt start ID : 1173159741 stmt(LHS) :test.c:298:15: warning: use location
*a2_12
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 2042896817
from foo2 basic block 2dot graph end relate end

test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
*_6 = 10;
dot graph relate stmt start ID : 1841796468 stmt(LHS) :test.c:299:16: warning: use location
*_6
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 2042896817
from foo2 basic block 3dot graph end relate end

test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
*p3_14 = 10;
dot graph relate stmt start ID : 417525598 stmt(LHS) :test.c:308:23: warning: use location
*p3_14
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 2042896817
from foo2 basic block 4dot graph end relate end

test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
*p4_16 = 10;
dot graph relate stmt start ID : 1867689483 stmt(LHS) :test.c:314:23: warning: use location
*p4_16
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
[40;36m ======= node_fun:foo3========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
dot graph arrowdot graph start relate for1ID : 2026197905
from foo3 basic block 2dot graph end relate end

_1 = malloc (1);
dot graph relate stmt start ID : 1968239088 stmt(call) :In function ‘foo3’:
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
# .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
dot graph entry foo
dot graph target entry end

_7 = foo2 (z_5(D));
In function ‘main’:
test.c:361:16: warning: use location
  361 |         return foo2(z);
      |                ^
dot graph target loc start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start _7 = foo2 (z_5(D));
_7 = foo2 (z_5(D));
dot graph stmt end

dot graph stmt start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph stmt end

this stmt call this function :foo2
trace fucntion name:foo2 
[40;44m =======trace_function_path foo2  function_call count: 4 level :0========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph start relate form ID : 905307053
from foo2 basic block 3dot graph end relate end

dot graph relate stmt start ID : 1742368190 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1742368190 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph start relate form ID : 905307053
from foo2 basic block 4dot graph end relate end

dot graph relate stmt start ID : 1530810273 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1530810273 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
[40;36m ======= node_fun:foo2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 905307053
from foo2 basic block 2dot graph end relate end

In function ‘foo2’:
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
*a2_12 = 10;
dot graph relate stmt start ID : 890190682 stmt(LHS) :test.c:298:15: warning: use location
*a2_12
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 905307053
from foo2 basic block 2dot graph end relate end

test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
*_6 = 10;
dot graph relate stmt start ID : 1562073480 stmt(LHS) :test.c:299:16: warning: use location
*_6
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 905307053
from foo2 basic block 3dot graph end relate end

test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
*p3_14 = 10;
dot graph relate stmt start ID : 778655333 stmt(LHS) :test.c:308:23: warning: use location
*p3_14
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 905307053
from foo2 basic block 4dot graph end relate end

test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
*p4_16 = 10;
dot graph relate stmt start ID : 610773221 stmt(LHS) :test.c:314:23: warning: use location
*p4_16
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
[40;36m ======= node_fun:foo3========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
dot graph arrowdot graph start relate for1ID : 202900982
from foo3 basic block 2dot graph end relate end

_1 = malloc (1);
dot graph relate stmt start ID : 188089812 stmt(call) :In function ‘foo3’:
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_881830066 dot graph subgraph  _7 = foo2 (z_5(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_2033988154 dot graph subgraph  _7 = foo2 (z_5(D));
_7 = foo2 (z_5(D));
dot graph subgrapend

dot graph start relate for1ID : 1793358824
from foo3 basic block 2dot graph end relate end

subgraph cluster_1411343915 dot graph subgraph  start ID : 149871159 stmt(relate) ， Tree ID : 1793358824 : _1 = malloc (1);
In function ‘main’:
test.c:288:14: warning: use location
dot graph subgrapend

dot graph start relate for1ID : 2042896817
from foo2 basic block 4dot graph end relate end

subgraph cluster_1518443687 dot graph subgraph  start ID : 1867689483 stmt(relate) ， Tree ID : 2042896817 : *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph subgrapend

dot graph start relate for1ID : 2026197905
from foo3 basic block 2dot graph end relate end

subgraph cluster_935486675 dot graph subgraph  start ID : 1968239088 stmt(relate) ， Tree ID : 2026197905 : _1 = malloc (1);
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
dot graph subgrapend

dot graph start relate for1ID : 905307053
from foo2 basic block 4dot graph end relate end

subgraph cluster_1017284016 dot graph subgraph  start ID : 610773221 stmt(relate) ， Tree ID : 905307053 : *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph subgrapend

dot graph start relate for1ID : 202900982
from foo3 basic block 2dot graph end relate end

subgraph cluster_675163931 dot graph subgraph  start ID : 188089812 stmt(relate) ， Tree ID : 202900982 : _1 = malloc (1);
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;42m =======pre_check_funciton:child========= [0m
[40;42m =======start_check_funciton:child========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f20e998bb40
    type <integer_type 0x7f20e9e7e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e738 precision:64 min <integer_cst 0x7f20e9e69e88 0> max <integer_cst 0x7f20e9e6a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f20e9e8a7e0>>
   
    def_stmt _1 = pthread_self ();
    version:1>
 <ssa_name 0x7f20e998bb40
    type <integer_type 0x7f20e9e7e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e738 precision:64 min <integer_cst 0x7f20e9e69e88 0> max <integer_cst 0x7f20e9e6a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f20e9e8a7e0>>
   
    def_stmt _1 = pthread_self ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:pthread_self 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e998bb40
    type <integer_type 0x7f20e9e7e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e738 precision:64 min <integer_cst 0x7f20e9e69e88 0> max <integer_cst 0x7f20e9e6a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f20e9e8a7e0>>
   
    def_stmt _1 = pthread_self ();
    version:1>
is Other function pthread_self
 
 Start check Pointer Collect  

======================================================================
dot graph entry child
dot graph target entry end

pthread_detach (_1);
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
dot graph target loc start _1 = pthread_self ();
test.c:366:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_detach (_1);
test.c:366:9: warning: use location
dot graph target line desend

dot graph target loc start _1 = pthread_self ();
test.c:366:9: warning: use location
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start pthread_detach (_1);
_1 = pthread_self ();
dot graph stmt end

dot graph stmt start pthread_detach (_1);
test.c:366:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_detach
trace fucntion name:pthread_detach 

 ================== trace ================== 
trace fucntion free:0 
_1 = pthread_self ();
dot graph entry child
dot graph target entry end

_1 = pthread_self ();
test.c:366:9: warning: use location
dot graph target loc start _1 = pthread_self ();
test.c:366:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _1 = pthread_self ();
test.c:366:9: warning: use location
dot graph target line desend

dot graph target loc start _1 = pthread_self ();
test.c:366:9: warning: use location
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start _1 = pthread_self ();
_1 = pthread_self ();
dot graph stmt end

dot graph stmt start _1 = pthread_self ();
test.c:366:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_self
trace fucntion name:pthread_self 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1910305400 dot graph subgraph  pthread_detach (_1);
_1 = pthread_self ();
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_9426120 dot graph subgraph  _1 = pthread_self ();
_1 = pthread_self ();
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (_7);
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e998bb40
    type <integer_type 0x7f20e9e7e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e738 precision:64 min <integer_cst 0x7f20e9e69e88 0> max <integer_cst 0x7f20e9e6a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f20e9e8a7e0>>
   
    def_stmt _1 = pthread_self ();
    version:1>
 <ssa_name 0x7f20e998bb40
    type <integer_type 0x7f20e9e7e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e738 precision:64 min <integer_cst 0x7f20e9e69e88 0> max <integer_cst 0x7f20e9e6a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f20e9e8a7e0>>
   
    def_stmt _1 = pthread_self ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:pthread_self 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e998bb40
    type <integer_type 0x7f20e9e7e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e738 precision:64 min <integer_cst 0x7f20e9e69e88 0> max <integer_cst 0x7f20e9e6a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f20e9e8a7e0>>
   
    def_stmt _1 = pthread_self ();
    version:1>
is Other function pthread_self
 
 Start check Pointer Collect  

======================================================================
# .MEM_9 = VDEF <.MEM_8(D)>
pthread_detach (_1);
dot graph entry child
dot graph target entry end

pthread_detach (_1);
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
dot graph target loc start pthread_detach (_1);
test.c:366:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_detach (_1);
test.c:366:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_9 = VDEF <.MEM_8(D)>
pthread_detach (_1);
test.c:366:9: warning: use location
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start pthread_detach (_1);
pthread_detach (_1);
dot graph stmt end

dot graph stmt start pthread_detach (_1);
test.c:366:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_detach
trace fucntion name:pthread_detach 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry child
dot graph target entry end

_1 = pthread_self ();
test.c:366:9: warning: use location
dot graph target loc start pthread_detach (_1);
test.c:366:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _1 = pthread_self ();
test.c:366:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_9 = VDEF <.MEM_8(D)>
pthread_detach (_1);
test.c:366:9: warning: use location
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start _1 = pthread_self ();
pthread_detach (_1);
dot graph stmt end

dot graph stmt start _1 = pthread_self ();
test.c:366:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_self
trace fucntion name:pthread_self 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1967879865 dot graph subgraph  pthread_detach (_1);
_1 = pthread_self ();
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_604145860 dot graph subgraph  _1 = pthread_self ();
_1 = pthread_self ();
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (_7);
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7f20ea713bd0 mLock
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:245:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f20ea713bd0 mLock
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:245:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
pthread_mutex_lock (&mLock);
dot graph entry child
dot graph target entry end

pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
dot graph target loc start pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock);
pthread_mutex_lock (&mLock);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9>
pthread_mutex_lock (&mLock);
dot graph entry child
dot graph target entry end

pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
dot graph target loc start pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock);
pthread_mutex_lock (&mLock);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1802784944 dot graph subgraph  pthread_mutex_lock (&mLock);
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_2117751024 dot graph subgraph  pthread_mutex_lock (&mLock);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^

dot graph START

======================================================================
 <var_decl 0x7f20ea713bd0 mLock
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:245:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f20ea713bd0 mLock
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:245:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :pthread_mutex_lock
# .MEM_11 = VDEF <.MEM_10>
pthread_mutex_lock (&mLock);
test.c:390:9: warning: use location
  390 |         pthread_mutex_lock(&mLock);
      |         ^
# .MEM_10 = VDEF <.MEM_9>
pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :pthread_mutex_lock
# .MEM_11 = VDEF <.MEM_10>
pthread_mutex_lock (&mLock);
test.c:390:9: warning: use location
  390 |         pthread_mutex_lock(&mLock);
      |         ^
# .MEM_10 = VDEF <.MEM_9>
pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^

dot graph START

======================================================================
 <ssa_name 0x7f20e998bb88
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _2 = malloc (20);
    version:2
    ptr-info 0x7f20e9984708>
 <ssa_name 0x7f20e998bb88
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _2 = malloc (20);
    version:2
    ptr-info 0x7f20e9984708>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
dot graph entry child
dot graph target entry end

pData = _2;
test.c:392:14: warning: use location
  392 |         int *pData = malloc(20);
      |              ^
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: pData = _2;
test.c:392:14: warning: use location
  392 |         int *pData = malloc(20);
      |              ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start pData = _2;
_2 = malloc (20);
dot graph stmt end

dot graph stmt start pData = _2;
test.c:392:14: warning: use location
  392 |         int *pData = malloc(20);
      |              ^
dot graph stmt end

dot graph entry child
dot graph target entry end

pData = _2;
test.c:392:14: warning: use location
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: pData = _2;
test.c:392:14: warning: use location
  392 |         int *pData = malloc(20);
      |              ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start pData = _2;
_2 = malloc (20);
dot graph stmt end

dot graph stmt start pData = _2;
test.c:392:14: warning: use location
  392 |         int *pData = malloc(20);
      |              ^
dot graph stmt end

dot graph entry child
dot graph target entry end

_3 = pData;
test.c:398:16: warning: use location
  398 |         *ppData[0] = 10;
      |                ^
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: _3 = pData;
test.c:398:16: warning: use location
  398 |         *ppData[0] = 10;
      |                ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start _3 = pData;
_2 = malloc (20);
dot graph stmt end

dot graph stmt start _3 = pData;
test.c:398:16: warning: use location
  398 |         *ppData[0] = 10;
      |                ^
dot graph stmt end

dot graph entry child
dot graph target entry end

*_3 = 10;
test.c:398:20: warning: use location
  398 |         *ppData[0] = 10;
      |                    ^
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: *_3 = 10;
test.c:398:20: warning: use location
  398 |         *ppData[0] = 10;
      |                    ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start *_3 = 10;
_2 = malloc (20);
dot graph stmt end

dot graph stmt start *_3 = 10;
test.c:398:20: warning: use location
  398 |         *ppData[0] = 10;
      |                    ^
dot graph stmt end

dot graph entry child
dot graph target entry end

_6 = pData;
test.c:401:10: warning: use location
  401 |         **ppData = 12;
      |          ^
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: _6 = pData;
test.c:401:10: warning: use location
  401 |         **ppData = 12;
      |          ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start _6 = pData;
_2 = malloc (20);
dot graph stmt end

dot graph stmt start _6 = pData;
test.c:401:10: warning: use location
  401 |         **ppData = 12;
      |          ^
dot graph stmt end

dot graph entry child
dot graph target entry end

*_6 = 12;
test.c:401:18: warning: use location
  401 |         **ppData = 12;
      |                  ^
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: *_6 = 12;
test.c:401:18: warning: use location
  401 |         **ppData = 12;
      |                  ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start *_6 = 12;
_2 = malloc (20);
dot graph stmt end

dot graph stmt start *_6 = 12;
test.c:401:18: warning: use location
  401 |         **ppData = 12;
      |                  ^
dot graph stmt end

dot graph entry child
dot graph target entry end

_7 = pData;
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: _7 = pData;
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start _7 = pData;
_2 = malloc (20);
dot graph stmt end

dot graph stmt start _7 = pData;
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^
dot graph stmt end

dot graph entry child
dot graph target entry end

free (_7);
test.c:402:9: warning: use location
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (_7);
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start free (_7);
_2 = malloc (20);
dot graph stmt end

dot graph stmt start free (_7);
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (_7);
test.c:402:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
dot graph entry child
dot graph target entry end

free (_7);
test.c:402:9: warning: use location
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (_7);
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start free (_7);
_2 = malloc (20);
dot graph stmt end

dot graph stmt start free (_7);
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (_7);
test.c:402:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
dot graph entry child
dot graph target entry end

free (&pData);
test.c:405:9: warning: use location
  405 |         free(ppData);
      |         ^
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (&pData);
test.c:405:9: warning: use location
  405 |         free(ppData);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start free (&pData);
_2 = malloc (20);
dot graph stmt end

dot graph stmt start free (&pData);
test.c:405:9: warning: use location
  405 |         free(ppData);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (&pData);
test.c:405:9: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
dot graph entry child
dot graph target entry end

free (&pData);
test.c:407:9: warning: use location
  407 |         free(ppData);
      |         ^
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (&pData);
test.c:407:9: warning: use location
  407 |         free(ppData);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start free (&pData);
_2 = malloc (20);
dot graph stmt end

dot graph stmt start free (&pData);
test.c:407:9: warning: use location
  407 |         free(ppData);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (&pData);
test.c:407:9: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find free stmt ================== 
# .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
dot graph entry child
dot graph target entry end

_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _2 = malloc (20);
test.c:392:22: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start _2 = malloc (20);
_2 = malloc (20);
dot graph stmt end

dot graph stmt start _2 = malloc (20);
test.c:392:22: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_499559029 dot graph subgraph  pData = _2;
_2 = malloc (20);
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1212366354 dot graph subgraph  pData = _2;
_2 = malloc (20);
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1528013174 dot graph subgraph  _3 = pData;
_2 = malloc (20);
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1672718771 dot graph subgraph  *_3 = 10;
_3 = pData;
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_906679174 dot graph subgraph  _6 = pData;
_2 = malloc (20);
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1945538772 dot graph subgraph  *_6 = 12;
_6 = pData;
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1392924606 dot graph subgraph  _7 = pData;
_2 = malloc (20);
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_785393432 dot graph subgraph  free (_7);
_7 = pData;
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1766294213 dot graph subgraph  free (_7);
_2 = malloc (20);
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_150748011 dot graph subgraph  free (&pData);
_2 = malloc (20);
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_380277974 dot graph subgraph  free (&pData);
_2 = malloc (20);
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1149620838 dot graph subgraph  _2 = malloc (20);
_2 = malloc (20);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (_7);
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;42m =======pre add _ fucntion:pthread_create========= [0m
[40;42m =======pre add _ fucntion:pthread_attr_setdetachstate========= [0m
[40;42m =======pre add _ fucntion:pthread_attr_init========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <var_decl 0x7f20e9980000 t
    type <integer_type 0x7f20e9975540 pthread_t unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e738 precision:64 min <integer_cst 0x7f20e9e69e88 0> max <integer_cst 0x7f20e9e6a500 18446744073709551615> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e9975dc8>>
    addressable unsigned DI test.c:533:12 size <integer_cst 0x7f20e9e69bb8 64> unit-size <integer_cst 0x7f20e9e69bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f20e9974300 main> chain <var_decl 0x7f20ea713f30 t2>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f20e9980000 t
    type <integer_type 0x7f20e9975540 pthread_t unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e738 precision:64 min <integer_cst 0x7f20e9e69e88 0> max <integer_cst 0x7f20e9e6a500 18446744073709551615> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e9975dc8>>
    addressable unsigned DI test.c:533:12 size <integer_cst 0x7f20e9e69bb8 64> unit-size <integer_cst 0x7f20e9e69bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f20e9974300 main> chain <var_decl 0x7f20ea713f30 t2>>
is Other function 
 
 Start is Pthread Job Collect  

======================================================================
# .MEM_54 = VDEF <.MEM_53>
pthread_create (&t, &attr2, child2, _2);
dot graph entry main
dot graph target entry end

pthread_create (&t, &attr2, child2, _2);
test.c:534:9: warning: use location
  534 |         pthread_create(&t, &attr2, child2, (void *)input2);
      |         ^
dot graph target loc start pthread_create (&t, &attr2, child2, _2);
test.c:534:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_create (&t, &attr2, child2, _2);
test.c:534:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_54 = VDEF <.MEM_53>
pthread_create (&t, &attr2, child2, _2);
test.c:534:9: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph stmt start pthread_create (&t, &attr2, child2, _2);
pthread_create (&t, &attr2, child2, _2);
dot graph stmt end

dot graph stmt start pthread_create (&t, &attr2, child2, _2);
test.c:534:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_create

 ================== find pthread stmt ================== 
pthread_create (&t, &attr2, child2, _2);
test.c:534:9: warning: use location
[40;32m    FIND PTHREAD_CREATED STMT  [0m

 ================== pre_pthread_detched ================== 
[40;44m =======trace_function_path child2  function_call count: 2 level :-1========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:child3========= [0m
[40;46m =======add node_fun stack:child3========= [0m
[40;44m =======trace_function_path child3  function_call count: 1 level :-1========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== pre_pthread_detched end ================== 
[40;44m =======trace_function_path main  function_call count: 11 level :-1========  [0m
# .MEM_59 = VDEF <.MEM_58>
free (data_30);
# .MEM_61 = VDEF <.MEM_47>
free (data_12);
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:foo5========= [0m
[40;46m =======add node_fun stack:foo5========= [0m
[40;44m =======trace_function_path foo5  function_call count: 1 level :-1========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_join========= [0m
[40;46m =======add node_fun stack:pthread_join========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:child========= [0m
[40;46m =======add node_fun stack:child========= [0m
[40;44m =======trace_function_path child  function_call count: 9 level :-1========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (_7);
[40;31m  find pthread_detched stmt  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pthread_detach (_1);
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
dot graph start relate form ID : 2145252437
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 2116365983 stmt(pthread_detched)) :pthread_detach (_1);
test.c:366:9: warning: use location
dot graph relate end

[40;31m  find pthread_exit stmt  [0m
# .MEM_27 = VDEF <.MEM_26>
pthread_exit (0B);
test.c:408:9: warning: use location
  408 |         pthread_exit(NULL); // 離開子執行緒
      |         ^
dot graph start relate form ID : 2145252437
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 386058333 stmt(pthread_exit) :pthread_exit (0B);
test.c:408:9: warning: use location
dot graph relate end

[40;42m =======pre add _ fucntion:pthread_exit========= [0m
[40;46m =======add node_fun stack:pthread_exit========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_unlock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_unlock========= [0m
[40;42m =======pre add _ fucntion:boo========= [0m
[40;46m =======add node_fun stack:boo========= [0m
[40;44m =======trace_function_path boo  function_call count: 3 level :-1========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :-1========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;42m =======pre add _ fucntion:test22========= [0m
[40;41m =======recursive_fun2:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo========= [0m
[40;46m =======add node_fun stack:foo========= [0m
[40;44m =======trace_function_path foo  function_call count: 2 level :-1========  [0m
[40;42m =======pre add _ fucntion:foo2========= [0m
foo2 this fucntion return value is heap-object 
foo this fucntion return value is heap-object foo2
[40;46m =======add node_fun stack:foo2========= [0m
[40;44m =======trace_function_path foo2  function_call count: 4 level :-1========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :-1========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m
[40;42m =======pre add _ fucntion:pthread_create========= [0m
[40;46m =======add node_fun stack:pthread_create========= [0m
[40;42m =======pre add _ fucntion:pthread_attr_setdetachstate========= [0m
[40;46m =======add node_fun stack:pthread_attr_setdetachstate========= [0m
[40;42m =======pre add _ fucntion:pthread_attr_init========= [0m
[40;46m =======add node_fun stack:pthread_attr_init========= [0m
[40;44m =======trace_function_path child2  function_call count: 2 level :0========  [0m
# .MEM_12 = VDEF <.MEM_11>
free (_7);
 <ssa_name 0x7f20e9e71678
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _2 = (void *) _1;
    version:2
    ptr-info 0x7f20e9984600>
[40;36m ======= node_fun:child2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:child3========= [0m
[40;46m =======add node_fun stack:child3========= [0m
[40;44m =======trace_function_path child3  function_call count: 1 level :1========  [0m
# .MEM_5 = VDEF <.MEM_4(D)>
free (data_3(D));
 <ssa_name 0x7f20e9e71678
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _2 = (void *) _1;
    version:2
    ptr-info 0x7f20e9984600>
[40;36m ======= node_fun:child3========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== pre_pthread_detched ================== 
[40;44m =======trace_function_path child2  function_call count: 2 level :-1========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:child3========= [0m
[40;46m =======add node_fun stack:child3========= [0m
[40;44m =======trace_function_path child3  function_call count: 1 level :-1========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== pre_pthread_detched end ================== 
[40;44m =======trace_function_path child2  function_call count: 2 level :0========  [0m
# .MEM_12 = VDEF <.MEM_11>
free (_7);
 <ssa_name 0x7f20e9e71678
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _2 = (void *) _1;
    version:2
    ptr-info 0x7f20e9984600>
[40;36m ======= node_fun:child2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:child3========= [0m
[40;46m =======add node_fun stack:child3========= [0m
[40;44m =======trace_function_path child3  function_call count: 1 level :1========  [0m
# .MEM_5 = VDEF <.MEM_4(D)>
free (data_3(D));
 <ssa_name 0x7f20e9e71678
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _2 = (void *) _1;
    version:2
    ptr-info 0x7f20e9984600>
[40;36m ======= node_fun:child3========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;32m    FIND PTHREAD_CREATED TYPE is CREATE_JOINABLE  [0m

 ================== find pthread stmt ================== 
# .MEM_54 = VDEF <.MEM_53>
pthread_create (&t, &attr2, child2, _2);
dot graph entry main
dot graph target entry end

pthread_create (&t, &attr2, child2, _2);
test.c:534:9: warning: use location
  534 |         pthread_create(&t, &attr2, child2, (void *)input2);
      |         ^
dot graph target loc start pthread_create (&t, &attr2, child2, _2);
test.c:534:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_create (&t, &attr2, child2, _2);
test.c:534:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_54 = VDEF <.MEM_53>
pthread_create (&t, &attr2, child2, _2);
test.c:534:9: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph stmt start pthread_create (&t, &attr2, child2, _2);
pthread_create (&t, &attr2, child2, _2);
dot graph stmt end

dot graph stmt start pthread_create (&t, &attr2, child2, _2);
test.c:534:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_create

 ================== find pthread stmt ================== 
pthread_create (&t, &attr2, child2, _2);
test.c:534:9: warning: use location
[40;32m    FIND PTHREAD_CREATED STMT  [0m

 ================== pre_pthread_detched ================== 
[40;44m =======trace_function_path child2  function_call count: 2 level :-1========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:child3========= [0m
[40;46m =======add node_fun stack:child3========= [0m
[40;44m =======trace_function_path child3  function_call count: 1 level :-1========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== pre_pthread_detched end ================== 
[40;44m =======trace_function_path main  function_call count: 11 level :-1========  [0m
# .MEM_59 = VDEF <.MEM_58>
free (data_30);
# .MEM_61 = VDEF <.MEM_47>
free (data_12);
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:foo5========= [0m
[40;46m =======add node_fun stack:foo5========= [0m
[40;44m =======trace_function_path foo5  function_call count: 1 level :-1========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_join========= [0m
[40;46m =======add node_fun stack:pthread_join========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:child========= [0m
[40;46m =======add node_fun stack:child========= [0m
[40;44m =======trace_function_path child  function_call count: 9 level :-1========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (_7);
[40;31m  find pthread_detched stmt  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pthread_detach (_1);
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
dot graph start relate form ID : 1211521734
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 2033799564 stmt(pthread_detched)) :pthread_detach (_1);
test.c:366:9: warning: use location
dot graph relate end

[40;31m  find pthread_exit stmt  [0m
# .MEM_27 = VDEF <.MEM_26>
pthread_exit (0B);
test.c:408:9: warning: use location
  408 |         pthread_exit(NULL); // 離開子執行緒
      |         ^
dot graph start relate form ID : 1211521734
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 1548914195 stmt(pthread_exit) :pthread_exit (0B);
test.c:408:9: warning: use location
dot graph relate end

[40;42m =======pre add _ fucntion:pthread_exit========= [0m
[40;46m =======add node_fun stack:pthread_exit========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_unlock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_unlock========= [0m
[40;42m =======pre add _ fucntion:boo========= [0m
[40;46m =======add node_fun stack:boo========= [0m
[40;44m =======trace_function_path boo  function_call count: 3 level :-1========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :-1========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;42m =======pre add _ fucntion:test22========= [0m
[40;41m =======recursive_fun2:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo========= [0m
[40;46m =======add node_fun stack:foo========= [0m
[40;44m =======trace_function_path foo  function_call count: 2 level :-1========  [0m
[40;42m =======pre add _ fucntion:foo2========= [0m
foo2 this fucntion return value is heap-object 
foo this fucntion return value is heap-object foo2
[40;46m =======add node_fun stack:foo2========= [0m
[40;44m =======trace_function_path foo2  function_call count: 4 level :-1========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :-1========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m
[40;42m =======pre add _ fucntion:pthread_create========= [0m
[40;46m =======add node_fun stack:pthread_create========= [0m
[40;42m =======pre add _ fucntion:pthread_attr_setdetachstate========= [0m
[40;46m =======add node_fun stack:pthread_attr_setdetachstate========= [0m
[40;42m =======pre add _ fucntion:pthread_attr_init========= [0m
[40;46m =======add node_fun stack:pthread_attr_init========= [0m
[40;44m =======trace_function_path child2  function_call count: 2 level :0========  [0m
# .MEM_12 = VDEF <.MEM_11>
free (_7);
 <ssa_name 0x7f20e9e71678
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _2 = (void *) _1;
    version:2
    ptr-info 0x7f20e9984600>
[40;36m ======= node_fun:child2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:child3========= [0m
[40;46m =======add node_fun stack:child3========= [0m
[40;44m =======trace_function_path child3  function_call count: 1 level :1========  [0m
# .MEM_5 = VDEF <.MEM_4(D)>
free (data_3(D));
 <ssa_name 0x7f20e9e71678
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _2 = (void *) _1;
    version:2
    ptr-info 0x7f20e9984600>
[40;36m ======= node_fun:child3========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== pre_pthread_detched ================== 
[40;44m =======trace_function_path child2  function_call count: 2 level :-1========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:child3========= [0m
[40;46m =======add node_fun stack:child3========= [0m
[40;44m =======trace_function_path child3  function_call count: 1 level :-1========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== pre_pthread_detched end ================== 
[40;44m =======trace_function_path child2  function_call count: 2 level :0========  [0m
# .MEM_12 = VDEF <.MEM_11>
free (_7);
 <ssa_name 0x7f20e9e71678
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _2 = (void *) _1;
    version:2
    ptr-info 0x7f20e9984600>
[40;36m ======= node_fun:child2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:child3========= [0m
[40;46m =======add node_fun stack:child3========= [0m
[40;44m =======trace_function_path child3  function_call count: 1 level :1========  [0m
# .MEM_5 = VDEF <.MEM_4(D)>
free (data_3(D));
 <ssa_name 0x7f20e9e71678
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _2 = (void *) _1;
    version:2
    ptr-info 0x7f20e9984600>
[40;36m ======= node_fun:child3========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;32m    FIND PTHREAD_CREATED TYPE is CREATE_JOINABLE  [0m

 ================== find pthread stmt ================== 
dot graph entry main
dot graph target entry end

_3 = t;
test.c:536:9: warning: use location
  536 |         pthread_join(t, NULL);
      |         ^
dot graph target loc start pthread_create (&t, &attr2, child2, _2);
test.c:534:9: warning: use location
  534 |         pthread_create(&t, &attr2, child2, (void *)input2);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: _3 = t;
test.c:536:9: warning: use location
  536 |         pthread_join(t, NULL);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_54 = VDEF <.MEM_53>
pthread_create (&t, &attr2, child2, _2);
test.c:534:9: warning: use location
  534 |         pthread_create(&t, &attr2, child2, (void *)input2);
      |         ^
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph stmt start _3 = t;
pthread_create (&t, &attr2, child2, _2);
dot graph stmt end

dot graph stmt start _3 = t;
test.c:536:9: warning: use location
  536 |         pthread_join(t, NULL);
      |         ^
dot graph stmt end

dot graph entry main
dot graph target entry end

pthread_join (_3, 0B);
test.c:536:9: warning: use location
dot graph target loc start pthread_create (&t, &attr2, child2, _2);
test.c:534:9: warning: use location
  534 |         pthread_create(&t, &attr2, child2, (void *)input2);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_join (_3, 0B);
test.c:536:9: warning: use location
  536 |         pthread_join(t, NULL);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_54 = VDEF <.MEM_53>
pthread_create (&t, &attr2, child2, _2);
test.c:534:9: warning: use location
  534 |         pthread_create(&t, &attr2, child2, (void *)input2);
      |         ^
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph stmt start pthread_join (_3, 0B);
pthread_create (&t, &attr2, child2, _2);
dot graph stmt end

dot graph stmt start pthread_join (_3, 0B);
test.c:536:9: warning: use location
  536 |         pthread_join(t, NULL);
      |         ^
dot graph stmt end

this stmt call this function :pthread_join
[40;32m    FIND PTHREAD_JOIN [0m
dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_2067020458 dot graph subgraph  pthread_create (&t, &attr2, child2, _2);
dot graph subgrapend

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1538935998 dot graph subgraph  pthread_create (&t, &attr2, child2, _2);
dot graph subgrapend

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_728897212 dot graph subgraph  _3 = t;
dot graph subgrapend

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1299763061 dot graph subgraph  pthread_join (_3, 0B);
_3 = t;
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;32m    pthread is JOINABLE and no memory leak   [0m

======================================================================

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e9e71708
    type <pointer_type 0x7f20e9975dc8
        type <integer_type 0x7f20e9975540 pthread_t unsigned DI
            size <integer_cst 0x7f20e9e69bb8 constant 64>
            unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e738 precision:64 min <integer_cst 0x7f20e9e69e88 0> max <integer_cst 0x7f20e9e6a500 18446744073709551615> context <translation_unit_decl 0x7f20e9e74168 test.c>
            pointer_to_this <pointer_type 0x7f20e9975dc8>>
        unsigned DI size <integer_cst 0x7f20e9e69bb8 64> unit-size <integer_cst 0x7f20e9e69bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &t2[i_10];
    version:4
    ptr-info 0x7f20e9984618>
 <ssa_name 0x7f20e9e71708
    type <pointer_type 0x7f20e9975dc8
        type <integer_type 0x7f20e9975540 pthread_t unsigned DI
            size <integer_cst 0x7f20e9e69bb8 constant 64>
            unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e738 precision:64 min <integer_cst 0x7f20e9e69e88 0> max <integer_cst 0x7f20e9e6a500 18446744073709551615> context <translation_unit_decl 0x7f20e9e74168 test.c>
            pointer_to_this <pointer_type 0x7f20e9975dc8>>
        unsigned DI size <integer_cst 0x7f20e9e69bb8 64> unit-size <integer_cst 0x7f20e9e69bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &t2[i_10];
    version:4
    ptr-info 0x7f20e9984618>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e9e71708
    type <pointer_type 0x7f20e9975dc8
        type <integer_type 0x7f20e9975540 pthread_t unsigned DI
            size <integer_cst 0x7f20e9e69bb8 constant 64>
            unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e738 precision:64 min <integer_cst 0x7f20e9e69e88 0> max <integer_cst 0x7f20e9e6a500 18446744073709551615> context <translation_unit_decl 0x7f20e9e74168 test.c>
            pointer_to_this <pointer_type 0x7f20e9975dc8>>
        unsigned DI size <integer_cst 0x7f20e9e69bb8 64> unit-size <integer_cst 0x7f20e9e69bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = &t2[i_10];
    version:4
    ptr-info 0x7f20e9984618>
is Other function 
 
 Start is Pthread Job Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_69>
_5 = t2[i_10];
bb index := 3
# .MEM_60 = VDEF <.MEM_58>
exit (-1);
test.c:568:25: warning: use location
  568 |                         exit(-1);
      |                         ^
gimple stmt in succ := 3 
branch in succ := 12 have return or exit

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_5 = t2[i_10];
test.c:543:17: warning: use location
  543 |                 printf("%ld\n", t2[i]);
      |                 ^
dot graph target loc start pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
  541 |                 int err = pthread_create(&t2[i], &attr, child, NULL);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 3: _5 = t2[i_10];
test.c:543:17: warning: use location
  543 |                 printf("%ld\n", t2[i]);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_69 = VDEF <.MEM_45>
pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
  541 |                 int err = pthread_create(&t2[i], &attr, child, NULL);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start _5 = t2[i_10];
pthread_create (_4, &attr, child, 0B);
dot graph stmt end

dot graph stmt start _5 = t2[i_10];
test.c:543:17: warning: use location
  543 |                 printf("%ld\n", t2[i]);
      |                 ^
dot graph stmt end


======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
printf ("%ld\n", _5);
bb index := 3
# .MEM_60 = VDEF <.MEM_58>
exit (-1);
test.c:568:25: warning: use location
  568 |                         exit(-1);
      |                         ^
gimple stmt in succ := 3 
branch in succ := 12 have return or exit

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

printf ("%ld\n", _5);
test.c:543:17: warning: use location
  543 |                 printf("%ld\n", t2[i]);
      |                 ^
dot graph target loc start pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
  541 |                 int err = pthread_create(&t2[i], &attr, child, NULL);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 3: printf ("%ld\n", _5);
test.c:543:17: warning: use location
  543 |                 printf("%ld\n", t2[i]);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_69 = VDEF <.MEM_45>
pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
  541 |                 int err = pthread_create(&t2[i], &attr, child, NULL);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start printf ("%ld\n", _5);
pthread_create (_4, &attr, child, 0B);
dot graph stmt end

dot graph stmt start printf ("%ld\n", _5);
test.c:543:17: warning: use location
  543 |                 printf("%ld\n", t2[i]);
      |                 ^
dot graph stmt end

this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_46>
_6 = t2[i_11];
bb index := 8
# .MEM_60 = VDEF <.MEM_58>
exit (-1);
test.c:568:25: warning: use location
  568 |                         exit(-1);
      |                         ^
gimple stmt in succ := 8 
branch in succ := 12 have return or exit

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

_6 = t2[i_11];
test.c:558:17: warning: use location
  558 |                 pthread_join(t2[i], NULL);
      |                 ^
dot graph target loc start pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
  541 |                 int err = pthread_create(&t2[i], &attr, child, NULL);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 8: _6 = t2[i_11];
test.c:558:17: warning: use location
  558 |                 pthread_join(t2[i], NULL);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_69 = VDEF <.MEM_45>
pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
  541 |                 int err = pthread_create(&t2[i], &attr, child, NULL);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start _6 = t2[i_11];
pthread_create (_4, &attr, child, 0B);
dot graph stmt end

dot graph stmt start _6 = t2[i_11];
test.c:558:17: warning: use location
  558 |                 pthread_join(t2[i], NULL);
      |                 ^
dot graph stmt end


======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_46>
pthread_join (_6, 0B);
bb index := 8
# .MEM_60 = VDEF <.MEM_58>
exit (-1);
test.c:568:25: warning: use location
  568 |                         exit(-1);
      |                         ^
gimple stmt in succ := 8 
branch in succ := 12 have return or exit

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
dot graph entry main
dot graph target entry end

pthread_join (_6, 0B);
test.c:558:17: warning: use location
  558 |                 pthread_join(t2[i], NULL);
      |                 ^
dot graph target loc start pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
  541 |                 int err = pthread_create(&t2[i], &attr, child, NULL);
      |                           ^
dot graph target loc en1

dot graph target line desc form basic block 8: pthread_join (_6, 0B);
test.c:558:17: warning: use location
  558 |                 pthread_join(t2[i], NULL);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_69 = VDEF <.MEM_45>
pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
  541 |                 int err = pthread_create(&t2[i], &attr, child, NULL);
      |                           ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start pthread_join (_6, 0B);
pthread_create (_4, &attr, child, 0B);
dot graph stmt end

dot graph stmt start pthread_join (_6, 0B);
test.c:558:17: warning: use location
  558 |                 pthread_join(t2[i], NULL);
      |                 ^
dot graph stmt end

this stmt call this function :pthread_join
[40;32m    FIND PTHREAD_JOIN [0m

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_45>
pthread_create (_4, &attr, child, 0B);
bb index := 3
# .MEM_60 = VDEF <.MEM_58>
exit (-1);
test.c:568:25: warning: use location
  568 |                         exit(-1);
      |                         ^
gimple stmt in succ := 3 
branch in succ := 12 have return or exit

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_69 = VDEF <.MEM_45>
pthread_create (_4, &attr, child, 0B);
dot graph entry main
dot graph target entry end

pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
  541 |                 int err = pthread_create(&t2[i], &attr, child, NULL);
      |                           ^
dot graph target loc start pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 3: pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_69 = VDEF <.MEM_45>
pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start pthread_create (_4, &attr, child, 0B);
pthread_create (_4, &attr, child, 0B);
dot graph stmt end

dot graph stmt start pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
dot graph stmt end

this stmt call this function :pthread_create

 ================== find pthread stmt ================== 
pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
[40;32m    FIND PTHREAD_CREATED STMT  [0m

 ================== pre_pthread_detched ================== 
[40;44m =======trace_function_path child  function_call count: 9 level :-1========  [0m
[40;31m  find pthread_detched stmt  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pthread_detach (_1);
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
dot graph start relate form ID : 1295954371
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 1548657182 stmt(pthread_detched)) :pthread_detach (_1);
test.c:366:9: warning: use location
dot graph relate end

[40;31m  find pthread_exit stmt  [0m
# .MEM_27 = VDEF <.MEM_26>
pthread_exit (0B);
test.c:408:9: warning: use location
  408 |         pthread_exit(NULL); // 離開子執行緒
      |         ^
dot graph start relate form ID : 1295954371
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 1549789680 stmt(pthread_exit) :pthread_exit (0B);
test.c:408:9: warning: use location
dot graph relate end

[40;42m =======pre add _ fucntion:pthread_exit========= [0m
[40;46m =======add node_fun stack:pthread_exit========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_unlock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_unlock========= [0m
[40;42m =======pre add _ fucntion:boo========= [0m
[40;46m =======add node_fun stack:boo========= [0m
[40;44m =======trace_function_path boo  function_call count: 3 level :-1========  [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :-1========  [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;41m =======recursive_fun2:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo========= [0m
[40;46m =======add node_fun stack:foo========= [0m
[40;44m =======trace_function_path foo  function_call count: 2 level :-1========  [0m
[40;42m =======pre add _ fucntion:foo2========= [0m
foo2 this fucntion return value is heap-object 
foo this fucntion return value is heap-object foo2
[40;46m =======add node_fun stack:foo2========= [0m
[40;44m =======trace_function_path foo2  function_call count: 4 level :-1========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :-1========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m

 ================== pre_pthread_detched end ================== 
[40;44m =======trace_function_path child  function_call count: 9 level :0========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (_7);
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^
dot graph start relate form ID : 1723996454
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 56077444 stmt(free) :free (_7);
test.c:402:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 56077444 stmt(free) :free (_7);
test.c:402:9: warning: use location
dot graph relate end

 <integer_cst 0x7f20e9e69fc0 type <pointer_type 0x7f20e9e85000> constant 0>
[40;42m =======pre add _ fucntion:pthread_exit========= [0m
[40;46m =======add node_fun stack:pthread_exit========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_unlock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_unlock========= [0m
[40;42m =======pre add _ fucntion:boo========= [0m
[40;46m =======add node_fun stack:boo========= [0m
[40;44m =======trace_function_path boo  function_call count: 3 level :1========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
test.c:473:9: warning: use location
  473 |         free(b);
      |         ^
dot graph start relate form ID : 709285802
from boo basic block 2dot graph end relate end

dot graph relate stmt start ID : 703633196 stmt(free) :free (b_2(D));
test.c:473:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 703633196 stmt(free) :free (b_2(D));
test.c:473:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
test.c:474:9: warning: use location
  474 |         free(b);
      |         ^
dot graph start relate form ID : 709285802
from boo basic block 2dot graph end relate end

dot graph relate stmt start ID : 1806936515 stmt(free) :free (b_2(D));
test.c:474:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1806936515 stmt(free) :free (b_2(D));
test.c:474:9: warning: use location
dot graph relate end

 <integer_cst 0x7f20e9e69fc0 type <pointer_type 0x7f20e9e85000> constant 0>
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :2========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph start relate form ID : 1920807536
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 589949112 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 589949112 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph start relate form ID : 1920807536
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1208367062 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1208367062 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph start relate form ID : 1920807536
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 230286581 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 230286581 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph start relate form ID : 1920807536
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1261658460 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1261658460 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph start relate form ID : 1920807536
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 228608175 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 228608175 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph start relate form ID : 1920807536
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 837997286 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 837997286 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

 <integer_cst 0x7f20e9e69fc0 type <pointer_type 0x7f20e9e85000> constant 0>
[40;42m =======pre add _ fucntion:test22========= [0m
[40;41m =======recursive_fun2:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo========= [0m
[40;46m =======add node_fun stack:foo========= [0m
[40;44m =======trace_function_path foo  function_call count: 2 level :1========  [0m
 <integer_cst 0x7f20e9e69fc0 type <pointer_type 0x7f20e9e85000> constant 0>
[40;42m =======pre add _ fucntion:foo2========= [0m
foo2 this fucntion return value is heap-object 
foo this fucntion return value is heap-object foo2
[40;46m =======add node_fun stack:foo2========= [0m
[40;44m =======trace_function_path foo2  function_call count: 4 level :2========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph start relate form ID : 398470126
from foo2 basic block 3dot graph end relate end

dot graph relate stmt start ID : 339163036 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 339163036 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph start relate form ID : 398470126
from foo2 basic block 4dot graph end relate end

dot graph relate stmt start ID : 1013017262 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1013017262 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

 <integer_cst 0x7f20e9e69fc0 type <pointer_type 0x7f20e9e85000> constant 0>
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :3========  [0m
 <integer_cst 0x7f20e9e69fc0 type <pointer_type 0x7f20e9e85000> constant 0>
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m
[40;32m    FIND PTHREAD_CREATED TYPE is CREATE_DETACHED  [0m

 ================== find pthread stmt ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_45>
pthread_create (_4, &attr, child, 0B);
bb index := 3
# .MEM_60 = VDEF <.MEM_58>
exit (-1);
test.c:568:25: warning: use location
  568 |                         exit(-1);
      |                         ^
gimple stmt in succ := 3 
branch in succ := 12 have return or exit

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_69 = VDEF <.MEM_45>
pthread_create (_4, &attr, child, 0B);
dot graph entry main
dot graph target entry end

pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
  541 |                 int err = pthread_create(&t2[i], &attr, child, NULL);
      |                           ^
dot graph target loc start pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 3: pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_69 = VDEF <.MEM_45>
pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

dot graph stmt start pthread_create (_4, &attr, child, 0B);
pthread_create (_4, &attr, child, 0B);
dot graph stmt end

dot graph stmt start pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
dot graph stmt end

this stmt call this function :pthread_create

 ================== find pthread stmt ================== 
pthread_create (_4, &attr, child, 0B);
test.c:541:27: warning: use location
[40;32m    FIND PTHREAD_CREATED STMT  [0m

 ================== pre_pthread_detched ================== 
[40;44m =======trace_function_path child  function_call count: 9 level :-1========  [0m
[40;31m  find pthread_detched stmt  [0m
# .MEM_9 = VDEF <.MEM_8(D)>
pthread_detach (_1);
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
dot graph start relate form ID : 1492040702
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 1857641180 stmt(pthread_detched)) :pthread_detach (_1);
test.c:366:9: warning: use location
dot graph relate end

[40;31m  find pthread_exit stmt  [0m
# .MEM_27 = VDEF <.MEM_26>
pthread_exit (0B);
test.c:408:9: warning: use location
  408 |         pthread_exit(NULL); // 離開子執行緒
      |         ^
dot graph start relate form ID : 1492040702
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 268661410 stmt(pthread_exit) :pthread_exit (0B);
test.c:408:9: warning: use location
dot graph relate end

[40;42m =======pre add _ fucntion:pthread_exit========= [0m
[40;46m =======add node_fun stack:pthread_exit========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_unlock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_unlock========= [0m
[40;42m =======pre add _ fucntion:boo========= [0m
[40;46m =======add node_fun stack:boo========= [0m
[40;44m =======trace_function_path boo  function_call count: 3 level :-1========  [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :-1========  [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;41m =======recursive_fun2:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo========= [0m
[40;46m =======add node_fun stack:foo========= [0m
[40;44m =======trace_function_path foo  function_call count: 2 level :-1========  [0m
[40;42m =======pre add _ fucntion:foo2========= [0m
foo2 this fucntion return value is heap-object 
foo this fucntion return value is heap-object foo2
[40;46m =======add node_fun stack:foo2========= [0m
[40;44m =======trace_function_path foo2  function_call count: 4 level :-1========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :-1========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m

 ================== pre_pthread_detched end ================== 
[40;44m =======trace_function_path child  function_call count: 9 level :0========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (_7);
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^
dot graph start relate form ID : 970730503
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 1760100450 stmt(free) :free (_7);
test.c:402:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1760100450 stmt(free) :free (_7);
test.c:402:9: warning: use location
dot graph relate end

 <integer_cst 0x7f20e9e69fc0 type <pointer_type 0x7f20e9e85000> constant 0>
[40;42m =======pre add _ fucntion:pthread_exit========= [0m
[40;46m =======add node_fun stack:pthread_exit========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_unlock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_unlock========= [0m
[40;42m =======pre add _ fucntion:boo========= [0m
[40;46m =======add node_fun stack:boo========= [0m
[40;44m =======trace_function_path boo  function_call count: 3 level :1========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
test.c:473:9: warning: use location
  473 |         free(b);
      |         ^
dot graph start relate form ID : 1971467183
from boo basic block 2dot graph end relate end

dot graph relate stmt start ID : 632489274 stmt(free) :free (b_2(D));
test.c:473:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 632489274 stmt(free) :free (b_2(D));
test.c:473:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
test.c:474:9: warning: use location
  474 |         free(b);
      |         ^
dot graph start relate form ID : 1971467183
from boo basic block 2dot graph end relate end

dot graph relate stmt start ID : 1593331997 stmt(free) :free (b_2(D));
test.c:474:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1593331997 stmt(free) :free (b_2(D));
test.c:474:9: warning: use location
dot graph relate end

 <integer_cst 0x7f20e9e69fc0 type <pointer_type 0x7f20e9e85000> constant 0>
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :2========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph start relate form ID : 994466374
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 209002081 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 209002081 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph start relate form ID : 994466374
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1649409441 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1649409441 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph start relate form ID : 994466374
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1703752176 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1703752176 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph start relate form ID : 994466374
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 912635277 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 912635277 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph start relate form ID : 994466374
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1308862308 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1308862308 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph start relate form ID : 994466374
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1477076064 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1477076064 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

 <integer_cst 0x7f20e9e69fc0 type <pointer_type 0x7f20e9e85000> constant 0>
[40;42m =======pre add _ fucntion:test22========= [0m
[40;41m =======recursive_fun2:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo========= [0m
[40;46m =======add node_fun stack:foo========= [0m
[40;44m =======trace_function_path foo  function_call count: 2 level :1========  [0m
 <integer_cst 0x7f20e9e69fc0 type <pointer_type 0x7f20e9e85000> constant 0>
[40;42m =======pre add _ fucntion:foo2========= [0m
foo2 this fucntion return value is heap-object 
foo this fucntion return value is heap-object foo2
[40;46m =======add node_fun stack:foo2========= [0m
[40;44m =======trace_function_path foo2  function_call count: 4 level :2========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph start relate form ID : 369745722
from foo2 basic block 3dot graph end relate end

dot graph relate stmt start ID : 1707362646 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1707362646 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph start relate form ID : 369745722
from foo2 basic block 4dot graph end relate end

dot graph relate stmt start ID : 616759201 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 616759201 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

 <integer_cst 0x7f20e9e69fc0 type <pointer_type 0x7f20e9e85000> constant 0>
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :3========  [0m
 <integer_cst 0x7f20e9e69fc0 type <pointer_type 0x7f20e9e85000> constant 0>
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m
[40;32m    FIND PTHREAD_CREATED TYPE is CREATE_DETACHED  [0m

 ================== find pthread stmt ================== 
dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph arrowsubgraph cluster_397876284 dot graph subgraph  _6 = t2[i_11];
_4 = &t2[i_10];
dot graph subgrapend

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph arrowsubgraph cluster_782921335 dot graph subgraph  pthread_join (_6, 0B);
_6 = t2[i_11];
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;32m    pthread is DETACHED and no memory leak  [0m

======================================================================

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:22 [0m
[40;31m  	possible double free [rigorous]:22 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:22 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>
 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_56>
child (q_26);
bb index := 6
# .MEM_60 = VDEF <.MEM_58>
exit (-1);
test.c:568:25: warning: use location
  568 |                         exit(-1);
      |                         ^
gimple stmt in succ := 6 
branch in succ := 12 have return or exit

======================================================================
dot graph entry main
dot graph target entry end

child (q_26);
test.c:549:17: warning: use location
  549 |                 child(q);
      |                 ^
dot graph target loc start q_26 = malloc (5);
test.c:545:18: warning: use location
  545 |         int *q = malloc(5);
      |                  ^
dot graph target loc en1

dot graph target line desc form basic block 6: child (q_26);
test.c:549:17: warning: use location
  549 |                 child(q);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_56 = VDEF <.MEM_45>
q_26 = malloc (5);
test.c:545:18: warning: use location
  545 |         int *q = malloc(5);
      |                  ^
dot graph target loc end

dot graph target basicblock start from main basic block 6dot graph target basicblock en1

dot graph stmt start child (q_26);
q_26 = malloc (5);
dot graph stmt end

dot graph stmt start child (q_26);
test.c:549:17: warning: use location
  549 |                 child(q);
      |                 ^
dot graph stmt end

this stmt call this function :child
trace fucntion name:child 
[40;44m =======trace_function_path child  function_call count: 9 level :0========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (_7);
 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>
[40;36m ======= node_fun:child========= [0m
[40;36m ======= find relate stmt with q ========= [0m
dot graph arrowdot graph start relate for1ID : 996824023
from child basic block 2dot graph end relate end

_2 = malloc (20);
dot graph relate stmt start ID : 737039320 stmt(call) :In function ‘child’:
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
20
dot graph relate end

[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 996824023
from child basic block 2dot graph end relate end

test.c:398:20: warning: use location
  398 |         *ppData[0] = 10;
      |                    ^
*_3 = 10;
dot graph relate stmt start ID : 1795938597 stmt(LHS) :test.c:398:20: warning: use location
*_3
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 996824023
from child basic block 2dot graph end relate end

test.c:399:20: warning: use location
  399 |         *ppData[1] = 10;
      |                    ^
*_4 = 10;
dot graph relate stmt start ID : 1345948624 stmt(LHS) :test.c:399:20: warning: use location
*_4
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 996824023
from child basic block 2dot graph end relate end

test.c:400:20: warning: use location
  400 |         *ppData[2] = 10;
      |                    ^
*_5 = 10;
dot graph relate stmt start ID : 81596374 stmt(LHS) :test.c:400:20: warning: use location
*_5
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 996824023
from child basic block 2dot graph end relate end

test.c:401:18: warning: use location
  401 |         **ppData = 12;
      |                  ^
*_6 = 12;
dot graph relate stmt start ID : 1506096129 stmt(LHS) :test.c:401:18: warning: use location
*_6
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
# .MEM_27 = VDEF <.MEM_26>
pthread_exit (0B);
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pthread_exit========= [0m
[40;46m =======add node_fun stack:pthread_exit========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_unlock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_unlock========= [0m
[40;42m =======pre add _ fucntion:boo========= [0m
[40;46m =======add node_fun stack:boo========= [0m
[40;44m =======trace_function_path boo  function_call count: 3 level :1========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
In function ‘main’:
test.c:473:9: warning: use location
  473 |         free(b);
      |         ^
dot graph start relate form ID : 1614610034
from boo basic block 2dot graph end relate end

dot graph relate stmt start ID : 965089427 stmt(free) :free (b_2(D));
test.c:473:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 965089427 stmt(free) :free (b_2(D));
test.c:473:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
test.c:474:9: warning: use location
  474 |         free(b);
      |         ^
dot graph start relate form ID : 1614610034
from boo basic block 2dot graph end relate end

dot graph relate stmt start ID : 1945150874 stmt(free) :free (b_2(D));
test.c:474:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1945150874 stmt(free) :free (b_2(D));
test.c:474:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>
[40;36m ======= node_fun:boo========= [0m
[40;36m ======= find relate stmt with q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :2========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph start relate form ID : 1035550858
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 997053202 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 997053202 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph start relate form ID : 1035550858
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1785379153 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1785379153 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph start relate form ID : 1035550858
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 2006281361 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 2006281361 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph start relate form ID : 1035550858
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 609670004 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 609670004 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph start relate form ID : 1035550858
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1609362688 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1609362688 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph start relate form ID : 1035550858
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 491286988 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 491286988 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>
[40;36m ======= node_fun:test22========= [0m
[40;36m ======= find relate stmt with q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test22========= [0m
[40;41m =======recursive_fun2:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo========= [0m
[40;46m =======add node_fun stack:foo========= [0m
[40;44m =======trace_function_path foo  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>
[40;36m ======= node_fun:foo========= [0m
[40;36m ======= find relate stmt with q ========= [0m
dot graph arrowdot graph start relate for1ID : 55518353
from foo basic block 2dot graph end relate end

p2_3 = malloc (1);
dot graph relate stmt start ID : 456345414 stmt(call) :In function ‘foo’:
test.c:345:19: warning: use location
  345 |         int *p2 = malloc(1);
      |                   ^
1
dot graph relate end

[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 55518353
from foo basic block 2dot graph end relate end

test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
*p2_3 = 1;
dot graph relate stmt start ID : 700289069 stmt(LHS) :test.c:346:15: warning: use location
*p2_3
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:foo2========= [0m
foo2 this fucntion return value is heap-object 
foo this fucntion return value is heap-object foo2
[40;46m =======add node_fun stack:foo2========= [0m
[40;44m =======trace_function_path foo2  function_call count: 4 level :2========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>
[40;36m ======= node_fun:foo2========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1704927794
from foo2 basic block 2dot graph end relate end

In function ‘foo2’:
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
*a2_12 = 10;
dot graph relate stmt start ID : 12613942 stmt(LHS) :test.c:298:15: warning: use location
*a2_12
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1704927794
from foo2 basic block 2dot graph end relate end

test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
*_6 = 10;
dot graph relate stmt start ID : 1612924346 stmt(LHS) :test.c:299:16: warning: use location
*_6
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1704927794
from foo2 basic block 3dot graph end relate end

test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
*p3_14 = 10;
dot graph relate stmt start ID : 866306454 stmt(LHS) :test.c:308:23: warning: use location
*p3_14
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1704927794
from foo2 basic block 4dot graph end relate end

test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
*p4_16 = 10;
dot graph relate stmt start ID : 1489690007 stmt(LHS) :test.c:314:23: warning: use location
*p4_16
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :3========  [0m
 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>
[40;36m ======= node_fun:foo3========= [0m
[40;36m ======= find relate stmt with q ========= [0m
dot graph arrowdot graph start relate for1ID : 968025087
from foo3 basic block 2dot graph end relate end

_1 = malloc (1);
dot graph relate stmt start ID : 1236052177 stmt(call) :In function ‘foo3’:
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m

 ================== trace ================== 
trace fucntion free:8 

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_62 = VDEF <.MEM_48>
_9 = foo5 (q_26, q_26);
In function ‘main’:
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^
[40;31m    branch possiable have return in bb:14 [0m
gimple stmt in succ := 16 
beacuse in succ := 16 have return 

======================================================================
dot graph entry main
dot graph target entry end

_9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
dot graph target loc start q_26 = malloc (5);
test.c:545:18: warning: use location
  545 |         int *q = malloc(5);
      |                  ^
dot graph target loc en1

dot graph target line desc form basic block 16: _9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_56 = VDEF <.MEM_45>
q_26 = malloc (5);
test.c:545:18: warning: use location
  545 |         int *q = malloc(5);
      |                  ^
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start _9 = foo5 (q_26, q_26);
q_26 = malloc (5);
dot graph stmt end

dot graph stmt start _9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^
dot graph stmt end

this stmt call this function :foo5
trace fucntion name:foo5 
[40;44m =======trace_function_path foo5  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>
[40;36m ======= node_fun:foo5========= [0m
[40;36m ======= find relate stmt with q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:8 

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_63 = VDEF <.MEM_62>
printf ("fuck%d\n", _9);
test.c:578:9: warning: use location
[40;31m    branch possiable have return in bb:14 [0m
gimple stmt in succ := 16 
beacuse in succ := 16 have return 

======================================================================
dot graph entry main
dot graph target entry end

printf ("fuck%d\n", _9);
test.c:578:9: warning: use location
dot graph target loc start q_26 = malloc (5);
test.c:545:18: warning: use location
  545 |         int *q = malloc(5);
      |                  ^
dot graph target loc en1

dot graph target line desc form basic block 16: printf ("fuck%d\n", _9);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_56 = VDEF <.MEM_45>
q_26 = malloc (5);
test.c:545:18: warning: use location
  545 |         int *q = malloc(5);
      |                  ^
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start printf ("fuck%d\n", _9);
q_26 = malloc (5);
dot graph stmt end

dot graph stmt start printf ("fuck%d\n", _9);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^
dot graph stmt end

this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:8 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (q_26 != 0B)
bb index := 5
# .MEM_60 = VDEF <.MEM_58>
exit (-1);
test.c:568:25: warning: use location
  568 |                         exit(-1);
      |                         ^
gimple stmt in succ := 5 
branch in succ := 12 have return or exit

======================================================================
dot graph entry main
dot graph target entry end

if (q_26 != 0B)
test.c:546:12: warning: use location
  546 |         if (q != NULL)
      |            ^
dot graph target loc start q_26 = malloc (5);
test.c:545:18: warning: use location
  545 |         int *q = malloc(5);
      |                  ^
dot graph target loc en1

dot graph target line desc form basic block 5: if (q_26 != 0B)
test.c:546:12: warning: use location
  546 |         if (q != NULL)
      |            ^
dot graph target line desend

dot graph target loc start # .MEM_56 = VDEF <.MEM_45>
q_26 = malloc (5);
test.c:545:18: warning: use location
  545 |         int *q = malloc(5);
      |                  ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start if (q_26 != 0B)
q_26 = malloc (5);
dot graph stmt end

dot graph stmt start if (q_26 != 0B)
test.c:546:12: warning: use location
  546 |         if (q != NULL)
      |            ^
dot graph stmt end


======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_45>
q_26 = malloc (5);
bb index := 5
# .MEM_60 = VDEF <.MEM_58>
exit (-1);
test.c:568:25: warning: use location
  568 |                         exit(-1);
      |                         ^
gimple stmt in succ := 5 
branch in succ := 12 have return or exit

======================================================================
# .MEM_56 = VDEF <.MEM_45>
q_26 = malloc (5);
dot graph entry main
dot graph target entry end

q_26 = malloc (5);
test.c:545:18: warning: use location
  545 |         int *q = malloc(5);
      |                  ^
dot graph target loc start q_26 = malloc (5);
test.c:545:18: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 5: q_26 = malloc (5);
test.c:545:18: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_56 = VDEF <.MEM_45>
q_26 = malloc (5);
test.c:545:18: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start q_26 = malloc (5);
q_26 = malloc (5);
dot graph stmt end

dot graph stmt start q_26 = malloc (5);
test.c:545:18: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph arrowsubgraph cluster_1584784288 dot graph subgraph  _9 = foo5 (q_26, q_26);
q_26 = malloc (5);
dot graph subgrapend

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph arrowsubgraph cluster_1834406074 dot graph subgraph  printf ("fuck%d\n", _9);
_9 = foo5 (q_26, q_26);
dot graph subgrapend

dot graph start relate for1ID : 996824023
from child basic block 2dot graph end relate end

subgraph cluster_1447445289 dot graph subgraph  start ID : 1506096129 stmt(relate) ， Tree ID : 996824023 : *_6 = 12;
test.c:401:18: warning: use location
  401 |         **ppData = 12;
      |                  ^
dot graph subgrapend

dot graph start relate for1ID : 55518353
from foo basic block 2dot graph end relate end

subgraph cluster_220221975 dot graph subgraph  start ID : 700289069 stmt(relate) ， Tree ID : 55518353 : *p2_3 = 1;
test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
dot graph subgrapend

dot graph start relate for1ID : 1704927794
from foo2 basic block 4dot graph end relate end

subgraph cluster_683746450 dot graph subgraph  start ID : 1489690007 stmt(relate) ， Tree ID : 1704927794 : *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph subgrapend

dot graph start relate for1ID : 968025087
from foo3 basic block 2dot graph end relate end

subgraph cluster_37000961 dot graph subgraph  start ID : 1236052177 stmt(relate) ， Tree ID : 968025087 : _1 = malloc (1);
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

============================================================
# VUSE <.MEM_56>
child (q_26);
test.c:549:17: warning: free in this location
  549 |                 child(q);
      |                 ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_48>
_9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# VUSE <.MEM_56>
child (q_26);
test.c:549:17: warning: free in this location
  549 |                 child(q);
      |                 ^

===== possiable asias =====
# .MEM_63 = VDEF <.MEM_62>
printf ("fuck%d\n", _9);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>
 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_56>
child (q_26);
bb index := 6
# .MEM_60 = VDEF <.MEM_58>
exit (-1);
test.c:568:25: warning: use location
  568 |                         exit(-1);
      |                         ^
gimple stmt in succ := 6 
branch in succ := 12 have return or exit

======================================================================
# VUSE <.MEM_56>
child (q_26);
dot graph entry main
dot graph target entry end

child (q_26);
test.c:549:17: warning: use location
  549 |                 child(q);
      |                 ^
dot graph target loc start child (q_26);
test.c:549:17: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 6: child (q_26);
test.c:549:17: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_56>
child (q_26);
test.c:549:17: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 6dot graph target basicblock en1

dot graph stmt start child (q_26);
child (q_26);
dot graph stmt end

dot graph stmt start child (q_26);
test.c:549:17: warning: use location
dot graph stmt end

this stmt call this function :child
trace fucntion name:child 
[40;44m =======trace_function_path child  function_call count: 9 level :0========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (_7);
 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>
[40;36m ======= node_fun:child========= [0m
[40;36m ======= find relate stmt with q ========= [0m
dot graph arrowdot graph start relate for1ID : 2016160572
from child basic block 2dot graph end relate end

_2 = malloc (20);
dot graph relate stmt start ID : 2029695074 stmt(call) :In function ‘child’:
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
20
dot graph relate end

[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 2016160572
from child basic block 2dot graph end relate end

test.c:398:20: warning: use location
  398 |         *ppData[0] = 10;
      |                    ^
*_3 = 10;
dot graph relate stmt start ID : 118597336 stmt(LHS) :test.c:398:20: warning: use location
*_3
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 2016160572
from child basic block 2dot graph end relate end

test.c:399:20: warning: use location
  399 |         *ppData[1] = 10;
      |                    ^
*_4 = 10;
dot graph relate stmt start ID : 1374773054 stmt(LHS) :test.c:399:20: warning: use location
*_4
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 2016160572
from child basic block 2dot graph end relate end

test.c:400:20: warning: use location
  400 |         *ppData[2] = 10;
      |                    ^
*_5 = 10;
dot graph relate stmt start ID : 1496821460 stmt(LHS) :test.c:400:20: warning: use location
*_5
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 2016160572
from child basic block 2dot graph end relate end

test.c:401:18: warning: use location
  401 |         **ppData = 12;
      |                  ^
*_6 = 12;
dot graph relate stmt start ID : 1083686763 stmt(LHS) :test.c:401:18: warning: use location
*_6
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
# .MEM_27 = VDEF <.MEM_26>
pthread_exit (0B);
fucntion collect path finsh
[40;42m =======pre add _ fucntion:pthread_exit========= [0m
[40;46m =======add node_fun stack:pthread_exit========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_unlock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_unlock========= [0m
[40;42m =======pre add _ fucntion:boo========= [0m
[40;46m =======add node_fun stack:boo========= [0m
[40;44m =======trace_function_path boo  function_call count: 3 level :1========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
In function ‘main’:
test.c:473:9: warning: use location
  473 |         free(b);
      |         ^
dot graph start relate form ID : 1172440280
from boo basic block 2dot graph end relate end

dot graph relate stmt start ID : 384888670 stmt(free) :free (b_2(D));
test.c:473:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 384888670 stmt(free) :free (b_2(D));
test.c:473:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
test.c:474:9: warning: use location
  474 |         free(b);
      |         ^
dot graph start relate form ID : 1172440280
from boo basic block 2dot graph end relate end

dot graph relate stmt start ID : 2080739965 stmt(free) :free (b_2(D));
test.c:474:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 2080739965 stmt(free) :free (b_2(D));
test.c:474:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>
[40;36m ======= node_fun:boo========= [0m
[40;36m ======= find relate stmt with q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :2========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph start relate form ID : 810335785
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 243686384 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 243686384 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph start relate form ID : 810335785
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 542926322 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 542926322 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph start relate form ID : 810335785
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 272214825 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 272214825 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph start relate form ID : 810335785
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 734973372 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 734973372 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph start relate form ID : 810335785
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 598444675 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 598444675 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph start relate form ID : 810335785
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 728560240 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 728560240 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>
[40;36m ======= node_fun:test22========= [0m
[40;36m ======= find relate stmt with q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test22========= [0m
[40;41m =======recursive_fun2:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo========= [0m
[40;46m =======add node_fun stack:foo========= [0m
[40;44m =======trace_function_path foo  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>
[40;36m ======= node_fun:foo========= [0m
[40;36m ======= find relate stmt with q ========= [0m
dot graph arrowdot graph start relate for1ID : 1435262441
from foo basic block 2dot graph end relate end

p2_3 = malloc (1);
dot graph relate stmt start ID : 155888822 stmt(call) :In function ‘foo’:
test.c:345:19: warning: use location
  345 |         int *p2 = malloc(1);
      |                   ^
1
dot graph relate end

[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1435262441
from foo basic block 2dot graph end relate end

test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
*p2_3 = 1;
dot graph relate stmt start ID : 741174182 stmt(LHS) :test.c:346:15: warning: use location
*p2_3
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:foo2========= [0m
foo2 this fucntion return value is heap-object 
foo this fucntion return value is heap-object foo2
[40;46m =======add node_fun stack:foo2========= [0m
[40;44m =======trace_function_path foo2  function_call count: 4 level :2========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>
[40;36m ======= node_fun:foo2========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 900703139
from foo2 basic block 2dot graph end relate end

In function ‘foo2’:
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
*a2_12 = 10;
dot graph relate stmt start ID : 1022195276 stmt(LHS) :test.c:298:15: warning: use location
*a2_12
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 900703139
from foo2 basic block 2dot graph end relate end

test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
*_6 = 10;
dot graph relate stmt start ID : 83380541 stmt(LHS) :test.c:299:16: warning: use location
*_6
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 900703139
from foo2 basic block 3dot graph end relate end

test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
*p3_14 = 10;
dot graph relate stmt start ID : 1868728226 stmt(LHS) :test.c:308:23: warning: use location
*p3_14
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:q========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 900703139
from foo2 basic block 4dot graph end relate end

test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
*p4_16 = 10;
dot graph relate stmt start ID : 110763805 stmt(LHS) :test.c:314:23: warning: use location
*p4_16
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :3========  [0m
 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>
[40;36m ======= node_fun:foo3========= [0m
[40;36m ======= find relate stmt with q ========= [0m
dot graph arrowdot graph start relate for1ID : 1132949546
from foo3 basic block 2dot graph end relate end

_1 = malloc (1);
dot graph relate stmt start ID : 1306028866 stmt(call) :In function ‘foo3’:
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m

 ================== trace ================== 
trace fucntion free:8 

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_62 = VDEF <.MEM_48>
_9 = foo5 (q_26, q_26);
In function ‘main’:
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^
[40;31m    branch possiable have return in bb:14 [0m
gimple stmt in succ := 16 
beacuse in succ := 16 have return 

======================================================================
dot graph entry main
dot graph target entry end

_9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
dot graph target loc start child (q_26);
test.c:549:17: warning: use location
  549 |                 child(q);
      |                 ^
dot graph target loc en1

dot graph target line desc form basic block 16: _9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_56>
child (q_26);
test.c:549:17: warning: use location
  549 |                 child(q);
      |                 ^
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start _9 = foo5 (q_26, q_26);
child (q_26);
dot graph stmt end

dot graph stmt start _9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^
dot graph stmt end

this stmt call this function :foo5
trace fucntion name:foo5 
[40;44m =======trace_function_path foo5  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f20e9e719d8
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713ea0 q>
    def_stmt q_26 = malloc (5);
    version:26
    ptr-info 0x7f20e9984648>
[40;36m ======= node_fun:foo5========= [0m
[40;36m ======= find relate stmt with q ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:8 

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_63 = VDEF <.MEM_62>
printf ("fuck%d\n", _9);
test.c:578:9: warning: use location
[40;31m    branch possiable have return in bb:14 [0m
gimple stmt in succ := 16 
beacuse in succ := 16 have return 

======================================================================
dot graph entry main
dot graph target entry end

printf ("fuck%d\n", _9);
test.c:578:9: warning: use location
dot graph target loc start child (q_26);
test.c:549:17: warning: use location
  549 |                 child(q);
      |                 ^
dot graph target loc en1

dot graph target line desc form basic block 16: printf ("fuck%d\n", _9);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_56>
child (q_26);
test.c:549:17: warning: use location
  549 |                 child(q);
      |                 ^
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start printf ("fuck%d\n", _9);
child (q_26);
dot graph stmt end

dot graph stmt start printf ("fuck%d\n", _9);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^
dot graph stmt end

this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:8 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (q_26 != 0B)
bb index := 5
# .MEM_60 = VDEF <.MEM_58>
exit (-1);
test.c:568:25: warning: use location
  568 |                         exit(-1);
      |                         ^
gimple stmt in succ := 5 
branch in succ := 12 have return or exit

======================================================================
dot graph entry main
dot graph target entry end

if (q_26 != 0B)
test.c:546:12: warning: use location
  546 |         if (q != NULL)
      |            ^
dot graph target loc start child (q_26);
test.c:549:17: warning: use location
  549 |                 child(q);
      |                 ^
dot graph target loc en1

dot graph target line desc form basic block 5: if (q_26 != 0B)
test.c:546:12: warning: use location
  546 |         if (q != NULL)
      |            ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_56>
child (q_26);
test.c:549:17: warning: use location
  549 |                 child(q);
      |                 ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start if (q_26 != 0B)
child (q_26);
dot graph stmt end

dot graph stmt start if (q_26 != 0B)
test.c:546:12: warning: use location
  546 |         if (q != NULL)
      |            ^
dot graph stmt end


======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_45>
q_26 = malloc (5);
bb index := 5
# .MEM_60 = VDEF <.MEM_58>
exit (-1);
test.c:568:25: warning: use location
  568 |                         exit(-1);
      |                         ^
gimple stmt in succ := 5 
branch in succ := 12 have return or exit

======================================================================
dot graph entry main
dot graph target entry end

q_26 = malloc (5);
test.c:545:18: warning: use location
  545 |         int *q = malloc(5);
      |                  ^
dot graph target loc start child (q_26);
test.c:549:17: warning: use location
  549 |                 child(q);
      |                 ^
dot graph target loc en1

dot graph target line desc form basic block 5: q_26 = malloc (5);
test.c:545:18: warning: use location
  545 |         int *q = malloc(5);
      |                  ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_56>
child (q_26);
test.c:549:17: warning: use location
  549 |                 child(q);
      |                 ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start q_26 = malloc (5);
child (q_26);
dot graph stmt end

dot graph stmt start q_26 = malloc (5);
test.c:545:18: warning: use location
  545 |         int *q = malloc(5);
      |                  ^
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph arrowsubgraph cluster_432911187 dot graph subgraph  _9 = foo5 (q_26, q_26);
q_26 = malloc (5);
dot graph subgrapend

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph arrowsubgraph cluster_1526250841 dot graph subgraph  printf ("fuck%d\n", _9);
_9 = foo5 (q_26, q_26);
dot graph subgrapend

dot graph start relate for1ID : 996824023
from child basic block 2dot graph end relate end

subgraph cluster_481432682 dot graph subgraph  start ID : 1506096129 stmt(relate) ， Tree ID : 996824023 : *_6 = 12;
test.c:401:18: warning: use location
  401 |         **ppData = 12;
      |                  ^
dot graph subgrapend

dot graph start relate for1ID : 55518353
from foo basic block 2dot graph end relate end

subgraph cluster_469912149 dot graph subgraph  start ID : 700289069 stmt(relate) ， Tree ID : 55518353 : *p2_3 = 1;
test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
dot graph subgrapend

dot graph start relate for1ID : 1704927794
from foo2 basic block 4dot graph end relate end

subgraph cluster_1394927765 dot graph subgraph  start ID : 1489690007 stmt(relate) ， Tree ID : 1704927794 : *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph subgrapend

dot graph start relate for1ID : 968025087
from foo3 basic block 2dot graph end relate end

subgraph cluster_363644108 dot graph subgraph  start ID : 1236052177 stmt(relate) ， Tree ID : 968025087 : _1 = malloc (1);
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
dot graph subgrapend

dot graph start relate for1ID : 2016160572
from child basic block 2dot graph end relate end

subgraph cluster_588509485 dot graph subgraph  start ID : 1083686763 stmt(relate) ， Tree ID : 2016160572 : *_6 = 12;
test.c:401:18: warning: use location
  401 |         **ppData = 12;
      |                  ^
dot graph subgrapend

dot graph start relate for1ID : 1435262441
from foo basic block 2dot graph end relate end

subgraph cluster_622217171 dot graph subgraph  start ID : 741174182 stmt(relate) ， Tree ID : 1435262441 : *p2_3 = 1;
test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
dot graph subgrapend

dot graph start relate for1ID : 900703139
from foo2 basic block 4dot graph end relate end

subgraph cluster_1860465568 dot graph subgraph  start ID : 110763805 stmt(relate) ， Tree ID : 900703139 : *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph subgrapend

dot graph start relate for1ID : 1132949546
from foo3 basic block 2dot graph end relate end

subgraph cluster_1672196248 dot graph subgraph  start ID : 1306028866 stmt(relate) ， Tree ID : 1132949546 : _1 = malloc (1);
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

============================================================
# VUSE <.MEM_56>
child (q_26);
test.c:549:17: warning: free in this location
  549 |                 child(q);
      |                 ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_48>
_9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# VUSE <.MEM_56>
child (q_26);
test.c:549:17: warning: free in this location
  549 |                 child(q);
      |                 ^

===== possiable asias =====
# .MEM_63 = VDEF <.MEM_62>
printf ("fuck%d\n", _9);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:8 [0m
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:8 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <array_ref 0x7f20e9e73118
    type <integer_type 0x7f20e996d888 char readonly QI
        size <integer_cst 0x7f20e9e69ca8 constant 8>
        unit-size <integer_cst 0x7f20e9e69cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e3f0 precision:8 min <integer_cst 0x7f20e9964768 -128> max <integer_cst 0x7f20e9964750 127>
        pointer_to_this <pointer_type 0x7f20e996d930>>
   
    arg:0 <string_cst 0x7f20ea065e00
        type <array_type 0x7f20e9979888 type <integer_type 0x7f20e996d888 char>
            BLK
            size <integer_cst 0x7f20e99648d0 constant 40>
            unit-size <integer_cst 0x7f20e9964858 constant 5>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f20e9979690>>
        readonly constant static "fuck\000">
    arg:1 <integer_cst 0x7f20e9e69f48 type <integer_type 0x7f20e9e7e5e8 int> constant 0>>
 <array_ref 0x7f20e9e73118
    type <integer_type 0x7f20e996d888 char readonly QI
        size <integer_cst 0x7f20e9e69ca8 constant 8>
        unit-size <integer_cst 0x7f20e9e69cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e3f0 precision:8 min <integer_cst 0x7f20e9964768 -128> max <integer_cst 0x7f20e9964750 127>
        pointer_to_this <pointer_type 0x7f20e996d930>>
   
    arg:0 <string_cst 0x7f20ea065e00
        type <array_type 0x7f20e9979888 type <integer_type 0x7f20e996d888 char>
            BLK
            size <integer_cst 0x7f20e99648d0 constant 40>
            unit-size <integer_cst 0x7f20e9964858 constant 5>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f20e9979690>>
        readonly constant static "fuck\000">
    arg:1 <integer_cst 0x7f20e9e69f48 type <integer_type 0x7f20e9e7e5e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f20e9e73118
    type <integer_type 0x7f20e996d888 char readonly QI
        size <integer_cst 0x7f20e9e69ca8 constant 8>
        unit-size <integer_cst 0x7f20e9e69cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e3f0 precision:8 min <integer_cst 0x7f20e9964768 -128> max <integer_cst 0x7f20e9964750 127>
        pointer_to_this <pointer_type 0x7f20e996d930>>
   
    arg:0 <string_cst 0x7f20ea065e00
        type <array_type 0x7f20e9979888 type <integer_type 0x7f20e996d888 char>
            BLK
            size <integer_cst 0x7f20e99648d0 constant 40>
            unit-size <integer_cst 0x7f20e9964858 constant 5>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f20e9979690>>
        readonly constant static "fuck\000">
    arg:1 <integer_cst 0x7f20e9e69f48 type <integer_type 0x7f20e9e7e5e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_57 = VDEF <.MEM_56>
__builtin_puts (&"fuck"[0]);
dot graph entry main
dot graph target entry end

__builtin_puts (&"fuck"[0]);
test.c:553:17: warning: use location
  553 |                 printf("fuck\n");
      |                 ^
dot graph target loc start __builtin_puts (&"fuck"[0]);
test.c:553:17: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 7: __builtin_puts (&"fuck"[0]);
test.c:553:17: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_57 = VDEF <.MEM_56>
__builtin_puts (&"fuck"[0]);
test.c:553:17: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start __builtin_puts (&"fuck"[0]);
__builtin_puts (&"fuck"[0]);
dot graph stmt end

dot graph stmt start __builtin_puts (&"fuck"[0]);
test.c:553:17: warning: use location
dot graph stmt end

this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_57 = VDEF <.MEM_56>
__builtin_puts (&"fuck"[0]);
dot graph entry main
dot graph target entry end

__builtin_puts (&"fuck"[0]);
test.c:553:17: warning: use location
dot graph target loc start __builtin_puts (&"fuck"[0]);
test.c:553:17: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 7: __builtin_puts (&"fuck"[0]);
test.c:553:17: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_57 = VDEF <.MEM_56>
__builtin_puts (&"fuck"[0]);
test.c:553:17: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start __builtin_puts (&"fuck"[0]);
__builtin_puts (&"fuck"[0]);
dot graph stmt end

dot graph stmt start __builtin_puts (&"fuck"[0]);
test.c:553:17: warning: use location
dot graph stmt end

this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph arrowsubgraph cluster_1794657451 dot graph subgraph  __builtin_puts (&"fuck"[0]);
dot graph subgrapend

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph arrowsubgraph cluster_97870591 dot graph subgraph  __builtin_puts (&"fuck"[0]);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e9e71a20
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713e10 data>
    def_stmt data_30 = malloc (400);
    version:30
    ptr-info 0x7f20e9984660>
 <ssa_name 0x7f20e9e71a20
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20ea713e10 data>
    def_stmt data_30 = malloc (400);
    version:30
    ptr-info 0x7f20e9984660>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    fucntion exit  [0m
data_12 = PHI <0B(10), data_30(13)>
lto1: warning: use location
[40;31m    branch possiable have return in bb:14 [0m
gimple stmt in succ := 14 
beacuse in succ := 16 have return 

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
data_12 = PHI <0B(10), data_30(13)>
bb index := 14
# .MEM_60 = VDEF <.MEM_58>
exit (-1);
test.c:568:25: warning: use location
  568 |                         exit(-1);
      |                         ^
gimple stmt in succ := 14 
branch in succ := 12 have return or exit

======================================================================
dot graph entry main
dot graph target entry end

data_12 = PHI <0B(10), data_30(13)>
lto1: warning: use location
dot graph target loc start data_30 = malloc (400);
test.c:565:31: warning: use location
  565 |                 data = (int *)malloc(100 * sizeof(int));
      |                               ^
dot graph target loc en1

dot graph target line desc form basic block 14: data_12 = PHI <0B(10), data_30(13)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_58 = VDEF <.MEM_46>
data_30 = malloc (400);
test.c:565:31: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start data_12 = PHI <0B(10), data_30(13)>
data_30 = malloc (400);
dot graph stmt end

dot graph stmt start data_12 = PHI <0B(10), data_30(13)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---exit-----

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_61 = VDEF <.MEM_47>
free (data_12);
test.c:576:17: warning: use location
  576 |                 free(data);
      |                 ^
[40;31m    branch possiable have return in bb:15 [0m
gimple stmt in succ := 15 
beacuse in succ := 16 have return 

======================================================================
dot graph entry main
dot graph target entry end

free (data_12);
test.c:576:17: warning: use location
dot graph target loc start data_30 = malloc (400);
test.c:565:31: warning: use location
  565 |                 data = (int *)malloc(100 * sizeof(int));
      |                               ^
dot graph target loc en1

dot graph target line desc form basic block 15: free (data_12);
test.c:576:17: warning: use location
  576 |                 free(data);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_58 = VDEF <.MEM_46>
data_30 = malloc (400);
test.c:565:31: warning: use location
  565 |                 data = (int *)malloc(100 * sizeof(int));
      |                               ^
dot graph target loc end

dot graph target basicblock start from main basic block 15dot graph target basicblock en1

dot graph stmt start free (data_12);
data_30 = malloc (400);
dot graph stmt end

dot graph stmt start free (data_12);
test.c:576:17: warning: use location
  576 |                 free(data);
      |                 ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (data_12);
test.c:576:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_58>
free (data_30);
bb index := 13
# .MEM_60 = VDEF <.MEM_58>
exit (-1);
test.c:568:25: warning: use location
  568 |                         exit(-1);
      |                         ^
gimple stmt in succ := 13 
branch in succ := 12 have return or exit

======================================================================
dot graph entry main
dot graph target entry end

free (data_30);
test.c:571:17: warning: use location
  571 |                 free(data);
      |                 ^
dot graph target loc start data_30 = malloc (400);
test.c:565:31: warning: use location
  565 |                 data = (int *)malloc(100 * sizeof(int));
      |                               ^
dot graph target loc en1

dot graph target line desc form basic block 13: free (data_30);
test.c:571:17: warning: use location
  571 |                 free(data);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_58 = VDEF <.MEM_46>
data_30 = malloc (400);
test.c:565:31: warning: use location
  565 |                 data = (int *)malloc(100 * sizeof(int));
      |                               ^
dot graph target loc end

dot graph target basicblock start from main basic block 13dot graph target basicblock en1

dot graph stmt start free (data_30);
data_30 = malloc (400);
dot graph stmt end

dot graph stmt start free (data_30);
test.c:571:17: warning: use location
  571 |                 free(data);
      |                 ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (data_30);
test.c:571:17: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (data_30 == 0B)
bb index := 11
# .MEM_60 = VDEF <.MEM_58>
exit (-1);
test.c:568:25: warning: use location
  568 |                         exit(-1);
      |                         ^
gimple stmt in succ := 11 
branch in succ := 12 have return or exit

======================================================================
dot graph entry main
dot graph target entry end

if (data_30 == 0B)
test.c:566:20: warning: use location
  566 |                 if (data == NULL)
      |                    ^
dot graph target loc start data_30 = malloc (400);
test.c:565:31: warning: use location
  565 |                 data = (int *)malloc(100 * sizeof(int));
      |                               ^
dot graph target loc en1

dot graph target line desc form basic block 11: if (data_30 == 0B)
test.c:566:20: warning: use location
  566 |                 if (data == NULL)
      |                    ^
dot graph target line desend

dot graph target loc start # .MEM_58 = VDEF <.MEM_46>
data_30 = malloc (400);
test.c:565:31: warning: use location
  565 |                 data = (int *)malloc(100 * sizeof(int));
      |                               ^
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start if (data_30 == 0B)
data_30 = malloc (400);
dot graph stmt end

dot graph stmt start if (data_30 == 0B)
test.c:566:20: warning: use location
  566 |                 if (data == NULL)
      |                    ^
dot graph stmt end


======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_46>
data_30 = malloc (400);
bb index := 11
# .MEM_60 = VDEF <.MEM_58>
exit (-1);
test.c:568:25: warning: use location
  568 |                         exit(-1);
      |                         ^
gimple stmt in succ := 11 
branch in succ := 12 have return or exit

======================================================================
# .MEM_58 = VDEF <.MEM_46>
data_30 = malloc (400);
dot graph entry main
dot graph target entry end

data_30 = malloc (400);
test.c:565:31: warning: use location
  565 |                 data = (int *)malloc(100 * sizeof(int));
      |                               ^
dot graph target loc start data_30 = malloc (400);
test.c:565:31: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 11: data_30 = malloc (400);
test.c:565:31: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_58 = VDEF <.MEM_46>
data_30 = malloc (400);
test.c:565:31: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start data_30 = malloc (400);
data_30 = malloc (400);
dot graph stmt end

dot graph stmt start data_30 = malloc (400);
test.c:565:31: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from main basic block 15dot graph target basicblock en1

dot graph arrowsubgraph cluster_1605452565 dot graph subgraph  free (data_12);
data_12 = PHI <0B(10), data_30(13)>
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_58>
free (data_30);
test.c:571:17: warning: use location
  571 |                 free(data);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_47>
free (data_12);
test.c:576:17: warning: use location
  576 |                 free(data);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_59 = VDEF <.MEM_58>
free (data_30);
test.c:571:17: warning: free in this location
  571 |                 free(data);
      |                 ^

===== possiable asias =====
data_12 = PHI <0B(10), data_30(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_58>
free (data_30);
test.c:571:17: warning: free in this location

===== possiable asias =====
data_12 = PHI <0B(10), data_30(13)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e9e71870
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
   
    def_stmt _9 = foo5 (q_26, q_26);
    version:9>
 <ssa_name 0x7f20e9e71870
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
   
    def_stmt _9 = foo5 (q_26, q_26);
    version:9>

 ================== pre trace ptable ================== 
trace fucntion name:foo5 
[40;44m =======trace_function_path foo5  function_call count: 1 level :888========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e9e71870
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
   
    def_stmt _9 = foo5 (q_26, q_26);
    version:9>
is Other function foo5
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_56>
child (q_26);
bb index := 6
# .MEM_60 = VDEF <.MEM_58>
exit (-1);
test.c:568:25: warning: use location
  568 |                         exit(-1);
      |                         ^
gimple stmt in succ := 6 
branch in succ := 12 have return or exit

======================================================================
dot graph entry main
dot graph target entry end

child (q_26);
test.c:549:17: warning: use location
  549 |                 child(q);
      |                 ^
dot graph target loc start _9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 6: child (q_26);
test.c:549:17: warning: use location
  549 |                 child(q);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_62 = VDEF <.MEM_48>
_9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^
dot graph target loc end

dot graph target basicblock start from main basic block 6dot graph target basicblock en1

dot graph stmt start child (q_26);
_9 = foo5 (q_26, q_26);
dot graph stmt end

dot graph stmt start child (q_26);
test.c:549:17: warning: use location
  549 |                 child(q);
      |                 ^
dot graph stmt end

this stmt call this function :child
trace fucntion name:child 
[40;44m =======trace_function_path child  function_call count: 9 level :0========  [0m
# .MEM_21 = VDEF <.MEM_20>
free (_7);
[40;31m  find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (_7);
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^
dot graph start relate form ID : 341556975
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 895239 stmt(free) :free (_7);
test.c:402:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 895239 stmt(free) :free (_7);
test.c:402:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e9e71870
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
   
    def_stmt _9 = foo5 (q_26, q_26);
    version:9>
[40;42m =======pre add _ fucntion:pthread_exit========= [0m
[40;46m =======add node_fun stack:pthread_exit========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_unlock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_unlock========= [0m
[40;42m =======pre add _ fucntion:boo========= [0m
[40;46m =======add node_fun stack:boo========= [0m
[40;44m =======trace_function_path boo  function_call count: 3 level :1========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
test.c:473:9: warning: use location
  473 |         free(b);
      |         ^
dot graph start relate form ID : 729724414
from boo basic block 2dot graph end relate end

dot graph relate stmt start ID : 1076530347 stmt(free) :free (b_2(D));
test.c:473:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1076530347 stmt(free) :free (b_2(D));
test.c:473:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
test.c:474:9: warning: use location
  474 |         free(b);
      |         ^
dot graph start relate form ID : 729724414
from boo basic block 2dot graph end relate end

dot graph relate stmt start ID : 599339915 stmt(free) :free (b_2(D));
test.c:474:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 599339915 stmt(free) :free (b_2(D));
test.c:474:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e9e71870
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
   
    def_stmt _9 = foo5 (q_26, q_26);
    version:9>
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :2========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph start relate form ID : 1458284654
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 364309140 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 364309140 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph start relate form ID : 1458284654
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 755228737 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 755228737 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph start relate form ID : 1458284654
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 51975188 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 51975188 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph start relate form ID : 1458284654
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1265012279 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1265012279 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph start relate form ID : 1458284654
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1777424013 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1777424013 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph start relate form ID : 1458284654
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 135355730 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 135355730 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e9e71870
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
   
    def_stmt _9 = foo5 (q_26, q_26);
    version:9>
[40;42m =======pre add _ fucntion:test22========= [0m
[40;41m =======recursive_fun2:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo========= [0m
[40;46m =======add node_fun stack:foo========= [0m
[40;44m =======trace_function_path foo  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f20e9e71870
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
   
    def_stmt _9 = foo5 (q_26, q_26);
    version:9>
[40;42m =======pre add _ fucntion:foo2========= [0m
foo2 this fucntion return value is heap-object 
foo this fucntion return value is heap-object foo2
[40;46m =======add node_fun stack:foo2========= [0m
[40;44m =======trace_function_path foo2  function_call count: 4 level :2========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph start relate form ID : 1888187819
from foo2 basic block 3dot graph end relate end

dot graph relate stmt start ID : 1268305276 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1268305276 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph start relate form ID : 1888187819
from foo2 basic block 4dot graph end relate end

dot graph relate stmt start ID : 144802075 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 144802075 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

 <ssa_name 0x7f20e9e71870
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
   
    def_stmt _9 = foo5 (q_26, q_26);
    version:9>
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :3========  [0m
 <ssa_name 0x7f20e9e71870
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
   
    def_stmt _9 = foo5 (q_26, q_26);
    version:9>
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m

 ================== trace ================== 
trace fucntion free:11 

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_62 = VDEF <.MEM_48>
_9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^
[40;31m    branch possiable have return in bb:14 [0m
gimple stmt in succ := 16 
beacuse in succ := 16 have return 

======================================================================
# .MEM_62 = VDEF <.MEM_48>
_9 = foo5 (q_26, q_26);
dot graph entry main
dot graph target entry end

_9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
dot graph target loc start _9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 16: _9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_62 = VDEF <.MEM_48>
_9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start _9 = foo5 (q_26, q_26);
_9 = foo5 (q_26, q_26);
dot graph stmt end

dot graph stmt start _9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
dot graph stmt end

this stmt call this function :foo5
trace fucntion name:foo5 
[40;44m =======trace_function_path foo5  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f20e9e71870
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
   
    def_stmt _9 = foo5 (q_26, q_26);
    version:9>
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:11 

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_63 = VDEF <.MEM_62>
printf ("fuck%d\n", _9);
test.c:578:9: warning: use location
[40;31m    branch possiable have return in bb:14 [0m
gimple stmt in succ := 16 
beacuse in succ := 16 have return 

======================================================================
dot graph entry main
dot graph target entry end

printf ("fuck%d\n", _9);
test.c:578:9: warning: use location
dot graph target loc start _9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 16: printf ("fuck%d\n", _9);
test.c:578:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_62 = VDEF <.MEM_48>
_9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph stmt start printf ("fuck%d\n", _9);
_9 = foo5 (q_26, q_26);
dot graph stmt end

dot graph stmt start printf ("fuck%d\n", _9);
test.c:578:9: warning: use location
dot graph stmt end

this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:11 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (q_26 != 0B)
bb index := 5
# .MEM_60 = VDEF <.MEM_58>
exit (-1);
test.c:568:25: warning: use location
  568 |                         exit(-1);
      |                         ^
gimple stmt in succ := 5 
branch in succ := 12 have return or exit

======================================================================
dot graph entry main
dot graph target entry end

if (q_26 != 0B)
test.c:546:12: warning: use location
  546 |         if (q != NULL)
      |            ^
dot graph target loc start _9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 5: if (q_26 != 0B)
test.c:546:12: warning: use location
  546 |         if (q != NULL)
      |            ^
dot graph target line desend

dot graph target loc start # .MEM_62 = VDEF <.MEM_48>
_9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start if (q_26 != 0B)
_9 = foo5 (q_26, q_26);
dot graph stmt end

dot graph stmt start if (q_26 != 0B)
test.c:546:12: warning: use location
  546 |         if (q != NULL)
      |            ^
dot graph stmt end

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph arrowsubgraph cluster_1671052916 dot graph subgraph  _9 = foo5 (q_26, q_26);
q_26 = malloc (5);
dot graph subgrapend

dot graph target basicblock start from main basic block 16dot graph target basicblock en1

dot graph arrowsubgraph cluster_19823085 dot graph subgraph  printf ("fuck%d\n", _9);
_9 = foo5 (q_26, q_26);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_58>
free (data_30);
test.c:571:17: warning: use location
  571 |                 free(data);
      |                 ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_47>
free (data_12);
test.c:576:17: warning: use location
  576 |                 free(data);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# VUSE <.MEM_56>
child (q_26);
test.c:549:17: warning: free in this location
  549 |                 child(q);
      |                 ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_48>
_9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_58>
free (data_30);
test.c:571:17: warning: free in this location
  571 |                 free(data);
      |                 ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_48>
_9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_47>
free (data_12);
test.c:576:17: warning: free in this location
  576 |                 free(data);
      |                 ^

===== possiable asias =====
# .MEM_62 = VDEF <.MEM_48>
_9 = foo5 (q_26, q_26);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# VUSE <.MEM_56>
child (q_26);
test.c:549:17: warning: free in this location
  549 |                 child(q);
      |                 ^

===== possiable asias =====
# .MEM_63 = VDEF <.MEM_62>
printf ("fuck%d\n", _9);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_58>
free (data_30);
test.c:571:17: warning: free in this location
  571 |                 free(data);
      |                 ^

===== possiable asias =====
# .MEM_63 = VDEF <.MEM_62>
printf ("fuck%d\n", _9);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_61 = VDEF <.MEM_47>
free (data_12);
test.c:576:17: warning: free in this location
  576 |                 free(data);
      |                 ^

===== possiable asias =====
# .MEM_63 = VDEF <.MEM_62>
printf ("fuck%d\n", _9);
test.c:578:9: warning: use location
  578 |         printf("fuck%d\n", foo5(q, q));
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:11 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:11 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;44m =======print_function_path test22  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;42m =======pre_check_funciton:test22========= [0m
[40;42m =======start_check_funciton:test22========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>
 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
dot graph entry test22
dot graph target entry end

test22 (k_2(D));
In function ‘test22’:
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: test22 (k_2(D));
test.c:496:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start test22 (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start test22 (k_2(D));
test.c:496:9: warning: use location
dot graph stmt end

this stmt call this function :test22
trace fucntion name:test22 
[40;44m =======trace_function_path test22  function_call count: 2 level :0========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph start relate form ID : 23644965
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 918497033 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 918497033 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph start relate form ID : 23644965
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 383467193 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 383467193 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph start relate form ID : 23644965
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 612154450 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 612154450 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph start relate form ID : 23644965
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1540714205 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1540714205 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph start relate form ID : 23644965
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 96449113 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 96449113 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph start relate form ID : 23644965
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 136867050 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 136867050 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>
[40;36m ======= node_fun:test22========= [0m
[40;36m ======= find relate stmt with k ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :1========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph start relate form ID : 1187888008
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 194319704 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 194319704 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph start relate form ID : 1187888008
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1742319615 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1742319615 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph start relate form ID : 1187888008
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1645397597 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1645397597 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph start relate form ID : 1187888008
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 535876679 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 535876679 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph start relate form ID : 1187888008
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1743214855 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1743214855 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph start relate form ID : 1187888008
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 227638363 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 227638363 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>
[40;36m ======= node_fun:test22========= [0m
[40;36m ======= find relate stmt with k ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test22========= [0m
[40;41m =======recursive_fun2:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:12 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:493:9: warning: use location
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:493:9: warning: use location
[40;32m    HAS FREE STMT count:13 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:492:9: warning: use location
[40;32m    HAS FREE STMT count:14 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:491:9: warning: use location
[40;32m    HAS FREE STMT count:15 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:490:9: warning: use location
[40;32m    HAS FREE STMT count:16 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:489:9: warning: use location
[40;32m    HAS FREE STMT count:17 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:488:9: warning: use location
[40;32m    HAS FREE STMT count:18 name:free [0m

 ================== find free stmt ================== 
dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1612407026 dot graph subgraph  test22 (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_195071122 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1685923017 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1976716166 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_950299859 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1737898205 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1094244797 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: free in this location

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: free in this location
  492 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: free in this location
  491 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: free in this location
  490 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: free in this location
  489 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: free in this location
  488 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: free in this location
  488 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: free in this location
  489 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: free in this location
  490 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: free in this location
  491 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: free in this location
  492 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: free in this location
  493 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:6 [0m
[40;31m  	free count:18 [0m
[40;31m  	possible double free [Looserules]:6 [0m
[40;31m  	possible double free [rigorous]:18 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:18 [0m

======================================================================

======================================================================
[40;44m =======print_function_path boo  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;44m =======print_function_path test22  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;42m =======pre_check_funciton:test22========= [0m
[40;42m =======start_check_funciton:test22========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>
 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
dot graph entry test22
dot graph target entry end

test22 (k_2(D));
In function ‘boo’:
test.c:496:9: warning: use location
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: test22 (k_2(D));
test.c:496:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start test22 (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start test22 (k_2(D));
test.c:496:9: warning: use location
dot graph stmt end

this stmt call this function :test22
trace fucntion name:test22 
[40;44m =======trace_function_path test22  function_call count: 2 level :0========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph start relate form ID : 580240224
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1873253935 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1873253935 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph start relate form ID : 580240224
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 2080501654 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 2080501654 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph start relate form ID : 580240224
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 320944395 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 320944395 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph start relate form ID : 580240224
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 994075564 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 994075564 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph start relate form ID : 580240224
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 77820081 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 77820081 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph start relate form ID : 580240224
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 2006818446 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 2006818446 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>
[40;36m ======= node_fun:test22========= [0m
[40;36m ======= find relate stmt with k ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :1========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph start relate form ID : 547808380
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1748872997 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1748872997 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph start relate form ID : 547808380
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 2026641531 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 2026641531 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph start relate form ID : 547808380
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 571453345 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 571453345 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph start relate form ID : 547808380
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 519886383 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 519886383 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph start relate form ID : 547808380
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 262625076 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 262625076 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph start relate form ID : 547808380
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1183607795 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1183607795 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>
[40;36m ======= node_fun:test22========= [0m
[40;36m ======= find relate stmt with k ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test22========= [0m
[40;41m =======recursive_fun2:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:12 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:493:9: warning: use location
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:493:9: warning: use location
[40;32m    HAS FREE STMT count:13 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:492:9: warning: use location
[40;32m    HAS FREE STMT count:14 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:491:9: warning: use location
[40;32m    HAS FREE STMT count:15 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:490:9: warning: use location
[40;32m    HAS FREE STMT count:16 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:489:9: warning: use location
[40;32m    HAS FREE STMT count:17 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:488:9: warning: use location
[40;32m    HAS FREE STMT count:18 name:free [0m

 ================== find free stmt ================== 
dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_2060600588 dot graph subgraph  test22 (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_359074190 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1320474845 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1101004948 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_553393894 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_915310812 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_598918897 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: free in this location

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: free in this location
  492 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: free in this location
  491 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: free in this location
  490 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: free in this location
  489 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: free in this location
  488 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: free in this location
  488 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: free in this location
  489 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: free in this location
  490 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: free in this location
  491 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: free in this location
  492 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: free in this location
  493 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:6 [0m
[40;31m  	free count:18 [0m
[40;31m  	possible double free [Looserules]:6 [0m
[40;31m  	possible double free [rigorous]:18 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:18 [0m

======================================================================

======================================================================
[40;42m =======pre add _ fucntion:free========= [0m
[40;42m =======pre_check_funciton:boo========= [0m
[40;42m =======start_check_funciton:boo========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f20e998b510
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c300 b>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984690>
 <ssa_name 0x7f20e998b510
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c300 b>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984690>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e998b510
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c300 b>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984690>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
dot graph entry boo
dot graph target entry end

test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^
dot graph target loc start test22 (b_2(D));
test.c:475:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: test22 (b_2(D));
test.c:475:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
dot graph target loc end

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph stmt start test22 (b_2(D));
test22 (b_2(D));
dot graph stmt end

dot graph stmt start test22 (b_2(D));
test.c:475:9: warning: use location
dot graph stmt end

this stmt call this function :test22
trace fucntion name:test22 
[40;44m =======trace_function_path test22  function_call count: 2 level :0========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph start relate form ID : 1089270574
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 511042019 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 511042019 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph start relate form ID : 1089270574
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 826557260 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 826557260 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph start relate form ID : 1089270574
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 554193952 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 554193952 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph start relate form ID : 1089270574
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 706113141 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 706113141 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph start relate form ID : 1089270574
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 364996629 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 364996629 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph start relate form ID : 1089270574
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 383426471 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 383426471 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e998b510
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c300 b>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984690>
[40;36m ======= node_fun:test22========= [0m
[40;36m ======= find relate stmt with b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :1========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph start relate form ID : 1656413000
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 2102894835 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 2102894835 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph start relate form ID : 1656413000
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1477671268 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1477671268 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph start relate form ID : 1656413000
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 89169577 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 89169577 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph start relate form ID : 1656413000
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1828665122 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1828665122 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph start relate form ID : 1656413000
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1410689275 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1410689275 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph start relate form ID : 1656413000
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 410113972 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 410113972 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e998b510
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c300 b>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984690>
[40;36m ======= node_fun:test22========= [0m
[40;36m ======= find relate stmt with b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test22========= [0m
[40;41m =======recursive_fun2:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:12 
dot graph entry boo
dot graph target entry end

free (b_2(D));
test.c:474:9: warning: use location
  474 |         free(b);
      |         ^
dot graph target loc start test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (b_2(D));
test.c:474:9: warning: use location
  474 |         free(b);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^
dot graph target loc end

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph stmt start free (b_2(D));
test22 (b_2(D));
dot graph stmt end

dot graph stmt start free (b_2(D));
test.c:474:9: warning: use location
  474 |         free(b);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (b_2(D));
test.c:474:9: warning: use location
[40;32m    HAS FREE STMT count:13 name:free [0m

 ================== find free stmt ================== 
dot graph entry boo
dot graph target entry end

free (b_2(D));
test.c:473:9: warning: use location
  473 |         free(b);
      |         ^
dot graph target loc start test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (b_2(D));
test.c:473:9: warning: use location
  473 |         free(b);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^
dot graph target loc end

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph stmt start free (b_2(D));
test22 (b_2(D));
dot graph stmt end

dot graph stmt start free (b_2(D));
test.c:473:9: warning: use location
  473 |         free(b);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (b_2(D));
test.c:473:9: warning: use location
[40;32m    HAS FREE STMT count:14 name:free [0m

 ================== find free stmt ================== 
dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_675257038 dot graph subgraph  test22 (b_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1488509356 dot graph subgraph  free (b_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_269448771 dot graph subgraph  free (b_2(D));
GIMPLE_NOP
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
test.c:473:9: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
test.c:474:9: warning: use location
  474 |         free(b);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
test.c:474:9: warning: free in this location

===== possiable asias =====
# .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
test.c:473:9: warning: free in this location
  473 |         free(b);
      |         ^

===== possiable asias =====
# .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
test.c:473:9: warning: free in this location
  473 |         free(b);
      |         ^

===== possiable asias =====
# .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
test.c:474:9: warning: free in this location
  474 |         free(b);
      |         ^

===== possiable asias =====
# .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:14 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:14 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:14 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <array_ref 0x7f20e9e73188
    type <integer_type 0x7f20e996d888 char readonly QI
        size <integer_cst 0x7f20e9e69ca8 constant 8>
        unit-size <integer_cst 0x7f20e9e69cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e3f0 precision:8 min <integer_cst 0x7f20e9964768 -128> max <integer_cst 0x7f20e9964750 127>
        pointer_to_this <pointer_type 0x7f20e996d930>>
   
    arg:0 <string_cst 0x7f20e998d160
        type <array_type 0x7f20e9977e70 type <integer_type 0x7f20e996d888 char>
            BLK
            size <integer_cst 0x7f20e99647b0 constant 48>
            unit-size <integer_cst 0x7f20e9964870 constant 6>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f20e9977dc8>>
        readonly constant static "asdda\000">
    arg:1 <integer_cst 0x7f20e9e69f48 type <integer_type 0x7f20e9e7e5e8 int> constant 0>>
 <array_ref 0x7f20e9e73188
    type <integer_type 0x7f20e996d888 char readonly QI
        size <integer_cst 0x7f20e9e69ca8 constant 8>
        unit-size <integer_cst 0x7f20e9e69cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e3f0 precision:8 min <integer_cst 0x7f20e9964768 -128> max <integer_cst 0x7f20e9964750 127>
        pointer_to_this <pointer_type 0x7f20e996d930>>
   
    arg:0 <string_cst 0x7f20e998d160
        type <array_type 0x7f20e9977e70 type <integer_type 0x7f20e996d888 char>
            BLK
            size <integer_cst 0x7f20e99647b0 constant 48>
            unit-size <integer_cst 0x7f20e9964870 constant 6>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f20e9977dc8>>
        readonly constant static "asdda\000">
    arg:1 <integer_cst 0x7f20e9e69f48 type <integer_type 0x7f20e9e7e5e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f20e9e73188
    type <integer_type 0x7f20e996d888 char readonly QI
        size <integer_cst 0x7f20e9e69ca8 constant 8>
        unit-size <integer_cst 0x7f20e9e69cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e3f0 precision:8 min <integer_cst 0x7f20e9964768 -128> max <integer_cst 0x7f20e9964750 127>
        pointer_to_this <pointer_type 0x7f20e996d930>>
   
    arg:0 <string_cst 0x7f20e998d160
        type <array_type 0x7f20e9977e70 type <integer_type 0x7f20e996d888 char>
            BLK
            size <integer_cst 0x7f20e99647b0 constant 48>
            unit-size <integer_cst 0x7f20e9964870 constant 6>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f20e9977dc8>>
        readonly constant static "asdda\000">
    arg:1 <integer_cst 0x7f20e9e69f48 type <integer_type 0x7f20e9e7e5e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6>
__builtin_puts (&"asdda"[0]);
dot graph entry boo
dot graph target entry end

__builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
  476 |         printf("asdda\n");
      |         ^
dot graph target loc start __builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: __builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_7 = VDEF <.MEM_6>
__builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target loc end

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph stmt start __builtin_puts (&"asdda"[0]);
__builtin_puts (&"asdda"[0]);
dot graph stmt end

dot graph stmt start __builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph stmt end

this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6>
__builtin_puts (&"asdda"[0]);
dot graph entry boo
dot graph target entry end

__builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target loc start __builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: __builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_7 = VDEF <.MEM_6>
__builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target loc end

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph stmt start __builtin_puts (&"asdda"[0]);
__builtin_puts (&"asdda"[0]);
dot graph stmt end

dot graph stmt start __builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph stmt end

this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1223065418 dot graph subgraph  __builtin_puts (&"asdda"[0]);
dot graph subgrapend

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1089898706 dot graph subgraph  __builtin_puts (&"asdda"[0]);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;44m =======print_function_path child2  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;42m =======pre add _ fucntion:child3========= [0m
[40;44m =======print_function_path child3  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;42m =======pre_check_funciton:child3========= [0m
[40;42m =======start_check_funciton:child3========= [0m
[40;42m =======pre_check_funciton:child2========= [0m
[40;42m =======start_check_funciton:child2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f20e998b828
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _6 = data;
    version:6
    ptr-info 0x7f20e99846c0>
 <ssa_name 0x7f20e998b828
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _6 = data;
    version:6
    ptr-info 0x7f20e99846c0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e998b828
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _6 = data;
    version:6
    ptr-info 0x7f20e99846c0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_11 = VDEF <.MEM_10>
child3 (_6);
dot graph entry child2
dot graph target entry end

child3 (_6);
In function ‘child2’:
test.c:457:9: warning: use location
  457 |         child3(data);
      |         ^
dot graph target loc start child3 (_6);
test.c:457:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: child3 (_6);
test.c:457:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_11 = VDEF <.MEM_10>
child3 (_6);
test.c:457:9: warning: use location
dot graph target loc end

dot graph target basicblock start from child2 basic block 2dot graph target basicblock en1

dot graph stmt start child3 (_6);
child3 (_6);
dot graph stmt end

dot graph stmt start child3 (_6);
test.c:457:9: warning: use location
dot graph stmt end

this stmt call this function :child3
trace fucntion name:child3 
[40;44m =======trace_function_path child3  function_call count: 1 level :0========  [0m
# .MEM_5 = VDEF <.MEM_4(D)>
free (data_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4(D)>
free (data_3(D));
test.c:431:9: warning: use location
  431 |         free(data);
      |         ^
dot graph start relate form ID : 148606654
from child3 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1794518763 stmt(free) :free (data_3(D));
test.c:431:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1794518763 stmt(free) :free (data_3(D));
test.c:431:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e998b828
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _6 = data;
    version:6
    ptr-info 0x7f20e99846c0>
[40;36m ======= node_fun:child3========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_11 = VDEF <.MEM_10>
child3 (_6);
dot graph entry child2
dot graph target entry end

child3 (_6);
test.c:457:9: warning: use location
  457 |         child3(data);
      |         ^
dot graph target loc start child3 (_6);
test.c:457:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: child3 (_6);
test.c:457:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_11 = VDEF <.MEM_10>
child3 (_6);
test.c:457:9: warning: use location
dot graph target loc end

dot graph target basicblock start from child2 basic block 2dot graph target basicblock en1

dot graph stmt start child3 (_6);
child3 (_6);
dot graph stmt end

dot graph stmt start child3 (_6);
test.c:457:9: warning: use location
dot graph stmt end

this stmt call this function :child3
trace fucntion name:child3 
[40;44m =======trace_function_path child3  function_call count: 1 level :0========  [0m
# .MEM_5 = VDEF <.MEM_4(D)>
free (data_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4(D)>
free (data_3(D));
test.c:431:9: warning: use location
  431 |         free(data);
      |         ^
dot graph start relate form ID : 1609785089
from child3 basic block 2dot graph end relate end

dot graph relate stmt start ID : 411231731 stmt(free) :free (data_3(D));
test.c:431:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 411231731 stmt(free) :free (data_3(D));
test.c:431:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e998b828
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _6 = data;
    version:6
    ptr-info 0x7f20e99846c0>
[40;36m ======= node_fun:child3========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
dot graph target basicblock start from child2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_830642910 dot graph subgraph  child3 (_6);
_6 = data;
dot graph subgrapend

dot graph target basicblock start from child2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1522902029 dot graph subgraph  child3 (_6);
_6 = data;
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_12 = VDEF <.MEM_11>
free (_7);
test.c:458:9: warning: use location
  458 |         free(data);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;44m =======print_function_path child3  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;42m =======pre_check_funciton:child3========= [0m
[40;42m =======start_check_funciton:child3========= [0m
[40;44m =======print_function_path child  function_call count: 9 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:pthread_exit========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_unlock========= [0m
[40;42m =======pre add _ fucntion:boo========= [0m
[40;44m =======print_function_path boo  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;44m =======print_function_path test22  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;42m =======pre_check_funciton:test22========= [0m
[40;42m =======start_check_funciton:test22========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>
 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
dot graph entry test22
dot graph target entry end

test22 (k_2(D));
In function ‘child’:
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: test22 (k_2(D));
test.c:496:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start test22 (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start test22 (k_2(D));
test.c:496:9: warning: use location
dot graph stmt end

this stmt call this function :test22
trace fucntion name:test22 
[40;44m =======trace_function_path test22  function_call count: 2 level :0========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph start relate form ID : 770305921
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 3634107 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 3634107 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph start relate form ID : 770305921
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 476423329 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 476423329 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph start relate form ID : 770305921
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1323699815 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1323699815 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph start relate form ID : 770305921
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 918944920 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 918944920 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph start relate form ID : 770305921
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1075342227 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1075342227 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph start relate form ID : 770305921
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 265486741 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 265486741 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>
[40;36m ======= node_fun:test22========= [0m
[40;36m ======= find relate stmt with k ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :1========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph start relate form ID : 1429986939
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1901899487 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1901899487 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph start relate form ID : 1429986939
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 819680694 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 819680694 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph start relate form ID : 1429986939
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 2136100081 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 2136100081 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph start relate form ID : 1429986939
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 119412469 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 119412469 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph start relate form ID : 1429986939
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1203107165 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1203107165 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph start relate form ID : 1429986939
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1645029433 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1645029433 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e998b288
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c280 k>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984678>
[40;36m ======= node_fun:test22========= [0m
[40;36m ======= find relate stmt with k ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test22========= [0m
[40;41m =======recursive_fun2:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:12 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:493:9: warning: use location
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:493:9: warning: use location
[40;32m    HAS FREE STMT count:13 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:492:9: warning: use location
[40;32m    HAS FREE STMT count:14 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:491:9: warning: use location
[40;32m    HAS FREE STMT count:15 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:490:9: warning: use location
[40;32m    HAS FREE STMT count:16 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:489:9: warning: use location
[40;32m    HAS FREE STMT count:17 name:free [0m

 ================== find free stmt ================== 
dot graph entry test22
dot graph target entry end

free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph target loc start test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph stmt start free (k_2(D));
test22 (k_2(D));
dot graph stmt end

dot graph stmt start free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (k_2(D));
test.c:488:9: warning: use location
[40;32m    HAS FREE STMT count:18 name:free [0m

 ================== find free stmt ================== 
dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_74823656 dot graph subgraph  test22 (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_533294785 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1734199010 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1903488778 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1943984060 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_2144312983 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_431262169 dot graph subgraph  free (k_2(D));
GIMPLE_NOP
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: free in this location

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: free in this location
  492 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: free in this location
  491 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: free in this location
  490 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: free in this location
  489 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: free in this location
  488 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: free in this location
  488 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: free in this location
  489 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: free in this location
  490 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: free in this location
  491 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: free in this location
  492 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: free in this location
  493 |         free(k);
      |         ^

===== possiable asias =====
# .MEM_10 = VDEF <.MEM_9>
test22 (k_2(D));
test.c:496:9: warning: use location
  496 |         test22(k);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:6 [0m
[40;31m  	free count:18 [0m
[40;31m  	possible double free [Looserules]:6 [0m
[40;31m  	possible double free [rigorous]:18 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:18 [0m

======================================================================

======================================================================
[40;42m =======pre add _ fucntion:free========= [0m
[40;42m =======pre_check_funciton:boo========= [0m
[40;42m =======start_check_funciton:boo========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f20e998b510
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c300 b>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984690>
 <ssa_name 0x7f20e998b510
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c300 b>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984690>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e998b510
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c300 b>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984690>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
dot graph entry boo
dot graph target entry end

test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^
dot graph target loc start test22 (b_2(D));
test.c:475:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: test22 (b_2(D));
test.c:475:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
dot graph target loc end

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph stmt start test22 (b_2(D));
test22 (b_2(D));
dot graph stmt end

dot graph stmt start test22 (b_2(D));
test.c:475:9: warning: use location
dot graph stmt end

this stmt call this function :test22
trace fucntion name:test22 
[40;44m =======trace_function_path test22  function_call count: 2 level :0========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph start relate form ID : 1285009769
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 266278106 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 266278106 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph start relate form ID : 1285009769
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1654327587 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1654327587 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph start relate form ID : 1285009769
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 227424827 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 227424827 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph start relate form ID : 1285009769
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 414884760 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 414884760 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph start relate form ID : 1285009769
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1301362703 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1301362703 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph start relate form ID : 1285009769
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1837209916 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1837209916 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e998b510
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c300 b>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984690>
[40;36m ======= node_fun:test22========= [0m
[40;36m ======= find relate stmt with b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :1========  [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (k_2(D));
test.c:488:9: warning: use location
  488 |         free(k);
      |         ^
dot graph start relate form ID : 826116491
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 2132005613 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 2132005613 stmt(free) :free (k_2(D));
test.c:488:9: warning: use location
dot graph relate end

# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (k_2(D));
test.c:489:9: warning: use location
  489 |         free(k);
      |         ^
dot graph start relate form ID : 826116491
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1212628297 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1212628297 stmt(free) :free (k_2(D));
test.c:489:9: warning: use location
dot graph relate end

# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (k_2(D));
test.c:490:9: warning: use location
  490 |         free(k);
      |         ^
dot graph start relate form ID : 826116491
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1596422412 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1596422412 stmt(free) :free (k_2(D));
test.c:490:9: warning: use location
dot graph relate end

# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_7 = VDEF <.MEM_6>
free (k_2(D));
test.c:491:9: warning: use location
  491 |         free(k);
      |         ^
dot graph start relate form ID : 826116491
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 2135639721 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 2135639721 stmt(free) :free (k_2(D));
test.c:491:9: warning: use location
dot graph relate end

# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7>
free (k_2(D));
test.c:492:9: warning: use location
  492 |         free(k);
      |         ^
dot graph start relate form ID : 826116491
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1689051626 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1689051626 stmt(free) :free (k_2(D));
test.c:492:9: warning: use location
dot graph relate end

# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (k_2(D));
test.c:493:9: warning: use location
  493 |         free(k);
      |         ^
dot graph start relate form ID : 826116491
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 772638580 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 772638580 stmt(free) :free (k_2(D));
test.c:493:9: warning: use location
dot graph relate end

 <ssa_name 0x7f20e998b510
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <parm_decl 0x7f20e997c300 b>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f20e9984690>
[40;36m ======= node_fun:test22========= [0m
[40;36m ======= find relate stmt with b ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:test22========= [0m
[40;41m =======recursive_fun2:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:12 
dot graph entry boo
dot graph target entry end

free (b_2(D));
test.c:474:9: warning: use location
  474 |         free(b);
      |         ^
dot graph target loc start test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (b_2(D));
test.c:474:9: warning: use location
  474 |         free(b);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^
dot graph target loc end

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph stmt start free (b_2(D));
test22 (b_2(D));
dot graph stmt end

dot graph stmt start free (b_2(D));
test.c:474:9: warning: use location
  474 |         free(b);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (b_2(D));
test.c:474:9: warning: use location
[40;32m    HAS FREE STMT count:13 name:free [0m

 ================== find free stmt ================== 
dot graph entry boo
dot graph target entry end

free (b_2(D));
test.c:473:9: warning: use location
  473 |         free(b);
      |         ^
dot graph target loc start test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (b_2(D));
test.c:473:9: warning: use location
  473 |         free(b);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^
dot graph target loc end

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph stmt start free (b_2(D));
test22 (b_2(D));
dot graph stmt end

dot graph stmt start free (b_2(D));
test.c:473:9: warning: use location
  473 |         free(b);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (b_2(D));
test.c:473:9: warning: use location
[40;32m    HAS FREE STMT count:14 name:free [0m

 ================== find free stmt ================== 
dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_907100993 dot graph subgraph  test22 (b_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_616910205 dot graph subgraph  free (b_2(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1038125321 dot graph subgraph  free (b_2(D));
GIMPLE_NOP
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
test.c:473:9: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
test.c:474:9: warning: use location
  474 |         free(b);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
test.c:474:9: warning: free in this location

===== possiable asias =====
# .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
test.c:473:9: warning: free in this location
  473 |         free(b);
      |         ^

===== possiable asias =====
# .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_4 = VDEF <.MEM_3(D)>
free (b_2(D));
test.c:473:9: warning: free in this location
  473 |         free(b);
      |         ^

===== possiable asias =====
# .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_5 = VDEF <.MEM_4>
free (b_2(D));
test.c:474:9: warning: free in this location
  474 |         free(b);
      |         ^

===== possiable asias =====
# .MEM_6 = VDEF <.MEM_5>
test22 (b_2(D));
test.c:475:9: warning: use location
  475 |         test22(b);
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:14 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:14 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:14 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <array_ref 0x7f20e9e73188
    type <integer_type 0x7f20e996d888 char readonly QI
        size <integer_cst 0x7f20e9e69ca8 constant 8>
        unit-size <integer_cst 0x7f20e9e69cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e3f0 precision:8 min <integer_cst 0x7f20e9964768 -128> max <integer_cst 0x7f20e9964750 127>
        pointer_to_this <pointer_type 0x7f20e996d930>>
   
    arg:0 <string_cst 0x7f20e998d160
        type <array_type 0x7f20e9977e70 type <integer_type 0x7f20e996d888 char>
            BLK
            size <integer_cst 0x7f20e99647b0 constant 48>
            unit-size <integer_cst 0x7f20e9964870 constant 6>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f20e9977dc8>>
        readonly constant static "asdda\000">
    arg:1 <integer_cst 0x7f20e9e69f48 type <integer_type 0x7f20e9e7e5e8 int> constant 0>>
 <array_ref 0x7f20e9e73188
    type <integer_type 0x7f20e996d888 char readonly QI
        size <integer_cst 0x7f20e9e69ca8 constant 8>
        unit-size <integer_cst 0x7f20e9e69cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e3f0 precision:8 min <integer_cst 0x7f20e9964768 -128> max <integer_cst 0x7f20e9964750 127>
        pointer_to_this <pointer_type 0x7f20e996d930>>
   
    arg:0 <string_cst 0x7f20e998d160
        type <array_type 0x7f20e9977e70 type <integer_type 0x7f20e996d888 char>
            BLK
            size <integer_cst 0x7f20e99647b0 constant 48>
            unit-size <integer_cst 0x7f20e9964870 constant 6>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f20e9977dc8>>
        readonly constant static "asdda\000">
    arg:1 <integer_cst 0x7f20e9e69f48 type <integer_type 0x7f20e9e7e5e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f20e9e73188
    type <integer_type 0x7f20e996d888 char readonly QI
        size <integer_cst 0x7f20e9e69ca8 constant 8>
        unit-size <integer_cst 0x7f20e9e69cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e3f0 precision:8 min <integer_cst 0x7f20e9964768 -128> max <integer_cst 0x7f20e9964750 127>
        pointer_to_this <pointer_type 0x7f20e996d930>>
   
    arg:0 <string_cst 0x7f20e998d160
        type <array_type 0x7f20e9977e70 type <integer_type 0x7f20e996d888 char>
            BLK
            size <integer_cst 0x7f20e99647b0 constant 48>
            unit-size <integer_cst 0x7f20e9964870 constant 6>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f20e9977dc8>>
        readonly constant static "asdda\000">
    arg:1 <integer_cst 0x7f20e9e69f48 type <integer_type 0x7f20e9e7e5e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6>
__builtin_puts (&"asdda"[0]);
dot graph entry boo
dot graph target entry end

__builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
  476 |         printf("asdda\n");
      |         ^
dot graph target loc start __builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: __builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_7 = VDEF <.MEM_6>
__builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target loc end

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph stmt start __builtin_puts (&"asdda"[0]);
__builtin_puts (&"asdda"[0]);
dot graph stmt end

dot graph stmt start __builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph stmt end

this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6>
__builtin_puts (&"asdda"[0]);
dot graph entry boo
dot graph target entry end

__builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target loc start __builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: __builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_7 = VDEF <.MEM_6>
__builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph target loc end

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph stmt start __builtin_puts (&"asdda"[0]);
__builtin_puts (&"asdda"[0]);
dot graph stmt end

dot graph stmt start __builtin_puts (&"asdda"[0]);
test.c:476:9: warning: use location
dot graph stmt end

this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_189604284 dot graph subgraph  __builtin_puts (&"asdda"[0]);
dot graph subgrapend

dot graph target basicblock start from boo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_371326045 dot graph subgraph  __builtin_puts (&"asdda"[0]);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;42m =======pre add _ fucntion:foo========= [0m
[40;44m =======print_function_path foo  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:foo2========= [0m
[40;44m =======print_function_path foo2  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;44m =======print_function_path foo3  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;42m =======pre_check_funciton:foo3========= [0m
[40;42m =======start_check_funciton:foo3========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;42m =======pre_check_funciton:foo2========= [0m
[40;42m =======start_check_funciton:foo2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f20e9994798
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993510 a2>
    def_stmt a2_12 = malloc (_1);
    version:12
    ptr-info 0x7f20e9984810>
 <ssa_name 0x7f20e9994798
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993510 a2>
    def_stmt a2_12 = malloc (_1);
    version:12
    ptr-info 0x7f20e9984810>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
dot graph entry foo2
dot graph target entry end

*a2_12 = 10;
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph target loc start a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 2: *a2_12 = 10;
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph target line desend

dot graph target loc start # .MEM_28 = VDEF <.MEM_27(D)>
a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start *a2_12 = 10;
a2_12 = malloc (_1);
dot graph stmt end

dot graph stmt start *a2_12 = 10;
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

*a2_12 = 10;
test.c:298:15: warning: use location
dot graph target loc start a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 2: *a2_12 = 10;
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph target line desend

dot graph target loc start # .MEM_28 = VDEF <.MEM_27(D)>
a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start *a2_12 = 10;
a2_12 = malloc (_1);
dot graph stmt end

dot graph stmt start *a2_12 = 10;
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph stmt end

# .MEM_28 = VDEF <.MEM_27(D)>
a2_12 = malloc (_1);
dot graph entry foo2
dot graph target entry end

a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc start a2_12 = malloc (_1);
test.c:293:19: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: a2_12 = malloc (_1);
test.c:293:19: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_28 = VDEF <.MEM_27(D)>
a2_12 = malloc (_1);
test.c:293:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start a2_12 = malloc (_1);
a2_12 = malloc (_1);
dot graph stmt end

dot graph stmt start a2_12 = malloc (_1);
test.c:293:19: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1857806015 dot graph subgraph  *a2_12 = 10;
a2_12 = malloc (_1);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_178220717 dot graph subgraph  *a2_12 = 10;
a2_12 = malloc (_1);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_490738514 dot graph subgraph  a2_12 = malloc (_1);
a2_12 = malloc (_1);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e99947e0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993480 p3>
    def_stmt p3_14 = malloc (_2);
    version:14
    ptr-info 0x7f20e9984828>
 <ssa_name 0x7f20e99947e0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993480 p3>
    def_stmt p3_14 = malloc (_2);
    version:14
    ptr-info 0x7f20e9984828>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    fucntion exit  [0m
_7 = PHI <p3_14(3), p4_16(4)>
In function ‘foo2’:
lto1: warning: use location
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 5 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

_7 = PHI <p3_14(3), p4_16(4)>
In function ‘child’:
lto1: warning: use location
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 5: _7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 5dot graph target basicblock en1

dot graph stmt start _7 = PHI <p3_14(3), p4_16(4)>
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start _7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---exit-----

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
In function ‘foo2’:
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 3 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

free (p3_14);
In function ‘child’:
test.c:309:17: warning: use location
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 3: free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 3dot graph target basicblock en1

dot graph stmt start free (p3_14);
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (p3_14);
test.c:309:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_41 = VDEF <.MEM_38>
*p3_14 = 10;
In function ‘foo2’:
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 3 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

*p3_14 = 10;
In function ‘child’:
test.c:308:23: warning: use location
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 3: *p3_14 = 10;
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 3dot graph target basicblock en1

dot graph stmt start *p3_14 = 10;
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start *p3_14 = 10;
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
dot graph stmt end


======================================================================
[40;31m    fucntion exit  [0m
# .MEM_41 = VDEF <.MEM_38>
*p3_14 = 10;
In function ‘foo2’:
test.c:308:23: warning: use location
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 3 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

*p3_14 = 10;
In function ‘child’:
test.c:308:23: warning: use location
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 3: *p3_14 = 10;
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 3dot graph target basicblock en1

dot graph stmt start *p3_14 = 10;
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start *p3_14 = 10;
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

foo3 (p3_14);
test.c:304:9: warning: use location
  304 |         foo3(p3);
      |         ^
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 2: foo3 (p3_14);
test.c:304:9: warning: use location
  304 |         foo3(p3);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start foo3 (p3_14);
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start foo3 (p3_14);
test.c:304:9: warning: use location
  304 |         foo3(p3);
      |         ^
dot graph stmt end

this stmt call this function :foo3
trace fucntion name:foo3 
[40;44m =======trace_function_path foo3  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f20e99947e0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993480 p3>
    def_stmt p3_14 = malloc (_2);
    version:14
    ptr-info 0x7f20e9984828>
[40;36m ======= node_fun:foo3========= [0m
[40;36m ======= find relate stmt with p3 ========= [0m
dot graph arrowdot graph start relate for1ID : 913429532
from foo3 basic block 2dot graph end relate end

_1 = malloc (1);
dot graph relate stmt start ID : 1823250151 stmt(call) :In function ‘foo3’:
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
dot graph entry foo2
dot graph target entry end

p3_14 = malloc (_2);
In function ‘child’:
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start p3_14 = malloc (_2);
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from foo2 basic block 5dot graph target basicblock en1

dot graph arrowsubgraph cluster_565562170 dot graph subgraph  _7 = PHI <p3_14(3), p4_16(4)>
p3_14 = malloc (_2);
dot graph subgrapend

dot graph start relate for1ID : 1004638873
from foo3 basic block 2dot graph end relate end

subgraph cluster_1446724318 dot graph subgraph  start ID : 1201572709 stmt(relate) ， Tree ID : 1004638873 : _1 = malloc (1);
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
dot graph subgrapend

dot graph start relate for1ID : 913429532
from foo3 basic block 2dot graph end relate end

subgraph cluster_1409965513 dot graph subgraph  start ID : 1823250151 stmt(relate) ， Tree ID : 913429532 : _1 = malloc (1);
test.c:288:14: warning: use location
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: free in this location

===== possiable asias =====
_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: free in this location

===== possiable asias =====
_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e9994828
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e99933f0 p4>
    def_stmt p4_16 = malloc (_3);
    version:16
    ptr-info 0x7f20e9984840>
 <ssa_name 0x7f20e9994828
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e99933f0 p4>
    def_stmt p4_16 = malloc (_3);
    version:16
    ptr-info 0x7f20e9984840>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    fucntion exit  [0m
_7 = PHI <p3_14(3), p4_16(4)>
In function ‘foo2’:
lto1: warning: use location
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 5 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

_7 = PHI <p3_14(3), p4_16(4)>
In function ‘child’:
lto1: warning: use location
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 5: _7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 5dot graph target basicblock en1

dot graph stmt start _7 = PHI <p3_14(3), p4_16(4)>
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start _7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---exit-----

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
In function ‘foo2’:
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
[40;31m    branch possiable have return in bb:4 [0m
gimple stmt in succ := 4 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

free (p4_16);
In function ‘child’:
test.c:315:17: warning: use location
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 4: free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 4dot graph target basicblock en1

dot graph stmt start free (p4_16);
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (p4_16);
test.c:315:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_39 = VDEF <.MEM_38>
*p4_16 = 10;
In function ‘foo2’:
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
[40;31m    branch possiable have return in bb:4 [0m
gimple stmt in succ := 4 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

*p4_16 = 10;
In function ‘child’:
test.c:314:23: warning: use location
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 4: *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 4dot graph target basicblock en1

dot graph stmt start *p4_16 = 10;
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph stmt end


======================================================================
[40;31m    fucntion exit  [0m
# .MEM_39 = VDEF <.MEM_38>
*p4_16 = 10;
In function ‘foo2’:
test.c:314:23: warning: use location
[40;31m    branch possiable have return in bb:4 [0m
gimple stmt in succ := 4 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

*p4_16 = 10;
In function ‘child’:
test.c:314:23: warning: use location
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 4: *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 4dot graph target basicblock en1

dot graph stmt start *p4_16 = 10;
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph stmt end

# .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
dot graph entry foo2
dot graph target entry end

p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start p4_16 = malloc (_3);
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from foo2 basic block 5dot graph target basicblock en1

dot graph arrowsubgraph cluster_321567300 dot graph subgraph  _7 = PHI <p3_14(3), p4_16(4)>
p4_16 = malloc (_3);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: free in this location

===== possiable asias =====
_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: free in this location

===== possiable asias =====
_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e9994678
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _5 = malloc (_4);
    version:5
    ptr-info 0x7f20e99847c8>
 <ssa_name 0x7f20e9994678
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _5 = malloc (_4);
    version:5
    ptr-info 0x7f20e99847c8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
dot graph entry foo2
dot graph target entry end

p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc en1

dot graph target line desc form basic block 2: p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start p99 = _5;
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

p99 = _5;
test.c:296:13: warning: use location
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc en1

dot graph target line desc form basic block 2: p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start p99 = _5;
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

_6 = p99;
test.c:299:12: warning: use location
  299 |         p99[0] = 10;
      |            ^
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc en1

dot graph target line desc form basic block 2: _6 = p99;
test.c:299:12: warning: use location
  299 |         p99[0] = 10;
      |            ^
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start _6 = p99;
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start _6 = p99;
test.c:299:12: warning: use location
  299 |         p99[0] = 10;
      |            ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

*_6 = 10;
test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc en1

dot graph target line desc form basic block 2: *_6 = 10;
test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start *_6 = 10;
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start *_6 = 10;
test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
dot graph stmt end

# .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
dot graph entry foo2
dot graph target entry end

_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _5 = malloc (_4);
test.c:296:15: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start _5 = malloc (_4);
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start _5 = malloc (_4);
test.c:296:15: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1243224730 dot graph subgraph  p99 = _5;
_5 = malloc (_4);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1406794848 dot graph subgraph  p99 = _5;
_5 = malloc (_4);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_752829469 dot graph subgraph  _6 = p99;
_5 = malloc (_4);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_380750851 dot graph subgraph  *_6 = 10;
_6 = p99;
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1673072954 dot graph subgraph  _5 = malloc (_4);
_5 = malloc (_4);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7f20ea713c60 mLock2
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:246:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f20ea713c60 mLock2
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:246:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35>
pthread_mutex_lock (&mLock2);
dot graph entry foo2
dot graph target entry end

pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
dot graph target loc start pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_36 = VDEF <.MEM_35>
pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock2);
pthread_mutex_lock (&mLock2);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35>
pthread_mutex_lock (&mLock2);
dot graph entry foo2
dot graph target entry end

pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc start pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_36 = VDEF <.MEM_35>
pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock2);
pthread_mutex_lock (&mLock2);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_259673409 dot graph subgraph  pthread_mutex_lock (&mLock2);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_608175678 dot graph subgraph  pthread_mutex_lock (&mLock2);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;31m   malloc def-leak warring [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   memory leak and alloc new memory [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:302:9: warning: use location
[40;31m   memory leak and alloc new memory [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^

dot graph START

======================================================================
 <var_decl 0x7f20ea713cf0 mLock3
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:247:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f20ea713cf0 mLock3
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:247:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_37 = VDEF <.MEM_36>
pthread_mutex_lock (&mLock3);
dot graph entry foo2
dot graph target entry end

pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
  303 |         pthread_mutex_lock(&mLock3);
      |         ^
dot graph target loc start pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_37 = VDEF <.MEM_36>
pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock3);
pthread_mutex_lock (&mLock3);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_37 = VDEF <.MEM_36>
pthread_mutex_lock (&mLock3);
dot graph entry foo2
dot graph target entry end

pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc start pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_37 = VDEF <.MEM_36>
pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock3);
pthread_mutex_lock (&mLock3);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_2087957715 dot graph subgraph  pthread_mutex_lock (&mLock3);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1561036112 dot graph subgraph  pthread_mutex_lock (&mLock3);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;31m   malloc def-leak warring [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   memory leak and alloc new memory [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;31m   malloc def-leak warring [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   memory leak and alloc new memory [0m

test.c:303:9: warning: use location
  303 |         pthread_mutex_lock(&mLock3);
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   malloc def-leak warring [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;31m   memory leak and alloc new memory [0m

test.c:303:9: warning: use location
  303 |         pthread_mutex_lock(&mLock3);
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:303:9: warning: use location
[40;31m   memory leak and alloc new memory [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   malloc def-leak warring [0m

test.c:303:9: warning: use location
  303 |         pthread_mutex_lock(&mLock3);
      |         ^
[40;31m   memory leak and alloc new memory [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;42m =======pre_check_funciton:foo========= [0m
[40;42m =======start_check_funciton:foo========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f20e9994360
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993090 p2>
    def_stmt p2_3 = malloc (1);
    version:3
    ptr-info 0x7f20e9984798>
 <ssa_name 0x7f20e9994360
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993090 p2>
    def_stmt p2_3 = malloc (1);
    version:3
    ptr-info 0x7f20e9984798>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
dot graph entry foo
dot graph target entry end

*p2_3 = 1;
test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
dot graph target loc start p2_3 = malloc (1);
test.c:345:19: warning: use location
  345 |         int *p2 = malloc(1);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 2: *p2_3 = 1;
test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
dot graph target line desend

dot graph target loc start # .MEM_9 = VDEF <.MEM_8(D)>
p2_3 = malloc (1);
test.c:345:19: warning: use location
  345 |         int *p2 = malloc(1);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start *p2_3 = 1;
p2_3 = malloc (1);
dot graph stmt end

dot graph stmt start *p2_3 = 1;
test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
dot graph stmt end

dot graph entry foo
dot graph target entry end

*p2_3 = 1;
test.c:346:15: warning: use location
dot graph target loc start p2_3 = malloc (1);
test.c:345:19: warning: use location
  345 |         int *p2 = malloc(1);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 2: *p2_3 = 1;
test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
dot graph target line desend

dot graph target loc start # .MEM_9 = VDEF <.MEM_8(D)>
p2_3 = malloc (1);
test.c:345:19: warning: use location
  345 |         int *p2 = malloc(1);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start *p2_3 = 1;
p2_3 = malloc (1);
dot graph stmt end

dot graph stmt start *p2_3 = 1;
test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
dot graph stmt end

# .MEM_9 = VDEF <.MEM_8(D)>
p2_3 = malloc (1);
dot graph entry foo
dot graph target entry end

p2_3 = malloc (1);
test.c:345:19: warning: use location
  345 |         int *p2 = malloc(1);
      |                   ^
dot graph target loc start p2_3 = malloc (1);
test.c:345:19: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: p2_3 = malloc (1);
test.c:345:19: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_9 = VDEF <.MEM_8(D)>
p2_3 = malloc (1);
test.c:345:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start p2_3 = malloc (1);
p2_3 = malloc (1);
dot graph stmt end

dot graph stmt start p2_3 = malloc (1);
test.c:345:19: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_297901946 dot graph subgraph  *p2_3 = 1;
p2_3 = malloc (1);
dot graph subgrapend

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_766590558 dot graph subgraph  *p2_3 = 1;
p2_3 = malloc (1);
dot graph subgrapend

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1545558077 dot graph subgraph  p2_3 = malloc (1);
p2_3 = malloc (1);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>
 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
dot graph entry foo
dot graph target entry end

_7 = foo2 (z_5(D));
test.c:361:16: warning: use location
  361 |         return foo2(z);
      |                ^
dot graph target loc start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start _7 = foo2 (z_5(D));
_7 = foo2 (z_5(D));
dot graph stmt end

dot graph stmt start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph stmt end

this stmt call this function :foo2
trace fucntion name:foo2 
[40;44m =======trace_function_path foo2  function_call count: 4 level :0========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph start relate form ID : 1510530243
from foo2 basic block 3dot graph end relate end

dot graph relate stmt start ID : 215529323 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 215529323 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph start relate form ID : 1510530243
from foo2 basic block 4dot graph end relate end

dot graph relate stmt start ID : 1533714150 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1533714150 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
# .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
dot graph entry foo
dot graph target entry end

_7 = foo2 (z_5(D));
test.c:361:16: warning: use location
  361 |         return foo2(z);
      |                ^
dot graph target loc start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start _7 = foo2 (z_5(D));
_7 = foo2 (z_5(D));
dot graph stmt end

dot graph stmt start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph stmt end

this stmt call this function :foo2
trace fucntion name:foo2 
[40;44m =======trace_function_path foo2  function_call count: 4 level :0========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph start relate form ID : 988167903
from foo2 basic block 3dot graph end relate end

dot graph relate stmt start ID : 293331495 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 293331495 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph start relate form ID : 988167903
from foo2 basic block 4dot graph end relate end

dot graph relate stmt start ID : 1669008427 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1669008427 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_482935780 dot graph subgraph  _7 = foo2 (z_5(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_2040334472 dot graph subgraph  _7 = foo2 (z_5(D));
GIMPLE_NOP
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>

 ================== pre trace ptable ================== 
trace fucntion name:foo2 
[40;44m =======trace_function_path foo2  function_call count: 4 level :888========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph start relate form ID : 1736615592
from foo2 basic block 3dot graph end relate end

dot graph relate stmt start ID : 661156497 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 661156497 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph start relate form ID : 1736615592
from foo2 basic block 4dot graph end relate end

dot graph relate stmt start ID : 383589338 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 383589338 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
[40;36m ======= node_fun:foo3========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
dot graph arrowdot graph start relate for1ID : 502561476
from foo3 basic block 2dot graph end relate end

_1 = malloc (1);
dot graph relate stmt start ID : 336923000 stmt(call) :In function ‘foo3’:
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
is Other function foo2
 
 Start check Pointer Collect  

======================================================================
# .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
dot graph entry foo
dot graph target entry end

_7 = foo2 (z_5(D));
In function ‘child’:
test.c:361:16: warning: use location
  361 |         return foo2(z);
      |                ^
dot graph target loc start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start _7 = foo2 (z_5(D));
_7 = foo2 (z_5(D));
dot graph stmt end

dot graph stmt start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph stmt end

this stmt call this function :foo2
trace fucntion name:foo2 
[40;44m =======trace_function_path foo2  function_call count: 4 level :0========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph start relate form ID : 949151508
from foo2 basic block 3dot graph end relate end

dot graph relate stmt start ID : 1949285794 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1949285794 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph start relate form ID : 949151508
from foo2 basic block 4dot graph end relate end

dot graph relate stmt start ID : 1746888514 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1746888514 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
[40;36m ======= node_fun:foo2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 949151508
from foo2 basic block 2dot graph end relate end

In function ‘foo2’:
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
*a2_12 = 10;
dot graph relate stmt start ID : 1270718809 stmt(LHS) :test.c:298:15: warning: use location
*a2_12
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 949151508
from foo2 basic block 2dot graph end relate end

test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
*_6 = 10;
dot graph relate stmt start ID : 1045026877 stmt(LHS) :test.c:299:16: warning: use location
*_6
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 949151508
from foo2 basic block 3dot graph end relate end

test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
*p3_14 = 10;
dot graph relate stmt start ID : 1006199714 stmt(LHS) :test.c:308:23: warning: use location
*p3_14
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 949151508
from foo2 basic block 4dot graph end relate end

test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
*p4_16 = 10;
dot graph relate stmt start ID : 2023548278 stmt(LHS) :test.c:314:23: warning: use location
*p4_16
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
[40;36m ======= node_fun:foo3========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
dot graph arrowdot graph start relate for1ID : 1425777728
from foo3 basic block 2dot graph end relate end

_1 = malloc (1);
dot graph relate stmt start ID : 531789021 stmt(call) :In function ‘foo3’:
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
# .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
dot graph entry foo
dot graph target entry end

_7 = foo2 (z_5(D));
In function ‘child’:
test.c:361:16: warning: use location
  361 |         return foo2(z);
      |                ^
dot graph target loc start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start _7 = foo2 (z_5(D));
_7 = foo2 (z_5(D));
dot graph stmt end

dot graph stmt start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph stmt end

this stmt call this function :foo2
trace fucntion name:foo2 
[40;44m =======trace_function_path foo2  function_call count: 4 level :0========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph start relate form ID : 135738039
from foo2 basic block 3dot graph end relate end

dot graph relate stmt start ID : 2033953407 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 2033953407 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph start relate form ID : 135738039
from foo2 basic block 4dot graph end relate end

dot graph relate stmt start ID : 472263088 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 472263088 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
[40;36m ======= node_fun:foo2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 135738039
from foo2 basic block 2dot graph end relate end

In function ‘foo2’:
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
*a2_12 = 10;
dot graph relate stmt start ID : 1696774151 stmt(LHS) :test.c:298:15: warning: use location
*a2_12
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 135738039
from foo2 basic block 2dot graph end relate end

test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
*_6 = 10;
dot graph relate stmt start ID : 184371705 stmt(LHS) :test.c:299:16: warning: use location
*_6
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 135738039
from foo2 basic block 3dot graph end relate end

test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
*p3_14 = 10;
dot graph relate stmt start ID : 1238853646 stmt(LHS) :test.c:308:23: warning: use location
*p3_14
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 135738039
from foo2 basic block 4dot graph end relate end

test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
*p4_16 = 10;
dot graph relate stmt start ID : 1094848581 stmt(LHS) :test.c:314:23: warning: use location
*p4_16
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
[40;36m ======= node_fun:foo3========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
dot graph arrowdot graph start relate for1ID : 1694901949
from foo3 basic block 2dot graph end relate end

_1 = malloc (1);
dot graph relate stmt start ID : 1454382969 stmt(call) :In function ‘foo3’:
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_481079083 dot graph subgraph  _7 = foo2 (z_5(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_599516523 dot graph subgraph  _7 = foo2 (z_5(D));
_7 = foo2 (z_5(D));
dot graph subgrapend

dot graph start relate for1ID : 1793358824
from foo3 basic block 2dot graph end relate end

subgraph cluster_295067224 dot graph subgraph  start ID : 149871159 stmt(relate) ， Tree ID : 1793358824 : _1 = malloc (1);
In function ‘child’:
test.c:288:14: warning: use location
dot graph subgrapend

dot graph start relate for1ID : 2042896817
from foo2 basic block 4dot graph end relate end

subgraph cluster_774410579 dot graph subgraph  start ID : 1867689483 stmt(relate) ， Tree ID : 2042896817 : *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph subgrapend

dot graph start relate for1ID : 2026197905
from foo3 basic block 2dot graph end relate end

subgraph cluster_121041302 dot graph subgraph  start ID : 1968239088 stmt(relate) ， Tree ID : 2026197905 : _1 = malloc (1);
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
dot graph subgrapend

dot graph start relate for1ID : 905307053
from foo2 basic block 4dot graph end relate end

subgraph cluster_173876801 dot graph subgraph  start ID : 610773221 stmt(relate) ， Tree ID : 905307053 : *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph subgrapend

dot graph start relate for1ID : 202900982
from foo3 basic block 2dot graph end relate end

subgraph cluster_1257346359 dot graph subgraph  start ID : 188089812 stmt(relate) ， Tree ID : 202900982 : _1 = malloc (1);
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
dot graph subgrapend

dot graph start relate for1ID : 502561476
from foo3 basic block 2dot graph end relate end

subgraph cluster_13892127 dot graph subgraph  start ID : 336923000 stmt(relate) ， Tree ID : 502561476 : _1 = malloc (1);
test.c:288:14: warning: use location
dot graph subgrapend

dot graph start relate for1ID : 949151508
from foo2 basic block 4dot graph end relate end

subgraph cluster_1910492393 dot graph subgraph  start ID : 2023548278 stmt(relate) ， Tree ID : 949151508 : *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph subgrapend

dot graph start relate for1ID : 1425777728
from foo3 basic block 2dot graph end relate end

subgraph cluster_1918502856 dot graph subgraph  start ID : 531789021 stmt(relate) ， Tree ID : 1425777728 : _1 = malloc (1);
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
dot graph subgrapend

dot graph start relate for1ID : 135738039
from foo2 basic block 4dot graph end relate end

subgraph cluster_397481465 dot graph subgraph  start ID : 1094848581 stmt(relate) ， Tree ID : 135738039 : *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph subgrapend

dot graph start relate for1ID : 1694901949
from foo3 basic block 2dot graph end relate end

subgraph cluster_265570221 dot graph subgraph  start ID : 1454382969 stmt(relate) ， Tree ID : 1694901949 : _1 = malloc (1);
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;42m =======pre_check_funciton:child========= [0m
[40;42m =======start_check_funciton:child========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f20e998bb40
    type <integer_type 0x7f20e9e7e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e738 precision:64 min <integer_cst 0x7f20e9e69e88 0> max <integer_cst 0x7f20e9e6a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f20e9e8a7e0>>
   
    def_stmt _1 = pthread_self ();
    version:1>
 <ssa_name 0x7f20e998bb40
    type <integer_type 0x7f20e9e7e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e738 precision:64 min <integer_cst 0x7f20e9e69e88 0> max <integer_cst 0x7f20e9e6a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f20e9e8a7e0>>
   
    def_stmt _1 = pthread_self ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:pthread_self 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e998bb40
    type <integer_type 0x7f20e9e7e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e738 precision:64 min <integer_cst 0x7f20e9e69e88 0> max <integer_cst 0x7f20e9e6a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f20e9e8a7e0>>
   
    def_stmt _1 = pthread_self ();
    version:1>
is Other function pthread_self
 
 Start check Pointer Collect  

======================================================================
dot graph entry child
dot graph target entry end

pthread_detach (_1);
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
dot graph target loc start _1 = pthread_self ();
test.c:366:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_detach (_1);
test.c:366:9: warning: use location
dot graph target line desend

dot graph target loc start _1 = pthread_self ();
test.c:366:9: warning: use location
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start pthread_detach (_1);
_1 = pthread_self ();
dot graph stmt end

dot graph stmt start pthread_detach (_1);
test.c:366:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_detach
trace fucntion name:pthread_detach 

 ================== trace ================== 
trace fucntion free:0 
_1 = pthread_self ();
dot graph entry child
dot graph target entry end

_1 = pthread_self ();
test.c:366:9: warning: use location
dot graph target loc start _1 = pthread_self ();
test.c:366:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _1 = pthread_self ();
test.c:366:9: warning: use location
dot graph target line desend

dot graph target loc start _1 = pthread_self ();
test.c:366:9: warning: use location
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start _1 = pthread_self ();
_1 = pthread_self ();
dot graph stmt end

dot graph stmt start _1 = pthread_self ();
test.c:366:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_self
trace fucntion name:pthread_self 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_107942209 dot graph subgraph  pthread_detach (_1);
_1 = pthread_self ();
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1346632974 dot graph subgraph  _1 = pthread_self ();
_1 = pthread_self ();
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (_7);
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e998bb40
    type <integer_type 0x7f20e9e7e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e738 precision:64 min <integer_cst 0x7f20e9e69e88 0> max <integer_cst 0x7f20e9e6a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f20e9e8a7e0>>
   
    def_stmt _1 = pthread_self ();
    version:1>
 <ssa_name 0x7f20e998bb40
    type <integer_type 0x7f20e9e7e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e738 precision:64 min <integer_cst 0x7f20e9e69e88 0> max <integer_cst 0x7f20e9e6a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f20e9e8a7e0>>
   
    def_stmt _1 = pthread_self ();
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:pthread_self 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e998bb40
    type <integer_type 0x7f20e9e7e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e738 precision:64 min <integer_cst 0x7f20e9e69e88 0> max <integer_cst 0x7f20e9e6a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f20e9e8a7e0>>
   
    def_stmt _1 = pthread_self ();
    version:1>
is Other function pthread_self
 
 Start check Pointer Collect  

======================================================================
# .MEM_9 = VDEF <.MEM_8(D)>
pthread_detach (_1);
dot graph entry child
dot graph target entry end

pthread_detach (_1);
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
dot graph target loc start pthread_detach (_1);
test.c:366:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_detach (_1);
test.c:366:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_9 = VDEF <.MEM_8(D)>
pthread_detach (_1);
test.c:366:9: warning: use location
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start pthread_detach (_1);
pthread_detach (_1);
dot graph stmt end

dot graph stmt start pthread_detach (_1);
test.c:366:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_detach
trace fucntion name:pthread_detach 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry child
dot graph target entry end

_1 = pthread_self ();
test.c:366:9: warning: use location
dot graph target loc start pthread_detach (_1);
test.c:366:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _1 = pthread_self ();
test.c:366:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_9 = VDEF <.MEM_8(D)>
pthread_detach (_1);
test.c:366:9: warning: use location
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start _1 = pthread_self ();
pthread_detach (_1);
dot graph stmt end

dot graph stmt start _1 = pthread_self ();
test.c:366:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_self
trace fucntion name:pthread_self 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_67372368 dot graph subgraph  pthread_detach (_1);
_1 = pthread_self ();
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1854830723 dot graph subgraph  _1 = pthread_self ();
_1 = pthread_self ();
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (_7);
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7f20ea713bd0 mLock
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:245:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f20ea713bd0 mLock
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:245:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_10 = VDEF <.MEM_9>
pthread_mutex_lock (&mLock);
dot graph entry child
dot graph target entry end

pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
dot graph target loc start pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock);
pthread_mutex_lock (&mLock);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_10 = VDEF <.MEM_9>
pthread_mutex_lock (&mLock);
dot graph entry child
dot graph target entry end

pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
dot graph target loc start pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_10 = VDEF <.MEM_9>
pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock);
pthread_mutex_lock (&mLock);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_469868135 dot graph subgraph  pthread_mutex_lock (&mLock);
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1112399245 dot graph subgraph  pthread_mutex_lock (&mLock);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^

dot graph START

======================================================================
 <var_decl 0x7f20ea713bd0 mLock
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:245:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f20ea713bd0 mLock
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:245:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :pthread_mutex_lock
# .MEM_11 = VDEF <.MEM_10>
pthread_mutex_lock (&mLock);
test.c:390:9: warning: use location
  390 |         pthread_mutex_lock(&mLock);
      |         ^
# .MEM_10 = VDEF <.MEM_9>
pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :pthread_mutex_lock
# .MEM_11 = VDEF <.MEM_10>
pthread_mutex_lock (&mLock);
test.c:390:9: warning: use location
  390 |         pthread_mutex_lock(&mLock);
      |         ^
# .MEM_10 = VDEF <.MEM_9>
pthread_mutex_lock (&mLock);
test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^

dot graph START

======================================================================
 <ssa_name 0x7f20e998bb88
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _2 = malloc (20);
    version:2
    ptr-info 0x7f20e9984708>
 <ssa_name 0x7f20e998bb88
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _2 = malloc (20);
    version:2
    ptr-info 0x7f20e9984708>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
dot graph entry child
dot graph target entry end

pData = _2;
test.c:392:14: warning: use location
  392 |         int *pData = malloc(20);
      |              ^
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: pData = _2;
test.c:392:14: warning: use location
  392 |         int *pData = malloc(20);
      |              ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start pData = _2;
_2 = malloc (20);
dot graph stmt end

dot graph stmt start pData = _2;
test.c:392:14: warning: use location
  392 |         int *pData = malloc(20);
      |              ^
dot graph stmt end

dot graph entry child
dot graph target entry end

pData = _2;
test.c:392:14: warning: use location
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: pData = _2;
test.c:392:14: warning: use location
  392 |         int *pData = malloc(20);
      |              ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start pData = _2;
_2 = malloc (20);
dot graph stmt end

dot graph stmt start pData = _2;
test.c:392:14: warning: use location
  392 |         int *pData = malloc(20);
      |              ^
dot graph stmt end

dot graph entry child
dot graph target entry end

_3 = pData;
test.c:398:16: warning: use location
  398 |         *ppData[0] = 10;
      |                ^
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: _3 = pData;
test.c:398:16: warning: use location
  398 |         *ppData[0] = 10;
      |                ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start _3 = pData;
_2 = malloc (20);
dot graph stmt end

dot graph stmt start _3 = pData;
test.c:398:16: warning: use location
  398 |         *ppData[0] = 10;
      |                ^
dot graph stmt end

dot graph entry child
dot graph target entry end

*_3 = 10;
test.c:398:20: warning: use location
  398 |         *ppData[0] = 10;
      |                    ^
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: *_3 = 10;
test.c:398:20: warning: use location
  398 |         *ppData[0] = 10;
      |                    ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start *_3 = 10;
_2 = malloc (20);
dot graph stmt end

dot graph stmt start *_3 = 10;
test.c:398:20: warning: use location
  398 |         *ppData[0] = 10;
      |                    ^
dot graph stmt end

dot graph entry child
dot graph target entry end

_6 = pData;
test.c:401:10: warning: use location
  401 |         **ppData = 12;
      |          ^
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: _6 = pData;
test.c:401:10: warning: use location
  401 |         **ppData = 12;
      |          ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start _6 = pData;
_2 = malloc (20);
dot graph stmt end

dot graph stmt start _6 = pData;
test.c:401:10: warning: use location
  401 |         **ppData = 12;
      |          ^
dot graph stmt end

dot graph entry child
dot graph target entry end

*_6 = 12;
test.c:401:18: warning: use location
  401 |         **ppData = 12;
      |                  ^
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: *_6 = 12;
test.c:401:18: warning: use location
  401 |         **ppData = 12;
      |                  ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start *_6 = 12;
_2 = malloc (20);
dot graph stmt end

dot graph stmt start *_6 = 12;
test.c:401:18: warning: use location
  401 |         **ppData = 12;
      |                  ^
dot graph stmt end

dot graph entry child
dot graph target entry end

_7 = pData;
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: _7 = pData;
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start _7 = pData;
_2 = malloc (20);
dot graph stmt end

dot graph stmt start _7 = pData;
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^
dot graph stmt end

dot graph entry child
dot graph target entry end

free (_7);
test.c:402:9: warning: use location
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (_7);
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start free (_7);
_2 = malloc (20);
dot graph stmt end

dot graph stmt start free (_7);
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (_7);
test.c:402:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
dot graph entry child
dot graph target entry end

free (_7);
test.c:402:9: warning: use location
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (_7);
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start free (_7);
_2 = malloc (20);
dot graph stmt end

dot graph stmt start free (_7);
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (_7);
test.c:402:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
dot graph entry child
dot graph target entry end

free (&pData);
test.c:405:9: warning: use location
  405 |         free(ppData);
      |         ^
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (&pData);
test.c:405:9: warning: use location
  405 |         free(ppData);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start free (&pData);
_2 = malloc (20);
dot graph stmt end

dot graph stmt start free (&pData);
test.c:405:9: warning: use location
  405 |         free(ppData);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (&pData);
test.c:405:9: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 
dot graph entry child
dot graph target entry end

free (&pData);
test.c:407:9: warning: use location
  407 |         free(ppData);
      |         ^
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (&pData);
test.c:407:9: warning: use location
  407 |         free(ppData);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start free (&pData);
_2 = malloc (20);
dot graph stmt end

dot graph stmt start free (&pData);
test.c:407:9: warning: use location
  407 |         free(ppData);
      |         ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (&pData);
test.c:407:9: warning: use location
[40;32m    HAS FREE STMT count:4 name:free [0m

 ================== find free stmt ================== 
# .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
dot graph entry child
dot graph target entry end

_2 = malloc (20);
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
dot graph target loc start _2 = malloc (20);
test.c:392:22: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _2 = malloc (20);
test.c:392:22: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_12 = VDEF <.MEM_11>
_2 = malloc (20);
test.c:392:22: warning: use location
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph stmt start _2 = malloc (20);
_2 = malloc (20);
dot graph stmt end

dot graph stmt start _2 = malloc (20);
test.c:392:22: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_713546789 dot graph subgraph  pData = _2;
_2 = malloc (20);
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_345932765 dot graph subgraph  pData = _2;
_2 = malloc (20);
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_390693325 dot graph subgraph  _3 = pData;
_2 = malloc (20);
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1245335810 dot graph subgraph  *_3 = 10;
_3 = pData;
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_481670805 dot graph subgraph  _6 = pData;
_2 = malloc (20);
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_277163084 dot graph subgraph  *_6 = 12;
_6 = pData;
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1717598898 dot graph subgraph  _7 = pData;
_2 = malloc (20);
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_30961308 dot graph subgraph  free (_7);
_7 = pData;
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_461534790 dot graph subgraph  free (_7);
_2 = malloc (20);
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_808968897 dot graph subgraph  free (&pData);
_2 = malloc (20);
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1125809889 dot graph subgraph  free (&pData);
_2 = malloc (20);
dot graph subgrapend

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_8953091 dot graph subgraph  _2 = malloc (20);
_2 = malloc (20);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_21 = VDEF <.MEM_20>
free (_7);
test.c:402:9: warning: use location
  402 |         free(pData);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_1
test.c:366:9: warning: use location
  366 |         pthread_detach(pthread_self());
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:389:9: warning: use location
  389 |         pthread_mutex_lock(&mLock);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_2
test.c:392:22: warning: use location
  392 |         int *pData = malloc(20);
      |                      ^
[40;44m =======print_function_path foo  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:foo2========= [0m
[40;44m =======print_function_path foo2  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;44m =======print_function_path foo3  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;42m =======pre_check_funciton:foo3========= [0m
[40;42m =======start_check_funciton:foo3========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;42m =======pre_check_funciton:foo2========= [0m
[40;42m =======start_check_funciton:foo2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f20e9994798
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993510 a2>
    def_stmt a2_12 = malloc (_1);
    version:12
    ptr-info 0x7f20e9984810>
 <ssa_name 0x7f20e9994798
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993510 a2>
    def_stmt a2_12 = malloc (_1);
    version:12
    ptr-info 0x7f20e9984810>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
dot graph entry foo2
dot graph target entry end

*a2_12 = 10;
In function ‘foo’:
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph target loc start a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 2: *a2_12 = 10;
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph target line desend

dot graph target loc start # .MEM_28 = VDEF <.MEM_27(D)>
a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start *a2_12 = 10;
a2_12 = malloc (_1);
dot graph stmt end

dot graph stmt start *a2_12 = 10;
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

*a2_12 = 10;
test.c:298:15: warning: use location
dot graph target loc start a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 2: *a2_12 = 10;
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph target line desend

dot graph target loc start # .MEM_28 = VDEF <.MEM_27(D)>
a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start *a2_12 = 10;
a2_12 = malloc (_1);
dot graph stmt end

dot graph stmt start *a2_12 = 10;
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph stmt end

# .MEM_28 = VDEF <.MEM_27(D)>
a2_12 = malloc (_1);
dot graph entry foo2
dot graph target entry end

a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc start a2_12 = malloc (_1);
test.c:293:19: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: a2_12 = malloc (_1);
test.c:293:19: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_28 = VDEF <.MEM_27(D)>
a2_12 = malloc (_1);
test.c:293:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start a2_12 = malloc (_1);
a2_12 = malloc (_1);
dot graph stmt end

dot graph stmt start a2_12 = malloc (_1);
test.c:293:19: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_115868218 dot graph subgraph  *a2_12 = 10;
a2_12 = malloc (_1);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1606888973 dot graph subgraph  *a2_12 = 10;
a2_12 = malloc (_1);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_608469614 dot graph subgraph  a2_12 = malloc (_1);
a2_12 = malloc (_1);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e99947e0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993480 p3>
    def_stmt p3_14 = malloc (_2);
    version:14
    ptr-info 0x7f20e9984828>
 <ssa_name 0x7f20e99947e0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993480 p3>
    def_stmt p3_14 = malloc (_2);
    version:14
    ptr-info 0x7f20e9984828>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    fucntion exit  [0m
_7 = PHI <p3_14(3), p4_16(4)>
In function ‘foo2’:
lto1: warning: use location
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 5 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

_7 = PHI <p3_14(3), p4_16(4)>
In function ‘foo’:
lto1: warning: use location
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 5: _7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 5dot graph target basicblock en1

dot graph stmt start _7 = PHI <p3_14(3), p4_16(4)>
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start _7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---exit-----

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
In function ‘foo2’:
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 3 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

free (p3_14);
In function ‘foo’:
test.c:309:17: warning: use location
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 3: free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 3dot graph target basicblock en1

dot graph stmt start free (p3_14);
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (p3_14);
test.c:309:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_41 = VDEF <.MEM_38>
*p3_14 = 10;
In function ‘foo2’:
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 3 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

*p3_14 = 10;
In function ‘foo’:
test.c:308:23: warning: use location
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 3: *p3_14 = 10;
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 3dot graph target basicblock en1

dot graph stmt start *p3_14 = 10;
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start *p3_14 = 10;
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
dot graph stmt end


======================================================================
[40;31m    fucntion exit  [0m
# .MEM_41 = VDEF <.MEM_38>
*p3_14 = 10;
In function ‘foo2’:
test.c:308:23: warning: use location
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 3 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

*p3_14 = 10;
In function ‘foo’:
test.c:308:23: warning: use location
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 3: *p3_14 = 10;
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 3dot graph target basicblock en1

dot graph stmt start *p3_14 = 10;
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start *p3_14 = 10;
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

foo3 (p3_14);
test.c:304:9: warning: use location
  304 |         foo3(p3);
      |         ^
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 2: foo3 (p3_14);
test.c:304:9: warning: use location
  304 |         foo3(p3);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start foo3 (p3_14);
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start foo3 (p3_14);
test.c:304:9: warning: use location
  304 |         foo3(p3);
      |         ^
dot graph stmt end

this stmt call this function :foo3
trace fucntion name:foo3 
[40;44m =======trace_function_path foo3  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f20e99947e0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993480 p3>
    def_stmt p3_14 = malloc (_2);
    version:14
    ptr-info 0x7f20e9984828>
[40;36m ======= node_fun:foo3========= [0m
[40;36m ======= find relate stmt with p3 ========= [0m
dot graph arrowdot graph start relate for1ID : 410935443
from foo3 basic block 2dot graph end relate end

_1 = malloc (1);
dot graph relate stmt start ID : 233815904 stmt(call) :In function ‘foo3’:
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
dot graph entry foo2
dot graph target entry end

p3_14 = malloc (_2);
In function ‘foo’:
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start p3_14 = malloc (_2);
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from foo2 basic block 5dot graph target basicblock en1

dot graph arrowsubgraph cluster_729510916 dot graph subgraph  _7 = PHI <p3_14(3), p4_16(4)>
p3_14 = malloc (_2);
dot graph subgrapend

dot graph start relate for1ID : 1004638873
from foo3 basic block 2dot graph end relate end

subgraph cluster_584812244 dot graph subgraph  start ID : 1201572709 stmt(relate) ， Tree ID : 1004638873 : _1 = malloc (1);
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
dot graph subgrapend

dot graph start relate for1ID : 913429532
from foo3 basic block 2dot graph end relate end

subgraph cluster_1491162263 dot graph subgraph  start ID : 1823250151 stmt(relate) ， Tree ID : 913429532 : _1 = malloc (1);
test.c:288:14: warning: use location
dot graph subgrapend

dot graph start relate for1ID : 410935443
from foo3 basic block 2dot graph end relate end

subgraph cluster_743403043 dot graph subgraph  start ID : 233815904 stmt(relate) ， Tree ID : 410935443 : _1 = malloc (1);
test.c:288:14: warning: use location
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: free in this location

===== possiable asias =====
_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: free in this location

===== possiable asias =====
_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e9994828
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e99933f0 p4>
    def_stmt p4_16 = malloc (_3);
    version:16
    ptr-info 0x7f20e9984840>
 <ssa_name 0x7f20e9994828
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e99933f0 p4>
    def_stmt p4_16 = malloc (_3);
    version:16
    ptr-info 0x7f20e9984840>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    fucntion exit  [0m
_7 = PHI <p3_14(3), p4_16(4)>
In function ‘foo2’:
lto1: warning: use location
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 5 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

_7 = PHI <p3_14(3), p4_16(4)>
In function ‘foo’:
lto1: warning: use location
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 5: _7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 5dot graph target basicblock en1

dot graph stmt start _7 = PHI <p3_14(3), p4_16(4)>
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start _7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---exit-----

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
In function ‘foo2’:
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
[40;31m    branch possiable have return in bb:4 [0m
gimple stmt in succ := 4 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

free (p4_16);
In function ‘foo’:
test.c:315:17: warning: use location
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 4: free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 4dot graph target basicblock en1

dot graph stmt start free (p4_16);
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (p4_16);
test.c:315:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_39 = VDEF <.MEM_38>
*p4_16 = 10;
In function ‘foo2’:
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
[40;31m    branch possiable have return in bb:4 [0m
gimple stmt in succ := 4 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

*p4_16 = 10;
In function ‘foo’:
test.c:314:23: warning: use location
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 4: *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 4dot graph target basicblock en1

dot graph stmt start *p4_16 = 10;
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph stmt end


======================================================================
[40;31m    fucntion exit  [0m
# .MEM_39 = VDEF <.MEM_38>
*p4_16 = 10;
In function ‘foo2’:
test.c:314:23: warning: use location
[40;31m    branch possiable have return in bb:4 [0m
gimple stmt in succ := 4 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

*p4_16 = 10;
In function ‘foo’:
test.c:314:23: warning: use location
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 4: *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 4dot graph target basicblock en1

dot graph stmt start *p4_16 = 10;
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph stmt end

# .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
dot graph entry foo2
dot graph target entry end

p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start p4_16 = malloc (_3);
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from foo2 basic block 5dot graph target basicblock en1

dot graph arrowsubgraph cluster_347820989 dot graph subgraph  _7 = PHI <p3_14(3), p4_16(4)>
p4_16 = malloc (_3);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: free in this location

===== possiable asias =====
_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: free in this location

===== possiable asias =====
_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e9994678
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _5 = malloc (_4);
    version:5
    ptr-info 0x7f20e99847c8>
 <ssa_name 0x7f20e9994678
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _5 = malloc (_4);
    version:5
    ptr-info 0x7f20e99847c8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
dot graph entry foo2
dot graph target entry end

p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc en1

dot graph target line desc form basic block 2: p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start p99 = _5;
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

p99 = _5;
test.c:296:13: warning: use location
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc en1

dot graph target line desc form basic block 2: p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start p99 = _5;
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

_6 = p99;
test.c:299:12: warning: use location
  299 |         p99[0] = 10;
      |            ^
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc en1

dot graph target line desc form basic block 2: _6 = p99;
test.c:299:12: warning: use location
  299 |         p99[0] = 10;
      |            ^
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start _6 = p99;
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start _6 = p99;
test.c:299:12: warning: use location
  299 |         p99[0] = 10;
      |            ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

*_6 = 10;
test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc en1

dot graph target line desc form basic block 2: *_6 = 10;
test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start *_6 = 10;
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start *_6 = 10;
test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
dot graph stmt end

# .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
dot graph entry foo2
dot graph target entry end

_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _5 = malloc (_4);
test.c:296:15: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start _5 = malloc (_4);
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start _5 = malloc (_4);
test.c:296:15: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1262181471 dot graph subgraph  p99 = _5;
_5 = malloc (_4);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1140884509 dot graph subgraph  p99 = _5;
_5 = malloc (_4);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_613391210 dot graph subgraph  _6 = p99;
_5 = malloc (_4);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1370123680 dot graph subgraph  *_6 = 10;
_6 = p99;
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_340033835 dot graph subgraph  _5 = malloc (_4);
_5 = malloc (_4);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7f20ea713c60 mLock2
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:246:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f20ea713c60 mLock2
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:246:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35>
pthread_mutex_lock (&mLock2);
dot graph entry foo2
dot graph target entry end

pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
dot graph target loc start pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_36 = VDEF <.MEM_35>
pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock2);
pthread_mutex_lock (&mLock2);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35>
pthread_mutex_lock (&mLock2);
dot graph entry foo2
dot graph target entry end

pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc start pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_36 = VDEF <.MEM_35>
pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock2);
pthread_mutex_lock (&mLock2);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_680763578 dot graph subgraph  pthread_mutex_lock (&mLock2);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1077470755 dot graph subgraph  pthread_mutex_lock (&mLock2);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;31m   malloc def-leak warring [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   memory leak and alloc new memory [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:302:9: warning: use location
[40;31m   memory leak and alloc new memory [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^

dot graph START

======================================================================
 <var_decl 0x7f20ea713cf0 mLock3
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:247:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f20ea713cf0 mLock3
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:247:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_37 = VDEF <.MEM_36>
pthread_mutex_lock (&mLock3);
dot graph entry foo2
dot graph target entry end

pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
  303 |         pthread_mutex_lock(&mLock3);
      |         ^
dot graph target loc start pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_37 = VDEF <.MEM_36>
pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock3);
pthread_mutex_lock (&mLock3);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_37 = VDEF <.MEM_36>
pthread_mutex_lock (&mLock3);
dot graph entry foo2
dot graph target entry end

pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc start pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_37 = VDEF <.MEM_36>
pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock3);
pthread_mutex_lock (&mLock3);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_809901970 dot graph subgraph  pthread_mutex_lock (&mLock3);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1793162823 dot graph subgraph  pthread_mutex_lock (&mLock3);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;31m   malloc def-leak warring [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   memory leak and alloc new memory [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;31m   malloc def-leak warring [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   memory leak and alloc new memory [0m

test.c:303:9: warning: use location
  303 |         pthread_mutex_lock(&mLock3);
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   malloc def-leak warring [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;31m   memory leak and alloc new memory [0m

test.c:303:9: warning: use location
  303 |         pthread_mutex_lock(&mLock3);
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:303:9: warning: use location
[40;31m   memory leak and alloc new memory [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   malloc def-leak warring [0m

test.c:303:9: warning: use location
  303 |         pthread_mutex_lock(&mLock3);
      |         ^
[40;31m   memory leak and alloc new memory [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;42m =======pre_check_funciton:foo========= [0m
[40;42m =======start_check_funciton:foo========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f20e9994360
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993090 p2>
    def_stmt p2_3 = malloc (1);
    version:3
    ptr-info 0x7f20e9984798>
 <ssa_name 0x7f20e9994360
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993090 p2>
    def_stmt p2_3 = malloc (1);
    version:3
    ptr-info 0x7f20e9984798>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
dot graph entry foo
dot graph target entry end

*p2_3 = 1;
test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
dot graph target loc start p2_3 = malloc (1);
test.c:345:19: warning: use location
  345 |         int *p2 = malloc(1);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 2: *p2_3 = 1;
test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
dot graph target line desend

dot graph target loc start # .MEM_9 = VDEF <.MEM_8(D)>
p2_3 = malloc (1);
test.c:345:19: warning: use location
  345 |         int *p2 = malloc(1);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start *p2_3 = 1;
p2_3 = malloc (1);
dot graph stmt end

dot graph stmt start *p2_3 = 1;
test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
dot graph stmt end

dot graph entry foo
dot graph target entry end

*p2_3 = 1;
test.c:346:15: warning: use location
dot graph target loc start p2_3 = malloc (1);
test.c:345:19: warning: use location
  345 |         int *p2 = malloc(1);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 2: *p2_3 = 1;
test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
dot graph target line desend

dot graph target loc start # .MEM_9 = VDEF <.MEM_8(D)>
p2_3 = malloc (1);
test.c:345:19: warning: use location
  345 |         int *p2 = malloc(1);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start *p2_3 = 1;
p2_3 = malloc (1);
dot graph stmt end

dot graph stmt start *p2_3 = 1;
test.c:346:15: warning: use location
  346 |         p2[0] = 1;
      |               ^
dot graph stmt end

# .MEM_9 = VDEF <.MEM_8(D)>
p2_3 = malloc (1);
dot graph entry foo
dot graph target entry end

p2_3 = malloc (1);
test.c:345:19: warning: use location
  345 |         int *p2 = malloc(1);
      |                   ^
dot graph target loc start p2_3 = malloc (1);
test.c:345:19: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: p2_3 = malloc (1);
test.c:345:19: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_9 = VDEF <.MEM_8(D)>
p2_3 = malloc (1);
test.c:345:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start p2_3 = malloc (1);
p2_3 = malloc (1);
dot graph stmt end

dot graph stmt start p2_3 = malloc (1);
test.c:345:19: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1791017545 dot graph subgraph  *p2_3 = 1;
p2_3 = malloc (1);
dot graph subgrapend

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1155834735 dot graph subgraph  *p2_3 = 1;
p2_3 = malloc (1);
dot graph subgrapend

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_36372501 dot graph subgraph  p2_3 = malloc (1);
p2_3 = malloc (1);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>
 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
dot graph entry foo
dot graph target entry end

_7 = foo2 (z_5(D));
test.c:361:16: warning: use location
  361 |         return foo2(z);
      |                ^
dot graph target loc start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start _7 = foo2 (z_5(D));
_7 = foo2 (z_5(D));
dot graph stmt end

dot graph stmt start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph stmt end

this stmt call this function :foo2
trace fucntion name:foo2 
[40;44m =======trace_function_path foo2  function_call count: 4 level :0========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph start relate form ID : 888869707
from foo2 basic block 3dot graph end relate end

dot graph relate stmt start ID : 1637505540 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1637505540 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph start relate form ID : 888869707
from foo2 basic block 4dot graph end relate end

dot graph relate stmt start ID : 313535585 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 313535585 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
# .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
dot graph entry foo
dot graph target entry end

_7 = foo2 (z_5(D));
test.c:361:16: warning: use location
  361 |         return foo2(z);
      |                ^
dot graph target loc start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start _7 = foo2 (z_5(D));
_7 = foo2 (z_5(D));
dot graph stmt end

dot graph stmt start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph stmt end

this stmt call this function :foo2
trace fucntion name:foo2 
[40;44m =======trace_function_path foo2  function_call count: 4 level :0========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph start relate form ID : 1668466849
from foo2 basic block 3dot graph end relate end

dot graph relate stmt start ID : 775070375 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 775070375 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph start relate form ID : 1668466849
from foo2 basic block 4dot graph end relate end

dot graph relate stmt start ID : 1267953855 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1267953855 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f20e99943a8
    type <integer_type 0x7f20e9e7e5e8 int public SI
        size <integer_cst 0x7f20e9e69df8 constant 32>
        unit-size <integer_cst 0x7f20e9e69e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
        pointer_to_this <pointer_type 0x7f20e9e859d8>>
    var <parm_decl 0x7f20e997c580 z>
    def_stmt GIMPLE_NOP
    version:5>
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_784023466 dot graph subgraph  _7 = foo2 (z_5(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1383822073 dot graph subgraph  _7 = foo2 (z_5(D));
GIMPLE_NOP
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>

 ================== pre trace ptable ================== 
trace fucntion name:foo2 
[40;44m =======trace_function_path foo2  function_call count: 4 level :888========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph start relate form ID : 106198415
from foo2 basic block 3dot graph end relate end

dot graph relate stmt start ID : 1392493080 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1392493080 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph start relate form ID : 106198415
from foo2 basic block 4dot graph end relate end

dot graph relate stmt start ID : 1794757516 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1794757516 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
[40;36m ======= node_fun:foo3========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
dot graph arrowdot graph start relate for1ID : 340014319
from foo3 basic block 2dot graph end relate end

_1 = malloc (1);
dot graph relate stmt start ID : 2122003997 stmt(call) :In function ‘foo3’:
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
is Other function foo2
 
 Start check Pointer Collect  

======================================================================
# .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
dot graph entry foo
dot graph target entry end

_7 = foo2 (z_5(D));
In function ‘foo’:
test.c:361:16: warning: use location
  361 |         return foo2(z);
      |                ^
dot graph target loc start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start _7 = foo2 (z_5(D));
_7 = foo2 (z_5(D));
dot graph stmt end

dot graph stmt start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph stmt end

this stmt call this function :foo2
trace fucntion name:foo2 
[40;44m =======trace_function_path foo2  function_call count: 4 level :0========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph start relate form ID : 232086112
from foo2 basic block 3dot graph end relate end

dot graph relate stmt start ID : 1831176582 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1831176582 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph start relate form ID : 232086112
from foo2 basic block 4dot graph end relate end

dot graph relate stmt start ID : 717923392 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 717923392 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
[40;36m ======= node_fun:foo2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 232086112
from foo2 basic block 2dot graph end relate end

In function ‘foo2’:
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
*a2_12 = 10;
dot graph relate stmt start ID : 579907101 stmt(LHS) :test.c:298:15: warning: use location
*a2_12
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 232086112
from foo2 basic block 2dot graph end relate end

test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
*_6 = 10;
dot graph relate stmt start ID : 945874406 stmt(LHS) :test.c:299:16: warning: use location
*_6
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 232086112
from foo2 basic block 3dot graph end relate end

test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
*p3_14 = 10;
dot graph relate stmt start ID : 1858807901 stmt(LHS) :test.c:308:23: warning: use location
*p3_14
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 232086112
from foo2 basic block 4dot graph end relate end

test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
*p4_16 = 10;
dot graph relate stmt start ID : 1193298312 stmt(LHS) :test.c:314:23: warning: use location
*p4_16
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
[40;36m ======= node_fun:foo3========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
dot graph arrowdot graph start relate for1ID : 168514438
from foo3 basic block 2dot graph end relate end

_1 = malloc (1);
dot graph relate stmt start ID : 51358088 stmt(call) :In function ‘foo3’:
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
# .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
dot graph entry foo
dot graph target entry end

_7 = foo2 (z_5(D));
In function ‘foo’:
test.c:361:16: warning: use location
  361 |         return foo2(z);
      |                ^
dot graph target loc start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_11 = VDEF <.MEM_10>
_7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph stmt start _7 = foo2 (z_5(D));
_7 = foo2 (z_5(D));
dot graph stmt end

dot graph stmt start _7 = foo2 (z_5(D));
test.c:361:16: warning: use location
dot graph stmt end

this stmt call this function :foo2
trace fucntion name:foo2 
[40;44m =======trace_function_path foo2  function_call count: 4 level :0========  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph start relate form ID : 1874061890
from foo2 basic block 3dot graph end relate end

dot graph relate stmt start ID : 1245985194 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1245985194 stmt(free) :free (p3_14);
test.c:309:17: warning: use location
dot graph relate end

# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
[40;31m  find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph start relate form ID : 1874061890
from foo2 basic block 4dot graph end relate end

dot graph relate stmt start ID : 861260058 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 861260058 stmt(free) :free (p4_16);
test.c:315:17: warning: use location
dot graph relate end

 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
[40;36m ======= node_fun:foo2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1874061890
from foo2 basic block 2dot graph end relate end

In function ‘foo2’:
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
*a2_12 = 10;
dot graph relate stmt start ID : 1519741066 stmt(LHS) :test.c:298:15: warning: use location
*a2_12
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1874061890
from foo2 basic block 2dot graph end relate end

test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
*_6 = 10;
dot graph relate stmt start ID : 889519091 stmt(LHS) :test.c:299:16: warning: use location
*_6
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1874061890
from foo2 basic block 3dot graph end relate end

test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
*p3_14 = 10;
dot graph relate stmt start ID : 2017094794 stmt(LHS) :test.c:308:23: warning: use location
*p3_14
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
dot graph arrowdot graph start relate for1ID : 1874061890
from foo2 basic block 4dot graph end relate end

test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
*p4_16 = 10;
dot graph relate stmt start ID : 1556113567 stmt(LHS) :test.c:314:23: warning: use location
*p4_16
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f20e99943f0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
   
    def_stmt _7 = foo2 (z_5(D));
    version:7
    ptr-info 0x7f20e99847b0>
[40;36m ======= node_fun:foo3========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
dot graph arrowdot graph start relate for1ID : 1778388798
from foo3 basic block 2dot graph end relate end

_1 = malloc (1);
dot graph relate stmt start ID : 1507116686 stmt(call) :In function ‘foo3’:
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:4 
dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1869649152 dot graph subgraph  _7 = foo2 (z_5(D));
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_89890108 dot graph subgraph  _7 = foo2 (z_5(D));
_7 = foo2 (z_5(D));
dot graph subgrapend

dot graph start relate for1ID : 1793358824
from foo3 basic block 2dot graph end relate end

subgraph cluster_1028099887 dot graph subgraph  start ID : 149871159 stmt(relate) ， Tree ID : 1793358824 : _1 = malloc (1);
In function ‘foo’:
test.c:288:14: warning: use location
dot graph subgrapend

dot graph start relate for1ID : 2042896817
from foo2 basic block 4dot graph end relate end

subgraph cluster_497235880 dot graph subgraph  start ID : 1867689483 stmt(relate) ， Tree ID : 2042896817 : *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph subgrapend

dot graph start relate for1ID : 2026197905
from foo3 basic block 2dot graph end relate end

subgraph cluster_1357843963 dot graph subgraph  start ID : 1968239088 stmt(relate) ， Tree ID : 2026197905 : _1 = malloc (1);
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
dot graph subgrapend

dot graph start relate for1ID : 905307053
from foo2 basic block 4dot graph end relate end

subgraph cluster_1674892978 dot graph subgraph  start ID : 610773221 stmt(relate) ， Tree ID : 905307053 : *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph subgrapend

dot graph start relate for1ID : 202900982
from foo3 basic block 2dot graph end relate end

subgraph cluster_1281259346 dot graph subgraph  start ID : 188089812 stmt(relate) ， Tree ID : 202900982 : _1 = malloc (1);
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
dot graph subgrapend

dot graph start relate for1ID : 502561476
from foo3 basic block 2dot graph end relate end

subgraph cluster_594182389 dot graph subgraph  start ID : 336923000 stmt(relate) ， Tree ID : 502561476 : _1 = malloc (1);
test.c:288:14: warning: use location
dot graph subgrapend

dot graph start relate for1ID : 949151508
from foo2 basic block 4dot graph end relate end

subgraph cluster_1781091393 dot graph subgraph  start ID : 2023548278 stmt(relate) ， Tree ID : 949151508 : *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph subgrapend

dot graph start relate for1ID : 1425777728
from foo3 basic block 2dot graph end relate end

subgraph cluster_526268779 dot graph subgraph  start ID : 531789021 stmt(relate) ， Tree ID : 1425777728 : _1 = malloc (1);
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
dot graph subgrapend

dot graph start relate for1ID : 135738039
from foo2 basic block 4dot graph end relate end

subgraph cluster_241456257 dot graph subgraph  start ID : 1094848581 stmt(relate) ， Tree ID : 135738039 : *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph subgrapend

dot graph start relate for1ID : 1694901949
from foo3 basic block 2dot graph end relate end

subgraph cluster_2121105713 dot graph subgraph  start ID : 1454382969 stmt(relate) ， Tree ID : 1694901949 : _1 = malloc (1);
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
dot graph subgrapend

dot graph start relate for1ID : 340014319
from foo3 basic block 2dot graph end relate end

subgraph cluster_500789128 dot graph subgraph  start ID : 2122003997 stmt(relate) ， Tree ID : 340014319 : _1 = malloc (1);
test.c:288:14: warning: use location
dot graph subgrapend

dot graph start relate for1ID : 232086112
from foo2 basic block 4dot graph end relate end

subgraph cluster_473542370 dot graph subgraph  start ID : 1193298312 stmt(relate) ， Tree ID : 232086112 : *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph subgrapend

dot graph start relate for1ID : 168514438
from foo3 basic block 2dot graph end relate end

subgraph cluster_1804798647 dot graph subgraph  start ID : 51358088 stmt(relate) ， Tree ID : 168514438 : _1 = malloc (1);
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
dot graph subgrapend

dot graph start relate for1ID : 1874061890
from foo2 basic block 4dot graph end relate end

subgraph cluster_1218712520 dot graph subgraph  start ID : 1556113567 stmt(relate) ， Tree ID : 1874061890 : *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph subgrapend

dot graph start relate for1ID : 1778388798
from foo3 basic block 2dot graph end relate end

subgraph cluster_1053449471 dot graph subgraph  start ID : 1507116686 stmt(relate) ， Tree ID : 1778388798 : _1 = malloc (1);
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;44m =======print_function_path foo2  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;44m =======print_function_path foo3  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;42m =======pre_check_funciton:foo3========= [0m
[40;42m =======start_check_funciton:foo3========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;42m =======pre_check_funciton:foo2========= [0m
[40;42m =======start_check_funciton:foo2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f20e9994798
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993510 a2>
    def_stmt a2_12 = malloc (_1);
    version:12
    ptr-info 0x7f20e9984810>
 <ssa_name 0x7f20e9994798
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993510 a2>
    def_stmt a2_12 = malloc (_1);
    version:12
    ptr-info 0x7f20e9984810>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
dot graph entry foo2
dot graph target entry end

*a2_12 = 10;
In function ‘foo2’:
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph target loc start a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 2: *a2_12 = 10;
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph target line desend

dot graph target loc start # .MEM_28 = VDEF <.MEM_27(D)>
a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start *a2_12 = 10;
a2_12 = malloc (_1);
dot graph stmt end

dot graph stmt start *a2_12 = 10;
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

*a2_12 = 10;
test.c:298:15: warning: use location
dot graph target loc start a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 2: *a2_12 = 10;
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph target line desend

dot graph target loc start # .MEM_28 = VDEF <.MEM_27(D)>
a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start *a2_12 = 10;
a2_12 = malloc (_1);
dot graph stmt end

dot graph stmt start *a2_12 = 10;
test.c:298:15: warning: use location
  298 |         a2[0] = 10;
      |               ^
dot graph stmt end

# .MEM_28 = VDEF <.MEM_27(D)>
a2_12 = malloc (_1);
dot graph entry foo2
dot graph target entry end

a2_12 = malloc (_1);
test.c:293:19: warning: use location
  293 |         int *a2 = malloc(z);
      |                   ^
dot graph target loc start a2_12 = malloc (_1);
test.c:293:19: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: a2_12 = malloc (_1);
test.c:293:19: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_28 = VDEF <.MEM_27(D)>
a2_12 = malloc (_1);
test.c:293:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start a2_12 = malloc (_1);
a2_12 = malloc (_1);
dot graph stmt end

dot graph stmt start a2_12 = malloc (_1);
test.c:293:19: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_603189405 dot graph subgraph  *a2_12 = 10;
a2_12 = malloc (_1);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_930036774 dot graph subgraph  *a2_12 = 10;
a2_12 = malloc (_1);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_99264135 dot graph subgraph  a2_12 = malloc (_1);
a2_12 = malloc (_1);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e99947e0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993480 p3>
    def_stmt p3_14 = malloc (_2);
    version:14
    ptr-info 0x7f20e9984828>
 <ssa_name 0x7f20e99947e0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993480 p3>
    def_stmt p3_14 = malloc (_2);
    version:14
    ptr-info 0x7f20e9984828>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    fucntion exit  [0m
_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 5 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 5: _7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 5dot graph target basicblock en1

dot graph stmt start _7 = PHI <p3_14(3), p4_16(4)>
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start _7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---exit-----

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 3 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

free (p3_14);
test.c:309:17: warning: use location
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 3: free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 3dot graph target basicblock en1

dot graph stmt start free (p3_14);
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (p3_14);
test.c:309:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_41 = VDEF <.MEM_38>
*p3_14 = 10;
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 3 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

*p3_14 = 10;
test.c:308:23: warning: use location
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 3: *p3_14 = 10;
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 3dot graph target basicblock en1

dot graph stmt start *p3_14 = 10;
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start *p3_14 = 10;
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
dot graph stmt end


======================================================================
[40;31m    fucntion exit  [0m
# .MEM_41 = VDEF <.MEM_38>
*p3_14 = 10;
test.c:308:23: warning: use location
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 3 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

*p3_14 = 10;
test.c:308:23: warning: use location
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 3: *p3_14 = 10;
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 3dot graph target basicblock en1

dot graph stmt start *p3_14 = 10;
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start *p3_14 = 10;
test.c:308:23: warning: use location
  308 |                 p3[0] = 10;
      |                       ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

foo3 (p3_14);
test.c:304:9: warning: use location
  304 |         foo3(p3);
      |         ^
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 2: foo3 (p3_14);
test.c:304:9: warning: use location
  304 |         foo3(p3);
      |         ^
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start foo3 (p3_14);
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start foo3 (p3_14);
test.c:304:9: warning: use location
  304 |         foo3(p3);
      |         ^
dot graph stmt end

this stmt call this function :foo3
trace fucntion name:foo3 
[40;44m =======trace_function_path foo3  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f20e99947e0
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e9993480 p3>
    def_stmt p3_14 = malloc (_2);
    version:14
    ptr-info 0x7f20e9984828>
[40;36m ======= node_fun:foo3========= [0m
[40;36m ======= find relate stmt with p3 ========= [0m
dot graph arrowdot graph start relate for1ID : 771703844
from foo3 basic block 2dot graph end relate end

_1 = malloc (1);
dot graph relate stmt start ID : 981394862 stmt(call) :In function ‘foo3’:
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
dot graph entry foo2
dot graph target entry end

p3_14 = malloc (_2);
In function ‘foo2’:
test.c:294:19: warning: use location
  294 |         int *p3 = malloc(z);
      |                   ^
dot graph target loc start p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_29 = VDEF <.MEM_28>
p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start p3_14 = malloc (_2);
p3_14 = malloc (_2);
dot graph stmt end

dot graph stmt start p3_14 = malloc (_2);
test.c:294:19: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from foo2 basic block 5dot graph target basicblock en1

dot graph arrowsubgraph cluster_1973326026 dot graph subgraph  _7 = PHI <p3_14(3), p4_16(4)>
p3_14 = malloc (_2);
dot graph subgrapend

dot graph start relate for1ID : 1004638873
from foo3 basic block 2dot graph end relate end

subgraph cluster_2017689038 dot graph subgraph  start ID : 1201572709 stmt(relate) ， Tree ID : 1004638873 : _1 = malloc (1);
test.c:288:14: warning: use location
  288 |         *z = malloc(1);
      |              ^
dot graph subgrapend

dot graph start relate for1ID : 913429532
from foo3 basic block 2dot graph end relate end

subgraph cluster_1842654921 dot graph subgraph  start ID : 1823250151 stmt(relate) ， Tree ID : 913429532 : _1 = malloc (1);
test.c:288:14: warning: use location
dot graph subgrapend

dot graph start relate for1ID : 410935443
from foo3 basic block 2dot graph end relate end

subgraph cluster_1345583444 dot graph subgraph  start ID : 233815904 stmt(relate) ， Tree ID : 410935443 : _1 = malloc (1);
test.c:288:14: warning: use location
dot graph subgrapend

dot graph start relate for1ID : 771703844
from foo3 basic block 2dot graph end relate end

subgraph cluster_759724481 dot graph subgraph  start ID : 981394862 stmt(relate) ， Tree ID : 771703844 : _1 = malloc (1);
test.c:288:14: warning: use location
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: use location
  309 |                 free(p3);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: free in this location

===== possiable asias =====
_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_42 = VDEF <.MEM_41>
free (p3_14);
test.c:309:17: warning: free in this location

===== possiable asias =====
_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e9994828
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e99933f0 p4>
    def_stmt p4_16 = malloc (_3);
    version:16
    ptr-info 0x7f20e9984840>
 <ssa_name 0x7f20e9994828
    type <pointer_type 0x7f20e9e859d8
        type <integer_type 0x7f20e9e7e5e8 int public SI
            size <integer_cst 0x7f20e9e69df8 constant 32>
            unit-size <integer_cst 0x7f20e9e69e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e9e7e5e8 precision:32 min <integer_cst 0x7f20e9e69db0 -2147483648> max <integer_cst 0x7f20e9e69dc8 2147483647>
            pointer_to_this <pointer_type 0x7f20e9e859d8>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9977690>>
    var <var_decl 0x7f20e99933f0 p4>
    def_stmt p4_16 = malloc (_3);
    version:16
    ptr-info 0x7f20e9984840>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    fucntion exit  [0m
_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
[40;31m    branch possiable have return in bb:3 [0m
gimple stmt in succ := 5 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 5: _7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 5dot graph target basicblock en1

dot graph stmt start _7 = PHI <p3_14(3), p4_16(4)>
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start _7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---exit-----

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
[40;31m    branch possiable have return in bb:4 [0m
gimple stmt in succ := 4 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

free (p4_16);
test.c:315:17: warning: use location
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 4: free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 4dot graph target basicblock en1

dot graph stmt start free (p4_16);
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt call this function :free

 ================== find free stmt ================== 
free (p4_16);
test.c:315:17: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    fucntion exit  [0m
# .MEM_39 = VDEF <.MEM_38>
*p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
[40;31m    branch possiable have return in bb:4 [0m
gimple stmt in succ := 4 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

*p4_16 = 10;
test.c:314:23: warning: use location
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 4: *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 4dot graph target basicblock en1

dot graph stmt start *p4_16 = 10;
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph stmt end


======================================================================
[40;31m    fucntion exit  [0m
# .MEM_39 = VDEF <.MEM_38>
*p4_16 = 10;
test.c:314:23: warning: use location
[40;31m    branch possiable have return in bb:4 [0m
gimple stmt in succ := 4 
beacuse in succ := 5 have return 

======================================================================
dot graph entry foo2
dot graph target entry end

*p4_16 = 10;
test.c:314:23: warning: use location
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc en1

dot graph target line desc form basic block 4: *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 4dot graph target basicblock en1

dot graph stmt start *p4_16 = 10;
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start *p4_16 = 10;
test.c:314:23: warning: use location
  314 |                 p4[0] = 10;
      |                       ^
dot graph stmt end

# .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
dot graph entry foo2
dot graph target entry end

p4_16 = malloc (_3);
test.c:295:19: warning: use location
  295 |         int *p4 = malloc(z);
      |                   ^
dot graph target loc start p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_30 = VDEF <.MEM_29>
p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start p4_16 = malloc (_3);
p4_16 = malloc (_3);
dot graph stmt end

dot graph stmt start p4_16 = malloc (_3);
test.c:295:19: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from foo2 basic block 5dot graph target basicblock en1

dot graph arrowsubgraph cluster_1712266067 dot graph subgraph  _7 = PHI <p3_14(3), p4_16(4)>
p4_16 = malloc (_3);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: use location
  315 |                 free(p4);
      |                 ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: free in this location

===== possiable asias =====
_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_40 = VDEF <.MEM_39>
free (p4_16);
test.c:315:17: warning: free in this location

===== possiable asias =====
_7 = PHI <p3_14(3), p4_16(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f20e9994678
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _5 = malloc (_4);
    version:5
    ptr-info 0x7f20e99847c8>
 <ssa_name 0x7f20e9994678
    type <pointer_type 0x7f20e9e85000
        type <void_type 0x7f20e9e7ef18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f20e9e85000>>
        public unsigned DI
        size <integer_cst 0x7f20e9e69bb8 constant 64>
        unit-size <integer_cst 0x7f20e9e69bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f20e9975888>>
   
    def_stmt _5 = malloc (_4);
    version:5
    ptr-info 0x7f20e99847c8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
dot graph entry foo2
dot graph target entry end

p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc en1

dot graph target line desc form basic block 2: p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start p99 = _5;
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

p99 = _5;
test.c:296:13: warning: use location
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc en1

dot graph target line desc form basic block 2: p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start p99 = _5;
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start p99 = _5;
test.c:296:13: warning: use location
  296 |         p99 = malloc(z);
      |             ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

_6 = p99;
test.c:299:12: warning: use location
  299 |         p99[0] = 10;
      |            ^
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc en1

dot graph target line desc form basic block 2: _6 = p99;
test.c:299:12: warning: use location
  299 |         p99[0] = 10;
      |            ^
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start _6 = p99;
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start _6 = p99;
test.c:299:12: warning: use location
  299 |         p99[0] = 10;
      |            ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

*_6 = 10;
test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc en1

dot graph target line desc form basic block 2: *_6 = 10;
test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start *_6 = 10;
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start *_6 = 10;
test.c:299:16: warning: use location
  299 |         p99[0] = 10;
      |                ^
dot graph stmt end

# .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
dot graph entry foo2
dot graph target entry end

_5 = malloc (_4);
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
dot graph target loc start _5 = malloc (_4);
test.c:296:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: _5 = malloc (_4);
test.c:296:15: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_31 = VDEF <.MEM_30>
_5 = malloc (_4);
test.c:296:15: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start _5 = malloc (_4);
_5 = malloc (_4);
dot graph stmt end

dot graph stmt start _5 = malloc (_4);
test.c:296:15: warning: use location
dot graph stmt end

this stmt call this function :malloc
dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_754213363 dot graph subgraph  p99 = _5;
_5 = malloc (_4);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_390629631 dot graph subgraph  p99 = _5;
_5 = malloc (_4);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1071899105 dot graph subgraph  _6 = p99;
_5 = malloc (_4);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_476378867 dot graph subgraph  *_6 = 10;
_6 = p99;
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_480519740 dot graph subgraph  _5 = malloc (_4);
_5 = malloc (_4);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7f20ea713c60 mLock2
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:246:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f20ea713c60 mLock2
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:246:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_36 = VDEF <.MEM_35>
pthread_mutex_lock (&mLock2);
dot graph entry foo2
dot graph target entry end

pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
dot graph target loc start pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_36 = VDEF <.MEM_35>
pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock2);
pthread_mutex_lock (&mLock2);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35>
pthread_mutex_lock (&mLock2);
dot graph entry foo2
dot graph target entry end

pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc start pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_36 = VDEF <.MEM_35>
pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock2);
pthread_mutex_lock (&mLock2);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock2);
test.c:302:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_2099998993 dot graph subgraph  pthread_mutex_lock (&mLock2);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_973614747 dot graph subgraph  pthread_mutex_lock (&mLock2);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;31m   malloc def-leak warring [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   memory leak and alloc new memory [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:302:9: warning: use location
[40;31m   memory leak and alloc new memory [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^

dot graph START

======================================================================
 <var_decl 0x7f20ea713cf0 mLock3
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:247:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f20ea713cf0 mLock3
    type <union_type 0x7f20e996d5e8 pthread_mutex_t BLK
        size <integer_cst 0x7f20e9f3e0a8 constant 320>
        unit-size <integer_cst 0x7f20e9964708 constant 40>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f20e996d540
        fields <field_decl 0x7f20e9970850 __data type <record_type 0x7f20e996d498 __pthread_mutex_s>
            BLK /usr/include/x86_64-linux-gnu/bits/pthreadtypes.h:69:28 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f20e9e69be8 constant 0>
            bit-offset <integer_cst 0x7f20e9e69c30 constant 0> context <union_type 0x7f20e996d540> chain <field_decl 0x7f20e99707b8 __size>> context <translation_unit_decl 0x7f20e9e74168 test.c>
        pointer_to_this <pointer_type 0x7f20e99777e0>>
    addressable static BLK test.c:247:17 size <integer_cst 0x7f20e9f3e0a8 320> unit-size <integer_cst 0x7f20e9964708 40>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f20e9e74168 test.c>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_37 = VDEF <.MEM_36>
pthread_mutex_lock (&mLock3);
dot graph entry foo2
dot graph target entry end

pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
  303 |         pthread_mutex_lock(&mLock3);
      |         ^
dot graph target loc start pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_37 = VDEF <.MEM_36>
pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock3);
pthread_mutex_lock (&mLock3);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_37 = VDEF <.MEM_36>
pthread_mutex_lock (&mLock3);
dot graph entry foo2
dot graph target entry end

pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc start pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_37 = VDEF <.MEM_36>
pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph stmt start pthread_mutex_lock (&mLock3);
pthread_mutex_lock (&mLock3);
dot graph stmt end

dot graph stmt start pthread_mutex_lock (&mLock3);
test.c:303:9: warning: use location
dot graph stmt end

this stmt call this function :pthread_mutex_lock
trace fucntion name:pthread_mutex_lock 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1838363703 dot graph subgraph  pthread_mutex_lock (&mLock3);
dot graph subgrapend

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

dot graph arrowsubgraph cluster_1627408323 dot graph subgraph  pthread_mutex_lock (&mLock3);
dot graph subgrapend


 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;31m   malloc def-leak warring [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   memory leak and alloc new memory [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;31m   malloc def-leak warring [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   memory leak and alloc new memory [0m

test.c:303:9: warning: use location
  303 |         pthread_mutex_lock(&mLock3);
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;31m   memory leak and alloc new memory [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   malloc def-leak warring [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;31m   memory leak and alloc new memory [0m

test.c:303:9: warning: use location
  303 |         pthread_mutex_lock(&mLock3);
      |         ^
[40;31m   malloc def-leak warring [0m

test.c:303:9: warning: use location
[40;31m   memory leak and alloc new memory [0m
_5
test.c:296:15: warning: use location
  296 |         p99 = malloc(z);
      |               ^
[40;31m   malloc def-leak warring [0m

test.c:303:9: warning: use location
  303 |         pthread_mutex_lock(&mLock3);
      |         ^
[40;31m   memory leak and alloc new memory [0m

test.c:302:9: warning: use location
  302 |         pthread_mutex_lock(&mLock2);
      |         ^
[40;44m =======print_function_path foo3  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;42m =======pre_check_funciton:foo3========= [0m
[40;42m =======start_check_funciton:foo3========= [0m
[40;44m =======print_function_path foo5  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;42m =======pre_check_funciton:foo5========= [0m
[40;42m =======start_check_funciton:foo5========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 268435456]:
pthread_attr_init (&attr);
pthread_attr_init (&attr2);
pthread_attr_setdetachstate (&attr, 1);
pthread_attr_setdetachstate (&attr2, 0);
_1 = (long int) input2_22(D);
_2 = (void *) _1;
pthread_create (&t, &attr2, child2, _2);
_3 = t;
pthread_join (_3, 0B);
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 805306369]:
_4 = &t2[i_10];
pthread_create (_4, &attr, child, 0B);
_5 = t2[i_10];
printf ("%ld\n", _5);
i_44 = i_10 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# i_10 = PHI <0(2), i_44(3)>
if (i_10 <= 2)
  goto <bb 3>; [75.00%]
else
  goto <bb 5>; [25.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 268435456]:
q_26 = malloc (5);
if (q_26 != 0B)
  goto <bb 6>; [99.96%]
else
  goto <bb 7>; [0.04%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 268328082]:
child (q_26);

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 107374]:
__builtin_puts (&"fuck"[0]);
goto <bb 9>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 322122]:
_6 = t2[i_11];
pthread_join (_6, 0B);
i_41 = i_11 + 1;

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 429496]:
# i_11 = PHI <0(7), i_41(8)>
if (i_11 <= 2)
  goto <bb 8>; [75.00%]
else
  goto <bb 10>; [25.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 107374]:
_7 = staticTrue;
if (_7 != 0)
  goto <bb 11>; [33.00%]
else
  goto <bb 14>; [67.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 35433]:
data_30 = malloc (400);
if (data_30 == 0B)
  goto <bb 12>; [0.04%]
else
  goto <bb 13>; [99.96%]

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 14]:
exit (-1);

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 35419]:
free (data_30);

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 107360]:
# data_12 = PHI <0B(10), data_30(13)>
_8 = staticTrue;
if (_8 != 0)
  goto <bb 15>; [33.00%]
else
  goto <bb 16>; [67.00%]

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 35429]:
free (data_12);

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 107360]:
_9 = foo5 (q_26, q_26);
printf ("fuck%d\n", _9);
attr ={v} {CLOBBER};
attr2 ={v} {CLOBBER};
t ={v} {CLOBBER};
t2 ={v} {CLOBBER};
return 0;

=======Mapping node_fun:test22=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 966367643]:
free (k_2(D));
free (k_2(D));
free (k_2(D));
free (k_2(D));
free (k_2(D));
free (k_2(D));
test22 (k_2(D));
return;

=======Mapping node_fun:boo=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
free (b_2(D));
free (b_2(D));
test22 (b_2(D));
__builtin_puts (&"asdda"[0]);
return;

=======Mapping node_fun:child2=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = data;
_2 = MEM[(int *)_1];
_3 = _2 + 1;
MEM[(int *)_1] = _3;
_4 = MEM[(int *)&data];
_5 = _4 + 1;
MEM[(int *)&data] = _5;
_6 = data;
child3 (_6);
_7 = data;
free (_7);
return;

=======Mapping node_fun:child3=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
free (data_3(D));
return;

=======Mapping node_fun:child=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = pthread_self ();
pthread_detach (_1);
pthread_mutex_lock (&mLock);
pthread_mutex_lock (&mLock);
_2 = malloc (20);
pData = _2;
foo (1);
data2 = 0;
pData = &data2;
_3 = pData;
*_3 = 10;
_4 = MEM[(int * *)&pData + 8B];
*_4 = 10;
_5 = MEM[(int * *)&pData + 16B];
*_5 = 10;
_6 = pData;
*_6 = 12;
_7 = pData;
free (_7);
free (10B);
boo (10B);
free (&pData);
pthread_mutex_unlock (&mLock);
free (&pData);
pthread_exit (0B);

=======Mapping node_fun:foo=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
p2_3 = malloc (1);
*p2_3 = 1;
_7 = foo2 (z_5(D));
return _7;

=======Mapping node_fun:foo2=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = (long unsigned int) z_9(D);
a2_12 = malloc (_1);
_2 = (long unsigned int) z_9(D);
p3_14 = malloc (_2);
_3 = (long unsigned int) z_9(D);
p4_16 = malloc (_3);
_4 = (long unsigned int) z_9(D);
_5 = malloc (_4);
p99 = _5;
*a2_12 = 10;
_6 = p99;
*_6 = 10;
pthread_mutex_lock (&mLock);
pthread_mutex_lock (&mLock2);
pthread_mutex_lock (&mLock3);
foo3 (p3_14);
if (tmp_25(D) > 10)
  goto <bb 3>; [50.00%]
else
  goto <bb 4>; [50.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 536870913]:
*p3_14 = 10;
free (p3_14);
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 536870913]:
*p4_16 = 10;
free (p4_16);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# _7 = PHI <p3_14(3), p4_16(4)>
return _7;

=======Mapping node_fun:foo3=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = malloc (1);
_2 = (long int) _1;
_3 = (int) _2;
*z_6(D) = _3;
return;

=======Mapping node_fun:foo5=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = *z_4(D);
printf ("fuck%d\n", _1);
_2 = *y_6(D);
printf ("fuck%d\n", _2);
printf ("fuck%d\n", 10);
return 10;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 9 [0m
[40;34m    gimple free   count : 18 [0m
[40;34m    all ptable point : 38 [0m
[40;34m    analyzable ptable point : 22 [0m
[40;34m    analyzable ptable all point stmt : 27 [0m
[40;34m    used_stmt array stack totalsize of : 0.001000 mb[0m
[40;34m    collect time: : 0.006957 s [0m
[40;34m    algorithm time: 0.238842 s [0m
[40;34m    gimple stmt count : : 128 [0m
[40;34m    this report analysis in Wed May 18 05:35:55 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
test.c: In function ‘child’:
test.c:402:9: warning: ‘free’ called on unallocated object ‘data2’ [-Wfree-nonheap-object]
  402 |         free(pData);
      |         ^
test.c:394:13: note: declared here
  394 |         int data2 = 0;
      |             ^
test.c:403:9: warning: ‘free’ called on a pointer to an unallocated object ‘10B’ [-Wfree-nonheap-object]
  403 |         free(data);
      |         ^
test.c:405:9: warning: ‘free’ called on unallocated object ‘pData’ [-Wfree-nonheap-object]
  405 |         free(ppData);
      |         ^
test.c:392:14: note: declared here
  392 |         int *pData = malloc(20);
      |              ^
test.c:407:9: warning: ‘free’ called on unallocated object ‘pData’ [-Wfree-nonheap-object]
  407 |         free(ppData);
      |         ^
test.c:392:14: note: declared here
  392 |         int *pData = malloc(20);
      |              ^

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.01 (  8%)   0.00 (  0%)   0.00 (  0%)  2157k ( 75%)
 phase opt and generate             :   0.11 ( 92%)   0.16 (100%)   0.28 (100%)   662k ( 23%)
 callgraph functions expansion      :   0.03 ( 25%)   0.01 (  6%)   0.03 ( 11%)   537k ( 19%)
 tree CFG cleanup                   :   0.01 (  8%)   0.00 (  0%)   0.00 (  0%)   536  (  0%)
 CSE                                :   0.01 (  8%)   0.01 (  6%)   0.00 (  0%)   768  (  0%)
 combiner                           :   0.00 (  0%)   0.00 (  0%)   0.02 (  7%)  6200  (  0%)
 reload CSE regs                    :   0.00 (  0%)   0.00 (  0%)   0.01 (  4%)  1688  (  0%)
 final                              :   0.01 (  8%)   0.00 (  0%)   0.00 (  0%)    17k (  1%)
 plugin execution                   :   0.08 ( 67%)   0.15 ( 94%)   0.25 ( 89%)  1040  (  0%)
 TOTAL                              :   0.12          0.16          0.28         2880k
collect2: error: ld returned 1 exit status
