test.c: In function â€˜foo3â€™:
test.c:56:6: warning: assignment makes integer from pointer without a cast [-Wint-conversion]
   *z = malloc(1);
      ^
test.c:61:11: warning: format â€˜%dâ€™ expects argument of type â€˜intâ€™, but argument 2 has type â€˜int *â€™ [-Wformat=]
  printf("%d", p2);
          ~^
          %ls
test.c: In function â€˜foo4â€™:
test.c:108:5: warning: assignment from incompatible pointer type [-Wincompatible-pointer-types]
  p2 = &b;
     ^
test.c: In function â€˜childâ€™:
test.c:172:16: warning: format â€˜%dâ€™ expects argument of type â€˜intâ€™, but argument 2 has type â€˜int *â€™ [-Wformat=]
  printf("asdda%d\n", a99);
               ~^
               %ls
test.c:182:7: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
  data = 10;
       ^
test.c:189:9: warning: passing argument 1 of â€˜child4â€™ from incompatible pointer type [-Wincompatible-pointer-types]
  child4(&data);
         ^
test.c:24:7: note: expected â€˜int *â€™ but argument is of type â€˜void **â€™
 void *child4(int *data) __attribute__((noinline));
       ^~~~~~
test.c: In function â€˜child4â€™:
test.c:215:15: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types]
  int *pData = &data;
               ^
test.c:216:14: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types]
  int *test = &data;
              ^
test.c:235:16: warning: format â€˜%dâ€™ expects argument of type â€˜intâ€™, but argument 2 has type â€˜int *â€™ [-Wformat=]
  printf("asdda%d\n", pData);
               ~^
               %ls
test.c: In function â€˜child3â€™:
test.c:249:15: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types]
  int *pData = &data;
               ^
test.c:260:16: warning: format â€˜%dâ€™ expects argument of type â€˜intâ€™, but argument 2 has type â€˜int *â€™ [-Wformat=]
  printf("asdda%d\n", pData);
               ~^
               %ls
test.c: In function â€˜child5â€™:
test.c:291:17: warning: format â€˜%dâ€™ expects argument of type â€˜intâ€™, but argument 2 has type â€˜int *â€™ [-Wformat=]
   printf("asdda%d\n", pData);
                ~^
                %ls
test.c: In function â€˜child6â€™:
test.c:327:17: warning: format â€˜%dâ€™ expects argument of type â€˜intâ€™, but argument 2 has type â€˜int *â€™ [-Wformat=]
   printf("asdda%d\n", pData);
                ~^
                %ls
test.c: In function â€˜child7â€™:
test.c:364:17: warning: format â€˜%dâ€™ expects argument of type â€˜intâ€™, but argument 2 has type â€˜int *â€™ [-Wformat=]
   printf("asdda%d\n", pData);
                ~^
                %ls
test.c: In function â€˜child2â€™:
test.c:387:15: warning: initialization from incompatible pointer type [-Wincompatible-pointer-types]
  int *pData = &data;
               ^
test.c: In function â€˜mainâ€™:
test.c:498:37: warning: passing argument 4 of â€˜pthread_createâ€™ makes pointer from integer without a cast [-Wint-conversion]
  pthread_create(&t, &attr2, child2, input2);
                                     ^~~~~~
In file included from test.c:3:0:
/usr/include/pthread.h:200:12: note: expected â€˜void * restrictâ€™ but argument is of type â€˜intâ€™
 extern int pthread_create (pthread_t *__restrict __newthread,
            ^~~~~~~~~~~~~~
test.c:556:5: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
  p4 = 1;
     ^
test.c:559:14: warning: passing argument 1 of â€˜child7â€™ makes pointer from integer without a cast [-Wint-conversion]
  p4 = child7(test, p4);
              ^~~~
test.c:346:6: note: expected â€˜void *â€™ but argument is of type â€˜intâ€™
 int *child7(void *data, void *test)
      ^~~~~~
=======ipa_pta=========
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
 <var_decl 0x7ff8bb77dea0 pData
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    addressable unsigned DI file test.c line 176 col 7 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
    align 64 context <function_decl 0x7ff8bb754d00 child> chain <var_decl 0x7ff8bb77de10 pData2>>
 <var_decl 0x7ff8bc996b40 p98
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    static unsigned DI file test.c line 12 col 13 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
    align 64 context <translation_unit_decl 0x7ff8bbc0c168 test.c>>
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
=======print_function_var -1130796368   11========
=======print_function_var -1149743744   2========
if (_27 != 0)
if (data_73 == 0B)
=======print_function_var -1130796224   12========
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
=======================================================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 12 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:child========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path child  function_call count: 10 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_unlock========= [0m
[40;33m =======POP node_fun stack:pthread_mutex_unlock========= [0m
[40;42m =======pre add _ fucntion:boo========= [0m
[40;44m =======print_function_path boo  function_call count: 3 level :2========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;44m =======print_function_path test22  function_call count: 2 level :3========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:test22========= [0m
[40;42m =======start_check_funciton:test22========= [0m
 <function_decl 0x7ff8bb754e00 test22
    type <function_type 0x7ff8bb753930
        type <void_type 0x7ff8bbc15f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bbc1c0a8>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7ff8bb752a78 value <pointer_type 0x7ff8bbc1ca80>
            chain <tree_list 0x7ff8bbc14ac8 value <void_type 0x7ff8bbc15f18 void>>>
        pointer_to_this <pointer_type 0x7ff8bb7609d8>>
    addressable nothrow static function-specific-target function-specific-opt QI file test.c line 430 col 6 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> attributes <tree_list 0x7ff8bb7529d8> initial <block 0x7ff8bb76bba0>
    result <result_decl 0x7ff8bbc0c690 D.4086 type <void_type 0x7ff8bbc15f18 void>
        ignored VOID file test.c line 430 col 6
        align 8 context <function_decl 0x7ff8bb754e00 test22>>
    arguments <parm_decl 0x7ff8bb762d00 k
        type <pointer_type 0x7ff8bbc1ca80 type <integer_type 0x7ff8bbc155e8 int>
            public unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bb760738>>
        unsigned DI file test.c line 430 col 18 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb754e00 test22> arg-type <pointer_type 0x7ff8bbc1ca80>>
    struct-function 0x7ff8bb76c630>
 <ssa_name 0x7ff8bbc09870
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb77d7e0 w>
    def_stmt w_10 = malloc (5);
    version 10
    ptr-info 0x7ff8bb7865d0>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry test22
dot graph target entry end

free (w_10);
In function â€˜mainâ€™:
test.c:439:2: warning: use location
  free(w);
  ^
dot graph target loc start # .MEM_18 = VDEF <.MEM_17>
w_10 = malloc (5);
test.c:438:7: warning: use location
  int *w = malloc(5);
       ^
dot graph target loc en1

dot graph target line desc form basic block 2: free (w_10);
test.c:439:2: warning: use location
  free(w);
  ^
dot graph target line desend

dot graph target loc start # .MEM_18 = VDEF <.MEM_17>
w_10 = malloc (5);
test.c:438:7: warning: use location
  int *w = malloc(5);
       ^
dot graph target loc end

dot graph target basicblock start from test22 basic block 2dot graph target basicblock en1

w_10, points-to NULL, points-to vars: { D.4131 } (nonlocal)
dot graph stmt start free (w_10);
test.c:439:2: warning: use location
  free(w);
  ^
dot graph stmt end

this stmt is child function---free-----

 ================== find ================== 
free (w_10);
test.c:439:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

====================================zzz=================================
 <ssa_name 0x7ff8bbc09870
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb77d7e0 w>
    def_stmt w_10 = malloc (5);
    version 10
    ptr-info 0x7ff8bb7865d0>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================

[40;33m =======POP node_fun stack:test22========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:boo========= [0m
[40;42m =======start_check_funciton:boo========= [0m
[40;33m =======POP node_fun stack:boo========= [0m
[40;42m =======pre add _ fucntion:child5========= [0m
[40;44m =======print_function_path child5  function_call count: 4 level :2========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;33m =======POP node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;33m =======POP node_fun stack:pthread_self========= [0m
[40;42m =======pre_check_funciton:child5========= [0m
[40;42m =======start_check_funciton:child5========= [0m
[40;33m =======POP node_fun stack:child5========= [0m
[40;42m =======pre add _ fucntion:child3========= [0m
[40;44m =======print_function_path child3  function_call count: 4 level :2========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;33m =======POP node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;33m =======POP node_fun stack:pthread_self========= [0m
[40;42m =======pre_check_funciton:child3========= [0m
[40;42m =======start_check_funciton:child3========= [0m
[40;33m =======POP node_fun stack:child3========= [0m
[40;42m =======pre add _ fucntion:child4========= [0m
[40;44m =======print_function_path child4  function_call count: 1 level :2========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre_check_funciton:child4========= [0m
[40;42m =======start_check_funciton:child4========= [0m
[40;33m =======POP node_fun stack:child4========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:foo========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path foo  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:foo2========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path foo2  function_call count: 4 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;44m =======print_function_path foo3  function_call count: 2 level :4========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:foo3========= [0m
[40;42m =======start_check_funciton:foo3========= [0m
 <function_decl 0x7ff8bb759600 foo3
    type <function_type 0x7ff8bb753930
        type <void_type 0x7ff8bbc15f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bbc1c0a8>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7ff8bb752a78 value <pointer_type 0x7ff8bbc1ca80>
            chain <tree_list 0x7ff8bbc14ac8 value <void_type 0x7ff8bbc15f18 void>>>
        pointer_to_this <pointer_type 0x7ff8bb7609d8>>
    addressable nothrow static function-specific-target function-specific-opt QI file test.c line 47 col 6 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> attributes <tree_list 0x7ff8bb7529d8> initial <block 0x7ff8bb76b2a0>
    result <result_decl 0x7ff8bbc0c2d0 D.4050 type <void_type 0x7ff8bbc15f18 void>
        ignored VOID file test.c line 47 col 6
        align 8 context <function_decl 0x7ff8bb759600 foo3>>
    arguments <parm_decl 0x7ff8bb762680 z
        type <pointer_type 0x7ff8bbc1ca80 type <integer_type 0x7ff8bbc155e8 int>
            public unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bb760738>>
        unsigned DI file test.c line 47 col 16 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb759600 foo3> arg-type <pointer_type 0x7ff8bbc1ca80>>
    struct-function 0x7ff8bb76c0b0>
 <ssa_name 0x7ff8bbc09dc8
    type <pointer_type 0x7ff8bbc1c0a8
        type <void_type 0x7ff8bbc15f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bbc1c0a8>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb753348>>
   
    def_stmt _1 = malloc (1);
    version 1
    ptr-info 0x7ff8bb7862d0>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry foo3
dot graph target entry end

_2 = (long int) _1;
test.c:56:6: warning: use location
   *z = malloc(1);
      ^
dot graph target loc start # .MEM_19 = VDEF <.MEM_17(D)>
_1 = malloc (1);
test.c:56:8: warning: use location
   *z = malloc(1);
        ^
dot graph target loc en1

dot graph target line desc form basic block 3: _2 = (long int) _1;
test.c:56:6: warning: use location
   *z = malloc(1);
      ^
dot graph target line desend

dot graph target loc start # .MEM_19 = VDEF <.MEM_17(D)>
_1 = malloc (1);
test.c:56:8: warning: use location
   *z = malloc(1);
        ^
dot graph target loc end

dot graph target basicblock start from foo3 basic block 3dot graph target basicblock en1

_1, points-to NULL, points-to vars: { D.4122 } (nonlocal, escaped, escaped heap)
dot graph stmt start _2 = (long int) _1;
test.c:56:6: warning: use location
   *z = malloc(1);
      ^
dot graph stmt end

dot graph entry foo3
dot graph target entry end

_3 = (int) _2;
test.c:56:6: warning: use location
dot graph target loc start # .MEM_19 = VDEF <.MEM_17(D)>
_1 = malloc (1);
test.c:56:8: warning: use location
   *z = malloc(1);
        ^
dot graph target loc en1

dot graph target line desc form basic block 3: _3 = (int) _2;
test.c:56:6: warning: use location
   *z = malloc(1);
      ^
dot graph target line desend

dot graph target loc start # .MEM_19 = VDEF <.MEM_17(D)>
_1 = malloc (1);
test.c:56:8: warning: use location
   *z = malloc(1);
        ^
dot graph target loc end

dot graph target basicblock start from foo3 basic block 3dot graph target basicblock en1

_1, points-to NULL, points-to vars: { D.4122 } (nonlocal, escaped, escaped heap)
dot graph stmt start _3 = (int) _2;
test.c:56:6: warning: use location
   *z = malloc(1);
      ^
dot graph stmt end

dot graph entry foo3
dot graph target entry end

*z_11(D) = _3;
test.c:56:6: warning: use location
dot graph target loc start # .MEM_19 = VDEF <.MEM_17(D)>
_1 = malloc (1);
test.c:56:8: warning: use location
   *z = malloc(1);
        ^
dot graph target loc en1

dot graph target line desc form basic block 3: *z_11(D) = _3;
test.c:56:6: warning: use location
   *z = malloc(1);
      ^
dot graph target line desend

dot graph target loc start # .MEM_19 = VDEF <.MEM_17(D)>
_1 = malloc (1);
test.c:56:8: warning: use location
   *z = malloc(1);
        ^
dot graph target loc end

dot graph target basicblock start from foo3 basic block 3dot graph target basicblock en1

_1, points-to NULL, points-to vars: { D.4122 } (nonlocal, escaped, escaped heap)
dot graph stmt start *z_11(D) = _3;
test.c:56:6: warning: use location
   *z = malloc(1);
      ^
dot graph stmt end


====================================zzz=================================
 <ssa_name 0x7ff8bbc09dc8
    type <pointer_type 0x7ff8bbc1c0a8
        type <void_type 0x7ff8bbc15f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bbc1c0a8>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb753348>>
   
    def_stmt _1 = malloc (1);
    version 1
    ptr-info 0x7ff8bb7862d0>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
 <function_decl 0x7ff8bb759600 foo3
    type <function_type 0x7ff8bb753930
        type <void_type 0x7ff8bbc15f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bbc1c0a8>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7ff8bb752a78 value <pointer_type 0x7ff8bbc1ca80>
            chain <tree_list 0x7ff8bbc14ac8 value <void_type 0x7ff8bbc15f18 void>>>
        pointer_to_this <pointer_type 0x7ff8bb7609d8>>
    addressable nothrow static function-specific-target function-specific-opt QI file test.c line 47 col 6 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> attributes <tree_list 0x7ff8bb7529d8> initial <block 0x7ff8bb76b2a0>
    result <result_decl 0x7ff8bbc0c2d0 D.4050 type <void_type 0x7ff8bbc15f18 void>
        ignored VOID file test.c line 47 col 6
        align 8 context <function_decl 0x7ff8bb759600 foo3>>
    arguments <parm_decl 0x7ff8bb762680 z
        type <pointer_type 0x7ff8bbc1ca80 type <integer_type 0x7ff8bbc155e8 int>
            public unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bb760738>>
        unsigned DI file test.c line 47 col 16 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb759600 foo3> arg-type <pointer_type 0x7ff8bbc1ca80>>
    struct-function 0x7ff8bb76c0b0>
 <ssa_name 0x7ff8bbc09f30
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb771090 p2>
    def_stmt p2_9 = malloc (2);
    version 9
    ptr-info 0x7ff8bb786300>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry foo3
dot graph target entry end

p2_4 = PHI <p2_13(D)(3), p2_9(4)>
lto1: warning: use location
dot graph target loc start # .MEM_18 = VDEF <.MEM_17(D)>
p2_9 = malloc (2);
test.c:59:6: warning: use location
   p2 = malloc(2);
      ^
dot graph target loc en1

dot graph target line desc form basic block 5: p2_4 = PHI <p2_13(D)(3), p2_9(4)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_18 = VDEF <.MEM_17(D)>
p2_9 = malloc (2);
test.c:59:6: warning: use location
dot graph target loc end

dot graph target basicblock start from foo3 basic block 5dot graph target basicblock en1

p2_9, points-to NULL, points-to vars: { D.4123 } (nonlocal, escaped, escaped heap)
dot graph stmt start p2_4 = PHI <p2_13(D)(3), p2_9(4)>
p2_9 = malloc (2);
dot graph stmt end

dot graph stmt start p2_4 = PHI <p2_13(D)(3), p2_9(4)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry foo3
dot graph target entry end

_15 = __printf_chk (1, "%d", p2_4);
dot graph target loc start # .MEM_18 = VDEF <.MEM_17(D)>
p2_9 = malloc (2);
test.c:59:6: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 5: _15 = __printf_chk (1, "%d", p2_4);
dot graph target line desend

dot graph target loc start # .MEM_18 = VDEF <.MEM_17(D)>
p2_9 = malloc (2);
test.c:59:6: warning: use location
dot graph target loc end

dot graph target basicblock start from foo3 basic block 5dot graph target basicblock en1

p2_9, points-to NULL, points-to vars: { D.4123 } (nonlocal, escaped, escaped heap)
dot graph stmt start _15 = __printf_chk (1, "%d", p2_4);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ff8bbc09f30
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb771090 p2>
    def_stmt p2_9 = malloc (2);
    version 9
    ptr-info 0x7ff8bb786300>
trace fucntion name:__printf_chk 

 ================== trace ================== 
dot graph entry foo3
dot graph target entry end

*p2_4 = 10;
test.c:60:8: warning: use location
  p2[0] = 10;
        ^
dot graph target loc start # .MEM_18 = VDEF <.MEM_17(D)>
p2_9 = malloc (2);
test.c:59:6: warning: use location
   p2 = malloc(2);
      ^
dot graph target loc en1

dot graph target line desc form basic block 5: *p2_4 = 10;
test.c:60:8: warning: use location
  p2[0] = 10;
        ^
dot graph target line desend

dot graph target loc start # .MEM_18 = VDEF <.MEM_17(D)>
p2_9 = malloc (2);
test.c:59:6: warning: use location
   p2 = malloc(2);
      ^
dot graph target loc end

dot graph target basicblock start from foo3 basic block 5dot graph target basicblock en1

p2_9, points-to NULL, points-to vars: { D.4123 } (nonlocal, escaped, escaped heap)
dot graph stmt start *p2_4 = 10;
test.c:60:8: warning: use location
  p2[0] = 10;
        ^
dot graph stmt end


====================================zzz=================================
 <ssa_name 0x7ff8bbc09f30
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb771090 p2>
    def_stmt p2_9 = malloc (2);
    version 9
    ptr-info 0x7ff8bb786300>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:foo3========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;33m =======POP node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:foo2========= [0m
[40;42m =======start_check_funciton:foo2========= [0m
 <function_decl 0x7ff8bb759500 foo2
    type <function_type 0x7ff8bb753b28
        type <pointer_type 0x7ff8bbc1ca80 type <integer_type 0x7ff8bbc155e8 int>
            public unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bb760738>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7ff8bb752bb8 value <integer_type 0x7ff8bbc155e8 int>
            chain <tree_list 0x7ff8bbc14ac8 value <void_type 0x7ff8bbc15f18 void>>>
        pointer_to_this <pointer_type 0x7ff8bb760930>>
    addressable nothrow static function-specific-target function-specific-opt QI file test.c line 63 col 6 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> attributes <tree_list 0x7ff8bb7529d8> initial <block 0x7ff8bb76b3c0>
    result <result_decl 0x7ff8bbc0c348 D.4055 type <pointer_type 0x7ff8bbc1ca80>
        unsigned ignored DI file test.c line 63 col 6 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb759500 foo2>>
    arguments <parm_decl 0x7ff8bb762700 z
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        SI file test.c line 63 col 15 size <integer_cst 0x7ff8bbc01e28 32> unit size <integer_cst 0x7ff8bbc01e40 4>
        align 32 context <function_decl 0x7ff8bb759500 foo2> arg-type <integer_type 0x7ff8bbc155e8 int>>
    struct-function 0x7ff8bb76c160>
 <ssa_name 0x7ff8bb774480
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb771480 a2>
    def_stmt a2_13 = malloc (_1);
    version 13
    ptr-info 0x7ff8bb7863c0>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

====================================zzz=================================
 <ssa_name 0x7ff8bb774480
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb771480 a2>
    def_stmt a2_13 = malloc (_1);
    version 13
    ptr-info 0x7ff8bb7863c0>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m
test.c:66:7: warning: use location
  int *a2 = malloc(z);
       ^

======================================================================
 <function_decl 0x7ff8bb759500 foo2
    type <function_type 0x7ff8bb753b28
        type <pointer_type 0x7ff8bbc1ca80 type <integer_type 0x7ff8bbc155e8 int>
            public unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bb760738>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7ff8bb752bb8 value <integer_type 0x7ff8bbc155e8 int>
            chain <tree_list 0x7ff8bbc14ac8 value <void_type 0x7ff8bbc15f18 void>>>
        pointer_to_this <pointer_type 0x7ff8bb760930>>
    addressable nothrow static function-specific-target function-specific-opt QI file test.c line 63 col 6 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> attributes <tree_list 0x7ff8bb7529d8> initial <block 0x7ff8bb76b3c0>
    result <result_decl 0x7ff8bbc0c348 D.4055 type <pointer_type 0x7ff8bbc1ca80>
        unsigned ignored DI file test.c line 63 col 6 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb759500 foo2>>
    arguments <parm_decl 0x7ff8bb762700 z
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        SI file test.c line 63 col 15 size <integer_cst 0x7ff8bbc01e28 32> unit size <integer_cst 0x7ff8bbc01e40 4>
        align 32 context <function_decl 0x7ff8bb759500 foo2> arg-type <integer_type 0x7ff8bbc155e8 int>>
    struct-function 0x7ff8bb76c160>
 <ssa_name 0x7ff8bb7744c8
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb7713f0 p3>
    def_stmt p3_15 = malloc (_2);
    version 15
    ptr-info 0x7ff8bb7863d8>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry foo2
dot graph target entry end

_8 = PHI <p3_15(3), p4_17(4)>
lto1: warning: use location
dot graph target loc start # .MEM_37 = VDEF <.MEM_36>
p3_15 = malloc (_2);
test.c:67:7: warning: use location
  int *p3 = malloc(z);
       ^
dot graph target loc en1

dot graph target line desc form basic block 5: _8 = PHI <p3_15(3), p4_17(4)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_37 = VDEF <.MEM_36>
p3_15 = malloc (_2);
test.c:67:7: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 5dot graph target basicblock en1

p3_15, points-to NULL, points-to vars: { D.4125 } (nonlocal, escaped, escaped heap)
dot graph stmt start _8 = PHI <p3_15(3), p4_17(4)>
p3_15 = malloc (_2);
dot graph stmt end

dot graph stmt start _8 = PHI <p3_15(3), p4_17(4)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry foo2
dot graph target entry end

_33 = p3_15;
test.c:86:10: warning: use location
   return p3;
          ^
dot graph target loc start # .MEM_37 = VDEF <.MEM_36>
p3_15 = malloc (_2);
test.c:67:7: warning: use location
  int *p3 = malloc(z);
       ^
dot graph target loc en1

dot graph target line desc form basic block 3: _33 = p3_15;
test.c:86:10: warning: use location
   return p3;
          ^
dot graph target line desend

dot graph target loc start # .MEM_37 = VDEF <.MEM_36>
p3_15 = malloc (_2);
test.c:67:7: warning: use location
  int *p3 = malloc(z);
       ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 3dot graph target basicblock en1

p3_15, points-to NULL, points-to vars: { D.4125 } (nonlocal, escaped, escaped heap)
dot graph stmt start _33 = p3_15;
test.c:86:10: warning: use location
   return p3;
          ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

free (p3_15);
test.c:85:3: warning: use location
   free(p3);
   ^
dot graph target loc start # .MEM_37 = VDEF <.MEM_36>
p3_15 = malloc (_2);
test.c:67:7: warning: use location
  int *p3 = malloc(z);
       ^
dot graph target loc en1

dot graph target line desc form basic block 3: free (p3_15);
test.c:85:3: warning: use location
   free(p3);
   ^
dot graph target line desend

dot graph target loc start # .MEM_37 = VDEF <.MEM_36>
p3_15 = malloc (_2);
test.c:67:7: warning: use location
  int *p3 = malloc(z);
       ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 3dot graph target basicblock en1

p3_15, points-to NULL, points-to vars: { D.4125 } (nonlocal, escaped, escaped heap)
dot graph stmt start free (p3_15);
test.c:85:3: warning: use location
   free(p3);
   ^
dot graph stmt end

this stmt is child function---free-----

 ================== find ================== 
free (p3_15);
test.c:85:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
dot graph entry foo2
dot graph target entry end

*p3_15 = 10;
test.c:84:9: warning: use location
   p3[0] = 10;
         ^
dot graph target loc start # .MEM_37 = VDEF <.MEM_36>
p3_15 = malloc (_2);
test.c:67:7: warning: use location
  int *p3 = malloc(z);
       ^
dot graph target loc en1

dot graph target line desc form basic block 3: *p3_15 = 10;
test.c:84:9: warning: use location
   p3[0] = 10;
         ^
dot graph target line desend

dot graph target loc start # .MEM_37 = VDEF <.MEM_36>
p3_15 = malloc (_2);
test.c:67:7: warning: use location
  int *p3 = malloc(z);
       ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 3dot graph target basicblock en1

p3_15, points-to NULL, points-to vars: { D.4125 } (nonlocal, escaped, escaped heap)
dot graph stmt start *p3_15 = 10;
test.c:84:9: warning: use location
   p3[0] = 10;
         ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

foo3 (p3_15);
test.c:79:2: warning: use location
  foo3(p3);
  ^
dot graph target loc start # .MEM_37 = VDEF <.MEM_36>
p3_15 = malloc (_2);
test.c:67:7: warning: use location
  int *p3 = malloc(z);
       ^
dot graph target loc en1

dot graph target line desc form basic block 2: foo3 (p3_15);
test.c:79:2: warning: use location
  foo3(p3);
  ^
dot graph target line desend

dot graph target loc start # .MEM_37 = VDEF <.MEM_36>
p3_15 = malloc (_2);
test.c:67:7: warning: use location
  int *p3 = malloc(z);
       ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

p3_15, points-to NULL, points-to vars: { D.4125 } (nonlocal, escaped, escaped heap)
dot graph stmt start foo3 (p3_15);
test.c:79:2: warning: use location
  foo3(p3);
  ^
dot graph stmt end

this stmt is child function---foo3-----

 ================== trace ================== 
 <ssa_name 0x7ff8bb7744c8
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb7713f0 p3>
    def_stmt p3_15 = malloc (_2);
    version 15
    ptr-info 0x7ff8bb7863d8>
trace fucntion name:foo3 
[40;44m =======trace_function_path foo3  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:foo3========= [0m
[40;36m ======= find relate stmt with p3 ========= [0m
[40;36m ======= relate stmt argument:p3 ========= [0m

====================================ffff=================================
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 

====================================zzz=================================
 <ssa_name 0x7ff8bb7744c8
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb7713f0 p3>
    def_stmt p3_15 = malloc (_2);
    version 15
    ptr-info 0x7ff8bb7863d8>

 ================== Start Use after free Check ================== 
# .MEM_51 = VDEF <.MEM_50>
free (p3_15);
test.c:85:3: warning: Use after free error!: free location 
   free(p3);
   ^
_8 = PHI <p3_15(3), p4_17(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_51 = VDEF <.MEM_50>
free (p3_15);
test.c:85:3: warning: Use after free error!: free location 
_33 = p3_15;
test.c:86:10: warning: use location
   return p3;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================

 <function_decl 0x7ff8bb759500 foo2
    type <function_type 0x7ff8bb753b28
        type <pointer_type 0x7ff8bbc1ca80 type <integer_type 0x7ff8bbc155e8 int>
            public unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bb760738>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7ff8bb752bb8 value <integer_type 0x7ff8bbc155e8 int>
            chain <tree_list 0x7ff8bbc14ac8 value <void_type 0x7ff8bbc15f18 void>>>
        pointer_to_this <pointer_type 0x7ff8bb760930>>
    addressable nothrow static function-specific-target function-specific-opt QI file test.c line 63 col 6 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> attributes <tree_list 0x7ff8bb7529d8> initial <block 0x7ff8bb76b3c0>
    result <result_decl 0x7ff8bbc0c348 D.4055 type <pointer_type 0x7ff8bbc1ca80>
        unsigned ignored DI file test.c line 63 col 6 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb759500 foo2>>
    arguments <parm_decl 0x7ff8bb762700 z
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        SI file test.c line 63 col 15 size <integer_cst 0x7ff8bbc01e28 32> unit size <integer_cst 0x7ff8bbc01e40 4>
        align 32 context <function_decl 0x7ff8bb759500 foo2> arg-type <integer_type 0x7ff8bbc155e8 int>>
    struct-function 0x7ff8bb76c160>
 <ssa_name 0x7ff8bb774510
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb771360 p4>
    def_stmt p4_17 = malloc (_3);
    version 17
    ptr-info 0x7ff8bb7863f0>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry foo2
dot graph target entry end

_8 = PHI <p3_15(3), p4_17(4)>
lto1: warning: use location
dot graph target loc start # .MEM_38 = VDEF <.MEM_37>
p4_17 = malloc (_3);
test.c:68:7: warning: use location
  int *p4 = malloc(z);
       ^
dot graph target loc en1

dot graph target line desc form basic block 5: _8 = PHI <p3_15(3), p4_17(4)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_38 = VDEF <.MEM_37>
p4_17 = malloc (_3);
test.c:68:7: warning: use location
dot graph target loc end

dot graph target basicblock start from foo2 basic block 5dot graph target basicblock en1

p4_17, points-to NULL, points-to vars: { D.4126 } (nonlocal, escaped, escaped heap)
dot graph stmt start _8 = PHI <p3_15(3), p4_17(4)>
p4_17 = malloc (_3);
dot graph stmt end

dot graph stmt start _8 = PHI <p3_15(3), p4_17(4)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry foo2
dot graph target entry end

_29 = p4_17;
test.c:92:10: warning: use location
   return p4;
          ^
dot graph target loc start # .MEM_38 = VDEF <.MEM_37>
p4_17 = malloc (_3);
test.c:68:7: warning: use location
  int *p4 = malloc(z);
       ^
dot graph target loc en1

dot graph target line desc form basic block 4: _29 = p4_17;
test.c:92:10: warning: use location
   return p4;
          ^
dot graph target line desend

dot graph target loc start # .MEM_38 = VDEF <.MEM_37>
p4_17 = malloc (_3);
test.c:68:7: warning: use location
  int *p4 = malloc(z);
       ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 4dot graph target basicblock en1

p4_17, points-to NULL, points-to vars: { D.4126 } (nonlocal, escaped, escaped heap)
dot graph stmt start _29 = p4_17;
test.c:92:10: warning: use location
   return p4;
          ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

free (p4_17);
test.c:91:3: warning: use location
   free(p4);
   ^
dot graph target loc start # .MEM_38 = VDEF <.MEM_37>
p4_17 = malloc (_3);
test.c:68:7: warning: use location
  int *p4 = malloc(z);
       ^
dot graph target loc en1

dot graph target line desc form basic block 4: free (p4_17);
test.c:91:3: warning: use location
   free(p4);
   ^
dot graph target line desend

dot graph target loc start # .MEM_38 = VDEF <.MEM_37>
p4_17 = malloc (_3);
test.c:68:7: warning: use location
  int *p4 = malloc(z);
       ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 4dot graph target basicblock en1

p4_17, points-to NULL, points-to vars: { D.4126 } (nonlocal, escaped, escaped heap)
dot graph stmt start free (p4_17);
test.c:91:3: warning: use location
   free(p4);
   ^
dot graph stmt end

this stmt is child function---free-----

 ================== find ================== 
free (p4_17);
test.c:91:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
dot graph entry foo2
dot graph target entry end

*p4_17 = 10;
test.c:90:9: warning: use location
   p4[0] = 10;
         ^
dot graph target loc start # .MEM_38 = VDEF <.MEM_37>
p4_17 = malloc (_3);
test.c:68:7: warning: use location
  int *p4 = malloc(z);
       ^
dot graph target loc en1

dot graph target line desc form basic block 4: *p4_17 = 10;
test.c:90:9: warning: use location
   p4[0] = 10;
         ^
dot graph target line desend

dot graph target loc start # .MEM_38 = VDEF <.MEM_37>
p4_17 = malloc (_3);
test.c:68:7: warning: use location
  int *p4 = malloc(z);
       ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 4dot graph target basicblock en1

p4_17, points-to NULL, points-to vars: { D.4126 } (nonlocal, escaped, escaped heap)
dot graph stmt start *p4_17 = 10;
test.c:90:9: warning: use location
   p4[0] = 10;
         ^
dot graph stmt end


====================================zzz=================================
 <ssa_name 0x7ff8bb774510
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb771360 p4>
    def_stmt p4_17 = malloc (_3);
    version 17
    ptr-info 0x7ff8bb7863f0>

 ================== Start Use after free Check ================== 
# .MEM_48 = VDEF <.MEM_47>
free (p4_17);
test.c:91:3: warning: Use after free error!: free location 
   free(p4);
   ^
_8 = PHI <p3_15(3), p4_17(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_48 = VDEF <.MEM_47>
free (p4_17);
test.c:91:3: warning: Use after free error!: free location 
_29 = p4_17;
test.c:92:10: warning: use location
   return p4;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================

 <function_decl 0x7ff8bb759500 foo2
    type <function_type 0x7ff8bb753b28
        type <pointer_type 0x7ff8bbc1ca80 type <integer_type 0x7ff8bbc155e8 int>
            public unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bb760738>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7ff8bb752bb8 value <integer_type 0x7ff8bbc155e8 int>
            chain <tree_list 0x7ff8bbc14ac8 value <void_type 0x7ff8bbc15f18 void>>>
        pointer_to_this <pointer_type 0x7ff8bb760930>>
    addressable nothrow static function-specific-target function-specific-opt QI file test.c line 63 col 6 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> attributes <tree_list 0x7ff8bb7529d8> initial <block 0x7ff8bb76b3c0>
    result <result_decl 0x7ff8bbc0c348 D.4055 type <pointer_type 0x7ff8bbc1ca80>
        unsigned ignored DI file test.c line 63 col 6 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb759500 foo2>>
    arguments <parm_decl 0x7ff8bb762700 z
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        SI file test.c line 63 col 15 size <integer_cst 0x7ff8bbc01e28 32> unit size <integer_cst 0x7ff8bbc01e40 4>
        align 32 context <function_decl 0x7ff8bb759500 foo2> arg-type <integer_type 0x7ff8bbc155e8 int>>
    struct-function 0x7ff8bb76c160>
 <ssa_name 0x7ff8bb7742d0
    type <pointer_type 0x7ff8bbc1c0a8
        type <void_type 0x7ff8bbc15f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bbc1c0a8>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb753348>>
   
    def_stmt _4 = malloc (200);
    version 4
    ptr-info 0x7ff8bb786348>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry foo2
dot graph target entry end

p99 = _4;
test.c:69:6: warning: use location
  p99 = malloc(200);
      ^
dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc en1

dot graph target line desc form basic block 2: p99 = _4;
test.c:69:6: warning: use location
  p99 = malloc(200);
      ^
dot graph target line desend

dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

_4, points-to NULL, points-to vars: { D.4127 } (nonlocal, escaped, escaped heap)
dot graph stmt start p99 = _4;
test.c:69:6: warning: use location
  p99 = malloc(200);
      ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

_5 = p99;
test.c:70:5: warning: use location
  p99[0] = 99;
     ^
dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc en1

dot graph target line desc form basic block 2: _5 = p99;
test.c:70:5: warning: use location
  p99[0] = 99;
     ^
dot graph target line desend

dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

_4, points-to NULL, points-to vars: { D.4127 } (nonlocal, escaped, escaped heap)
dot graph stmt start _5 = p99;
test.c:70:5: warning: use location
  p99[0] = 99;
     ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

*_5 = 99;
test.c:70:9: warning: use location
  p99[0] = 99;
         ^
dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc en1

dot graph target line desc form basic block 2: *_5 = 99;
test.c:70:9: warning: use location
  p99[0] = 99;
         ^
dot graph target line desend

dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

_4, points-to NULL, points-to vars: { D.4127 } (nonlocal, escaped, escaped heap)
dot graph stmt start *_5 = 99;
test.c:70:9: warning: use location
  p99[0] = 99;
         ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

_6 = p99;
test.c:71:5: warning: use location
  p99[1] = 100;
     ^
dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc en1

dot graph target line desc form basic block 2: _6 = p99;
test.c:71:5: warning: use location
  p99[1] = 100;
     ^
dot graph target line desend

dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

_4, points-to NULL, points-to vars: { D.4127 } (nonlocal, escaped, escaped heap)
dot graph stmt start _6 = p99;
test.c:71:5: warning: use location
  p99[1] = 100;
     ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

MEM[(int *)_6 + 4B] = 100;
test.c:71:9: warning: use location
  p99[1] = 100;
         ^
dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc en1

dot graph target line desc form basic block 2: MEM[(int *)_6 + 4B] = 100;
test.c:71:9: warning: use location
  p99[1] = 100;
         ^
dot graph target line desend

dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

_4, points-to NULL, points-to vars: { D.4127 } (nonlocal, escaped, escaped heap)
dot graph stmt start MEM[(int *)_6 + 4B] = 100;
test.c:71:9: warning: use location
  p99[1] = 100;
         ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

_7 = p99;
test.c:82:6: warning: use location
   p99[1] = 200;
      ^
dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc en1

dot graph target line desc form basic block 3: _7 = p99;
test.c:82:6: warning: use location
   p99[1] = 200;
      ^
dot graph target line desend

dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 3dot graph target basicblock en1

_4, points-to NULL, points-to vars: { D.4127 } (nonlocal, escaped, escaped heap)
dot graph stmt start _7 = p99;
test.c:82:6: warning: use location
   p99[1] = 200;
      ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

MEM[(int *)_7 + 4B] = 200;
test.c:82:10: warning: use location
   p99[1] = 200;
          ^
dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc en1

dot graph target line desc form basic block 3: MEM[(int *)_7 + 4B] = 200;
test.c:82:10: warning: use location
   p99[1] = 200;
          ^
dot graph target line desend

dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 3dot graph target basicblock en1

_4, points-to NULL, points-to vars: { D.4127 } (nonlocal, escaped, escaped heap)
dot graph stmt start MEM[(int *)_7 + 4B] = 200;
test.c:82:10: warning: use location
   p99[1] = 200;
          ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

_1 = p99;
test.c:123:6: warning: use location
   p99[1] = 1000;
      ^
dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc en1

dot graph target line desc form basic block 2: _1 = p99;
test.c:123:6: warning: use location
   p99[1] = 1000;
      ^
dot graph target line desend

dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

_4, points-to NULL, points-to vars: { D.4127 } (nonlocal, escaped, escaped heap)
dot graph target basicblock star1 from foo basic block 2dot graph target basicblock end

dot graph stmt start _1 = p99;
test.c:123:6: warning: use location
   p99[1] = 1000;
      ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

MEM[(int *)_1 + 4B] = 1000;
test.c:123:10: warning: use location
   p99[1] = 1000;
          ^
dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc en1

dot graph target line desc form basic block 2: MEM[(int *)_1 + 4B] = 1000;
test.c:123:10: warning: use location
   p99[1] = 1000;
          ^
dot graph target line desend

dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

_4, points-to NULL, points-to vars: { D.4127 } (nonlocal, escaped, escaped heap)
dot graph target basicblock star1 from foo basic block 2dot graph target basicblock end

dot graph stmt start MEM[(int *)_1 + 4B] = 1000;
test.c:123:10: warning: use location
   p99[1] = 1000;
          ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

_2 = p99;
test.c:124:6: warning: use location
   p99[2] = 200;
      ^
dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc en1

dot graph target line desc form basic block 2: _2 = p99;
test.c:124:6: warning: use location
   p99[2] = 200;
      ^
dot graph target line desend

dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

_4, points-to NULL, points-to vars: { D.4127 } (nonlocal, escaped, escaped heap)
dot graph target basicblock star1 from foo basic block 2dot graph target basicblock end

dot graph stmt start _2 = p99;
test.c:124:6: warning: use location
   p99[2] = 200;
      ^
dot graph stmt end

dot graph entry foo2
dot graph target entry end

MEM[(int *)_2 + 8B] = 200;
test.c:124:10: warning: use location
   p99[2] = 200;
          ^
dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc en1

dot graph target line desc form basic block 2: MEM[(int *)_2 + 8B] = 200;
test.c:124:10: warning: use location
   p99[2] = 200;
          ^
dot graph target line desend

dot graph target loc start # .MEM_39 = VDEF <.MEM_38>
_4 = malloc (200);
test.c:69:8: warning: use location
  p99 = malloc(200);
        ^
dot graph target loc end

dot graph target basicblock start from foo2 basic block 2dot graph target basicblock en1

_4, points-to NULL, points-to vars: { D.4127 } (nonlocal, escaped, escaped heap)
dot graph target basicblock star1 from foo basic block 2dot graph target basicblock end

dot graph stmt start MEM[(int *)_2 + 8B] = 200;
test.c:124:10: warning: use location
   p99[2] = 200;
          ^
dot graph stmt end


====================================zzz=================================
 <ssa_name 0x7ff8bb7742d0
    type <pointer_type 0x7ff8bbc1c0a8
        type <void_type 0x7ff8bbc15f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bbc1c0a8>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb753348>>
   
    def_stmt _4 = malloc (200);
    version 4
    ptr-info 0x7ff8bb786348>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:foo2========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:foo========= [0m
[40;42m =======thread job funciton:foo========= [0m
[40;44m ======= print pthread lock stmt 666 ========  [0m
# .MEM_40 = VDEF <.MEM_39(D)>
pthread_mutex_lock (&mLock);
test.c:168:2: warning: use location
  pthread_mutex_lock(&mLock);
  ^
[40;44m ======= print pthread lock stmt 666 ========  [0m
# .MEM_41 = VDEF <.MEM_40>
pthread_mutex_lock (&mLock);
test.c:169:2: warning: use location
  pthread_mutex_lock(&mLock);
  ^
[40;44m ======= print pthread lock stmt 666 ========  [0m
# .MEM_61 = VDEF <.MEM_60>
pthread_mutex_unlock (&mLock);
test.c:197:2: warning: use location
  pthread_mutex_unlock(&mLock);
  ^
[40;42m =======thread job funciton lock count :3========= [0m
[40;42m =======start_check_funciton:foo========= [0m
 <function_decl 0x7ff8bb759400 foo
    type <function_type 0x7ff8bb753b28
        type <pointer_type 0x7ff8bbc1ca80 type <integer_type 0x7ff8bbc155e8 int>
            public unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bb760738>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7ff8bb752bb8 value <integer_type 0x7ff8bbc155e8 int>
            chain <tree_list 0x7ff8bbc14ac8 value <void_type 0x7ff8bbc15f18 void>>>
        pointer_to_this <pointer_type 0x7ff8bb760930>>
    addressable nothrow static function-specific-target function-specific-opt QI file test.c line 118 col 6 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> attributes <tree_list 0x7ff8bb7529d8> initial <block 0x7ff8bb76b420>
    result <result_decl 0x7ff8bbc0c3c0 D.4062 type <pointer_type 0x7ff8bbc1ca80>
        unsigned ignored DI file test.c line 118 col 6 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb759400 foo>>
    arguments <parm_decl 0x7ff8bb762800 z
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        SI file test.c line 118 col 14 size <integer_cst 0x7ff8bbc01e28 32> unit size <integer_cst 0x7ff8bbc01e40 4>
        align 32 context <function_decl 0x7ff8bb759400 foo> arg-type <integer_type 0x7ff8bbc155e8 int>>
    struct-function 0x7ff8bb76c210>
 <ssa_name 0x7ff8bb774c18
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb771b40 p2>
    def_stmt p2_5 = malloc (1);
    version 5
    ptr-info 0x7ff8bb786468>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry foo
dot graph target entry end

*p2_5 = 1;
test.c:122:8: warning: use location
  p2[0] = 1;
        ^
dot graph target loc start # .MEM_13 = VDEF <.MEM_12(D)>
p2_5 = malloc (1);
test.c:121:7: warning: use location
  int *p2 = malloc(1);
       ^
dot graph target loc en1

dot graph target line desc form basic block 2: *p2_5 = 1;
test.c:122:8: warning: use location
  p2[0] = 1;
        ^
dot graph target line desend

dot graph target loc start # .MEM_13 = VDEF <.MEM_12(D)>
p2_5 = malloc (1);
test.c:121:7: warning: use location
  int *p2 = malloc(1);
       ^
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

p2_5, points-to NULL, points-to vars: { D.4128 } (nonlocal, escaped, escaped heap)
dot graph stmt start *p2_5 = 1;
test.c:122:8: warning: use location
  p2[0] = 1;
        ^
dot graph stmt end

 
 LOCAL VARIBALE  
# .MEM_14 = VDEF <.MEM_13>
*p2_5 = 1;
test.c:122:8: warning: use location
 
 LOCAL VARIBALE  

====================================zzz=================================
 <ssa_name 0x7ff8bb774c18
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb771b40 p2>
    def_stmt p2_5 = malloc (1);
    version 5
    ptr-info 0x7ff8bb786468>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
 <function_decl 0x7ff8bb759400 foo
    type <function_type 0x7ff8bb753b28
        type <pointer_type 0x7ff8bbc1ca80 type <integer_type 0x7ff8bbc155e8 int>
            public unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bb760738>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7ff8bb752bb8 value <integer_type 0x7ff8bbc155e8 int>
            chain <tree_list 0x7ff8bbc14ac8 value <void_type 0x7ff8bbc15f18 void>>>
        pointer_to_this <pointer_type 0x7ff8bb760930>>
    addressable nothrow static function-specific-target function-specific-opt QI file test.c line 118 col 6 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> attributes <tree_list 0x7ff8bb7529d8> initial <block 0x7ff8bb76b420>
    result <result_decl 0x7ff8bbc0c3c0 D.4062 type <pointer_type 0x7ff8bbc1ca80>
        unsigned ignored DI file test.c line 118 col 6 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb759400 foo>>
    arguments <parm_decl 0x7ff8bb762800 z
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        SI file test.c line 118 col 14 size <integer_cst 0x7ff8bbc01e28 32> unit size <integer_cst 0x7ff8bbc01e40 4>
        align 32 context <function_decl 0x7ff8bb759400 foo> arg-type <integer_type 0x7ff8bbc155e8 int>>
    struct-function 0x7ff8bb76c210>
 <ssa_name 0x7ff8bb774ca8
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
   
    def_stmt _11 = foo2 (z_9(D));
    version 11
    ptr-info 0x7ff8bb786480>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:foo2 
[40;44m =======trace_function_path foo2  function_call count: 4 level :-100========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 2 level :-100========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---foo2-----
this other function ------foo2-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry foo
dot graph target entry end

return _11;
test.c:139:9: warning: use location
  return foo2(z);
         ^
dot graph target loc start # .MEM_17 = VDEF <.MEM_16>
_11 = foo2 (z_9(D));
test.c:139:9: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: return _11;
test.c:139:9: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_17 = VDEF <.MEM_16>
_11 = foo2 (z_9(D));
test.c:139:9: warning: use location
dot graph target loc end

dot graph target basicblock start from foo basic block 2dot graph target basicblock en1

_11, points-to NULL, points-to vars: { D.4125 D.4126 } (nonlocal, escaped, escaped heap)
dot graph stmt start return _11;
test.c:139:9: warning: use location
dot graph stmt end


====================================zzz=================================
 <ssa_name 0x7ff8bb774ca8
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
   
    def_stmt _11 = foo2 (z_9(D));
    version 11
    ptr-info 0x7ff8bb786480>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:foo========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;33m =======POP node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre_check_funciton:child========= [0m
[40;42m =======thread job funciton:child========= [0m
[40;44m ======= print pthread lock stmt 666 ========  [0m
# .MEM_40 = VDEF <.MEM_39(D)>
pthread_mutex_lock (&mLock);
test.c:168:2: warning: use location
  pthread_mutex_lock(&mLock);
  ^
[40;44m ======= print pthread lock stmt 666 ========  [0m
# .MEM_41 = VDEF <.MEM_40>
pthread_mutex_lock (&mLock);
test.c:169:2: warning: use location
  pthread_mutex_lock(&mLock);
  ^
[40;44m ======= print pthread lock stmt 666 ========  [0m
# .MEM_61 = VDEF <.MEM_60>
pthread_mutex_unlock (&mLock);
test.c:197:2: warning: use location
  pthread_mutex_unlock(&mLock);
  ^
[40;42m =======thread job funciton lock count :3========= [0m
[40;42m =======start_check_funciton:child========= [0m
 <function_decl 0x7ff8bb754d00 child
    type <function_type 0x7ff8bb753888
        type <pointer_type 0x7ff8bbc1c0a8 type <void_type 0x7ff8bbc15f18 void>
            public unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bb753348>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7ff8bb752a00 value <pointer_type 0x7ff8bbc1c0a8>
            chain <tree_list 0x7ff8bbc14ac8 value <void_type 0x7ff8bbc15f18 void>>>
        pointer_to_this <pointer_type 0x7ff8bb7535e8>>
    addressable nothrow static function-specific-target function-specific-opt QI file test.c line 141 col 7 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> attributes <tree_list 0x7ff8bb7529d8> initial <block 0x7ff8bb76bc00>
    result <result_decl 0x7ff8bbc0c708 D.4090 type <pointer_type 0x7ff8bbc1c0a8>
        unsigned ignored DI file test.c line 141 col 7 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb754d00 child>>
    arguments <parm_decl 0x7ff8bb762d80 data type <pointer_type 0x7ff8bbc1c0a8>
        addressable unsigned DI file test.c line 141 col 19 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb754d00 child> arg-type <pointer_type 0x7ff8bbc1c0a8>>
    struct-function 0x7ff8bb76c6e0>
 <ssa_name 0x7ff8bb783510
    type <pointer_type 0x7ff8bb760738
        type <pointer_type 0x7ff8bbc1ca80 type <integer_type 0x7ff8bbc155e8 int>
            public unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bb760738>>
        public unsigned DI size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7ff8bb77df30 ppData>
    def_stmt ppData_18 = malloc (10);
    version 18
    ptr-info 0x7ff8bb7866d8>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

====================================zzz=================================
 <ssa_name 0x7ff8bb783510
    type <pointer_type 0x7ff8bb760738
        type <pointer_type 0x7ff8bbc1ca80 type <integer_type 0x7ff8bbc155e8 int>
            public unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bb760738>>
        public unsigned DI size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7ff8bb77df30 ppData>
    def_stmt ppData_18 = malloc (10);
    version 18
    ptr-info 0x7ff8bb7866d8>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m
test.c:175:8: warning: use location
  int **ppData = malloc(10);
        ^

======================================================================
 <function_decl 0x7ff8bb754d00 child
    type <function_type 0x7ff8bb753888
        type <pointer_type 0x7ff8bbc1c0a8 type <void_type 0x7ff8bbc15f18 void>
            public unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bb753348>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7ff8bb752a00 value <pointer_type 0x7ff8bbc1c0a8>
            chain <tree_list 0x7ff8bbc14ac8 value <void_type 0x7ff8bbc15f18 void>>>
        pointer_to_this <pointer_type 0x7ff8bb7535e8>>
    addressable nothrow static function-specific-target function-specific-opt QI file test.c line 141 col 7 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> attributes <tree_list 0x7ff8bb7529d8> initial <block 0x7ff8bb76bc00>
    result <result_decl 0x7ff8bbc0c708 D.4090 type <pointer_type 0x7ff8bbc1c0a8>
        unsigned ignored DI file test.c line 141 col 7 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb754d00 child>>
    arguments <parm_decl 0x7ff8bb762d80 data type <pointer_type 0x7ff8bbc1c0a8>
        addressable unsigned DI file test.c line 141 col 19 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb754d00 child> arg-type <pointer_type 0x7ff8bbc1c0a8>>
    struct-function 0x7ff8bb76c6e0>
 <ssa_name 0x7ff8bb783558
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb77de10 pData2>
    def_stmt pData2_21 = malloc (10);
    version 21
    ptr-info 0x7ff8bb7866f0>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry child
dot graph target entry end

child5 (pData2_21);
test.c:191:2: warning: use location
  child5(pData2);
  ^
dot graph target loc start # .MEM_46 = VDEF <.MEM_45>
pData2_21 = malloc (10);
test.c:177:7: warning: use location
  int *pData2 = malloc(10);
       ^
dot graph target loc en1

dot graph target line desc form basic block 2: child5 (pData2_21);
test.c:191:2: warning: use location
  child5(pData2);
  ^
dot graph target line desend

dot graph target loc start # .MEM_46 = VDEF <.MEM_45>
pData2_21 = malloc (10);
test.c:177:7: warning: use location
  int *pData2 = malloc(10);
       ^
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

pData2_21, points-to NULL, points-to vars: { D.4133 } (nonlocal, escaped, escaped heap)
dot graph stmt start child5 (pData2_21);
test.c:191:2: warning: use location
  child5(pData2);
  ^
dot graph stmt end

this stmt is child function---child5-----

 ================== trace ================== 
 <ssa_name 0x7ff8bb783558
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb77de10 pData2>
    def_stmt pData2_21 = malloc (10);
    version 21
    ptr-info 0x7ff8bb7866f0>
trace fucntion name:child5 
[40;44m =======trace_function_path child5  function_call count: 4 level :0========  [0m
# .MEM_15 = VDEF <.MEM_14>
free (pData_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (pData_6);
test.c:296:3: warning: use location
   free(pData);
   ^
[40;36m ======= node_fun:child5========= [0m
[40;36m ======= find relate stmt with pData2 ========= [0m
[40;36m ======= relate stmt argument:pData2 ========= [0m
[40;36m ======= relate node_fun argument222:pData2========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate formID : 1831165140
from child5 basic block 2dot graph end relate end

In function â€˜child5â€™:
test.c:279:8: warning: use location
  pData = pData + 1;
        ^
dot graph relate stmt start ID : 1394795494 stmt(LHS) :pData_6 = data_5(D) + 4;
test.c:279:8: warning: use location
pData_6
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
dot graph start relate formID : 1831165140
from child5 basic block 4dot graph end relate end

dot graph relate stmt start ID : 101057024 stmt(call) :free (pData_6);
test.c:296:3: warning: use location
   free(pData);
   ^
pData_6
dot graph relate end


====================================ffff=================================
 <ssa_name 0x7ff8bb783558
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb77de10 pData2>
    def_stmt pData2_21 = malloc (10);
    version 21
    ptr-info 0x7ff8bb7866f0>
# .MEM_15 = VDEF <.MEM_14>
free (pData_6);
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m

 ================== trace ================== 

====================================zzz=================================
 <ssa_name 0x7ff8bb783558
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb77de10 pData2>
    def_stmt pData2_21 = malloc (10);
    version 21
    ptr-info 0x7ff8bb7866f0>
dot graph start relate for1ID : 1831165140
from child5 basic block 4dot graph end relate end

subgraph cluster_803213364 dot graph subgraph  start ID : 101057024 stmt(relate) ï¼Œ Tree ID : 1831165140 : free (pData_6);
In function â€˜mainâ€™:
test.c:296:3: warning: use location
dot graph subgrapend


 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================

 <function_decl 0x7ff8bb754d00 child
    type <function_type 0x7ff8bb753888
        type <pointer_type 0x7ff8bbc1c0a8 type <void_type 0x7ff8bbc15f18 void>
            public unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bb753348>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7ff8bb752a00 value <pointer_type 0x7ff8bbc1c0a8>
            chain <tree_list 0x7ff8bbc14ac8 value <void_type 0x7ff8bbc15f18 void>>>
        pointer_to_this <pointer_type 0x7ff8bb7535e8>>
    addressable nothrow static function-specific-target function-specific-opt QI file test.c line 141 col 7 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> attributes <tree_list 0x7ff8bb7529d8> initial <block 0x7ff8bb76bc00>
    result <result_decl 0x7ff8bbc0c708 D.4090 type <pointer_type 0x7ff8bbc1c0a8>
        unsigned ignored DI file test.c line 141 col 7 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb754d00 child>>
    arguments <parm_decl 0x7ff8bb762d80 data type <pointer_type 0x7ff8bbc1c0a8>
        addressable unsigned DI file test.c line 141 col 19 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb754d00 child> arg-type <pointer_type 0x7ff8bbc1c0a8>>
    struct-function 0x7ff8bb76c6e0>
 <ssa_name 0x7ff8bb7834c8
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784000 a99>
    def_stmt a99_16 = foo (20);
    version 16
    ptr-info 0x7ff8bb7866c0>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:foo 
[40;44m =======trace_function_path foo  function_call count: 2 level :-100========  [0m
[40;42m =======pre add _ fucntion:foo2========= [0m
foo2 this is fucntion return value is heap-object 
foo this is fucntion return value is heap-object foo2
[40;46m =======add node_fun stack:foo2========= [0m
[40;44m =======trace_function_path foo2  function_call count: 4 level :-100========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 2 level :-100========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
this is fucntion return value is heap-object 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---foo-----
this other function ------foo-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry child
dot graph target entry end

_38 = __printf_chk (1, "asdda%d\n", a99_16);
dot graph target loc start # .MEM_42 = VDEF <.MEM_41>
a99_16 = foo (20);
test.c:171:7: warning: use location
  int *a99 = foo(20);
       ^
dot graph target loc en1

dot graph target line desc form basic block 2: _38 = __printf_chk (1, "asdda%d\n", a99_16);
dot graph target line desend

dot graph target loc start # .MEM_42 = VDEF <.MEM_41>
a99_16 = foo (20);
test.c:171:7: warning: use location
dot graph target loc end

dot graph target basicblock start from child basic block 2dot graph target basicblock en1

a99_16, points-to NULL, points-to vars: { D.4125 D.4126 } (nonlocal, escaped, escaped heap)
dot graph stmt start _38 = __printf_chk (1, "asdda%d\n", a99_16);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ff8bb7834c8
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784000 a99>
    def_stmt a99_16 = foo (20);
    version 16
    ptr-info 0x7ff8bb7866c0>
trace fucntion name:__printf_chk 

 ================== trace ================== 

====================================zzz=================================
 <ssa_name 0x7ff8bb7834c8
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784000 a99>
    def_stmt a99_16 = foo (20);
    version 16
    ptr-info 0x7ff8bb7866c0>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:child========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:child7========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path child7  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;33m =======POP node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;33m =======POP node_fun stack:pthread_self========= [0m
[40;42m =======pre_check_funciton:child7========= [0m
[40;42m =======start_check_funciton:child7========= [0m
 <function_decl 0x7ff8bb759000 child7
    type <function_type 0x7ff8bb7539d8
        type <pointer_type 0x7ff8bbc1ca80 type <integer_type 0x7ff8bbc155e8 int>
            public unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bb760738>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7ff8bb752af0 value <pointer_type 0x7ff8bbc1c0a8>
            chain <tree_list 0x7ff8bb752a00 value <pointer_type 0x7ff8bbc1c0a8>
                chain <tree_list 0x7ff8bbc14ac8 value <void_type 0x7ff8bbc15f18 void>>>>
        pointer_to_this <pointer_type 0x7ff8bb760690>>
    addressable nothrow static function-specific-target function-specific-opt QI file test.c line 346 col 6 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> attributes <tree_list 0x7ff8bb7529d8> initial <block 0x7ff8bb76b960>
    result <result_decl 0x7ff8bbc0c5a0 D.4078 type <pointer_type 0x7ff8bbc1ca80>
        unsigned ignored DI file test.c line 346 col 6 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb759000 child7>>
    arguments <parm_decl 0x7ff8bb762b00 data
        type <pointer_type 0x7ff8bbc1c0a8 type <void_type 0x7ff8bbc15f18 void>
            public unsigned DI size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bb753348>>
        unsigned DI file test.c line 346 col 19 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb759000 child7> arg-type <pointer_type 0x7ff8bbc1c0a8>
        chain <parm_decl 0x7ff8bb762b80 test type <pointer_type 0x7ff8bbc1c0a8>
            unsigned DI file test.c line 346 col 31 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
            align 64 context <function_decl 0x7ff8bb759000 child7> arg-type <pointer_type 0x7ff8bbc1c0a8>>>
    struct-function 0x7ff8bb76c4d0>
 <ssa_name 0x7ff8bb77aa20
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
   
    def_stmt _15 = malloc (10);
    version 15
    ptr-info 0x7ff8bb786588>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry child7
dot graph target entry end

_4 = PHI <_15(3), _12(4)>
lto1: warning: use location
dot graph target loc start # .MEM_24 = VDEF <.MEM_23>
_15 = malloc (10);
test.c:363:10: warning: use location
   return malloc(10);
          ^
dot graph target loc en1

dot graph target line desc form basic block 5: _4 = PHI <_15(3), _12(4)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_24 = VDEF <.MEM_23>
_15 = malloc (10);
test.c:363:10: warning: use location
dot graph target loc end

dot graph target basicblock start from child7 basic block 5dot graph target basicblock en1

_15, points-to NULL, points-to vars: { D.4129 } (nonlocal)
dot graph stmt start _4 = PHI <_15(3), _12(4)>
_15 = malloc (10);
dot graph stmt end

dot graph stmt start _4 = PHI <_15(3), _12(4)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----

====================================zzz=================================
 <ssa_name 0x7ff8bb77aa20
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
   
    def_stmt _15 = malloc (10);
    version 15
    ptr-info 0x7ff8bb786588>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
 <function_decl 0x7ff8bb759000 child7
    type <function_type 0x7ff8bb7539d8
        type <pointer_type 0x7ff8bbc1ca80 type <integer_type 0x7ff8bbc155e8 int>
            public unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bb760738>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7ff8bb752af0 value <pointer_type 0x7ff8bbc1c0a8>
            chain <tree_list 0x7ff8bb752a00 value <pointer_type 0x7ff8bbc1c0a8>
                chain <tree_list 0x7ff8bbc14ac8 value <void_type 0x7ff8bbc15f18 void>>>>
        pointer_to_this <pointer_type 0x7ff8bb760690>>
    addressable nothrow static function-specific-target function-specific-opt QI file test.c line 346 col 6 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> attributes <tree_list 0x7ff8bb7529d8> initial <block 0x7ff8bb76b960>
    result <result_decl 0x7ff8bbc0c5a0 D.4078 type <pointer_type 0x7ff8bbc1ca80>
        unsigned ignored DI file test.c line 346 col 6 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb759000 child7>>
    arguments <parm_decl 0x7ff8bb762b00 data
        type <pointer_type 0x7ff8bbc1c0a8 type <void_type 0x7ff8bbc15f18 void>
            public unsigned DI size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bb753348>>
        unsigned DI file test.c line 346 col 19 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb759000 child7> arg-type <pointer_type 0x7ff8bbc1c0a8>
        chain <parm_decl 0x7ff8bb762b80 test type <pointer_type 0x7ff8bbc1c0a8>
            unsigned DI file test.c line 346 col 31 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
            align 64 context <function_decl 0x7ff8bb759000 child7> arg-type <pointer_type 0x7ff8bbc1c0a8>>>
    struct-function 0x7ff8bb76c4d0>
 <ssa_name 0x7ff8bb77a9d8
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
   
    def_stmt _12 = malloc (30);
    version 12
    ptr-info 0x7ff8bb786570>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry child7
dot graph target entry end

_4 = PHI <_15(3), _12(4)>
lto1: warning: use location
dot graph target loc start # .MEM_22 = VDEF <.MEM_21>
_12 = malloc (30);
test.c:371:10: warning: use location
   return malloc(30);
          ^
dot graph target loc en1

dot graph target line desc form basic block 5: _4 = PHI <_15(3), _12(4)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_22 = VDEF <.MEM_21>
_12 = malloc (30);
test.c:371:10: warning: use location
dot graph target loc end

dot graph target basicblock start from child7 basic block 5dot graph target basicblock en1

_12, points-to NULL, points-to vars: { D.4130 } (nonlocal)
dot graph stmt start _4 = PHI <_15(3), _12(4)>
_12 = malloc (30);
dot graph stmt end

dot graph stmt start _4 = PHI <_15(3), _12(4)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----

====================================zzz=================================
 <ssa_name 0x7ff8bb77a9d8
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
   
    def_stmt _12 = malloc (30);
    version 12
    ptr-info 0x7ff8bb786570>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:child7========= [0m
[40;42m =======pre add _ fucntion:child4========= [0m
[40;44m =======print_function_path child4  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre_check_funciton:child4========= [0m
[40;42m =======start_check_funciton:child4========= [0m
[40;33m =======POP node_fun stack:child4========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:foo5========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path foo5  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre_check_funciton:foo5========= [0m
[40;42m =======start_check_funciton:foo5========= [0m
[40;33m =======POP node_fun stack:foo5========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:pthread_join========= [0m
[40;33m =======POP node_fun stack:pthread_join========= [0m
[40;42m =======pre add _ fucntion:pthread_create========= [0m
[40;33m =======POP node_fun stack:pthread_create========= [0m
[40;42m =======pre add _ fucntion:pthread_attr_setdetachstate========= [0m
[40;33m =======POP node_fun stack:pthread_attr_setdetachstate========= [0m
[40;42m =======pre add _ fucntion:pthread_attr_init========= [0m
[40;33m =======POP node_fun stack:pthread_attr_init========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m
 <function_decl 0x7ff8bb754b00 main
    type <function_type 0x7ff8bb7537e0
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality>
    nothrow public static function-specific-target function-specific-opt QI file test.c line 449 col 5 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> initial <block 0x7ff8bb76bd80>
    result <result_decl 0x7ff8bbc0c7f8 D.4101 type <integer_type 0x7ff8bbc155e8 int>
        ignored SI file test.c line 449 col 5 size <integer_cst 0x7ff8bbc01e28 32> unit size <integer_cst 0x7ff8bbc01e40 4>
        align 32 context <function_decl 0x7ff8bb754b00 main>>
    struct-function 0x7ff8bb76c840>
 <ssa_name 0x7ff8bb78eb40
    type <pointer_type 0x7ff8bb75f3f0
        type <record_type 0x7ff8bb75f348 adresse TI
            size <integer_cst 0x7ff8bbc01c30 constant 128>
            unit size <integer_cst 0x7ff8bbc01c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7ff8bb75f348 fields <field_decl 0x7ff8bb75d130 name> context <translation_unit_decl 0x7ff8bbc0c168 test.c>
            pointer_to_this <pointer_type 0x7ff8bb75f3f0> chain <type_decl 0x7ff8bb75d1c8 D.4043>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7ff8bb789120 a>
    def_stmt a_51 = malloc (32);
    version 51
    ptr-info 0x7ff8bb786888>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

_17 = a_51 + _16;
test.c:466:23: warning: use location
   printf("%s, %d\n", a[i].name, a[i].nummer);
                       ^
dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
  struct adresse *a = (struct adresse *)malloc(sizeof(struct adresse) * size);
                  ^
dot graph target loc en1

dot graph target line desc form basic block 6: _17 = a_51 + _16;
test.c:466:23: warning: use location
   printf("%s, %d\n", a[i].name, a[i].nummer);
                       ^
dot graph target line desend

dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
  struct adresse *a = (struct adresse *)malloc(sizeof(struct adresse) * size);
                  ^
dot graph target loc end

dot graph target basicblock start from main basic block 6dot graph target basicblock en1

a_51, points-to NULL, points-to vars: { D.4134 } (nonlocal)
dot graph stmt start _17 = a_51 + _16;
test.c:466:23: warning: use location
   printf("%s, %d\n", a[i].name, a[i].nummer);
                       ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_18 = _17->name;
test.c:466:3: warning: use location
   printf("%s, %d\n", a[i].name, a[i].nummer);
   ^
dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
  struct adresse *a = (struct adresse *)malloc(sizeof(struct adresse) * size);
                  ^
dot graph target loc en1

dot graph target line desc form basic block 6: _18 = _17->name;
test.c:466:3: warning: use location
   printf("%s, %d\n", a[i].name, a[i].nummer);
   ^
dot graph target line desend

dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
  struct adresse *a = (struct adresse *)malloc(sizeof(struct adresse) * size);
                  ^
dot graph target loc end

dot graph target basicblock start from main basic block 6dot graph target basicblock en1

a_51, points-to NULL, points-to vars: { D.4134 } (nonlocal)
dot graph stmt start _18 = _17->name;
test.c:466:3: warning: use location
   printf("%s, %d\n", a[i].name, a[i].nummer);
   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_91 = __printf_chk (1, "%s, %d\n", _18, _14);
dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
  struct adresse *a = (struct adresse *)malloc(sizeof(struct adresse) * size);
                  ^
dot graph target loc en1

dot graph target line desc form basic block 6: _91 = __printf_chk (1, "%s, %d\n", _18, _14);
dot graph target line desend

dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 6dot graph target basicblock en1

a_51, points-to NULL, points-to vars: { D.4134 } (nonlocal)
dot graph stmt start _91 = __printf_chk (1, "%s, %d\n", _18, _14);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ff8bb78eb40
    type <pointer_type 0x7ff8bb75f3f0
        type <record_type 0x7ff8bb75f348 adresse TI
            size <integer_cst 0x7ff8bbc01c30 constant 128>
            unit size <integer_cst 0x7ff8bbc01c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7ff8bb75f348 fields <field_decl 0x7ff8bb75d130 name> context <translation_unit_decl 0x7ff8bbc0c168 test.c>
            pointer_to_this <pointer_type 0x7ff8bb75f3f0> chain <type_decl 0x7ff8bb75d1c8 D.4043>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7ff8bb789120 a>
    def_stmt a_51 = malloc (32);
    version 51
    ptr-info 0x7ff8bb786888>
trace fucntion name:__printf_chk 

 ================== trace ================== 
dot graph entry main
dot graph target entry end

_13 = a_51 + _12;
test.c:466:34: warning: use location
   printf("%s, %d\n", a[i].name, a[i].nummer);
                                  ^
dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
  struct adresse *a = (struct adresse *)malloc(sizeof(struct adresse) * size);
                  ^
dot graph target loc en1

dot graph target line desc form basic block 6: _13 = a_51 + _12;
test.c:466:34: warning: use location
   printf("%s, %d\n", a[i].name, a[i].nummer);
                                  ^
dot graph target line desend

dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
  struct adresse *a = (struct adresse *)malloc(sizeof(struct adresse) * size);
                  ^
dot graph target loc end

dot graph target basicblock start from main basic block 6dot graph target basicblock en1

a_51, points-to NULL, points-to vars: { D.4134 } (nonlocal)
dot graph stmt start _13 = a_51 + _12;
test.c:466:34: warning: use location
   printf("%s, %d\n", a[i].name, a[i].nummer);
                                  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_14 = _13->nummer;
test.c:466:3: warning: use location
   printf("%s, %d\n", a[i].name, a[i].nummer);
   ^
dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
  struct adresse *a = (struct adresse *)malloc(sizeof(struct adresse) * size);
                  ^
dot graph target loc en1

dot graph target line desc form basic block 6: _14 = _13->nummer;
test.c:466:3: warning: use location
   printf("%s, %d\n", a[i].name, a[i].nummer);
   ^
dot graph target line desend

dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
  struct adresse *a = (struct adresse *)malloc(sizeof(struct adresse) * size);
                  ^
dot graph target loc end

dot graph target basicblock start from main basic block 6dot graph target basicblock en1

a_51, points-to NULL, points-to vars: { D.4134 } (nonlocal)
dot graph stmt start _14 = _13->nummer;
test.c:466:3: warning: use location
   printf("%s, %d\n", a[i].name, a[i].nummer);
   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

free (a_51);
test.c:463:2: warning: use location
  free(a);
  ^
dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
  struct adresse *a = (struct adresse *)malloc(sizeof(struct adresse) * size);
                  ^
dot graph target loc en1

dot graph target line desc form basic block 5: free (a_51);
test.c:463:2: warning: use location
  free(a);
  ^
dot graph target line desend

dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
  struct adresse *a = (struct adresse *)malloc(sizeof(struct adresse) * size);
                  ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

a_51, points-to NULL, points-to vars: { D.4134 } (nonlocal)
dot graph stmt start free (a_51);
test.c:463:2: warning: use location
  free(a);
  ^
dot graph stmt end

this stmt is child function---free-----

 ================== find ================== 
free (a_51);
test.c:463:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
dot graph entry main
dot graph target entry end

_9 = a_51 + _8;
test.c:461:4: warning: use location
   a[i].nummer = 123;
    ^
dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
  struct adresse *a = (struct adresse *)malloc(sizeof(struct adresse) * size);
                  ^
dot graph target loc en1

dot graph target line desc form basic block 3: _9 = a_51 + _8;
test.c:461:4: warning: use location
   a[i].nummer = 123;
    ^
dot graph target line desend

dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
  struct adresse *a = (struct adresse *)malloc(sizeof(struct adresse) * size);
                  ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

a_51, points-to NULL, points-to vars: { D.4134 } (nonlocal)
dot graph stmt start _9 = a_51 + _8;
test.c:461:4: warning: use location
   a[i].nummer = 123;
    ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_9->nummer = 123;
test.c:461:15: warning: use location
   a[i].nummer = 123;
               ^
dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
  struct adresse *a = (struct adresse *)malloc(sizeof(struct adresse) * size);
                  ^
dot graph target loc en1

dot graph target line desc form basic block 3: _9->nummer = 123;
test.c:461:15: warning: use location
   a[i].nummer = 123;
               ^
dot graph target line desend

dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
  struct adresse *a = (struct adresse *)malloc(sizeof(struct adresse) * size);
                  ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

a_51, points-to NULL, points-to vars: { D.4134 } (nonlocal)
dot graph stmt start _9->nummer = 123;
test.c:461:15: warning: use location
   a[i].nummer = 123;
               ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_6 = a_51 + _5;
test.c:460:4: warning: use location
   a[i].name = "Testname";
    ^
dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
  struct adresse *a = (struct adresse *)malloc(sizeof(struct adresse) * size);
                  ^
dot graph target loc en1

dot graph target line desc form basic block 3: _6 = a_51 + _5;
test.c:460:4: warning: use location
   a[i].name = "Testname";
    ^
dot graph target line desend

dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
  struct adresse *a = (struct adresse *)malloc(sizeof(struct adresse) * size);
                  ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

a_51, points-to NULL, points-to vars: { D.4134 } (nonlocal)
dot graph stmt start _6 = a_51 + _5;
test.c:460:4: warning: use location
   a[i].name = "Testname";
    ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_6->name = "Testname";
test.c:460:13: warning: use location
   a[i].name = "Testname";
             ^
dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
  struct adresse *a = (struct adresse *)malloc(sizeof(struct adresse) * size);
                  ^
dot graph target loc en1

dot graph target line desc form basic block 3: _6->name = "Testname";
test.c:460:13: warning: use location
   a[i].name = "Testname";
             ^
dot graph target line desend

dot graph target loc start # .MEM_116 = VDEF <.MEM_115(D)>
a_51 = malloc (32);
test.c:456:18: warning: use location
  struct adresse *a = (struct adresse *)malloc(sizeof(struct adresse) * size);
                  ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

a_51, points-to NULL, points-to vars: { D.4134 } (nonlocal)
dot graph stmt start _6->name = "Testname";
test.c:460:13: warning: use location
   a[i].name = "Testname";
             ^
dot graph stmt end


====================================zzz=================================
 <ssa_name 0x7ff8bb78eb40
    type <pointer_type 0x7ff8bb75f3f0
        type <record_type 0x7ff8bb75f348 adresse TI
            size <integer_cst 0x7ff8bbc01c30 constant 128>
            unit size <integer_cst 0x7ff8bbc01c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7ff8bb75f348 fields <field_decl 0x7ff8bb75d130 name> context <translation_unit_decl 0x7ff8bbc0c168 test.c>
            pointer_to_this <pointer_type 0x7ff8bb75f3f0> chain <type_decl 0x7ff8bb75d1c8 D.4043>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7ff8bb789120 a>
    def_stmt a_51 = malloc (32);
    version 51
    ptr-info 0x7ff8bb786888>

 ================== Start Use after free Check ================== 
# .MEM_117 = VDEF <.MEM_108>
free (a_51);
test.c:463:2: warning: Use after free error!: free location 
  free(a);
  ^
_17 = a_51 + _16;
test.c:466:23: warning: use location
   printf("%s, %d\n", a[i].name, a[i].nummer);
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_117 = VDEF <.MEM_108>
free (a_51);
test.c:463:2: warning: Use after free error!: free location 
  free(a);
  ^
# VUSE <.MEM_109>
_18 = _17->name;
test.c:466:3: warning: use location
   printf("%s, %d\n", a[i].name, a[i].nummer);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_117 = VDEF <.MEM_108>
free (a_51);
test.c:463:2: warning: Use after free error!: free location 
  free(a);
  ^
# .MEM_155 = VDEF <.MEM_109>
_91 = __printf_chk (1, "%s, %d\n", _18, _14);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_117 = VDEF <.MEM_108>
free (a_51);
test.c:463:2: warning: Use after free error!: free location 
_13 = a_51 + _12;
test.c:466:34: warning: use location
   printf("%s, %d\n", a[i].name, a[i].nummer);
                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_117 = VDEF <.MEM_108>
free (a_51);
test.c:463:2: warning: Use after free error!: free location 
  free(a);
  ^
# VUSE <.MEM_109>
_14 = _13->nummer;
test.c:466:3: warning: use location
   printf("%s, %d\n", a[i].name, a[i].nummer);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================

 <function_decl 0x7ff8bb754b00 main
    type <function_type 0x7ff8bb7537e0
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality>
    nothrow public static function-specific-target function-specific-opt QI file test.c line 449 col 5 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> initial <block 0x7ff8bb76bd80>
    result <result_decl 0x7ff8bbc0c7f8 D.4101 type <integer_type 0x7ff8bbc155e8 int>
        ignored SI file test.c line 449 col 5 size <integer_cst 0x7ff8bbc01e28 32> unit size <integer_cst 0x7ff8bbc01e40 4>
        align 32 context <function_decl 0x7ff8bb754b00 main>>
    struct-function 0x7ff8bb76c840>
 <addr_expr 0x7ff8bb77ce00
    type <pointer_type 0x7ff8bb75c3f0
        type <integer_type 0x7ff8bb7533f0 pthread_t unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7ff8bbc15738 precision 64 min <integer_cst 0x7ff8bbc01eb8 0> max <integer_cst 0x7ff8bbc03500 18446744073709551615> context <translation_unit_decl 0x7ff8bbc0c168 test.c>
            pointer_to_this <pointer_type 0x7ff8bb75c3f0>>
        unsigned DI size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7ff8bb784e10 t type <integer_type 0x7ff8bb7533f0 pthread_t>
        addressable unsigned DI file test.c line 497 col 12 size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 context <function_decl 0x7ff8bb754b00 main>
        chain <var_decl 0x7ff8bb784d80 t2 type <array_type 0x7ff8bb75f0a8>
            addressable BLK file test.c line 497 col 15
            size <integer_cst 0x7ff8bbc1d0a8 constant 192>
            unit size <integer_cst 0x7ff8bbc1d078 constant 24>
            align 128 context <function_decl 0x7ff8bb754b00 main> chain <var_decl 0x7ff8bb784cf0 q>>>
    test.c:498:2 start: test.c:498:2 finish: test.c:498:2>

dot graph START

======================================================================

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m
test.c:498:2: warning: use location
  pthread_create(&t, &attr2, child2, input2);
  ^

======================================================================
 <function_decl 0x7ff8bb754b00 main
    type <function_type 0x7ff8bb7537e0
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality>
    nothrow public static function-specific-target function-specific-opt QI file test.c line 449 col 5 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> initial <block 0x7ff8bb76bd80>
    result <result_decl 0x7ff8bbc0c7f8 D.4101 type <integer_type 0x7ff8bbc155e8 int>
        ignored SI file test.c line 449 col 5 size <integer_cst 0x7ff8bbc01e28 32> unit size <integer_cst 0x7ff8bbc01e40 4>
        align 32 context <function_decl 0x7ff8bb754b00 main>>
    struct-function 0x7ff8bb76c840>
 <ssa_name 0x7ff8bb78e5a0
    type <pointer_type 0x7ff8bb75c3f0
        type <integer_type 0x7ff8bb7533f0 pthread_t unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7ff8bbc15738 precision 64 min <integer_cst 0x7ff8bbc01eb8 0> max <integer_cst 0x7ff8bbc03500 18446744073709551615> context <translation_unit_decl 0x7ff8bbc0c168 test.c>
            pointer_to_this <pointer_type 0x7ff8bb75c3f0>>
        unsigned DI size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _23 = &t2[i_39];
    version 23
    ptr-info 0x7ff8bb7867f8>

dot graph START

======================================================================

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start is Pthread Job Collect  

======================================================================
dot graph entry main
dot graph target entry end

_24 = t2[i_39];
test.c:507:3: warning: use location
   printf("%ld\n", t2[i]);
   ^
dot graph target loc start # .MEM_153 = VDEF <.MEM_110>
err_99 = pthread_create (_23, &attr2, child, 0B);
test.c:505:7: warning: use location
   int err = pthread_create(&t2[i], &attr2, child, NULL);
       ^
dot graph target loc en1

dot graph target line desc form basic block 9: _24 = t2[i_39];
test.c:507:3: warning: use location
   printf("%ld\n", t2[i]);
   ^
dot graph target line desend

dot graph target loc start # .MEM_153 = VDEF <.MEM_110>
err_99 = pthread_create (_23, &attr2, child, 0B);
test.c:505:7: warning: use location
   int err = pthread_create(&t2[i], &attr2, child, NULL);
       ^
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start _24 = t2[i_39];
test.c:507:3: warning: use location
   printf("%ld\n", t2[i]);
   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_105 = __printf_chk (1, "%ld\n", _24);
dot graph target loc start # .MEM_153 = VDEF <.MEM_110>
err_99 = pthread_create (_23, &attr2, child, 0B);
test.c:505:7: warning: use location
   int err = pthread_create(&t2[i], &attr2, child, NULL);
       ^
dot graph target loc en1

dot graph target line desc form basic block 9: _105 = __printf_chk (1, "%ld\n", _24);
dot graph target line desend

dot graph target loc start # .MEM_153 = VDEF <.MEM_110>
err_99 = pthread_create (_23, &attr2, child, 0B);
test.c:505:7: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start _105 = __printf_chk (1, "%ld\n", _24);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ff8bb78e5a0
    type <pointer_type 0x7ff8bb75c3f0
        type <integer_type 0x7ff8bb7533f0 pthread_t unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7ff8bbc15738 precision 64 min <integer_cst 0x7ff8bbc01eb8 0> max <integer_cst 0x7ff8bbc03500 18446744073709551615> context <translation_unit_decl 0x7ff8bbc0c168 test.c>
            pointer_to_this <pointer_type 0x7ff8bb75c3f0>>
        unsigned DI size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _23 = &t2[i_39];
    version 23
    ptr-info 0x7ff8bb7867f8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
dot graph entry main
dot graph target entry end

_28 = t2[i_40];
test.c:532:3: warning: use location
   pthread_join(t2[i], NULL);
   ^
dot graph target loc start # .MEM_153 = VDEF <.MEM_110>
err_99 = pthread_create (_23, &attr2, child, 0B);
test.c:505:7: warning: use location
   int err = pthread_create(&t2[i], &attr2, child, NULL);
       ^
dot graph target loc en1

dot graph target line desc form basic block 15: _28 = t2[i_40];
test.c:532:3: warning: use location
   pthread_join(t2[i], NULL);
   ^
dot graph target line desend

dot graph target loc start # .MEM_153 = VDEF <.MEM_110>
err_99 = pthread_create (_23, &attr2, child, 0B);
test.c:505:7: warning: use location
   int err = pthread_create(&t2[i], &attr2, child, NULL);
       ^
dot graph target loc end

dot graph target basicblock start from main basic block 15dot graph target basicblock en1

dot graph stmt start _28 = t2[i_40];
test.c:532:3: warning: use location
   pthread_join(t2[i], NULL);
   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

pthread_join (_28, 0B);
test.c:532:3: warning: use location
dot graph target loc start # .MEM_153 = VDEF <.MEM_110>
err_99 = pthread_create (_23, &attr2, child, 0B);
test.c:505:7: warning: use location
   int err = pthread_create(&t2[i], &attr2, child, NULL);
       ^
dot graph target loc en1

dot graph target line desc form basic block 15: pthread_join (_28, 0B);
test.c:532:3: warning: use location
   pthread_join(t2[i], NULL);
   ^
dot graph target line desend

dot graph target loc start # .MEM_153 = VDEF <.MEM_110>
err_99 = pthread_create (_23, &attr2, child, 0B);
test.c:505:7: warning: use location
   int err = pthread_create(&t2[i], &attr2, child, NULL);
       ^
dot graph target loc end

dot graph target basicblock start from main basic block 15dot graph target basicblock en1

dot graph stmt start pthread_join (_28, 0B);
test.c:532:3: warning: use location
   pthread_join(t2[i], NULL);
   ^
dot graph stmt end

this stmt is child function---pthread_join-----
[40;32m    FIND PTHREAD_JOIN [0m
dot graph entry main
dot graph target entry end

err_99 = pthread_create (_23, &attr2, child, 0B);
test.c:505:7: warning: use location
   int err = pthread_create(&t2[i], &attr2, child, NULL);
       ^
dot graph target loc start # .MEM_153 = VDEF <.MEM_110>
err_99 = pthread_create (_23, &attr2, child, 0B);
test.c:505:7: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 9: err_99 = pthread_create (_23, &attr2, child, 0B);
test.c:505:7: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_153 = VDEF <.MEM_110>
err_99 = pthread_create (_23, &attr2, child, 0B);
test.c:505:7: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start err_99 = pthread_create (_23, &attr2, child, 0B);
test.c:505:7: warning: use location
dot graph stmt end

this stmt is child function---pthread_create-----

 ================== find ================== 
err_99 = pthread_create (_23, &attr2, child, 0B);
test.c:505:7: warning: use location
[40;32m    FIND PTHREAD_CREATED STMT  [0m

 ================== pre_pthread_detched ================== 
[40;44m =======trace_function_path child  function_call count: 10 level :-1========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_unlock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_unlock========= [0m
[40;42m =======pre add _ fucntion:boo========= [0m
[40;46m =======add node_fun stack:boo========= [0m
[40;44m =======trace_function_path boo  function_call count: 3 level :-1========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :-1========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:child5========= [0m
[40;46m =======add node_fun stack:child5========= [0m
[40;44m =======trace_function_path child5  function_call count: 4 level :-1========  [0m
[40;31m  find pthread_detched stmt  [0m
# .MEM_13 = VDEF <.MEM_12(D)>
pthread_detach (_1);
test.c:276:2: warning: use location
  pthread_detach(pthread_self());
  ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m
[40;42m =======pre add _ fucntion:child3========= [0m
[40;46m =======add node_fun stack:child3========= [0m
[40;44m =======trace_function_path child3  function_call count: 4 level :-1========  [0m
[40;31m  find pthread_detched stmt  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
pthread_detach (_1);
test.c:248:2: warning: use location
  pthread_detach(pthread_self());
  ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m
[40;42m =======pre add _ fucntion:child4========= [0m
[40;46m =======add node_fun stack:child4========= [0m
[40;44m =======trace_function_path child4  function_call count: 1 level :-1========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:foo========= [0m
[40;46m =======add node_fun stack:foo========= [0m
[40;44m =======trace_function_path foo  function_call count: 2 level :-1========  [0m
[40;42m =======pre add _ fucntion:foo2========= [0m
foo2 this is fucntion return value is heap-object 
foo this is fucntion return value is heap-object foo2
[40;46m =======add node_fun stack:foo2========= [0m
[40;44m =======trace_function_path foo2  function_call count: 4 level :-1========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 2 level :-1========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m

 ================== pre_pthread_detched end ================== 
[40;44m =======trace_function_path child  function_call count: 10 level :0========  [0m
# .MEM_57 = VDEF <.MEM_56>
free (_9);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_56>
free (_9);
test.c:193:2: warning: use location
  free(pData);
  ^
# .MEM_58 = VDEF <.MEM_57>
free (_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_10);
test.c:194:2: warning: use location
  free(data);
  ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_unlock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_unlock========= [0m
[40;42m =======pre add _ fucntion:boo========= [0m
[40;46m =======add node_fun stack:boo========= [0m
[40;44m =======trace_function_path boo  function_call count: 3 level :1========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
free (b_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
free (b_2(D));
test.c:416:2: warning: use location
  free(b);
  ^
# .MEM_9 = VDEF <.MEM_8>
free (b_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (b_2(D));
test.c:417:2: warning: use location
  free(b);
  ^
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :2========  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_12 = VDEF <.MEM_11(D)>
free (k_2(D));
test.c:432:2: warning: use location
  free(k);
  ^
# .MEM_13 = VDEF <.MEM_12>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_13 = VDEF <.MEM_12>
free (k_2(D));
test.c:433:2: warning: use location
  free(k);
  ^
# .MEM_14 = VDEF <.MEM_13>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (k_2(D));
test.c:434:2: warning: use location
  free(k);
  ^
# .MEM_15 = VDEF <.MEM_14>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (k_2(D));
test.c:435:2: warning: use location
  free(k);
  ^
# .MEM_16 = VDEF <.MEM_15>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15>
free (k_2(D));
test.c:436:2: warning: use location
  free(k);
  ^
# .MEM_17 = VDEF <.MEM_16>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_16>
free (k_2(D));
test.c:437:2: warning: use location
  free(k);
  ^
# .MEM_19 = VDEF <.MEM_18>
free (w_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18>
free (w_10);
test.c:439:2: warning: use location
  free(w);
  ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:child5========= [0m
[40;46m =======add node_fun stack:child5========= [0m
[40;44m =======trace_function_path child5  function_call count: 4 level :1========  [0m
# .MEM_15 = VDEF <.MEM_14>
free (pData_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (pData_6);
test.c:296:3: warning: use location
   free(pData);
   ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m
[40;42m =======pre add _ fucntion:child3========= [0m
[40;46m =======add node_fun stack:child3========= [0m
[40;44m =======trace_function_path child3  function_call count: 4 level :1========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m
[40;42m =======pre add _ fucntion:child4========= [0m
[40;46m =======add node_fun stack:child4========= [0m
[40;44m =======trace_function_path child4  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:foo========= [0m
[40;46m =======add node_fun stack:foo========= [0m
[40;44m =======trace_function_path foo  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:foo2========= [0m
foo2 this is fucntion return value is heap-object 
foo this is fucntion return value is heap-object foo2
[40;46m =======add node_fun stack:foo2========= [0m
[40;44m =======trace_function_path foo2  function_call count: 4 level :2========  [0m
# .MEM_51 = VDEF <.MEM_50>
free (p3_15);
[40;31m  find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (p3_15);
test.c:85:3: warning: use location
   free(p3);
   ^
# .MEM_48 = VDEF <.MEM_47>
free (p4_17);
[40;31m  find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (p4_17);
test.c:91:3: warning: use location
   free(p4);
   ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 2 level :3========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;32m    FIND PTHREAD_CREATED TYPE is CREATE_DETACHED  [0m

 ================== find ================== 

====================================zzz=================================
 <ssa_name 0x7ff8bb78e5a0
    type <pointer_type 0x7ff8bb75c3f0
        type <integer_type 0x7ff8bb7533f0 pthread_t unsigned DI
            size <integer_cst 0x7ff8bbc01be8 constant 64>
            unit size <integer_cst 0x7ff8bbc01c00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7ff8bbc15738 precision 64 min <integer_cst 0x7ff8bbc01eb8 0> max <integer_cst 0x7ff8bbc03500 18446744073709551615> context <translation_unit_decl 0x7ff8bbc0c168 test.c>
            pointer_to_this <pointer_type 0x7ff8bb75c3f0>>
        unsigned DI size <integer_cst 0x7ff8bbc01be8 64> unit size <integer_cst 0x7ff8bbc01c00 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _23 = &t2[i_39];
    version 23
    ptr-info 0x7ff8bb7867f8>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;32m    pthread is DETACHED and no memory leak  [0m

======================================================================

======================================================================
[40;31m  	possible double free :14 [0m

======================================================================
 <function_decl 0x7ff8bb754b00 main
    type <function_type 0x7ff8bb7537e0
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality>
    nothrow public static function-specific-target function-specific-opt QI file test.c line 449 col 5 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> initial <block 0x7ff8bb76bd80>
    result <result_decl 0x7ff8bbc0c7f8 D.4101 type <integer_type 0x7ff8bbc155e8 int>
        ignored SI file test.c line 449 col 5 size <integer_cst 0x7ff8bbc01e28 32> unit size <integer_cst 0x7ff8bbc01e40 4>
        align 32 context <function_decl 0x7ff8bb754b00 main>>
    struct-function 0x7ff8bb76c840>
 <ssa_name 0x7ff8bb78ebd0
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784cf0 q>
    def_stmt q_63 = malloc (70);
    version 63
    ptr-info 0x7ff8bb7868a0>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

_31 = foo5 (q_63, q_63);
test.c:552:2: warning: use location
  printf("123%d\n", foo5(q, q));
  ^
dot graph target loc start # .MEM_126 = VDEF <.MEM_110>
q_63 = malloc (70);
test.c:509:7: warning: use location
  int *q = malloc(70);
       ^
dot graph target loc en1

dot graph target line desc form basic block 23: _31 = foo5 (q_63, q_63);
test.c:552:2: warning: use location
  printf("123%d\n", foo5(q, q));
  ^
dot graph target line desend

dot graph target loc start # .MEM_126 = VDEF <.MEM_110>
q_63 = malloc (70);
test.c:509:7: warning: use location
  int *q = malloc(70);
       ^
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

q_63, points-to NULL, points-to vars: { D.4135 } (nonlocal, escaped, escaped heap)
dot graph stmt start _31 = foo5 (q_63, q_63);
test.c:552:2: warning: use location
  printf("123%d\n", foo5(q, q));
  ^
dot graph stmt end

this stmt is child function---foo5-----

 ================== trace ================== 
 <ssa_name 0x7ff8bb78ebd0
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784cf0 q>
    def_stmt q_63 = malloc (70);
    version 63
    ptr-info 0x7ff8bb7868a0>
trace fucntion name:foo5 
[40;44m =======trace_function_path foo5  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:foo5========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate stmt argument:q ========= [0m

====================================ffff=================================
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
dot graph entry main
dot graph target entry end

*q_63 = 20;
test.c:524:8: warning: use location
   q[0] = 20;
        ^
dot graph target loc start # .MEM_126 = VDEF <.MEM_110>
q_63 = malloc (70);
test.c:509:7: warning: use location
  int *q = malloc(70);
       ^
dot graph target loc en1

dot graph target line desc form basic block 14: *q_63 = 20;
test.c:524:8: warning: use location
   q[0] = 20;
        ^
dot graph target line desend

dot graph target loc start # .MEM_126 = VDEF <.MEM_110>
q_63 = malloc (70);
test.c:509:7: warning: use location
  int *q = malloc(70);
       ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

q_63, points-to NULL, points-to vars: { D.4135 } (nonlocal, escaped, escaped heap)
dot graph stmt start *q_63 = 20;
test.c:524:8: warning: use location
   q[0] = 20;
        ^
dot graph stmt end

dot graph entry main
dot graph target entry end

free (q_63);
test.c:520:3: warning: use location
   free(q);
   ^
dot graph target loc start # .MEM_126 = VDEF <.MEM_110>
q_63 = malloc (70);
test.c:509:7: warning: use location
  int *q = malloc(70);
       ^
dot graph target loc en1

dot graph target line desc form basic block 12: free (q_63);
test.c:520:3: warning: use location
   free(q);
   ^
dot graph target line desend

dot graph target loc start # .MEM_126 = VDEF <.MEM_110>
q_63 = malloc (70);
test.c:509:7: warning: use location
  int *q = malloc(70);
       ^
dot graph target loc end

dot graph target basicblock start from main basic block 12dot graph target basicblock en1

q_63, points-to NULL, points-to vars: { D.4135 } (nonlocal, escaped, escaped heap)
dot graph stmt start free (q_63);
test.c:520:3: warning: use location
   free(q);
   ^
dot graph stmt end

this stmt is child function---free-----

 ================== find ================== 
free (q_63);
test.c:520:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
dot graph entry main
dot graph target entry end

*q_63 = 10;
test.c:519:8: warning: use location
   q[0] = 10;
        ^
dot graph target loc start # .MEM_126 = VDEF <.MEM_110>
q_63 = malloc (70);
test.c:509:7: warning: use location
  int *q = malloc(70);
       ^
dot graph target loc en1

dot graph target line desc form basic block 12: *q_63 = 10;
test.c:519:8: warning: use location
   q[0] = 10;
        ^
dot graph target line desend

dot graph target loc start # .MEM_126 = VDEF <.MEM_110>
q_63 = malloc (70);
test.c:509:7: warning: use location
  int *q = malloc(70);
       ^
dot graph target loc end

dot graph target basicblock start from main basic block 12dot graph target basicblock en1

q_63, points-to NULL, points-to vars: { D.4135 } (nonlocal, escaped, escaped heap)
dot graph stmt start *q_63 = 10;
test.c:519:8: warning: use location
   q[0] = 10;
        ^
dot graph stmt end

dot graph entry main
dot graph target entry end

child (q_63);
test.c:516:3: warning: use location
   child(q);
   ^
dot graph target loc start # .MEM_126 = VDEF <.MEM_110>
q_63 = malloc (70);
test.c:509:7: warning: use location
  int *q = malloc(70);
       ^
dot graph target loc en1

dot graph target line desc form basic block 12: child (q_63);
test.c:516:3: warning: use location
   child(q);
   ^
dot graph target line desend

dot graph target loc start # .MEM_126 = VDEF <.MEM_110>
q_63 = malloc (70);
test.c:509:7: warning: use location
  int *q = malloc(70);
       ^
dot graph target loc end

dot graph target basicblock start from main basic block 12dot graph target basicblock en1

q_63, points-to NULL, points-to vars: { D.4135 } (nonlocal, escaped, escaped heap)
dot graph stmt start child (q_63);
test.c:516:3: warning: use location
   child(q);
   ^
dot graph stmt end

this stmt is child function---child-----

 ================== trace ================== 
 <ssa_name 0x7ff8bb78ebd0
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784cf0 q>
    def_stmt q_63 = malloc (70);
    version 63
    ptr-info 0x7ff8bb7868a0>
trace fucntion name:child 
[40;44m =======trace_function_path child  function_call count: 10 level :0========  [0m
# .MEM_57 = VDEF <.MEM_56>
free (_9);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_56>
free (_9);
test.c:193:2: warning: use location
  free(pData);
  ^
# .MEM_58 = VDEF <.MEM_57>
free (_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_10);
test.c:194:2: warning: use location
  free(data);
  ^
[40;36m ======= node_fun:child========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate stmt argument:q ========= [0m
[40;36m ======= relate node_fun argument222:q========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate formID : 273835148
from child basic block 2dot graph end relate end

In function â€˜childâ€™:
test.c:176:7: warning: use location
  int *pData = data;
       ^
dot graph relate stmt start ID : 1327012258 stmt(LHS) :_1 = data;
test.c:176:7: warning: use location
_1
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:q========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 273835148
from child basic block 2dot graph end relate end

test.c:178:9: warning: use location
  *pData += 1;
         ^
dot graph relate stmt start ID : 1483589226 stmt(LHS) :_2 = pData;
test.c:178:9: warning: use location
_2
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:q========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 273835148
from child basic block 2dot graph end relate end

test.c:178:9: warning: use location
dot graph relate stmt start ID : 1821918241 stmt(LHS) :_4 = pData;
test.c:178:9: warning: use location
_4
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:q========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 273835148
from child basic block 2dot graph end relate end

test.c:185:9: warning: use location
  *ppData[0] = 10;
         ^
dot graph relate stmt start ID : 1797902581 stmt(LHS) :_6 = pData;
test.c:185:9: warning: use location
_6
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:q========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 273835148
from child basic block 2dot graph end relate end

test.c:188:3: warning: use location
  **ppData = 12;
   ^
dot graph relate stmt start ID : 1167270718 stmt(LHS) :_7 = pData;
test.c:188:3: warning: use location
_7
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:q========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 273835148
from child basic block 2dot graph end relate end

test.c:193:2: warning: use location
  free(pData);
  ^
dot graph relate stmt start ID : 1069230088 stmt(LHS) :_9 = pData;
test.c:193:2: warning: use location
_9
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
dot graph start relate for1ID : 273835148
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 1898959606 stmt(call) :free (_9);
test.c:193:2: warning: use location
_9
dot graph relate end

[40;36m ======= relate node_fun argument222:q========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 273835148
from child basic block 2dot graph end relate end

test.c:194:2: warning: use location
  free(data);
  ^
dot graph relate stmt start ID : 1970484082 stmt(LHS) :_10 = data;
test.c:194:2: warning: use location
_10
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
dot graph start relate for1ID : 273835148
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 1718333672 stmt(call) :free (_10);
test.c:194:2: warning: use location
_10
dot graph relate end

[40;36m ======= relate node_fun argument222:q========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 273835148
from child basic block 2dot graph end relate end

test.c:195:2: warning: use location
  boo(data);
  ^
dot graph relate stmt start ID : 1819173523 stmt(LHS) :_11 = data;
test.c:195:2: warning: use location
_11
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
dot graph start relate for1ID : 273835148
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 1557890483 stmt(call) :boo (_11);
test.c:195:2: warning: use location
_11
dot graph relate end


====================================ffff=================================
 <ssa_name 0x7ff8bb78ebd0
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784cf0 q>
    def_stmt q_63 = malloc (70);
    version 63
    ptr-info 0x7ff8bb7868a0>
# .MEM_59 = VDEF <.MEM_58>
boo (_11);
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_unlock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_unlock========= [0m
[40;42m =======pre add _ fucntion:boo========= [0m
[40;46m =======add node_fun stack:boo========= [0m
[40;44m =======trace_function_path boo  function_call count: 3 level :1========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
free (b_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
free (b_2(D));
In function â€˜mainâ€™:
test.c:416:2: warning: use location
  free(b);
  ^
# .MEM_9 = VDEF <.MEM_8>
free (b_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (b_2(D));
test.c:417:2: warning: use location
  free(b);
  ^
[40;36m ======= node_fun:boo========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate stmt argument:q ========= [0m
dot graph start relate formID : 1758358837
from boo basic block 2dot graph end relate end

dot graph relate stmt start ID : 812508332 stmt(call) :free (b_2(D));
In function â€˜booâ€™:
test.c:416:2: warning: use location
  free(b);
  ^
b_2(D)
dot graph relate end

dot graph start relate for1ID : 1758358837
from boo basic block 2dot graph end relate end

dot graph relate stmt start ID : 671954211 stmt(call) :free (b_2(D));
test.c:417:2: warning: use location
  free(b);
  ^
b_2(D)
dot graph relate end

dot graph start relate for1ID : 1758358837
from boo basic block 2dot graph end relate end

dot graph relate stmt start ID : 303654722 stmt(call) :test22 (b_2(D));
test.c:418:2: warning: use location
  test22(b);
  ^
b_2(D)
dot graph relate end


====================================ffff=================================
 <ssa_name 0x7ff8bb78ebd0
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784cf0 q>
    def_stmt q_63 = malloc (70);
    version 63
    ptr-info 0x7ff8bb7868a0>
# .MEM_10 = VDEF <.MEM_9>
test22 (b_2(D));
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :2========  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_12 = VDEF <.MEM_11(D)>
free (k_2(D));
In function â€˜mainâ€™:
test.c:432:2: warning: use location
  free(k);
  ^
# .MEM_13 = VDEF <.MEM_12>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_13 = VDEF <.MEM_12>
free (k_2(D));
test.c:433:2: warning: use location
  free(k);
  ^
# .MEM_14 = VDEF <.MEM_13>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (k_2(D));
test.c:434:2: warning: use location
  free(k);
  ^
# .MEM_15 = VDEF <.MEM_14>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (k_2(D));
test.c:435:2: warning: use location
  free(k);
  ^
# .MEM_16 = VDEF <.MEM_15>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15>
free (k_2(D));
test.c:436:2: warning: use location
  free(k);
  ^
# .MEM_17 = VDEF <.MEM_16>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_16>
free (k_2(D));
test.c:437:2: warning: use location
  free(k);
  ^
# .MEM_19 = VDEF <.MEM_18>
free (w_10);
[40;36m ======= node_fun:test22========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate stmt argument:q ========= [0m
dot graph start relate formID : 1766813075
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 47053497 stmt(call) :free (k_2(D));
In function â€˜test22â€™:
test.c:432:2: warning: use location
  free(k);
  ^
k_2(D)
dot graph relate end

dot graph start relate for1ID : 1766813075
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 914853767 stmt(call) :free (k_2(D));
test.c:433:2: warning: use location
  free(k);
  ^
k_2(D)
dot graph relate end

dot graph start relate for1ID : 1766813075
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1223660419 stmt(call) :free (k_2(D));
test.c:434:2: warning: use location
  free(k);
  ^
k_2(D)
dot graph relate end

dot graph start relate for1ID : 1766813075
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1632899415 stmt(call) :free (k_2(D));
test.c:435:2: warning: use location
  free(k);
  ^
k_2(D)
dot graph relate end

dot graph start relate for1ID : 1766813075
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1768794995 stmt(call) :free (k_2(D));
test.c:436:2: warning: use location
  free(k);
  ^
k_2(D)
dot graph relate end

dot graph start relate for1ID : 1766813075
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1043912372 stmt(call) :free (k_2(D));
test.c:437:2: warning: use location
  free(k);
  ^
k_2(D)
dot graph relate end


====================================ffff=================================
 <ssa_name 0x7ff8bb78ebd0
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784cf0 q>
    def_stmt q_63 = malloc (70);
    version 63
    ptr-info 0x7ff8bb7868a0>
# .MEM_17 = VDEF <.MEM_16>
free (k_2(D));
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:child5========= [0m
[40;46m =======add node_fun stack:child5========= [0m
[40;44m =======trace_function_path child5  function_call count: 4 level :1========  [0m
# .MEM_15 = VDEF <.MEM_14>
free (pData_6);
[40;36m ======= node_fun:child5========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate stmt argument:q ========= [0m

====================================ffff=================================
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m
[40;42m =======pre add _ fucntion:child3========= [0m
[40;46m =======add node_fun stack:child3========= [0m
[40;44m =======trace_function_path child3  function_call count: 4 level :1========  [0m
[40;36m ======= node_fun:child3========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate stmt argument:q ========= [0m

====================================ffff=================================
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m
[40;42m =======pre add _ fucntion:child4========= [0m
[40;46m =======add node_fun stack:child4========= [0m
[40;44m =======trace_function_path child4  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:child4========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate stmt argument:q ========= [0m
[40;36m ======= relate node_fun argument222:q========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate formID : 564737914
from child4 basic block 3dot graph end relate end

In function â€˜child4â€™:
test.c:220:11: warning: use location
   *data = *data + 1;
           ^
dot graph relate stmt start ID : 509610409 stmt(LHS) :_1 = data;
test.c:220:11: warning: use location
_1
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:q========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 564737914
from child4 basic block 3dot graph end relate end

test.c:220:3: warning: use location
   *data = *data + 1;
   ^
dot graph relate stmt start ID : 1102556458 stmt(LHS) :_3 = data;
test.c:220:3: warning: use location
_3
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:q========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate formID : 564737914
from child4 basic block 4dot graph end relate end

test.c:223:3: warning: use location
   *data = 2;
   ^
dot graph relate stmt start ID : 736227524 stmt(LHS) :_5 = data;
test.c:223:3: warning: use location
_5
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 

====================================ffff=================================
 <ssa_name 0x7ff8bb78ebd0
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784cf0 q>
    def_stmt q_63 = malloc (70);
    version 63
    ptr-info 0x7ff8bb7868a0>
# VUSE <.MEM_13(D)>
_5 = data;
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:foo========= [0m
[40;46m =======add node_fun stack:foo========= [0m
[40;44m =======trace_function_path foo  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:foo========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate stmt argument:q ========= [0m
[40;36m ======= relate node_fun argument222:q========= [0m
[40;36m ======= relate gimple_assign_lhs2:ž========= [0m




dot graph start relate formID : 1749925442
from foo basic block 2dot graph end relate end

In function â€˜fooâ€™:
test.c:122:8: warning: use location
  p2[0] = 1;
        ^
dot graph relate stmt start ID : 362530965 stmt(LHS) :*p2_5 = 1;
test.c:122:8: warning: use location
*p2_5
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 

====================================ffff=================================
 <ssa_name 0x7ff8bb78ebd0
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784cf0 q>
    def_stmt q_63 = malloc (70);
    version 63
    ptr-info 0x7ff8bb7868a0>
# .MEM_14 = VDEF <.MEM_13>
*p2_5 = 1;
fucntion collect path finsh
[40;42m =======pre add _ fucntion:foo2========= [0m
foo2 this is fucntion return value is heap-object 
foo this is fucntion return value is heap-object foo2
[40;46m =======add node_fun stack:foo2========= [0m
[40;44m =======trace_function_path foo2  function_call count: 4 level :2========  [0m
# .MEM_51 = VDEF <.MEM_50>
free (p3_15);
# .MEM_48 = VDEF <.MEM_47>
free (p4_17);
[40;36m ======= node_fun:foo2========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate stmt argument:q ========= [0m
[40;36m ======= relate node_fun argument222:q========= [0m
[40;36m ======= relate gimple_assign_lhs2:ž========= [0m




dot graph start relate formID : 1010062672
from foo2 basic block 3dot graph end relate end

In function â€˜foo2â€™:
test.c:84:9: warning: use location
   p3[0] = 10;
         ^
dot graph relate stmt start ID : 929454052 stmt(LHS) :*p3_15 = 10;
test.c:84:9: warning: use location
*p3_15
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:q========= [0m
[40;36m ======= relate gimple_assign_lhs2:ž========= [0m




dot graph start relate formID : 1010062672
from foo2 basic block 4dot graph end relate end

test.c:90:9: warning: use location
   p4[0] = 10;
         ^
dot graph relate stmt start ID : 1846120191 stmt(LHS) :*p4_17 = 10;
test.c:90:9: warning: use location
*p4_17
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 

====================================ffff=================================
 <ssa_name 0x7ff8bb78ebd0
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784cf0 q>
    def_stmt q_63 = malloc (70);
    version 63
    ptr-info 0x7ff8bb7868a0>
# .MEM_47 = VDEF <.MEM_46>
*p4_17 = 10;
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 2 level :3========  [0m
[40;36m ======= node_fun:foo3========= [0m
[40;36m ======= find relate stmt with q ========= [0m
[40;36m ======= relate stmt argument:q ========= [0m

====================================ffff=================================
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m

 ================== trace ================== 
dot graph entry main
dot graph target entry end

_25 = q_63 != 0B;
In function â€˜mainâ€™:
test.c:513:9: warning: use location
  if ((q != NULL) && test)
         ^
dot graph target loc start # .MEM_126 = VDEF <.MEM_110>
q_63 = malloc (70);
test.c:509:7: warning: use location
  int *q = malloc(70);
       ^
dot graph target loc en1

dot graph target line desc form basic block 11: _25 = q_63 != 0B;
test.c:513:9: warning: use location
  if ((q != NULL) && test)
         ^
dot graph target line desend

dot graph target loc start # .MEM_126 = VDEF <.MEM_110>
q_63 = malloc (70);
test.c:509:7: warning: use location
  int *q = malloc(70);
       ^
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

q_63, points-to NULL, points-to vars: { D.4135 } (nonlocal, escaped, escaped heap)
dot graph stmt start _25 = q_63 != 0B;
test.c:513:9: warning: use location
  if ((q != NULL) && test)
         ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_27 = _25 & _26;
test.c:513:18: warning: use location
  if ((q != NULL) && test)
                  ^
dot graph target loc start # .MEM_126 = VDEF <.MEM_110>
q_63 = malloc (70);
test.c:509:7: warning: use location
  int *q = malloc(70);
       ^
dot graph target loc en1

dot graph target line desc form basic block 11: _27 = _25 & _26;
test.c:513:18: warning: use location
  if ((q != NULL) && test)
                  ^
dot graph target line desend

dot graph target loc start # .MEM_126 = VDEF <.MEM_110>
q_63 = malloc (70);
test.c:509:7: warning: use location
  int *q = malloc(70);
       ^
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

q_63, points-to NULL, points-to vars: { D.4135 } (nonlocal, escaped, escaped heap)
dot graph stmt start _27 = _25 & _26;
test.c:513:18: warning: use location
  if ((q != NULL) && test)
                  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

if (_27 != 0)
test.c:513:5: warning: use location
  if ((q != NULL) && test)
     ^
dot graph target loc start # .MEM_126 = VDEF <.MEM_110>
q_63 = malloc (70);
test.c:509:7: warning: use location
  int *q = malloc(70);
       ^
dot graph target loc en1

dot graph target line desc form basic block 11: if (_27 != 0)
test.c:513:5: warning: use location
  if ((q != NULL) && test)
     ^
dot graph target line desend

dot graph target loc start # .MEM_126 = VDEF <.MEM_110>
q_63 = malloc (70);
test.c:509:7: warning: use location
  int *q = malloc(70);
       ^
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

q_63, points-to NULL, points-to vars: { D.4135 } (nonlocal, escaped, escaped heap)
dot graph stmt start if (_27 != 0)
test.c:513:5: warning: use location
  if ((q != NULL) && test)
     ^
dot graph stmt end

if (_27 != 0)

 ================== find cond branch ================= 
if (_27 != 0)
Cond in fucntion main basic block 11
 ================== possiable direct basic block ================= 
from main basic block 12
 ================== possiable direct basic block ================= 
from main basic block 14
 ================== warring ================== 
[40;35m    need check this branch possiable have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

====================================zzz=================================
 <ssa_name 0x7ff8bb78ebd0
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784cf0 q>
    def_stmt q_63 = malloc (70);
    version 63
    ptr-info 0x7ff8bb7868a0>
dot graph start relate for1ID : 273835148
from child basic block 2dot graph end relate end

subgraph cluster_579872986 dot graph subgraph  start ID : 1557890483 stmt(relate) ï¼Œ Tree ID : 273835148 : boo (_11);
test.c:195:2: warning: use location
  boo(data);
  ^
dot graph subgrapend

dot graph start relate for1ID : 1758358837
from boo basic block 2dot graph end relate end

subgraph cluster_865907261 dot graph subgraph  start ID : 303654722 stmt(relate) ï¼Œ Tree ID : 1758358837 : test22 (b_2(D));
test.c:418:2: warning: use location
  test22(b);
  ^
dot graph subgrapend

dot graph start relate for1ID : 1766813075
from test22 basic block 2dot graph end relate end

subgraph cluster_1753727354 dot graph subgraph  start ID : 1043912372 stmt(relate) ï¼Œ Tree ID : 1766813075 : free (k_2(D));
test.c:437:2: warning: use location
  free(k);
  ^
dot graph subgrapend

dot graph start relate for1ID : 564737914
from child4 basic block 4dot graph end relate end

subgraph cluster_331348944 dot graph subgraph  start ID : 736227524 stmt(relate) ï¼Œ Tree ID : 564737914 : _5 = data;
test.c:223:3: warning: use location
   *data = 2;
   ^
dot graph subgrapend

dot graph start relate for1ID : 1749925442
from foo basic block 2dot graph end relate end

subgraph cluster_688907695 dot graph subgraph  start ID : 362530965 stmt(relate) ï¼Œ Tree ID : 1749925442 : *p2_5 = 1;
test.c:122:8: warning: use location
  p2[0] = 1;
        ^
dot graph subgrapend

dot graph start relate for1ID : 1010062672
from foo2 basic block 4dot graph end relate end

subgraph cluster_1324577378 dot graph subgraph  start ID : 1846120191 stmt(relate) ï¼Œ Tree ID : 1010062672 : *p4_17 = 10;
test.c:90:9: warning: use location
   p4[0] = 10;
         ^
dot graph subgrapend


 ================== Start Use after free Check ================== 
# .MEM_132 = VDEF <.MEM_131>
free (q_63);
test.c:520:3: warning: Use after free error!: free location 
   free(q);
   ^
# .MEM_137 = VDEF <.MEM_113>
_31 = foo5 (q_63, q_63);
test.c:552:2: warning: use location
  printf("123%d\n", foo5(q, q));
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_130 = VDEF <.MEM_127>
child (q_63);
test.c:516:3: warning: Use after free error!: free location 
   child(q);
   ^
# .MEM_137 = VDEF <.MEM_113>
_31 = foo5 (q_63, q_63);
test.c:552:2: warning: use location
  printf("123%d\n", foo5(q, q));
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_132 = VDEF <.MEM_131>
free (q_63);
test.c:520:3: warning: Use after free error!: free location 
   free(q);
   ^
# .MEM_128 = VDEF <.MEM_127>
*q_63 = 20;
test.c:524:8: warning: use location
   q[0] = 20;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_130 = VDEF <.MEM_127>
child (q_63);
test.c:516:3: warning: Use after free error!: free location 
   child(q);
   ^
# .MEM_128 = VDEF <.MEM_127>
*q_63 = 20;
test.c:524:8: warning: use location
   q[0] = 20;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_130 = VDEF <.MEM_127>
child (q_63);
test.c:516:3: warning: Use after free error!: free location 
   child(q);
   ^
# .MEM_132 = VDEF <.MEM_131>
free (q_63);
test.c:520:3: warning: use location
   free(q);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_130 = VDEF <.MEM_127>
child (q_63);
test.c:516:3: warning: Use after free error!: free location 
   child(q);
   ^
# .MEM_131 = VDEF <.MEM_130>
*q_63 = 10;
test.c:519:8: warning: use location
   q[0] = 10;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m  	possible double free :11 [0m

======================================================================
 <function_decl 0x7ff8bb754b00 main
    type <function_type 0x7ff8bb7537e0
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality>
    nothrow public static function-specific-target function-specific-opt QI file test.c line 449 col 5 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> initial <block 0x7ff8bb76bd80>
    result <result_decl 0x7ff8bbc0c7f8 D.4101 type <integer_type 0x7ff8bbc155e8 int>
        ignored SI file test.c line 449 col 5 size <integer_cst 0x7ff8bbc01e28 32> unit size <integer_cst 0x7ff8bbc01e40 4>
        align 32 context <function_decl 0x7ff8bb754b00 main>>
    struct-function 0x7ff8bb76c840>
 <ssa_name 0x7ff8bb78ec18
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784c60 q2>
    def_stmt q2_65 = malloc (20);
    version 65
    ptr-info 0x7ff8bb7868b8>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

====================================zzz=================================
 <ssa_name 0x7ff8bb78ec18
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784c60 q2>
    def_stmt q2_65 = malloc (20);
    version 65
    ptr-info 0x7ff8bb7868b8>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m
test.c:510:7: warning: use location
  int *q2 = malloc(20);
       ^

======================================================================
 <function_decl 0x7ff8bb754b00 main
    type <function_type 0x7ff8bb7537e0
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality>
    nothrow public static function-specific-target function-specific-opt QI file test.c line 449 col 5 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> initial <block 0x7ff8bb76bd80>
    result <result_decl 0x7ff8bbc0c7f8 D.4101 type <integer_type 0x7ff8bbc155e8 int>
        ignored SI file test.c line 449 col 5 size <integer_cst 0x7ff8bbc01e28 32> unit size <integer_cst 0x7ff8bbc01e40 4>
        align 32 context <function_decl 0x7ff8bb754b00 main>>
    struct-function 0x7ff8bb76c840>
 <ssa_name 0x7ff8bb78ecf0
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784b40 data>
    def_stmt data_73 = malloc (400);
    version 73
    ptr-info 0x7ff8bb7868d0>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

data_41 = PHI <0B(17), data_73(20)>
lto1: warning: use location
dot graph target loc start # .MEM_133 = VDEF <.MEM_114>
data_73 = malloc (400);
test.c:539:8: warning: use location
   data = (int *)malloc(100 * sizeof(int));
        ^
dot graph target loc en1

dot graph target line desc form basic block 21: data_41 = PHI <0B(17), data_73(20)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_133 = VDEF <.MEM_114>
data_73 = malloc (400);
test.c:539:8: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

data_73, points-to NULL, points-to vars: { D.4137 } (nonlocal)
dot graph stmt start data_41 = PHI <0B(17), data_73(20)>
data_73 = malloc (400);
dot graph stmt end

dot graph stmt start data_41 = PHI <0B(17), data_73(20)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

free (data_41);
test.c:550:3: warning: use location
   free(data);
   ^
dot graph target loc start # .MEM_133 = VDEF <.MEM_114>
data_73 = malloc (400);
test.c:539:8: warning: use location
   data = (int *)malloc(100 * sizeof(int));
        ^
dot graph target loc en1

dot graph target line desc form basic block 22: free (data_41);
test.c:550:3: warning: use location
   free(data);
   ^
dot graph target line desend

dot graph target loc start # .MEM_133 = VDEF <.MEM_114>
data_73 = malloc (400);
test.c:539:8: warning: use location
   data = (int *)malloc(100 * sizeof(int));
        ^
dot graph target loc end

dot graph target basicblock start from main basic block 22dot graph target basicblock en1

data_73, points-to NULL, points-to vars: { D.4137 } (nonlocal)
dot graph stmt start free (data_41);
test.c:550:3: warning: use location
   free(data);
   ^
dot graph stmt end

this stmt is child function---free-----

 ================== find ================== 
free (data_41);
test.c:550:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
dot graph entry main
dot graph target entry end

free (data_73);
test.c:545:3: warning: use location
   free(data);
   ^
dot graph target loc start # .MEM_133 = VDEF <.MEM_114>
data_73 = malloc (400);
test.c:539:8: warning: use location
   data = (int *)malloc(100 * sizeof(int));
        ^
dot graph target loc en1

dot graph target line desc form basic block 20: free (data_73);
test.c:545:3: warning: use location
   free(data);
   ^
dot graph target line desend

dot graph target loc start # .MEM_133 = VDEF <.MEM_114>
data_73 = malloc (400);
test.c:539:8: warning: use location
   data = (int *)malloc(100 * sizeof(int));
        ^
dot graph target loc end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

data_73, points-to NULL, points-to vars: { D.4137 } (nonlocal)
dot graph stmt start free (data_73);
test.c:545:3: warning: use location
   free(data);
   ^
dot graph stmt end

this stmt is child function---free-----

 ================== find ================== 
free (data_73);
test.c:545:3: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 
dot graph entry main
dot graph target entry end

if (data_73 == 0B)
test.c:540:6: warning: use location
   if (data == NULL)
      ^
dot graph target loc start # .MEM_133 = VDEF <.MEM_114>
data_73 = malloc (400);
test.c:539:8: warning: use location
   data = (int *)malloc(100 * sizeof(int));
        ^
dot graph target loc en1

dot graph target line desc form basic block 18: if (data_73 == 0B)
test.c:540:6: warning: use location
   if (data == NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_133 = VDEF <.MEM_114>
data_73 = malloc (400);
test.c:539:8: warning: use location
   data = (int *)malloc(100 * sizeof(int));
        ^
dot graph target loc end

dot graph target basicblock start from main basic block 18dot graph target basicblock en1

data_73, points-to NULL, points-to vars: { D.4137 } (nonlocal)
dot graph stmt start if (data_73 == 0B)
test.c:540:6: warning: use location
   if (data == NULL)
      ^
dot graph stmt end

if (data_73 == 0B)

 ================== find cond branch ================= 
if (data_73 == 0B)
Cond in fucntion main basic block 18
 ================== possiable direct basic block ================= 
from main basic block 19
 ================== possiable direct basic block ================= 
from main basic block 20
 ================== warring ================== 
[40;35m    need check this branch possiable have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

====================================zzz=================================
 <ssa_name 0x7ff8bb78ecf0
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784b40 data>
    def_stmt data_73 = malloc (400);
    version 73
    ptr-info 0x7ff8bb7868d0>

 ================== Start Use after free Check ================== 
# .MEM_136 = VDEF <.MEM_112>
free (data_41);
test.c:550:3: warning: Use after free error!: free location 
   free(data);
   ^
data_41 = PHI <0B(17), data_73(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_134 = VDEF <.MEM_133>
free (data_73);
test.c:545:3: warning: Use after free error!: free location 
   free(data);
   ^
data_41 = PHI <0B(17), data_73(20)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_134 = VDEF <.MEM_133>
free (data_73);
test.c:545:3: warning: Use after free error!: free location 
# .MEM_136 = VDEF <.MEM_112>
free (data_41);
test.c:550:3: warning: use location
   free(data);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================
 <function_decl 0x7ff8bb754b00 main
    type <function_type 0x7ff8bb7537e0
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality>
    nothrow public static function-specific-target function-specific-opt QI file test.c line 449 col 5 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> initial <block 0x7ff8bb76bd80>
    result <result_decl 0x7ff8bbc0c7f8 D.4101 type <integer_type 0x7ff8bbc155e8 int>
        ignored SI file test.c line 449 col 5 size <integer_cst 0x7ff8bbc01e28 32> unit size <integer_cst 0x7ff8bbc01e40 4>
        align 32 context <function_decl 0x7ff8bb754b00 main>>
    struct-function 0x7ff8bb76c840>
 <ssa_name 0x7ff8bb78ed80
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784ab0 p4>
    def_stmt p4_80 = malloc (10);
    version 80
    ptr-info 0x7ff8bb7868e8>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

====================================zzz=================================
 <ssa_name 0x7ff8bb78ed80
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784ab0 p4>
    def_stmt p4_80 = malloc (10);
    version 80
    ptr-info 0x7ff8bb7868e8>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m
test.c:554:7: warning: use location
  int *p4 = malloc(10);
       ^

======================================================================
 <function_decl 0x7ff8bb754b00 main
    type <function_type 0x7ff8bb7537e0
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality>
    nothrow public static function-specific-target function-specific-opt QI file test.c line 449 col 5 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> initial <block 0x7ff8bb76bd80>
    result <result_decl 0x7ff8bbc0c7f8 D.4101 type <integer_type 0x7ff8bbc155e8 int>
        ignored SI file test.c line 449 col 5 size <integer_cst 0x7ff8bbc01e28 32> unit size <integer_cst 0x7ff8bbc01e40 4>
        align 32 context <function_decl 0x7ff8bb754b00 main>>
    struct-function 0x7ff8bb76c840>
 <ssa_name 0x7ff8bb78e8b8
    type <pointer_type 0x7ff8bbc1c0a8
        type <void_type 0x7ff8bbc15f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bbc1c0a8>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb753348>>
   
    def_stmt _34 = malloc (201);
    version 34
    ptr-info 0x7ff8bb786828>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

p98 = _34;
test.c:561:6: warning: use location
  p98 = malloc(201);
      ^
dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc en1

dot graph target line desc form basic block 23: p98 = _34;
test.c:561:6: warning: use location
  p98 = malloc(201);
      ^
dot graph target line desend

dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

_34, points-to NULL, points-to vars: { D.4139 } (nonlocal, escaped, escaped heap)
dot graph stmt start p98 = _34;
test.c:561:6: warning: use location
  p98 = malloc(201);
      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_2 = p98;
test.c:362:5: warning: use location
  p98[3] = 300;
     ^
dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc en1

dot graph target line desc form basic block 3: _2 = p98;
test.c:362:5: warning: use location
  p98[3] = 300;
     ^
dot graph target line desend

dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

_34, points-to NULL, points-to vars: { D.4139 } (nonlocal, escaped, escaped heap)
dot graph target basicblock star1 from child7 basic block 3dot graph target basicblock end

dot graph stmt start _2 = p98;
test.c:362:5: warning: use location
  p98[3] = 300;
     ^
dot graph stmt end

dot graph entry main
dot graph target entry end

MEM[(int *)_2 + 12B] = 300;
test.c:362:9: warning: use location
  p98[3] = 300;
         ^
dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc en1

dot graph target line desc form basic block 3: MEM[(int *)_2 + 12B] = 300;
test.c:362:9: warning: use location
  p98[3] = 300;
         ^
dot graph target line desend

dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc end

dot graph target basicblock start from main basic block 3dot graph target basicblock en1

_34, points-to NULL, points-to vars: { D.4139 } (nonlocal, escaped, escaped heap)
dot graph target basicblock star1 from child7 basic block 3dot graph target basicblock end

dot graph stmt start MEM[(int *)_2 + 12B] = 300;
test.c:362:9: warning: use location
  p98[3] = 300;
         ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_3 = p98;
test.c:368:6: warning: use location
   p98[2] = 300;
      ^
dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc en1

dot graph target line desc form basic block 4: _3 = p98;
test.c:368:6: warning: use location
   p98[2] = 300;
      ^
dot graph target line desend

dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

_34, points-to NULL, points-to vars: { D.4139 } (nonlocal, escaped, escaped heap)
dot graph target basicblock star1 from child7 basic block 4dot graph target basicblock end

dot graph stmt start _3 = p98;
test.c:368:6: warning: use location
   p98[2] = 300;
      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

MEM[(int *)_3 + 8B] = 300;
test.c:368:10: warning: use location
   p98[2] = 300;
          ^
dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc en1

dot graph target line desc form basic block 4: MEM[(int *)_3 + 8B] = 300;
test.c:368:10: warning: use location
   p98[2] = 300;
          ^
dot graph target line desend

dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

_34, points-to NULL, points-to vars: { D.4139 } (nonlocal, escaped, escaped heap)
dot graph target basicblock star1 from child7 basic block 4dot graph target basicblock end

dot graph stmt start MEM[(int *)_3 + 8B] = 300;
test.c:368:10: warning: use location
   p98[2] = 300;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_8 = p98;
test.c:192:5: warning: use location
  p98[0] = 98;
     ^
dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc en1

dot graph target line desc form basic block 2: _8 = p98;
test.c:192:5: warning: use location
  p98[0] = 98;
     ^
dot graph target line desend

dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

_34, points-to NULL, points-to vars: { D.4139 } (nonlocal, escaped, escaped heap)
dot graph target basicblock star1 from child basic block 2dot graph target basicblock end

dot graph stmt start _8 = p98;
test.c:192:5: warning: use location
  p98[0] = 98;
     ^
dot graph stmt end

dot graph entry main
dot graph target entry end

*_8 = 98;
test.c:192:9: warning: use location
  p98[0] = 98;
         ^
dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc en1

dot graph target line desc form basic block 2: *_8 = 98;
test.c:192:9: warning: use location
  p98[0] = 98;
         ^
dot graph target line desend

dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

_34, points-to NULL, points-to vars: { D.4139 } (nonlocal, escaped, escaped heap)
dot graph target basicblock star1 from child basic block 2dot graph target basicblock end

dot graph stmt start *_8 = 98;
test.c:192:9: warning: use location
  p98[0] = 98;
         ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_1 = p98;
test.c:388:4: warning: use location
 p98[1] = 99;
    ^
dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc en1

dot graph target line desc form basic block 2: _1 = p98;
test.c:388:4: warning: use location
 p98[1] = 99;
    ^
dot graph target line desend

dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

_34, points-to NULL, points-to vars: { D.4139 } (nonlocal, escaped, escaped heap)
dot graph target basicblock star1 from child2 basic block 2dot graph target basicblock end

dot graph stmt start _1 = p98;
test.c:388:4: warning: use location
 p98[1] = 99;
    ^
dot graph stmt end

dot graph entry main
dot graph target entry end

MEM[(int *)_1 + 4B] = 99;
test.c:388:8: warning: use location
 p98[1] = 99;
        ^
dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc en1

dot graph target line desc form basic block 2: MEM[(int *)_1 + 4B] = 99;
test.c:388:8: warning: use location
 p98[1] = 99;
        ^
dot graph target line desend

dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc end

dot graph target basicblock start from main basic block 2dot graph target basicblock en1

_34, points-to NULL, points-to vars: { D.4139 } (nonlocal, escaped, escaped heap)
dot graph target basicblock star1 from child2 basic block 2dot graph target basicblock end

dot graph stmt start MEM[(int *)_1 + 4B] = 99;
test.c:388:8: warning: use location
 p98[1] = 99;
        ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_35 = p98;
test.c:562:2: warning: use location
  child(p98);
  ^
dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc en1

dot graph target line desc form basic block 23: _35 = p98;
test.c:562:2: warning: use location
  child(p98);
  ^
dot graph target line desend

dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

_34, points-to NULL, points-to vars: { D.4139 } (nonlocal, escaped, escaped heap)
dot graph stmt start _35 = p98;
test.c:562:2: warning: use location
  child(p98);
  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

child (_35);
test.c:562:2: warning: use location
dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc en1

dot graph target line desc form basic block 23: child (_35);
test.c:562:2: warning: use location
  child(p98);
  ^
dot graph target line desend

dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

_34, points-to NULL, points-to vars: { D.4139 } (nonlocal, escaped, escaped heap)
dot graph stmt start child (_35);
test.c:562:2: warning: use location
  child(p98);
  ^
dot graph stmt end

this stmt is child function---child-----

 ================== trace ================== 
 <ssa_name 0x7ff8bb78e8b8
    type <pointer_type 0x7ff8bbc1c0a8
        type <void_type 0x7ff8bbc15f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bbc1c0a8>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb753348>>
   
    def_stmt _34 = malloc (201);
    version 34
    ptr-info 0x7ff8bb786828>
trace fucntion name:child 
[40;44m =======trace_function_path child  function_call count: 10 level :0========  [0m
# .MEM_57 = VDEF <.MEM_56>
free (_9);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_56>
free (_9);
test.c:193:2: warning: use location
  free(pData);
  ^
# .MEM_58 = VDEF <.MEM_57>
free (_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_10);
test.c:194:2: warning: use location
  free(data);
  ^
[40;36m ======= node_fun:child========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate formID : 3038819
from child basic block 2dot graph end relate end

In function â€˜childâ€™:
test.c:176:7: warning: use location
  int *pData = data;
       ^
dot graph relate stmt start ID : 99314530 stmt(LHS) :_1 = data;
test.c:176:7: warning: use location
_1
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 3038819
from child basic block 2dot graph end relate end

test.c:178:9: warning: use location
  *pData += 1;
         ^
dot graph relate stmt start ID : 935452567 stmt(LHS) :_2 = pData;
test.c:178:9: warning: use location
_2
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 3038819
from child basic block 2dot graph end relate end

test.c:178:9: warning: use location
dot graph relate stmt start ID : 815547151 stmt(LHS) :_4 = pData;
test.c:178:9: warning: use location
_4
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 3038819
from child basic block 2dot graph end relate end

test.c:185:9: warning: use location
  *ppData[0] = 10;
         ^
dot graph relate stmt start ID : 771268741 stmt(LHS) :_6 = pData;
test.c:185:9: warning: use location
_6
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 3038819
from child basic block 2dot graph end relate end

test.c:188:3: warning: use location
  **ppData = 12;
   ^
dot graph relate stmt start ID : 1239107290 stmt(LHS) :_7 = pData;
test.c:188:3: warning: use location
_7
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 3038819
from child basic block 2dot graph end relate end

test.c:193:2: warning: use location
  free(pData);
  ^
dot graph relate stmt start ID : 434876578 stmt(LHS) :_9 = pData;
test.c:193:2: warning: use location
_9
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
dot graph start relate for1ID : 3038819
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 818322239 stmt(call) :free (_9);
test.c:193:2: warning: use location
_9
dot graph relate end

[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 3038819
from child basic block 2dot graph end relate end

test.c:194:2: warning: use location
  free(data);
  ^
dot graph relate stmt start ID : 6477409 stmt(LHS) :_10 = data;
test.c:194:2: warning: use location
_10
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
dot graph start relate for1ID : 3038819
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 1658536998 stmt(call) :free (_10);
test.c:194:2: warning: use location
_10
dot graph relate end

[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 3038819
from child basic block 2dot graph end relate end

test.c:195:2: warning: use location
  boo(data);
  ^
dot graph relate stmt start ID : 303738006 stmt(LHS) :_11 = data;
test.c:195:2: warning: use location
_11
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
dot graph start relate for1ID : 3038819
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 1775272405 stmt(call) :boo (_11);
test.c:195:2: warning: use location
_11
dot graph relate end


====================================ffff=================================
 <ssa_name 0x7ff8bb78e8b8
    type <pointer_type 0x7ff8bbc1c0a8
        type <void_type 0x7ff8bbc15f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bbc1c0a8>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb753348>>
   
    def_stmt _34 = malloc (201);
    version 34
    ptr-info 0x7ff8bb786828>
# .MEM_59 = VDEF <.MEM_58>
boo (_11);
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_unlock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_unlock========= [0m
[40;42m =======pre add _ fucntion:boo========= [0m
[40;46m =======add node_fun stack:boo========= [0m
[40;44m =======trace_function_path boo  function_call count: 3 level :1========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
free (b_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
free (b_2(D));
In function â€˜mainâ€™:
test.c:416:2: warning: use location
  free(b);
  ^
# .MEM_9 = VDEF <.MEM_8>
free (b_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (b_2(D));
test.c:417:2: warning: use location
  free(b);
  ^
[40;36m ======= node_fun:boo========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
dot graph start relate formID : 554965722
from boo basic block 2dot graph end relate end

dot graph relate stmt start ID : 1003352956 stmt(call) :free (b_2(D));
In function â€˜booâ€™:
test.c:416:2: warning: use location
  free(b);
  ^
b_2(D)
dot graph relate end

dot graph start relate for1ID : 554965722
from boo basic block 2dot graph end relate end

dot graph relate stmt start ID : 1606048470 stmt(call) :free (b_2(D));
test.c:417:2: warning: use location
  free(b);
  ^
b_2(D)
dot graph relate end

dot graph start relate for1ID : 554965722
from boo basic block 2dot graph end relate end

dot graph relate stmt start ID : 1119703636 stmt(call) :test22 (b_2(D));
test.c:418:2: warning: use location
  test22(b);
  ^
b_2(D)
dot graph relate end


====================================ffff=================================
 <ssa_name 0x7ff8bb78e8b8
    type <pointer_type 0x7ff8bbc1c0a8
        type <void_type 0x7ff8bbc15f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bbc1c0a8>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb753348>>
   
    def_stmt _34 = malloc (201);
    version 34
    ptr-info 0x7ff8bb786828>
# .MEM_10 = VDEF <.MEM_9>
test22 (b_2(D));
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :2========  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_12 = VDEF <.MEM_11(D)>
free (k_2(D));
In function â€˜mainâ€™:
test.c:432:2: warning: use location
  free(k);
  ^
# .MEM_13 = VDEF <.MEM_12>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_13 = VDEF <.MEM_12>
free (k_2(D));
test.c:433:2: warning: use location
  free(k);
  ^
# .MEM_14 = VDEF <.MEM_13>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (k_2(D));
test.c:434:2: warning: use location
  free(k);
  ^
# .MEM_15 = VDEF <.MEM_14>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (k_2(D));
test.c:435:2: warning: use location
  free(k);
  ^
# .MEM_16 = VDEF <.MEM_15>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15>
free (k_2(D));
test.c:436:2: warning: use location
  free(k);
  ^
# .MEM_17 = VDEF <.MEM_16>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_16>
free (k_2(D));
test.c:437:2: warning: use location
  free(k);
  ^
# .MEM_19 = VDEF <.MEM_18>
free (w_10);
[40;36m ======= node_fun:test22========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
dot graph start relate formID : 1512963365
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 561121280 stmt(call) :free (k_2(D));
In function â€˜test22â€™:
test.c:432:2: warning: use location
  free(k);
  ^
k_2(D)
dot graph relate end

dot graph start relate for1ID : 1512963365
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1855931161 stmt(call) :free (k_2(D));
test.c:433:2: warning: use location
  free(k);
  ^
k_2(D)
dot graph relate end

dot graph start relate for1ID : 1512963365
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1115405160 stmt(call) :free (k_2(D));
test.c:434:2: warning: use location
  free(k);
  ^
k_2(D)
dot graph relate end

dot graph start relate for1ID : 1512963365
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 923652246 stmt(call) :free (k_2(D));
test.c:435:2: warning: use location
  free(k);
  ^
k_2(D)
dot graph relate end

dot graph start relate for1ID : 1512963365
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 718510185 stmt(call) :free (k_2(D));
test.c:436:2: warning: use location
  free(k);
  ^
k_2(D)
dot graph relate end

dot graph start relate for1ID : 1512963365
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 2044859212 stmt(call) :free (k_2(D));
test.c:437:2: warning: use location
  free(k);
  ^
k_2(D)
dot graph relate end


====================================ffff=================================
 <ssa_name 0x7ff8bb78e8b8
    type <pointer_type 0x7ff8bbc1c0a8
        type <void_type 0x7ff8bbc15f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bbc1c0a8>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb753348>>
   
    def_stmt _34 = malloc (201);
    version 34
    ptr-info 0x7ff8bb786828>
# .MEM_17 = VDEF <.MEM_16>
free (k_2(D));
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:child5========= [0m
[40;46m =======add node_fun stack:child5========= [0m
[40;44m =======trace_function_path child5  function_call count: 4 level :1========  [0m
# .MEM_15 = VDEF <.MEM_14>
free (pData_6);
[40;36m ======= node_fun:child5========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m

====================================ffff=================================
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m
[40;42m =======pre add _ fucntion:child3========= [0m
[40;46m =======add node_fun stack:child3========= [0m
[40;44m =======trace_function_path child3  function_call count: 4 level :1========  [0m
[40;36m ======= node_fun:child3========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m

====================================ffff=================================
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m
[40;42m =======pre add _ fucntion:child4========= [0m
[40;46m =======add node_fun stack:child4========= [0m
[40;44m =======trace_function_path child4  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:child4========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate formID : 477248550
from child4 basic block 3dot graph end relate end

In function â€˜child4â€™:
test.c:220:11: warning: use location
   *data = *data + 1;
           ^
dot graph relate stmt start ID : 1488196051 stmt(LHS) :_1 = data;
test.c:220:11: warning: use location
_1
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 477248550
from child4 basic block 3dot graph end relate end

test.c:220:3: warning: use location
   *data = *data + 1;
   ^
dot graph relate stmt start ID : 1009251157 stmt(LHS) :_3 = data;
test.c:220:3: warning: use location
_3
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate formID : 477248550
from child4 basic block 4dot graph end relate end

test.c:223:3: warning: use location
   *data = 2;
   ^
dot graph relate stmt start ID : 808597494 stmt(LHS) :_5 = data;
test.c:223:3: warning: use location
_5
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 

====================================ffff=================================
 <ssa_name 0x7ff8bb78e8b8
    type <pointer_type 0x7ff8bbc1c0a8
        type <void_type 0x7ff8bbc15f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bbc1c0a8>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb753348>>
   
    def_stmt _34 = malloc (201);
    version 34
    ptr-info 0x7ff8bb786828>
# VUSE <.MEM_13(D)>
_5 = data;
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:foo========= [0m
[40;46m =======add node_fun stack:foo========= [0m
[40;44m =======trace_function_path foo  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:foo========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:ž========= [0m




dot graph start relate formID : 29620098
from foo basic block 2dot graph end relate end

In function â€˜fooâ€™:
test.c:122:8: warning: use location
  p2[0] = 1;
        ^
dot graph relate stmt start ID : 186344887 stmt(LHS) :*p2_5 = 1;
test.c:122:8: warning: use location
*p2_5
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 

====================================ffff=================================
 <ssa_name 0x7ff8bb78e8b8
    type <pointer_type 0x7ff8bbc1c0a8
        type <void_type 0x7ff8bbc15f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bbc1c0a8>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb753348>>
   
    def_stmt _34 = malloc (201);
    version 34
    ptr-info 0x7ff8bb786828>
# .MEM_14 = VDEF <.MEM_13>
*p2_5 = 1;
fucntion collect path finsh
[40;42m =======pre add _ fucntion:foo2========= [0m
foo2 this is fucntion return value is heap-object 
foo this is fucntion return value is heap-object foo2
[40;46m =======add node_fun stack:foo2========= [0m
[40;44m =======trace_function_path foo2  function_call count: 4 level :2========  [0m
# .MEM_51 = VDEF <.MEM_50>
free (p3_15);
# .MEM_48 = VDEF <.MEM_47>
free (p4_17);
[40;36m ======= node_fun:foo2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:ž========= [0m




dot graph start relate formID : 811636314
from foo2 basic block 3dot graph end relate end

In function â€˜foo2â€™:
test.c:84:9: warning: use location
   p3[0] = 10;
         ^
dot graph relate stmt start ID : 128934629 stmt(LHS) :*p3_15 = 10;
test.c:84:9: warning: use location
*p3_15
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:ž========= [0m




dot graph start relate formID : 811636314
from foo2 basic block 4dot graph end relate end

test.c:90:9: warning: use location
   p4[0] = 10;
         ^
dot graph relate stmt start ID : 1121797455 stmt(LHS) :*p4_17 = 10;
test.c:90:9: warning: use location
*p4_17
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 

====================================ffff=================================
 <ssa_name 0x7ff8bb78e8b8
    type <pointer_type 0x7ff8bbc1c0a8
        type <void_type 0x7ff8bbc15f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bbc1c0a8>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb753348>>
   
    def_stmt _34 = malloc (201);
    version 34
    ptr-info 0x7ff8bb786828>
# .MEM_47 = VDEF <.MEM_46>
*p4_17 = 10;
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 2 level :3========  [0m
[40;36m ======= node_fun:foo3========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m

====================================ffff=================================
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m

 ================== trace ================== 
dot graph entry main
dot graph target entry end

_36 = p98;
In function â€˜mainâ€™:
test.c:563:2: warning: use location
  free(p98);
  ^
dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc en1

dot graph target line desc form basic block 23: _36 = p98;
test.c:563:2: warning: use location
  free(p98);
  ^
dot graph target line desend

dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

_34, points-to NULL, points-to vars: { D.4139 } (nonlocal, escaped, escaped heap)
dot graph stmt start _36 = p98;
test.c:563:2: warning: use location
  free(p98);
  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

free (_36);
test.c:563:2: warning: use location
dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc en1

dot graph target line desc form basic block 23: free (_36);
test.c:563:2: warning: use location
  free(p98);
  ^
dot graph target line desend

dot graph target loc start # .MEM_143 = VDEF <.MEM_142>
_34 = malloc (201);
test.c:561:8: warning: use location
  p98 = malloc(201);
        ^
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

_34, points-to NULL, points-to vars: { D.4139 } (nonlocal, escaped, escaped heap)
dot graph stmt start free (_36);
test.c:563:2: warning: use location
  free(p98);
  ^
dot graph stmt end

this stmt is child function---free-----

 ================== find ================== 
free (_36);
test.c:563:2: warning: use location
[40;32m    HAS FREE STMT count:11 name:free [0m

 ================== find ================== 

====================================zzz=================================
 <ssa_name 0x7ff8bb78e8b8
    type <pointer_type 0x7ff8bbc1c0a8
        type <void_type 0x7ff8bbc15f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7ff8bbc1c0a8>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb753348>>
   
    def_stmt _34 = malloc (201);
    version 34
    ptr-info 0x7ff8bb786828>
dot graph start relate for1ID : 3038819
from child basic block 2dot graph end relate end

subgraph cluster_900203370 dot graph subgraph  start ID : 1775272405 stmt(relate) ï¼Œ Tree ID : 3038819 : boo (_11);
test.c:195:2: warning: use location
  boo(data);
  ^
dot graph subgrapend

dot graph start relate for1ID : 554965722
from boo basic block 2dot graph end relate end

subgraph cluster_213421097 dot graph subgraph  start ID : 1119703636 stmt(relate) ï¼Œ Tree ID : 554965722 : test22 (b_2(D));
test.c:418:2: warning: use location
  test22(b);
  ^
dot graph subgrapend

dot graph start relate for1ID : 1512963365
from test22 basic block 2dot graph end relate end

subgraph cluster_2062060044 dot graph subgraph  start ID : 2044859212 stmt(relate) ï¼Œ Tree ID : 1512963365 : free (k_2(D));
test.c:437:2: warning: use location
  free(k);
  ^
dot graph subgrapend

dot graph start relate for1ID : 477248550
from child4 basic block 4dot graph end relate end

subgraph cluster_1718525609 dot graph subgraph  start ID : 808597494 stmt(relate) ï¼Œ Tree ID : 477248550 : _5 = data;
test.c:223:3: warning: use location
   *data = 2;
   ^
dot graph subgrapend

dot graph start relate for1ID : 29620098
from foo basic block 2dot graph end relate end

subgraph cluster_219898506 dot graph subgraph  start ID : 186344887 stmt(relate) ï¼Œ Tree ID : 29620098 : *p2_5 = 1;
test.c:122:8: warning: use location
  p2[0] = 1;
        ^
dot graph subgrapend

dot graph start relate for1ID : 811636314
from foo2 basic block 4dot graph end relate end

subgraph cluster_1573113394 dot graph subgraph  start ID : 1121797455 stmt(relate) ï¼Œ Tree ID : 811636314 : *p4_17 = 10;
test.c:90:9: warning: use location
   p4[0] = 10;
         ^
dot graph subgrapend


 ================== Start Use after free Check ================== 
# .MEM_145 = VDEF <.MEM_144>
child (_35);
test.c:562:2: warning: Use after free error!: free location 
  child(p98);
  ^
# VUSE <.MEM_19>
_2 = p98;
test.c:362:5: warning: use location
  p98[3] = 300;
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_146 = VDEF <.MEM_145>
free (_36);
test.c:563:2: warning: Use after free error!: free location 
  free(p98);
  ^
# VUSE <.MEM_19>
_2 = p98;
test.c:362:5: warning: use location
  p98[3] = 300;
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_145 = VDEF <.MEM_144>
child (_35);
test.c:562:2: warning: Use after free error!: free location 
  child(p98);
  ^
# .MEM_23 = VDEF <.MEM_19>
MEM[(int *)_2 + 12B] = 300;
test.c:362:9: warning: use location
  p98[3] = 300;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_146 = VDEF <.MEM_145>
free (_36);
test.c:563:2: warning: Use after free error!: free location 
  free(p98);
  ^
# .MEM_23 = VDEF <.MEM_19>
MEM[(int *)_2 + 12B] = 300;
test.c:362:9: warning: use location
  p98[3] = 300;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_145 = VDEF <.MEM_144>
child (_35);
test.c:562:2: warning: Use after free error!: free location 
  child(p98);
  ^
# VUSE <.MEM_19>
_3 = p98;
test.c:368:6: warning: use location
   p98[2] = 300;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_146 = VDEF <.MEM_145>
free (_36);
test.c:563:2: warning: Use after free error!: free location 
  free(p98);
  ^
# VUSE <.MEM_19>
_3 = p98;
test.c:368:6: warning: use location
   p98[2] = 300;
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_145 = VDEF <.MEM_144>
child (_35);
test.c:562:2: warning: Use after free error!: free location 
  child(p98);
  ^
# .MEM_20 = VDEF <.MEM_19>
MEM[(int *)_3 + 8B] = 300;
test.c:368:10: warning: use location
   p98[2] = 300;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_146 = VDEF <.MEM_145>
free (_36);
test.c:563:2: warning: Use after free error!: free location 
  free(p98);
  ^
# .MEM_20 = VDEF <.MEM_19>
MEM[(int *)_3 + 8B] = 300;
test.c:368:10: warning: use location
   p98[2] = 300;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_145 = VDEF <.MEM_144>
child (_35);
test.c:562:2: warning: Use after free error!: free location 
  child(p98);
  ^
# VUSE <.MEM_55>
_8 = p98;
test.c:192:5: warning: use location
  p98[0] = 98;
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_146 = VDEF <.MEM_145>
free (_36);
test.c:563:2: warning: Use after free error!: free location 
  free(p98);
  ^
# VUSE <.MEM_55>
_8 = p98;
test.c:192:5: warning: use location
  p98[0] = 98;
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_145 = VDEF <.MEM_144>
child (_35);
test.c:562:2: warning: Use after free error!: free location 
  child(p98);
  ^
# .MEM_56 = VDEF <.MEM_55>
*_8 = 98;
test.c:192:9: warning: use location
  p98[0] = 98;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_146 = VDEF <.MEM_145>
free (_36);
test.c:563:2: warning: Use after free error!: free location 
  free(p98);
  ^
# .MEM_56 = VDEF <.MEM_55>
*_8 = 98;
test.c:192:9: warning: use location
  p98[0] = 98;
         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_145 = VDEF <.MEM_144>
child (_35);
test.c:562:2: warning: Use after free error!: free location 
  child(p98);
  ^
# VUSE <.MEM_9(D)>
_1 = p98;
test.c:388:4: warning: use location
 p98[1] = 99;
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_146 = VDEF <.MEM_145>
free (_36);
test.c:563:2: warning: Use after free error!: free location 
  free(p98);
  ^
# VUSE <.MEM_9(D)>
_1 = p98;
test.c:388:4: warning: use location
 p98[1] = 99;
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_145 = VDEF <.MEM_144>
child (_35);
test.c:562:2: warning: Use after free error!: free location 
  child(p98);
  ^
# .MEM_10 = VDEF <.MEM_9(D)>
MEM[(int *)_1 + 4B] = 99;
test.c:388:8: warning: use location
 p98[1] = 99;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_146 = VDEF <.MEM_145>
free (_36);
test.c:563:2: warning: Use after free error!: free location 
  free(p98);
  ^
# .MEM_10 = VDEF <.MEM_9(D)>
MEM[(int *)_1 + 4B] = 99;
test.c:388:8: warning: use location
 p98[1] = 99;
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_145 = VDEF <.MEM_144>
child (_35);
test.c:562:2: warning: Use after free error!: free location 
  child(p98);
  ^
# VUSE <.MEM_145>
_36 = p98;
test.c:563:2: warning: use location
  free(p98);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_145 = VDEF <.MEM_144>
child (_35);
test.c:562:2: warning: Use after free error!: free location 
  child(p98);
  ^
# .MEM_146 = VDEF <.MEM_145>
free (_36);
test.c:563:2: warning: use location
  free(p98);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m  	possible double free :11 [0m

======================================================================
 <function_decl 0x7ff8bb754b00 main
    type <function_type 0x7ff8bb7537e0
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality>
    nothrow public static function-specific-target function-specific-opt QI file test.c line 449 col 5 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> initial <block 0x7ff8bb76bd80>
    result <result_decl 0x7ff8bbc0c7f8 D.4101 type <integer_type 0x7ff8bbc155e8 int>
        ignored SI file test.c line 449 col 5 size <integer_cst 0x7ff8bbc01e28 32> unit size <integer_cst 0x7ff8bbc01e40 4>
        align 32 context <function_decl 0x7ff8bb754b00 main>>
    struct-function 0x7ff8bb76c840>
 <ssa_name 0x7ff8bb78e7e0
    type <integer_type 0x7ff8bbc155e8 int public SI
        size <integer_cst 0x7ff8bbc01e28 constant 32>
        unit size <integer_cst 0x7ff8bbc01e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
        pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
   
    def_stmt _31 = foo5 (q_63, q_63);
    version 31>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:foo5 
[40;44m =======trace_function_path foo5  function_call count: 1 level :-100========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---foo5-----
this other function ------foo5-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

_107 = __printf_chk (1, "123%d\n", _31);
dot graph target loc start # .MEM_137 = VDEF <.MEM_113>
_31 = foo5 (q_63, q_63);
test.c:552:2: warning: use location
  printf("123%d\n", foo5(q, q));
  ^
dot graph target loc en1

dot graph target line desc form basic block 23: _107 = __printf_chk (1, "123%d\n", _31);
dot graph target line desend

dot graph target loc start # .MEM_137 = VDEF <.MEM_113>
_31 = foo5 (q_63, q_63);
test.c:552:2: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

_31, points-to anything
dot graph stmt start _107 = __printf_chk (1, "123%d\n", _31);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7ff8bb78e7e0
    type <integer_type 0x7ff8bbc155e8 int public SI
        size <integer_cst 0x7ff8bbc01e28 constant 32>
        unit size <integer_cst 0x7ff8bbc01e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
        pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
   
    def_stmt _31 = foo5 (q_63, q_63);
    version 31>
trace fucntion name:__printf_chk 

 ================== trace ================== 

====================================zzz=================================
 <ssa_name 0x7ff8bb78e7e0
    type <integer_type 0x7ff8bbc155e8 int public SI
        size <integer_cst 0x7ff8bbc01e28 constant 32>
        unit size <integer_cst 0x7ff8bbc01e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
        pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
   
    def_stmt _31 = foo5 (q_63, q_63);
    version 31>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
 <function_decl 0x7ff8bb754b00 main
    type <function_type 0x7ff8bb7537e0
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality>
    nothrow public static function-specific-target function-specific-opt QI file test.c line 449 col 5 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> initial <block 0x7ff8bb76bd80>
    result <result_decl 0x7ff8bbc0c7f8 D.4101 type <integer_type 0x7ff8bbc155e8 int>
        ignored SI file test.c line 449 col 5 size <integer_cst 0x7ff8bbc01e28 32> unit size <integer_cst 0x7ff8bbc01e40 4>
        align 32 context <function_decl 0x7ff8bb754b00 main>>
    struct-function 0x7ff8bb76c840>
 <ssa_name 0x7ff8bb78edc8
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784ab0 p4>
    def_stmt p4_83 = child7 (_33, 1B);
    version 83
    ptr-info 0x7ff8bb786900>

dot graph START

======================================================================

 ================== trace ptable================== 
trace fucntion name:child7 
[40;44m =======trace_function_path child7  function_call count: 4 level :-100========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---child7-----
this other function ------child7-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

free (p4_83);
test.c:560:2: warning: use location
  free(p4);
  ^
dot graph target loc start # .MEM_141 = VDEF <.MEM_140>
p4_83 = child7 (_33, 1B);
test.c:559:5: warning: use location
  p4 = child7(test, p4);
     ^
dot graph target loc en1

dot graph target line desc form basic block 23: free (p4_83);
test.c:560:2: warning: use location
  free(p4);
  ^
dot graph target line desend

dot graph target loc start # .MEM_141 = VDEF <.MEM_140>
p4_83 = child7 (_33, 1B);
test.c:559:5: warning: use location
  p4 = child7(test, p4);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

p4_83, points-to NULL, points-to vars: { D.4129 D.4130 } (nonlocal)
dot graph stmt start free (p4_83);
test.c:560:2: warning: use location
  free(p4);
  ^
dot graph stmt end

this stmt is child function---free-----

 ================== find ================== 
free (p4_83);
test.c:560:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

====================================zzz=================================
 <ssa_name 0x7ff8bb78edc8
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
    var <var_decl 0x7ff8bb784ab0 p4>
    def_stmt p4_83 = child7 (_33, 1B);
    version 83
    ptr-info 0x7ff8bb786900>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================

 <function_decl 0x7ff8bb754b00 main
    type <function_type 0x7ff8bb7537e0
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        QI
        size <integer_cst 0x7ff8bbc01cd8 constant 8>
        unit size <integer_cst 0x7ff8bbc01cf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality>
    nothrow public static function-specific-target function-specific-opt QI file test.c line 449 col 5 align 8 context <translation_unit_decl 0x7ff8bbc0c168 test.c> initial <block 0x7ff8bb76bd80>
    result <result_decl 0x7ff8bbc0c7f8 D.4101 type <integer_type 0x7ff8bbc155e8 int>
        ignored SI file test.c line 449 col 5 size <integer_cst 0x7ff8bbc01e28 32> unit size <integer_cst 0x7ff8bbc01e40 4>
        align 32 context <function_decl 0x7ff8bb754b00 main>>
    struct-function 0x7ff8bb76c840>
 <ssa_name 0x7ff8bb78e900
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
   
    def_stmt _35 = p98;
    version 35
    ptr-info 0x7ff8bb786840>

dot graph START

======================================================================

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

child (_35);
test.c:562:2: warning: use location
  child(p98);
  ^
dot graph target loc start # .MEM_145 = VDEF <.MEM_144>
child (_35);
test.c:562:2: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 23: child (_35);
test.c:562:2: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_145 = VDEF <.MEM_144>
child (_35);
test.c:562:2: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 23dot graph target basicblock en1

dot graph stmt start child (_35);
test.c:562:2: warning: use location
dot graph stmt end

this stmt is child function---child-----

 ================== trace ================== 
 <ssa_name 0x7ff8bb78e900
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
   
    def_stmt _35 = p98;
    version 35
    ptr-info 0x7ff8bb786840>
trace fucntion name:child 
[40;44m =======trace_function_path child  function_call count: 10 level :0========  [0m
# .MEM_57 = VDEF <.MEM_56>
free (_9);
[40;31m  find free stmt free same pointer [0m
# .MEM_57 = VDEF <.MEM_56>
free (_9);
test.c:193:2: warning: use location
  free(pData);
  ^
# .MEM_58 = VDEF <.MEM_57>
free (_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_57>
free (_10);
test.c:194:2: warning: use location
  free(data);
  ^
[40;36m ======= node_fun:child========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate formID : 2128079116
from child basic block 2dot graph end relate end

In function â€˜childâ€™:
test.c:176:7: warning: use location
  int *pData = data;
       ^
dot graph relate stmt start ID : 878132924 stmt(LHS) :_1 = data;
test.c:176:7: warning: use location
_1
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 2128079116
from child basic block 2dot graph end relate end

test.c:178:9: warning: use location
  *pData += 1;
         ^
dot graph relate stmt start ID : 1453735733 stmt(LHS) :_2 = pData;
test.c:178:9: warning: use location
_2
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 2128079116
from child basic block 2dot graph end relate end

test.c:178:9: warning: use location
dot graph relate stmt start ID : 1100299104 stmt(LHS) :_4 = pData;
test.c:178:9: warning: use location
_4
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 2128079116
from child basic block 2dot graph end relate end

test.c:185:9: warning: use location
  *ppData[0] = 10;
         ^
dot graph relate stmt start ID : 243612641 stmt(LHS) :_6 = pData;
test.c:185:9: warning: use location
_6
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 2128079116
from child basic block 2dot graph end relate end

test.c:188:3: warning: use location
  **ppData = 12;
   ^
dot graph relate stmt start ID : 2014857014 stmt(LHS) :_7 = pData;
test.c:188:3: warning: use location
_7
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
dot graph start relate for1ID : 2128079116
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 808746617 stmt(call) :child4 (&data);
test.c:189:2: warning: use location
  child4(&data);
  ^
&data
dot graph relate end

dot graph start relate for1ID : 2128079116
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 1359017801 stmt(call) :child3 (&data);
test.c:190:2: warning: use location
  child3(&data);
  ^
&data
dot graph relate end

dot graph start relate for1ID : 2128079116
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 791025612 stmt(call) :child5 (pData2_21);
test.c:191:2: warning: use location
  child5(pData2);
  ^
pData2_21
dot graph relate end

[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 2128079116
from child basic block 2dot graph end relate end

test.c:193:2: warning: use location
  free(pData);
  ^
dot graph relate stmt start ID : 1527256803 stmt(LHS) :_9 = pData;
test.c:193:2: warning: use location
_9
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
dot graph start relate for1ID : 2128079116
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 1256393366 stmt(call) :free (_9);
test.c:193:2: warning: use location
_9
dot graph relate end

[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 2128079116
from child basic block 2dot graph end relate end

test.c:194:2: warning: use location
  free(data);
  ^
dot graph relate stmt start ID : 1413314401 stmt(LHS) :_10 = data;
test.c:194:2: warning: use location
_10
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
dot graph start relate for1ID : 2128079116
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 782780606 stmt(call) :free (_10);
test.c:194:2: warning: use location
_10
dot graph relate end

[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 2128079116
from child basic block 2dot graph end relate end

test.c:195:2: warning: use location
  boo(data);
  ^
dot graph relate stmt start ID : 1733641916 stmt(LHS) :_11 = data;
test.c:195:2: warning: use location
_11
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
dot graph start relate for1ID : 2128079116
from child basic block 2dot graph end relate end

dot graph relate stmt start ID : 754026804 stmt(call) :boo (_11);
test.c:195:2: warning: use location
_11
dot graph relate end


====================================ffff=================================
 <ssa_name 0x7ff8bb78e900
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
   
    def_stmt _35 = p98;
    version 35
    ptr-info 0x7ff8bb786840>
# .MEM_59 = VDEF <.MEM_58>
boo (_11);
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_unlock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_unlock========= [0m
[40;42m =======pre add _ fucntion:boo========= [0m
[40;46m =======add node_fun stack:boo========= [0m
[40;44m =======trace_function_path boo  function_call count: 3 level :1========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
free (b_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
free (b_2(D));
In function â€˜mainâ€™:
test.c:416:2: warning: use location
  free(b);
  ^
# .MEM_9 = VDEF <.MEM_8>
free (b_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_9 = VDEF <.MEM_8>
free (b_2(D));
test.c:417:2: warning: use location
  free(b);
  ^
[40;36m ======= node_fun:boo========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
dot graph start relate formID : 1792031764
from boo basic block 2dot graph end relate end

dot graph relate stmt start ID : 394755763 stmt(call) :free (b_2(D));
In function â€˜booâ€™:
test.c:416:2: warning: use location
  free(b);
  ^
b_2(D)
dot graph relate end

dot graph start relate for1ID : 1792031764
from boo basic block 2dot graph end relate end

dot graph relate stmt start ID : 783646903 stmt(call) :free (b_2(D));
test.c:417:2: warning: use location
  free(b);
  ^
b_2(D)
dot graph relate end

dot graph start relate for1ID : 1792031764
from boo basic block 2dot graph end relate end

dot graph relate stmt start ID : 1978376651 stmt(call) :test22 (b_2(D));
test.c:418:2: warning: use location
  test22(b);
  ^
b_2(D)
dot graph relate end


====================================ffff=================================
 <ssa_name 0x7ff8bb78e900
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
   
    def_stmt _35 = p98;
    version 35
    ptr-info 0x7ff8bb786840>
# .MEM_10 = VDEF <.MEM_9>
test22 (b_2(D));
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:test22========= [0m
[40;46m =======add node_fun stack:test22========= [0m
[40;44m =======trace_function_path test22  function_call count: 2 level :2========  [0m
# .MEM_12 = VDEF <.MEM_11(D)>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_12 = VDEF <.MEM_11(D)>
free (k_2(D));
In function â€˜mainâ€™:
test.c:432:2: warning: use location
  free(k);
  ^
# .MEM_13 = VDEF <.MEM_12>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_13 = VDEF <.MEM_12>
free (k_2(D));
test.c:433:2: warning: use location
  free(k);
  ^
# .MEM_14 = VDEF <.MEM_13>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_13>
free (k_2(D));
test.c:434:2: warning: use location
  free(k);
  ^
# .MEM_15 = VDEF <.MEM_14>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (k_2(D));
test.c:435:2: warning: use location
  free(k);
  ^
# .MEM_16 = VDEF <.MEM_15>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_16 = VDEF <.MEM_15>
free (k_2(D));
test.c:436:2: warning: use location
  free(k);
  ^
# .MEM_17 = VDEF <.MEM_16>
free (k_2(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_17 = VDEF <.MEM_16>
free (k_2(D));
test.c:437:2: warning: use location
  free(k);
  ^
# .MEM_19 = VDEF <.MEM_18>
free (w_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_19 = VDEF <.MEM_18>
free (w_10);
test.c:439:2: warning: use location
  free(w);
  ^
[40;36m ======= node_fun:test22========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
dot graph start relate formID : 1206392077
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 912581532 stmt(call) :free (k_2(D));
In function â€˜test22â€™:
test.c:432:2: warning: use location
  free(k);
  ^
k_2(D)
dot graph relate end

dot graph start relate for1ID : 1206392077
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 952690458 stmt(call) :free (k_2(D));
test.c:433:2: warning: use location
  free(k);
  ^
k_2(D)
dot graph relate end

dot graph start relate for1ID : 1206392077
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 686091894 stmt(call) :free (k_2(D));
test.c:434:2: warning: use location
  free(k);
  ^
k_2(D)
dot graph relate end

dot graph start relate for1ID : 1206392077
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1812784902 stmt(call) :free (k_2(D));
test.c:435:2: warning: use location
  free(k);
  ^
k_2(D)
dot graph relate end

dot graph start relate for1ID : 1206392077
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1166111555 stmt(call) :free (k_2(D));
test.c:436:2: warning: use location
  free(k);
  ^
k_2(D)
dot graph relate end

dot graph start relate for1ID : 1206392077
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 600668290 stmt(call) :free (k_2(D));
test.c:437:2: warning: use location
  free(k);
  ^
k_2(D)
dot graph relate end

dot graph start relate for1ID : 1206392077
from test22 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1383826864 stmt(call) :free (w_10);
test.c:439:2: warning: use location
  free(w);
  ^
w_10
dot graph relate end


====================================ffff=================================
 <ssa_name 0x7ff8bb78e900
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
   
    def_stmt _35 = p98;
    version 35
    ptr-info 0x7ff8bb786840>
# .MEM_19 = VDEF <.MEM_18>
free (w_10);
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:child5========= [0m
[40;46m =======add node_fun stack:child5========= [0m
[40;44m =======trace_function_path child5  function_call count: 4 level :1========  [0m
# .MEM_15 = VDEF <.MEM_14>
free (pData_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_15 = VDEF <.MEM_14>
free (pData_6);
In function â€˜mainâ€™:
test.c:296:3: warning: use location
   free(pData);
   ^
[40;36m ======= node_fun:child5========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate formID : 1386010062
from child5 basic block 2dot graph end relate end

In function â€˜child5â€™:
test.c:279:8: warning: use location
  pData = pData + 1;
        ^
dot graph relate stmt start ID : 26298036 stmt(LHS) :pData_6 = data_5(D) + 4;
test.c:279:8: warning: use location
pData_6
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
dot graph start relate formID : 1386010062
from child5 basic block 4dot graph end relate end

dot graph relate stmt start ID : 1258606831 stmt(call) :free (pData_6);
test.c:296:3: warning: use location
   free(pData);
   ^
pData_6
dot graph relate end


====================================ffff=================================
 <ssa_name 0x7ff8bb78e900
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
   
    def_stmt _35 = p98;
    version 35
    ptr-info 0x7ff8bb786840>
# .MEM_15 = VDEF <.MEM_14>
free (pData_6);
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m
[40;42m =======pre add _ fucntion:child3========= [0m
[40;46m =======add node_fun stack:child3========= [0m
[40;44m =======trace_function_path child3  function_call count: 4 level :1========  [0m
[40;36m ======= node_fun:child3========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m

====================================ffff=================================
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:pthread_detach========= [0m
[40;46m =======add node_fun stack:pthread_detach========= [0m
[40;42m =======pre add _ fucntion:pthread_self========= [0m
[40;46m =======add node_fun stack:pthread_self========= [0m
[40;42m =======pre add _ fucntion:child4========= [0m
[40;46m =======add node_fun stack:child4========= [0m
[40;44m =======trace_function_path child4  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:child4========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate formID : 6893504
from child4 basic block 3dot graph end relate end

In function â€˜child4â€™:
test.c:220:11: warning: use location
   *data = *data + 1;
           ^
dot graph relate stmt start ID : 2136739755 stmt(LHS) :_1 = data;
test.c:220:11: warning: use location
_1
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 6893504
from child4 basic block 3dot graph end relate end

test.c:220:3: warning: use location
   *data = *data + 1;
   ^
dot graph relate stmt start ID : 539949411 stmt(LHS) :_3 = data;
test.c:220:3: warning: use location
_3
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate formID : 6893504
from child4 basic block 4dot graph end relate end

test.c:223:3: warning: use location
   *data = 2;
   ^
dot graph relate stmt start ID : 1107192609 stmt(LHS) :_5 = data;
test.c:223:3: warning: use location
_5
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 

====================================ffff=================================
 <ssa_name 0x7ff8bb78e900
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
   
    def_stmt _35 = p98;
    version 35
    ptr-info 0x7ff8bb786840>
# VUSE <.MEM_13(D)>
_5 = data;
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:foo========= [0m
[40;46m =======add node_fun stack:foo========= [0m
[40;44m =======trace_function_path foo  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:foo========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m

====================================ffff=================================
fucntion collect path finsh
[40;42m =======pre add _ fucntion:foo2========= [0m
foo2 this is fucntion return value is heap-object 
foo this is fucntion return value is heap-object foo2
[40;46m =======add node_fun stack:foo2========= [0m
[40;44m =======trace_function_path foo2  function_call count: 4 level :2========  [0m
# .MEM_51 = VDEF <.MEM_50>
free (p3_15);
[40;31m  find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_50>
free (p3_15);
In function â€˜mainâ€™:
test.c:85:3: warning: use location
   free(p3);
   ^
# .MEM_48 = VDEF <.MEM_47>
free (p4_17);
[40;31m  find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (p4_17);
test.c:91:3: warning: use location
   free(p4);
   ^
[40;36m ======= node_fun:foo2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
dot graph start relate formID : 407322777
from foo2 basic block 2dot graph end relate end

dot graph relate stmt start ID : 1915939226 stmt(call) :foo3 (p3_15);
In function â€˜foo2â€™:
test.c:79:2: warning: use location
  foo3(p3);
  ^
p3_15
dot graph relate end

dot graph start relate formID : 407322777
from foo2 basic block 3dot graph end relate end

dot graph relate stmt start ID : 1591886550 stmt(call) :free (p3_15);
test.c:85:3: warning: use location
   free(p3);
   ^
p3_15
dot graph relate end

[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 407322777
from foo2 basic block 3dot graph end relate end

test.c:86:10: warning: use location
   return p3;
          ^
dot graph relate stmt start ID : 1198348389 stmt(LHS) :_33 = p3_15;
test.c:86:10: warning: use location
_33
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
dot graph start relate formID : 407322777
from foo2 basic block 4dot graph end relate end

dot graph relate stmt start ID : 1295712381 stmt(call) :free (p4_17);
test.c:91:3: warning: use location
   free(p4);
   ^
p4_17
dot graph relate end

[40;36m ======= relate node_fun argument222:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs2:’========= [0m




dot graph start relate for1ID : 407322777
from foo2 basic block 4dot graph end relate end

test.c:92:10: warning: use location
   return p4;
          ^
dot graph relate stmt start ID : 700796268 stmt(LHS) :_29 = p4_17;
test.c:92:10: warning: use location
_29
dot graph relate end


 ================== warring ================== 
[40;35m this pointer possible  reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 

====================================ffff=================================
 <ssa_name 0x7ff8bb78e900
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
   
    def_stmt _35 = p98;
    version 35
    ptr-info 0x7ff8bb786840>
_29 = p4_17;
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:foo3========= [0m
[40;46m =======add node_fun stack:foo3========= [0m
[40;44m =======trace_function_path foo3  function_call count: 2 level :3========  [0m
[40;36m ======= node_fun:foo3========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m

====================================ffff=================================
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:pthread_mutex_lock========= [0m
[40;46m =======add node_fun stack:pthread_mutex_lock========= [0m

 ================== trace ================== 

====================================zzz=================================
 <ssa_name 0x7ff8bb78e900
    type <pointer_type 0x7ff8bbc1ca80
        type <integer_type 0x7ff8bbc155e8 int public SI
            size <integer_cst 0x7ff8bbc01e28 constant 32>
            unit size <integer_cst 0x7ff8bbc01e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7ff8bbc155e8 precision 32 min <integer_cst 0x7ff8bbc01de0 -2147483648> max <integer_cst 0x7ff8bbc01df8 2147483647>
            pointer_to_this <pointer_type 0x7ff8bbc1ca80>>
        public unsigned DI
        size <integer_cst 0x7ff8bbc01be8 constant 64>
        unit size <integer_cst 0x7ff8bbc01c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7ff8bb760738>>
   
    def_stmt _35 = p98;
    version 35
    ptr-info 0x7ff8bb786840>
dot graph start relate for1ID : 2128079116
from child basic block 2dot graph end relate end

subgraph cluster_2078492988 dot graph subgraph  start ID : 754026804 stmt(relate) ï¼Œ Tree ID : 2128079116 : boo (_11);
In function â€˜mainâ€™:
test.c:195:2: warning: use location
  boo(data);
  ^
dot graph subgrapend

dot graph start relate for1ID : 1792031764
from boo basic block 2dot graph end relate end

subgraph cluster_286954537 dot graph subgraph  start ID : 1978376651 stmt(relate) ï¼Œ Tree ID : 1792031764 : test22 (b_2(D));
test.c:418:2: warning: use location
  test22(b);
  ^
dot graph subgrapend

dot graph start relate for1ID : 1206392077
from test22 basic block 2dot graph end relate end

subgraph cluster_1218205947 dot graph subgraph  start ID : 1383826864 stmt(relate) ï¼Œ Tree ID : 1206392077 : free (w_10);
test.c:439:2: warning: use location
  free(w);
  ^
dot graph subgrapend

dot graph start relate for1ID : 1386010062
from child5 basic block 4dot graph end relate end

subgraph cluster_1723041104 dot graph subgraph  start ID : 1258606831 stmt(relate) ï¼Œ Tree ID : 1386010062 : free (pData_6);
test.c:296:3: warning: use location
   free(pData);
   ^
dot graph subgrapend

dot graph start relate for1ID : 6893504
from child4 basic block 4dot graph end relate end

subgraph cluster_681710300 dot graph subgraph  start ID : 1107192609 stmt(relate) ï¼Œ Tree ID : 6893504 : _5 = data;
test.c:223:3: warning: use location
   *data = 2;
   ^
dot graph subgrapend

dot graph start relate for1ID : 407322777
from foo2 basic block 4dot graph end relate end

subgraph cluster_2001852850 dot graph subgraph  start ID : 700796268 stmt(relate) ï¼Œ Tree ID : 407322777 : _29 = p4_17;
test.c:92:10: warning: use location
   return p4;
          ^
dot graph subgrapend


 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m  	possible double free :14 [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 24
 [0m
[40;34m    used_stmt array stack totalsize of : 648
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
algorithm time: 0.066945 s
=======Mapping node_fun:foo5=========
<bb 2> [100.00%]:
_1 = *z_4(D);
_8 = __printf_chk (1, "test1%d\n", _1);
_2 = *y_5(D);
_7 = __printf_chk (1, "test2%d\n", _2);
_6 = __printf_chk (1, "test3%d\n", 10);
return 10;

=======is loop:0=========
=======Mapping node_fun:foo3=========
<bb 2> [100.00%]:
if (test_6(D) != 0)
  goto <bb 3>; [46.00%]
else
  goto <bb 4>; [54.00%]

=======is loop:0=========
<bb 3> [46.00%]:
_1 = malloc (1);
_2 = (long int) _1;
_3 = (int) _2;
*z_11(D) = _3;
goto <bb 5>; [100.00%]

=======is loop:0=========
<bb 4> [54.00%]:
p2_9 = malloc (2);

=======is loop:0=========
<bb 5> [100.00%]:
# p2_4 = PHI <p2_13(D)(3), p2_9(4)>
*p2_4 = 10;
_15 = __printf_chk (1, "%d", p2_4);
return;

=======is loop:0=========
=======Mapping node_fun:foo2=========
<bb 2> [100.00%]:
_1 = (long unsigned int) z_10(D);
a2_13 = malloc (_1);
_2 = (long unsigned int) z_10(D);
p3_15 = malloc (_2);
_3 = (long unsigned int) z_10(D);
p4_17 = malloc (_3);
_4 = malloc (200);
p99 = _4;
_5 = p99;
*_5 = 99;
_6 = p99;
MEM[(int *)_6 + 4B] = 100;
pthread_mutex_lock (&mLock);
pthread_mutex_lock (&mLock2);
pthread_mutex_lock (&mLock3);
foo3 (p3_15);
if (tmp_26(D) > 10)
  goto <bb 3>; [46.00%]
else
  goto <bb 4>; [54.00%]

=======is loop:0=========
<bb 3> [46.00%]:
_7 = p99;
MEM[(int *)_7 + 4B] = 200;
*p3_15 = 10;
free (p3_15);
_33 = p3_15;
goto <bb 5>; [100.00%]

=======is loop:0=========
<bb 4> [54.00%]:
*p4_17 = 10;
free (p4_17);
_29 = p4_17;

=======is loop:0=========
<bb 5> [100.00%]:
# _8 = PHI <p3_15(3), p4_17(4)>
return _8;

=======is loop:0=========
=======Mapping node_fun:foo=========
<bb 2> [100.00%]:
p2_5 = malloc (1);
*p2_5 = 1;
_1 = p99;
MEM[(int *)_1 + 4B] = 1000;
_2 = p99;
MEM[(int *)_2 + 8B] = 200;
_11 = foo2 (z_9(D));
return _11;

=======is loop:0=========
=======Mapping node_fun:child4=========
<bb 2> [100.00%]:
if (t_7(D) != 0)
  goto <bb 3>; [46.00%]
else
  goto <bb 4>; [54.00%]

=======is loop:0=========
<bb 3> [46.00%]:
_1 = data;
_2 = *_1;
_3 = data;
_4 = _2 + 1;
*_3 = _4;
goto <bb 5>; [100.00%]

=======is loop:0=========
<bb 4> [54.00%]:
_5 = data;
*_5 = 2;

=======is loop:0=========
<bb 5> [100.00%]:
_11 = __printf_chk (1, "asdda%d\n", &data);
return;

=======is loop:0=========
=======Mapping node_fun:child3=========
<bb 2> [100.00%]:
_1 = pthread_self ();
pthread_detach (_1);
_6 = __printf_chk (1, "asdda%d\n", &MEM[(void *)&data + 4B]);
_5 = __printf_chk (1, "asdda%d\n", 10);
free (&data);
return;

=======is loop:0=========
=======Mapping node_fun:child5=========
<bb 2> [100.00%]:
_1 = pthread_self ();
pthread_detach (_1);
pData_6 = data_5(D) + 4;
if (c_7(D) != 0)
  goto <bb 3>; [46.00%]
else
  goto <bb 4>; [54.00%]

=======is loop:0=========
<bb 3> [46.00%]:
_9 = __printf_chk (1, "asdda%d\n", pData_6);
goto <bb 5>; [100.00%]

=======is loop:0=========
<bb 4> [54.00%]:
_10 = __printf_chk (1, "asdda%d\n", c_7(D));
free (pData_6);

=======is loop:0=========
<bb 5> [100.00%]:
return;

=======is loop:0=========
=======Mapping node_fun:child7=========
<bb 2> [100.00%]:
_1 = pthread_self ();
pthread_detach (_1);
if (c_9(D) != 0)
  goto <bb 3>; [46.00%]
else
  goto <bb 4>; [54.00%]

=======is loop:0=========
<bb 3> [46.00%]:
_2 = p98;
MEM[(int *)_2 + 12B] = 300;
_15 = malloc (10);
goto <bb 5>; [100.00%]

=======is loop:0=========
<bb 4> [54.00%]:
_3 = p98;
MEM[(int *)_3 + 8B] = 300;
_16 = __printf_chk (1, "asdda%d\n", c_9(D));
_12 = malloc (30);

=======is loop:0=========
<bb 5> [100.00%]:
# _4 = PHI <_15(3), _12(4)>
return _4;

=======is loop:0=========
=======Mapping node_fun:boo=========
<bb 2> [100.00%]:
free (b_2(D));
free (b_2(D));
test22 (b_2(D));
_6 = __printf_chk (1, "asdda\n");
return;

=======is loop:0=========
=======Mapping node_fun:test22=========
<bb 2> [100.00%]:
free (k_2(D));
free (k_2(D));
free (k_2(D));
free (k_2(D));
free (k_2(D));
free (k_2(D));
w_10 = malloc (5);
free (w_10);
return;

=======is loop:0=========
=======Mapping node_fun:child=========
<bb 2> [100.00%]:
pthread_mutex_lock (&mLock);
pthread_mutex_lock (&mLock);
a99_16 = foo (20);
_38 = __printf_chk (1, "asdda%d\n", a99_16);
ppData_18 = malloc (10);
_1 = data;
pData = _1;
pData2_21 = malloc (10);
_2 = pData;
_3 = *_2;
_4 = pData;
_5 = _3 + 1;
*_4 = _5;
data2 = 0;
data = 10B;
pData = &data2;
_6 = pData;
*_6 = 10;
_7 = pData;
*_7 = 12;
child4 (&data);
child3 (&data);
child5 (pData2_21);
_8 = p98;
*_8 = 98;
_9 = pData;
free (_9);
_10 = data;
free (_10);
_11 = data;
boo (_11);
free (&pData);
pthread_mutex_unlock (&mLock);
free (&pData);
pData ={v} {CLOBBER};
data2 ={v} {CLOBBER};
return;

=======is loop:0=========
=======Mapping node_fun:child2=========
<bb 2> [100.00%]:
_1 = p98;
MEM[(int *)_1 + 4B] = 99;
_2 = data_8(D);
child3 (_2);
_3 = data_8(D);
free (_3);
return;

=======is loop:0=========
=======Mapping node_fun:main=========
<bb 2> [25.00%]:
size_78 = 2;
_1 = 2;
_2 = 2;
_3 = 32;
a_51 = malloc (32);
goto <bb 4>; [100.00%]

=======is loop:0=========
<bb 3> [50.01%]:
_4 = (long unsigned int) i_37;
_5 = _4 * 16;
_6 = a_51 + _5;
_6->name = "Testname";
_7 = (long unsigned int) i_37;
_8 = _7 * 16;
_9 = a_51 + _8;
_9->nummer = 123;
i_104 = i_37 + 1;

=======is loop:1=========
<bb 4> [75.01%]:
# i_37 = PHI <0(2), i_104(3)>
_10 = 2;
if (i_37 <= 1)
  goto <bb 3>; [66.67%]
else
  goto <bb 5>; [33.33%]

=======is loop:1=========
<bb 5> [25.00%]:
free (a_51);
goto <bb 7>; [100.00%]

=======is loop:0=========
<bb 6> [50.01%]:
_11 = (long unsigned int) i_38;
_12 = _11 * 16;
_13 = a_51 + _12;
_14 = _13->nummer;
_15 = (long unsigned int) i_38;
_16 = _15 * 16;
_17 = a_51 + _16;
_18 = _17->name;
_91 = __printf_chk (1, "%s, %d\n", _18, _14);
i_101 = i_38 + 1;

=======is loop:1=========
<bb 7> [75.01%]:
# i_38 = PHI <0(5), i_101(6)>
_19 = 2;
if (i_38 <= 1)
  goto <bb 6>; [66.67%]
else
  goto <bb 8>; [33.33%]

=======is loop:1=========
<bb 8> [25.00%]:
input[0] = 1;
input[1] = 2;
pthread_attr_init (&attr);
pthread_attr_init (&attr2);
pthread_attr_setdetachstate (&attr, 1);
pthread_attr_setdetachstate (&attr2, 0);
_20 = (long int) input2_59(D);
_21 = (void *) _20;
pthread_create (&t, &attr2, child2, _21);
_22 = t;
pthread_join (_22, 0B);
goto <bb 10>; [100.00%]

=======is loop:0=========
<bb 9> [75.00%]:
_23 = &t2[i_39];
err_99 = pthread_create (_23, &attr2, child, 0B);
_24 = t2[i_39];
_105 = __printf_chk (1, "%ld\n", _24);
i_100 = i_39 + 1;

=======is loop:1=========
<bb 10> [100.00%]:
# i_39 = PHI <0(8), i_100(9)>
if (i_39 <= 2)
  goto <bb 9>; [75.00%]
else
  goto <bb 11>; [25.00%]

=======is loop:1=========
<bb 11> [25.00%]:
q_63 = malloc (70);
q2_65 = malloc (20);
_25 = q_63 != 0B;
_26 = test_66(D) != 0;
_27 = _25 & _26;
if (_27 != 0)
  goto <bb 12>; [50.00%]
else
  goto <bb 14>; [50.00%]

=======is loop:0=========
<bb 12> [12.50%]:
child (q_63);
*q_63 = 10;
free (q_63);

=======is loop:0=========
<bb 13> [25.00%]:
# i_45 = PHI <0(12), 0(14)>
goto <bb 16>; [100.00%]

=======is loop:0=========
<bb 14> [12.50%]:
*q_63 = 20;
_106 = __printf_chk (1, "test\n");
goto <bb 13>; [100.00%]

=======is loop:0=========
<bb 15> [75.00%]:
_28 = t2[i_40];
pthread_join (_28, 0B);
i_97 = i_40 + 1;

=======is loop:1=========
<bb 16> [100.00%]:
# i_40 = PHI <i_45(13), i_97(15)>
if (i_40 <= 2)
  goto <bb 15>; [75.00%]
else
  goto <bb 17>; [25.00%]

=======is loop:1=========
<bb 17> [25.00%]:
_29 = staticTrue;
if (_29 != 0)
  goto <bb 18>; [33.00%]
else
  goto <bb 21>; [67.00%]

=======is loop:0=========
<bb 18> [8.25%]:
data_73 = malloc (400);
if (data_73 == 0B)
  goto <bb 19>; [0.04%]
else
  goto <bb 20>; [99.96%]

=======is loop:0=========
<bb 19> [0.00%]:
exit (-1);

=======is loop:0=========
<bb 20> [8.25%]:
free (data_73);

=======is loop:0=========
<bb 21> [25.00%]:
# data_41 = PHI <0B(17), data_73(20)>
_30 = staticTrue;
if (_30 != 0)
  goto <bb 22>; [36.64%]
else
  goto <bb 23>; [63.36%]

=======is loop:0=========
<bb 22> [9.16%]:
free (data_41);

=======is loop:0=========
<bb 23> [25.00%]:
_31 = foo5 (q_63, q_63);
_107 = __printf_chk (1, "123%d\n", _31);
p4_80 = malloc (10);
child4 (1B);
_32 = (long int) test_66(D);
_33 = (void *) _32;
p4_83 = child7 (_33, 1B);
free (p4_83);
_34 = malloc (201);
p98 = _34;
_35 = p98;
child (_35);
_36 = p98;
free (_36);
input ={v} {CLOBBER};
attr ={v} {CLOBBER};
attr2 ={v} {CLOBBER};
t ={v} {CLOBBER};
t2 ={v} {CLOBBER};
return 0;

=======is loop:0=========
time: 0.069392 s
test.c: In function â€˜child3â€™:
test.c:262:2: warning: attempt to free a non-heap object â€˜dataâ€™ [-Wfree-nonheap-object]
  free(&data);
  ^
test.c: In function â€˜childâ€™:
test.c:193:2: warning: attempt to free a non-heap object â€˜data2â€™ [-Wfree-nonheap-object]
  free(pData);
  ^
test.c:196:2: warning: attempt to free a non-heap object â€˜pDataâ€™ [-Wfree-nonheap-object]
  free(ppData);
  ^
test.c:198:2: warning: attempt to free a non-heap object â€˜pDataâ€™ [-Wfree-nonheap-object]
  free(ppData);
  ^
