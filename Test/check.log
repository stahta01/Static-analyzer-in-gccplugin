In file included from test.c:5:0:
common.h: In function â€˜discard_my_cleanupsâ€™:
common.h:94:21: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
   printf("freearg: %x\n", ptr->arg);
                    ~^     ~~~~~~~~
                    %p
common.h: In function â€˜do_my_cleanupsâ€™:
common.h:108:13: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
    printf("%x\n", ptr->arg);
            ~^     ~~~~~~~~
            %p
test.c: In function â€˜filename_cmpâ€™:
test.c:131:10: warning: implicit declaration of function â€˜strcmpâ€™ [-Wimplicit-function-declaration]
   return strcmp(s1, s2);
          ^~~~~~
test.c: In function â€˜template_in_dirâ€™:
test.c:170:23: warning: implicit declaration of function â€˜strrchrâ€™ [-Wimplicit-function-declaration]
   const char *slash = strrchr (path, '/');
                       ^~~~~~~
test.c:170:23: warning: incompatible implicit declaration of built-in function â€˜strrchrâ€™
test.c:170:23: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strrchrâ€™
test.c:178:7: warning: implicit declaration of function â€˜memcpyâ€™ [-Wimplicit-function-declaration]
       memcpy (tmpname, path, len);
       ^~~~~~
test.c:178:7: warning: incompatible implicit declaration of built-in function â€˜memcpyâ€™
test.c:178:7: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memcpyâ€™
test.c:187:3: warning: incompatible implicit declaration of built-in function â€˜memcpyâ€™
   memcpy (tmpname + len, template, sizeof (template));
   ^~~~~~
test.c:187:3: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memcpyâ€™
test.c: In function â€˜make_tempnameâ€™:
test.c:206:3: warning: implicit declaration of function â€˜closeâ€™; did you mean â€˜pcloseâ€™? [-Wimplicit-function-declaration]
   close (fd);
   ^~~~~
   pclose
test.c: In function â€˜set_timesâ€™:
test.c:228:14: warning: implicit declaration of function â€˜utimeâ€™; did you mean â€˜futimensâ€™? [-Wimplicit-function-declaration]
     result = utime (destination, tb);
              ^~~~~
              futimens
test.c: In function â€˜smart_renameâ€™:
test.c:281:12: warning: implicit declaration of function â€˜chownâ€™ [-Wimplicit-function-declaration]
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^~~~~
test.c:289:4: warning: implicit declaration of function â€˜unlinkâ€™; did you mean â€˜unixâ€™? [-Wimplicit-function-declaration]
    unlink (from);
    ^~~~~~
    unix
test.c: In function â€˜copy_mainâ€™:
test.c:372:25: warning: passing argument 2 of â€˜set_timesâ€™ from incompatible pointer type [-Wincompatible-pointer-types]
     set_times (tmpname, &statbuf);
                         ^
test.c:211:1: note: expected â€˜const struct stat *â€™ but argument is of type â€˜int *â€™
 set_times (const char *destination, const struct stat *statbuf)
 ^~~~~~~~~
=======ipa_pta=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
# .MEM_15 = VDEF <.MEM_14(D)>
tb[0] = _1;
# .MEM_16 = VDEF <.MEM_15>
tb[1] = _2;
# .MEM_17 = VDEF <.MEM_16>
result_10 = utime (destination_8(D), &tb);
# .MEM_19 = VDEF <.MEM_18>
_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
# VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
# .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
# .MEM_87 = VDEF <.MEM_86>
memcpy (tmpname_45, input_filename_15, len_43);
# .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
# .MEM_89 = VDEF <.MEM_76>
memcpy (_51, "stXXXXXX", 9);
# .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
# .MEM_115 = VDEF <.MEM_114>
exit (1);
# .MEM_95 = VDEF <.MEM_78>
_53 = rand ();
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
# .MEM_98 = VDEF <.MEM_80>
_75 = __printf_chk (1, "%d\n", _74);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
=======================================================
[40;44m =======node_fun:set_times========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path set_times  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;33m =======POP node_fun stack:utime========= [0m
[40;42m =======pre_check_funciton:set_times========= [0m
[40;42m =======start_check_funciton:set_times========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faf466309d8
    type <pointer_type 0x7faf4615aa80
        type <integer_type 0x7faf4615a9d8 char readonly string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615aa80>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faf4616e300 destination>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7faf46178b10>
 <ssa_name 0x7faf466309d8
    type <pointer_type 0x7faf4615aa80
        type <integer_type 0x7faf4615a9d8 char readonly string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615aa80>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faf4616e300 destination>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7faf46178b10>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
dot graph entry set_times
dot graph target entry end

_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
dot graph target loc start # .MEM_17 = VDEF <.MEM_16>
result_10 = utime (destination_8(D), &tb);
In function â€˜set_timesâ€™:
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
dot graph target loc en1

dot graph target line desc form basic block 3: _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
dot graph target line desend

dot graph target loc start # .MEM_17 = VDEF <.MEM_16>
result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
dot graph target loc end

dot graph target basicblock start from set_times basic block 3dot graph target basicblock en1

dot graph stmt start _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
result_10 = utime (destination_8(D), &tb);
dot graph stmt end

dot graph stmt start _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf466309d8
    type <pointer_type 0x7faf4615aa80
        type <integer_type 0x7faf4615a9d8 char readonly string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615aa80>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faf4616e300 destination>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7faf46178b10>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry set_times
dot graph target entry end

result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
dot graph target loc start # .MEM_17 = VDEF <.MEM_16>
result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_17 = VDEF <.MEM_16>
result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
dot graph target loc end

dot graph target basicblock start from set_times basic block 2dot graph target basicblock en1

dot graph stmt start result_10 = utime (destination_8(D), &tb);
result_10 = utime (destination_8(D), &tb);
dot graph stmt end

dot graph stmt start result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
dot graph stmt end

this stmt is child function---utime-----

 ================== trace ================== 
 <ssa_name 0x7faf466309d8
    type <pointer_type 0x7faf4615aa80
        type <integer_type 0x7faf4615a9d8 char readonly string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615aa80>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faf4616e300 destination>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7faf46178b10>
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry set_times
dot graph target entry end

if (result_10 != 0)
test.c:241:6: warning: use location
   if (result != 0)
      ^
dot graph target loc start # .MEM_17 = VDEF <.MEM_16>
result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
dot graph target loc en1

dot graph target line desc form basic block 2: if (result_10 != 0)
test.c:241:6: warning: use location
   if (result != 0)
      ^
dot graph target line desend

dot graph target loc start # .MEM_17 = VDEF <.MEM_16>
result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
dot graph target loc end

dot graph target basicblock start from set_times basic block 2dot graph target basicblock en1

dot graph stmt start if (result_10 != 0)
result_10 = utime (destination_8(D), &tb);
dot graph stmt end

dot graph stmt start if (result_10 != 0)
test.c:241:6: warning: use location
   if (result != 0)
      ^
dot graph stmt end

if (result_10 != 0)

 ================== find cond branch ================= 
test.c:241:6: warning: use location
Cond in fucntion set_times basic block 2
 ================== possible direct basic block ================= 
from set_times basic block 3
 ================== possible direct basic block ================= 
from set_times basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph target basicblock start from set_times basic block 3dot graph target basicblock en1

dot graph arrowsubgraph cluster_1187104555 dot graph subgraph  _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
GIMPLE_NOP
dot graph subgrapend

 <ssa_name 0x7faf466309d8
    type <pointer_type 0x7faf4615aa80
        type <integer_type 0x7faf4615a9d8 char readonly string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615aa80>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faf4616e300 destination>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7faf46178b10>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <integer_cst 0x7faf46628f90 type <integer_type 0x7faf4663c5e8 int> constant 1>
[40;33m =======POP node_fun stack:set_times========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 15 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;33m =======POP node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;44m =======print_function_path set_times  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;33m =======POP node_fun stack:utime========= [0m
[40;42m =======pre_check_funciton:set_times========= [0m
[40;42m =======start_check_funciton:set_times========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faf466309d8
    type <pointer_type 0x7faf4615aa80
        type <integer_type 0x7faf4615a9d8 char readonly string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615aa80>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faf4616e300 destination>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7faf46178b10>
 <ssa_name 0x7faf466309d8
    type <pointer_type 0x7faf4615aa80
        type <integer_type 0x7faf4615a9d8 char readonly string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615aa80>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faf4616e300 destination>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7faf46178b10>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
dot graph entry set_times
dot graph target entry end

_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
dot graph target loc start # .MEM_17 = VDEF <.MEM_16>
result_10 = utime (destination_8(D), &tb);
In function â€˜mainâ€™:
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
dot graph target loc en1

dot graph target line desc form basic block 3: _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
dot graph target line desend

dot graph target loc start # .MEM_17 = VDEF <.MEM_16>
result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
dot graph target loc end

dot graph target basicblock start from set_times basic block 3dot graph target basicblock en1

dot graph stmt start _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
result_10 = utime (destination_8(D), &tb);
dot graph stmt end

dot graph stmt start _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf466309d8
    type <pointer_type 0x7faf4615aa80
        type <integer_type 0x7faf4615a9d8 char readonly string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615aa80>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faf4616e300 destination>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7faf46178b10>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry set_times
dot graph target entry end

result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
dot graph target loc start # .MEM_17 = VDEF <.MEM_16>
result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 2: result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_17 = VDEF <.MEM_16>
result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
dot graph target loc end

dot graph target basicblock start from set_times basic block 2dot graph target basicblock en1

dot graph stmt start result_10 = utime (destination_8(D), &tb);
result_10 = utime (destination_8(D), &tb);
dot graph stmt end

dot graph stmt start result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
dot graph stmt end

this stmt is child function---utime-----

 ================== trace ================== 
 <ssa_name 0x7faf466309d8
    type <pointer_type 0x7faf4615aa80
        type <integer_type 0x7faf4615a9d8 char readonly string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615aa80>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faf4616e300 destination>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7faf46178b10>
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry set_times
dot graph target entry end

if (result_10 != 0)
test.c:241:6: warning: use location
   if (result != 0)
      ^
dot graph target loc start # .MEM_17 = VDEF <.MEM_16>
result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
dot graph target loc en1

dot graph target line desc form basic block 2: if (result_10 != 0)
test.c:241:6: warning: use location
   if (result != 0)
      ^
dot graph target line desend

dot graph target loc start # .MEM_17 = VDEF <.MEM_16>
result_10 = utime (destination_8(D), &tb);
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
dot graph target loc end

dot graph target basicblock start from set_times basic block 2dot graph target basicblock en1

dot graph stmt start if (result_10 != 0)
result_10 = utime (destination_8(D), &tb);
dot graph stmt end

dot graph stmt start if (result_10 != 0)
test.c:241:6: warning: use location
   if (result != 0)
      ^
dot graph stmt end

if (result_10 != 0)

 ================== find cond branch ================= 
test.c:241:6: warning: use location
Cond in fucntion set_times basic block 2
 ================== possible direct basic block ================= 
from set_times basic block 3
 ================== possible direct basic block ================= 
from set_times basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph target basicblock start from set_times basic block 3dot graph target basicblock en1

dot graph arrowsubgraph cluster_961697467 dot graph subgraph  _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
GIMPLE_NOP
dot graph subgrapend

 <ssa_name 0x7faf466309d8
    type <pointer_type 0x7faf4615aa80
        type <integer_type 0x7faf4615a9d8 char readonly string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615aa80>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7faf4616e300 destination>
    def_stmt GIMPLE_NOP
    version 8
    ptr-info 0x7faf46178b10>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <integer_cst 0x7faf46628f90 type <integer_type 0x7faf4663c5e8 int> constant 1>
[40;33m =======POP node_fun stack:set_times========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;33m =======POP node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;33m =======POP node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;33m =======POP node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;33m =======POP node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;33m =======POP node_fun stack:strrchr========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
# .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

_90 = tmpname_49;
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 7: _90 = tmpname_49;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start _90 = tmpname_49;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _90 = tmpname_49;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_36 = _90;
test.c:197:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: tmpname_36 = _90;
test.c:197:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start tmpname_36 = _90;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start tmpname_36 = _90;
test.c:197:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 10: _38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _38 = PHI <0B(8), tmpname_36(9)>
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

_94 = _38;
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 10: _94 = _38;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _94 = _38;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _94 = _38;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 10: tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start tmpname_25 = _94;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 11: tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 20: if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph stmt start if (tmpname_26 != output_filename_30)
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph stmt end

if (tmpname_26 != output_filename_30)

 ================== find cond branch ================= 
test.c:373:10: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 33: _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _74 = MEM[(int *)tmpname_26];
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_75 = __printf_chk (1, "%d\n", _74);
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 33: _75 = __printf_chk (1, "%d\n", _74);
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 31: unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 31dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 28: unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 24: ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 24dot graph target basicblock en1

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph stmt end

this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---rename-----
dot graph entry main
dot graph target entry end

_110 = ret_73;
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 32: _110 = ret_73;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _110 = ret_73;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _110 = ret_73;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

_32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _32 = _110;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _33 = _32 != 0;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_34 = (int) _33;
test.c:374:70: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _34 = (int) _33;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start status = _34;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 17: _28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _28 = status;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 17: if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start if (_28 == 0)
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph stmt end

if (_28 == 0)

 ================== find cond branch ================= 
test.c:369:6: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 34: _7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 34dot graph target basicblock en1

dot graph stmt start _7 = status;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 4: slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph stmt end

this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _40 = (long int) slash_39;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_42 = _40 - _41;
test.c:176:19: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _42 = _40 - _41;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_43 = (size_t) _42;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _47 = tmpname_45 + len_43;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

*_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start *_47 = 47;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_46 = len_43 + 1;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---strrchr-----
dot graph entry main
dot graph target entry end

memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 4: if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start if (slash_39 != 0B)
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph stmt end

if (slash_39 != 0B)

 ================== find cond branch ================= 
test.c:174:6: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 30: set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 30dot graph target basicblock en1

dot graph stmt start set_times (input_filename_15, &s);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph stmt end

this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
dot graph arrowdot graph start relate for1ID : 1511386386
from set_times basic block 2dot graph end relate end

dot graph relate stmt start ID : 328979264 stmt(call) :result_10 = utime (destination_8(D), &tb);
In function â€˜set_timesâ€™:
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
destination_8(D)
dot graph relate end

dot graph arrowdot graph start relate for1ID : 1511386386
from set_times basic block 3dot graph end relate end

dot graph relate stmt start ID : 1366734999 stmt(call) :_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
In function â€˜mainâ€™:
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 28: _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 27: chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 27dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _71);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 26: _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph stmt end

this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 26: chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _66);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _58 = lstat (input_filename_15, &s);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph stmt end

this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _59 = _58 == 0;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start exists_60 = (bfd_boolean) _59;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 15: _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 15dot graph target basicblock en1

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _41 = (long int) input_filename_15;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 12: _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 12dot graph target basicblock en1

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 19: set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start set_times (tmpname_26, &statbuf);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph stmt end

this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
dot graph arrowdot graph start relate for1ID : 905390747
from set_times basic block 2dot graph end relate end

dot graph relate stmt start ID : 1084419690 stmt(call) :result_10 = utime (destination_8(D), &tb);
In function â€˜set_timesâ€™:
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
destination_8(D)
dot graph relate end

dot graph arrowdot graph start relate for1ID : 905390747
from set_times basic block 3dot graph end relate end

dot graph relate stmt start ID : 1023919639 stmt(call) :_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (tmpname_26 == 0B)
In function â€˜mainâ€™:
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 11: if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start if (tmpname_26 == 0B)
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph stmt end

if (tmpname_26 == 0B)

 ================== find cond branch ================= 
test.c:364:6: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 8: free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start free (tmpname_36);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt is child function---free-----

 ================== find ================== 
free (tmpname_36);
test.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
dot graph entry main
dot graph target entry end

fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start fd_37 = mkstemp (tmpname_36);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph stmt end

this stmt is child function---mkstemp-----

 ================== trace ================== 
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 9: close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start close (fd_37);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph stmt end

this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start if (fd_37 == -1)
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph stmt end

if (fd_37 == -1)

 ================== find cond branch ================= 
test.c:201:6: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_52 = tmpname_49;
test.c:188:10: warning: use location
   return tmpname;
          ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: _52 = tmpname_49;
test.c:188:10: warning: use location
   return tmpname;
          ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start _52 = tmpname_49;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _52 = tmpname_49;
test.c:188:10: warning: use location
   return tmpname;
          ^
dot graph stmt end

dot graph target basicblock start from main basic block 34dot graph target basicblock en1

dot graph arrowsubgraph cluster_2065914762 dot graph subgraph  _7 = status;
_34 = (int) _33;
dot graph subgrapend

 <ssa_name 0x7faf46184cf0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_45 = malloc (_44);
    version 45
    ptr-info 0x7faf46178c60>
dot graph start relate for1ID : 1511386386
from set_times basic block 3dot graph end relate end

subgraph cluster_2115686100 dot graph subgraph  start ID : 1366734999 stmt(relate) ï¼Œ Tree ID : 1511386386 : _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
dot graph subgrapend

dot graph start relate for1ID : 905390747
from set_times basic block 3dot graph end relate end

subgraph cluster_1251243290 dot graph subgraph  start ID : 1023919639 stmt(relate) ï¼Œ Tree ID : 905390747 : _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
dot graph subgrapend


 ================== Start Use after free Check ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_94 = _38;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_80>
_75 = __printf_chk (1, "%d\n", _74);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_112>
_7 = status;
test.c:389:10: warning: use location
   return status;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
# .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

_90 = tmpname_49;
lto1: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 7: _90 = tmpname_49;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start _90 = tmpname_49;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _90 = tmpname_49;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_36 = _90;
test.c:197:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: tmpname_36 = _90;
test.c:197:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start tmpname_36 = _90;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start tmpname_36 = _90;
test.c:197:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 10: _38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _38 = PHI <0B(8), tmpname_36(9)>
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

_94 = _38;
lto1: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 10: _94 = _38;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _94 = _38;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _94 = _38;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 10: tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start tmpname_25 = _94;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 11: tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 20: if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph stmt start if (tmpname_26 != output_filename_30)
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph stmt end

if (tmpname_26 != output_filename_30)

 ================== find cond branch ================= 
test.c:373:10: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 33: _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _74 = MEM[(int *)tmpname_26];
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_75 = __printf_chk (1, "%d\n", _74);
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 33: _75 = __printf_chk (1, "%d\n", _74);
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 31: unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 31dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 28: unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 24: ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 24dot graph target basicblock en1

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph stmt end

this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---rename-----
dot graph entry main
dot graph target entry end

_110 = ret_73;
lto1: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 32: _110 = ret_73;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _110 = ret_73;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _110 = ret_73;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

_32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _32 = _110;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _33 = _32 != 0;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_34 = (int) _33;
test.c:374:70: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _34 = (int) _33;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start status = _34;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 17: _28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _28 = status;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 17: if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start if (_28 == 0)
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph stmt end

if (_28 == 0)

 ================== find cond branch ================= 
test.c:369:6: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 34: _7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 34dot graph target basicblock en1

dot graph stmt start _7 = status;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 4: slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph stmt end

this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _40 = (long int) slash_39;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_42 = _40 - _41;
test.c:176:19: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _42 = _40 - _41;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_43 = (size_t) _42;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _47 = tmpname_45 + len_43;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

*_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start *_47 = 47;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_46 = len_43 + 1;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---strrchr-----
dot graph entry main
dot graph target entry end

memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 4: if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start if (slash_39 != 0B)
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph stmt end

if (slash_39 != 0B)

 ================== find cond branch ================= 
test.c:174:6: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 30: set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 30dot graph target basicblock en1

dot graph stmt start set_times (input_filename_15, &s);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph stmt end

this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
dot graph arrowdot graph start relate for1ID : 1394583921
from set_times basic block 2dot graph end relate end

dot graph relate stmt start ID : 1865339345 stmt(call) :result_10 = utime (destination_8(D), &tb);
In function â€˜set_timesâ€™:
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
destination_8(D)
dot graph relate end

dot graph arrowdot graph start relate for1ID : 1394583921
from set_times basic block 3dot graph end relate end

dot graph relate stmt start ID : 1637863615 stmt(call) :_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
In function â€˜mainâ€™:
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 28: _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 27: chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 27dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _71);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 26: _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph stmt end

this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 26: chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _66);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _58 = lstat (input_filename_15, &s);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph stmt end

this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _59 = _58 == 0;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start exists_60 = (bfd_boolean) _59;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 15: _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 15dot graph target basicblock en1

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _41 = (long int) input_filename_15;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 12: _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 12dot graph target basicblock en1

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 19: set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start set_times (tmpname_26, &statbuf);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph stmt end

this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
dot graph arrowdot graph start relate for1ID : 94729629
from set_times basic block 2dot graph end relate end

dot graph relate stmt start ID : 878363479 stmt(call) :result_10 = utime (destination_8(D), &tb);
In function â€˜set_timesâ€™:
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
destination_8(D)
dot graph relate end

dot graph arrowdot graph start relate for1ID : 94729629
from set_times basic block 3dot graph end relate end

dot graph relate stmt start ID : 220119977 stmt(call) :_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (tmpname_26 == 0B)
In function â€˜mainâ€™:
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 11: if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start if (tmpname_26 == 0B)
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph stmt end

if (tmpname_26 == 0B)

 ================== find cond branch ================= 
test.c:364:6: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 8: free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start free (tmpname_36);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt is child function---free-----

 ================== find ================== 
free (tmpname_36);
test.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
dot graph entry main
dot graph target entry end

fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start fd_37 = mkstemp (tmpname_36);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph stmt end

this stmt is child function---mkstemp-----

 ================== trace ================== 
 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 9: close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start close (fd_37);
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph stmt end

this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start if (fd_37 == -1)
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph stmt end

if (fd_37 == -1)

 ================== find cond branch ================= 
test.c:201:6: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_52 = tmpname_49;
test.c:188:10: warning: use location
   return tmpname;
          ^
dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: _52 = tmpname_49;
test.c:188:10: warning: use location
   return tmpname;
          ^
dot graph target line desend

dot graph target loc start # .MEM_85 = VDEF <.MEM_8(D)>
tmpname_48 = malloc (9);
test.c:183:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start _52 = tmpname_49;
tmpname_48 = malloc (9);
dot graph stmt end

dot graph stmt start _52 = tmpname_49;
test.c:188:10: warning: use location
   return tmpname;
          ^
dot graph stmt end

dot graph target basicblock start from main basic block 34dot graph target basicblock en1

dot graph arrowsubgraph cluster_475502101 dot graph subgraph  _7 = status;
_34 = (int) _33;
dot graph subgrapend

 <ssa_name 0x7faf46184dc8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188a20 tmpname>
    def_stmt tmpname_48 = malloc (9);
    version 48
    ptr-info 0x7faf46178c90>
dot graph start relate for1ID : 1394583921
from set_times basic block 3dot graph end relate end

subgraph cluster_693928746 dot graph subgraph  start ID : 1637863615 stmt(relate) ï¼Œ Tree ID : 1394583921 : _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
dot graph subgrapend

dot graph start relate for1ID : 94729629
from set_times basic block 3dot graph end relate end

subgraph cluster_2026266323 dot graph subgraph  start ID : 220119977 stmt(relate) ï¼Œ Tree ID : 94729629 : _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
dot graph subgrapend


 ================== Start Use after free Check ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_94 = _38;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_80>
_75 = __printf_chk (1, "%d\n", _74);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_112>
_7 = status;
test.c:389:10: warning: use location
   return status;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7faf46180af8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7faf46178b70>
 <ssa_name 0x7faf46180af8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7faf46178b70>
# VUSE <.MEM_8(D)>
input_filename_15 = *_14;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 4: slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
dot graph stmt end

this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7faf46180af8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7faf46178b70>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _40 = (long int) slash_39;
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_42 = _40 - _41;
test.c:176:19: warning: use location
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _42 = _40 - _41;
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_43 = (size_t) _42;
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _47 = tmpname_45 + len_43;
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

*_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start *_47 = 47;
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_46 = len_43 + 1;
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---strrchr-----
dot graph entry main
dot graph target entry end

_51 = tmpname_49 + len_50;
test.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: _51 = tmpname_49 + len_50;
test.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start _51 = tmpname_49 + len_50;
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start _51 = tmpname_49 + len_50;
test.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start memcpy (_51, "stXXXXXX", 9);
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7faf46180af8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7faf46178b70>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7faf46180af8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7faf46178b70>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 4: if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start if (slash_39 != 0B)
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph stmt end

if (slash_39 != 0B)

 ================== find cond branch ================= 
test.c:174:6: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 30: set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 30dot graph target basicblock en1

dot graph stmt start set_times (input_filename_15, &s);
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph stmt end

this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7faf46180af8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7faf46178b70>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
dot graph arrowdot graph start relate for1ID : 2143710318
from set_times basic block 2dot graph end relate end

dot graph relate stmt start ID : 214176736 stmt(call) :result_10 = utime (destination_8(D), &tb);
In function â€˜set_timesâ€™:
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
destination_8(D)
dot graph relate end

dot graph arrowdot graph start relate for1ID : 2143710318
from set_times basic block 3dot graph end relate end

dot graph relate stmt start ID : 295352978 stmt(call) :_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
In function â€˜mainâ€™:
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 28: _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46180af8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7faf46178b70>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 27: chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 27dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _71);
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7faf46180af8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7faf46178b70>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 26: _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph stmt end

this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7faf46180af8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7faf46178b70>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (_69 >= 0)
test.c:281:11: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
           ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 26: if (_69 >= 0)
test.c:281:11: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
           ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start if (_69 >= 0)
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start if (_69 >= 0)
test.c:281:11: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
           ^
dot graph stmt end

if (_69 >= 0)

 ================== find cond branch ================= 
test.c:281:11: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 27
 ================== possible direct basic block ================= 
from main basic block 32
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 26: chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _66);
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7faf46180af8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7faf46178b70>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 24: ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 24dot graph target basicblock en1

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph stmt end

this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7faf46180af8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7faf46178b70>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---rename-----
dot graph entry main
dot graph target entry end

_110 = ret_73;
lto1: warning: use location
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 32: _110 = ret_73;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _110 = ret_73;
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start _110 = ret_73;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

_32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _32 = _110;
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _33 = _32 != 0;
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_34 = (int) _33;
test.c:374:70: warning: use location
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _34 = (int) _33;
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start status = _34;
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 17: _28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _28 = status;
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start _28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 34: _7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 34dot graph target basicblock en1

dot graph stmt start _7 = status;
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start _7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 20: if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph stmt start if (tmpname_26 != output_filename_30)
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph stmt end

if (tmpname_26 != output_filename_30)

 ================== find cond branch ================= 
test.c:373:10: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 33: _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _74 = MEM[(int *)tmpname_26];
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_75 = __printf_chk (1, "%d\n", _74);
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 33: _75 = __printf_chk (1, "%d\n", _74);
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46180af8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7faf46178b70>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 31: unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 31dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7faf46180af8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7faf46178b70>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 28: unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7faf46180af8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7faf46178b70>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 19: set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start set_times (tmpname_26, &statbuf);
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph stmt end

this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7faf46180af8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7faf46178b70>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with input_filename ========= [0m
[40;36m ======= relate stmt argument:input_filename ========= [0m
dot graph arrowdot graph start relate for1ID : 1471884919
from set_times basic block 2dot graph end relate end

dot graph relate stmt start ID : 377187266 stmt(call) :result_10 = utime (destination_8(D), &tb);
In function â€˜set_timesâ€™:
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
destination_8(D)
dot graph relate end

dot graph arrowdot graph start relate for1ID : 1471884919
from set_times basic block 3dot graph end relate end

dot graph relate stmt start ID : 1459658182 stmt(call) :_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (tmpname_26 == 0B)
In function â€˜mainâ€™:
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 11: if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start if (tmpname_26 == 0B)
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph stmt end

if (tmpname_26 == 0B)

 ================== find cond branch ================= 
test.c:364:6: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _58 = lstat (input_filename_15, &s);
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph stmt end

this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7faf46180af8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7faf46178b70>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _59 = _58 == 0;
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start exists_60 = (bfd_boolean) _59;
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 15: _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 15dot graph target basicblock en1

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46180af8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7faf46178b70>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _41 = (long int) input_filename_15;
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc en1

dot graph target line desc form basic block 12: _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target line desend

dot graph target loc start # VUSE <.MEM_8(D)>
slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 12dot graph target basicblock en1

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
slash_39 = strrchr (input_filename_15, 47);
dot graph stmt end

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46180af8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7faf46178b70>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from main basic block 34dot graph target basicblock en1

dot graph arrowsubgraph cluster_1414916372 dot graph subgraph  _7 = status;
_34 = (int) _33;
dot graph subgrapend

 <ssa_name 0x7faf46180af8
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e750 input_filename>
    def_stmt input_filename_15 = *_14;
    version 15
    ptr-info 0x7faf46178b70>
dot graph start relate for1ID : 2143710318
from set_times basic block 3dot graph end relate end

subgraph cluster_1766130690 dot graph subgraph  start ID : 295352978 stmt(relate) ï¼Œ Tree ID : 2143710318 : _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
dot graph subgrapend

dot graph start relate for1ID : 1471884919
from set_times basic block 3dot graph end relate end

subgraph cluster_1236726136 dot graph subgraph  start ID : 1459658182 stmt(relate) ï¼Œ Tree ID : 1471884919 : _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
dot graph subgrapend


 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
_44 = len_43 + 11;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 5: tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start tmpname_45 = malloc (_44);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph stmt end

this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 7: tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

_90 = tmpname_49;
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 7: _90 = tmpname_49;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start _90 = tmpname_49;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _90 = tmpname_49;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_36 = _90;
test.c:197:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: tmpname_36 = _90;
test.c:197:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start tmpname_36 = _90;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start tmpname_36 = _90;
test.c:197:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 10: _38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _38 = PHI <0B(8), tmpname_36(9)>
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

_94 = _38;
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 10: _94 = _38;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _94 = _38;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _94 = _38;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 10: tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start tmpname_25 = _94;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 11: tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---malloc-----
dot graph entry main
dot graph target entry end

if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 20: if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph stmt start if (tmpname_26 != output_filename_30)
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph stmt end

if (tmpname_26 != output_filename_30)

 ================== find cond branch ================= 
test.c:373:10: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 33: _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _74 = MEM[(int *)tmpname_26];
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_75 = __printf_chk (1, "%d\n", _74);
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 33: _75 = __printf_chk (1, "%d\n", _74);
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 31: unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 31dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 28: unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 24: ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 24dot graph target basicblock en1

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph stmt end

this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---rename-----
dot graph entry main
dot graph target entry end

_110 = ret_73;
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 32: _110 = ret_73;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _110 = ret_73;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _110 = ret_73;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

_32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _32 = _110;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _33 = _32 != 0;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_34 = (int) _33;
test.c:374:70: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _34 = (int) _33;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 32: status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start status = _34;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 17: _28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _28 = status;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 17: if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start if (_28 == 0)
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph stmt end

if (_28 == 0)

 ================== find cond branch ================= 
test.c:369:6: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 34: _7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 34dot graph target basicblock en1

dot graph stmt start _7 = status;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 4: slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph stmt end

this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _40 = (long int) slash_39;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_42 = _40 - _41;
test.c:176:19: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _42 = _40 - _41;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_43 = (size_t) _42;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _47 = tmpname_45 + len_43;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

*_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start *_47 = 47;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_46 = len_43 + 1;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---strrchr-----
dot graph entry main
dot graph target entry end

memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 4: if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start if (slash_39 != 0B)
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph stmt end

if (slash_39 != 0B)

 ================== find cond branch ================= 
test.c:174:6: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 30: set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 30dot graph target basicblock en1

dot graph stmt start set_times (input_filename_15, &s);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph stmt end

this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 28: _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 27: chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 27dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _71);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 26: _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph stmt end

this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 26: chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _66);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _58 = lstat (input_filename_15, &s);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph stmt end

this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _59 = _58 == 0;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 21: exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start exists_60 = (bfd_boolean) _59;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 15: _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 15dot graph target basicblock en1

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 5: _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _41 = (long int) input_filename_15;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 12: _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 12dot graph target basicblock en1

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 19: set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start set_times (tmpname_26, &statbuf);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph stmt end

this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 11: if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start if (tmpname_26 == 0B)
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph stmt end

if (tmpname_26 == 0B)

 ================== find cond branch ================= 
test.c:364:6: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 8: free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start free (tmpname_36);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt is child function---free-----

 ================== find ================== 
free (tmpname_36);
test.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
dot graph entry main
dot graph target entry end

fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start fd_37 = mkstemp (tmpname_36);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph stmt end

this stmt is child function---mkstemp-----

 ================== trace ================== 
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 9: close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start close (fd_37);
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph stmt end

this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start if (fd_37 == -1)
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph stmt end

if (fd_37 == -1)

 ================== find cond branch ================= 
test.c:201:6: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_52 = tmpname_49;
test.c:188:10: warning: use location
   return tmpname;
          ^
dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc en1

dot graph target line desc form basic block 7: _52 = tmpname_49;
test.c:188:10: warning: use location
   return tmpname;
          ^
dot graph target line desend

dot graph target loc start # .MEM_86 = VDEF <.MEM_8(D)>
tmpname_45 = malloc (_44);
test.c:177:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start _52 = tmpname_49;
tmpname_45 = malloc (_44);
dot graph stmt end

dot graph stmt start _52 = tmpname_49;
test.c:188:10: warning: use location
   return tmpname;
          ^
dot graph stmt end

dot graph target basicblock start from main basic block 34dot graph target basicblock en1

dot graph arrowsubgraph cluster_276347044 dot graph subgraph  _7 = status;
_34 = (int) _33;
dot graph subgrapend

 <ssa_name 0x7faf46184ca8
    type <integer_type 0x7faf4663c7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7faf4663c738 precision 64 min <integer_cst 0x7faf46628eb8 0> max <integer_cst 0x7faf4662a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7faf466489d8>>
   
    def_stmt _44 = len_43 + 11;
    version 44>

 ================== Start Use after free Check ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_94 = _38;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_80>
_75 = __printf_chk (1, "%d\n", _74);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_112>
_7 = status;
test.c:389:10: warning: use location
   return status;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <integer_cst 0x7faf461789c0 type <integer_type 0x7faf4663c7e0 long unsigned int> constant 9>

dot graph START

======================================================================
 <ssa_name 0x7faf46184ea0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
   
    def_stmt _51 = tmpname_49 + len_50;
    version 51
    ptr-info 0x7faf46178cc0>
 <ssa_name 0x7faf46184ea0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
   
    def_stmt _51 = tmpname_49 + len_50;
    version 51
    ptr-info 0x7faf46178cc0>
_51 = tmpname_49 + len_50;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_89 = VDEF <.MEM_76>
memcpy (_51, "stXXXXXX", 9);
dot graph entry main
dot graph target entry end

memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_76>
memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 7: memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_76>
memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start memcpy (_51, "stXXXXXX", 9);
memcpy (_51, "stXXXXXX", 9);
dot graph stmt end

dot graph stmt start memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7faf46184ea0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
   
    def_stmt _51 = tmpname_49 + len_50;
    version 51
    ptr-info 0x7faf46178cc0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph arrowsubgraph cluster_949446518 dot graph subgraph  memcpy (_51, "stXXXXXX", 9);
_51 = tmpname_49 + len_50;
dot graph subgrapend

 <ssa_name 0x7faf46184ea0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
   
    def_stmt _51 = tmpname_49 + len_50;
    version 51
    ptr-info 0x7faf46178cc0>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
tmpname_36 = _90;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 10: _38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _38 = PHI <0B(8), tmpname_36(9)>
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch --------
dot graph entry main
dot graph target entry end

_94 = _38;
lto1: warning: use location
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 10: _94 = _38;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _94 = _38;
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _94 = _38;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 10: tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start tmpname_25 = _94;
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 11: tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch --------
dot graph entry main
dot graph target entry end

if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 20: if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph stmt start if (tmpname_26 != output_filename_30)
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph stmt end

if (tmpname_26 != output_filename_30)

 ================== find cond branch ================= 
test.c:373:10: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 33: _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _74 = MEM[(int *)tmpname_26];
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_75 = __printf_chk (1, "%d\n", _74);
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 33: _75 = __printf_chk (1, "%d\n", _74);
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 31: unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 31dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 28: unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 24: ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 24dot graph target basicblock en1

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph stmt end

this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 32: ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---rename-----
dot graph entry main
dot graph target entry end

_110 = ret_73;
lto1: warning: use location
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 32: _110 = ret_73;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _110 = ret_73;
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _110 = ret_73;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

_32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 32: _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _32 = _110;
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 32: _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _33 = _32 != 0;
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_34 = (int) _33;
test.c:374:70: warning: use location
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 32: _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _34 = (int) _33;
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 32: status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start status = _34;
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 17: _28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _28 = status;
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 17: if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start if (_28 == 0)
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph stmt end

if (_28 == 0)

 ================== find cond branch ================= 
test.c:369:6: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 34: _7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 34dot graph target basicblock en1

dot graph stmt start _7 = status;
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 4: slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph stmt end

this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 5: _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _40 = (long int) slash_39;
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_42 = _40 - _41;
test.c:176:19: warning: use location
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 5: _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _42 = _40 - _41;
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_43 = (size_t) _42;
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 5: _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _47 = tmpname_45 + len_43;
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

*_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 5: *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start *_47 = 47;
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_46 = len_43 + 1;
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 7: len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---strrchr-----
dot graph entry main
dot graph target entry end

_51 = tmpname_49 + len_50;
test.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 7: _51 = tmpname_49 + len_50;
test.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start _51 = tmpname_49 + len_50;
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _51 = tmpname_49 + len_50;
test.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 7: memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start memcpy (_51, "stXXXXXX", 9);
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 5: memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 4: if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start if (slash_39 != 0B)
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph stmt end

if (slash_39 != 0B)

 ================== find cond branch ================= 
test.c:174:6: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 30: set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 30dot graph target basicblock en1

dot graph stmt start set_times (input_filename_15, &s);
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph stmt end

this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
dot graph arrowdot graph start relate for1ID : 1765414076
from set_times basic block 2dot graph end relate end

dot graph relate stmt start ID : 605326308 stmt(call) :result_10 = utime (destination_8(D), &tb);
In function â€˜set_timesâ€™:
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
destination_8(D)
dot graph relate end

dot graph arrowdot graph start relate for1ID : 1765414076
from set_times basic block 3dot graph end relate end

dot graph relate stmt start ID : 168697869 stmt(call) :_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
In function â€˜mainâ€™:
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 28: _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 27: chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 27dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _71);
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 26: _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph stmt end

this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 26: chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _66);
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 21: _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _58 = lstat (input_filename_15, &s);
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph stmt end

this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 21: _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _59 = _58 == 0;
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 21: exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start exists_60 = (bfd_boolean) _59;
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 15: _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 15dot graph target basicblock en1

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 5: _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _41 = (long int) input_filename_15;
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 12: _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 12dot graph target basicblock en1

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 19: set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start set_times (tmpname_26, &statbuf);
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph stmt end

this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
dot graph arrowdot graph start relate for1ID : 523321175
from set_times basic block 2dot graph end relate end

dot graph relate stmt start ID : 1689745998 stmt(call) :result_10 = utime (destination_8(D), &tb);
In function â€˜set_timesâ€™:
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
destination_8(D)
dot graph relate end

dot graph arrowdot graph start relate for1ID : 523321175
from set_times basic block 3dot graph end relate end

dot graph relate stmt start ID : 1192617508 stmt(call) :_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (tmpname_26 == 0B)
In function â€˜mainâ€™:
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 11: if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start if (tmpname_26 == 0B)
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph stmt end

if (tmpname_26 == 0B)

 ================== find cond branch ================= 
test.c:364:6: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 8: free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start free (tmpname_36);
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt is child function---free-----

 ================== find ================== 
free (tmpname_36);
test.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
dot graph entry main
dot graph target entry end

fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 7: fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start fd_37 = mkstemp (tmpname_36);
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
dot graph stmt end

this stmt is child function---mkstemp-----

 ================== trace ================== 
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 9: close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start close (fd_37);
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph stmt end

this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc en1

dot graph target line desc form basic block 7: if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph target line desend

dot graph target loc start # .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start if (fd_37 == -1)
fd_37 = mkstemp (tmpname_36);
dot graph stmt end

dot graph stmt start if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph stmt end

if (fd_37 == -1)

 ================== find cond branch ================= 
test.c:201:6: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph target basicblock start from main basic block 34dot graph target basicblock en1

dot graph arrowsubgraph cluster_441752289 dot graph subgraph  _7 = status;
_34 = (int) _33;
dot graph subgrapend

 <ssa_name 0x7faf461843f0
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf46188120 tmpname>
    def_stmt tmpname_36 = _90;
    version 36
    ptr-info 0x7faf46178c18>
dot graph start relate for1ID : 1765414076
from set_times basic block 3dot graph end relate end

subgraph cluster_1657948450 dot graph subgraph  start ID : 168697869 stmt(relate) ï¼Œ Tree ID : 1765414076 : _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
dot graph subgrapend

dot graph start relate for1ID : 523321175
from set_times basic block 3dot graph end relate end

subgraph cluster_296377150 dot graph subgraph  start ID : 1192617508 stmt(relate) ï¼Œ Tree ID : 523321175 : _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
dot graph subgrapend


 ================== Start Use after free Check ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_94 = _38;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_80>
_75 = __printf_chk (1, "%d\n", _74);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_112>
_7 = status;
test.c:389:10: warning: use location
   return status;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
# .MEM_91 = VDEF <.MEM_89>
fd_37 = mkstemp (tmpname_36);

 ================== trace ptable================== 
trace fucntion name:mkstemp 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---mkstemp-----
this other function ------mkstemp-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 10: _38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _38 = PHI <0B(8), tmpname_36(9)>
close (fd_37);
dot graph stmt end

dot graph stmt start _38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---mkstemp-----
dot graph entry main
dot graph target entry end

_94 = _38;
lto1: warning: use location
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 10: _94 = _38;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start _94 = _38;
close (fd_37);
dot graph stmt end

dot graph stmt start _94 = _38;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 10: tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 10dot graph target basicblock en1

dot graph stmt start tmpname_25 = _94;
close (fd_37);
dot graph stmt end

dot graph stmt start tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^
dot graph stmt end

dot graph entry main
dot graph target entry end

tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 11: tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
close (fd_37);
dot graph stmt end

dot graph stmt start tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---mkstemp-----
dot graph entry main
dot graph target entry end

if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 20: if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph stmt start if (tmpname_26 != output_filename_30)
close (fd_37);
dot graph stmt end

dot graph stmt start if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph stmt end

if (tmpname_26 != output_filename_30)

 ================== find cond branch ================= 
test.c:373:10: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 33: _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _74 = MEM[(int *)tmpname_26];
close (fd_37);
dot graph stmt end

dot graph stmt start _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_75 = __printf_chk (1, "%d\n", _74);
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 33: _75 = __printf_chk (1, "%d\n", _74);
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
close (fd_37);
dot graph stmt end

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 31: unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 31dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
close (fd_37);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 28: unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
close (fd_37);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 24: ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 24dot graph target basicblock en1

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
close (fd_37);
dot graph stmt end

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph stmt end

this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 32: ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
close (fd_37);
dot graph stmt end

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---rename-----
dot graph entry main
dot graph target entry end

_110 = ret_73;
lto1: warning: use location
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 32: _110 = ret_73;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _110 = ret_73;
close (fd_37);
dot graph stmt end

dot graph stmt start _110 = ret_73;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

_32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 32: _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _32 = _110;
close (fd_37);
dot graph stmt end

dot graph stmt start _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 32: _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _33 = _32 != 0;
close (fd_37);
dot graph stmt end

dot graph stmt start _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_34 = (int) _33;
test.c:374:70: warning: use location
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 32: _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _34 = (int) _33;
close (fd_37);
dot graph stmt end

dot graph stmt start _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 32: status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start status = _34;
close (fd_37);
dot graph stmt end

dot graph stmt start status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 17: _28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _28 = status;
close (fd_37);
dot graph stmt end

dot graph stmt start _28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 17: if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start if (_28 == 0)
close (fd_37);
dot graph stmt end

dot graph stmt start if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph stmt end

if (_28 == 0)

 ================== find cond branch ================= 
test.c:369:6: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 34: _7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 34dot graph target basicblock en1

dot graph stmt start _7 = status;
close (fd_37);
dot graph stmt end

dot graph stmt start _7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 4: slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
close (fd_37);
dot graph stmt end

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph stmt end

this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 5: _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _40 = (long int) slash_39;
close (fd_37);
dot graph stmt end

dot graph stmt start _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_42 = _40 - _41;
test.c:176:19: warning: use location
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 5: _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _42 = _40 - _41;
close (fd_37);
dot graph stmt end

dot graph stmt start _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_43 = (size_t) _42;
close (fd_37);
dot graph stmt end

dot graph stmt start len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 5: _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _47 = tmpname_45 + len_43;
close (fd_37);
dot graph stmt end

dot graph stmt start _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

*_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 5: *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start *_47 = 47;
close (fd_37);
dot graph stmt end

dot graph stmt start *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_46 = len_43 + 1;
close (fd_37);
dot graph stmt end

dot graph stmt start len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 7: len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
close (fd_37);
dot graph stmt end

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---strrchr-----
dot graph entry main
dot graph target entry end

_51 = tmpname_49 + len_50;
test.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 7: _51 = tmpname_49 + len_50;
test.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start _51 = tmpname_49 + len_50;
close (fd_37);
dot graph stmt end

dot graph stmt start _51 = tmpname_49 + len_50;
test.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 7: memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start memcpy (_51, "stXXXXXX", 9);
close (fd_37);
dot graph stmt end

dot graph stmt start memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 5: memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
close (fd_37);
dot graph stmt end

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 4: if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start if (slash_39 != 0B)
close (fd_37);
dot graph stmt end

dot graph stmt start if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph stmt end

if (slash_39 != 0B)

 ================== find cond branch ================= 
test.c:174:6: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 30: set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 30dot graph target basicblock en1

dot graph stmt start set_times (input_filename_15, &s);
close (fd_37);
dot graph stmt end

dot graph stmt start set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph stmt end

this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 28: _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
close (fd_37);
dot graph stmt end

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 27: chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 27dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _71);
close (fd_37);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 26: _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
close (fd_37);
dot graph stmt end

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph stmt end

this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 26: chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _66);
close (fd_37);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 21: _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _58 = lstat (input_filename_15, &s);
close (fd_37);
dot graph stmt end

dot graph stmt start _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph stmt end

this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 21: _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _59 = _58 == 0;
close (fd_37);
dot graph stmt end

dot graph stmt start _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 21: exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start exists_60 = (bfd_boolean) _59;
close (fd_37);
dot graph stmt end

dot graph stmt start exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 15: _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 15dot graph target basicblock en1

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
close (fd_37);
dot graph stmt end

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 5: _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _41 = (long int) input_filename_15;
close (fd_37);
dot graph stmt end

dot graph stmt start _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 12: _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 12dot graph target basicblock en1

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
close (fd_37);
dot graph stmt end

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 19: set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start set_times (tmpname_26, &statbuf);
close (fd_37);
dot graph stmt end

dot graph stmt start set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph stmt end

this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 11: if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start if (tmpname_26 == 0B)
close (fd_37);
dot graph stmt end

dot graph stmt start if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph stmt end

if (tmpname_26 == 0B)

 ================== find cond branch ================= 
test.c:364:6: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 8: free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 8dot graph target basicblock en1

dot graph stmt start free (tmpname_36);
close (fd_37);
dot graph stmt end

dot graph stmt start free (tmpname_36);
test.c:203:7: warning: use location
       free (tmpname);
       ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt is child function---free-----

 ================== find ================== 
free (tmpname_36);
test.c:203:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
dot graph entry main
dot graph target entry end

fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 7: fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start fd_37 = mkstemp (tmpname_36);
close (fd_37);
dot graph stmt end

dot graph stmt start fd_37 = mkstemp (tmpname_36);
test.c:200:6: warning: use location
   fd = mkstemp (tmpname);
      ^
dot graph stmt end

this stmt is child function---mkstemp-----

 ================== trace ================== 
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
dot graph entry main
dot graph target entry end

close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 9: close (fd_37);
test.c:206:3: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 9dot graph target basicblock en1

dot graph stmt start close (fd_37);
close (fd_37);
dot graph stmt end

dot graph stmt start close (fd_37);
test.c:206:3: warning: use location
dot graph stmt end

this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
dot graph entry main
dot graph target entry end

if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc en1

dot graph target line desc form basic block 7: if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph target line desend

dot graph target loc start # .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start if (fd_37 == -1)
close (fd_37);
dot graph stmt end

dot graph stmt start if (fd_37 == -1)
test.c:201:6: warning: use location
   if (fd == -1)
      ^
dot graph stmt end

if (fd_37 == -1)

 ================== find cond branch ================= 
test.c:201:6: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph target basicblock start from main basic block 34dot graph target basicblock en1

dot graph arrowsubgraph cluster_1934240766 dot graph subgraph  _7 = status;
_34 = (int) _33;
dot graph subgrapend

 <ssa_name 0x7faf46184438
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
    var <var_decl 0x7faf461881b0 fd>
    def_stmt fd_37 = mkstemp (tmpname_36);
    version 37>

 ================== Start Use after free Check ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_38 = PHI <0B(8), tmpname_36(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_94 = _38;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
tmpname_25 = _94;
test.c:359:13: warning: use location
     tmpname = make_tempname (input_filename);
             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_80>
_75 = __printf_chk (1, "%d\n", _74);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_102 = VDEF <.MEM_82>
unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_104>
unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_110 = ret_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
_32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_111 = VDEF <.MEM_109>
status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_80>
_28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# VUSE <.MEM_112>
_7 = status;
test.c:389:10: warning: use location
   return status;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_104 = VDEF <.MEM_103>
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_108 = VDEF <.MEM_107>
chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_106>
_69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_106 = VDEF <.MEM_103>
chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_81>
_58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_96 = VDEF <.MEM_95>
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_114 = VDEF <.MEM_78>
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_93 = VDEF <.MEM_91>
free (tmpname_36);
test.c:203:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_92 = VDEF <.MEM_91>
close (fd_37);
test.c:206:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faf46630798
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
   
    def_stmt _53 = rand ();
    version 53>
 <ssa_name 0x7faf46630798
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
   
    def_stmt _53 = rand ();
    version 53>
# .MEM_95 = VDEF <.MEM_78>
_53 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

_54 = _53 % 2;
test.c:322:2: warning: use location
  __NONDET(size, 1, 0);
  ^
dot graph target loc start # .MEM_95 = VDEF <.MEM_78>
_53 = rand ();
test.c:322:2: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 13: _54 = _53 % 2;
test.c:322:2: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_95 = VDEF <.MEM_78>
_53 = rand ();
test.c:322:2: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 13dot graph target basicblock en1

dot graph stmt start _54 = _53 % 2;
_53 = rand ();
dot graph stmt end

dot graph stmt start _54 = _53 % 2;
test.c:322:2: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

if (_54 != 1)
test.c:326:10: warning: use location
       if (size == 0)
          ^
dot graph target loc start # .MEM_95 = VDEF <.MEM_78>
_53 = rand ();
test.c:322:2: warning: use location
  __NONDET(size, 1, 0);
  ^
dot graph target loc en1

dot graph target line desc form basic block 14: if (_54 != 1)
test.c:326:10: warning: use location
       if (size == 0)
          ^
dot graph target line desend

dot graph target loc start # .MEM_95 = VDEF <.MEM_78>
_53 = rand ();
test.c:322:2: warning: use location
  __NONDET(size, 1, 0);
  ^
dot graph target loc end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph stmt start if (_54 != 1)
_53 = rand ();
dot graph stmt end

dot graph stmt start if (_54 != 1)
test.c:326:10: warning: use location
       if (size == 0)
          ^
dot graph stmt end

if (_54 != 1)

 ================== find cond branch ================= 
test.c:326:10: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 15
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_55 = _54 == 1;
test.c:322:2: warning: use location
  __NONDET(size, 1, 0);
  ^
dot graph target loc start # .MEM_95 = VDEF <.MEM_78>
_53 = rand ();
test.c:322:2: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 13: _55 = _54 == 1;
test.c:322:2: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_95 = VDEF <.MEM_78>
_53 = rand ();
test.c:322:2: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 13dot graph target basicblock en1

dot graph stmt start _55 = _54 == 1;
_53 = rand ();
dot graph stmt end

dot graph stmt start _55 = _54 == 1;
test.c:322:2: warning: use location
dot graph stmt end

dot graph target basicblock start from main basic block 14dot graph target basicblock en1

dot graph arrowsubgraph cluster_1931065839 dot graph subgraph  if (_54 != 1)
_54 = _53 % 2;
dot graph subgrapend

 <ssa_name 0x7faf46630798
    type <integer_type 0x7faf4663c5e8 int public SI
        size <integer_cst 0x7faf46628e28 constant 32>
        unit size <integer_cst 0x7faf46628e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7faf4663c5e8 precision 32 min <integer_cst 0x7faf46628de0 -2147483648> max <integer_cst 0x7faf46628df8 2147483647>
        pointer_to_this <pointer_type 0x7faf46643a80>>
   
    def_stmt _53 = rand ();
    version 53>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 20: if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph stmt start if (tmpname_26 != output_filename_30)
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph stmt end

if (tmpname_26 != output_filename_30)

 ================== find cond branch ================= 
test.c:373:10: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 33: _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _74 = MEM[(int *)tmpname_26];
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_75 = __printf_chk (1, "%d\n", _74);
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 33: _75 = __printf_chk (1, "%d\n", _74);
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 31: unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 31dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 28: unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 24: ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 24dot graph target basicblock en1

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph stmt end

this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 32: ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---rename-----
dot graph entry main
dot graph target entry end

_110 = ret_73;
lto1: warning: use location
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 32: _110 = ret_73;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _110 = ret_73;
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start _110 = ret_73;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

_32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 32: _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _32 = _110;
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 32: _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _33 = _32 != 0;
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_34 = (int) _33;
test.c:374:70: warning: use location
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 32: _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _34 = (int) _33;
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 32: status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start status = _34;
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 17: _28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _28 = status;
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start _28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 17: if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start if (_28 == 0)
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph stmt end

if (_28 == 0)

 ================== find cond branch ================= 
test.c:369:6: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 34: _7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 34dot graph target basicblock en1

dot graph stmt start _7 = status;
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start _7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 4: slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph stmt end

this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 5: _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _40 = (long int) slash_39;
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_42 = _40 - _41;
test.c:176:19: warning: use location
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 5: _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _42 = _40 - _41;
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_43 = (size_t) _42;
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 5: _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _47 = tmpname_45 + len_43;
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

*_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 5: *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start *_47 = 47;
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_46 = len_43 + 1;
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 7: len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---strrchr-----
dot graph entry main
dot graph target entry end

_51 = tmpname_49 + len_50;
test.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 7: _51 = tmpname_49 + len_50;
test.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start _51 = tmpname_49 + len_50;
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start _51 = tmpname_49 + len_50;
test.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 7: memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start memcpy (_51, "stXXXXXX", 9);
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 5: memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 4: if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start if (slash_39 != 0B)
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph stmt end

if (slash_39 != 0B)

 ================== find cond branch ================= 
test.c:174:6: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 Expand conflict 
 The same function may have multiple branches :set_times
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
# .MEM_101 = VDEF <.MEM_100>
set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
=======================Path Constaint===========================

succs:= 29
if (_31 != 0)
test.c:297:10: warning: use location
       if (preserve_dates)
          ^
	relate logic:= 1
succs:= 23
if (_63 == 1)
test.c:260:4: warning: use location
    && s.st_nlink == 1)
    ^
	relate logic:= 1
succs:= 22
if (_62 == 32896)
test.c:257:7: warning: use location
       || (!S_ISLNK (s.st_mode)
       ^
	relate logic:= 0
succs:= 21
if (_58 != 0)
test.c:256:6: warning: use location
   if (! exists
      ^
	relate logic:= 1
succs:= 20
if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
	relate logic:= 0
succs:= 18
if (_29 != 0)
test.c:371:10: warning: use location
       if (preserve_dates)
          ^
	relate logic:= 1
succs:= 17
if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
	relate logic:= 0
succs:= 13
if (_54 != 1)
test.c:324:6: warning: use location
   if (size < 1)
      ^
	relate logic:= 0
succs:= 11
if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
	relate logic:= 1
=======================Path Constaint===========================

dot graph entry main
dot graph target entry end

_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 28: _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 27: chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 27dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _71);
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 26: _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph stmt end

this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 26: chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _66);
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 21: _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _58 = lstat (input_filename_15, &s);
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph stmt end

this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 21: _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _59 = _58 == 0;
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 21: exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start exists_60 = (bfd_boolean) _59;
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 15: _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 15dot graph target basicblock en1

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 5: _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _41 = (long int) input_filename_15;
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 12: _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 12dot graph target basicblock en1

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
dot graph entry main
dot graph target entry end

set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 19: set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start set_times (tmpname_26, &statbuf);
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
dot graph stmt end

this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
dot graph arrowdot graph start relate for1ID : 106683978
from set_times basic block 2dot graph end relate end

dot graph relate stmt start ID : 6877095 stmt(call) :result_10 = utime (destination_8(D), &tb);
In function â€˜set_timesâ€™:
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
destination_8(D)
dot graph relate end

dot graph arrowdot graph start relate for1ID : 106683978
from set_times basic block 3dot graph end relate end

dot graph relate stmt start ID : 259084292 stmt(call) :_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (tmpname_26 == 0B)
In function â€˜mainâ€™:
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc en1

dot graph target line desc form basic block 11: if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_99 = VDEF <.MEM_80>
set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start if (tmpname_26 == 0B)
set_times (tmpname_26, &statbuf);
dot graph stmt end

dot graph stmt start if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph stmt end

if (tmpname_26 == 0B)

 ================== find cond branch ================= 
test.c:364:6: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph target basicblock start from main basic block 34dot graph target basicblock en1

dot graph arrowsubgraph cluster_800612724 dot graph subgraph  _7 = status;
_34 = (int) _33;
dot graph subgrapend

 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
dot graph start relate for1ID : 106683978
from set_times basic block 3dot graph end relate end

subgraph cluster_2033143418 dot graph subgraph  start ID : 259084292 stmt(relate) ï¼Œ Tree ID : 106683978 : _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
dot graph subgrapend


 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
dot graph entry main
dot graph target entry end

if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 20: if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 20dot graph target basicblock en1

dot graph stmt start if (tmpname_26 != output_filename_30)
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start if (tmpname_26 != output_filename_30)
test.c:373:10: warning: use location
       if (tmpname != output_filename)
          ^
dot graph stmt end

if (tmpname_26 != output_filename_30)

 ================== find cond branch ================= 
test.c:373:10: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 33: _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _74 = MEM[(int *)tmpname_26];
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start _74 = MEM[(int *)tmpname_26];
test.c:307:2: warning: use location
  __USE(name);
  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_75 = __printf_chk (1, "%d\n", _74);
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 33: _75 = __printf_chk (1, "%d\n", _74);
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 33dot graph target basicblock en1

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start _75 = __printf_chk (1, "%d\n", _74);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 31: unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 31dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:299:7: warning: use location
       unlink (from);
       ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 28: unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start unlink (tmpname_26);
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start unlink (tmpname_26);
test.c:289:4: warning: use location
    unlink (from);
    ^
dot graph stmt end

this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 24: ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 24dot graph target basicblock en1

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
dot graph stmt end

this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 32: ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---rename-----
dot graph entry main
dot graph target entry end

_110 = ret_73;
lto1: warning: use location
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 32: _110 = ret_73;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _110 = ret_73;
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start _110 = ret_73;
lto1: warning: use location
dot graph stmt end

dot graph entry main
dot graph target entry end

_32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 32: _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _32 = _110;
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start _32 = _110;
test.c:374:15: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
               ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 32: _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _33 = _32 != 0;
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start _33 = _32 != 0;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_34 = (int) _33;
test.c:374:70: warning: use location
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 32: _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start _34 = (int) _33;
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start _34 = (int) _33;
test.c:374:70: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
                                                                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 32: status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 32dot graph target basicblock en1

dot graph stmt start status = _34;
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start status = _34;
test.c:374:12: warning: use location
     status = (smart_rename (tmpname, input_filename, preserve_dates) != 0);
            ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 17: _28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start _28 = status;
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start _28 = status;
test.c:369:14: warning: use location
   if (status == 0)
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 17: if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 17dot graph target basicblock en1

dot graph stmt start if (_28 == 0)
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start if (_28 == 0)
test.c:369:6: warning: use location
   if (status == 0)
      ^
dot graph stmt end

if (_28 == 0)

 ================== find cond branch ================= 
test.c:369:6: warning: use location
Cond in fucntion main basic block 17
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 33
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

_7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 34: _7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 34dot graph target basicblock en1

dot graph stmt start _7 = status;
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start _7 = status;
test.c:389:10: warning: use location
   return status;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 4: slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start slash_39 = strrchr (input_filename_15, 47);
test.c:170:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
dot graph stmt end

this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 5: _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _40 = (long int) slash_39;
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start _40 = (long int) slash_39;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_42 = _40 - _41;
test.c:176:19: warning: use location
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 5: _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _42 = _40 - _41;
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start _42 = _40 - _41;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_43 = (size_t) _42;
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start len_43 = (size_t) _42;
test.c:176:11: warning: use location
       len = slash - path;
           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 5: _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _47 = tmpname_45 + len_43;
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start _47 = tmpname_45 + len_43;
test.c:179:14: warning: use location
       tmpname[len++] = '/';
              ^
dot graph stmt end

dot graph entry main
dot graph target entry end

*_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 5: *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start *_47 = 47;
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start *_47 = 47;
test.c:179:22: warning: use location
       tmpname[len++] = '/';
                      ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 5: len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start len_46 = len_43 + 1;
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start len_46 = len_43 + 1;
test.c:179:18: warning: use location
       tmpname[len++] = '/';
                  ^
dot graph stmt end

dot graph entry main
dot graph target entry end

len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 7: len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start len_50 = PHI <len_46(5), 0(6)>
lto1: warning: use location
dot graph stmt end

this stmt have mutiple branch ---strrchr-----
dot graph entry main
dot graph target entry end

_51 = tmpname_49 + len_50;
test.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 7: _51 = tmpname_49 + len_50;
test.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start _51 = tmpname_49 + len_50;
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start _51 = tmpname_49 + len_50;
test.c:187:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 7: memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 7dot graph target basicblock en1

dot graph stmt start memcpy (_51, "stXXXXXX", 9);
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start memcpy (_51, "stXXXXXX", 9);
test.c:187:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 5: memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start memcpy (tmpname_45, input_filename_15, len_43);
test.c:178:7: warning: use location
       memcpy (tmpname, path, len);
       ^
dot graph stmt end

this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 4: if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 4dot graph target basicblock en1

dot graph stmt start if (slash_39 != 0B)
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start if (slash_39 != 0B)
test.c:174:6: warning: use location
   if (slash != (char *) NULL)
      ^
dot graph stmt end

if (slash_39 != 0B)

 ================== find cond branch ================= 
test.c:174:6: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry main
dot graph target entry end

set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 30: set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 30dot graph target basicblock en1

dot graph stmt start set_times (input_filename_15, &s);
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start set_times (input_filename_15, &s);
test.c:298:5: warning: use location
     set_times (to, &s);
     ^
dot graph stmt end

this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
dot graph arrowdot graph start relate for1ID : 255310962
from set_times basic block 2dot graph end relate end

dot graph relate stmt start ID : 1014789460 stmt(call) :result_10 = utime (destination_8(D), &tb);
In function â€˜set_timesâ€™:
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
destination_8(D)
dot graph relate end

dot graph arrowdot graph start relate for1ID : 255310962
from set_times basic block 3dot graph end relate end

dot graph relate stmt start ID : 181012748 stmt(call) :_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
In function â€˜mainâ€™:
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 28: _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 28dot graph target basicblock en1

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start _72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 27: chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 27dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _71);
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _71);
test.c:282:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 26: _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start _69 = chown (input_filename_15, _68, _67);
test.c:281:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
dot graph stmt end

this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 26: chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 26dot graph target basicblock en1

dot graph stmt start chmod (input_filename_15, _66);
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start chmod (input_filename_15, _66);
test.c:280:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
dot graph stmt end

this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 21: _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _58 = lstat (input_filename_15, &s);
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start _58 = lstat (input_filename_15, &s);
test.c:252:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
dot graph stmt end

this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 21: _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start _59 = _58 == 0;
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start _59 = _58 == 0;
test.c:252:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^
dot graph stmt end

dot graph entry main
dot graph target entry end

exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 21: exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 21dot graph target basicblock en1

dot graph stmt start exists_60 = (bfd_boolean) _59;
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start exists_60 = (bfd_boolean) _59;
test.c:252:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 15: _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 15dot graph target basicblock en1

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start _57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

_41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 5: _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 5dot graph target basicblock en1

dot graph stmt start _41 = (long int) input_filename_15;
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start _41 = (long int) input_filename_15;
test.c:176:19: warning: use location
       len = slash - path;
                   ^
dot graph stmt end

dot graph entry main
dot graph target entry end

_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 12: _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
dot graph target loc end

dot graph target basicblock start from main basic block 12dot graph target basicblock en1

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start _27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
dot graph stmt end

this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 19: set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 19dot graph target basicblock en1

dot graph stmt start set_times (tmpname_26, &statbuf);
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start set_times (tmpname_26, &statbuf);
test.c:372:5: warning: use location
     set_times (tmpname, &statbuf);
     ^
dot graph stmt end

this stmt is child function---set_times-----

 ================== trace ================== 
 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
dot graph arrowdot graph start relate for1ID : 1727195881
from set_times basic block 2dot graph end relate end

dot graph relate stmt start ID : 1391976726 stmt(call) :result_10 = utime (destination_8(D), &tb);
In function â€˜set_timesâ€™:
test.c:228:12: warning: use location
     result = utime (destination, tb);
            ^
destination_8(D)
dot graph relate end

dot graph arrowdot graph start relate for1ID : 1727195881
from set_times basic block 3dot graph end relate end

dot graph relate stmt start ID : 1640670931 stmt(call) :_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
1
dot graph relate end

fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
dot graph entry main
dot graph target entry end

if (tmpname_26 == 0B)
In function â€˜mainâ€™:
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc en1

dot graph target line desc form basic block 11: if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph target line desend

dot graph target loc start # .MEM_103 = VDEF <.MEM_100>
ret_64 = rename (tmpname_26, input_filename_15);
test.c:263:11: warning: use location
       ret = rename (from, to);
           ^
dot graph target loc end

dot graph target basicblock start from main basic block 11dot graph target basicblock en1

dot graph stmt start if (tmpname_26 == 0B)
ret_64 = rename (tmpname_26, input_filename_15);
dot graph stmt end

dot graph stmt start if (tmpname_26 == 0B)
test.c:364:6: warning: use location
   if (tmpname == NULL)
      ^
dot graph stmt end

if (tmpname_26 == 0B)

 ================== find cond branch ================= 
test.c:364:6: warning: use location
Cond in fucntion main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph target basicblock start from main basic block 34dot graph target basicblock en1

dot graph arrowsubgraph cluster_994628606 dot graph subgraph  _7 = status;
_34 = (int) _33;
dot graph subgrapend

 <ssa_name 0x7faf46180e10
    type <pointer_type 0x7faf4615a7e0
        type <integer_type 0x7faf4615a738 char public string-flag QI
            size <integer_cst 0x7faf46628cd8 constant 8>
            unit size <integer_cst 0x7faf46628cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7faf4663c3f0 precision 8 min <integer_cst 0x7faf4615d180 -128> max <integer_cst 0x7faf4615d168 127>
            pointer_to_this <pointer_type 0x7faf4615a7e0>>
        public unsigned DI
        size <integer_cst 0x7faf46628be8 constant 64>
        unit size <integer_cst 0x7faf46628c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7faf46633168 test.c>
        pointer_to_this <pointer_type 0x7faf4615a888>>
    var <var_decl 0x7faf4617e870 tmpname>
    def_stmt tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
    version 26
    ptr-info 0x7faf46178bd0>
dot graph start relate for1ID : 106683978
from set_times basic block 3dot graph end relate end

subgraph cluster_1010623768 dot graph subgraph  start ID : 259084292 stmt(relate) ï¼Œ Tree ID : 106683978 : _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
dot graph subgrapend

dot graph start relate for1ID : 255310962
from set_times basic block 3dot graph end relate end

subgraph cluster_729913419 dot graph subgraph  start ID : 181012748 stmt(relate) ï¼Œ Tree ID : 255310962 : _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
dot graph subgrapend

dot graph start relate for1ID : 1727195881
from set_times basic block 3dot graph end relate end

subgraph cluster_982377657 dot graph subgraph  start ID : 1640670931 stmt(relate) ï¼Œ Tree ID : 1727195881 : _12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));
dot graph subgrapend


 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh
=======Mapping node_fun:set_times=========
=======is loop:0=========
<bb 2> [100.00%]:
_1 = statbuf_5(D)->st_atim.tv_sec;
tb[0] = _1;
_2 = statbuf_5(D)->st_mtim.tv_sec;
tb[1] = _2;
result_10 = utime (destination_8(D), &tb);
tb ={v} {CLOBBER};
if (result_10 != 0)
  goto <bb 3>; [36.64%]
else
  goto <bb 4>; [63.36%]

=======is loop:0=========
<bb 3> [36.64%]:
_12 = __printf_chk (1, "%s: cannot set time:", destination_8(D));

=======is loop:0=========
<bb 4> [100.00%]:
return;

=======Mapping node_fun:main=========
=======is loop:0=========
<bb 2> [100.00%]:
_1 = *argv_3(D);
_11 = optind;
_12 = (long unsigned int) _11;
_13 = _12 * 8;
_14 = argv_3(D) + _13;
input_filename_15 = *_14;
_16 = optind;
_17 = _16 + 1;
if (argc_5(D) > _17)
  goto <bb 3>; [67.00%]
else
  goto <bb 4>; [33.00%]

=======is loop:0=========
<bb 3> [67.00%]:
_18 = optind;
_19 = (sizetype) _18;
_20 = _19 + 1;
_21 = _20 * 8;
_22 = argv_3(D) + _21;
output_filename_23 = *_22;
if (output_filename_23 == 0B)
  goto <bb 4>; [30.00%]
else
  goto <bb 11>; [70.00%]

=======is loop:0=========
<bb 4> [53.10%]:
# output_filename_35 = PHI <0B(2), output_filename_23(3)>
slash_39 = strrchr (input_filename_15, 47);
if (slash_39 != 0B)
  goto <bb 5>; [66.53%]
else
  goto <bb 6>; [33.47%]

=======is loop:0=========
<bb 5> [35.33%]:
_40 = (long int) slash_39;
_41 = (long int) input_filename_15;
_42 = _40 - _41;
len_43 = (size_t) _42;
_44 = len_43 + 11;
tmpname_45 = malloc (_44);
memcpy (tmpname_45, input_filename_15, len_43);
len_46 = len_43 + 1;
_47 = tmpname_45 + len_43;
*_47 = 47;
goto <bb 7>; [100.00%]

=======is loop:0=========
<bb 6> [17.77%]:
tmpname_48 = malloc (9);

=======is loop:0=========
<bb 7> [53.10%]:
# tmpname_49 = PHI <tmpname_45(5), tmpname_48(6)>
# len_50 = PHI <len_46(5), 0(6)>
_51 = tmpname_49 + len_50;
memcpy (_51, "stXXXXXX", 9);
_52 = tmpname_49;
_90 = tmpname_49;
tmpname_36 = _90;
fd_37 = mkstemp (tmpname_36);
if (fd_37 == -1)
  goto <bb 8>; [4.85%]
else
  goto <bb 9>; [95.15%]

=======is loop:0=========
<bb 8> [2.58%]:
free (tmpname_36);
goto <bb 10>; [100.00%]

=======is loop:0=========
<bb 9> [50.52%]:
close (fd_37);

=======is loop:0=========
<bb 10> [53.10%]:
# _38 = PHI <0B(8), tmpname_36(9)>
_94 = _38;
tmpname_25 = _94;

=======is loop:0=========
<bb 11> [100.00%]:
# tmpname_26 = PHI <output_filename_23(3), tmpname_25(10)>
# output_filename_30 = PHI <output_filename_23(3), output_filename_35(10)>
if (tmpname_26 == 0B)
  goto <bb 12>; [0.04%]
else
  goto <bb 13>; [99.96%]

=======is loop:0=========
<bb 12> [0.04%]:
_27 = __printf_chk (1, "warning: could not create temporary file whilst copying \'%s\'", input_filename_15);
exit (1);

=======is loop:0=========
<bb 13> [99.96%]:
_53 = rand ();
_54 = _53 % 2;
_55 = _54 == 1;
size_56 = (off_t) _55;
if (_54 != 1)
  goto <bb 14>; [69.50%]
else
  goto <bb 17>; [30.50%]

=======is loop:0=========
<bb 14> [69.47%]:
if (_54 != 1)
  goto <bb 15>; [48.88%]
else
  goto <bb 16>; [51.12%]

=======is loop:0=========
<bb 15> [33.96%]:
_57 = __printf_chk (1, "error: the input file \'%s\' is empty", input_filename_15);

=======is loop:0=========
<bb 16> [69.47%]:
status = 1;

=======is loop:0=========
<bb 17> [99.96%]:
_28 = status;
if (_28 == 0)
  goto <bb 18>; [67.00%]
else
  goto <bb 33>; [33.00%]

=======is loop:0=========
<bb 18> [66.97%]:
_29 = 0;
if (_29 != 0)
  goto <bb 19>; [33.00%]
else
  goto <bb 20>; [67.00%]

=======is loop:0=========
<bb 19> [22.10%]:
set_times (tmpname_26, &statbuf);

=======is loop:0=========
<bb 20> [66.97%]:
if (tmpname_26 != output_filename_30)
  goto <bb 21>; [53.47%]
else
  goto <bb 34>; [46.53%]

=======is loop:0=========
<bb 21> [35.81%]:
_31 = 0;
_58 = lstat (input_filename_15, &s);
_59 = _58 == 0;
exists_60 = (bfd_boolean) _59;
if (_58 != 0)
  goto <bb 24>; [33.00%]
else
  goto <bb 22>; [67.00%]

=======is loop:0=========
<bb 22> [23.99%]:
_61 = BIT_FIELD_REF <s, 32, 192>;
_62 = _61 & 61568;
if (_62 == 32896)
  goto <bb 23>; [34.00%]
else
  goto <bb 29>; [66.00%]

=======is loop:0=========
<bb 23> [8.16%]:
_63 = s.st_nlink;
if (_63 == 1)
  goto <bb 24>; [34.00%]
else
  goto <bb 29>; [66.00%]

=======is loop:0=========
<bb 24> [14.59%]:
ret_64 = rename (tmpname_26, input_filename_15);
if (ret_64 == 0)
  goto <bb 25>; [70.44%]
else
  goto <bb 28>; [29.56%]

=======is loop:0=========
<bb 25> [10.28%]:
if (_58 == 0)
  goto <bb 26>; [36.64%]
else
  goto <bb 32>; [63.36%]

=======is loop:0=========
<bb 26> [3.77%]:
_65 = s.st_mode;
_66 = _65 & 511;
chmod (input_filename_15, _66);
_67 = s.st_gid;
_68 = s.st_uid;
_69 = chown (input_filename_15, _68, _67);
if (_69 >= 0)
  goto <bb 27>; [46.68%]
else
  goto <bb 32>; [53.32%]

=======is loop:0=========
<bb 27> [1.76%]:
_70 = s.st_mode;
_71 = _70 & 4095;
chmod (input_filename_15, _71);
goto <bb 32>; [100.00%]

=======is loop:0=========
<bb 28> [4.31%]:
_72 = __printf_chk (1, "unable to rename \'%s\';", input_filename_15);
unlink (tmpname_26);
goto <bb 32>; [100.00%]

=======is loop:0=========
<bb 29> [21.22%]:
if (_31 != 0)
  goto <bb 30>; [33.00%]
else
  goto <bb 31>; [67.00%]

=======is loop:0=========
<bb 30> [7.00%]:
set_times (input_filename_15, &s);

=======is loop:0=========
<bb 31> [21.22%]:
unlink (tmpname_26);

=======is loop:0=========
<bb 32> [35.81%]:
# ret_73 = PHI <ret_64(25), ret_64(26), ret_64(27), ret_64(28), 0(31)>
s ={v} {CLOBBER};
_110 = ret_73;
_32 = _110;
_33 = _32 != 0;
_34 = (int) _33;
status = _34;
goto <bb 34>; [100.00%]

=======is loop:0=========
<bb 33> [32.99%]:
_74 = MEM[(int *)tmpname_26];
_75 = __printf_chk (1, "%d\n", _74);

=======is loop:0=========
<bb 34> [99.96%]:
statbuf ={v} {CLOBBER};
_113 = 0;
_7 = status;
return _7;

[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 10 [0m
[40;34m    used_stmt array stack totalsize of : 9344 [0m
[40;34m    collect time: : 0.000896 s [0m
[40;34m    algorithm time: 0.087860 s [0m
[40;34m    gimple stmt count : : 106 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
