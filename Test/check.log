test.c: In function ‘test_ptr’:
test.c:111:5: warning: implicit declaration of function ‘test_fail_message’ [-Wimplicit-function-declaration]
     test_fail_message(NULL, file, line, "ptr", s, "NULL", "!=", "%p", p);
     ^~~~~~~~~~~~~~~~~
test.c: In function ‘ASN1_STRING_set’:
test.c:133:19: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
             len = strlen(data);
                   ^~~~~~
test.c:133:19: warning: incompatible implicit declaration of built-in function ‘strlen’
test.c:133:19: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
test.c:137:21: warning: implicit declaration of function ‘OPENSSL_realloc’; did you mean ‘OPENSSL_malloc’? [-Wimplicit-function-declaration]
         str->data = OPENSSL_realloc(c, len + 1);
                     ^~~~~~~~~~~~~~~
                     OPENSSL_malloc
test.c:137:19: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
         str->data = OPENSSL_realloc(c, len + 1);
                   ^
test.c:145:9: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
         memcpy(str->data, data, len);
         ^~~~~~
test.c:145:9: warning: incompatible implicit declaration of built-in function ‘memcpy’
test.c:145:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
test.c: In function ‘asn1_string_set_uint64’:
test.c:158:11: warning: implicit declaration of function ‘asn1_put_uint64’; did you mean ‘asn1_string_set_uint64’? [-Wimplicit-function-declaration]
     off = asn1_put_uint64(tbuf, r);
           ^~~~~~~~~~~~~~~
           asn1_string_set_uint64
test.c: In function ‘asn1_time_from_tm’:
test.c:179:13: warning: implicit declaration of function ‘is_utc’; did you mean ‘putc’? [-Wimplicit-function-declaration]
         if (is_utc(ts->tm_year))
             ^~~~~~
             putc
test.c:191:16: warning: implicit declaration of function ‘ASN1_STRING_new’; did you mean ‘ASN1_STRING_set’? [-Wimplicit-function-declaration]
         tmps = ASN1_STRING_new(); /* allocation site */
                ^~~~~~~~~~~~~~~
                ASN1_STRING_set
test.c:191:14: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
         tmps = ASN1_STRING_new(); /* allocation site */
              ^
test.c:204:24: warning: implicit declaration of function ‘BIO_snprintf’; did you mean ‘vsnprintf’? [-Wimplicit-function-declaration]
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^~~~~~~~~~~~
                        vsnprintf
test.c:217:9: warning: implicit declaration of function ‘ASN1_STRING_free’; did you mean ‘ASN1_STRING_set’? [-Wimplicit-function-declaration]
         ASN1_STRING_free(tmps);
         ^~~~~~~~~~~~~~~~
         ASN1_STRING_set
test.c: In function ‘ASN1_TIME_adj’:
test.c:227:10: warning: implicit declaration of function ‘OPENSSL_gmtime’; did you mean ‘OPENSSL_free’? [-Wimplicit-function-declaration]
     ts = OPENSSL_gmtime(&t, &data);
          ^~~~~~~~~~~~~~
          OPENSSL_free
test.c:227:8: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
     ts = OPENSSL_gmtime(&t, &data);
        ^
test.c:232:14: warning: implicit declaration of function ‘OPENSSL_gmtime_adj’; did you mean ‘OPENSSL_memdup’? [-Wimplicit-function-declaration]
         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
              ^~~~~~~~~~~~~~~~~~
              OPENSSL_memdup
test.c: In function ‘X509_NAME_add_entry_by_NID’:
test.c:249:10: warning: implicit declaration of function ‘X509_NAME_ENTRY_create_by_NID’; did you mean ‘X509_NAME_add_entry_by_NID’? [-Wimplicit-function-declaration]
     ne = X509_NAME_ENTRY_create_by_NID(NULL, nid, type, bytes, len);
          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          X509_NAME_add_entry_by_NID
test.c:249:8: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
     ne = X509_NAME_ENTRY_create_by_NID(NULL, nid, type, bytes, len);
        ^
test.c:252:11: warning: implicit declaration of function ‘X509_NAME_add_entry’; did you mean ‘X509_NAME_add_entry_by_NID’? [-Wimplicit-function-declaration]
     ret = X509_NAME_add_entry(name, ne, loc, set);
           ^~~~~~~~~~~~~~~~~~~
           X509_NAME_add_entry_by_NID
test.c:253:5: warning: implicit declaration of function ‘X509_NAME_ENTRY_free’; did you mean ‘X509_NAME_ENTRY’? [-Wimplicit-function-declaration]
     X509_NAME_ENTRY_free(ne);
     ^~~~~~~~~~~~~~~~~~~~
     X509_NAME_ENTRY
test.c: In function ‘OCSP_basic_add1_status’:
test.c:270:19: warning: implicit declaration of function ‘sk_OCSP_SINGLERESP_new_null’ [-Wimplicit-function-declaration]
                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
test.c:270:17: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
                 ^
test.c:273:27: warning: implicit declaration of function ‘OCSP_CERTID_dup’; did you mean ‘OCSP_RESPID_KEY’? [-Wimplicit-function-declaration]
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^~~~~~~~~~~~~~~
                           OCSP_RESPID_KEY
test.c:273:25: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^
test.c:276:15: warning: implicit declaration of function ‘sk_OCSP_SINGLERESP_push’ [-Wimplicit-function-declaration]
         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
               ^~~~~~~~~~~~~~~~~~~~~~~
test.c:280:5: warning: implicit declaration of function ‘OCSP_SINGLERESP_free’ [-Wimplicit-function-declaration]
     OCSP_SINGLERESP_free(single);
     ^~~~~~~~~~~~~~~~~~~~
test.c: In function ‘make_dummy_resp’:
test.c:288:26: warning: implicit declaration of function ‘OCSP_BASICRESP_new’ [-Wimplicit-function-declaration]
     OCSP_BASICRESP *bs = OCSP_BASICRESP_new();     /* allocation site */
                          ^~~~~~~~~~~~~~~~~~
test.c:288:26: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
test.c:290:46: warning: implicit declaration of function ‘time’; did you mean ‘die’? [-Wimplicit-function-declaration]
     ASN1_TIME *thisupd = ASN1_TIME_set(NULL, time(NULL));
                                              ^~~~
                                              die
test.c:292:23: warning: implicit declaration of function ‘X509_NAME_new’; did you mean ‘X509_NAME’? [-Wimplicit-function-declaration]
     X509_NAME *name = X509_NAME_new();                          /* allocation site */
                       ^~~~~~~~~~~~~
                       X509_NAME
test.c:292:23: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
test.c:293:28: warning: implicit declaration of function ‘ASN1_BIT_STRING_new’; did you mean ‘ASN1_BIT_STRING_set’? [-Wimplicit-function-declaration]
     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
                            ^~~~~~~~~~~~~~~~~~~
                            ASN1_BIT_STRING_set
test.c:293:28: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
test.c:294:28: warning: implicit declaration of function ‘ASN1_INTEGER_new’; did you mean ‘V_ASN1_INTEGER’? [-Wimplicit-function-declaration]
     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
                            ^~~~~~~~~~~~~~~~
                            V_ASN1_INTEGER
test.c:294:28: warning: initialization makes pointer from integer without a cast [-Wint-conversion]
test.c:301:11: warning: implicit declaration of function ‘OCSP_cert_id_new’ [-Wimplicit-function-declaration]
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^~~~~~~~~~~~~~~~
test.c:301:28: warning: implicit declaration of function ‘EVP_sha256’; did you mean ‘NID_sha256’? [-Wimplicit-function-declaration]
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
                            ^~~~~~~~~~
                            NID_sha256
test.c:301:9: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
         ^
test.c:310:5: warning: implicit declaration of function ‘ASN1_TIME_free’; did you mean ‘ASN1_TIME_set’? [-Wimplicit-function-declaration]
     ASN1_TIME_free(thisupd);
     ^~~~~~~~~~~~~~
     ASN1_TIME_set
test.c:312:5: warning: implicit declaration of function ‘ASN1_BIT_STRING_free’; did you mean ‘ASN1_BIT_STRING_set’? [-Wimplicit-function-declaration]
     ASN1_BIT_STRING_free(key);
     ^~~~~~~~~~~~~~~~~~~~
     ASN1_BIT_STRING_set
test.c:313:5: warning: implicit declaration of function ‘ASN1_INTEGER_free’; did you mean ‘V_ASN1_INTEGER’? [-Wimplicit-function-declaration]
     ASN1_INTEGER_free(serial);
     ^~~~~~~~~~~~~~~~~
     V_ASN1_INTEGER
test.c:314:5: warning: implicit declaration of function ‘OCSP_CERTID_free’; did you mean ‘OCSP_RESPID_KEY’? [-Wimplicit-function-declaration]
     OCSP_CERTID_free(cid);
     ^~~~~~~~~~~~~~~~
     OCSP_RESPID_KEY
test.c:315:5: warning: implicit declaration of function ‘X509_NAME_free’; did you mean ‘X509_NAME_ENTRY’? [-Wimplicit-function-declaration]
     X509_NAME_free(name);
     ^~~~~~~~~~~~~~
     X509_NAME_ENTRY
test.c: In function ‘main’:
test.c:330:23: warning: implicit declaration of function ‘get_cert_and_key’ [-Wimplicit-function-declaration]
         || !TEST_true(get_cert_and_key(&signer, &key))
                       ^
test.c:105:66: note: in definition of macro ‘TEST_true’
 # define TEST_true(a)         test_true(__FILE__, __LINE__, #a, (a) != 0)
                                                                  ^
test.c:331:23: warning: implicit declaration of function ‘OCSP_basic_sign’; did you mean ‘OCSP_basic_add1_status’? [-Wimplicit-function-declaration]
         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
                       ^
test.c:105:66: note: in definition of macro ‘TEST_true’
 # define TEST_true(a)         test_true(__FILE__, __LINE__, #a, (a) != 0)
                                                                  ^
test.c:331:56: warning: implicit declaration of function ‘EVP_sha1’; did you mean ‘OBJ_sha1’? [-Wimplicit-function-declaration]
         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
                                                        ^
test.c:105:66: note: in definition of macro ‘TEST_true’
 # define TEST_true(a)         test_true(__FILE__, __LINE__, #a, (a) != 0)
                                                                  ^
test.c:334:5: warning: implicit declaration of function ‘OCSP_BASICRESP_free’ [-Wimplicit-function-declaration]
     OCSP_BASICRESP_free(bs);
     ^~~~~~~~~~~~~~~~~~~
test.c:343:20: warning: implicit declaration of function ‘OCSP_resp_get0_signer’ [-Wimplicit-function-declaration]
     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
                    ^
test.c:105:66: note: in definition of macro ‘TEST_true’
 # define TEST_true(a)         test_true(__FILE__, __LINE__, #a, (a) != 0)
                                                                  ^
test.c:344:13: warning: implicit declaration of function ‘TEST_int_eq’; did you mean ‘TEST_ptr’? [-Wimplicit-function-declaration]
         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
             ^~~~~~~~~~~
             TEST_ptr
test.c:344:25: warning: implicit declaration of function ‘X509_cmp’; did you mean ‘X509_NAME’? [-Wimplicit-function-declaration]
         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
                         ^~~~~~~~
                         X509_NAME
test.c:347:5: warning: implicit declaration of function ‘X509_free’; did you mean ‘X509_NAME’? [-Wimplicit-function-declaration]
     X509_free(signer);
     ^~~~~~~~~
     X509_NAME
test.c:348:5: warning: implicit declaration of function ‘EVP_PKEY_free’ [-Wimplicit-function-declaration]
     EVP_PKEY_free(key);
     ^~~~~~~~~~~~~
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 2
succs:= 3
succs:= 2
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
succs:= 5
succs:= 6
--------GIMPLE Cond -------
succs:= 7
succs:= 6
succs:= 7
--------GIMPLE Cond -------
succs:= 9
succs:= 3
succs:= 9
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 3
succs:= 4
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 5
succs:= 7
--------GIMPLE Cond -------
succs:= 7
succs:= 9
--------GIMPLE Cond -------
succs:= 10
--------GIMPLE Cond -------
succs:= 11
succs:= 11
succs:= 10
--------GIMPLE Cond -------
succs:= 14
succs:= 9
succs:= 14
succs:= 2
succs:= 4
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 9
--------GIMPLE Cond -------
succs:= 10
--------GIMPLE Cond -------
succs:= 10
succs:= 11
--------GIMPLE Cond -------
succs:= 12
--------GIMPLE Cond -------
succs:= 11
succs:= 12
succs:= 13
succs:= 13
--------GIMPLE Cond -------
succs:= 15
succs:= 4
succs:= 5
succs:= 6
succs:= 7
succs:= 8
succs:= 9
succs:= 15
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
--------GIMPLE Cond -------
succs:= 4
--------GIMPLE Cond -------
succs:= 6
--------GIMPLE Cond -------
succs:= 7
--------GIMPLE Cond -------
succs:= 9
--------GIMPLE Cond -------
succs:= 10
succs:= 2
succs:= 3
succs:= 4
succs:= 6
succs:= 7
succs:= 9
succs:= 10
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 0 
pointer ptable is 0 
===============The second stage : Mapping stmt=================
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));
# .MEM_10 = VDEF <.MEM_9(D)>
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
# .MEM_27 = VDEF <.MEM_26(D)>
_5 = OPENSSL_realloc (c_23, _4);
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = OPENSSL_gmtime (&t, &data);
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
# .MEM_60 = VDEF <.MEM_59>
_30 = ASN1_STRING_new ();
# .MEM_61 = VDEF <.MEM_57>
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
# .MEM_65 = VDEF <.MEM_62>
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
# .MEM_63 = VDEF <.MEM_62>
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
# .MEM_67 = VDEF <.MEM_61>
ASN1_STRING_free (tmps_55);
# .MEM_56 = VDEF <.MEM_55>
keybytes[0] = 7;
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
# .MEM_58 = VDEF <.MEM_57>
_3 = time (0B);
# .MEM_106 = VDEF <.MEM_58>
_89 = ASN1_TIME_adj (0B, _4, 0, 0);
# .MEM_60 = VDEF <.MEM_106>
_5 = time (0B);
# .MEM_108 = VDEF <.MEM_60>
_88 = ASN1_TIME_adj (0B, _7, 0, 0);
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
# .MEM_110 = VDEF <.MEM_64>
_83 = X509_NAME_ENTRY_create_by_NID (0B, 13, 4097, &namestr, -1);
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
# .MEM_67 = VDEF <.MEM_114>
_16 = EVP_sha256 ();
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
# .MEM_69 = VDEF <.MEM_68>
_19 = test_ptr ("test.c", 302, "bs", bs_34);
# .MEM_70 = VDEF <.MEM_69>
_20 = test_ptr ("test.c", 303, "thisupd", thisupd_37);
# .MEM_71 = VDEF <.MEM_70>
_21 = test_ptr ("test.c", 304, "nextupd", nextupd_40);
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
# .MEM_116 = VDEF <.MEM_72>
_92 = sk_OCSP_SINGLERESP_new_null ();
# .MEM_118 = VDEF <.MEM_103>
_96 = OCSP_CERTID_dup (cid_51);
# .MEM_120 = VDEF <.MEM_119>
_101 = sk_OCSP_SINGLERESP_push (_100, 0B);
# .MEM_121 = VDEF <.MEM_104>
OCSP_SINGLERESP_free (0B);
# .MEM_74 = VDEF <.MEM_105>
_26 = test_true ("test.c", 308, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
# .MEM_75 = VDEF <.MEM_74>
ASN1_TIME_free (thisupd_37);
# .MEM_76 = VDEF <.MEM_75>
ASN1_TIME_free (nextupd_40);
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
# .MEM_51 = VDEF <.MEM_50>
bs_37 = make_dummy_resp ();
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
# .MEM_53 = VDEF <.MEM_52>
_2 = get_cert_and_key (&signer, &key);
# .MEM_54 = VDEF <.MEM_53>
_5 = test_true ("test.c", 330, "get_cert_and_key(&signer, &key)", _4);
# .MEM_55 = VDEF <.MEM_54>
_6 = EVP_sha1 ();
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
# .MEM_59 = VDEF <.MEM_58>
bs_46 = make_dummy_resp ();
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
# .MEM_62 = VDEF <.MEM_61>
_14 = EVP_sha1 ();
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
# .MEM_66 = VDEF <.MEM_65>
_24 = test_true ("test.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
# .MEM_71 = VDEF <.MEM_70>
EVP_PKEY_free (_30);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:test_ptr========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_ptr========= [0m
[40;42m =======start_check_funciton:test_ptr========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fee61d91000 type <pointer_type 0x7fee61d900a8> constant 0>
[40;33m =======POP node_fun stack:test_ptr========= [0m
[40;44m =======node_fun:test_true========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path test_true  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_true========= [0m
[40;42m =======start_check_funciton:test_true========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fee61d91000 type <pointer_type 0x7fee61d900a8> constant 0>
[40;33m =======POP node_fun stack:test_true========= [0m
[40;44m =======node_fun:ASN1_STRING_set========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_1 = strlen (_data_18(D));
test.c:133:19: warning: use location
             len = strlen(data);
                   ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
len_21 = (int) _1;
test.c:133:17: warning: use location
             len = strlen(data);
                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_12 = (sizetype) len_14;
test.c:147:18: warning: use location
         str->data[len] = '\0';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_13 = _11 + _12;
test.c:147:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
*_13 = 0;
test.c:147:24: warning: use location
         str->data[len] = '\0';
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_9 = (long unsigned int) len_14;
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
memcpy (_10, _data_18(D), _9);
test.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
str_22(D)->length = len_14;
test.c:143:17: warning: use location
     str->length = len;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_11 = str_22(D)->data;
test.c:147:12: warning: use location
         str->data[len] = '\0';
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_10 = str_22(D)->data;
test.c:145:19: warning: use location
         memcpy(str->data, data, len);
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
str_22(D)->data = c_23;
test.c:139:23: warning: use location
             str->data = c;
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
str_22(D)->data = c_23;
test.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
test.c:137:21: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                     ^
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
test.c:137:21: warning: use location
_7 = (unsigned char *) _6;
test.c:137:21: warning: use location
str_22(D)->data = _7;
test.c:137:19: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                   ^
c_23 = str_22(D)->data;
test.c:136:11: warning: use location
         c = str->data;
           ^
_8 = str_22(D)->data;
test.c:138:16: warning: use location
         if (str->data == NULL) {
                ^
if (_8 == 0B)
test.c:138:12: warning: use location
         if (str->data == NULL) {
            ^
if (_8 == 0B)

 ================== find cond branch ================= 
test.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
test.c:135:37: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
                                     ^
_2 = str_22(D)->length;
test.c:135:13: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
if (_data_18(D) != 0B)
test.c:144:8: warning: use location
     if (data != NULL) {
        ^
if (_data_18(D) != 0B)

 ================== find cond branch ================= 
test.c:144:8: warning: use location
Cond in fucntion ASN1_STRING_set basic block 9
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 10
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
str_22(D)->data = c_23;
test.c:139:23: warning: use location
             str->data = c;
                       ^
c_23 = str_22(D)->data;
test.c:136:11: warning: use location
         c = str->data;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_11 = str_22(D)->data;
test.c:147:12: warning: use location
         str->data[len] = '\0';
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_13 = _11 + _12;
test.c:147:18: warning: use location
         str->data[len] = '\0';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
*_13 = 0;
test.c:147:24: warning: use location
         str->data[len] = '\0';
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_10 = str_22(D)->data;
test.c:145:19: warning: use location
         memcpy(str->data, data, len);
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
memcpy (_10, _data_18(D), _9);
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
str_22(D)->length = len_14;
test.c:143:17: warning: use location
     str->length = len;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_12 = (sizetype) len_14;
test.c:147:18: warning: use location
         str->data[len] = '\0';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_9 = (long unsigned int) len_14;
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^
_4 = len_14 + 1;
test.c:137:21: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                     ^
_5 = OPENSSL_realloc (c_23, _4);
test.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
test.c:137:21: warning: use location
_7 = (unsigned char *) _6;
test.c:137:21: warning: use location
str_22(D)->data = _7;
test.c:137:19: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                   ^
_8 = str_22(D)->data;
test.c:138:16: warning: use location
         if (str->data == NULL) {
                ^
if (_8 == 0B)
test.c:138:12: warning: use location
         if (str->data == NULL) {
            ^
if (_8 == 0B)

 ================== find cond branch ================= 
test.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
test.c:135:37: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
                                     ^
_2 = str_22(D)->length;
test.c:135:13: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
test.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======node_fun:ASN1_TIME_adj========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path ASN1_TIME_adj  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;33m =======POP node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_1 = strlen (_data_18(D));
In function ‘ASN1_TIME_adj’:
test.c:133:19: warning: use location
             len = strlen(data);
                   ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
len_21 = (int) _1;
In function ‘ASN1_TIME_adj’:
test.c:133:17: warning: use location
             len = strlen(data);
                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_12 = (sizetype) len_14;
In function ‘ASN1_TIME_adj’:
test.c:147:18: warning: use location
         str->data[len] = '\0';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_13 = _11 + _12;
In function ‘ASN1_TIME_adj’:
test.c:147:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
*_13 = 0;
In function ‘ASN1_TIME_adj’:
test.c:147:24: warning: use location
         str->data[len] = '\0';
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_9 = (long unsigned int) len_14;
In function ‘ASN1_TIME_adj’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘ASN1_TIME_adj’:
test.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
str_22(D)->length = len_14;
In function ‘ASN1_TIME_adj’:
test.c:143:17: warning: use location
     str->length = len;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_11 = str_22(D)->data;
In function ‘ASN1_TIME_adj’:
test.c:147:12: warning: use location
         str->data[len] = '\0';
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_10 = str_22(D)->data;
In function ‘ASN1_TIME_adj’:
test.c:145:19: warning: use location
         memcpy(str->data, data, len);
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
str_22(D)->data = c_23;
In function ‘ASN1_TIME_adj’:
test.c:139:23: warning: use location
             str->data = c;
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
str_22(D)->data = c_23;
In function ‘ASN1_TIME_adj’:
test.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
test.c:137:21: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                     ^
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
test.c:137:21: warning: use location
_7 = (unsigned char *) _6;
test.c:137:21: warning: use location
str_22(D)->data = _7;
test.c:137:19: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                   ^
c_23 = str_22(D)->data;
test.c:136:11: warning: use location
         c = str->data;
           ^
_8 = str_22(D)->data;
test.c:138:16: warning: use location
         if (str->data == NULL) {
                ^
if (_8 == 0B)
test.c:138:12: warning: use location
         if (str->data == NULL) {
            ^
if (_8 == 0B)

 ================== find cond branch ================= 
test.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
test.c:135:37: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
                                     ^
_2 = str_22(D)->length;
test.c:135:13: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
if (_data_18(D) != 0B)
In function ‘ASN1_TIME_adj’:
test.c:144:8: warning: use location
     if (data != NULL) {
        ^
if (_data_18(D) != 0B)

 ================== find cond branch ================= 
test.c:144:8: warning: use location
Cond in fucntion ASN1_STRING_set basic block 9
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 10
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
str_22(D)->data = c_23;
In function ‘ASN1_TIME_adj’:
test.c:139:23: warning: use location
             str->data = c;
                       ^
c_23 = str_22(D)->data;
test.c:136:11: warning: use location
         c = str->data;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_11 = str_22(D)->data;
In function ‘ASN1_TIME_adj’:
test.c:147:12: warning: use location
         str->data[len] = '\0';
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_13 = _11 + _12;
In function ‘ASN1_TIME_adj’:
test.c:147:18: warning: use location
         str->data[len] = '\0';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
*_13 = 0;
In function ‘ASN1_TIME_adj’:
test.c:147:24: warning: use location
         str->data[len] = '\0';
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_10 = str_22(D)->data;
In function ‘ASN1_TIME_adj’:
test.c:145:19: warning: use location
         memcpy(str->data, data, len);
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘ASN1_TIME_adj’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
str_22(D)->length = len_14;
In function ‘ASN1_TIME_adj’:
test.c:143:17: warning: use location
     str->length = len;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_12 = (sizetype) len_14;
In function ‘ASN1_TIME_adj’:
test.c:147:18: warning: use location
         str->data[len] = '\0';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_9 = (long unsigned int) len_14;
In function ‘ASN1_TIME_adj’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^
_4 = len_14 + 1;
test.c:137:21: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                     ^
_5 = OPENSSL_realloc (c_23, _4);
test.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
test.c:137:21: warning: use location
_7 = (unsigned char *) _6;
test.c:137:21: warning: use location
str_22(D)->data = _7;
test.c:137:19: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                   ^
_8 = str_22(D)->data;
test.c:138:16: warning: use location
         if (str->data == NULL) {
                ^
if (_8 == 0B)
test.c:138:12: warning: use location
         if (str->data == NULL) {
            ^
if (_8 == 0B)

 ================== find cond branch ================= 
test.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
test.c:135:37: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
                                     ^
_2 = str_22(D)->length;
test.c:135:13: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
In function ‘ASN1_TIME_adj’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
In function ‘ASN1_TIME_adj’:
test.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;33m =======POP node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre_check_funciton:ASN1_TIME_adj========= [0m
[40;42m =======start_check_funciton:ASN1_TIME_adj========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fee61893d40
    type <pointer_type 0x7fee618b3f18
        type <integer_type 0x7fee618ac3f0 time_t DI
            size <integer_cst 0x7fee61d75be8 constant 64>
            unit size <integer_cst 0x7fee61d75c00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7fee61d89738 precision 64 min <integer_cst 0x7fee61d75e70 -9223372036854775808> max <integer_cst 0x7fee61d75e88 9223372036854775807> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618b3f18>>
        unsigned DI size <integer_cst 0x7fee61d75be8 64> unit size <integer_cst 0x7fee61d75c00 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <parm_decl 0x7fee618b4780 t type <integer_type 0x7fee618ac3f0 time_t>
        addressable DI file test.c line 221 col 47 size <integer_cst 0x7fee61d75be8 64> unit size <integer_cst 0x7fee61d75c00 8>
        align 64 context <function_decl 0x7fee618ad100 ASN1_TIME_adj> arg-type <integer_type 0x7fee618ac3f0 time_t>
        chain <parm_decl 0x7fee618b4800 offset_day type <integer_type 0x7fee61d895e8 int>
            SI file test.c line 222 col 30
            size <integer_cst 0x7fee61d75e28 constant 32>
            unit size <integer_cst 0x7fee61d75e40 constant 4>
            align 32 context <function_decl 0x7fee618ad100 ASN1_TIME_adj> arg-type <integer_type 0x7fee61d895e8 int> chain <parm_decl 0x7fee618b4880 offset_sec>>>
    test.c:227:10 start: test.c:227:10 finish: test.c:227:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>
ts_12 = (struct tm *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_52 = ts_12->tm_year;
test.c:210:39: warning: use location
                                     ts->tm_year % 100, ts->tm_mon + 1,
                                       ^
_53 = _52 % 100;
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
test.c:209:24: warning: use location
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
test.c:209:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_68 = _56;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_18 = _68;
test.c:235:12: warning: use location
     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch --------
tmps_55 = PHI <tmps_33(10)>
lto1: warning: use location
this stmt have mutiple branch --------
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
         ASN1_STRING_free(tmps);
         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
test.c:204:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                      ^
tmps_33->length = _45;
test.c:204:22: warning: use location
p_36 = tmps_33->data;
test.c:201:7: warning: use location
     p = (char*)tmps->data;
       ^
tmps_33->type = type_35;
test.c:200:16: warning: use location
     tmps->type = type;
                ^
if (type_35 == 24)
test.c:203:8: warning: use location
     if (type == V_ASN1_GENERALIZEDTIME)
        ^
if (type_35 == 24)

 ================== find cond branch ================= 
test.c:203:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 11
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 12
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
test.c:197:10: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
test.c:197:8: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
        ^
if (_34 == 0)

 ================== find cond branch ================= 
test.c:197:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 10
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 14
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (tmps_33 == 0B)
test.c:194:8: warning: use location
     if (tmps == NULL)
        ^
if (tmps_33 == 0B)

 ================== find cond branch ================= 
test.c:194:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 9
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 16
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_26 = ts_12->tm_year;
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_26 = ts_12->tm_year;
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_26 = ts_12->tm_year;
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_26 = ts_12->tm_year;
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_26 = ts_12->tm_year;
bb index := 5
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================
_26 = ts_12->tm_year;
test.c:179:13: warning: use location
         if (is_utc(ts->tm_year))
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================
_27 = is_utc (_26);
test.c:179:13: warning: use location
this stmt is child function---is_utc-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
_43 = ts_12->tm_year;
test.c:205:39: warning: use location
                                     ts->tm_year + 1900, ts->tm_mon + 1,
                                       ^
_44 = _43 + 1900;
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
_50 = ts_12->tm_mon;
test.c:210:58: warning: use location
                                     ts->tm_year % 100, ts->tm_mon + 1,
                                                          ^
_41 = ts_12->tm_mon;
test.c:205:59: warning: use location
                                     ts->tm_year + 1900, ts->tm_mon + 1,
                                                           ^
_42 = _41 + 1;
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
_40 = ts_12->tm_mday;
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
_49 = ts_12->tm_mday;
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^
_39 = ts_12->tm_hour;
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
_48 = ts_12->tm_hour;
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^
_38 = ts_12->tm_min;
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
_47 = ts_12->tm_min;
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^
_37 = ts_12->tm_sec;
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
_46 = ts_12->tm_sec;
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
test.c:232:14: warning: use location
         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
              ^
this stmt is child function---OPENSSL_gmtime_adj-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_3 = offset_day_13(D) != 0;
test.c:231:9: warning: use location
     if (offset_day || offset_sec) {
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_5 = _3 | _4;
test.c:231:20: warning: use location
     if (offset_day || offset_sec) {
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
if (_5 != 0)
test.c:231:8: warning: use location
     if (offset_day || offset_sec) {
        ^
if (_5 != 0)

 ================== find cond branch ================= 
test.c:231:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 3
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 4
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_4 = offset_sec_14(D) != 0;
test.c:231:20: warning: use location
     if (offset_day || offset_sec) {
                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618d5a68
    type <integer_type 0x7fee61d89690 unsigned int public unsigned SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d89690 precision 32 min <integer_cst 0x7fee61d75e58 0> max <integer_cst 0x7fee61d75e10 4294967295>
        pointer_to_this <pointer_type 0x7fee61d95888>>
   
    def_stmt _26 = ts_12->tm_year;
    version 26>
# VUSE <.MEM_19>
_26 = ts_12->tm_year;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================
_27 = is_utc (_26);
test.c:179:13: warning: use location
         if (is_utc(ts->tm_year))
             ^
this stmt is child function---is_utc-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5a68
    type <integer_type 0x7fee61d89690 unsigned int public unsigned SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d89690 precision 32 min <integer_cst 0x7fee61d75e58 0> max <integer_cst 0x7fee61d75e10 4294967295>
        pointer_to_this <pointer_type 0x7fee61d95888>>
   
    def_stmt _26 = ts_12->tm_year;
    version 26>
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_27 != 0)
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_27 != 0)
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_27 != 0)
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_27 != 0)
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_27 != 0)
bb index := 5
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================
if (_27 != 0)
test.c:179:12: warning: use location
         if (is_utc(ts->tm_year))
            ^
if (_27 != 0)

 ================== find cond branch ================= 
test.c:179:12: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 5
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 7
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618d5a68
    type <integer_type 0x7fee61d89690 unsigned int public unsigned SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d89690 precision 32 min <integer_cst 0x7fee61d75e58 0> max <integer_cst 0x7fee61d75e10 4294967295>
        pointer_to_this <pointer_type 0x7fee61d95888>>
   
    def_stmt _26 = ts_12->tm_year;
    version 26>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618d5b88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version 30>
# .MEM_60 = VDEF <.MEM_59>
_30 = ASN1_STRING_new ();

 ================== trace ptable================== 
trace fucntion name:ASN1_STRING_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_STRING_new-----
this other function ------ASN1_STRING_new-----
 
 Start check Pointer Collect  

======================================================================
_31 = (long int) _30;
test.c:191:16: warning: use location
         tmps = ASN1_STRING_new(); /* allocation site */
                ^
tmps_32 = (struct ASN1_TIME *) _31;
test.c:191:14: warning: use location
         tmps = ASN1_STRING_new(); /* allocation site */
              ^
tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_68 = _56;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_18 = _68;
test.c:235:12: warning: use location
     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch --------
tmps_55 = PHI <tmps_33(10)>
lto1: warning: use location
this stmt have mutiple branch --------
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
         ASN1_STRING_free(tmps);
         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5b88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version 30>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
test.c:209:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                      ^
tmps_33->length = _45;
test.c:204:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                      ^
p_36 = tmps_33->data;
test.c:201:7: warning: use location
     p = (char*)tmps->data;
       ^
tmps_33->type = type_35;
test.c:200:16: warning: use location
     tmps->type = type;
                ^
if (type_35 == 24)
test.c:203:8: warning: use location
     if (type == V_ASN1_GENERALIZEDTIME)
        ^
if (type_35 == 24)

 ================== find cond branch ================= 
test.c:203:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 11
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 12
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
test.c:197:10: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5b88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version 30>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
test.c:197:8: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
        ^
if (_34 == 0)

 ================== find cond branch ================= 
test.c:197:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 10
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 14
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (tmps_33 == 0B)
test.c:194:8: warning: use location
     if (tmps == NULL)
        ^
if (tmps_33 == 0B)

 ================== find cond branch ================= 
test.c:194:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 9
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 16
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_30 = ASN1_STRING_new ();
test.c:191:16: warning: use location
         tmps = ASN1_STRING_new(); /* allocation site */
                ^
this stmt is child function---ASN1_STRING_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5b88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version 30>
trace fucntion name:ASN1_STRING_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618d5b88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version 30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618d5c60
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
    version 33
    ptr-info 0x7fee618c2a20>
tmps_33 = PHI <s_16(D)(7), tmps_32(8)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_68 = _56;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_18 = _68;
test.c:235:12: warning: use location
     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch --------
tmps_55 = PHI <tmps_33(10)>
lto1: warning: use location
this stmt have mutiple branch --------
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
         ASN1_STRING_free(tmps);
         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5c60
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
    version 33
    ptr-info 0x7fee618c2a20>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
test.c:209:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                      ^
tmps_33->length = _54;
test.c:209:22: warning: use location
tmps_33->length = _45;
test.c:204:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                      ^
p_36 = tmps_33->data;
test.c:201:7: warning: use location
     p = (char*)tmps->data;
       ^
tmps_33->type = type_35;
test.c:200:16: warning: use location
     tmps->type = type;
                ^
if (type_35 == 24)
test.c:203:8: warning: use location
     if (type == V_ASN1_GENERALIZEDTIME)
        ^
if (type_35 == 24)

 ================== find cond branch ================= 
test.c:203:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 11
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 12
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
test.c:197:10: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5c60
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
    version 33
    ptr-info 0x7fee618c2a20>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
test.c:197:8: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
        ^
if (_34 == 0)

 ================== find cond branch ================= 
test.c:197:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 10
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 14
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (tmps_33 == 0B)
test.c:194:8: warning: use location
     if (tmps == NULL)
        ^
if (tmps_33 == 0B)

 ================== find cond branch ================= 
test.c:194:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 9
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 16
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618d5c60
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
    version 33
    ptr-info 0x7fee618c2a20>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
# VUSE <.MEM_62>
p_36 = tmps_33->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
test.c:209:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_68 = _56;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_18 = _68;
test.c:235:12: warning: use location
     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch --------
tmps_55 = PHI <tmps_33(10)>
lto1: warning: use location
this stmt have mutiple branch --------
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
         ASN1_STRING_free(tmps);
         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
test.c:204:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                      ^
tmps_33->length = _45;
test.c:204:22: warning: use location
p_36 = tmps_33->data;
test.c:201:7: warning: use location
     p = (char*)tmps->data;
       ^
tmps_33->type = type_35;
test.c:200:16: warning: use location
     tmps->type = type;
                ^
if (type_35 == 24)
test.c:203:8: warning: use location
     if (type == V_ASN1_GENERALIZEDTIME)
        ^
if (type_35 == 24)

 ================== find cond branch ================= 
test.c:203:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 11
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 12
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
test.c:197:10: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
test.c:197:8: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
        ^
if (_34 == 0)

 ================== find cond branch ================= 
test.c:197:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 10
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 14
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (tmps_33 == 0B)
test.c:194:8: warning: use location
     if (tmps == NULL)
        ^
if (tmps_33 == 0B)

 ================== find cond branch ================= 
test.c:194:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 9
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 16
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
# VUSE <.MEM_62>
p_36 = tmps_33->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
test.c:209:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_68 = _56;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_18 = _68;
test.c:235:12: warning: use location
     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================
_7 = PHI <0B(2), 0B(4), _18(16)>
lto1: warning: use location
this stmt have mutiple branch --------
tmps_55 = PHI <tmps_33(10)>
lto1: warning: use location
this stmt have mutiple branch --------
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
         ASN1_STRING_free(tmps);
         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
test.c:204:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                      ^
tmps_33->length = _45;
test.c:204:22: warning: use location
p_36 = tmps_33->data;
test.c:201:7: warning: use location
     p = (char*)tmps->data;
       ^
tmps_33->type = type_35;
test.c:200:16: warning: use location
     tmps->type = type;
                ^
if (type_35 == 24)
test.c:203:8: warning: use location
     if (type == V_ASN1_GENERALIZEDTIME)
        ^
if (type_35 == 24)

 ================== find cond branch ================= 
test.c:203:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 11
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 12
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
test.c:197:10: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
test.c:197:8: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
        ^
if (_34 == 0)

 ================== find cond branch ================= 
test.c:197:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 10
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 14
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (tmps_33 == 0B)
test.c:194:8: warning: use location
     if (tmps == NULL)
        ^
if (tmps_33 == 0B)

 ================== find cond branch ================= 
test.c:194:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 9
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 16
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618db288
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_55 = PHI <tmps_33(10)>
    version 55
    ptr-info 0x7fee618c2a50>
tmps_55 = PHI <tmps_33(10)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
if (s_16(D) != tmps_55)
test.c:216:8: warning: use location
     if (tmps != s)
        ^
if (s_16(D) != tmps_55)

 ================== find cond branch ================= 
test.c:216:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 14
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 15
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
# .MEM_67 = VDEF <.MEM_61>
ASN1_STRING_free (tmps_55);
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
         ASN1_STRING_free(tmps);
         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db288
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_55 = PHI <tmps_33(10)>
    version 55
    ptr-info 0x7fee618c2a50>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_67 = VDEF <.MEM_61>
ASN1_STRING_free (tmps_55);
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db288
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_55 = PHI <tmps_33(10)>
    version 55
    ptr-info 0x7fee618c2a50>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618db288
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_55 = PHI <tmps_33(10)>
    version 55
    ptr-info 0x7fee618c2a50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======node_fun:make_dummy_resp========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_dummy_resp  function_call count: 23 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_free========= [0m
[40;33m =======POP node_fun stack:X509_NAME_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_free========= [0m
[40;33m =======POP node_fun stack:OCSP_CERTID_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_free========= [0m
[40;33m =======POP node_fun stack:ASN1_INTEGER_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_free========= [0m
[40;33m =======POP node_fun stack:ASN1_BIT_STRING_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_free========= [0m
[40;33m =======POP node_fun stack:ASN1_TIME_free========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path test_true  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_true========= [0m
[40;42m =======start_check_funciton:test_true========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fee61d91000 type <pointer_type 0x7fee61d900a8> constant 0>
[40;33m =======POP node_fun stack:test_true========= [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;33m =======POP node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;33m =======POP node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;33m =======POP node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;33m =======POP node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path test_ptr  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_ptr========= [0m
[40;42m =======start_check_funciton:test_ptr========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fee61d91000 type <pointer_type 0x7fee61d900a8> constant 0>
[40;33m =======POP node_fun stack:test_ptr========= [0m
[40;42m =======pre add _ fucntion:OCSP_cert_id_new========= [0m
[40;33m =======POP node_fun stack:OCSP_cert_id_new========= [0m
[40;42m =======pre add _ fucntion:EVP_sha256========= [0m
[40;33m =======POP node_fun stack:EVP_sha256========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_1 = strlen (_data_18(D));
In function ‘make_dummy_resp’:
test.c:133:19: warning: use location
             len = strlen(data);
                   ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
len_21 = (int) _1;
In function ‘make_dummy_resp’:
test.c:133:17: warning: use location
             len = strlen(data);
                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_12 = (sizetype) len_14;
In function ‘make_dummy_resp’:
test.c:147:18: warning: use location
         str->data[len] = '\0';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_13 = _11 + _12;
In function ‘make_dummy_resp’:
test.c:147:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
*_13 = 0;
In function ‘make_dummy_resp’:
test.c:147:24: warning: use location
         str->data[len] = '\0';
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_9 = (long unsigned int) len_14;
In function ‘make_dummy_resp’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘make_dummy_resp’:
test.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
str_22(D)->length = len_14;
In function ‘make_dummy_resp’:
test.c:143:17: warning: use location
     str->length = len;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_11 = str_22(D)->data;
In function ‘make_dummy_resp’:
test.c:147:12: warning: use location
         str->data[len] = '\0';
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_10 = str_22(D)->data;
In function ‘make_dummy_resp’:
test.c:145:19: warning: use location
         memcpy(str->data, data, len);
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
str_22(D)->data = c_23;
In function ‘make_dummy_resp’:
test.c:139:23: warning: use location
             str->data = c;
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
str_22(D)->data = c_23;
In function ‘make_dummy_resp’:
test.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
test.c:137:21: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                     ^
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
test.c:137:21: warning: use location
_7 = (unsigned char *) _6;
test.c:137:21: warning: use location
str_22(D)->data = _7;
test.c:137:19: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                   ^
c_23 = str_22(D)->data;
test.c:136:11: warning: use location
         c = str->data;
           ^
_8 = str_22(D)->data;
test.c:138:16: warning: use location
         if (str->data == NULL) {
                ^
if (_8 == 0B)
test.c:138:12: warning: use location
         if (str->data == NULL) {
            ^
if (_8 == 0B)

 ================== find cond branch ================= 
test.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
test.c:135:37: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
                                     ^
_2 = str_22(D)->length;
test.c:135:13: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
if (_data_18(D) != 0B)
In function ‘make_dummy_resp’:
test.c:144:8: warning: use location
     if (data != NULL) {
        ^
if (_data_18(D) != 0B)

 ================== find cond branch ================= 
test.c:144:8: warning: use location
Cond in fucntion ASN1_STRING_set basic block 9
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 10
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
str_22(D)->data = c_23;
In function ‘make_dummy_resp’:
test.c:139:23: warning: use location
             str->data = c;
                       ^
c_23 = str_22(D)->data;
test.c:136:11: warning: use location
         c = str->data;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_11 = str_22(D)->data;
In function ‘make_dummy_resp’:
test.c:147:12: warning: use location
         str->data[len] = '\0';
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_13 = _11 + _12;
In function ‘make_dummy_resp’:
test.c:147:18: warning: use location
         str->data[len] = '\0';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
*_13 = 0;
In function ‘make_dummy_resp’:
test.c:147:24: warning: use location
         str->data[len] = '\0';
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_10 = str_22(D)->data;
In function ‘make_dummy_resp’:
test.c:145:19: warning: use location
         memcpy(str->data, data, len);
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘make_dummy_resp’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
str_22(D)->length = len_14;
In function ‘make_dummy_resp’:
test.c:143:17: warning: use location
     str->length = len;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_12 = (sizetype) len_14;
In function ‘make_dummy_resp’:
test.c:147:18: warning: use location
         str->data[len] = '\0';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_9 = (long unsigned int) len_14;
In function ‘make_dummy_resp’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^
_4 = len_14 + 1;
test.c:137:21: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                     ^
_5 = OPENSSL_realloc (c_23, _4);
test.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
test.c:137:21: warning: use location
_7 = (unsigned char *) _6;
test.c:137:21: warning: use location
str_22(D)->data = _7;
test.c:137:19: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                   ^
_8 = str_22(D)->data;
test.c:138:16: warning: use location
         if (str->data == NULL) {
                ^
if (_8 == 0B)
test.c:138:12: warning: use location
         if (str->data == NULL) {
            ^
if (_8 == 0B)

 ================== find cond branch ================= 
test.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
test.c:135:37: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
                                     ^
_2 = str_22(D)->length;
test.c:135:13: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
In function ‘make_dummy_resp’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
In function ‘make_dummy_resp’:
test.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;33m =======POP node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;33m =======POP node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;33m =======POP node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_new========= [0m
[40;33m =======POP node_fun stack:ASN1_INTEGER_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_new========= [0m
[40;33m =======POP node_fun stack:ASN1_BIT_STRING_new========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_new========= [0m
[40;33m =======POP node_fun stack:X509_NAME_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_TIME_adj  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;33m =======POP node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_1 = strlen (_data_18(D));
In function ‘make_dummy_resp’:
test.c:133:19: warning: use location
             len = strlen(data);
                   ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
len_21 = (int) _1;
In function ‘make_dummy_resp’:
test.c:133:17: warning: use location
             len = strlen(data);
                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_12 = (sizetype) len_14;
In function ‘make_dummy_resp’:
test.c:147:18: warning: use location
         str->data[len] = '\0';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_13 = _11 + _12;
In function ‘make_dummy_resp’:
test.c:147:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
*_13 = 0;
In function ‘make_dummy_resp’:
test.c:147:24: warning: use location
         str->data[len] = '\0';
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_9 = (long unsigned int) len_14;
In function ‘make_dummy_resp’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘make_dummy_resp’:
test.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
str_22(D)->length = len_14;
In function ‘make_dummy_resp’:
test.c:143:17: warning: use location
     str->length = len;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_11 = str_22(D)->data;
In function ‘make_dummy_resp’:
test.c:147:12: warning: use location
         str->data[len] = '\0';
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_10 = str_22(D)->data;
In function ‘make_dummy_resp’:
test.c:145:19: warning: use location
         memcpy(str->data, data, len);
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
str_22(D)->data = c_23;
In function ‘make_dummy_resp’:
test.c:139:23: warning: use location
             str->data = c;
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
str_22(D)->data = c_23;
In function ‘make_dummy_resp’:
test.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
test.c:137:21: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                     ^
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
test.c:137:21: warning: use location
_7 = (unsigned char *) _6;
test.c:137:21: warning: use location
str_22(D)->data = _7;
test.c:137:19: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                   ^
c_23 = str_22(D)->data;
test.c:136:11: warning: use location
         c = str->data;
           ^
_8 = str_22(D)->data;
test.c:138:16: warning: use location
         if (str->data == NULL) {
                ^
if (_8 == 0B)
test.c:138:12: warning: use location
         if (str->data == NULL) {
            ^
if (_8 == 0B)

 ================== find cond branch ================= 
test.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
test.c:135:37: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
                                     ^
_2 = str_22(D)->length;
test.c:135:13: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
if (_data_18(D) != 0B)
In function ‘make_dummy_resp’:
test.c:144:8: warning: use location
     if (data != NULL) {
        ^
if (_data_18(D) != 0B)

 ================== find cond branch ================= 
test.c:144:8: warning: use location
Cond in fucntion ASN1_STRING_set basic block 9
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 10
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
str_22(D)->data = c_23;
In function ‘make_dummy_resp’:
test.c:139:23: warning: use location
             str->data = c;
                       ^
c_23 = str_22(D)->data;
test.c:136:11: warning: use location
         c = str->data;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_11 = str_22(D)->data;
In function ‘make_dummy_resp’:
test.c:147:12: warning: use location
         str->data[len] = '\0';
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_13 = _11 + _12;
In function ‘make_dummy_resp’:
test.c:147:18: warning: use location
         str->data[len] = '\0';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
*_13 = 0;
In function ‘make_dummy_resp’:
test.c:147:24: warning: use location
         str->data[len] = '\0';
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_10 = str_22(D)->data;
In function ‘make_dummy_resp’:
test.c:145:19: warning: use location
         memcpy(str->data, data, len);
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘make_dummy_resp’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
str_22(D)->length = len_14;
In function ‘make_dummy_resp’:
test.c:143:17: warning: use location
     str->length = len;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_12 = (sizetype) len_14;
In function ‘make_dummy_resp’:
test.c:147:18: warning: use location
         str->data[len] = '\0';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_9 = (long unsigned int) len_14;
In function ‘make_dummy_resp’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^
_4 = len_14 + 1;
test.c:137:21: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                     ^
_5 = OPENSSL_realloc (c_23, _4);
test.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
test.c:137:21: warning: use location
_7 = (unsigned char *) _6;
test.c:137:21: warning: use location
str_22(D)->data = _7;
test.c:137:19: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                   ^
_8 = str_22(D)->data;
test.c:138:16: warning: use location
         if (str->data == NULL) {
                ^
if (_8 == 0B)
test.c:138:12: warning: use location
         if (str->data == NULL) {
            ^
if (_8 == 0B)

 ================== find cond branch ================= 
test.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
test.c:135:37: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
                                     ^
_2 = str_22(D)->length;
test.c:135:13: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
In function ‘make_dummy_resp’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
In function ‘make_dummy_resp’:
test.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;33m =======POP node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre_check_funciton:ASN1_TIME_adj========= [0m
[40;42m =======start_check_funciton:ASN1_TIME_adj========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fee61893d40
    type <pointer_type 0x7fee618b3f18
        type <integer_type 0x7fee618ac3f0 time_t DI
            size <integer_cst 0x7fee61d75be8 constant 64>
            unit size <integer_cst 0x7fee61d75c00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7fee61d89738 precision 64 min <integer_cst 0x7fee61d75e70 -9223372036854775808> max <integer_cst 0x7fee61d75e88 9223372036854775807> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618b3f18>>
        unsigned DI size <integer_cst 0x7fee61d75be8 64> unit size <integer_cst 0x7fee61d75c00 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <parm_decl 0x7fee618b4780 t type <integer_type 0x7fee618ac3f0 time_t>
        addressable DI file test.c line 221 col 47 size <integer_cst 0x7fee61d75be8 64> unit size <integer_cst 0x7fee61d75c00 8>
        align 64 context <function_decl 0x7fee618ad100 ASN1_TIME_adj> arg-type <integer_type 0x7fee618ac3f0 time_t>
        chain <parm_decl 0x7fee618b4800 offset_day type <integer_type 0x7fee61d895e8 int>
            SI file test.c line 222 col 30
            size <integer_cst 0x7fee61d75e28 constant 32>
            unit size <integer_cst 0x7fee61d75e40 constant 4>
            align 32 context <function_decl 0x7fee618ad100 ASN1_TIME_adj> arg-type <integer_type 0x7fee61d895e8 int> chain <parm_decl 0x7fee618b4880 offset_sec>>>
    test.c:227:10 start: test.c:227:10 finish: test.c:227:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>
ts_12 = (struct tm *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_52 = ts_12->tm_year;
test.c:210:39: warning: use location
                                     ts->tm_year % 100, ts->tm_mon + 1,
                                       ^
_53 = _52 % 100;
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
test.c:209:24: warning: use location
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
test.c:209:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
In function ‘make_dummy_resp’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_68 = _56;
In function ‘make_dummy_resp’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_18 = _68;
In function ‘make_dummy_resp’:
test.c:235:12: warning: use location
     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================
_7 = PHI <0B(2), 0B(4), _18(16)>
In function ‘make_dummy_resp’:
lto1: warning: use location
this stmt have mutiple branch --------
tmps_55 = PHI <tmps_33(10)>
lto1: warning: use location
this stmt have mutiple branch --------
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
         ASN1_STRING_free(tmps);
         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
test.c:204:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                      ^
tmps_33->length = _45;
test.c:204:22: warning: use location
p_36 = tmps_33->data;
test.c:201:7: warning: use location
     p = (char*)tmps->data;
       ^
tmps_33->type = type_35;
test.c:200:16: warning: use location
     tmps->type = type;
                ^
if (type_35 == 24)
test.c:203:8: warning: use location
     if (type == V_ASN1_GENERALIZEDTIME)
        ^
if (type_35 == 24)

 ================== find cond branch ================= 
test.c:203:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 11
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 12
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
test.c:197:10: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
test.c:197:8: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
        ^
if (_34 == 0)

 ================== find cond branch ================= 
test.c:197:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 10
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 14
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (tmps_33 == 0B)
test.c:194:8: warning: use location
     if (tmps == NULL)
        ^
if (tmps_33 == 0B)

 ================== find cond branch ================= 
test.c:194:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 9
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 16
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_26 = ts_12->tm_year;
bb index := 5
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_26 = ts_12->tm_year;
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_26 = ts_12->tm_year;
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_26 = ts_12->tm_year;
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_26 = ts_12->tm_year;
bb index := 5
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================
_26 = ts_12->tm_year;
In function ‘make_dummy_resp’:
test.c:179:13: warning: use location
         if (is_utc(ts->tm_year))
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================
_27 = is_utc (_26);
In function ‘make_dummy_resp’:
test.c:179:13: warning: use location
this stmt is child function---is_utc-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
_43 = ts_12->tm_year;
test.c:205:39: warning: use location
                                     ts->tm_year + 1900, ts->tm_mon + 1,
                                       ^
_44 = _43 + 1900;
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
_50 = ts_12->tm_mon;
test.c:210:58: warning: use location
                                     ts->tm_year % 100, ts->tm_mon + 1,
                                                          ^
_41 = ts_12->tm_mon;
test.c:205:59: warning: use location
                                     ts->tm_year + 1900, ts->tm_mon + 1,
                                                           ^
_42 = _41 + 1;
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
_40 = ts_12->tm_mday;
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
_49 = ts_12->tm_mday;
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^
_39 = ts_12->tm_hour;
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
_48 = ts_12->tm_hour;
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^
_38 = ts_12->tm_min;
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
_47 = ts_12->tm_min;
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^
_37 = ts_12->tm_sec;
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
_46 = ts_12->tm_sec;
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
In function ‘make_dummy_resp’:
test.c:232:14: warning: use location
         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
              ^
this stmt is child function---OPENSSL_gmtime_adj-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_3 = offset_day_13(D) != 0;
In function ‘make_dummy_resp’:
test.c:231:9: warning: use location
     if (offset_day || offset_sec) {
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_5 = _3 | _4;
In function ‘make_dummy_resp’:
test.c:231:20: warning: use location
     if (offset_day || offset_sec) {
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
if (_5 != 0)
In function ‘make_dummy_resp’:
test.c:231:8: warning: use location
     if (offset_day || offset_sec) {
        ^
if (_5 != 0)

 ================== find cond branch ================= 
test.c:231:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 3
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 4
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_4 = offset_sec_14(D) != 0;
In function ‘make_dummy_resp’:
test.c:231:20: warning: use location
     if (offset_day || offset_sec) {
                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618d5a68
    type <integer_type 0x7fee61d89690 unsigned int public unsigned SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d89690 precision 32 min <integer_cst 0x7fee61d75e58 0> max <integer_cst 0x7fee61d75e10 4294967295>
        pointer_to_this <pointer_type 0x7fee61d95888>>
   
    def_stmt _26 = ts_12->tm_year;
    version 26>
# VUSE <.MEM_19>
_26 = ts_12->tm_year;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================
_27 = is_utc (_26);
In function ‘make_dummy_resp’:
test.c:179:13: warning: use location
         if (is_utc(ts->tm_year))
             ^
this stmt is child function---is_utc-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5a68
    type <integer_type 0x7fee61d89690 unsigned int public unsigned SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d89690 precision 32 min <integer_cst 0x7fee61d75e58 0> max <integer_cst 0x7fee61d75e10 4294967295>
        pointer_to_this <pointer_type 0x7fee61d95888>>
   
    def_stmt _26 = ts_12->tm_year;
    version 26>
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_27 != 0)
bb index := 5
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_27 != 0)
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_27 != 0)
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_27 != 0)
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_27 != 0)
bb index := 5
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================
if (_27 != 0)
In function ‘make_dummy_resp’:
test.c:179:12: warning: use location
         if (is_utc(ts->tm_year))
            ^
if (_27 != 0)

 ================== find cond branch ================= 
test.c:179:12: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 5
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 7
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618d5a68
    type <integer_type 0x7fee61d89690 unsigned int public unsigned SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d89690 precision 32 min <integer_cst 0x7fee61d75e58 0> max <integer_cst 0x7fee61d75e10 4294967295>
        pointer_to_this <pointer_type 0x7fee61d95888>>
   
    def_stmt _26 = ts_12->tm_year;
    version 26>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618d5b88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version 30>
# .MEM_60 = VDEF <.MEM_59>
_30 = ASN1_STRING_new ();

 ================== trace ptable================== 
trace fucntion name:ASN1_STRING_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_STRING_new-----
this other function ------ASN1_STRING_new-----
 
 Start check Pointer Collect  

======================================================================
_31 = (long int) _30;
test.c:191:16: warning: use location
         tmps = ASN1_STRING_new(); /* allocation site */
                ^
tmps_32 = (struct ASN1_TIME *) _31;
test.c:191:14: warning: use location
         tmps = ASN1_STRING_new(); /* allocation site */
              ^
tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
In function ‘make_dummy_resp’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_68 = _56;
In function ‘make_dummy_resp’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_18 = _68;
In function ‘make_dummy_resp’:
test.c:235:12: warning: use location
     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================
_7 = PHI <0B(2), 0B(4), _18(16)>
In function ‘make_dummy_resp’:
lto1: warning: use location
this stmt have mutiple branch --------
tmps_55 = PHI <tmps_33(10)>
lto1: warning: use location
this stmt have mutiple branch --------
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
         ASN1_STRING_free(tmps);
         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5b88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version 30>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
test.c:209:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                      ^
tmps_33->length = _45;
test.c:204:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                      ^
p_36 = tmps_33->data;
test.c:201:7: warning: use location
     p = (char*)tmps->data;
       ^
tmps_33->type = type_35;
test.c:200:16: warning: use location
     tmps->type = type;
                ^
if (type_35 == 24)
test.c:203:8: warning: use location
     if (type == V_ASN1_GENERALIZEDTIME)
        ^
if (type_35 == 24)

 ================== find cond branch ================= 
test.c:203:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 11
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 12
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
test.c:197:10: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5b88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version 30>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
test.c:197:8: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
        ^
if (_34 == 0)

 ================== find cond branch ================= 
test.c:197:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 10
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 14
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (tmps_33 == 0B)
test.c:194:8: warning: use location
     if (tmps == NULL)
        ^
if (tmps_33 == 0B)

 ================== find cond branch ================= 
test.c:194:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 9
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 16
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_30 = ASN1_STRING_new ();
test.c:191:16: warning: use location
         tmps = ASN1_STRING_new(); /* allocation site */
                ^
this stmt is child function---ASN1_STRING_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5b88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version 30>
trace fucntion name:ASN1_STRING_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618d5b88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version 30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618d5c60
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
    version 33
    ptr-info 0x7fee618c2a20>
tmps_33 = PHI <s_16(D)(7), tmps_32(8)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
In function ‘make_dummy_resp’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_68 = _56;
In function ‘make_dummy_resp’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_18 = _68;
In function ‘make_dummy_resp’:
test.c:235:12: warning: use location
     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================
_7 = PHI <0B(2), 0B(4), _18(16)>
In function ‘make_dummy_resp’:
lto1: warning: use location
this stmt have mutiple branch --------
tmps_55 = PHI <tmps_33(10)>
lto1: warning: use location
this stmt have mutiple branch --------
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
         ASN1_STRING_free(tmps);
         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5c60
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
    version 33
    ptr-info 0x7fee618c2a20>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
test.c:209:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                      ^
tmps_33->length = _54;
test.c:209:22: warning: use location
tmps_33->length = _45;
test.c:204:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                      ^
p_36 = tmps_33->data;
test.c:201:7: warning: use location
     p = (char*)tmps->data;
       ^
tmps_33->type = type_35;
test.c:200:16: warning: use location
     tmps->type = type;
                ^
if (type_35 == 24)
test.c:203:8: warning: use location
     if (type == V_ASN1_GENERALIZEDTIME)
        ^
if (type_35 == 24)

 ================== find cond branch ================= 
test.c:203:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 11
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 12
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
test.c:197:10: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5c60
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
    version 33
    ptr-info 0x7fee618c2a20>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
test.c:197:8: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
        ^
if (_34 == 0)

 ================== find cond branch ================= 
test.c:197:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 10
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 14
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (tmps_33 == 0B)
test.c:194:8: warning: use location
     if (tmps == NULL)
        ^
if (tmps_33 == 0B)

 ================== find cond branch ================= 
test.c:194:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 9
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 16
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618d5c60
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
    version 33
    ptr-info 0x7fee618c2a20>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
# VUSE <.MEM_62>
p_36 = tmps_33->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
test.c:209:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
In function ‘make_dummy_resp’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_68 = _56;
In function ‘make_dummy_resp’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_18 = _68;
In function ‘make_dummy_resp’:
test.c:235:12: warning: use location
     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================
_7 = PHI <0B(2), 0B(4), _18(16)>
In function ‘make_dummy_resp’:
lto1: warning: use location
this stmt have mutiple branch --------
tmps_55 = PHI <tmps_33(10)>
lto1: warning: use location
this stmt have mutiple branch --------
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
         ASN1_STRING_free(tmps);
         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
test.c:204:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                      ^
tmps_33->length = _45;
test.c:204:22: warning: use location
p_36 = tmps_33->data;
test.c:201:7: warning: use location
     p = (char*)tmps->data;
       ^
tmps_33->type = type_35;
test.c:200:16: warning: use location
     tmps->type = type;
                ^
if (type_35 == 24)
test.c:203:8: warning: use location
     if (type == V_ASN1_GENERALIZEDTIME)
        ^
if (type_35 == 24)

 ================== find cond branch ================= 
test.c:203:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 11
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 12
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
test.c:197:10: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
test.c:197:8: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
        ^
if (_34 == 0)

 ================== find cond branch ================= 
test.c:197:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 10
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 14
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (tmps_33 == 0B)
test.c:194:8: warning: use location
     if (tmps == NULL)
        ^
if (tmps_33 == 0B)

 ================== find cond branch ================= 
test.c:194:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 9
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 16
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
# VUSE <.MEM_62>
p_36 = tmps_33->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
test.c:209:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
In function ‘make_dummy_resp’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_68 = _56;
In function ‘make_dummy_resp’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_18 = _68;
In function ‘make_dummy_resp’:
test.c:235:12: warning: use location
     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================
_7 = PHI <0B(2), 0B(4), _18(16)>
In function ‘make_dummy_resp’:
lto1: warning: use location
this stmt have mutiple branch --------
tmps_55 = PHI <tmps_33(10)>
lto1: warning: use location
this stmt have mutiple branch --------
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
         ASN1_STRING_free(tmps);
         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
test.c:204:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                      ^
tmps_33->length = _45;
test.c:204:22: warning: use location
p_36 = tmps_33->data;
test.c:201:7: warning: use location
     p = (char*)tmps->data;
       ^
tmps_33->type = type_35;
test.c:200:16: warning: use location
     tmps->type = type;
                ^
if (type_35 == 24)
test.c:203:8: warning: use location
     if (type == V_ASN1_GENERALIZEDTIME)
        ^
if (type_35 == 24)

 ================== find cond branch ================= 
test.c:203:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 11
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 12
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
test.c:197:10: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
test.c:197:8: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
        ^
if (_34 == 0)

 ================== find cond branch ================= 
test.c:197:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 10
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 14
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (tmps_33 == 0B)
test.c:194:8: warning: use location
     if (tmps == NULL)
        ^
if (tmps_33 == 0B)

 ================== find cond branch ================= 
test.c:194:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 9
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 16
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618db288
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_55 = PHI <tmps_33(10)>
    version 55
    ptr-info 0x7fee618c2a50>
tmps_55 = PHI <tmps_33(10)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
if (s_16(D) != tmps_55)
test.c:216:8: warning: use location
     if (tmps != s)
        ^
if (s_16(D) != tmps_55)

 ================== find cond branch ================= 
test.c:216:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 14
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 15
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
# .MEM_67 = VDEF <.MEM_61>
ASN1_STRING_free (tmps_55);
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
         ASN1_STRING_free(tmps);
         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db288
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_55 = PHI <tmps_33(10)>
    version 55
    ptr-info 0x7fee618c2a50>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_67 = VDEF <.MEM_61>
ASN1_STRING_free (tmps_55);
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db288
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_55 = PHI <tmps_33(10)>
    version 55
    ptr-info 0x7fee618c2a50>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618db288
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_55 = PHI <tmps_33(10)>
    version 55
    ptr-info 0x7fee618c2a50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_TIME_adj========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_new========= [0m
[40;33m =======POP node_fun stack:OCSP_BASICRESP_new========= [0m
[40;42m =======pre_check_funciton:make_dummy_resp========= [0m
[40;42m =======start_check_funciton:make_dummy_resp========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fee618db750
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _1 = OCSP_BASICRESP_new ();
    version 1>
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();

 ================== trace ptable================== 
trace fucntion name:OCSP_BASICRESP_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---OCSP_BASICRESP_new-----
this other function ------OCSP_BASICRESP_new-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_1 = OCSP_BASICRESP_new ();
test.c:288:26: warning: use location
     OCSP_BASICRESP *bs = OCSP_BASICRESP_new();     /* allocation site */
                          ^
this stmt is child function---OCSP_BASICRESP_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618db750
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _1 = OCSP_BASICRESP_new ();
    version 1>
trace fucntion name:OCSP_BASICRESP_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618db750
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _1 = OCSP_BASICRESP_new ();
    version 1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fee618c2258 type <pointer_type 0x7fee618ac0a8> constant 0>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fee618c2258 type <pointer_type 0x7fee618ac0a8> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();

 ================== trace ptable================== 
trace fucntion name:X509_NAME_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---X509_NAME_new-----
this other function ------X509_NAME_new-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_9 = (long int) _8;
test.c:292:23: warning: use location
     X509_NAME *name = X509_NAME_new();                          /* allocation site */
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
name_42 = (void *) _9;
test.c:292:16: warning: use location
     X509_NAME *name = X509_NAME_new();                          /* allocation site */
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
test.c:252:9: warning: use location
     ret = X509_NAME_add_entry(name, ne, loc, set);
         ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_87 = PHI <0(2), ret_86(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_113 = _87;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_14 = _113;
test.c:296:10: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
if (_14 == 0)
test.c:296:8: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
        ^
if (_14 == 0)

 ================== find cond branch ================= 
test.c:296:8: warning: use location
Cond in fucntion make_dummy_resp basic block 4
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
X509_NAME_ENTRY_free (ne_85);
test.c:253:5: warning: use location
     X509_NAME_ENTRY_free(ne);
     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
X509_NAME_free (name_42);
test.c:315:5: warning: use location
     X509_NAME_free(name);
     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_18 = (long int) _17;
test.c:301:11: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
cid_51 = (struct OCSP_CERTID *) _18;
test.c:301:9: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
         ^
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
test.c:169:12: warning: use location
     return ASN1_STRING_set(x, d, len);
            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_115 = _90;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_15 = _115;
test.c:298:13: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_BIT_STRING_free (key_44);
test.c:312:5: warning: use location
     ASN1_BIT_STRING_free(key);
     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_INTEGER_free (serial_46);
test.c:313:5: warning: use location
     ASN1_INTEGER_free(serial);
     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_8 = X509_NAME_new ();
test.c:292:23: warning: use location
     X509_NAME *name = X509_NAME_new();                          /* allocation site */
                       ^
this stmt is child function---X509_NAME_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:X509_NAME_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();

 ================== trace ptable================== 
trace fucntion name:ASN1_BIT_STRING_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_BIT_STRING_new-----
this other function ------ASN1_BIT_STRING_new-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_11 = (long int) _10;
test.c:293:28: warning: use location
     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
key_44 = (struct ASN1_BIT_STRING *) _11;
test.c:293:22: warning: use location
     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
test.c:169:12: warning: use location
     return ASN1_STRING_set(x, d, len);
            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_115 = _90;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_15 = _115;
test.c:298:13: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
if (_15 == 0)
test.c:298:9: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
         ^
if (_15 == 0)

 ================== find cond branch ================= 
test.c:298:9: warning: use location
Cond in fucntion make_dummy_resp basic block 5
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_BIT_STRING_free (key_44);
test.c:312:5: warning: use location
     ASN1_BIT_STRING_free(key);
     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_18 = (long int) _17;
test.c:301:11: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
cid_51 = (struct OCSP_CERTID *) _18;
test.c:301:9: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
         ^
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
test.c:252:9: warning: use location
     ret = X509_NAME_add_entry(name, ne, loc, set);
         ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_87 = PHI <0(2), ret_86(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_113 = _87;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_14 = _113;
test.c:296:10: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
X509_NAME_ENTRY_free (ne_85);
test.c:253:5: warning: use location
     X509_NAME_ENTRY_free(ne);
     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
X509_NAME_free (name_42);
test.c:315:5: warning: use location
     X509_NAME_free(name);
     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_INTEGER_free (serial_46);
test.c:313:5: warning: use location
     ASN1_INTEGER_free(serial);
     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_10 = ASN1_BIT_STRING_new ();
test.c:293:28: warning: use location
     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
                            ^
this stmt is child function---ASN1_BIT_STRING_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:ASN1_BIT_STRING_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();

 ================== trace ptable================== 
trace fucntion name:ASN1_INTEGER_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_INTEGER_new-----
this other function ------ASN1_INTEGER_new-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_13 = (long int) _12;
test.c:294:28: warning: use location
     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
serial_46 = (struct ASN1_INTEGER *) _13;
test.c:294:19: warning: use location
     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_INTEGER_free (serial_46);
test.c:313:5: warning: use location
     ASN1_INTEGER_free(serial);
     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_18 = (long int) _17;
test.c:301:11: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
cid_51 = (struct OCSP_CERTID *) _18;
test.c:301:9: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
         ^
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
if (_22 == 0)
test.c:305:9: warning: use location
         || !TEST_ptr(cid)
         ^
if (_22 == 0)

 ================== find cond branch ================= 
test.c:305:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
test.c:252:9: warning: use location
     ret = X509_NAME_add_entry(name, ne, loc, set);
         ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_87 = PHI <0(2), ret_86(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_113 = _87;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_14 = _113;
test.c:296:10: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
X509_NAME_ENTRY_free (ne_85);
test.c:253:5: warning: use location
     X509_NAME_ENTRY_free(ne);
     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
X509_NAME_free (name_42);
test.c:315:5: warning: use location
     X509_NAME_free(name);
     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
test.c:169:12: warning: use location
     return ASN1_STRING_set(x, d, len);
            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_115 = _90;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_15 = _115;
test.c:298:13: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_BIT_STRING_free (key_44);
test.c:312:5: warning: use location
     ASN1_BIT_STRING_free(key);
     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_12 = ASN1_INTEGER_new ();
test.c:294:28: warning: use location
     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
                            ^
this stmt is child function---ASN1_INTEGER_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:ASN1_INTEGER_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
name_42 = (void *) _9;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
test.c:252:9: warning: use location
     ret = X509_NAME_add_entry(name, ne, loc, set);
         ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_87 = PHI <0(2), ret_86(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_113 = _87;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_14 = _113;
test.c:296:10: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
if (_14 == 0)
test.c:296:8: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
        ^
if (_14 == 0)

 ================== find cond branch ================= 
test.c:296:8: warning: use location
Cond in fucntion make_dummy_resp basic block 4
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
X509_NAME_ENTRY_free (ne_85);
test.c:253:5: warning: use location
     X509_NAME_ENTRY_free(ne);
     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
X509_NAME_free (name_42);
test.c:315:5: warning: use location
     X509_NAME_free(name);
     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_18 = (long int) _17;
test.c:301:11: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
cid_51 = (struct OCSP_CERTID *) _18;
test.c:301:9: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
         ^
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
test.c:169:12: warning: use location
     return ASN1_STRING_set(x, d, len);
            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_115 = _90;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_15 = _115;
test.c:298:13: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_BIT_STRING_free (key_44);
test.c:312:5: warning: use location
     ASN1_BIT_STRING_free(key);
     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_INTEGER_free (serial_46);
test.c:313:5: warning: use location
     ASN1_INTEGER_free(serial);
     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
ne_85 = (void *) _84;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
X509_NAME_ENTRY_free (ne_85);
test.c:253:5: warning: use location
     X509_NAME_ENTRY_free(ne);
     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
test.c:252:9: warning: use location
     ret = X509_NAME_add_entry(name, ne, loc, set);
         ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_87 = PHI <0(2), ret_86(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_113 = _87;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_14 = _113;
test.c:296:10: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
if (_14 == 0)
test.c:296:8: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
        ^
if (_14 == 0)

 ================== find cond branch ================= 
test.c:296:8: warning: use location
Cond in fucntion make_dummy_resp basic block 4
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
X509_NAME_free (name_42);
test.c:315:5: warning: use location
     X509_NAME_free(name);
     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_18 = (long int) _17;
test.c:301:11: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
cid_51 = (struct OCSP_CERTID *) _18;
test.c:301:9: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
         ^
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
test.c:169:12: warning: use location
     return ASN1_STRING_set(x, d, len);
            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_115 = _90;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_15 = _115;
test.c:298:13: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_BIT_STRING_free (key_44);
test.c:312:5: warning: use location
     ASN1_BIT_STRING_free(key);
     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_INTEGER_free (serial_46);
test.c:313:5: warning: use location
     ASN1_INTEGER_free(serial);
     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
key_44 = (struct ASN1_BIT_STRING *) _11;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
test.c:169:12: warning: use location
     return ASN1_STRING_set(x, d, len);
            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_115 = _90;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_15 = _115;
test.c:298:13: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
if (_15 == 0)
test.c:298:9: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
         ^
if (_15 == 0)

 ================== find cond branch ================= 
test.c:298:9: warning: use location
Cond in fucntion make_dummy_resp basic block 5
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_BIT_STRING_free (key_44);
test.c:312:5: warning: use location
     ASN1_BIT_STRING_free(key);
     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_18 = (long int) _17;
test.c:301:11: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
cid_51 = (struct OCSP_CERTID *) _18;
test.c:301:9: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
         ^
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
test.c:252:9: warning: use location
     ret = X509_NAME_add_entry(name, ne, loc, set);
         ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_87 = PHI <0(2), ret_86(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_113 = _87;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_14 = _113;
test.c:296:10: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
X509_NAME_ENTRY_free (ne_85);
test.c:253:5: warning: use location
     X509_NAME_ENTRY_free(ne);
     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
X509_NAME_free (name_42);
test.c:315:5: warning: use location
     X509_NAME_free(name);
     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_INTEGER_free (serial_46);
test.c:313:5: warning: use location
     ASN1_INTEGER_free(serial);
     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
# .MEM_67 = VDEF <.MEM_114>
_16 = EVP_sha256 ();

 ================== trace ptable================== 
trace fucntion name:EVP_sha256 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---EVP_sha256-----
this other function ------EVP_sha256-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_18 = (long int) _17;
test.c:301:11: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
cid_51 = (struct OCSP_CERTID *) _18;
test.c:301:9: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
         ^
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
if (_22 == 0)
test.c:305:9: warning: use location
         || !TEST_ptr(cid)
         ^
if (_22 == 0)

 ================== find cond branch ================= 
test.c:305:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
test.c:252:9: warning: use location
     ret = X509_NAME_add_entry(name, ne, loc, set);
         ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_87 = PHI <0(2), ret_86(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_113 = _87;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_14 = _113;
test.c:296:10: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
X509_NAME_ENTRY_free (ne_85);
test.c:253:5: warning: use location
     X509_NAME_ENTRY_free(ne);
     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
X509_NAME_free (name_42);
test.c:315:5: warning: use location
     X509_NAME_free(name);
     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
test.c:169:12: warning: use location
     return ASN1_STRING_set(x, d, len);
            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_115 = _90;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_15 = _115;
test.c:298:13: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_BIT_STRING_free (key_44);
test.c:312:5: warning: use location
     ASN1_BIT_STRING_free(key);
     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_INTEGER_free (serial_46);
test.c:313:5: warning: use location
     ASN1_INTEGER_free(serial);
     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_114>
_16 = EVP_sha256 ();
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_114>
_16 = EVP_sha256 ();
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_114>
_16 = EVP_sha256 ();
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_16 = EVP_sha256 ();
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---EVP_sha256-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:EVP_sha256 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
# .MEM_67 = VDEF <.MEM_114>
_16 = EVP_sha256 ();

 ================== trace ptable================== 
trace fucntion name:EVP_sha256 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---EVP_sha256-----
this other function ------EVP_sha256-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
test.c:301:11: warning: use location
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_18 = (long int) _17;
test.c:301:11: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
cid_51 = (struct OCSP_CERTID *) _18;
test.c:301:9: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
         ^
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
if (_22 == 0)
test.c:305:9: warning: use location
         || !TEST_ptr(cid)
         ^
if (_22 == 0)

 ================== find cond branch ================= 
test.c:305:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
test.c:252:9: warning: use location
     ret = X509_NAME_add_entry(name, ne, loc, set);
         ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_87 = PHI <0(2), ret_86(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_113 = _87;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_14 = _113;
test.c:296:10: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
X509_NAME_ENTRY_free (ne_85);
test.c:253:5: warning: use location
     X509_NAME_ENTRY_free(ne);
     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
X509_NAME_free (name_42);
test.c:315:5: warning: use location
     X509_NAME_free(name);
     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
test.c:169:12: warning: use location
     return ASN1_STRING_set(x, d, len);
            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_115 = _90;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_15 = _115;
test.c:298:13: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_BIT_STRING_free (key_44);
test.c:312:5: warning: use location
     ASN1_BIT_STRING_free(key);
     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_INTEGER_free (serial_46);
test.c:313:5: warning: use location
     ASN1_INTEGER_free(serial);
     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_114>
_16 = EVP_sha256 ();
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_114>
_16 = EVP_sha256 ();
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_114>
_16 = EVP_sha256 ();
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_16 = EVP_sha256 ();
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---EVP_sha256-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:EVP_sha256 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fee618d9400
    type <pointer_type 0x7fee618b2348
        type <array_type 0x7fee618b22a0 type <integer_type 0x7fee6189f930 char>
            BLK
            size <integer_cst 0x7fee618a2570 constant 56>
            unit size <integer_cst 0x7fee618a2558 constant 7>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fee618b21f8>
            pointer_to_this <pointer_type 0x7fee618b2348>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fee618d93e0 type <array_type 0x7fee618b22a0>
        readonly constant static "test.c\000">
    test.c:302:10 start: test.c:302:10 finish: test.c:302:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fee618d9480
    type <pointer_type 0x7fee618b2348
        type <array_type 0x7fee618b22a0 type <integer_type 0x7fee6189f930 char>
            BLK
            size <integer_cst 0x7fee618a2570 constant 56>
            unit size <integer_cst 0x7fee618a2558 constant 7>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fee618b21f8>
            pointer_to_this <pointer_type 0x7fee618b2348>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fee618d9460 type <array_type 0x7fee618b22a0>
        readonly constant static "test.c\000">
    test.c:303:13 start: test.c:303:13 finish: test.c:303:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fee618d9520
    type <pointer_type 0x7fee618b2348
        type <array_type 0x7fee618b22a0 type <integer_type 0x7fee6189f930 char>
            BLK
            size <integer_cst 0x7fee618a2570 constant 56>
            unit size <integer_cst 0x7fee618a2558 constant 7>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fee618b21f8>
            pointer_to_this <pointer_type 0x7fee618b2348>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fee618d9500 type <array_type 0x7fee618b22a0>
        readonly constant static "test.c\000">
    test.c:304:13 start: test.c:304:13 finish: test.c:304:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fee618d95c0
    type <pointer_type 0x7fee618b2348
        type <array_type 0x7fee618b22a0 type <integer_type 0x7fee6189f930 char>
            BLK
            size <integer_cst 0x7fee618a2570 constant 56>
            unit size <integer_cst 0x7fee618a2558 constant 7>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fee618b21f8>
            pointer_to_this <pointer_type 0x7fee618b2348>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fee618d95a0 type <array_type 0x7fee618b22a0>
        readonly constant static "test.c\000">
    test.c:305:13 start: test.c:305:13 finish: test.c:305:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618e6a68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _92 = sk_OCSP_SINGLERESP_new_null ();
    version 92>
# .MEM_116 = VDEF <.MEM_72>
_92 = sk_OCSP_SINGLERESP_new_null ();

 ================== trace ptable================== 
trace fucntion name:sk_OCSP_SINGLERESP_new_null 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---sk_OCSP_SINGLERESP_new_null-----
this other function ------sk_OCSP_SINGLERESP_new_null-----
 
 Start check Pointer Collect  

======================================================================
_93 = (long int) _92;
test.c:270:19: warning: use location
                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
                   ^
_94 = (struct OCSP_SINGLERESP *) _93;
test.c:270:19: warning: use location
bs_34->tbsResponseData.responses = _94;
test.c:270:17: warning: use location
                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
                 ^
_92 = sk_OCSP_SINGLERESP_new_null ();
test.c:270:19: warning: use location
                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
                   ^
this stmt is child function---sk_OCSP_SINGLERESP_new_null-----

 ================== trace ================== 
 <ssa_name 0x7fee618e6a68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _92 = sk_OCSP_SINGLERESP_new_null ();
    version 92>
trace fucntion name:sk_OCSP_SINGLERESP_new_null 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618e6a68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _92 = sk_OCSP_SINGLERESP_new_null ();
    version 92>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618df0d8
    type <pointer_type 0x7fee618a9930
        type <record_type 0x7fee618a9888 OCSP_CERTID VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9930> chain <type_decl 0x7fee618aad10 D.4058>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfbd0 cid>
    def_stmt cid_51 = (struct OCSP_CERTID *) _18;
    version 51
    ptr-info 0x7fee618c2b58>
cid_51 = (struct OCSP_CERTID *) _18;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618df0d8
    type <pointer_type 0x7fee618a9930
        type <record_type 0x7fee618a9888 OCSP_CERTID VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9930> chain <type_decl 0x7fee618aad10 D.4058>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfbd0 cid>
    def_stmt cid_51 = (struct OCSP_CERTID *) _18;
    version 51
    ptr-info 0x7fee618c2b58>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df0d8
    type <pointer_type 0x7fee618a9930
        type <record_type 0x7fee618a9888 OCSP_CERTID VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9930> chain <type_decl 0x7fee618aad10 D.4058>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfbd0 cid>
    def_stmt cid_51 = (struct OCSP_CERTID *) _18;
    version 51
    ptr-info 0x7fee618c2b58>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618df0d8
    type <pointer_type 0x7fee618a9930
        type <record_type 0x7fee618a9888 OCSP_CERTID VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9930> chain <type_decl 0x7fee618aad10 D.4058>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfbd0 cid>
    def_stmt cid_51 = (struct OCSP_CERTID *) _18;
    version 51
    ptr-info 0x7fee618c2b58>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
if (_22 == 0)
test.c:305:9: warning: use location
         || !TEST_ptr(cid)
         ^
if (_22 == 0)

 ================== find cond branch ================= 
test.c:305:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618df0d8
    type <pointer_type 0x7fee618a9930
        type <record_type 0x7fee618a9888 OCSP_CERTID VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9930> chain <type_decl 0x7fee618aad10 D.4058>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfbd0 cid>
    def_stmt cid_51 = (struct OCSP_CERTID *) _18;
    version 51
    ptr-info 0x7fee618c2b58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618e6ca8
    type <pointer_type 0x7fee618a9b28
        type <record_type 0x7fee618a9a80 OCSP_SINGLERESP BLK
            size <integer_cst 0x7fee61d75f48 constant 256>
            unit size <integer_cst 0x7fee61d91048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a99d8 fields <field_decl 0x7fee618ab098 certId> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9b28> chain <type_decl 0x7fee618ab130 D.4064>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _100 = bs_34->tbsResponseData.responses;
    version 100
    ptr-info 0x7fee618c2c30>
# VUSE <.MEM_119>
_100 = bs_34->tbsResponseData.responses;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_101 = sk_OCSP_SINGLERESP_push (_100, 0B);
test.c:276:15: warning: use location
         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
               ^
this stmt is child function---sk_OCSP_SINGLERESP_push-----

 ================== trace ================== 
 <ssa_name 0x7fee618e6ca8
    type <pointer_type 0x7fee618a9b28
        type <record_type 0x7fee618a9a80 OCSP_SINGLERESP BLK
            size <integer_cst 0x7fee61d75f48 constant 256>
            unit size <integer_cst 0x7fee61d91048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a99d8 fields <field_decl 0x7fee618ab098 certId> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9b28> chain <type_decl 0x7fee618ab130 D.4064>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _100 = bs_34->tbsResponseData.responses;
    version 100
    ptr-info 0x7fee618c2c30>
trace fucntion name:sk_OCSP_SINGLERESP_push 

 ================== trace ================== 
trace fucntion free:0 
if (_101 == 0)
test.c:276:12: warning: use location
         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
            ^
if (_101 == 0)

 ================== find cond branch ================= 
test.c:276:12: warning: use location
Cond in fucntion make_dummy_resp basic block 13
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618e6ca8
    type <pointer_type 0x7fee618a9b28
        type <record_type 0x7fee618a9a80 OCSP_SINGLERESP BLK
            size <integer_cst 0x7fee61d75f48 constant 256>
            unit size <integer_cst 0x7fee61d91048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a99d8 fields <field_decl 0x7fee618ab098 certId> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9b28> chain <type_decl 0x7fee618ab130 D.4064>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _100 = bs_34->tbsResponseData.responses;
    version 100
    ptr-info 0x7fee618c2c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fee618c2468 type <pointer_type 0x7fee618a9b28> constant 0>

dot graph START

======================================================================
 <addr_expr 0x7fee618d96a0
    type <pointer_type 0x7fee618b2348
        type <array_type 0x7fee618b22a0 type <integer_type 0x7fee6189f930 char>
            BLK
            size <integer_cst 0x7fee618a2570 constant 56>
            unit size <integer_cst 0x7fee618a2558 constant 7>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fee618b21f8>
            pointer_to_this <pointer_type 0x7fee618b2348>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fee618d9680 type <array_type 0x7fee618b22a0>
        readonly constant static "test.c\000">
    test.c:306:13 start: test.c:306:13 finish: test.c:306:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618dbf30
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfb40 thisupd>
    def_stmt thisupd_37 = _107;
    version 37
    ptr-info 0x7fee618c2ae0>
thisupd_37 = _107;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_74>
ASN1_TIME_free (thisupd_37);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_74>
ASN1_TIME_free (thisupd_37);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
# .MEM_75 = VDEF <.MEM_74>
ASN1_TIME_free (thisupd_37);
ASN1_TIME_free (thisupd_37);
test.c:310:5: warning: use location
     ASN1_TIME_free(thisupd);
     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbf30
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfb40 thisupd>
    def_stmt thisupd_37 = _107;
    version 37
    ptr-info 0x7fee618c2ae0>
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
_20 = test_ptr ("test.c", 303, "thisupd", thisupd_37);
bb index := 7
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
_20 = test_ptr ("test.c", 303, "thisupd", thisupd_37);
bb index := 7
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
_20 = test_ptr ("test.c", 303, "thisupd", thisupd_37);
bb index := 7
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================
_20 = test_ptr ("test.c", 303, "thisupd", thisupd_37);
test.c:303:13: warning: use location
         || !TEST_ptr(thisupd)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbf30
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfb40 thisupd>
    def_stmt thisupd_37 = _107;
    version 37
    ptr-info 0x7fee618c2ae0>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================
if (_20 == 0)
test.c:303:9: warning: use location
         || !TEST_ptr(thisupd)
         ^
if (_20 == 0)

 ================== find cond branch ================= 
test.c:303:9: warning: use location
Cond in fucntion make_dummy_resp basic block 7
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618dbf30
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfb40 thisupd>
    def_stmt thisupd_37 = _107;
    version 37
    ptr-info 0x7fee618c2ae0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618dbf78
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfab0 nextupd>
    def_stmt nextupd_40 = _109;
    version 40
    ptr-info 0x7fee618c2af8>
nextupd_40 = _109;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_76 = VDEF <.MEM_75>
ASN1_TIME_free (nextupd_40);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_76 = VDEF <.MEM_75>
ASN1_TIME_free (nextupd_40);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
# .MEM_76 = VDEF <.MEM_75>
ASN1_TIME_free (nextupd_40);
ASN1_TIME_free (nextupd_40);
test.c:311:5: warning: use location
     ASN1_TIME_free(nextupd);
     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbf78
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfab0 nextupd>
    def_stmt nextupd_40 = _109;
    version 40
    ptr-info 0x7fee618c2af8>
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_21 = test_ptr ("test.c", 304, "nextupd", nextupd_40);
bb index := 8
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_21 = test_ptr ("test.c", 304, "nextupd", nextupd_40);
bb index := 8
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_21 = test_ptr ("test.c", 304, "nextupd", nextupd_40);
bb index := 8
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================
_21 = test_ptr ("test.c", 304, "nextupd", nextupd_40);
test.c:304:13: warning: use location
         || !TEST_ptr(nextupd)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbf78
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfab0 nextupd>
    def_stmt nextupd_40 = _109;
    version 40
    ptr-info 0x7fee618c2af8>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 == 0)
bb index := 8
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 == 0)
bb index := 8
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 == 0)
bb index := 8
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================
if (_21 == 0)
test.c:304:9: warning: use location
         || !TEST_ptr(nextupd)
         ^
if (_21 == 0)

 ================== find cond branch ================= 
test.c:304:9: warning: use location
Cond in fucntion make_dummy_resp basic block 8
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618dbf78
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfab0 nextupd>
    def_stmt nextupd_40 = _109;
    version 40
    ptr-info 0x7fee618c2af8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
serial_46 = (struct ASN1_INTEGER *) _13;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
ASN1_INTEGER_free (serial_46);
test.c:313:5: warning: use location
     ASN1_INTEGER_free(serial);
     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_18 = (long int) _17;
test.c:301:11: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
cid_51 = (struct OCSP_CERTID *) _18;
test.c:301:9: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
         ^
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
if (_22 == 0)
test.c:305:9: warning: use location
         || !TEST_ptr(cid)
         ^
if (_22 == 0)

 ================== find cond branch ================= 
test.c:305:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
test.c:252:9: warning: use location
     ret = X509_NAME_add_entry(name, ne, loc, set);
         ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_87 = PHI <0(2), ret_86(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_113 = _87;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_14 = _113;
test.c:296:10: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
X509_NAME_ENTRY_free (ne_85);
test.c:253:5: warning: use location
     X509_NAME_ENTRY_free(ne);
     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
X509_NAME_free (name_42);
test.c:315:5: warning: use location
     X509_NAME_free(name);
     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
test.c:169:12: warning: use location
     return ASN1_STRING_set(x, d, len);
            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_115 = _90;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_15 = _115;
test.c:298:13: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_BIT_STRING_free (key_44);
test.c:312:5: warning: use location
     ASN1_BIT_STRING_free(key);
     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:make_dummy_resp========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 12 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:EVP_PKEY_free========= [0m
[40;33m =======POP node_fun stack:EVP_PKEY_free========= [0m
[40;42m =======pre add _ fucntion:X509_free========= [0m
[40;33m =======POP node_fun stack:X509_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_free========= [0m
[40;33m =======POP node_fun stack:OCSP_BASICRESP_free========= [0m
[40;42m =======pre add _ fucntion:TEST_int_eq========= [0m
[40;33m =======POP node_fun stack:TEST_int_eq========= [0m
[40;42m =======pre add _ fucntion:X509_cmp========= [0m
[40;33m =======POP node_fun stack:X509_cmp========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path test_true  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_true========= [0m
[40;42m =======start_check_funciton:test_true========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fee61d91000 type <pointer_type 0x7fee61d900a8> constant 0>
[40;33m =======POP node_fun stack:test_true========= [0m
[40;42m =======pre add _ fucntion:OCSP_resp_get0_signer========= [0m
[40;33m =======POP node_fun stack:OCSP_resp_get0_signer========= [0m
[40;42m =======pre add _ fucntion:OCSP_basic_sign========= [0m
[40;33m =======POP node_fun stack:OCSP_basic_sign========= [0m
[40;42m =======pre add _ fucntion:EVP_sha1========= [0m
[40;33m =======POP node_fun stack:EVP_sha1========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path test_ptr  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_ptr========= [0m
[40;42m =======start_check_funciton:test_ptr========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fee61d91000 type <pointer_type 0x7fee61d900a8> constant 0>
[40;33m =======POP node_fun stack:test_ptr========= [0m
[40;42m =======pre add _ fucntion:make_dummy_resp========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_dummy_resp  function_call count: 23 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_free========= [0m
[40;33m =======POP node_fun stack:X509_NAME_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_free========= [0m
[40;33m =======POP node_fun stack:OCSP_CERTID_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_free========= [0m
[40;33m =======POP node_fun stack:ASN1_INTEGER_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_free========= [0m
[40;33m =======POP node_fun stack:ASN1_BIT_STRING_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_free========= [0m
[40;33m =======POP node_fun stack:ASN1_TIME_free========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path test_true  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_true========= [0m
[40;42m =======start_check_funciton:test_true========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fee61d91000 type <pointer_type 0x7fee61d900a8> constant 0>
[40;33m =======POP node_fun stack:test_true========= [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;33m =======POP node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;33m =======POP node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;33m =======POP node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;33m =======POP node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path test_ptr  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;33m =======POP node_fun stack:test_fail_message========= [0m
[40;42m =======pre_check_funciton:test_ptr========= [0m
[40;42m =======start_check_funciton:test_ptr========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fee61d91000 type <pointer_type 0x7fee61d900a8> constant 0>
[40;33m =======POP node_fun stack:test_ptr========= [0m
[40;42m =======pre add _ fucntion:OCSP_cert_id_new========= [0m
[40;33m =======POP node_fun stack:OCSP_cert_id_new========= [0m
[40;42m =======pre add _ fucntion:EVP_sha256========= [0m
[40;33m =======POP node_fun stack:EVP_sha256========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_1 = strlen (_data_18(D));
In function ‘main’:
test.c:133:19: warning: use location
             len = strlen(data);
                   ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
len_21 = (int) _1;
In function ‘main’:
test.c:133:17: warning: use location
             len = strlen(data);
                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_12 = (sizetype) len_14;
In function ‘main’:
test.c:147:18: warning: use location
         str->data[len] = '\0';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_13 = _11 + _12;
In function ‘main’:
test.c:147:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
*_13 = 0;
In function ‘main’:
test.c:147:24: warning: use location
         str->data[len] = '\0';
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_9 = (long unsigned int) len_14;
In function ‘main’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘main’:
test.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
str_22(D)->length = len_14;
In function ‘main’:
test.c:143:17: warning: use location
     str->length = len;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_11 = str_22(D)->data;
In function ‘main’:
test.c:147:12: warning: use location
         str->data[len] = '\0';
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_10 = str_22(D)->data;
In function ‘main’:
test.c:145:19: warning: use location
         memcpy(str->data, data, len);
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
str_22(D)->data = c_23;
In function ‘main’:
test.c:139:23: warning: use location
             str->data = c;
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
str_22(D)->data = c_23;
In function ‘main’:
test.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
test.c:137:21: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                     ^
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
test.c:137:21: warning: use location
_7 = (unsigned char *) _6;
test.c:137:21: warning: use location
str_22(D)->data = _7;
test.c:137:19: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                   ^
c_23 = str_22(D)->data;
test.c:136:11: warning: use location
         c = str->data;
           ^
_8 = str_22(D)->data;
test.c:138:16: warning: use location
         if (str->data == NULL) {
                ^
if (_8 == 0B)
test.c:138:12: warning: use location
         if (str->data == NULL) {
            ^
if (_8 == 0B)

 ================== find cond branch ================= 
test.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
test.c:135:37: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
                                     ^
_2 = str_22(D)->length;
test.c:135:13: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
if (_data_18(D) != 0B)
In function ‘main’:
test.c:144:8: warning: use location
     if (data != NULL) {
        ^
if (_data_18(D) != 0B)

 ================== find cond branch ================= 
test.c:144:8: warning: use location
Cond in fucntion ASN1_STRING_set basic block 9
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 10
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
str_22(D)->data = c_23;
In function ‘main’:
test.c:139:23: warning: use location
             str->data = c;
                       ^
c_23 = str_22(D)->data;
test.c:136:11: warning: use location
         c = str->data;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_11 = str_22(D)->data;
In function ‘main’:
test.c:147:12: warning: use location
         str->data[len] = '\0';
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_13 = _11 + _12;
In function ‘main’:
test.c:147:18: warning: use location
         str->data[len] = '\0';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
*_13 = 0;
In function ‘main’:
test.c:147:24: warning: use location
         str->data[len] = '\0';
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_10 = str_22(D)->data;
In function ‘main’:
test.c:145:19: warning: use location
         memcpy(str->data, data, len);
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘main’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
str_22(D)->length = len_14;
In function ‘main’:
test.c:143:17: warning: use location
     str->length = len;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_12 = (sizetype) len_14;
In function ‘main’:
test.c:147:18: warning: use location
         str->data[len] = '\0';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_9 = (long unsigned int) len_14;
In function ‘main’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^
_4 = len_14 + 1;
test.c:137:21: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                     ^
_5 = OPENSSL_realloc (c_23, _4);
test.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
test.c:137:21: warning: use location
_7 = (unsigned char *) _6;
test.c:137:21: warning: use location
str_22(D)->data = _7;
test.c:137:19: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                   ^
_8 = str_22(D)->data;
test.c:138:16: warning: use location
         if (str->data == NULL) {
                ^
if (_8 == 0B)
test.c:138:12: warning: use location
         if (str->data == NULL) {
            ^
if (_8 == 0B)

 ================== find cond branch ================= 
test.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
test.c:135:37: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
                                     ^
_2 = str_22(D)->length;
test.c:135:13: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
In function ‘main’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
In function ‘main’:
test.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;33m =======POP node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;33m =======POP node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;33m =======POP node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_new========= [0m
[40;33m =======POP node_fun stack:ASN1_INTEGER_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_new========= [0m
[40;33m =======POP node_fun stack:ASN1_BIT_STRING_new========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_new========= [0m
[40;33m =======POP node_fun stack:X509_NAME_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_TIME_adj  function_call count: 7 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;33m =======POP node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path ASN1_STRING_set  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;33m =======POP node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:ASN1_STRING_set========= [0m
[40;42m =======start_check_funciton:ASN1_STRING_set========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26(D)>
_1 = strlen (_data_18(D));
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_1 = strlen (_data_18(D));
In function ‘main’:
test.c:133:19: warning: use location
             len = strlen(data);
                   ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_21 = (int) _1;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
len_21 = (int) _1;
In function ‘main’:
test.c:133:17: warning: use location
             len = strlen(data);
                 ^
len_14 = PHI <len_19(D)(2), len_21(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_12 = (sizetype) len_14;
In function ‘main’:
test.c:147:18: warning: use location
         str->data[len] = '\0';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_13 = _11 + _12;
In function ‘main’:
test.c:147:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
*_13 = 0;
In function ‘main’:
test.c:147:24: warning: use location
         str->data[len] = '\0';
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_9 = (long unsigned int) len_14;
In function ‘main’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘main’:
test.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
str_22(D)->length = len_14;
In function ‘main’:
test.c:143:17: warning: use location
     str->length = len;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_11 = str_22(D)->data;
In function ‘main’:
test.c:147:12: warning: use location
         str->data[len] = '\0';
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_10 = str_22(D)->data;
In function ‘main’:
test.c:145:19: warning: use location
         memcpy(str->data, data, len);
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
str_22(D)->data = c_23;
In function ‘main’:
test.c:139:23: warning: use location
             str->data = c;
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
str_22(D)->data = c_23;
In function ‘main’:
test.c:139:23: warning: use location
_5 = OPENSSL_realloc (c_23, _4);
test.c:137:21: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                     ^
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
test.c:137:21: warning: use location
_7 = (unsigned char *) _6;
test.c:137:21: warning: use location
str_22(D)->data = _7;
test.c:137:19: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                   ^
c_23 = str_22(D)->data;
test.c:136:11: warning: use location
         c = str->data;
           ^
_8 = str_22(D)->data;
test.c:138:16: warning: use location
         if (str->data == NULL) {
                ^
if (_8 == 0B)
test.c:138:12: warning: use location
         if (str->data == NULL) {
            ^
if (_8 == 0B)

 ================== find cond branch ================= 
test.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
test.c:135:37: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
                                     ^
_2 = str_22(D)->length;
test.c:135:13: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_data_18(D) != 0B)
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
if (_data_18(D) != 0B)
In function ‘main’:
test.c:144:8: warning: use location
     if (data != NULL) {
        ^
if (_data_18(D) != 0B)

 ================== find cond branch ================= 
test.c:144:8: warning: use location
Cond in fucntion ASN1_STRING_set basic block 9
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 10
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca288
    type <pointer_type 0x7fee61d901f8
        type <void_type 0x7fee61d90150 readonly VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d901f8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fee618b4600 _data>
    def_stmt GIMPLE_NOP
    version 18
    ptr-info 0x7fee618c2960>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>
# VUSE <.MEM_26(D)>
c_23 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_28>
str_22(D)->data = c_23;
bb index := 8
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================
str_22(D)->data = c_23;
In function ‘main’:
test.c:139:23: warning: use location
             str->data = c;
                       ^
c_23 = str_22(D)->data;
test.c:136:11: warning: use location
         c = str->data;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_31>
_11 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_11 = str_22(D)->data;
In function ‘main’:
test.c:147:12: warning: use location
         str->data[len] = '\0';
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = _11 + _12;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_13 = _11 + _12;
In function ‘main’:
test.c:147:18: warning: use location
         str->data[len] = '\0';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_32 = VDEF <.MEM_31>
*_13 = 0;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
*_13 = 0;
In function ‘main’:
test.c:147:24: warning: use location
         str->data[len] = '\0';
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_30>
_10 = str_22(D)->data;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_10 = str_22(D)->data;
In function ‘main’:
test.c:145:19: warning: use location
         memcpy(str->data, data, len);
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
memcpy (_10, _data_18(D), _9);
In function ‘main’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_24>
str_22(D)->length = len_14;
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
str_22(D)->length = len_14;
In function ‘main’:
test.c:143:17: warning: use location
     str->length = len;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_12 = (sizetype) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_12 = (sizetype) len_14;
In function ‘main’:
test.c:147:18: warning: use location
         str->data[len] = '\0';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long unsigned int) len_14;
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_9 = (long unsigned int) len_14;
In function ‘main’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^
_4 = len_14 + 1;
test.c:137:21: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                     ^
_5 = OPENSSL_realloc (c_23, _4);
test.c:137:21: warning: use location
this stmt is child function---OPENSSL_realloc-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>
trace fucntion name:OPENSSL_realloc 

 ================== trace ================== 
trace fucntion free:0 
_6 = (long int) _5;
test.c:137:21: warning: use location
_7 = (unsigned char *) _6;
test.c:137:21: warning: use location
str_22(D)->data = _7;
test.c:137:19: warning: use location
         str->data = OPENSSL_realloc(c, len + 1);
                   ^
_8 = str_22(D)->data;
test.c:138:16: warning: use location
         if (str->data == NULL) {
                ^
if (_8 == 0B)
test.c:138:12: warning: use location
         if (str->data == NULL) {
            ^
if (_8 == 0B)

 ================== find cond branch ================= 
test.c:138:12: warning: use location
Cond in fucntion ASN1_STRING_set basic block 7
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 8
 ================== possible direct basic block ================= 
from ASN1_STRING_set basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_3 = str_22(D)->data;
test.c:135:37: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
                                     ^
_2 = str_22(D)->length;
test.c:135:13: warning: use location
     if ((str->length <= len) || (str->data == NULL)) {
             ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca3a8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bc60 c>
    def_stmt c_23 = str_22(D)->data;
    version 23
    ptr-info 0x7fee618c2990>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>
# VUSE <.MEM_30>
_10 = str_22(D)->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
In function ‘main’:
test.c:145:9: warning: use location
         memcpy(str->data, data, len);
         ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_STRING_set’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
# .MEM_31 = VDEF <.MEM_30>
memcpy (_10, _data_18(D), _9);
memcpy (_10, _data_18(D), _9);
In function ‘main’:
test.c:145:9: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca0d8
    type <pointer_type 0x7fee6189ff18
        type <integer_type 0x7fee61d89348 unsigned char public unsigned string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee61d75d08 0> max <integer_cst 0x7fee61d75ca8 255>
            pointer_to_this <pointer_type 0x7fee6189ff18>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = str_22(D)->data;
    version 10
    ptr-info 0x7fee618c2918>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_STRING_set========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;33m =======POP node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;33m =======POP node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;33m =======POP node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre_check_funciton:ASN1_TIME_adj========= [0m
[40;42m =======start_check_funciton:ASN1_TIME_adj========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fee61893d40
    type <pointer_type 0x7fee618b3f18
        type <integer_type 0x7fee618ac3f0 time_t DI
            size <integer_cst 0x7fee61d75be8 constant 64>
            unit size <integer_cst 0x7fee61d75c00 constant 8>
            align 64 symtab 0 alias set -1 canonical type 0x7fee61d89738 precision 64 min <integer_cst 0x7fee61d75e70 -9223372036854775808> max <integer_cst 0x7fee61d75e88 9223372036854775807> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618b3f18>>
        unsigned DI size <integer_cst 0x7fee61d75be8 64> unit size <integer_cst 0x7fee61d75c00 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <parm_decl 0x7fee618b4780 t type <integer_type 0x7fee618ac3f0 time_t>
        addressable DI file test.c line 221 col 47 size <integer_cst 0x7fee61d75be8 64> unit size <integer_cst 0x7fee61d75c00 8>
        align 64 context <function_decl 0x7fee618ad100 ASN1_TIME_adj> arg-type <integer_type 0x7fee618ac3f0 time_t>
        chain <parm_decl 0x7fee618b4800 offset_day type <integer_type 0x7fee61d895e8 int>
            SI file test.c line 222 col 30
            size <integer_cst 0x7fee61d75e28 constant 32>
            unit size <integer_cst 0x7fee61d75e40 constant 4>
            align 32 context <function_decl 0x7fee618ad100 ASN1_TIME_adj> arg-type <integer_type 0x7fee61d895e8 int> chain <parm_decl 0x7fee618b4880 offset_sec>>>
    test.c:227:10 start: test.c:227:10 finish: test.c:227:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>
ts_12 = (struct tm *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_52 = ts_12->tm_year;
test.c:210:39: warning: use location
                                     ts->tm_year % 100, ts->tm_mon + 1,
                                       ^
_53 = _52 % 100;
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
test.c:209:24: warning: use location
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
test.c:209:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_68 = _56;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_18 = _68;
In function ‘main’:
test.c:235:12: warning: use location
     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================
_7 = PHI <0B(2), 0B(4), _18(16)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------
tmps_55 = PHI <tmps_33(10)>
lto1: warning: use location
this stmt have mutiple branch --------
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
         ASN1_STRING_free(tmps);
         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
test.c:204:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                      ^
tmps_33->length = _45;
test.c:204:22: warning: use location
p_36 = tmps_33->data;
test.c:201:7: warning: use location
     p = (char*)tmps->data;
       ^
tmps_33->type = type_35;
test.c:200:16: warning: use location
     tmps->type = type;
                ^
if (type_35 == 24)
test.c:203:8: warning: use location
     if (type == V_ASN1_GENERALIZEDTIME)
        ^
if (type_35 == 24)

 ================== find cond branch ================= 
test.c:203:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 11
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 12
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
test.c:197:10: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
test.c:197:8: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
        ^
if (_34 == 0)

 ================== find cond branch ================= 
test.c:197:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 10
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 14
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (tmps_33 == 0B)
test.c:194:8: warning: use location
     if (tmps == NULL)
        ^
if (tmps_33 == 0B)

 ================== find cond branch ================= 
test.c:194:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 9
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 16
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_26 = ts_12->tm_year;
bb index := 5
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_26 = ts_12->tm_year;
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_26 = ts_12->tm_year;
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_26 = ts_12->tm_year;
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_19>
_26 = ts_12->tm_year;
bb index := 5
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================
_26 = ts_12->tm_year;
In function ‘main’:
test.c:179:13: warning: use location
         if (is_utc(ts->tm_year))
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================
_27 = is_utc (_26);
In function ‘main’:
test.c:179:13: warning: use location
this stmt is child function---is_utc-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 
_43 = ts_12->tm_year;
test.c:205:39: warning: use location
                                     ts->tm_year + 1900, ts->tm_mon + 1,
                                       ^
_44 = _43 + 1900;
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
_50 = ts_12->tm_mon;
test.c:210:58: warning: use location
                                     ts->tm_year % 100, ts->tm_mon + 1,
                                                          ^
_41 = ts_12->tm_mon;
test.c:205:59: warning: use location
                                     ts->tm_year + 1900, ts->tm_mon + 1,
                                                           ^
_42 = _41 + 1;
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
_40 = ts_12->tm_mday;
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
_49 = ts_12->tm_mday;
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^
_39 = ts_12->tm_hour;
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
_48 = ts_12->tm_hour;
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^
_38 = ts_12->tm_min;
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
_47 = ts_12->tm_min;
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^
_37 = ts_12->tm_sec;
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
_46 = ts_12->tm_sec;
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
In function ‘main’:
test.c:232:14: warning: use location
         if (!OPENSSL_gmtime_adj(ts, offset_day, offset_sec))
              ^
this stmt is child function---OPENSSL_gmtime_adj-----

 ================== trace ================== 
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>
trace fucntion name:OPENSSL_gmtime_adj 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = offset_day_13(D) != 0;
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_3 = offset_day_13(D) != 0;
In function ‘main’:
test.c:231:9: warning: use location
     if (offset_day || offset_sec) {
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = _3 | _4;
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_5 = _3 | _4;
In function ‘main’:
test.c:231:20: warning: use location
     if (offset_day || offset_sec) {
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 != 0)
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
if (_5 != 0)
In function ‘main’:
test.c:231:8: warning: use location
     if (offset_day || offset_sec) {
        ^
if (_5 != 0)

 ================== find cond branch ================= 
test.c:231:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 3
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 4
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = offset_sec_14(D) != 0;
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
_4 = offset_sec_14(D) != 0;
In function ‘main’:
test.c:231:20: warning: use location
     if (offset_day || offset_sec) {
                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ca8b8
    type <pointer_type 0x7fee618ac690
        type <record_type 0x7fee618ac5e8 tm BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 32 symtab 0 alias set -1 canonical type 0x7fee618ac5e8 fields <field_decl 0x7fee618abda8 tm_sec> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac690> chain <type_decl 0x7fee618abe40 D.4092>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee62b0bf30 ts>
    def_stmt ts_12 = (struct tm *) _2;
    version 12
    ptr-info 0x7fee618c29c0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618d5a68
    type <integer_type 0x7fee61d89690 unsigned int public unsigned SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d89690 precision 32 min <integer_cst 0x7fee61d75e58 0> max <integer_cst 0x7fee61d75e10 4294967295>
        pointer_to_this <pointer_type 0x7fee61d95888>>
   
    def_stmt _26 = ts_12->tm_year;
    version 26>
# VUSE <.MEM_19>
_26 = ts_12->tm_year;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_19>
_27 = is_utc (_26);
bb index := 5
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================
_27 = is_utc (_26);
In function ‘main’:
test.c:179:13: warning: use location
         if (is_utc(ts->tm_year))
             ^
this stmt is child function---is_utc-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5a68
    type <integer_type 0x7fee61d89690 unsigned int public unsigned SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d89690 precision 32 min <integer_cst 0x7fee61d75e58 0> max <integer_cst 0x7fee61d75e10 4294967295>
        pointer_to_this <pointer_type 0x7fee61d95888>>
   
    def_stmt _26 = ts_12->tm_year;
    version 26>
trace fucntion name:is_utc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_27 != 0)
bb index := 5
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_27 != 0)
bb index := 5
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_27 != 0)
bb index := 5
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_27 != 0)
bb index := 5
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_27 != 0)
bb index := 5
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 13

======================================================================
if (_27 != 0)
In function ‘main’:
test.c:179:12: warning: use location
         if (is_utc(ts->tm_year))
            ^
if (_27 != 0)

 ================== find cond branch ================= 
test.c:179:12: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 5
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 7
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618d5a68
    type <integer_type 0x7fee61d89690 unsigned int public unsigned SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d89690 precision 32 min <integer_cst 0x7fee61d75e58 0> max <integer_cst 0x7fee61d75e10 4294967295>
        pointer_to_this <pointer_type 0x7fee61d95888>>
   
    def_stmt _26 = ts_12->tm_year;
    version 26>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618d5b88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version 30>
# .MEM_60 = VDEF <.MEM_59>
_30 = ASN1_STRING_new ();

 ================== trace ptable================== 
trace fucntion name:ASN1_STRING_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_STRING_new-----
this other function ------ASN1_STRING_new-----
 
 Start check Pointer Collect  

======================================================================
_31 = (long int) _30;
test.c:191:16: warning: use location
         tmps = ASN1_STRING_new(); /* allocation site */
                ^
tmps_32 = (struct ASN1_TIME *) _31;
test.c:191:14: warning: use location
         tmps = ASN1_STRING_new(); /* allocation site */
              ^
tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_68 = _56;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_18 = _68;
In function ‘main’:
test.c:235:12: warning: use location
     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================
_7 = PHI <0B(2), 0B(4), _18(16)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------
tmps_55 = PHI <tmps_33(10)>
lto1: warning: use location
this stmt have mutiple branch --------
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
         ASN1_STRING_free(tmps);
         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5b88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version 30>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
test.c:209:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                      ^
tmps_33->length = _45;
test.c:204:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                      ^
p_36 = tmps_33->data;
test.c:201:7: warning: use location
     p = (char*)tmps->data;
       ^
tmps_33->type = type_35;
test.c:200:16: warning: use location
     tmps->type = type;
                ^
if (type_35 == 24)
test.c:203:8: warning: use location
     if (type == V_ASN1_GENERALIZEDTIME)
        ^
if (type_35 == 24)

 ================== find cond branch ================= 
test.c:203:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 11
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 12
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
test.c:197:10: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5b88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version 30>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
test.c:197:8: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
        ^
if (_34 == 0)

 ================== find cond branch ================= 
test.c:197:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 10
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 14
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (tmps_33 == 0B)
test.c:194:8: warning: use location
     if (tmps == NULL)
        ^
if (tmps_33 == 0B)

 ================== find cond branch ================= 
test.c:194:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 9
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 16
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_30 = ASN1_STRING_new ();
test.c:191:16: warning: use location
         tmps = ASN1_STRING_new(); /* allocation site */
                ^
this stmt is child function---ASN1_STRING_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5b88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version 30>
trace fucntion name:ASN1_STRING_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618d5b88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _30 = ASN1_STRING_new ();
    version 30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618d5c60
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
    version 33
    ptr-info 0x7fee618c2a20>
tmps_33 = PHI <s_16(D)(7), tmps_32(8)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_68 = _56;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_18 = _68;
In function ‘main’:
test.c:235:12: warning: use location
     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================
_7 = PHI <0B(2), 0B(4), _18(16)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------
tmps_55 = PHI <tmps_33(10)>
lto1: warning: use location
this stmt have mutiple branch --------
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
         ASN1_STRING_free(tmps);
         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5c60
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
    version 33
    ptr-info 0x7fee618c2a20>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
test.c:209:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                      ^
tmps_33->length = _54;
test.c:209:22: warning: use location
tmps_33->length = _45;
test.c:204:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                      ^
p_36 = tmps_33->data;
test.c:201:7: warning: use location
     p = (char*)tmps->data;
       ^
tmps_33->type = type_35;
test.c:200:16: warning: use location
     tmps->type = type;
                ^
if (type_35 == 24)
test.c:203:8: warning: use location
     if (type == V_ASN1_GENERALIZEDTIME)
        ^
if (type_35 == 24)

 ================== find cond branch ================= 
test.c:203:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 11
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 12
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
test.c:197:10: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5c60
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
    version 33
    ptr-info 0x7fee618c2a20>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
test.c:197:8: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
        ^
if (_34 == 0)

 ================== find cond branch ================= 
test.c:197:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 10
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 14
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (tmps_33 == 0B)
test.c:194:8: warning: use location
     if (tmps == NULL)
        ^
if (tmps_33 == 0B)

 ================== find cond branch ================= 
test.c:194:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 9
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 16
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618d5c60
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
    version 33
    ptr-info 0x7fee618c2a20>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
# VUSE <.MEM_62>
p_36 = tmps_33->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
test.c:209:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_68 = _56;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_18 = _68;
In function ‘main’:
test.c:235:12: warning: use location
     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================
_7 = PHI <0B(2), 0B(4), _18(16)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------
tmps_55 = PHI <tmps_33(10)>
lto1: warning: use location
this stmt have mutiple branch --------
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
         ASN1_STRING_free(tmps);
         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
test.c:204:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                      ^
tmps_33->length = _45;
test.c:204:22: warning: use location
p_36 = tmps_33->data;
test.c:201:7: warning: use location
     p = (char*)tmps->data;
       ^
tmps_33->type = type_35;
test.c:200:16: warning: use location
     tmps->type = type;
                ^
if (type_35 == 24)
test.c:203:8: warning: use location
     if (type == V_ASN1_GENERALIZEDTIME)
        ^
if (type_35 == 24)

 ================== find cond branch ================= 
test.c:203:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 11
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 12
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
test.c:197:10: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
test.c:197:8: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
        ^
if (_34 == 0)

 ================== find cond branch ================= 
test.c:197:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 10
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 14
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (tmps_33 == 0B)
test.c:194:8: warning: use location
     if (tmps == NULL)
        ^
if (tmps_33 == 0B)

 ================== find cond branch ================= 
test.c:194:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 9
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 16
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
# VUSE <.MEM_62>
p_36 = tmps_33->data;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
test.c:209:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _54;
test.c:209:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%02d%02d%02d%02d%02d%02dZ",
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _56;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_68 = _56;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _68;
bb index := 16
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 13

======================================================================
_18 = _68;
In function ‘main’:
test.c:235:12: warning: use location
     return asn1_time_from_tm(s, ts, V_ASN1_UNDEF);
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
In function ‘ASN1_TIME_adj’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(2), 0B(4), _18(16)>
bb index := 17
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 17 ,possiable got to succ := 13

======================================================================
_7 = PHI <0B(2), 0B(4), _18(16)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------
tmps_55 = PHI <tmps_33(10)>
lto1: warning: use location
this stmt have mutiple branch --------
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
         ASN1_STRING_free(tmps);
         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
tmps_33->length = _45;
test.c:204:22: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                      ^
tmps_33->length = _45;
test.c:204:22: warning: use location
p_36 = tmps_33->data;
test.c:201:7: warning: use location
     p = (char*)tmps->data;
       ^
tmps_33->type = type_35;
test.c:200:16: warning: use location
     tmps->type = type;
                ^
if (type_35 == 24)
test.c:203:8: warning: use location
     if (type == V_ASN1_GENERALIZEDTIME)
        ^
if (type_35 == 24)

 ================== find cond branch ================= 
test.c:203:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 11
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 12
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
test.c:197:10: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
          ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_34 == 0)
test.c:197:8: warning: use location
     if (!ASN1_STRING_set(tmps, NULL, len))
        ^
if (_34 == 0)

 ================== find cond branch ================= 
test.c:197:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 10
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 14
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 11
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
if (tmps_33 == 0B)
test.c:194:8: warning: use location
     if (tmps == NULL)
        ^
if (tmps_33 == 0B)

 ================== find cond branch ================= 
test.c:194:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 9
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 16
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
test.c:204:24: warning: use location
         tmps->length = BIO_snprintf(p, len, "%04d%02d%02d%02d%02d%02dZ",
                        ^
this stmt is child function---BIO_snprintf-----

 ================== trace ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>
trace fucntion name:BIO_snprintf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618d5d38
    type <pointer_type 0x7fee618a6f18
        type <integer_type 0x7fee6189f930 char public string-flag QI
            size <integer_cst 0x7fee61d75cd8 constant 8>
            unit size <integer_cst 0x7fee61d75cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fee61d893f0 precision 8 min <integer_cst 0x7fee618a21b0 -128> max <integer_cst 0x7fee618a2198 127>
            pointer_to_this <pointer_type 0x7fee618a6f18>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>>
    var <var_decl 0x7fee618cf5a0 p>
    def_stmt p_36 = tmps_33->data;
    version 36
    ptr-info 0x7fee618c2a38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618db288
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_55 = PHI <tmps_33(10)>
    version 55
    ptr-info 0x7fee618c2a50>
tmps_55 = PHI <tmps_33(10)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
if (s_16(D) != tmps_55)
test.c:216:8: warning: use location
     if (tmps != s)
        ^
if (s_16(D) != tmps_55)

 ================== find cond branch ================= 
test.c:216:8: warning: use location
Cond in fucntion ASN1_TIME_adj basic block 14
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 15
 ================== possible direct basic block ================= 
from ASN1_TIME_adj basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
# .MEM_67 = VDEF <.MEM_61>
ASN1_STRING_free (tmps_55);
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
         ASN1_STRING_free(tmps);
         ^
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db288
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_55 = PHI <tmps_33(10)>
    version 55
    ptr-info 0x7fee618c2a50>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_67 = VDEF <.MEM_61>
ASN1_STRING_free (tmps_55);
ASN1_STRING_free (tmps_55);
test.c:217:9: warning: use location
this stmt is child function---ASN1_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db288
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_55 = PHI <tmps_33(10)>
    version 55
    ptr-info 0x7fee618c2a50>
trace fucntion name:ASN1_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618db288
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf630 tmps>
    def_stmt tmps_55 = PHI <tmps_33(10)>
    version 55
    ptr-info 0x7fee618c2a50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:ASN1_TIME_adj========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_new========= [0m
[40;33m =======POP node_fun stack:OCSP_BASICRESP_new========= [0m
[40;42m =======pre_check_funciton:make_dummy_resp========= [0m
[40;42m =======start_check_funciton:make_dummy_resp========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fee618db750
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _1 = OCSP_BASICRESP_new ();
    version 1>
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();

 ================== trace ptable================== 
trace fucntion name:OCSP_BASICRESP_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---OCSP_BASICRESP_new-----
this other function ------OCSP_BASICRESP_new-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_1 = OCSP_BASICRESP_new ();
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_1 = OCSP_BASICRESP_new ();
In function ‘main’:
test.c:288:26: warning: use location
     OCSP_BASICRESP *bs = OCSP_BASICRESP_new();     /* allocation site */
                          ^
this stmt is child function---OCSP_BASICRESP_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618db750
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _1 = OCSP_BASICRESP_new ();
    version 1>
trace fucntion name:OCSP_BASICRESP_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618db750
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _1 = OCSP_BASICRESP_new ();
    version 1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fee618c2258 type <pointer_type 0x7fee618ac0a8> constant 0>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fee618c2258 type <pointer_type 0x7fee618ac0a8> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();

 ================== trace ptable================== 
trace fucntion name:X509_NAME_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---X509_NAME_new-----
this other function ------X509_NAME_new-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_9 = (long int) _8;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_9 = (long int) _8;
In function ‘main’:
test.c:292:23: warning: use location
     X509_NAME *name = X509_NAME_new();                          /* allocation site */
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_42 = (void *) _9;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
name_42 = (void *) _9;
In function ‘main’:
test.c:292:16: warning: use location
     X509_NAME *name = X509_NAME_new();                          /* allocation site */
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
In function ‘main’:
test.c:252:9: warning: use location
     ret = X509_NAME_add_entry(name, ne, loc, set);
         ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_87 = PHI <0(2), ret_86(3)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_113 = _87;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_14 = _113;
In function ‘main’:
test.c:296:10: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
if (_14 == 0)
In function ‘main’:
test.c:296:8: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
        ^
if (_14 == 0)

 ================== find cond branch ================= 
test.c:296:8: warning: use location
Cond in fucntion make_dummy_resp basic block 4
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
X509_NAME_ENTRY_free (ne_85);
In function ‘main’:
test.c:253:5: warning: use location
     X509_NAME_ENTRY_free(ne);
     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
X509_NAME_free (name_42);
In function ‘main’:
test.c:315:5: warning: use location
     X509_NAME_free(name);
     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
In function ‘main’:
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_18 = (long int) _17;
In function ‘main’:
test.c:301:11: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
cid_51 = (struct OCSP_CERTID *) _18;
In function ‘main’:
test.c:301:9: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
         ^
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
In function ‘main’:
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
In function ‘main’:
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
In function ‘main’:
test.c:169:12: warning: use location
     return ASN1_STRING_set(x, d, len);
            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_115 = _90;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_15 = _115;
In function ‘main’:
test.c:298:13: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_BIT_STRING_free (key_44);
In function ‘main’:
test.c:312:5: warning: use location
     ASN1_BIT_STRING_free(key);
     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_INTEGER_free (serial_46);
In function ‘main’:
test.c:313:5: warning: use location
     ASN1_INTEGER_free(serial);
     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_108>
_8 = X509_NAME_new ();
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_8 = X509_NAME_new ();
In function ‘main’:
test.c:292:23: warning: use location
     X509_NAME *name = X509_NAME_new();                          /* allocation site */
                       ^
this stmt is child function---X509_NAME_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>
trace fucntion name:X509_NAME_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618db948
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _8 = X509_NAME_new ();
    version 8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();

 ================== trace ptable================== 
trace fucntion name:ASN1_BIT_STRING_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_BIT_STRING_new-----
this other function ------ASN1_BIT_STRING_new-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (long int) _10;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_11 = (long int) _10;
In function ‘main’:
test.c:293:28: warning: use location
     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
key_44 = (struct ASN1_BIT_STRING *) _11;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
key_44 = (struct ASN1_BIT_STRING *) _11;
In function ‘main’:
test.c:293:22: warning: use location
     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
In function ‘main’:
test.c:169:12: warning: use location
     return ASN1_STRING_set(x, d, len);
            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_115 = _90;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_15 = _115;
In function ‘main’:
test.c:298:13: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
if (_15 == 0)
In function ‘main’:
test.c:298:9: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
         ^
if (_15 == 0)

 ================== find cond branch ================= 
test.c:298:9: warning: use location
Cond in fucntion make_dummy_resp basic block 5
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_BIT_STRING_free (key_44);
In function ‘main’:
test.c:312:5: warning: use location
     ASN1_BIT_STRING_free(key);
     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
In function ‘main’:
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_18 = (long int) _17;
In function ‘main’:
test.c:301:11: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
cid_51 = (struct OCSP_CERTID *) _18;
In function ‘main’:
test.c:301:9: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
         ^
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
In function ‘main’:
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
In function ‘main’:
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
In function ‘main’:
test.c:252:9: warning: use location
     ret = X509_NAME_add_entry(name, ne, loc, set);
         ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_87 = PHI <0(2), ret_86(3)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_113 = _87;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_14 = _113;
In function ‘main’:
test.c:296:10: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
X509_NAME_ENTRY_free (ne_85);
In function ‘main’:
test.c:253:5: warning: use location
     X509_NAME_ENTRY_free(ne);
     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
X509_NAME_free (name_42);
In function ‘main’:
test.c:315:5: warning: use location
     X509_NAME_free(name);
     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_INTEGER_free (serial_46);
In function ‘main’:
test.c:313:5: warning: use location
     ASN1_INTEGER_free(serial);
     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_10 = ASN1_BIT_STRING_new ();
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_10 = ASN1_BIT_STRING_new ();
In function ‘main’:
test.c:293:28: warning: use location
     ASN1_BIT_STRING *key = ASN1_BIT_STRING_new();               /* allocation site */
                            ^
this stmt is child function---ASN1_BIT_STRING_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>
trace fucntion name:ASN1_BIT_STRING_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618db9d8
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _10 = ASN1_BIT_STRING_new ();
    version 10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();

 ================== trace ptable================== 
trace fucntion name:ASN1_INTEGER_new 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---ASN1_INTEGER_new-----
this other function ------ASN1_INTEGER_new-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_13 = (long int) _12;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_13 = (long int) _12;
In function ‘main’:
test.c:294:28: warning: use location
     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
serial_46 = (struct ASN1_INTEGER *) _13;
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
serial_46 = (struct ASN1_INTEGER *) _13;
In function ‘main’:
test.c:294:19: warning: use location
     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_INTEGER_free (serial_46);
In function ‘main’:
test.c:313:5: warning: use location
     ASN1_INTEGER_free(serial);
     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
In function ‘main’:
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_18 = (long int) _17;
In function ‘main’:
test.c:301:11: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
cid_51 = (struct OCSP_CERTID *) _18;
In function ‘main’:
test.c:301:9: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
         ^
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
In function ‘main’:
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
In function ‘main’:
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
if (_22 == 0)
In function ‘main’:
test.c:305:9: warning: use location
         || !TEST_ptr(cid)
         ^
if (_22 == 0)

 ================== find cond branch ================= 
test.c:305:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
In function ‘main’:
test.c:252:9: warning: use location
     ret = X509_NAME_add_entry(name, ne, loc, set);
         ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_87 = PHI <0(2), ret_86(3)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_113 = _87;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_14 = _113;
In function ‘main’:
test.c:296:10: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
X509_NAME_ENTRY_free (ne_85);
In function ‘main’:
test.c:253:5: warning: use location
     X509_NAME_ENTRY_free(ne);
     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
X509_NAME_free (name_42);
In function ‘main’:
test.c:315:5: warning: use location
     X509_NAME_free(name);
     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
In function ‘main’:
test.c:169:12: warning: use location
     return ASN1_STRING_set(x, d, len);
            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_115 = _90;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_15 = _115;
In function ‘main’:
test.c:298:13: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_BIT_STRING_free (key_44);
In function ‘main’:
test.c:312:5: warning: use location
     ASN1_BIT_STRING_free(key);
     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_12 = ASN1_INTEGER_new ();
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_12 = ASN1_INTEGER_new ();
In function ‘main’:
test.c:294:28: warning: use location
     ASN1_INTEGER *serial = ASN1_INTEGER_new();                  /* allocation site */
                            ^
this stmt is child function---ASN1_INTEGER_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>
trace fucntion name:ASN1_INTEGER_new 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618dba68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _12 = ASN1_INTEGER_new ();
    version 12>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
name_42 = (void *) _9;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
In function ‘main’:
test.c:252:9: warning: use location
     ret = X509_NAME_add_entry(name, ne, loc, set);
         ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_87 = PHI <0(2), ret_86(3)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_113 = _87;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_14 = _113;
In function ‘main’:
test.c:296:10: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
if (_14 == 0)
In function ‘main’:
test.c:296:8: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
        ^
if (_14 == 0)

 ================== find cond branch ================= 
test.c:296:8: warning: use location
Cond in fucntion make_dummy_resp basic block 4
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
X509_NAME_ENTRY_free (ne_85);
In function ‘main’:
test.c:253:5: warning: use location
     X509_NAME_ENTRY_free(ne);
     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
X509_NAME_free (name_42);
In function ‘main’:
test.c:315:5: warning: use location
     X509_NAME_free(name);
     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
In function ‘main’:
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_18 = (long int) _17;
In function ‘main’:
test.c:301:11: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
cid_51 = (struct OCSP_CERTID *) _18;
In function ‘main’:
test.c:301:9: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
         ^
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
In function ‘main’:
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
In function ‘main’:
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
In function ‘main’:
test.c:169:12: warning: use location
     return ASN1_STRING_set(x, d, len);
            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_115 = _90;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_15 = _115;
In function ‘main’:
test.c:298:13: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_BIT_STRING_free (key_44);
In function ‘main’:
test.c:312:5: warning: use location
     ASN1_BIT_STRING_free(key);
     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_INTEGER_free (serial_46);
In function ‘main’:
test.c:313:5: warning: use location
     ASN1_INTEGER_free(serial);
     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618df000
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618cfa20 name>
    def_stmt name_42 = (void *) _9;
    version 42
    ptr-info 0x7fee618c2b10>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
ne_85 = (void *) _84;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
X509_NAME_ENTRY_free (ne_85);
In function ‘main’:
test.c:253:5: warning: use location
     X509_NAME_ENTRY_free(ne);
     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
In function ‘main’:
test.c:252:9: warning: use location
     ret = X509_NAME_add_entry(name, ne, loc, set);
         ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_87 = PHI <0(2), ret_86(3)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_113 = _87;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_14 = _113;
In function ‘main’:
test.c:296:10: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_14 == 0)
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
if (_14 == 0)
In function ‘main’:
test.c:296:8: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
        ^
if (_14 == 0)

 ================== find cond branch ================= 
test.c:296:8: warning: use location
Cond in fucntion make_dummy_resp basic block 4
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
X509_NAME_free (name_42);
In function ‘main’:
test.c:315:5: warning: use location
     X509_NAME_free(name);
     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
In function ‘main’:
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_18 = (long int) _17;
In function ‘main’:
test.c:301:11: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
cid_51 = (struct OCSP_CERTID *) _18;
In function ‘main’:
test.c:301:9: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
         ^
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
In function ‘main’:
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
In function ‘main’:
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
In function ‘main’:
test.c:169:12: warning: use location
     return ASN1_STRING_set(x, d, len);
            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_115 = _90;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_15 = _115;
In function ‘main’:
test.c:298:13: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_BIT_STRING_free (key_44);
In function ‘main’:
test.c:312:5: warning: use location
     ASN1_BIT_STRING_free(key);
     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_INTEGER_free (serial_46);
In function ‘main’:
test.c:313:5: warning: use location
     ASN1_INTEGER_free(serial);
     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618dfea0
    type <pointer_type 0x7fee61d900a8
        type <void_type 0x7fee61d89f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee61d900a8>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee61d95bd0>>
    var <var_decl 0x7fee618e1ab0 ne>
    def_stmt ne_85 = (void *) _84;
    version 85
    ptr-info 0x7fee618c2b70>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
key_44 = (struct ASN1_BIT_STRING *) _11;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
In function ‘main’:
test.c:169:12: warning: use location
     return ASN1_STRING_set(x, d, len);
            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_115 = _90;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_15 = _115;
In function ‘main’:
test.c:298:13: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_15 == 0)
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
if (_15 == 0)
In function ‘main’:
test.c:298:9: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
         ^
if (_15 == 0)

 ================== find cond branch ================= 
test.c:298:9: warning: use location
Cond in fucntion make_dummy_resp basic block 5
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_BIT_STRING_free (key_44);
In function ‘main’:
test.c:312:5: warning: use location
     ASN1_BIT_STRING_free(key);
     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
In function ‘main’:
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_18 = (long int) _17;
In function ‘main’:
test.c:301:11: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
cid_51 = (struct OCSP_CERTID *) _18;
In function ‘main’:
test.c:301:9: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
         ^
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
In function ‘main’:
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
In function ‘main’:
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
In function ‘main’:
test.c:252:9: warning: use location
     ret = X509_NAME_add_entry(name, ne, loc, set);
         ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_87 = PHI <0(2), ret_86(3)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_113 = _87;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_14 = _113;
In function ‘main’:
test.c:296:10: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
X509_NAME_ENTRY_free (ne_85);
In function ‘main’:
test.c:253:5: warning: use location
     X509_NAME_ENTRY_free(ne);
     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
X509_NAME_free (name_42);
In function ‘main’:
test.c:315:5: warning: use location
     X509_NAME_free(name);
     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_INTEGER_free (serial_46);
In function ‘main’:
test.c:313:5: warning: use location
     ASN1_INTEGER_free(serial);
     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618df048
    type <pointer_type 0x7fee618a6b28
        type <record_type 0x7fee618a6a80 ASN1_BIT_STRING BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6b28> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf990 key>
    def_stmt key_44 = (struct ASN1_BIT_STRING *) _11;
    version 44
    ptr-info 0x7fee618c2b28>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
# .MEM_67 = VDEF <.MEM_114>
_16 = EVP_sha256 ();

 ================== trace ptable================== 
trace fucntion name:EVP_sha256 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---EVP_sha256-----
this other function ------EVP_sha256-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
In function ‘main’:
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_18 = (long int) _17;
In function ‘main’:
test.c:301:11: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
cid_51 = (struct OCSP_CERTID *) _18;
In function ‘main’:
test.c:301:9: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
         ^
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
In function ‘main’:
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
In function ‘main’:
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
if (_22 == 0)
In function ‘main’:
test.c:305:9: warning: use location
         || !TEST_ptr(cid)
         ^
if (_22 == 0)

 ================== find cond branch ================= 
test.c:305:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
In function ‘main’:
test.c:252:9: warning: use location
     ret = X509_NAME_add_entry(name, ne, loc, set);
         ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_87 = PHI <0(2), ret_86(3)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_113 = _87;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_14 = _113;
In function ‘main’:
test.c:296:10: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
X509_NAME_ENTRY_free (ne_85);
In function ‘main’:
test.c:253:5: warning: use location
     X509_NAME_ENTRY_free(ne);
     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
X509_NAME_free (name_42);
In function ‘main’:
test.c:315:5: warning: use location
     X509_NAME_free(name);
     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
In function ‘main’:
test.c:169:12: warning: use location
     return ASN1_STRING_set(x, d, len);
            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_115 = _90;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_15 = _115;
In function ‘main’:
test.c:298:13: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_BIT_STRING_free (key_44);
In function ‘main’:
test.c:312:5: warning: use location
     ASN1_BIT_STRING_free(key);
     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_INTEGER_free (serial_46);
In function ‘main’:
test.c:313:5: warning: use location
     ASN1_INTEGER_free(serial);
     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_114>
_16 = EVP_sha256 ();
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_114>
_16 = EVP_sha256 ();
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_114>
_16 = EVP_sha256 ();
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_16 = EVP_sha256 ();
In function ‘main’:
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---EVP_sha256-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:EVP_sha256 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
# .MEM_67 = VDEF <.MEM_114>
_16 = EVP_sha256 ();

 ================== trace ptable================== 
trace fucntion name:EVP_sha256 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---EVP_sha256-----
this other function ------EVP_sha256-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
In function ‘main’:
test.c:301:11: warning: use location
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_18 = (long int) _17;
In function ‘main’:
test.c:301:11: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
cid_51 = (struct OCSP_CERTID *) _18;
In function ‘main’:
test.c:301:9: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
         ^
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
In function ‘main’:
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
In function ‘main’:
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
if (_22 == 0)
In function ‘main’:
test.c:305:9: warning: use location
         || !TEST_ptr(cid)
         ^
if (_22 == 0)

 ================== find cond branch ================= 
test.c:305:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
In function ‘main’:
test.c:252:9: warning: use location
     ret = X509_NAME_add_entry(name, ne, loc, set);
         ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_87 = PHI <0(2), ret_86(3)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_113 = _87;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_14 = _113;
In function ‘main’:
test.c:296:10: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
X509_NAME_ENTRY_free (ne_85);
In function ‘main’:
test.c:253:5: warning: use location
     X509_NAME_ENTRY_free(ne);
     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
X509_NAME_free (name_42);
In function ‘main’:
test.c:315:5: warning: use location
     X509_NAME_free(name);
     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
In function ‘main’:
test.c:169:12: warning: use location
     return ASN1_STRING_set(x, d, len);
            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_115 = _90;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_15 = _115;
In function ‘main’:
test.c:298:13: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_BIT_STRING_free (key_44);
In function ‘main’:
test.c:312:5: warning: use location
     ASN1_BIT_STRING_free(key);
     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_INTEGER_free (serial_46);
In function ‘main’:
test.c:313:5: warning: use location
     ASN1_INTEGER_free(serial);
     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_114>
_16 = EVP_sha256 ();
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_114>
_16 = EVP_sha256 ();
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_114>
_16 = EVP_sha256 ();
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_16 = EVP_sha256 ();
In function ‘main’:
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---EVP_sha256-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>
trace fucntion name:EVP_sha256 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618dbb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _16 = EVP_sha256 ();
    version 16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fee618d9400
    type <pointer_type 0x7fee618b2348
        type <array_type 0x7fee618b22a0 type <integer_type 0x7fee6189f930 char>
            BLK
            size <integer_cst 0x7fee618a2570 constant 56>
            unit size <integer_cst 0x7fee618a2558 constant 7>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fee618b21f8>
            pointer_to_this <pointer_type 0x7fee618b2348>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fee618d93e0 type <array_type 0x7fee618b22a0>
        readonly constant static "test.c\000">
    test.c:302:10 start: test.c:302:10 finish: test.c:302:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fee618d9480
    type <pointer_type 0x7fee618b2348
        type <array_type 0x7fee618b22a0 type <integer_type 0x7fee6189f930 char>
            BLK
            size <integer_cst 0x7fee618a2570 constant 56>
            unit size <integer_cst 0x7fee618a2558 constant 7>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fee618b21f8>
            pointer_to_this <pointer_type 0x7fee618b2348>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fee618d9460 type <array_type 0x7fee618b22a0>
        readonly constant static "test.c\000">
    test.c:303:13 start: test.c:303:13 finish: test.c:303:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fee618d9520
    type <pointer_type 0x7fee618b2348
        type <array_type 0x7fee618b22a0 type <integer_type 0x7fee6189f930 char>
            BLK
            size <integer_cst 0x7fee618a2570 constant 56>
            unit size <integer_cst 0x7fee618a2558 constant 7>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fee618b21f8>
            pointer_to_this <pointer_type 0x7fee618b2348>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fee618d9500 type <array_type 0x7fee618b22a0>
        readonly constant static "test.c\000">
    test.c:304:13 start: test.c:304:13 finish: test.c:304:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fee618d95c0
    type <pointer_type 0x7fee618b2348
        type <array_type 0x7fee618b22a0 type <integer_type 0x7fee6189f930 char>
            BLK
            size <integer_cst 0x7fee618a2570 constant 56>
            unit size <integer_cst 0x7fee618a2558 constant 7>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fee618b21f8>
            pointer_to_this <pointer_type 0x7fee618b2348>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fee618d95a0 type <array_type 0x7fee618b22a0>
        readonly constant static "test.c\000">
    test.c:305:13 start: test.c:305:13 finish: test.c:305:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618e6a68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _92 = sk_OCSP_SINGLERESP_new_null ();
    version 92>
# .MEM_116 = VDEF <.MEM_72>
_92 = sk_OCSP_SINGLERESP_new_null ();

 ================== trace ptable================== 
trace fucntion name:sk_OCSP_SINGLERESP_new_null 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---sk_OCSP_SINGLERESP_new_null-----
this other function ------sk_OCSP_SINGLERESP_new_null-----
 
 Start check Pointer Collect  

======================================================================
_93 = (long int) _92;
test.c:270:19: warning: use location
                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
                   ^
_94 = (struct OCSP_SINGLERESP *) _93;
test.c:270:19: warning: use location
bs_34->tbsResponseData.responses = _94;
test.c:270:17: warning: use location
                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
                 ^
_92 = sk_OCSP_SINGLERESP_new_null ();
test.c:270:19: warning: use location
                 = sk_OCSP_SINGLERESP_new_null()) == NULL)
                   ^
this stmt is child function---sk_OCSP_SINGLERESP_new_null-----

 ================== trace ================== 
 <ssa_name 0x7fee618e6a68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _92 = sk_OCSP_SINGLERESP_new_null ();
    version 92>
trace fucntion name:sk_OCSP_SINGLERESP_new_null 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618e6a68
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _92 = sk_OCSP_SINGLERESP_new_null ();
    version 92>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618df0d8
    type <pointer_type 0x7fee618a9930
        type <record_type 0x7fee618a9888 OCSP_CERTID VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9930> chain <type_decl 0x7fee618aad10 D.4058>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfbd0 cid>
    def_stmt cid_51 = (struct OCSP_CERTID *) _18;
    version 51
    ptr-info 0x7fee618c2b58>
cid_51 = (struct OCSP_CERTID *) _18;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618df0d8
    type <pointer_type 0x7fee618a9930
        type <record_type 0x7fee618a9888 OCSP_CERTID VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9930> chain <type_decl 0x7fee618aad10 D.4058>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfbd0 cid>
    def_stmt cid_51 = (struct OCSP_CERTID *) _18;
    version 51
    ptr-info 0x7fee618c2b58>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
In function ‘main’:
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df0d8
    type <pointer_type 0x7fee618a9930
        type <record_type 0x7fee618a9888 OCSP_CERTID VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9930> chain <type_decl 0x7fee618aad10 D.4058>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfbd0 cid>
    def_stmt cid_51 = (struct OCSP_CERTID *) _18;
    version 51
    ptr-info 0x7fee618c2b58>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
In function ‘main’:
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618df0d8
    type <pointer_type 0x7fee618a9930
        type <record_type 0x7fee618a9888 OCSP_CERTID VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9930> chain <type_decl 0x7fee618aad10 D.4058>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfbd0 cid>
    def_stmt cid_51 = (struct OCSP_CERTID *) _18;
    version 51
    ptr-info 0x7fee618c2b58>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
if (_22 == 0)
In function ‘main’:
test.c:305:9: warning: use location
         || !TEST_ptr(cid)
         ^
if (_22 == 0)

 ================== find cond branch ================= 
test.c:305:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618df0d8
    type <pointer_type 0x7fee618a9930
        type <record_type 0x7fee618a9888 OCSP_CERTID VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9930> chain <type_decl 0x7fee618aad10 D.4058>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfbd0 cid>
    def_stmt cid_51 = (struct OCSP_CERTID *) _18;
    version 51
    ptr-info 0x7fee618c2b58>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618e6ca8
    type <pointer_type 0x7fee618a9b28
        type <record_type 0x7fee618a9a80 OCSP_SINGLERESP BLK
            size <integer_cst 0x7fee61d75f48 constant 256>
            unit size <integer_cst 0x7fee61d91048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a99d8 fields <field_decl 0x7fee618ab098 certId> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9b28> chain <type_decl 0x7fee618ab130 D.4064>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _100 = bs_34->tbsResponseData.responses;
    version 100
    ptr-info 0x7fee618c2c30>
# VUSE <.MEM_119>
_100 = bs_34->tbsResponseData.responses;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_101 = sk_OCSP_SINGLERESP_push (_100, 0B);
test.c:276:15: warning: use location
         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
               ^
this stmt is child function---sk_OCSP_SINGLERESP_push-----

 ================== trace ================== 
 <ssa_name 0x7fee618e6ca8
    type <pointer_type 0x7fee618a9b28
        type <record_type 0x7fee618a9a80 OCSP_SINGLERESP BLK
            size <integer_cst 0x7fee61d75f48 constant 256>
            unit size <integer_cst 0x7fee61d91048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a99d8 fields <field_decl 0x7fee618ab098 certId> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9b28> chain <type_decl 0x7fee618ab130 D.4064>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _100 = bs_34->tbsResponseData.responses;
    version 100
    ptr-info 0x7fee618c2c30>
trace fucntion name:sk_OCSP_SINGLERESP_push 

 ================== trace ================== 
trace fucntion free:0 
if (_101 == 0)
test.c:276:12: warning: use location
         if (!(sk_OCSP_SINGLERESP_push(rsp->tbsResponseData.responses, single)))
            ^
if (_101 == 0)

 ================== find cond branch ================= 
test.c:276:12: warning: use location
Cond in fucntion make_dummy_resp basic block 13
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 15
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618e6ca8
    type <pointer_type 0x7fee618a9b28
        type <record_type 0x7fee618a9a80 OCSP_SINGLERESP BLK
            size <integer_cst 0x7fee61d75f48 constant 256>
            unit size <integer_cst 0x7fee61d91048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a99d8 fields <field_decl 0x7fee618ab098 certId> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9b28> chain <type_decl 0x7fee618ab130 D.4064>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _100 = bs_34->tbsResponseData.responses;
    version 100
    ptr-info 0x7fee618c2c30>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fee618c2468 type <pointer_type 0x7fee618a9b28> constant 0>

dot graph START

======================================================================
 <addr_expr 0x7fee618d96a0
    type <pointer_type 0x7fee618b2348
        type <array_type 0x7fee618b22a0 type <integer_type 0x7fee6189f930 char>
            BLK
            size <integer_cst 0x7fee618a2570 constant 56>
            unit size <integer_cst 0x7fee618a2558 constant 7>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fee618b21f8>
            pointer_to_this <pointer_type 0x7fee618b2348>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fee618d9680 type <array_type 0x7fee618b22a0>
        readonly constant static "test.c\000">
    test.c:306:13 start: test.c:306:13 finish: test.c:306:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618dbf30
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfb40 thisupd>
    def_stmt thisupd_37 = _107;
    version 37
    ptr-info 0x7fee618c2ae0>
thisupd_37 = _107;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_74>
ASN1_TIME_free (thisupd_37);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_74>
ASN1_TIME_free (thisupd_37);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
# .MEM_75 = VDEF <.MEM_74>
ASN1_TIME_free (thisupd_37);
ASN1_TIME_free (thisupd_37);
In function ‘main’:
test.c:310:5: warning: use location
     ASN1_TIME_free(thisupd);
     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbf30
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfb40 thisupd>
    def_stmt thisupd_37 = _107;
    version 37
    ptr-info 0x7fee618c2ae0>
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
_20 = test_ptr ("test.c", 303, "thisupd", thisupd_37);
bb index := 7
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
_20 = test_ptr ("test.c", 303, "thisupd", thisupd_37);
bb index := 7
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
_20 = test_ptr ("test.c", 303, "thisupd", thisupd_37);
bb index := 7
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================
_20 = test_ptr ("test.c", 303, "thisupd", thisupd_37);
In function ‘main’:
test.c:303:13: warning: use location
         || !TEST_ptr(thisupd)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbf30
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfb40 thisupd>
    def_stmt thisupd_37 = _107;
    version 37
    ptr-info 0x7fee618c2ae0>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================
if (_20 == 0)
In function ‘main’:
test.c:303:9: warning: use location
         || !TEST_ptr(thisupd)
         ^
if (_20 == 0)

 ================== find cond branch ================= 
test.c:303:9: warning: use location
Cond in fucntion make_dummy_resp basic block 7
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618dbf30
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfb40 thisupd>
    def_stmt thisupd_37 = _107;
    version 37
    ptr-info 0x7fee618c2ae0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618dbf78
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfab0 nextupd>
    def_stmt nextupd_40 = _109;
    version 40
    ptr-info 0x7fee618c2af8>
nextupd_40 = _109;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_76 = VDEF <.MEM_75>
ASN1_TIME_free (nextupd_40);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_76 = VDEF <.MEM_75>
ASN1_TIME_free (nextupd_40);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
# .MEM_76 = VDEF <.MEM_75>
ASN1_TIME_free (nextupd_40);
ASN1_TIME_free (nextupd_40);
In function ‘main’:
test.c:311:5: warning: use location
     ASN1_TIME_free(nextupd);
     ^
this stmt is child function---ASN1_TIME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbf78
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfab0 nextupd>
    def_stmt nextupd_40 = _109;
    version 40
    ptr-info 0x7fee618c2af8>
trace fucntion name:ASN1_TIME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_21 = test_ptr ("test.c", 304, "nextupd", nextupd_40);
bb index := 8
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_21 = test_ptr ("test.c", 304, "nextupd", nextupd_40);
bb index := 8
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_71 = VDEF <.MEM_70>
_21 = test_ptr ("test.c", 304, "nextupd", nextupd_40);
bb index := 8
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================
_21 = test_ptr ("test.c", 304, "nextupd", nextupd_40);
In function ‘main’:
test.c:304:13: warning: use location
         || !TEST_ptr(nextupd)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618dbf78
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfab0 nextupd>
    def_stmt nextupd_40 = _109;
    version 40
    ptr-info 0x7fee618c2af8>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 == 0)
bb index := 8
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 == 0)
bb index := 8
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_21 == 0)
bb index := 8
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 17

======================================================================
if (_21 == 0)
In function ‘main’:
test.c:304:9: warning: use location
         || !TEST_ptr(nextupd)
         ^
if (_21 == 0)

 ================== find cond branch ================= 
test.c:304:9: warning: use location
Cond in fucntion make_dummy_resp basic block 8
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618dbf78
    type <pointer_type 0x7fee618ac0a8
        type <record_type 0x7fee618ac000 ASN1_TIME BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618ac0a8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cfab0 nextupd>
    def_stmt nextupd_40 = _109;
    version 40
    ptr-info 0x7fee618c2af8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
serial_46 = (struct ASN1_INTEGER *) _13;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
# .MEM_78 = VDEF <.MEM_77>
ASN1_INTEGER_free (serial_46);
ASN1_INTEGER_free (serial_46);
In function ‘main’:
test.c:313:5: warning: use location
     ASN1_INTEGER_free(serial);
     ^
this stmt is child function---ASN1_INTEGER_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:ASN1_INTEGER_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
In function ‘main’:
test.c:301:11: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
           ^
this stmt is child function---OCSP_cert_id_new-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:OCSP_cert_id_new 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = (long int) _17;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
_18 = (long int) _17;
In function ‘main’:
test.c:301:11: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
cid_51 = (struct OCSP_CERTID *) _18;
bb index := 6
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================
cid_51 = (struct OCSP_CERTID *) _18;
In function ‘main’:
test.c:301:9: warning: use location
     cid = OCSP_cert_id_new(EVP_sha256(), name, key, serial);    /* allocation site */
         ^
_96 = OCSP_CERTID_dup (cid_51);
test.c:273:27: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                           ^
this stmt is child function---OCSP_CERTID_dup-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:OCSP_CERTID_dup 

 ================== trace ================== 
trace fucntion free:0 
_97 = (long int) _96;
test.c:273:27: warning: use location
_98 = (struct OCSP_CERTID *) _97;
test.c:273:27: warning: use location
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
test.c:273:16: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                ^
if (_99 == 0B)
test.c:273:8: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
        ^
if (_99 == 0B)

 ================== find cond branch ================= 
test.c:273:8: warning: use location
Cond in fucntion make_dummy_resp basic block 12
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 14
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
test.c:273:25: warning: use location
     if ((single->certId = OCSP_CERTID_dup(cid)) == NULL)
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
OCSP_CERTID_free (cid_51);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
OCSP_CERTID_free (cid_51);
In function ‘main’:
test.c:314:5: warning: use location
     OCSP_CERTID_free(cid);
     ^
this stmt is child function---OCSP_CERTID_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:OCSP_CERTID_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_72 = VDEF <.MEM_71>
_22 = test_ptr ("test.c", 305, "cid", cid_51);
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
_22 = test_ptr ("test.c", 305, "cid", cid_51);
In function ‘main’:
test.c:305:13: warning: use location
         || !TEST_ptr(cid)
             ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_22 == 0)
bb index := 9
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================
if (_22 == 0)
In function ‘main’:
test.c:305:9: warning: use location
         || !TEST_ptr(cid)
         ^
if (_22 == 0)

 ================== find cond branch ================= 
test.c:305:9: warning: use location
Cond in fucntion make_dummy_resp basic block 9
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 17
 ================== possible direct basic block ================= 
from make_dummy_resp basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
In function ‘main’:
test.c:252:9: warning: use location
     ret = X509_NAME_add_entry(name, ne, loc, set);
         ^
this stmt is child function---X509_NAME_add_entry-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:X509_NAME_add_entry 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = PHI <0(2), ret_86(3)>
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_87 = PHI <0(2), ret_86(3)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_113 = _87;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_113 = _87;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_14 = _113;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_14 = _113;
In function ‘main’:
test.c:296:10: warning: use location
     if (!X509_NAME_add_entry_by_NID(name, NID_commonName, MBSTRING_ASC,
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
X509_NAME_ENTRY_free (ne_85);
bb index := 3
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================
X509_NAME_ENTRY_free (ne_85);
In function ‘main’:
test.c:253:5: warning: use location
     X509_NAME_ENTRY_free(ne);
     ^
this stmt is child function---X509_NAME_ENTRY_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:X509_NAME_ENTRY_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_80 = VDEF <.MEM_79>
X509_NAME_free (name_42);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
X509_NAME_free (name_42);
In function ‘main’:
test.c:315:5: warning: use location
     X509_NAME_free(name);
     ^
this stmt is child function---X509_NAME_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:X509_NAME_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_102>
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
In function ‘main’:
test.c:169:12: warning: use location
     return ASN1_STRING_set(x, d, len);
            ^
this stmt is child function---ASN1_STRING_set-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:ASN1_STRING_set 
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = _90;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_115 = _90;
In function ‘main’:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = _115;
bb index := 5
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 17

======================================================================
_15 = _115;
In function ‘main’:
test.c:298:13: warning: use location
         || !ASN1_BIT_STRING_set(key, keybytes, sizeof(keybytes)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
In function ‘make_dummy_resp’:
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
ASN1_BIT_STRING_free (key_44);
bb index := 16
# VUSE <.MEM_82>
return _27;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 16 ,possiable got to succ := 17

======================================================================
ASN1_BIT_STRING_free (key_44);
In function ‘main’:
test.c:312:5: warning: use location
     ASN1_BIT_STRING_free(key);
     ^
this stmt is child function---ASN1_BIT_STRING_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>
trace fucntion name:ASN1_BIT_STRING_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618df090
    type <pointer_type 0x7fee618a6dc8
        type <record_type 0x7fee618a6d20 ASN1_INTEGER BLK
            size <integer_cst 0x7fee61d910a8 constant 192>
            unit size <integer_cst 0x7fee61d91078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7fee6189f0a8 fields <field_decl 0x7fee618a1a18 length> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a6dc8> chain <type_decl 0x7fee618a1ab0 D.4002>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618cf900 serial>
    def_stmt serial_46 = (struct ASN1_INTEGER *) _13;
    version 46
    ptr-info 0x7fee618c2b40>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:make_dummy_resp========= [0m
[40;42m =======pre add _ fucntion:get_cert_and_key========= [0m
[40;33m =======POP node_fun stack:get_cert_and_key========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fee618edcf0
    type <pointer_type 0x7fee618a9e70
        type <record_type 0x7fee618a9dc8 OCSP_BASICRESP BLK
            size <integer_cst 0x7fee61d91030 constant 512>
            unit size <integer_cst 0x7fee61e2ec18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a9d20 fields <field_decl 0x7fee618ab720 tbsResponseData> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9e70> chain <type_decl 0x7fee618ab7b8 D.4075>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618e7e10 bs>
    def_stmt bs_37 = make_dummy_resp ();
    version 37
    ptr-info 0x7fee618c2d50>
# .MEM_51 = VDEF <.MEM_50>
bs_37 = make_dummy_resp ();

 ================== trace ptable================== 
trace fucntion name:make_dummy_resp 
[40;44m =======trace_function_path make_dummy_resp  function_call count: 23 level :-100========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_free========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_free========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_free========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_free========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;46m =======add node_fun stack:test_true========= [0m
[40;44m =======trace_function_path test_true  function_call count: 1 level :-100========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;46m =======add node_fun stack:test_ptr========= [0m
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :-100========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_cert_id_new========= [0m
[40;46m =======add node_fun stack:OCSP_cert_id_new========= [0m
[40;42m =======pre add _ fucntion:EVP_sha256========= [0m
[40;46m =======add node_fun stack:EVP_sha256========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :-100========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_new========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_new========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_new========= [0m
[40;46m =======add node_fun stack:X509_NAME_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :-100========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :-100========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;46m =======add node_fun stack:time========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_new========= [0m
[40;46m =======add node_fun stack:OCSP_BASICRESP_new========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---make_dummy_resp-----
this other function ------make_dummy_resp-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
OCSP_BASICRESP_free (bs_37);
test.c:334:5: warning: use location
     OCSP_BASICRESP_free(bs);
     ^
this stmt is child function---OCSP_BASICRESP_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618edcf0
    type <pointer_type 0x7fee618a9e70
        type <record_type 0x7fee618a9dc8 OCSP_BASICRESP BLK
            size <integer_cst 0x7fee61d91030 constant 512>
            unit size <integer_cst 0x7fee61e2ec18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a9d20 fields <field_decl 0x7fee618ab720 tbsResponseData> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9e70> chain <type_decl 0x7fee618ab7b8 D.4075>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618e7e10 bs>
    def_stmt bs_37 = make_dummy_resp ();
    version 37
    ptr-info 0x7fee618c2d50>
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
test.c:331:13: warning: use location
         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
             ^
this stmt is child function---OCSP_basic_sign-----

 ================== trace ================== 
 <ssa_name 0x7fee618edcf0
    type <pointer_type 0x7fee618a9e70
        type <record_type 0x7fee618a9dc8 OCSP_BASICRESP BLK
            size <integer_cst 0x7fee61d91030 constant 512>
            unit size <integer_cst 0x7fee61e2ec18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a9d20 fields <field_decl 0x7fee618ab720 tbsResponseData> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9e70> chain <type_decl 0x7fee618ab7b8 D.4075>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618e7e10 bs>
    def_stmt bs_37 = make_dummy_resp ();
    version 37
    ptr-info 0x7fee618c2d50>
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_10 = _9 != 0;
test.c:331:13: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_11 = (int) _10;
test.c:331:13: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
test.c:331:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
 <ssa_name 0x7fee618edcf0
    type <pointer_type 0x7fee618a9e70
        type <record_type 0x7fee618a9dc8 OCSP_BASICRESP BLK
            size <integer_cst 0x7fee61d91030 constant 512>
            unit size <integer_cst 0x7fee61e2ec18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a9d20 fields <field_decl 0x7fee618ab720 tbsResponseData> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9e70> chain <type_decl 0x7fee618ab7b8 D.4075>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618e7e10 bs>
    def_stmt bs_37 = make_dummy_resp ();
    version 37
    ptr-info 0x7fee618c2d50>
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
if (_12 == 0)
test.c:331:9: warning: use location
         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
         ^
if (_12 == 0)

 ================== find cond branch ================= 
test.c:331:9: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 13
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_1 = test_ptr ("test.c", 329, "bs", bs_37);
test.c:329:10: warning: use location
     if (!TEST_ptr(bs)
          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618edcf0
    type <pointer_type 0x7fee618a9e70
        type <record_type 0x7fee618a9dc8 OCSP_BASICRESP BLK
            size <integer_cst 0x7fee61d91030 constant 512>
            unit size <integer_cst 0x7fee61e2ec18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a9d20 fields <field_decl 0x7fee618ab720 tbsResponseData> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9e70> chain <type_decl 0x7fee618ab7b8 D.4075>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618e7e10 bs>
    def_stmt bs_37 = make_dummy_resp ();
    version 37
    ptr-info 0x7fee618c2d50>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
bs_37 = make_dummy_resp ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
bs_37 = make_dummy_resp ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
bs_37 = make_dummy_resp ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
bs_37 = make_dummy_resp ();
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
bs_37 = make_dummy_resp ();
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
bs_37 = make_dummy_resp ();
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
bs_37 = make_dummy_resp ();
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
bs_37 = make_dummy_resp ();
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
bs_37 = make_dummy_resp ();
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_51 = VDEF <.MEM_50>
bs_37 = make_dummy_resp ();
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
bs_37 = make_dummy_resp ();
test.c:328:8: warning: use location
     bs = make_dummy_resp();
        ^
this stmt is child function---make_dummy_resp-----

 ================== trace ================== 
 <ssa_name 0x7fee618edcf0
    type <pointer_type 0x7fee618a9e70
        type <record_type 0x7fee618a9dc8 OCSP_BASICRESP BLK
            size <integer_cst 0x7fee61d91030 constant 512>
            unit size <integer_cst 0x7fee61e2ec18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a9d20 fields <field_decl 0x7fee618ab720 tbsResponseData> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9e70> chain <type_decl 0x7fee618ab7b8 D.4075>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618e7e10 bs>
    def_stmt bs_37 = make_dummy_resp ();
    version 37
    ptr-info 0x7fee618c2d50>
trace fucntion name:make_dummy_resp 
[40;44m =======trace_function_path make_dummy_resp  function_call count: 23 level :0========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_free========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_free========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_free========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_free========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;46m =======add node_fun stack:test_true========= [0m
[40;44m =======trace_function_path test_true  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;46m =======add node_fun stack:test_ptr========= [0m
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_cert_id_new========= [0m
[40;46m =======add node_fun stack:OCSP_cert_id_new========= [0m
[40;42m =======pre add _ fucntion:EVP_sha256========= [0m
[40;46m =======add node_fun stack:EVP_sha256========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_new========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_new========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_new========= [0m
[40;46m =======add node_fun stack:X509_NAME_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :1========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :2========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;46m =======add node_fun stack:time========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_new========= [0m
[40;46m =======add node_fun stack:OCSP_BASICRESP_new========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618edcf0
    type <pointer_type 0x7fee618a9e70
        type <record_type 0x7fee618a9dc8 OCSP_BASICRESP BLK
            size <integer_cst 0x7fee61d91030 constant 512>
            unit size <integer_cst 0x7fee61e2ec18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a9d20 fields <field_decl 0x7fee618ab720 tbsResponseData> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9e70> chain <type_decl 0x7fee618ab7b8 D.4075>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618e7e10 bs>
    def_stmt bs_37 = make_dummy_resp ();
    version 37
    ptr-info 0x7fee618c2d50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fee618d9da0
    type <pointer_type 0x7fee618b2348
        type <array_type 0x7fee618b22a0 type <integer_type 0x7fee6189f930 char>
            BLK
            size <integer_cst 0x7fee618a2570 constant 56>
            unit size <integer_cst 0x7fee618a2558 constant 7>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fee618b21f8>
            pointer_to_this <pointer_type 0x7fee618b2348>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fee618d9d80 type <array_type 0x7fee618b22a0>
        readonly constant static "test.c\000">
    test.c:329:10 start: test.c:329:10 finish: test.c:329:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fee618d9e00
    type <pointer_type 0x7fee618b2690
        type <pointer_type 0x7fee618acf18 type <record_type 0x7fee618ace70 X509>
            public unsigned DI
            size <integer_cst 0x7fee61d75be8 constant 64>
            unit size <integer_cst 0x7fee61d75c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fee618b2690>>
        unsigned DI size <integer_cst 0x7fee61d75be8 64> unit size <integer_cst 0x7fee61d75c00 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7fee618e7d80 signer type <pointer_type 0x7fee618acf18>
        addressable unsigned DI file test.c line 322 col 11 size <integer_cst 0x7fee61d75be8 64> unit size <integer_cst 0x7fee61d75c00 8>
        align 64 context <function_decl 0x7fee618a0b00 main>
        chain <var_decl 0x7fee618e7cf0 tmp type <pointer_type 0x7fee618acf18>
            addressable unsigned DI file test.c line 322 col 27 size <integer_cst 0x7fee61d75be8 64> unit size <integer_cst 0x7fee61d75c00 8>
            align 64 context <function_decl 0x7fee618a0b00 main> chain <var_decl 0x7fee618e7c60 key>>>
    test.c:330:13 start: test.c:330:13 finish: test.c:330:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fee618d9e80
    type <pointer_type 0x7fee618b2348
        type <array_type 0x7fee618b22a0 type <integer_type 0x7fee6189f930 char>
            BLK
            size <integer_cst 0x7fee618a2570 constant 56>
            unit size <integer_cst 0x7fee618a2558 constant 7>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fee618b21f8>
            pointer_to_this <pointer_type 0x7fee618b2348>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fee618d9e60 type <array_type 0x7fee618b22a0>
        readonly constant static "test.c\000">
    test.c:330:13 start: test.c:330:13 finish: test.c:330:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618ed5a0
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _6 = EVP_sha1 ();
    version 6>
# .MEM_55 = VDEF <.MEM_54>
_6 = EVP_sha1 ();

 ================== trace ptable================== 
trace fucntion name:EVP_sha1 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---EVP_sha1-----
this other function ------EVP_sha1-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_55>
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
test.c:331:13: warning: use location
         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
             ^
this stmt is child function---OCSP_basic_sign-----

 ================== trace ================== 
 <ssa_name 0x7fee618ed5a0
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _6 = EVP_sha1 ();
    version 6>
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_10 = _9 != 0;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_10 = _9 != 0;
test.c:331:13: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = (int) _10;
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_11 = (int) _10;
test.c:331:13: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
test.c:331:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
 <ssa_name 0x7fee618ed5a0
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _6 = EVP_sha1 ();
    version 6>
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_12 == 0)
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
if (_12 == 0)
test.c:331:9: warning: use location
         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
         ^
if (_12 == 0)

 ================== find cond branch ================= 
test.c:331:9: warning: use location
Cond in fucntion main basic block 4
 ================== possible direct basic block ================= 
from main basic block 13
 ================== possible direct basic block ================= 
from main basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_58 = VDEF <.MEM_57>
OCSP_BASICRESP_free (bs_37);
bb index := 6
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
OCSP_BASICRESP_free (bs_37);
test.c:334:5: warning: use location
     OCSP_BASICRESP_free(bs);
     ^
this stmt is child function---OCSP_BASICRESP_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618ed5a0
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _6 = EVP_sha1 ();
    version 6>
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_51>
_1 = test_ptr ("test.c", 329, "bs", bs_37);
bb index := 2
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================
_1 = test_ptr ("test.c", 329, "bs", bs_37);
test.c:329:10: warning: use location
     if (!TEST_ptr(bs)
          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618ed5a0
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _6 = EVP_sha1 ();
    version 6>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_6 = EVP_sha1 ();
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_6 = EVP_sha1 ();
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_6 = EVP_sha1 ();
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_6 = EVP_sha1 ();
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_6 = EVP_sha1 ();
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_6 = EVP_sha1 ();
bb index := 4
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_6 = EVP_sha1 ();
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_6 = EVP_sha1 ();
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_6 = EVP_sha1 ();
bb index := 4
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_6 = EVP_sha1 ();
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_6 = EVP_sha1 ();
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_6 = EVP_sha1 ();
bb index := 4
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_6 = EVP_sha1 ();
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_6 = EVP_sha1 ();
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_55 = VDEF <.MEM_54>
_6 = EVP_sha1 ();
bb index := 4
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 13

======================================================================
_6 = EVP_sha1 ();
test.c:331:13: warning: use location
         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
             ^
this stmt is child function---EVP_sha1-----

 ================== trace ================== 
 <ssa_name 0x7fee618ed5a0
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _6 = EVP_sha1 ();
    version 6>
trace fucntion name:EVP_sha1 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ed5a0
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _6 = EVP_sha1 ();
    version 6>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fee618d9f40
    type <pointer_type 0x7fee618b2348
        type <array_type 0x7fee618b22a0 type <integer_type 0x7fee6189f930 char>
            BLK
            size <integer_cst 0x7fee618a2570 constant 56>
            unit size <integer_cst 0x7fee618a2558 constant 7>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fee618b21f8>
            pointer_to_this <pointer_type 0x7fee618b2348>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fee618d9f20 type <array_type 0x7fee618b22a0>
        readonly constant static "test.c\000">
    test.c:331:13 start: test.c:331:13 finish: test.c:331:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618edd38
    type <pointer_type 0x7fee618a9e70
        type <record_type 0x7fee618a9dc8 OCSP_BASICRESP BLK
            size <integer_cst 0x7fee61d91030 constant 512>
            unit size <integer_cst 0x7fee61e2ec18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a9d20 fields <field_decl 0x7fee618ab720 tbsResponseData> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9e70> chain <type_decl 0x7fee618ab7b8 D.4075>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618e7e10 bs>
    def_stmt bs_46 = make_dummy_resp ();
    version 46
    ptr-info 0x7fee618c2d68>
# .MEM_59 = VDEF <.MEM_58>
bs_46 = make_dummy_resp ();

 ================== trace ptable================== 
trace fucntion name:make_dummy_resp 
[40;44m =======trace_function_path make_dummy_resp  function_call count: 23 level :-100========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_free========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_free========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_free========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_free========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;46m =======add node_fun stack:test_true========= [0m
[40;44m =======trace_function_path test_true  function_call count: 1 level :-100========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;46m =======add node_fun stack:test_ptr========= [0m
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :-100========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_cert_id_new========= [0m
[40;46m =======add node_fun stack:OCSP_cert_id_new========= [0m
[40;42m =======pre add _ fucntion:EVP_sha256========= [0m
[40;46m =======add node_fun stack:EVP_sha256========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :-100========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_new========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_new========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_new========= [0m
[40;46m =======add node_fun stack:X509_NAME_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :-100========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :-100========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;46m =======add node_fun stack:time========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_new========= [0m
[40;46m =======add node_fun stack:OCSP_BASICRESP_new========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---make_dummy_resp-----
this other function ------make_dummy_resp-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================
OCSP_BASICRESP_free (bs_46);
test.c:346:5: warning: use location
     OCSP_BASICRESP_free(bs);
     ^
this stmt is child function---OCSP_BASICRESP_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618edd38
    type <pointer_type 0x7fee618a9e70
        type <record_type 0x7fee618a9dc8 OCSP_BASICRESP BLK
            size <integer_cst 0x7fee61d91030 constant 512>
            unit size <integer_cst 0x7fee61e2ec18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a9d20 fields <field_decl 0x7fee618ab720 tbsResponseData> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9e70> chain <type_decl 0x7fee618ab7b8 D.4075>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618e7e10 bs>
    def_stmt bs_46 = make_dummy_resp ();
    version 46
    ptr-info 0x7fee618c2d68>
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
test.c:343:10: warning: use location
     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
          ^
this stmt is child function---OCSP_resp_get0_signer-----

 ================== trace ================== 
 <ssa_name 0x7fee618edd38
    type <pointer_type 0x7fee618a9e70
        type <record_type 0x7fee618a9dc8 OCSP_BASICRESP BLK
            size <integer_cst 0x7fee61d91030 constant 512>
            unit size <integer_cst 0x7fee61e2ec18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a9d20 fields <field_decl 0x7fee618ab720 tbsResponseData> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9e70> chain <type_decl 0x7fee618ab7b8 D.4075>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618e7e10 bs>
    def_stmt bs_46 = make_dummy_resp ();
    version 46
    ptr-info 0x7fee618c2d68>
trace fucntion name:OCSP_resp_get0_signer 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
test.c:340:13: warning: use location
         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
             ^
this stmt is child function---OCSP_basic_sign-----

 ================== trace ================== 
 <ssa_name 0x7fee618edd38
    type <pointer_type 0x7fee618a9e70
        type <record_type 0x7fee618a9dc8 OCSP_BASICRESP BLK
            size <integer_cst 0x7fee61d91030 constant 512>
            unit size <integer_cst 0x7fee61e2ec18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a9d20 fields <field_decl 0x7fee618ab720 tbsResponseData> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9e70> chain <type_decl 0x7fee618ab7b8 D.4075>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618e7e10 bs>
    def_stmt bs_46 = make_dummy_resp ();
    version 46
    ptr-info 0x7fee618c2d68>
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================
_18 = _17 != 0;
test.c:340:13: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================
_19 = (int) _18;
test.c:340:13: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
test.c:340:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
 <ssa_name 0x7fee618edd38
    type <pointer_type 0x7fee618a9e70
        type <record_type 0x7fee618a9dc8 OCSP_BASICRESP BLK
            size <integer_cst 0x7fee61d91030 constant 512>
            unit size <integer_cst 0x7fee61e2ec18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a9d20 fields <field_decl 0x7fee618ab720 tbsResponseData> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9e70> chain <type_decl 0x7fee618ab7b8 D.4075>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618e7e10 bs>
    def_stmt bs_46 = make_dummy_resp ();
    version 46
    ptr-info 0x7fee618c2d68>
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================
if (_20 == 0)
test.c:340:9: warning: use location
         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
         ^
if (_20 == 0)

 ================== find cond branch ================= 
test.c:340:9: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 13
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
_13 = test_ptr ("test.c", 339, "bs", bs_46);
test.c:339:10: warning: use location
     if (!TEST_ptr(bs)
          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618edd38
    type <pointer_type 0x7fee618a9e70
        type <record_type 0x7fee618a9dc8 OCSP_BASICRESP BLK
            size <integer_cst 0x7fee61d91030 constant 512>
            unit size <integer_cst 0x7fee61e2ec18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a9d20 fields <field_decl 0x7fee618ab720 tbsResponseData> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9e70> chain <type_decl 0x7fee618ab7b8 D.4075>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618e7e10 bs>
    def_stmt bs_46 = make_dummy_resp ();
    version 46
    ptr-info 0x7fee618c2d68>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_58>
bs_46 = make_dummy_resp ();
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_58>
bs_46 = make_dummy_resp ();
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_58>
bs_46 = make_dummy_resp ();
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_58>
bs_46 = make_dummy_resp ();
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_58>
bs_46 = make_dummy_resp ();
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_58>
bs_46 = make_dummy_resp ();
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_58>
bs_46 = make_dummy_resp ();
bb index := 6
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_58>
bs_46 = make_dummy_resp ();
bb index := 6
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_58>
bs_46 = make_dummy_resp ();
bb index := 6
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_58>
bs_46 = make_dummy_resp ();
bb index := 6
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_58>
bs_46 = make_dummy_resp ();
bb index := 6
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_58>
bs_46 = make_dummy_resp ();
bb index := 6
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_58>
bs_46 = make_dummy_resp ();
bb index := 6
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_58>
bs_46 = make_dummy_resp ();
bb index := 6
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_59 = VDEF <.MEM_58>
bs_46 = make_dummy_resp ();
bb index := 6
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
bs_46 = make_dummy_resp ();
test.c:337:8: warning: use location
     bs = make_dummy_resp();
        ^
this stmt is child function---make_dummy_resp-----

 ================== trace ================== 
 <ssa_name 0x7fee618edd38
    type <pointer_type 0x7fee618a9e70
        type <record_type 0x7fee618a9dc8 OCSP_BASICRESP BLK
            size <integer_cst 0x7fee61d91030 constant 512>
            unit size <integer_cst 0x7fee61e2ec18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a9d20 fields <field_decl 0x7fee618ab720 tbsResponseData> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9e70> chain <type_decl 0x7fee618ab7b8 D.4075>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618e7e10 bs>
    def_stmt bs_46 = make_dummy_resp ();
    version 46
    ptr-info 0x7fee618c2d68>
trace fucntion name:make_dummy_resp 
[40;44m =======trace_function_path make_dummy_resp  function_call count: 23 level :0========  [0m
[40;42m =======pre add _ fucntion:X509_NAME_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_free========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_free========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_free========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_free========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_free========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_free========= [0m
[40;42m =======pre add _ fucntion:test_true========= [0m
[40;46m =======add node_fun stack:test_true========= [0m
[40;44m =======trace_function_path test_true  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_SINGLERESP_free========= [0m
[40;46m =======add node_fun stack:OCSP_SINGLERESP_free========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_push========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_push========= [0m
[40;42m =======pre add _ fucntion:OCSP_CERTID_dup========= [0m
[40;46m =======add node_fun stack:OCSP_CERTID_dup========= [0m
[40;42m =======pre add _ fucntion:sk_OCSP_SINGLERESP_new_null========= [0m
[40;46m =======add node_fun stack:sk_OCSP_SINGLERESP_new_null========= [0m
[40;42m =======pre add _ fucntion:test_ptr========= [0m
[40;46m =======add node_fun stack:test_ptr========= [0m
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :1========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m
[40;42m =======pre add _ fucntion:OCSP_cert_id_new========= [0m
[40;46m =======add node_fun stack:OCSP_cert_id_new========= [0m
[40;42m =======pre add _ fucntion:EVP_sha256========= [0m
[40;46m =======add node_fun stack:EVP_sha256========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :1========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_free========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_free========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_add_entry========= [0m
[40;46m =======add node_fun stack:X509_NAME_add_entry========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_ENTRY_create_by_NID========= [0m
[40;46m =======add node_fun stack:X509_NAME_ENTRY_create_by_NID========= [0m
[40;42m =======pre add _ fucntion:ASN1_INTEGER_new========= [0m
[40;46m =======add node_fun stack:ASN1_INTEGER_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_BIT_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_BIT_STRING_new========= [0m
[40;42m =======pre add _ fucntion:X509_NAME_new========= [0m
[40;46m =======add node_fun stack:X509_NAME_new========= [0m
[40;42m =======pre add _ fucntion:ASN1_TIME_adj========= [0m
[40;46m =======add node_fun stack:ASN1_TIME_adj========= [0m
[40;44m =======trace_function_path ASN1_TIME_adj  function_call count: 7 level :1========  [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_free========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_free========= [0m
[40;42m =======pre add _ fucntion:BIO_snprintf========= [0m
[40;46m =======add node_fun stack:BIO_snprintf========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_set========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_set========= [0m
[40;44m =======trace_function_path ASN1_STRING_set  function_call count: 3 level :2========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_realloc========= [0m
[40;46m =======add node_fun stack:OPENSSL_realloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:ASN1_STRING_new========= [0m
[40;46m =======add node_fun stack:ASN1_STRING_new========= [0m
[40;42m =======pre add _ fucntion:is_utc========= [0m
[40;46m =======add node_fun stack:is_utc========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime_adj========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime_adj========= [0m
[40;42m =======pre add _ fucntion:OPENSSL_gmtime========= [0m
[40;46m =======add node_fun stack:OPENSSL_gmtime========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;46m =======add node_fun stack:time========= [0m
[40;42m =======pre add _ fucntion:OCSP_BASICRESP_new========= [0m
[40;46m =======add node_fun stack:OCSP_BASICRESP_new========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618edd38
    type <pointer_type 0x7fee618a9e70
        type <record_type 0x7fee618a9dc8 OCSP_BASICRESP BLK
            size <integer_cst 0x7fee61d91030 constant 512>
            unit size <integer_cst 0x7fee61e2ec18 constant 64>
            align 64 symtab 0 alias set -1 canonical type 0x7fee618a9d20 fields <field_decl 0x7fee618ab720 tbsResponseData> context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618a9e70> chain <type_decl 0x7fee618ab7b8 D.4075>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fee618e7e10 bs>
    def_stmt bs_46 = make_dummy_resp ();
    version 46
    ptr-info 0x7fee618c2d68>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fee618d97c0
    type <pointer_type 0x7fee618b2348
        type <array_type 0x7fee618b22a0 type <integer_type 0x7fee6189f930 char>
            BLK
            size <integer_cst 0x7fee618a2570 constant 56>
            unit size <integer_cst 0x7fee618a2558 constant 7>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fee618b21f8>
            pointer_to_this <pointer_type 0x7fee618b2348>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fee618d9fe0 type <array_type 0x7fee618b22a0>
        readonly constant static "test.c\000">
    test.c:339:10 start: test.c:339:10 finish: test.c:339:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618ed7e0
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _14 = EVP_sha1 ();
    version 14>
# .MEM_62 = VDEF <.MEM_61>
_14 = EVP_sha1 ();

 ================== trace ptable================== 
trace fucntion name:EVP_sha1 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---EVP_sha1-----
this other function ------EVP_sha1-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_63 = VDEF <.MEM_62>
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
test.c:340:13: warning: use location
         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
             ^
this stmt is child function---OCSP_basic_sign-----

 ================== trace ================== 
 <ssa_name 0x7fee618ed7e0
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _14 = EVP_sha1 ();
    version 14>
trace fucntion name:OCSP_basic_sign 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_18 = _17 != 0;
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================
_18 = _17 != 0;
test.c:340:13: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = (int) _18;
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================
_19 = (int) _18;
test.c:340:13: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_63>
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
test.c:340:13: warning: use location
this stmt is child function---test_true-----

 ================== trace ================== 
 <ssa_name 0x7fee618ed7e0
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _14 = EVP_sha1 ();
    version 14>
trace fucntion name:test_true 
[40;44m =======trace_function_path test_true  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_20 == 0)
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================
if (_20 == 0)
test.c:340:9: warning: use location
         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
         ^
if (_20 == 0)

 ================== find cond branch ================= 
test.c:340:9: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 13
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_69 = VDEF <.MEM_68>
OCSP_BASICRESP_free (bs_46);
bb index := 12
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================
OCSP_BASICRESP_free (bs_46);
test.c:346:5: warning: use location
     OCSP_BASICRESP_free(bs);
     ^
this stmt is child function---OCSP_BASICRESP_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618ed7e0
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _14 = EVP_sha1 ();
    version 14>
trace fucntion name:OCSP_BASICRESP_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_64>
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
bb index := 9
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 13

======================================================================
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
test.c:343:10: warning: use location
     if (!TEST_true(OCSP_resp_get0_signer(bs, &tmp, NULL))
          ^
this stmt is child function---OCSP_resp_get0_signer-----

 ================== trace ================== 
 <ssa_name 0x7fee618ed7e0
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _14 = EVP_sha1 ();
    version 14>
trace fucntion name:OCSP_resp_get0_signer 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_13 = test_ptr ("test.c", 339, "bs", bs_46);
bb index := 6
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 13

======================================================================
_13 = test_ptr ("test.c", 339, "bs", bs_46);
test.c:339:10: warning: use location
     if (!TEST_ptr(bs)
          ^
this stmt is child function---test_ptr-----

 ================== trace ================== 
 <ssa_name 0x7fee618ed7e0
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _14 = EVP_sha1 ();
    version 14>
trace fucntion name:test_ptr 
[40;44m =======trace_function_path test_ptr  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:test_fail_message========= [0m
[40;46m =======add node_fun stack:test_fail_message========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
_14 = EVP_sha1 ();
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
_14 = EVP_sha1 ();
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
_14 = EVP_sha1 ();
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
_14 = EVP_sha1 ();
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
_14 = EVP_sha1 ();
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
_14 = EVP_sha1 ();
bb index := 7
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
_14 = EVP_sha1 ();
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
_14 = EVP_sha1 ();
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
_14 = EVP_sha1 ();
bb index := 7
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
_14 = EVP_sha1 ();
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
_14 = EVP_sha1 ();
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
_14 = EVP_sha1 ();
bb index := 7
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
_14 = EVP_sha1 ();
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
_14 = EVP_sha1 ();
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_62 = VDEF <.MEM_61>
_14 = EVP_sha1 ();
bb index := 7
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================
_14 = EVP_sha1 ();
test.c:340:13: warning: use location
         || !TEST_true(OCSP_basic_sign(bs, signer, key, EVP_sha1(),
             ^
this stmt is child function---EVP_sha1-----

 ================== trace ================== 
 <ssa_name 0x7fee618ed7e0
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _14 = EVP_sha1 ();
    version 14>
trace fucntion name:EVP_sha1 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618ed7e0
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _14 = EVP_sha1 ();
    version 14>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fee618d9ae0
    type <pointer_type 0x7fee618b2348
        type <array_type 0x7fee618b22a0 type <integer_type 0x7fee6189f930 char>
            BLK
            size <integer_cst 0x7fee618a2570 constant 56>
            unit size <integer_cst 0x7fee618a2558 constant 7>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fee618b21f8>
            pointer_to_this <pointer_type 0x7fee618b2348>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fee618d9a40 type <array_type 0x7fee618b22a0>
        readonly constant static "test.c\000">
    test.c:340:13 start: test.c:340:13 finish: test.c:340:13>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fee618f1040
    type <pointer_type 0x7fee618b2348
        type <array_type 0x7fee618b22a0 type <integer_type 0x7fee6189f930 char>
            BLK
            size <integer_cst 0x7fee618a2570 constant 56>
            unit size <integer_cst 0x7fee618a2558 constant 7>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fee618b21f8>
            pointer_to_this <pointer_type 0x7fee618b2348>>
        unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fee618f1020 type <array_type 0x7fee618b22a0>
        readonly constant static "test.c\000">
    test.c:343:10 start: test.c:343:10 finish: test.c:343:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618edb40
    type <pointer_type 0x7fee618acf18
        type <record_type 0x7fee618ace70 X509 VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618acf18> chain <type_decl 0x7fee618b1098 D.4137>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee618b2690>>
   
    def_stmt _26 = tmp;
    version 26
    ptr-info 0x7fee618c2d08>
# VUSE <.MEM_66>
_26 = tmp;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_27 = X509_cmp (_26, _25);
test.c:344:13: warning: use location
         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
             ^
this stmt is child function---X509_cmp-----

 ================== trace ================== 
 <ssa_name 0x7fee618edb40
    type <pointer_type 0x7fee618acf18
        type <record_type 0x7fee618ace70 X509 VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618acf18> chain <type_decl 0x7fee618b1098 D.4137>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee618b2690>>
   
    def_stmt _26 = tmp;
    version 26
    ptr-info 0x7fee618c2d08>
trace fucntion name:X509_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_28 = TEST_int_eq (_27, 0);
test.c:344:13: warning: use location
this stmt is child function---TEST_int_eq-----

 ================== trace ================== 
 <ssa_name 0x7fee618edb40
    type <pointer_type 0x7fee618acf18
        type <record_type 0x7fee618ace70 X509 VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618acf18> chain <type_decl 0x7fee618b1098 D.4137>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee618b2690>>
   
    def_stmt _26 = tmp;
    version 26
    ptr-info 0x7fee618c2d08>
trace fucntion name:TEST_int_eq 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
if (_28 == 0)
test.c:344:9: warning: use location
         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
         ^
if (_28 == 0)

 ================== find cond branch ================= 
test.c:344:9: warning: use location
Cond in fucntion main basic block 10
 ================== possible direct basic block ================= 
from main basic block 13
 ================== possible direct basic block ================= 
from main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618edb40
    type <pointer_type 0x7fee618acf18
        type <record_type 0x7fee618ace70 X509 VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618acf18> chain <type_decl 0x7fee618b1098 D.4137>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee618b2690>>
   
    def_stmt _26 = tmp;
    version 26
    ptr-info 0x7fee618c2d08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618edb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _27 = X509_cmp (_26, _25);
    version 27>
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);

 ================== trace ptable================== 
trace fucntion name:X509_cmp 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---X509_cmp-----
this other function ------X509_cmp-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_66>
_27 = X509_cmp (_26, _25);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_27 = X509_cmp (_26, _25);
test.c:344:13: warning: use location
         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
             ^
this stmt is child function---X509_cmp-----

 ================== trace ================== 
 <ssa_name 0x7fee618edb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _27 = X509_cmp (_26, _25);
    version 27>
trace fucntion name:X509_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_68 = VDEF <.MEM_67>
_28 = TEST_int_eq (_27, 0);
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
_28 = TEST_int_eq (_27, 0);
test.c:344:13: warning: use location
this stmt is child function---TEST_int_eq-----

 ================== trace ================== 
 <ssa_name 0x7fee618edb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _27 = X509_cmp (_26, _25);
    version 27>
trace fucntion name:TEST_int_eq 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_28 == 0)
bb index := 10
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 13

======================================================================
if (_28 == 0)
test.c:344:9: warning: use location
         || !TEST_int_eq(X509_cmp(tmp, signer), 0))
         ^
if (_28 == 0)

 ================== find cond branch ================= 
test.c:344:9: warning: use location
Cond in fucntion main basic block 10
 ================== possible direct basic block ================= 
from main basic block 13
 ================== possible direct basic block ================= 
from main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618edb88
    type <integer_type 0x7fee61d895e8 int public SI
        size <integer_cst 0x7fee61d75e28 constant 32>
        unit size <integer_cst 0x7fee61d75e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fee61d895e8 precision 32 min <integer_cst 0x7fee61d75de0 -2147483648> max <integer_cst 0x7fee61d75df8 2147483647>
        pointer_to_this <pointer_type 0x7fee61d90a80>>
   
    def_stmt _27 = X509_cmp (_26, _25);
    version 27>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618edc18
    type <pointer_type 0x7fee618acf18
        type <record_type 0x7fee618ace70 X509 VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618acf18> chain <type_decl 0x7fee618b1098 D.4137>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee618b2690>>
   
    def_stmt _29 = signer;
    version 29
    ptr-info 0x7fee618c2d20>
# VUSE <.MEM_69>
_29 = signer;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
X509_free (_29);
test.c:347:5: warning: use location
     X509_free(signer);
     ^
this stmt is child function---X509_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618edc18
    type <pointer_type 0x7fee618acf18
        type <record_type 0x7fee618ace70 X509 VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618acf18> chain <type_decl 0x7fee618b1098 D.4137>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee618b2690>>
   
    def_stmt _29 = signer;
    version 29
    ptr-info 0x7fee618c2d20>
trace fucntion name:X509_free 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_8>
return _1;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_25>
return _15;
lto1: warning: use location
beacuse in succ := 11 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 11

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_25>
return _7;
lto1: warning: use location
beacuse in succ := 17 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 17

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
bb index := 12
# VUSE <.MEM_74>
return _31;
lto1: warning: use location
beacuse in succ := 13 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 13

======================================================================
# .MEM_70 = VDEF <.MEM_69>
X509_free (_29);
X509_free (_29);
test.c:347:5: warning: use location
this stmt is child function---X509_free-----

 ================== trace ================== 
 <ssa_name 0x7fee618edc18
    type <pointer_type 0x7fee618acf18
        type <record_type 0x7fee618ace70 X509 VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618acf18> chain <type_decl 0x7fee618b1098 D.4137>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee618b2690>>
   
    def_stmt _29 = signer;
    version 29
    ptr-info 0x7fee618c2d20>
trace fucntion name:X509_free 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fee618edc18
    type <pointer_type 0x7fee618acf18
        type <record_type 0x7fee618ace70 X509 VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618acf18> chain <type_decl 0x7fee618b1098 D.4137>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee618b2690>>
   
    def_stmt _29 = signer;
    version 29
    ptr-info 0x7fee618c2d20>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fee618edc60
    type <pointer_type 0x7fee618acd20
        type <record_type 0x7fee618acc78 EVP_PKEY VOID
            align 8 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fee61d80168 test.c>
            pointer_to_this <pointer_type 0x7fee618acd20> chain <type_decl 0x7fee618abed8 D.4135>>
        public unsigned DI
        size <integer_cst 0x7fee61d75be8 constant 64>
        unit size <integer_cst 0x7fee61d75c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fee618b2738>>
   
    def_stmt _30 = key;
    version 30
    ptr-info 0x7fee618c2d38>
# VUSE <.MEM_70>
_30 = key;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:test_ptr=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
if (p_3(D) != 0B)
  goto <bb 4>; [80.14%]
else
  goto <bb 3>; [19.86%]

=======is loop:0=========

 bb index 3 
<bb 3> [19.86%]:
test_fail_message (0B, file_5(D), line_6(D), "ptr", s_7(D), "NULL", "!=", "%p", p_3(D));

=======is loop:0=========

 bb index 4 
<bb 4> [100.00%]:
# _1 = PHI <1(2), 0(3)>
return _1;

=======Mapping node_fun:test_true=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
if (b_3(D) != 0)
  goto <bb 4>; [63.36%]
else
  goto <bb 3>; [36.64%]

=======is loop:0=========

 bb index 3 
<bb 3> [36.64%]:
test_fail_message (0B, file_5(D), line_6(D), "bool", s_7(D), "true", "==", "false");

=======is loop:0=========

 bb index 4 
<bb 4> [100.00%]:
# _1 = PHI <1(2), 0(3)>
return _1;

=======Mapping node_fun:ASN1_STRING_set=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
if (len_19(D) < 0)
  goto <bb 3>; [36.00%]
else
  goto <bb 5>; [64.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [36.00%]:
if (_data_18(D) == 0B)
  goto <bb 11>; [26.74%]
else
  goto <bb 4>; [73.26%]

=======is loop:0=========

 bb index 4 
<bb 4> [26.37%]:
_1 = strlen (_data_18(D));
len_21 = (int) _1;

=======is loop:0=========

 bb index 5 
<bb 5> [90.37%]:
# len_14 = PHI <len_19(D)(2), len_21(4)>
_2 = str_22(D)->length;
if (_2 <= len_14)
  goto <bb 7>; [33.00%]
else
  goto <bb 6>; [67.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [60.55%]:
_3 = str_22(D)->data;
if (_3 == 0B)
  goto <bb 7>; [30.00%]
else
  goto <bb 9>; [70.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [47.99%]:
c_23 = str_22(D)->data;
_4 = len_14 + 1;
_5 = OPENSSL_realloc (c_23, _4);
_6 = (long int) _5;
_7 = (unsigned char *) _6;
str_22(D)->data = _7;
_8 = str_22(D)->data;
if (_8 == 0B)
  goto <bb 8>; [26.74%]
else
  goto <bb 9>; [73.26%]

=======is loop:0=========

 bb index 8 
<bb 8> [12.83%]:
str_22(D)->data = c_23;
goto <bb 11>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [77.54%]:
str_22(D)->length = len_14;
if (_data_18(D) != 0B)
  goto <bb 10>; [57.44%]
else
  goto <bb 11>; [42.56%]

=======is loop:0=========

 bb index 10 
<bb 10> [44.54%]:
_9 = (long unsigned int) len_14;
_10 = str_22(D)->data;
memcpy (_10, _data_18(D), _9);
_11 = str_22(D)->data;
_12 = (sizetype) len_14;
_13 = _11 + _12;
*_13 = 0;

=======is loop:0=========

 bb index 11 
<bb 11> [100.00%]:
# _15 = PHI <0(3), 0(8), 1(9), 1(10)>
return _15;

=======Mapping node_fun:ASN1_TIME_adj=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = OPENSSL_gmtime (&t, &data);
_2 = (long int) _1;
ts_12 = (struct tm *) _2;
if (_1 == 0)
  goto <bb 17>; [9.00%]
else
  goto <bb 3>; [91.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [91.00%]:
_3 = offset_day_13(D) != 0;
_4 = offset_sec_14(D) != 0;
_5 = _3 | _4;
if (_5 != 0)
  goto <bb 4>; [50.00%]
else
  goto <bb 5>; [50.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [45.50%]:
_6 = OPENSSL_gmtime_adj (ts_12, offset_day_13(D), offset_sec_14(D));
if (_6 == 0)
  goto <bb 17>; [9.00%]
else
  goto <bb 5>; [91.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [86.91%]:
_26 = ts_12->tm_year;
_27 = is_utc (_26);
if (_27 != 0)
  goto <bb 7>; [50.00%]
else
  goto <bb 6>; [50.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [43.45%]:

=======is loop:0=========

 bb index 7 
<bb 7> [86.90%]:
# type_35 = PHI <23(5), 24(6)>
if (s_16(D) == 0B)
  goto <bb 8>; [17.43%]
else
  goto <bb 9>; [82.57%]

=======is loop:0=========

 bb index 8 
<bb 8> [15.15%]:
_30 = ASN1_STRING_new ();
_31 = (long int) _30;
tmps_32 = (struct ASN1_TIME *) _31;

=======is loop:0=========

 bb index 9 
<bb 9> [86.90%]:
# tmps_33 = PHI <s_16(D)(7), tmps_32(8)>
if (tmps_33 == 0B)
  goto <bb 16>; [7.92%]
else
  goto <bb 10>; [92.08%]

=======is loop:0=========

 bb index 10 
<bb 10> [80.02%]:
_34 = ASN1_STRING_set (tmps_33, 0B, 20);
if (_34 == 0)
  goto <bb 14> (err); [50.00%]
else
  goto <bb 11>; [50.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [40.01%]:
tmps_33->type = type_35;
p_36 = tmps_33->data;
if (type_35 == 24)
  goto <bb 12>; [34.00%]
else
  goto <bb 13>; [66.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [13.60%]:
_37 = ts_12->tm_sec;
_38 = ts_12->tm_min;
_39 = ts_12->tm_hour;
_40 = ts_12->tm_mday;
_41 = ts_12->tm_mon;
_42 = _41 + 1;
_43 = ts_12->tm_year;
_44 = _43 + 1900;
_45 = BIO_snprintf (p_36, 20, "%04d%02d%02d%02d%02d%02dZ", _44, _42, _40, _39, _38, _37);
tmps_33->length = _45;
goto <bb 16>; [100.00%]

=======is loop:0=========

 bb index 13 
<bb 13> [26.41%]:
_46 = ts_12->tm_sec;
_47 = ts_12->tm_min;
_48 = ts_12->tm_hour;
_49 = ts_12->tm_mday;
_50 = ts_12->tm_mon;
_51 = _50 + 1;
_52 = ts_12->tm_year;
_53 = _52 % 100;
_54 = BIO_snprintf (p_36, 20, "%02d%02d%02d%02d%02d%02dZ", _53, _51, _49, _48, _47, _46);
tmps_33->length = _54;
goto <bb 16>; [100.00%]

=======is loop:0=========

 bb index 14 
# tmps_55 = PHI <tmps_33(10)>
err [40.01%]:
if (s_16(D) != tmps_55)
  goto <bb 15>; [53.47%]
else
  goto <bb 16>; [46.53%]

=======is loop:0=========

 bb index 15 
<bb 15> [21.39%]:
ASN1_STRING_free (tmps_55);

=======is loop:0=========

 bb index 16 
<bb 16> [86.90%]:
# _56 = PHI <0B(9), tmps_33(12), tmps_33(13), 0B(14), 0B(15)>
_68 = _56;
_18 = _68;

=======is loop:0=========

 bb index 17 
<bb 17> [100.00%]:
# _7 = PHI <0B(2), 0B(4), _18(16)>
data ={v} {CLOBBER};
return _7;

=======Mapping node_fun:make_dummy_resp=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
namestr = "openssl.example.com";
keybytes = {};
keybytes[0] = 7;
_1 = OCSP_BASICRESP_new ();
_2 = (long int) _1;
bs_34 = (struct OCSP_BASICRESP *) _2;
_3 = time (0B);
_4 = (long int) _3;
_89 = ASN1_TIME_adj (0B, _4, 0, 0);
_107 = _89;
thisupd_37 = _107;
_5 = time (0B);
_6 = _5 + 200;
_7 = (long int) _6;
_88 = ASN1_TIME_adj (0B, _7, 0, 0);
_109 = _88;
nextupd_40 = _109;
_8 = X509_NAME_new ();
_9 = (long int) _8;
name_42 = (void *) _9;
_10 = ASN1_BIT_STRING_new ();
_11 = (long int) _10;
key_44 = (struct ASN1_BIT_STRING *) _11;
_12 = ASN1_INTEGER_new ();
_13 = (long int) _12;
serial_46 = (struct ASN1_INTEGER *) _13;
_83 = X509_NAME_ENTRY_create_by_NID (0B, 13, 4097, &namestr, -1);
_84 = (long int) _83;
ne_85 = (void *) _84;
if (_83 == 0)
  goto <bb 4>; [63.36%]
else
  goto <bb 3>; [36.64%]

=======is loop:0=========

 bb index 3 
<bb 3> [36.64%]:
ret_86 = X509_NAME_add_entry (name_42, ne_85, -1, 1);
X509_NAME_ENTRY_free (ne_85);

=======is loop:0=========

 bb index 4 
<bb 4> [100.00%]:
# _87 = PHI <0(2), ret_86(3)>
_113 = _87;
_14 = _113;
if (_14 == 0)
  goto <bb 17>; [16.72%]
else
  goto <bb 5>; [83.28%]

=======is loop:0=========

 bb index 5 
<bb 5> [83.28%]:
_90 = ASN1_STRING_set (key_44, &keybytes, 1);
_115 = _90;
_15 = _115;
if (_15 == 0)
  goto <bb 17>; [16.72%]
else
  goto <bb 6>; [83.28%]

=======is loop:0=========

 bb index 6 
<bb 6> [69.36%]:
_16 = EVP_sha256 ();
_17 = OCSP_cert_id_new (_16, name_42, key_44, serial_46);
_18 = (long int) _17;
cid_51 = (struct OCSP_CERTID *) _18;
_19 = test_ptr ("test.c", 302, "bs", bs_34);
if (_19 == 0)
  goto <bb 17>; [16.72%]
else
  goto <bb 7>; [83.28%]

=======is loop:0=========

 bb index 7 
<bb 7> [57.76%]:
_20 = test_ptr ("test.c", 303, "thisupd", thisupd_37);
if (_20 == 0)
  goto <bb 17>; [16.72%]
else
  goto <bb 8>; [83.28%]

=======is loop:0=========

 bb index 8 
<bb 8> [48.10%]:
_21 = test_ptr ("test.c", 304, "nextupd", nextupd_40);
if (_21 == 0)
  goto <bb 17>; [16.72%]
else
  goto <bb 9>; [83.28%]

=======is loop:0=========

 bb index 9 
<bb 9> [40.06%]:
_22 = test_ptr ("test.c", 305, "cid", cid_51);
if (_22 == 0)
  goto <bb 17>; [16.72%]
else
  goto <bb 10>; [83.28%]

=======is loop:0=========

 bb index 10 
<bb 10> [33.36%]:
_91 = bs_34->tbsResponseData.responses;
if (_91 == 0B)
  goto <bb 11>; [30.00%]
else
  goto <bb 12>; [70.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [10.01%]:
_92 = sk_OCSP_SINGLERESP_new_null ();
_93 = (long int) _92;
_94 = (struct OCSP_SINGLERESP *) _93;
bs_34->tbsResponseData.responses = _94;
_95 = bs_34->tbsResponseData.responses;
if (_95 == 0B)
  goto <bb 14> (err); [30.00%]
else
  goto <bb 12>; [70.00%]

=======is loop:0=========

 bb index 12 
<bb 12> [30.36%]:
_96 = OCSP_CERTID_dup (cid_51);
_97 = (long int) _96;
_98 = (struct OCSP_CERTID *) _97;
MEM[(struct OCSP_SINGLERESP *)0B].certId = _98;
_99 = MEM[(struct OCSP_SINGLERESP *)0B].certId;
if (_99 == 0B)
  goto <bb 14> (err); [46.53%]
else
  goto <bb 13>; [53.47%]

=======is loop:0=========

 bb index 13 
<bb 13> [16.23%]:
_100 = bs_34->tbsResponseData.responses;
_101 = sk_OCSP_SINGLERESP_push (_100, 0B);
if (_101 == 0)
  goto <bb 14> (err); [54.00%]
else
  goto <bb 15>; [46.00%]

=======is loop:0=========

 bb index 14 
err [25.89%]:
OCSP_SINGLERESP_free (0B);

=======is loop:0=========

 bb index 15 
<bb 15> [33.36%]:
_122 = 0B;
_23 = _122;
_24 = _23 != 0B;
_25 = (int) _24;
_26 = test_true ("test.c", 308, "OCSP_basic_add1_status(bs, cid, V_OCSP_CERTSTATUS_UNKNOWN, 0, NULL, thisupd, nextupd)", _25);
if (_26 == 0)
  goto <bb 17>; [16.72%]
else
  goto <bb 16>; [83.28%]

=======is loop:0=========

 bb index 16 
<bb 16> [27.78%]:
ASN1_TIME_free (thisupd_37);
ASN1_TIME_free (nextupd_40);
ASN1_BIT_STRING_free (key_44);
ASN1_INTEGER_free (serial_46);
OCSP_CERTID_free (cid_51);
X509_NAME_free (name_42);

=======is loop:0=========

 bb index 17 
<bb 17> [100.00%]:
# _27 = PHI <0B(4), 0B(5), 0B(6), 0B(7), 0B(8), 0B(9), 0B(15), bs_34(16)>
namestr ={v} {CLOBBER};
keybytes ={v} {CLOBBER};
return _27;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
signer = 0B;
key = 0B;
bs_37 = make_dummy_resp ();
_1 = test_ptr ("test.c", 329, "bs", bs_37);
if (_1 == 0)
  goto <bb 13>; [63.36%]
else
  goto <bb 3>; [36.64%]

=======is loop:0=========

 bb index 3 
<bb 3> [36.64%]:
_2 = get_cert_and_key (&signer, &key);
_3 = _2 != 0;
_4 = (int) _3;
_5 = test_true ("test.c", 330, "get_cert_and_key(&signer, &key)", _4);
if (_5 == 0)
  goto <bb 13>; [63.36%]
else
  goto <bb 4>; [36.64%]

=======is loop:0=========

 bb index 4 
<bb 4> [13.42%]:
_6 = EVP_sha1 ();
_7 = key;
_8 = signer;
_9 = OCSP_basic_sign (bs_37, _8, _7, _6, 0B, 1);
_10 = _9 != 0;
_11 = (int) _10;
_12 = test_true ("test.c", 332, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, OCSP_NOCERTS)", _11);
if (_12 == 0)
  goto <bb 13>; [63.36%]
else
  goto <bb 6>; [36.64%]

=======is loop:0=========

 bb index 6 
<bb 6> [4.92%]:
OCSP_BASICRESP_free (bs_37);
bs_46 = make_dummy_resp ();
tmp = 0B;
_13 = test_ptr ("test.c", 339, "bs", bs_46);
if (_13 == 0)
  goto <bb 13>; [63.36%]
else
  goto <bb 7>; [36.64%]

=======is loop:0=========

 bb index 7 
<bb 7> [1.80%]:
_14 = EVP_sha1 ();
_15 = key;
_16 = signer;
_17 = OCSP_basic_sign (bs_46, _16, _15, _14, 0B, 0);
_18 = _17 != 0;
_19 = (int) _18;
_20 = test_true ("test.c", 341, "OCSP_basic_sign(bs, signer, key, EVP_sha1(), NULL, 0)", _19);
if (_20 == 0)
  goto <bb 13>; [63.36%]
else
  goto <bb 9>; [36.64%]

=======is loop:0=========

 bb index 9 
<bb 9> [0.66%]:
_21 = OCSP_resp_get0_signer (bs_46, &tmp, 0B);
_22 = _21 != 0;
_23 = (int) _22;
_24 = test_true ("test.c", 343, "OCSP_resp_get0_signer(bs, &tmp, NULL)", _23);
if (_24 == 0)
  goto <bb 13>; [63.36%]
else
  goto <bb 10>; [36.64%]

=======is loop:0=========

 bb index 10 
<bb 10> [0.24%]:
_25 = signer;
_26 = tmp;
_27 = X509_cmp (_26, _25);
_28 = TEST_int_eq (_27, 0);
if (_28 == 0)
  goto <bb 13>; [63.36%]
else
  goto <bb 12>; [36.64%]

=======is loop:0=========

 bb index 12 
<bb 12> [0.09%]:
OCSP_BASICRESP_free (bs_46);
_29 = signer;
X509_free (_29);
_30 = key;
EVP_PKEY_free (_30);

=======is loop:0=========

 bb index 13 
<bb 13> [100.00%]:
# _31 = PHI <0(2), 0(3), 0(4), 0(6), 0(7), 0(9), 0(10), 1(12)>
signer ={v} {CLOBBER};
tmp ={v} {CLOBBER};
key ={v} {CLOBBER};
return _31;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 30 [0m
[40;34m    used_stmt array stack totalsize of : 12664 [0m
[40;34m    collect time: : 0.000899 s [0m
[40;34m    algorithm time: 0.316496 s [0m
[40;34m    gimple stmt count : : 218 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
/usr/bin/ld: /tmp/ccYJhSzq.ltrans0.ltrans.o: in function `ASN1_STRING_set':
<artificial>:(.text+0x87): undefined reference to `OPENSSL_realloc'
/usr/bin/ld: /tmp/ccYJhSzq.ltrans0.ltrans.o: in function `ASN1_TIME_adj':
<artificial>:(.text+0xd6): undefined reference to `OPENSSL_gmtime'
/usr/bin/ld: <artificial>:(.text+0xff): undefined reference to `is_utc'
/usr/bin/ld: <artificial>:(.text+0x188): undefined reference to `BIO_snprintf'
/usr/bin/ld: <artificial>:(.text+0x1c3): undefined reference to `OPENSSL_gmtime_adj'
/usr/bin/ld: <artificial>:(.text+0x1dc): undefined reference to `ASN1_STRING_new'
/usr/bin/ld: <artificial>:(.text+0x212): undefined reference to `ASN1_STRING_free'
/usr/bin/ld: <artificial>:(.text+0x253): undefined reference to `BIO_snprintf'
/usr/bin/ld: /tmp/ccYJhSzq.ltrans0.ltrans.o: in function `test_ptr':
<artificial>:(.text+0x2bd): undefined reference to `test_fail_message'
/usr/bin/ld: /tmp/ccYJhSzq.ltrans0.ltrans.o: in function `test_true':
<artificial>:(.text+0x309): undefined reference to `test_fail_message'
/usr/bin/ld: /tmp/ccYJhSzq.ltrans0.ltrans.o: in function `make_dummy_resp':
<artificial>:(.text+0x377): undefined reference to `OCSP_BASICRESP_new'
/usr/bin/ld: <artificial>:(.text+0x3dd): undefined reference to `X509_NAME_new'
/usr/bin/ld: <artificial>:(.text+0x3ea): undefined reference to `ASN1_BIT_STRING_new'
/usr/bin/ld: <artificial>:(.text+0x3f7): undefined reference to `ASN1_INTEGER_new'
/usr/bin/ld: <artificial>:(.text+0x41e): undefined reference to `X509_NAME_ENTRY_create_by_NID'
/usr/bin/ld: <artificial>:(.text+0x473): undefined reference to `X509_NAME_add_entry'
/usr/bin/ld: <artificial>:(.text+0x484): undefined reference to `X509_NAME_ENTRY_free'
/usr/bin/ld: <artificial>:(.text+0x4ba): undefined reference to `EVP_sha256'
/usr/bin/ld: <artificial>:(.text+0x4cf): undefined reference to `OCSP_cert_id_new'
/usr/bin/ld: <artificial>:(.text+0x57a): undefined reference to `OCSP_CERTID_dup'
/usr/bin/ld: <artificial>:(.text+0x59c): undefined reference to `sk_OCSP_SINGLERESP_push'
/usr/bin/ld: <artificial>:(.text+0x5af): undefined reference to `OCSP_SINGLERESP_free'
/usr/bin/ld: <artificial>:(.text+0x5e1): undefined reference to `ASN1_TIME_free'
/usr/bin/ld: <artificial>:(.text+0x5ef): undefined reference to `ASN1_TIME_free'
/usr/bin/ld: <artificial>:(.text+0x5fc): undefined reference to `ASN1_BIT_STRING_free'
/usr/bin/ld: <artificial>:(.text+0x609): undefined reference to `ASN1_INTEGER_free'
/usr/bin/ld: <artificial>:(.text+0x616): undefined reference to `OCSP_CERTID_free'
/usr/bin/ld: <artificial>:(.text+0x623): undefined reference to `X509_NAME_free'
/usr/bin/ld: <artificial>:(.text+0x632): undefined reference to `sk_OCSP_SINGLERESP_new_null'
/usr/bin/ld: /tmp/ccYJhSzq.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x700): undefined reference to `get_cert_and_key'
/usr/bin/ld: <artificial>:(.text+0x72e): undefined reference to `EVP_sha1'
/usr/bin/ld: <artificial>:(.text+0x752): undefined reference to `OCSP_basic_sign'
/usr/bin/ld: <artificial>:(.text+0x787): undefined reference to `OCSP_BASICRESP_free'
/usr/bin/ld: <artificial>:(.text+0x7c5): undefined reference to `EVP_sha1'
/usr/bin/ld: <artificial>:(.text+0x7e9): undefined reference to `OCSP_basic_sign'
/usr/bin/ld: <artificial>:(.text+0x828): undefined reference to `OCSP_resp_get0_signer'
/usr/bin/ld: <artificial>:(.text+0x864): undefined reference to `X509_cmp'
/usr/bin/ld: <artificial>:(.text+0x875): undefined reference to `TEST_int_eq'
/usr/bin/ld: <artificial>:(.text+0x88a): undefined reference to `OCSP_BASICRESP_free'
/usr/bin/ld: <artificial>:(.text+0x899): undefined reference to `X509_free'
/usr/bin/ld: <artificial>:(.text+0x8a7): undefined reference to `EVP_PKEY_free'
collect2: error: ld returned 1 exit status
