In file included from test.c:6:0:
common.h: In function ‘discard_my_cleanups’:
common.h:94:21: warning: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘void *’ [-Wformat=]
   printf("freearg: %x\n", ptr->arg);
                    ~^     ~~~~~~~~
                    %p
common.h: In function ‘do_my_cleanups’:
common.h:108:13: warning: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘void *’ [-Wformat=]
    printf("%x\n", ptr->arg);
            ~^     ~~~~~~~~
            %p
test.c: At top level:
test.c:17:26: warning: ‘struct symbol’ declared inside parameter list will not be visible outside of this definition or declaration
 find_oload_champ (struct symbol **oload_syms,
                          ^~~~~~
test.c:37:10: warning: ‘struct symbol’ declared inside parameter list will not be visible outside of this definition or declaration
   struct symbol ***oload_syms,
          ^~~~~~
test.c: In function ‘find_oload_champ_namespace_loop’:
test.c:54:17: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
  int name_len = strlen(qualified_name);
                 ^~~~~~
test.c:54:17: warning: incompatible implicit declaration of built-in function ‘strlen’
test.c:54:17: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
test.c:82:39: warning: passing argument 1 of ‘find_oload_champ’ from incompatible pointer type [-Wincompatible-pointer-types]
   new_oload_champ = find_oload_champ (new_oload_syms, &new_oload_champ_bv);
                                       ^~~~~~~~~~~~~~
test.c:17:1: note: expected ‘struct symbol **’ but argument is of type ‘struct symbol **’
 find_oload_champ (struct symbol **oload_syms,
 ^~~~~~~~~~~~~~~~
test.c: In function ‘main’:
test.c:115:48: warning: passing argument 3 of ‘find_oload_champ_namespace_loop’ from incompatible pointer type [-Wincompatible-pointer-types]
  find_oload_champ_namespace_loop(namespace, 1, &symvec, &bvvec, &oload_champ);
                                                ^
test.c:34:1: note: expected ‘struct symbol ***’ but argument is of type ‘symbol ** (*)[10] {aka char ** (*)[10]}’
 find_oload_champ_namespace_loop (
 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
test.c:115:57: warning: passing argument 4 of ‘find_oload_champ_namespace_loop’ from incompatible pointer type [-Wincompatible-pointer-types]
  find_oload_champ_namespace_loop(namespace, 1, &symvec, &bvvec, &oload_champ);
                                                         ^
test.c:34:1: note: expected ‘struct badness_vector **’ but argument is of type ‘struct badness_vector * (*)[10]’
 find_oload_champ_namespace_loop (
 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
=======ipa_pta=========
 <ssa_name 0x7fa656695bd0
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa657422cf0 ptr>
    def_stmt ptr_10 = *pmy_chain_9(D);
    version 10
    ptr-info 0x7fa6561d7fc0>
 <ssa_name 0x7fa6561f20d8
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa657422f30 ptr>
    def_stmt ptr_12 = *pmy_chain_11(D);
    version 12
    ptr-info 0x7fa6562050c0>
 <ssa_name 0x7fa6561f7cf0
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa6561fa990 new>
    def_stmt new_70 = malloc (32);
    version 70
    ptr-info 0x7fa656205270>
====================POINTER_TYPE============================
 <ssa_name 0x7fa6561f7e10
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa6561ff120 new>
    def_stmt new_74 = malloc (32);
    version 74
    ptr-info 0x7fa6562052d0>
====================POINTER_TYPE============================
 <ssa_name 0x7fa6561f2c60
    type <pointer_type 0x7fa6561d42a0
        type <pointer_type 0x7fa6561d4348 type <record_type 0x7fa6561d43f0 symbol>
            public unsigned DI
            size <integer_cst 0x7fa65668dbe8 constant 64>
            unit size <integer_cst 0x7fa65668dc00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa6561d42a0>>
        public unsigned DI size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561d41f8>>
    var <var_decl 0x7fa6561f0480 new_oload_syms>
    def_stmt new_oload_syms_38 = malloc (800);
    version 38
    ptr-info 0x7fa656205210>
====================POINTER_TYPE============================
 <ssa_name 0x7fa656200120
    type <pointer_type 0x7fa6561d4c78
        type <record_type 0x7fa6561d4bd0 badness_vector TI
            size <integer_cst 0x7fa65668dc30 constant 128>
            unit size <integer_cst 0x7fa65668dc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4bd0 fields <field_decl 0x7fa6561d64c0 length> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d4c78> chain <type_decl 0x7fa6561d6558 D.3994>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561d4d20>>
    var <var_decl 0x7fa6561ff6c0 bv>
    def_stmt bv_79 = malloc (16);
    version 79
    ptr-info 0x7fa656205318>
====================POINTER_TYPE============================
 <ssa_name 0x7fa6561f2c60
    type <pointer_type 0x7fa6561d42a0
        type <pointer_type 0x7fa6561d4348 type <record_type 0x7fa6561d43f0 symbol>
            public unsigned DI
            size <integer_cst 0x7fa65668dbe8 constant 64>
            unit size <integer_cst 0x7fa65668dc00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa6561d42a0>>
        public unsigned DI size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561d41f8>>
    var <var_decl 0x7fa6561f0480 new_oload_syms>
    def_stmt new_oload_syms_38 = malloc (800);
    version 38
    ptr-info 0x7fa656205210>
 <ssa_name 0x7fa6561f2870
    type <pointer_type 0x7fa6561d4c78
        type <record_type 0x7fa6561d4bd0 badness_vector TI
            size <integer_cst 0x7fa65668dc30 constant 128>
            unit size <integer_cst 0x7fa65668dc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4bd0 fields <field_decl 0x7fa6561d64c0 length> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d4c78> chain <type_decl 0x7fa6561d6558 D.3994>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561d4d20>>
   
    def_stmt _14 = new_oload_champ_bv_107;
    version 14
    ptr-info 0x7fa656205150>
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
------------------------------
# VUSE <.MEM_17>
_1 = ptr_10->next;
 <component_ref 0x7fa65668c600
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
   
    arg 0 <mem_ref 0x7fa6561ebe60 type <record_type 0x7fa6561d4a80 cleanup>
       
        arg 0 <ssa_name 0x7fa656695bd0 type <pointer_type 0x7fa6561d49d8>
            var <var_decl 0x7fa657422cf0 ptr>
            def_stmt ptr_10 = *pmy_chain_9(D);
            version 10
            ptr-info 0x7fa6561d7fc0>
        arg 1 <integer_cst 0x7fa6561d7c90 constant 0>
        common.h:88:23 start: common.h:88:23 finish: common.h:88:23>
    arg 1 <field_decl 0x7fa6561d62f8 next type <pointer_type 0x7fa6561d49d8>
        unsigned DI file common.h line 38 col 19 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7fa65668dc18 constant 0>
        bit offset <integer_cst 0x7fa65668dc60 constant 0> context <record_type 0x7fa6561d4a80 cleanup>
        chain <field_decl 0x7fa6561d6260 function type <pointer_type 0x7fa6561d4930>
            unsigned DI file common.h line 39 col 10 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
            align 64 offset_align 128 offset <integer_cst 0x7fa65668dc18 0> bit offset <integer_cst 0x7fa65668dbe8 64> context <record_type 0x7fa6561d4a80 cleanup> chain <field_decl 0x7fa6561d61c8 free_arg>>>
    common.h:88:23 start: common.h:88:23 finish: common.h:88:23>
------------------------------
# VUSE <.MEM_20>
_2 = ptr_10->free_arg;
 <component_ref 0x7fa65668c630
    type <pointer_type 0x7fa6561d4930
        type <function_type 0x7fa6561d4888 type <void_type 0x7fa6566a1f18 void>
            QI
            size <integer_cst 0x7fa65668dcd8 constant 8>
            unit size <integer_cst 0x7fa65668dcf0 constant 1>
            align 8 symtab 0 alias set -1 structural equality
            arg-types <tree_list 0x7fa6561d3a00 value <pointer_type 0x7fa6566a80a8>
                chain <tree_list 0x7fa6566a0ac8 value <void_type 0x7fa6566a1f18 void>>> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d4930>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <mem_ref 0x7fa6561ebeb0
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
       
        arg 0 <ssa_name 0x7fa656695bd0 type <pointer_type 0x7fa6561d49d8>
            var <var_decl 0x7fa657422cf0 ptr>
            def_stmt ptr_10 = *pmy_chain_9(D);
            version 10
            ptr-info 0x7fa6561d7fc0>
        arg 1 <integer_cst 0x7fa6561d7c90 constant 0>
        common.h:89:14 start: common.h:89:14 finish: common.h:89:14>
    arg 1 <field_decl 0x7fa6561d61c8 free_arg type <pointer_type 0x7fa6561d4930>
        unsigned DI file common.h line 40 col 10 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7fa65668dc48 constant 16>
        bit offset <integer_cst 0x7fa65668dc60 constant 0> context <record_type 0x7fa6561d4a80 cleanup>
        chain <field_decl 0x7fa6561d6130 arg type <pointer_type 0x7fa6566a80a8>
            unsigned DI file common.h line 41 col 9 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
            align 64 offset_align 128 offset <integer_cst 0x7fa65668dc48 16> bit offset <integer_cst 0x7fa65668dbe8 64> context <record_type 0x7fa6561d4a80 cleanup>>>
    common.h:89:14 start: common.h:89:14 finish: common.h:89:14>
------------------------------
# VUSE <.MEM_20>
_3 = ptr_10->free_arg;
 <component_ref 0x7fa65668c660
    type <pointer_type 0x7fa6561d4930
        type <function_type 0x7fa6561d4888 type <void_type 0x7fa6566a1f18 void>
            QI
            size <integer_cst 0x7fa65668dcd8 constant 8>
            unit size <integer_cst 0x7fa65668dcf0 constant 1>
            align 8 symtab 0 alias set -1 structural equality
            arg-types <tree_list 0x7fa6561d3a00 value <pointer_type 0x7fa6566a80a8>
                chain <tree_list 0x7fa6566a0ac8 value <void_type 0x7fa6566a1f18 void>>> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d4930>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <mem_ref 0x7fa6561ebed8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
       
        arg 0 <ssa_name 0x7fa656695bd0 type <pointer_type 0x7fa6561d49d8>
            var <var_decl 0x7fa657422cf0 ptr>
            def_stmt ptr_10 = *pmy_chain_9(D);
            version 10
            ptr-info 0x7fa6561d7fc0>
        arg 1 <integer_cst 0x7fa6561d7c90 constant 0>
        common.h:90:7 start: common.h:90:7 finish: common.h:90:7>
    arg 1 <field_decl 0x7fa6561d61c8 free_arg type <pointer_type 0x7fa6561d4930>
        unsigned DI file common.h line 40 col 10 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7fa65668dc48 constant 16>
        bit offset <integer_cst 0x7fa65668dc60 constant 0> context <record_type 0x7fa6561d4a80 cleanup>
        chain <field_decl 0x7fa6561d6130 arg type <pointer_type 0x7fa6566a80a8>
            unsigned DI file common.h line 41 col 9 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
            align 64 offset_align 128 offset <integer_cst 0x7fa65668dc48 16> bit offset <integer_cst 0x7fa65668dbe8 64> context <record_type 0x7fa6561d4a80 cleanup>>>
    common.h:90:3 start: common.h:90:3 finish: common.h:90:3>
------------------------------
# VUSE <.MEM_20>
_4 = ptr_10->arg;
 <component_ref 0x7fa65668c690
    type <pointer_type 0x7fa6566a80a8
        type <void_type 0x7fa6566a1f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa6566a80a8>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6566adbd0>>
   
    arg 0 <mem_ref 0x7fa6561ebf00
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
       
        arg 0 <ssa_name 0x7fa656695bd0 type <pointer_type 0x7fa6561d49d8>
            var <var_decl 0x7fa657422cf0 ptr>
            def_stmt ptr_10 = *pmy_chain_9(D);
            version 10
            ptr-info 0x7fa6561d7fc0>
        arg 1 <integer_cst 0x7fa6561d7c90 constant 0>
        common.h:90:23 start: common.h:90:23 finish: common.h:90:23>
    arg 1 <field_decl 0x7fa6561d6130 arg type <pointer_type 0x7fa6566a80a8>
        unsigned DI file common.h line 41 col 9 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7fa65668dc48 constant 16> bit offset <integer_cst 0x7fa65668dbe8 64> context <record_type 0x7fa6561d4a80 cleanup>>
    common.h:90:3 start: common.h:90:3 finish: common.h:90:3>
------------------------------
# VUSE <.MEM_17>
ptr_10 = *pmy_chain_9(D);
 <mem_ref 0x7fa6561ebf28
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
   
    arg 0 <ssa_name 0x7fa656695b88
        type <pointer_type 0x7fa6561dc1f8 type <pointer_type 0x7fa6561d49d8>
            public unsigned DI size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
            align 64 symtab 0 alias set -1 structural equality>
        var <parm_decl 0x7fa6561df300 pmy_chain>
        def_stmt GIMPLE_NOP
        version 9
        ptr-info 0x7fa6561d7fa8>
    arg 1 <integer_cst 0x7fa6561d7ca8 type <pointer_type 0x7fa6561dc1f8> constant 0>
    common.h:86:17 start: common.h:86:17 finish: common.h:86:17>
------------------------------
# VUSE <.MEM_17>
_5 = ptr_10->arg;
 <component_ref 0x7fa65668c6c0
    type <pointer_type 0x7fa6566a80a8
        type <void_type 0x7fa6566a1f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa6566a80a8>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6566adbd0>>
   
    arg 0 <mem_ref 0x7fa6561ebf50
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
       
        arg 0 <ssa_name 0x7fa656695bd0 type <pointer_type 0x7fa6561d49d8>
            var <var_decl 0x7fa657422cf0 ptr>
            def_stmt ptr_10 = *pmy_chain_9(D);
            version 10
            ptr-info 0x7fa6561d7fc0>
        arg 1 <integer_cst 0x7fa6561d7c90 constant 0>
        common.h:94:30 start: common.h:94:30 finish: common.h:94:30>
    arg 1 <field_decl 0x7fa6561d6130 arg type <pointer_type 0x7fa6566a80a8>
        unsigned DI file common.h line 41 col 9 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7fa65668dc48 constant 16> bit offset <integer_cst 0x7fa65668dbe8 64> context <record_type 0x7fa6561d4a80 cleanup>>
    common.h:94:3 start: common.h:94:3 finish: common.h:94:3>
------------------------------
# VUSE <.MEM_21>
_1 = ptr_12->next;
 <component_ref 0x7fa65668c750
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
   
    arg 0 <mem_ref 0x7fa6561f12d0 type <record_type 0x7fa6561d4a80 cleanup>
       
        arg 0 <ssa_name 0x7fa6561f20d8 type <pointer_type 0x7fa6561d49d8>
            var <var_decl 0x7fa657422f30 ptr>
            def_stmt ptr_12 = *pmy_chain_11(D);
            version 12
            ptr-info 0x7fa6562050c0>
        arg 1 <integer_cst 0x7fa6561d7c90 constant 0>
        common.h:105:23 start: common.h:105:23 finish: common.h:105:23>
    arg 1 <field_decl 0x7fa6561d62f8 next type <pointer_type 0x7fa6561d49d8>
        unsigned DI file common.h line 38 col 19 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7fa65668dc18 constant 0>
        bit offset <integer_cst 0x7fa65668dc60 constant 0> context <record_type 0x7fa6561d4a80 cleanup>
        chain <field_decl 0x7fa6561d6260 function type <pointer_type 0x7fa6561d4930>
            unsigned DI file common.h line 39 col 10 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
            align 64 offset_align 128 offset <integer_cst 0x7fa65668dc18 0> bit offset <integer_cst 0x7fa65668dbe8 64> context <record_type 0x7fa6561d4a80 cleanup> chain <field_decl 0x7fa6561d61c8 free_arg>>>
    common.h:105:23 start: common.h:105:23 finish: common.h:105:23>
------------------------------
# VUSE <.MEM_23>
_2 = ptr_12->function;
 <component_ref 0x7fa65668c780
    type <pointer_type 0x7fa6561d4930
        type <function_type 0x7fa6561d4888 type <void_type 0x7fa6566a1f18 void>
            QI
            size <integer_cst 0x7fa65668dcd8 constant 8>
            unit size <integer_cst 0x7fa65668dcf0 constant 1>
            align 8 symtab 0 alias set -1 structural equality
            arg-types <tree_list 0x7fa6561d3a00 value <pointer_type 0x7fa6566a80a8>
                chain <tree_list 0x7fa6566a0ac8 value <void_type 0x7fa6566a1f18 void>>> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d4930>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <mem_ref 0x7fa6561f1320
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
       
        arg 0 <ssa_name 0x7fa6561f20d8 type <pointer_type 0x7fa6561d49d8>
            var <var_decl 0x7fa657422f30 ptr>
            def_stmt ptr_12 = *pmy_chain_11(D);
            version 12
            ptr-info 0x7fa6562050c0>
        arg 1 <integer_cst 0x7fa6561d7c90 constant 0>
        common.h:106:12 start: common.h:106:12 finish: common.h:106:12>
    arg 1 <field_decl 0x7fa6561d6260 function type <pointer_type 0x7fa6561d4930>
        unsigned DI file common.h line 39 col 10 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7fa65668dc18 constant 0> bit offset <integer_cst 0x7fa65668dbe8 64> context <record_type 0x7fa6561d4a80 cleanup>
        chain <field_decl 0x7fa6561d61c8 free_arg type <pointer_type 0x7fa6561d4930>
            unsigned DI file common.h line 40 col 10 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
            align 64 offset_align 128
            offset <integer_cst 0x7fa65668dc48 constant 16>
            bit offset <integer_cst 0x7fa65668dc60 constant 0> context <record_type 0x7fa6561d4a80 cleanup> chain <field_decl 0x7fa6561d6130 arg>>>
    common.h:106:8 start: common.h:106:8 finish: common.h:106:8>
------------------------------
# VUSE <.MEM_23>
_3 = ptr_12->arg;
 <component_ref 0x7fa65668c7b0
    type <pointer_type 0x7fa6566a80a8
        type <void_type 0x7fa6566a1f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa6566a80a8>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6566adbd0>>
   
    arg 0 <mem_ref 0x7fa6561f1348
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
       
        arg 0 <ssa_name 0x7fa6561f20d8 type <pointer_type 0x7fa6561d49d8>
            var <var_decl 0x7fa657422f30 ptr>
            def_stmt ptr_12 = *pmy_chain_11(D);
            version 12
            ptr-info 0x7fa6562050c0>
        arg 1 <integer_cst 0x7fa6561d7c90 constant 0>
        common.h:106:28 start: common.h:106:28 finish: common.h:106:28>
    arg 1 <field_decl 0x7fa6561d6130 arg type <pointer_type 0x7fa6566a80a8>
        unsigned DI file common.h line 41 col 9 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7fa65668dc48 constant 16> bit offset <integer_cst 0x7fa65668dbe8 64> context <record_type 0x7fa6561d4a80 cleanup>>
    common.h:106:8 start: common.h:106:8 finish: common.h:106:8>
------------------------------
# VUSE <.MEM_25>
_4 = ptr_12->arg;
 <component_ref 0x7fa65668c810
    type <pointer_type 0x7fa6566a80a8
        type <void_type 0x7fa6566a1f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa6566a80a8>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6566adbd0>>
   
    arg 0 <mem_ref 0x7fa6561f1370
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
       
        arg 0 <ssa_name 0x7fa6561f20d8 type <pointer_type 0x7fa6561d49d8>
            var <var_decl 0x7fa657422f30 ptr>
            def_stmt ptr_12 = *pmy_chain_11(D);
            version 12
            ptr-info 0x7fa6562050c0>
        arg 1 <integer_cst 0x7fa6561d7c90 constant 0>
        common.h:108:22 start: common.h:108:22 finish: common.h:108:22>
    arg 1 <field_decl 0x7fa6561d6130 arg type <pointer_type 0x7fa6566a80a8>
        unsigned DI file common.h line 41 col 9 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7fa65668dc48 constant 16> bit offset <integer_cst 0x7fa65668dbe8 64> context <record_type 0x7fa6561d4a80 cleanup>>
    common.h:108:4 start: common.h:108:4 finish: common.h:108:4>
------------------------------
# VUSE <.MEM_26>
_5 = ptr_12->free_arg;
 <component_ref 0x7fa65668c840
    type <pointer_type 0x7fa6561d4930
        type <function_type 0x7fa6561d4888 type <void_type 0x7fa6566a1f18 void>
            QI
            size <integer_cst 0x7fa65668dcd8 constant 8>
            unit size <integer_cst 0x7fa65668dcf0 constant 1>
            align 8 symtab 0 alias set -1 structural equality
            arg-types <tree_list 0x7fa6561d3a00 value <pointer_type 0x7fa6566a80a8>
                chain <tree_list 0x7fa6566a0ac8 value <void_type 0x7fa6566a1f18 void>>> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d4930>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <mem_ref 0x7fa6561f1398
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
       
        arg 0 <ssa_name 0x7fa6561f20d8 type <pointer_type 0x7fa6561d49d8>
            var <var_decl 0x7fa657422f30 ptr>
            def_stmt ptr_12 = *pmy_chain_11(D);
            version 12
            ptr-info 0x7fa6562050c0>
        arg 1 <integer_cst 0x7fa6561d7c90 constant 0>
        common.h:109:14 start: common.h:109:14 finish: common.h:109:14>
    arg 1 <field_decl 0x7fa6561d61c8 free_arg type <pointer_type 0x7fa6561d4930>
        unsigned DI file common.h line 40 col 10 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7fa65668dc48 constant 16>
        bit offset <integer_cst 0x7fa65668dc60 constant 0> context <record_type 0x7fa6561d4a80 cleanup>
        chain <field_decl 0x7fa6561d6130 arg type <pointer_type 0x7fa6566a80a8>
            unsigned DI file common.h line 41 col 9 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
            align 64 offset_align 128 offset <integer_cst 0x7fa65668dc48 16> bit offset <integer_cst 0x7fa65668dbe8 64> context <record_type 0x7fa6561d4a80 cleanup>>>
    common.h:109:14 start: common.h:109:14 finish: common.h:109:14>
------------------------------
# VUSE <.MEM_26>
_6 = ptr_12->free_arg;
 <component_ref 0x7fa65668c870
    type <pointer_type 0x7fa6561d4930
        type <function_type 0x7fa6561d4888 type <void_type 0x7fa6566a1f18 void>
            QI
            size <integer_cst 0x7fa65668dcd8 constant 8>
            unit size <integer_cst 0x7fa65668dcf0 constant 1>
            align 8 symtab 0 alias set -1 structural equality
            arg-types <tree_list 0x7fa6561d3a00 value <pointer_type 0x7fa6566a80a8>
                chain <tree_list 0x7fa6566a0ac8 value <void_type 0x7fa6566a1f18 void>>> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d4930>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <mem_ref 0x7fa6561f13c0
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
       
        arg 0 <ssa_name 0x7fa6561f20d8 type <pointer_type 0x7fa6561d49d8>
            var <var_decl 0x7fa657422f30 ptr>
            def_stmt ptr_12 = *pmy_chain_11(D);
            version 12
            ptr-info 0x7fa6562050c0>
        arg 1 <integer_cst 0x7fa6561d7c90 constant 0>
        common.h:110:10 start: common.h:110:10 finish: common.h:110:10>
    arg 1 <field_decl 0x7fa6561d61c8 free_arg type <pointer_type 0x7fa6561d4930>
        unsigned DI file common.h line 40 col 10 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7fa65668dc48 constant 16>
        bit offset <integer_cst 0x7fa65668dc60 constant 0> context <record_type 0x7fa6561d4a80 cleanup>
        chain <field_decl 0x7fa6561d6130 arg type <pointer_type 0x7fa6566a80a8>
            unsigned DI file common.h line 41 col 9 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
            align 64 offset_align 128 offset <integer_cst 0x7fa65668dc48 16> bit offset <integer_cst 0x7fa65668dbe8 64> context <record_type 0x7fa6561d4a80 cleanup>>>
    common.h:110:6 start: common.h:110:6 finish: common.h:110:6>
------------------------------
# VUSE <.MEM_26>
_7 = ptr_12->arg;
 <component_ref 0x7fa65668c8a0
    type <pointer_type 0x7fa6566a80a8
        type <void_type 0x7fa6566a1f18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa6566a80a8>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6566adbd0>>
   
    arg 0 <mem_ref 0x7fa6561f13e8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
       
        arg 0 <ssa_name 0x7fa6561f20d8 type <pointer_type 0x7fa6561d49d8>
            var <var_decl 0x7fa657422f30 ptr>
            def_stmt ptr_12 = *pmy_chain_11(D);
            version 12
            ptr-info 0x7fa6562050c0>
        arg 1 <integer_cst 0x7fa6561d7c90 constant 0>
        common.h:110:26 start: common.h:110:26 finish: common.h:110:26>
    arg 1 <field_decl 0x7fa6561d6130 arg type <pointer_type 0x7fa6566a80a8>
        unsigned DI file common.h line 41 col 9 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7fa65668dc48 constant 16> bit offset <integer_cst 0x7fa65668dbe8 64> context <record_type 0x7fa6561d4a80 cleanup>>
    common.h:110:6 start: common.h:110:6 finish: common.h:110:6>
------------------------------
# VUSE <.MEM_21>
ptr_12 = *pmy_chain_11(D);
 <mem_ref 0x7fa6561f1410
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
   
    arg 0 <ssa_name 0x7fa6561f2090
        type <pointer_type 0x7fa6561dc1f8 type <pointer_type 0x7fa6561d49d8>
            public unsigned DI size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
            align 64 symtab 0 alias set -1 structural equality>
        var <parm_decl 0x7fa6561df480 pmy_chain>
        def_stmt GIMPLE_NOP
        version 11
        ptr-info 0x7fa6562050a8>
    arg 1 <integer_cst 0x7fa6561d7ca8 type <pointer_type 0x7fa6561dc1f8> constant 0>
    common.h:103:16 start: common.h:103:16 finish: common.h:103:16>
------------------------------
_2 = _1 + 1;
 <ssa_name 0x7fa6561f24c8
    type <integer_type 0x7fa6566a15e8 int public SI
        size <integer_cst 0x7fa65668de28 constant 32>
        unit size <integer_cst 0x7fa65668de40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
        pointer_to_this <pointer_type 0x7fa6566a8a80>>
   
    def_stmt _1 = static_call_num;
    version 1>
--------------------xxxxxxxxxxxxxxxxxxxxxxx------------------
# .MEM_45 = VDEF <.MEM_44(D)>
static_call_num = _2;
 <var_decl 0x7fa657422b40 static_call_num
    type <integer_type 0x7fa6566a15e8 int public SI
        size <integer_cst 0x7fa65668de28 constant 32>
        unit size <integer_cst 0x7fa65668de40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
        pointer_to_this <pointer_type 0x7fa6566a8a80>>
    static SI file test.c line 50 col 13 size <integer_cst 0x7fa65668de28 32> unit size <integer_cst 0x7fa65668de40 4>
    align 32 context <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop> chain <var_decl 0x7fa6561f0360 call_num>>
------------------------------
name_len_25 = (int) _3;
 <ssa_name 0x7fa6561f2558
    type <integer_type 0x7fa6566a17e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7fa6566a1738 precision 64 min <integer_cst 0x7fa65668deb8 0> max <integer_cst 0x7fa65668f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fa6566ad9d8>>
   
    def_stmt _3 = strlen (qualified_name_24(D));
    version 3>
------------------------------
_4 = (sizetype) namespace_len_20(D);
 <ssa_name 0x7fa6561f2990
    type <integer_type 0x7fa6566a15e8 int public SI
        size <integer_cst 0x7fa65668de28 constant 32>
        unit size <integer_cst 0x7fa65668de40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
        pointer_to_this <pointer_type 0x7fa6566a8a80>>
    var <parm_decl 0x7fa6561df600 namespace_len>
    def_stmt GIMPLE_NOP
    version 20>
------------------------------
_5 = qualified_name_24(D) + _4;
 <ssa_name 0x7fa6561f2a20
    type <pointer_type 0x7fa6561d4f18
        type <integer_type 0x7fa6561d4e70 char readonly public string-flag QI
            size <integer_cst 0x7fa65668dcd8 constant 8>
            unit size <integer_cst 0x7fa65668dcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa6566a13f0 precision 8 min <integer_cst 0x7fa6561d7180 -128> max <integer_cst 0x7fa6561d7168 127> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d4f18>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa6561df580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7fa656205180>
------------------------------
# VUSE <.MEM_47>
_6 = *_5;
 <mem_ref 0x7fa6561f1c80
    type <integer_type 0x7fa6561d4e70 char readonly public string-flag QI
        size <integer_cst 0x7fa65668dcd8 constant 8>
        unit size <integer_cst 0x7fa65668dcf0 constant 1>
        align 8 symtab 0 alias set -1 canonical type 0x7fa6566a13f0 precision 8 min <integer_cst 0x7fa6561d7180 -128> max <integer_cst 0x7fa6561d7168 127> context <translation_unit_decl 0x7fa656698168 test.c>
        pointer_to_this <pointer_type 0x7fa6561d4f18>>
   
    arg 0 <ssa_name 0x7fa6561f25e8
        type <pointer_type 0x7fa6561d4f18 type <integer_type 0x7fa6561d4e70 char>
            public unsigned DI
            size <integer_cst 0x7fa65668dbe8 constant 64>
            unit size <integer_cst 0x7fa65668dc00 constant 8>
            align 64 symtab 0 alias set -1 structural equality>
       
        def_stmt _5 = qualified_name_24(D) + _4;
        version 5
        ptr-info 0x7fa6562050f0>
    arg 1 <integer_cst 0x7fa6561d7d98 type <pointer_type 0x7fa6561d4f18> constant 0>
    test.c:60:55 start: test.c:60:55 finish: test.c:60:55>
------------------------------
next_namespace_len_30 = namespace_len_20(D) + 3;
 <ssa_name 0x7fa6561f2990
    type <integer_type 0x7fa6566a15e8 int public SI
        size <integer_cst 0x7fa65668de28 constant 32>
        unit size <integer_cst 0x7fa65668de40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
        pointer_to_this <pointer_type 0x7fa6566a8a80>>
    var <parm_decl 0x7fa6561df600 namespace_len>
    def_stmt GIMPLE_NOP
    version 20>
------------------------------
# VUSE <.MEM_42>
_8 = *oload_syms_26(D);
 <mem_ref 0x7fa6561f1ca8
    type <pointer_type 0x7fa6561d42a0
        type <pointer_type 0x7fa6561d4348 type <record_type 0x7fa6561d43f0 symbol>
            public unsigned DI
            size <integer_cst 0x7fa65668dbe8 constant 64>
            unit size <integer_cst 0x7fa65668dc00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa6561d42a0>>
        public unsigned DI size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561d41f8>>
   
    arg 0 <ssa_name 0x7fa6561f2ab0
        type <pointer_type 0x7fa6561d41f8 type <pointer_type 0x7fa6561d42a0>
            public unsigned DI size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
            align 64 symtab 0 alias set -1 structural equality>
        var <parm_decl 0x7fa6561df680 oload_syms>
        def_stmt GIMPLE_NOP
        version 26
        ptr-info 0x7fa656205198>
    arg 1 <integer_cst 0x7fa6561d7d38 type <pointer_type 0x7fa6561d41f8> constant 0>
    test.c:73:18 start: test.c:73:18 finish: test.c:73:18>
--------------------xxxxxxxxxxxxxxxxxxxxxxx------------------
# .MEM_85 = VDEF <.MEM_84>
cleanup_chain = new_70;
 <var_decl 0x7fa657422ab0 cleanup_chain
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    addressable static unsigned DI file common.h line 49 col 24 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
    align 64 context <translation_unit_decl 0x7fa656698168 test.c> initial <error_mark 0x7fa65668dbd0>>
------------------------------
_86 = old_chain_71;
 <ssa_name 0x7fa6561f7d38
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa6561faa20 old_chain>
    def_stmt old_chain_71 = cleanup_chain;
    version 71
    ptr-info 0x7fa656205288>
------------------------------
_69 = _86;
 <ssa_name 0x7fa6562005e8
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa6561faab0 D.4078>
    def_stmt _86 = old_chain_71;
    version 86
    ptr-info 0x7fa656205330>
------------------------------
_87 = _69;
 <ssa_name 0x7fa6561f7828
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
   
    def_stmt _69 = _86;
    version 69
    ptr-info 0x7fa656205258>
------------------------------
_68 = _87;
 <ssa_name 0x7fa656200630
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa6561fa3f0 D.4063>
    def_stmt _87 = _69;
    version 87
    ptr-info 0x7fa656205348>
------------------------------
_88 = _68;
 <ssa_name 0x7fa6561f75e8
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
   
    def_stmt _68 = _87;
    version 68
    ptr-info 0x7fa656205240>
------------------------------
old_cleanups_34 = _88;
 <ssa_name 0x7fa656200678
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa6561fa120 D.4054>
    def_stmt _88 = _68;
    version 88
    ptr-info 0x7fa656205360>
------------------------------
# VUSE <.MEM_85>
_9 = *oload_champ_bv_28(D);
 <mem_ref 0x7fa6561f1cd0
    type <pointer_type 0x7fa6561d4c78
        type <record_type 0x7fa6561d4bd0 badness_vector TI
            size <integer_cst 0x7fa65668dc30 constant 128>
            unit size <integer_cst 0x7fa65668dc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4bd0 fields <field_decl 0x7fa6561d64c0 length> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d4c78> chain <type_decl 0x7fa6561d6558 D.3994>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561d4d20>>
   
    arg 0 <ssa_name 0x7fa6561f2af8
        type <pointer_type 0x7fa6561d4d20 type <pointer_type 0x7fa6561d4c78>
            public unsigned DI size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
            align 64 symtab 0 alias set -1 structural equality>
        var <parm_decl 0x7fa6561df700 oload_champ_bv>
        def_stmt GIMPLE_NOP
        version 28
        ptr-info 0x7fa6562051b0>
    arg 1 <integer_cst 0x7fa6561d7d68 type <pointer_type 0x7fa6561d4d20> constant 0>
    test.c:74:18 start: test.c:74:18 finish: test.c:74:18>
--------------------xxxxxxxxxxxxxxxxxxxxxxx------------------
# .MEM_94 = VDEF <.MEM_93>
cleanup_chain = new_74;
 <var_decl 0x7fa657422ab0 cleanup_chain
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    addressable static unsigned DI file common.h line 49 col 24 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
    align 64 context <translation_unit_decl 0x7fa656698168 test.c> initial <error_mark 0x7fa65668dbd0>>
------------------------------
_95 = old_chain_75;
 <ssa_name 0x7fa6561f7e58
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa6561ff1b0 old_chain>
    def_stmt old_chain_75 = cleanup_chain;
    version 75
    ptr-info 0x7fa6562052e8>
------------------------------
_73 = _95;
 <ssa_name 0x7fa656200870
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa6561ff240 D.4089>
    def_stmt _95 = old_chain_75;
    version 95
    ptr-info 0x7fa656205378>
------------------------------
_96 = _73;
 <ssa_name 0x7fa6561f7dc8
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
   
    def_stmt _73 = _95;
    version 73
    ptr-info 0x7fa6562052b8>
------------------------------
_67 = _96;
 <ssa_name 0x7fa6562008b8
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa6561fae10 D.4082>
    def_stmt _96 = _73;
    version 96
    ptr-info 0x7fa656205390>
------------------------------
_97 = _67;
 <ssa_name 0x7fa6561f75a0
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
   
    def_stmt _67 = _96;
    version 67
    ptr-info 0x7fa656205228>
------------------------------
old_cleanups_36 = _97;
 <ssa_name 0x7fa656200900
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa657422c60 D.4051>
    def_stmt _97 = _67;
    version 97
    ptr-info 0x7fa6562053a8>
------------------------------
# VUSE <.MEM_52>
_77 = MEM[(int *)new_oload_syms_38];
 <mem_ref 0x7fa6561f9460
    type <integer_type 0x7fa6566a15e8 int public SI
        size <integer_cst 0x7fa65668de28 constant 32>
        unit size <integer_cst 0x7fa65668de40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
        pointer_to_this <pointer_type 0x7fa6566a8a80>>
   
    arg 0 <ssa_name 0x7fa6561f2c60
        type <pointer_type 0x7fa6561d42a0 type <pointer_type 0x7fa6561d4348>
            public unsigned DI
            size <integer_cst 0x7fa65668dbe8 constant 64>
            unit size <integer_cst 0x7fa65668dc00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa6561d41f8>>
        var <var_decl 0x7fa6561f0480 new_oload_syms>
        def_stmt new_oload_syms_38 = malloc (800);
        version 38
        ptr-info 0x7fa656205210>
    arg 1 <integer_cst 0x7fa6561d7d20 type <pointer_type 0x7fa6566a8a80> constant 0>>
------------------------------
new_oload_champ_bv_107 = bv_79;
 <ssa_name 0x7fa656200120
    type <pointer_type 0x7fa6561d4c78
        type <record_type 0x7fa6561d4bd0 badness_vector TI
            size <integer_cst 0x7fa65668dc30 constant 128>
            unit size <integer_cst 0x7fa65668dc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4bd0 fields <field_decl 0x7fa6561d64c0 length> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d4c78> chain <type_decl 0x7fa6561d6558 D.3994>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561d4d20>>
    var <var_decl 0x7fa6561ff6c0 bv>
    def_stmt bv_79 = malloc (16);
    version 79
    ptr-info 0x7fa656205318>
------------------------------
_101 = -1;
 <integer_cst 0x7fa65668dfc0 type <integer_type 0x7fa6566a15e8 int> constant -1>
------------------------------
new_oload_champ_41 = _101;
 <ssa_name 0x7fa656200a20
    type <integer_type 0x7fa6566a15e8 int public SI
        size <integer_cst 0x7fa65668de28 constant 32>
        unit size <integer_cst 0x7fa65668de40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
        pointer_to_this <pointer_type 0x7fa6566a8a80>>
    var <var_decl 0x7fa6561ff750 D.4098>
    def_stmt _101 = -1;
    version 101>
------------------------------
_10 = new_oload_champ_41 != -1;
 <ssa_name 0x7fa6561f2ca8
    type <integer_type 0x7fa6566a15e8 int public SI
        size <integer_cst 0x7fa65668de28 constant 32>
        unit size <integer_cst 0x7fa65668de40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
        pointer_to_this <pointer_type 0x7fa6566a8a80>>
    var <var_decl 0x7fa6561f05a0 new_oload_champ>
    def_stmt new_oload_champ_41 = _101;
    version 41>
------------------------------
_11 = call_num_23 == 1;
 <ssa_name 0x7fa6561f29d8
    type <integer_type 0x7fa6566a15e8 int public SI
        size <integer_cst 0x7fa65668de28 constant 32>
        unit size <integer_cst 0x7fa65668de40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
        pointer_to_this <pointer_type 0x7fa6566a8a80>>
    var <var_decl 0x7fa6561f0360 call_num>
    def_stmt call_num_23 = static_call_num;
    version 23>
------------------------------
_12 = _10 | _11;
 <ssa_name 0x7fa6561f2750
    type <boolean_type 0x7fa6561de2a0 _Bool public unsigned QI
        size <integer_cst 0x7fa65668dcd8 constant 8>
        unit size <integer_cst 0x7fa65668dcf0 constant 1>
        align 8 symtab 0 alias set -1 canonical type 0x7fa6566a1b28 precision 1 min <integer_cst 0x7fa6561d72d0 0> max <integer_cst 0x7fa6561d72b8 1>>
   
    def_stmt _10 = new_oload_champ_41 != -1;
    version 10>
------------------------------
_13 = new_oload_champ_bv_107;
 <ssa_name 0x7fa656200bd0
    type <pointer_type 0x7fa6561d4c78
        type <record_type 0x7fa6561d4bd0 badness_vector TI
            size <integer_cst 0x7fa65668dc30 constant 128>
            unit size <integer_cst 0x7fa65668dc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4bd0 fields <field_decl 0x7fa6561d64c0 length> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d4c78> chain <type_decl 0x7fa6561d6558 D.3994>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561d4d20>>
    var <var_decl 0x7fa6561f03f0 new_oload_champ_bv>
    def_stmt new_oload_champ_bv_107 = bv_79;
    version 107
    ptr-info 0x7fa6562053c0>
------------------------------
_14 = new_oload_champ_bv_107;
 <ssa_name 0x7fa656200bd0
    type <pointer_type 0x7fa6561d4c78
        type <record_type 0x7fa6561d4bd0 badness_vector TI
            size <integer_cst 0x7fa65668dc30 constant 128>
            unit size <integer_cst 0x7fa65668dc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4bd0 fields <field_decl 0x7fa6561d64c0 length> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d4c78> chain <type_decl 0x7fa6561d6558 D.3994>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561d4d20>>
    var <var_decl 0x7fa6561f03f0 new_oload_champ_bv>
    def_stmt new_oload_champ_bv_107 = bv_79;
    version 107
    ptr-info 0x7fa6562053c0>
------------------------------
_15 = new_oload_champ_bv_107;
 <ssa_name 0x7fa656200bd0
    type <pointer_type 0x7fa6561d4c78
        type <record_type 0x7fa6561d4bd0 badness_vector TI
            size <integer_cst 0x7fa65668dc30 constant 128>
            unit size <integer_cst 0x7fa65668dc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4bd0 fields <field_decl 0x7fa6561d64c0 length> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d4c78> chain <type_decl 0x7fa6561d6558 D.3994>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561d4d20>>
    var <var_decl 0x7fa6561f03f0 new_oload_champ_bv>
    def_stmt new_oload_champ_bv_107 = bv_79;
    version 107
    ptr-info 0x7fa6562053c0>
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
 <ssa_name 0x7fa6561f7cf0
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa6561fa990 new>
    def_stmt new_70 = malloc (32);
    version 70
    ptr-info 0x7fa656205270>
qwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqw-1dqwdqwdqwdqwd
-------always in therealways in therealways in there--------------------------
GIMPLE ASSIGN
GIMPLE ASSIGN
_69 = _86;
if (old_chain_71 == 0B)
# .MEM_81 = VDEF <.MEM_80>
new_70->next = _72;
GIMPLE ASSIGN
_73 = _95;
if (old_chain_75 == 0B)
# .MEM_90 = VDEF <.MEM_89>
new_74->next = _76;
GIMPLE ASSIGN
GIMPLE ASSIGN
# .MEM_93 = VDEF <.MEM_92>
new_74->arg = _9;
GIMPLE ASSIGN
GIMPLE ASSIGN
GIMPLE ASSIGN
GIMPLE ASSIGN
# .MEM_84 = VDEF <.MEM_83>
new_70->arg = _8;
GIMPLE ASSIGN
GIMPLE ASSIGN
GIMPLE ASSIGN
 <ssa_name 0x7fa6561f7e10
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa6561ff120 new>
    def_stmt new_74 = malloc (32);
    version 74
    ptr-info 0x7fa6562052d0>
qwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqw-1dqwdqwdqwdqwd
-------always in therealways in therealways in there--------------------------
GIMPLE ASSIGN
GIMPLE ASSIGN
_69 = _86;
if (old_chain_71 == 0B)
# .MEM_81 = VDEF <.MEM_80>
new_70->next = _72;
GIMPLE ASSIGN
GIMPLE ASSIGN
_73 = _95;
if (old_chain_75 == 0B)
# .MEM_90 = VDEF <.MEM_89>
new_74->next = _76;
[40;41m =======recursive_stmt========= [0m
GIMPLE ASSIGN
# .MEM_84 = VDEF <.MEM_83>
new_70->arg = _8;
GIMPLE ASSIGN
GIMPLE ASSIGN
GIMPLE ASSIGN
GIMPLE ASSIGN
# .MEM_93 = VDEF <.MEM_92>
new_74->arg = _9;
GIMPLE ASSIGN
GIMPLE ASSIGN
GIMPLE ASSIGN
 <ssa_name 0x7fa6561f2c60
    type <pointer_type 0x7fa6561d42a0
        type <pointer_type 0x7fa6561d4348 type <record_type 0x7fa6561d43f0 symbol>
            public unsigned DI
            size <integer_cst 0x7fa65668dbe8 constant 64>
            unit size <integer_cst 0x7fa65668dc00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa6561d42a0>>
        public unsigned DI size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561d41f8>>
    var <var_decl 0x7fa6561f0480 new_oload_syms>
    def_stmt new_oload_syms_38 = malloc (800);
    version 38
    ptr-info 0x7fa656205210>
qwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqw-1dqwdqwdqwdqwd
-------always in therealways in therealways in there--------------------------
GIMPLE ASSIGN
GIMPLE ASSIGN
GIMPLE ASSIGN
# .MEM_98 = VDEF <.MEM_52>
_78 = __printf_chk (1, "%d\n", _77);
GIMPLE ASSIGN
if (new_oload_syms_38 == 0B)
 <ssa_name 0x7fa656200120
    type <pointer_type 0x7fa6561d4c78
        type <record_type 0x7fa6561d4bd0 badness_vector TI
            size <integer_cst 0x7fa65668dc30 constant 128>
            unit size <integer_cst 0x7fa65668dc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4bd0 fields <field_decl 0x7fa6561d64c0 length> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d4c78> chain <type_decl 0x7fa6561d6558 D.3994>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561d4d20>>
    var <var_decl 0x7fa6561ff6c0 bv>
    def_stmt bv_79 = malloc (16);
    version 79
    ptr-info 0x7fa656205318>
qwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqw-1dqwdqwdqwdqwd
-------always in therealways in therealways in there--------------------------
new_oload_champ_bv_107 = bv_79;
 <ssa_name 0x7fa6561f2678
    type <integer_type 0x7fa6566a15e8 int public SI
        size <integer_cst 0x7fa65668de28 constant 32>
        unit size <integer_cst 0x7fa65668de40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
        pointer_to_this <pointer_type 0x7fa6566a8a80>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version 7>
qwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqw-1dqwdqwdqwdqwd
-------always in therealways in therealways in there--------------------------
 <ssa_name 0x7fa6561f2a20
    type <pointer_type 0x7fa6561d4f18
        type <integer_type 0x7fa6561d4e70 char readonly public string-flag QI
            size <integer_cst 0x7fa65668dcd8 constant 8>
            unit size <integer_cst 0x7fa65668dcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa6566a13f0 precision 8 min <integer_cst 0x7fa6561d7180 -128> max <integer_cst 0x7fa6561d7168 127> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d4f18>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa6561df580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7fa656205180>
 <ssa_name 0x7fa6561f2b40
    type <integer_type 0x7fa6566a15e8 int public SI
        size <integer_cst 0x7fa65668de28 constant 32>
        unit size <integer_cst 0x7fa65668de40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
        pointer_to_this <pointer_type 0x7fa6566a8a80>>
    var <var_decl 0x7fa6561f06c0 next_namespace_len>
    def_stmt next_namespace_len_30 = namespace_len_20(D) + 3;
    version 30>
-------always in therealways in th222erealways in there------0--------------------
# .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
 <ssa_name 0x7fa6561f2ab0
    type <pointer_type 0x7fa6561d41f8
        type <pointer_type 0x7fa6561d42a0 type <pointer_type 0x7fa6561d4348>
            public unsigned DI
            size <integer_cst 0x7fa65668dbe8 constant 64>
            unit size <integer_cst 0x7fa65668dc00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa6561d41f8>>
        public unsigned DI size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa6561df680 oload_syms>
    def_stmt GIMPLE_NOP
    version 26
    ptr-info 0x7fa656205198>
-------always in therealways in th222erealways in there------0--------------------
GIMPLE ASSIGN
GIMPLE ASSIGN
GIMPLE ASSIGN
# .MEM_84 = VDEF <.MEM_83>
new_70->arg = _8;
[40;41m =======recursive_stmt========= [0m
GIMPLE ASSIGN
 <ssa_name 0x7fa6561f2af8
    type <pointer_type 0x7fa6561d4d20
        type <pointer_type 0x7fa6561d4c78 type <record_type 0x7fa6561d4bd0 badness_vector>
            public unsigned DI
            size <integer_cst 0x7fa65668dbe8 constant 64>
            unit size <integer_cst 0x7fa65668dc00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa6561d4d20>>
        public unsigned DI size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa6561df700 oload_champ_bv>
    def_stmt GIMPLE_NOP
    version 28
    ptr-info 0x7fa6562051b0>
-------always in therealways in th222erealways in there------0--------------------
GIMPLE ASSIGN
GIMPLE ASSIGN
GIMPLE ASSIGN
# .MEM_93 = VDEF <.MEM_92>
new_74->arg = _9;
[40;41m =======recursive_stmt========= [0m
GIMPLE ASSIGN
 <ssa_name 0x7fa6561f2b88
    type <pointer_type 0x7fa6566a8a80
        type <integer_type 0x7fa6566a15e8 int public SI
            size <integer_cst 0x7fa65668de28 constant 32>
            unit size <integer_cst 0x7fa65668de40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
            pointer_to_this <pointer_type 0x7fa6566a8a80>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa6561df780 oload_champ>
    def_stmt GIMPLE_NOP
    version 31
    ptr-info 0x7fa6562051c8>
-------always in therealways in th222erealways in there------0--------------------
GIMPLE ASSIGN
GIMPLE ASSIGN
[40;41m =======recursive_stmt========= [0m
 <ssa_name 0x7fa6561f2a20
    type <pointer_type 0x7fa6561d4f18
        type <integer_type 0x7fa6561d4e70 char readonly public string-flag QI
            size <integer_cst 0x7fa65668dcd8 constant 8>
            unit size <integer_cst 0x7fa65668dcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa6566a13f0 precision 8 min <integer_cst 0x7fa6561d7180 -128> max <integer_cst 0x7fa6561d7168 127> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d4f18>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7fa6561df580 qualified_name>
    def_stmt GIMPLE_NOP
    version 24
    ptr-info 0x7fa656205180>
GIMPLE ASSIGN
# VUSE <.MEM_47>
_6 = *_5;
# .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
GIMPLE ASSIGN
GIMPLE ASSIGN
GIMPLE ASSIGN
[40;41m =======recursive_stmt========= [0m
GIMPLE ASSIGN
GIMPLE ASSIGN
GIMPLE ASSIGN
GIMPLE ASSIGN
[40;41m =======recursive_stmt========= [0m
GIMPLE ASSIGN
GIMPLE ASSIGN
GIMPLE ASSIGN
[40;41m =======recursive_stmt========= [0m
if (_7 != 0)
 <addr_expr 0x7fa6561fb980
    type <pointer_type 0x7fa6561dce70
        type <array_type 0x7fa6561dcdc8 type <integer_type 0x7fa6561d4dc8 char>
            DI
            size <integer_cst 0x7fa65668dbe8 constant 64>
            unit size <integer_cst 0x7fa65668dc00 constant 8>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fa6561dcd20>
            pointer_to_this <pointer_type 0x7fa6561dce70>>
        unsigned DI size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fa6561fb960 type <array_type 0x7fa6561dcdc8>
        readonly constant static "A::B::C\000">
    test.c:113:26 start: test.c:113:26 finish: test.c:113:26>
qwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqwdqw-1dqwdqwdqwdqwd
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
=======================================================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path find_oload_champ_namespace_loop  function_call count: 8 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;44m =======print_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:discard_my_cleanups========= [0m
[40;42m =======start_check_funciton:discard_my_cleanups========= [0m
[40;33m =======POP node_fun stack:discard_my_cleanups========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 2 level :2========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:find_oload_champ_namespace_loop========= [0m
[40;42m =======start_check_funciton:find_oload_champ_namespace_loop========= [0m
 <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop
    type <function_type 0x7fa6561d40a8
        type <integer_type 0x7fa6566a15e8 int public SI
            size <integer_cst 0x7fa65668de28 constant 32>
            unit size <integer_cst 0x7fa65668de40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
            pointer_to_this <pointer_type 0x7fa6566a8a80>>
        QI
        size <integer_cst 0x7fa65668dcd8 constant 8>
        unit size <integer_cst 0x7fa65668dcf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7fa6561d3be0 value <pointer_type 0x7fa6561d4f18>
            chain <tree_list 0x7fa6561d3c08 value <integer_type 0x7fa6566a15e8 int>
                chain <tree_list 0x7fa6561d3c30 value <pointer_type 0x7fa6561d41f8>
                    chain <tree_list 0x7fa6561d3b90 value <pointer_type 0x7fa6561d4d20>
                        chain <tree_list 0x7fa6561d3af0 value <pointer_type 0x7fa6566a8a80> chain <tree_list 0x7fa6566a0ac8>>>>>>
        pointer_to_this <pointer_type 0x7fa6561dcc78>>
    addressable nothrow static function-specific-target function-specific-opt QI file test.c line 34 col 1 align 8 context <translation_unit_decl 0x7fa656698168 test.c> initial <block 0x7fa6561e8300>
    result <result_decl 0x7fa6566983c0 D.4029 type <integer_type 0x7fa6566a15e8 int>
        ignored SI file test.c line 34 col 1 size <integer_cst 0x7fa65668de28 32> unit size <integer_cst 0x7fa65668de40 4>
        align 32 context <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop>>
    arguments <parm_decl 0x7fa6561df580 qualified_name
        type <pointer_type 0x7fa6561d4f18 type <integer_type 0x7fa6561d4e70 char>
            public unsigned DI
            size <integer_cst 0x7fa65668dbe8 constant 64>
            unit size <integer_cst 0x7fa65668dc00 constant 8>
            align 64 symtab 0 alias set -1 structural equality>
        unsigned DI file test.c line 35 col 15 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 context <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop> arg-type <pointer_type 0x7fa6561d4f18>
        chain <parm_decl 0x7fa6561df600 namespace_len type <integer_type 0x7fa6566a15e8 int>
            SI file test.c line 36 col 7 size <integer_cst 0x7fa65668de28 32> unit size <integer_cst 0x7fa65668de40 4>
            align 32 context <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop> arg-type <integer_type 0x7fa6566a15e8 int> chain <parm_decl 0x7fa6561df680 oload_syms>>>
    struct-function 0x7fa6561e9160>
 <ssa_name 0x7fa6561f7cf0
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa6561fa990 new>
    def_stmt new_70 = malloc (32);
    version 70
    ptr-info 0x7fa656205270>

dot graph START

======================================================================
 <ssa_name 0x7fa6561f7cf0
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa6561fa990 new>
    def_stmt new_70 = malloc (32);
    version 70
    ptr-info 0x7fa656205270>

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

cleanup_chain = new_70;
In function ‘main’:
common.h:133:14: warning: use location
   *pmy_chain = new;
              ^
dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 5: cleanup_chain = new_70;
common.h:133:14: warning: use location
   *pmy_chain = new;
              ^
dot graph target line desend

dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 5dot graph target basicblock en1

dot graph stmt start cleanup_chain = new_70;
new_70 = malloc (32);
dot graph stmt end

dot graph stmt start cleanup_chain = new_70;
common.h:133:14: warning: use location
   *pmy_chain = new;
              ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

old_chain_71 = cleanup_chain;
common.h:127:19: warning: use location
   struct cleanup *old_chain = *pmy_chain;
                   ^
dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 5: old_chain_71 = cleanup_chain;
common.h:127:19: warning: use location
   struct cleanup *old_chain = *pmy_chain;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 5dot graph target basicblock en1

dot graph stmt start old_chain_71 = cleanup_chain;
new_70 = malloc (32);
dot graph stmt end

dot graph stmt start old_chain_71 = cleanup_chain;
common.h:127:19: warning: use location
   struct cleanup *old_chain = *pmy_chain;
                   ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

_86 = old_chain_71;
lto1: warning: use location
dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 7: _86 = old_chain_71;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 7dot graph target basicblock en1

dot graph stmt start _86 = old_chain_71;
new_70 = malloc (32);
dot graph stmt end

dot graph stmt start _86 = old_chain_71;
lto1: warning: use location
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

if (old_chain_71 == 0B)
common.h:135:5: warning: use location
  if (old_chain == NULL)
     ^
dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 5: if (old_chain_71 == 0B)
common.h:135:5: warning: use location
  if (old_chain == NULL)
     ^
dot graph target line desend

dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 5dot graph target basicblock en1

dot graph stmt start if (old_chain_71 == 0B)
new_70 = malloc (32);
dot graph stmt end

dot graph stmt start if (old_chain_71 == 0B)
common.h:135:5: warning: use location
  if (old_chain == NULL)
     ^
dot graph stmt end

if (old_chain_71 == 0B)

 ================== find cond branch ================= 
if (old_chain_71 == 0B)
Cond in fucntion find_oload_champ_namespace_loop basic block 5
 ================== possiable direct basic block ================= 
from find_oload_champ_namespace_loop basic block 6
 ================== possiable direct basic block ================= 
from find_oload_champ_namespace_loop basic block 7
 ================== warring ================== 
[40;35m    need check this branch possiable have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

_72 = cleanup_chain;
common.h:129:15: warning: use location
   new->next = *pmy_chain;
               ^
dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 5: _72 = cleanup_chain;
common.h:129:15: warning: use location
   new->next = *pmy_chain;
               ^
dot graph target line desend

dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 5dot graph target basicblock en1

dot graph stmt start _72 = cleanup_chain;
new_70 = malloc (32);
dot graph stmt end

dot graph stmt start _72 = cleanup_chain;
common.h:129:15: warning: use location
   new->next = *pmy_chain;
               ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

old_chain_75 = cleanup_chain;
common.h:127:19: warning: use location
   struct cleanup *old_chain = *pmy_chain;
                   ^
dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 7: old_chain_75 = cleanup_chain;
common.h:127:19: warning: use location
   struct cleanup *old_chain = *pmy_chain;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 7dot graph target basicblock en1

dot graph stmt start old_chain_75 = cleanup_chain;
new_70 = malloc (32);
dot graph stmt end

dot graph stmt start old_chain_75 = cleanup_chain;
common.h:127:19: warning: use location
   struct cleanup *old_chain = *pmy_chain;
                   ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

_95 = old_chain_75;
lto1: warning: use location
dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 9: _95 = old_chain_75;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 9dot graph target basicblock en1

dot graph stmt start _95 = old_chain_75;
new_70 = malloc (32);
dot graph stmt end

dot graph stmt start _95 = old_chain_75;
lto1: warning: use location
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

_76 = cleanup_chain;
common.h:129:15: warning: use location
   new->next = *pmy_chain;
               ^
dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 7: _76 = cleanup_chain;
common.h:129:15: warning: use location
   new->next = *pmy_chain;
               ^
dot graph target line desend

dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 7dot graph target basicblock en1

dot graph stmt start _76 = cleanup_chain;
new_70 = malloc (32);
dot graph stmt end

dot graph stmt start _76 = cleanup_chain;
common.h:129:15: warning: use location
   new->next = *pmy_chain;
               ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

cleanup_chain = new_74;
common.h:133:14: warning: use location
   *pmy_chain = new;
              ^
dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 7: cleanup_chain = new_74;
common.h:133:14: warning: use location
   *pmy_chain = new;
              ^
dot graph target line desend

dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 7dot graph target basicblock en1

dot graph stmt start cleanup_chain = new_74;
new_70 = malloc (32);
dot graph stmt end

dot graph stmt start cleanup_chain = new_74;
common.h:133:14: warning: use location
   *pmy_chain = new;
              ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

new_74->arg = _9;
common.h:132:12: warning: use location
   new->arg = arg;
            ^
dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 7: new_74->arg = _9;
common.h:132:12: warning: use location
   new->arg = arg;
            ^
dot graph target line desend

dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 7dot graph target basicblock en1

dot graph stmt start new_74->arg = _9;
new_70 = malloc (32);
dot graph stmt end

dot graph stmt start new_74->arg = _9;
common.h:132:12: warning: use location
   new->arg = arg;
            ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

new_70->arg = _8;
common.h:132:12: warning: use location
   new->arg = arg;
            ^
dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 5: new_70->arg = _8;
common.h:132:12: warning: use location
   new->arg = arg;
            ^
dot graph target line desend

dot graph target loc start # .MEM_80 = VDEF <.MEM_42>
new_70 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 5dot graph target basicblock en1

dot graph stmt start new_70->arg = _8;
new_70 = malloc (32);
dot graph stmt end

dot graph stmt start new_70->arg = _8;
common.h:132:12: warning: use location
   new->arg = arg;
            ^
dot graph stmt end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 9dot graph target basicblock en1

dot graph arrowsubgraph cluster_1984260702 dot graph subgraph  _95 = old_chain_75;
old_chain_75 = cleanup_chain;
dot graph subgrapend

 <ssa_name 0x7fa6561f7cf0
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa6561fa990 new>
    def_stmt new_70 = malloc (32);
    version 70
    ptr-info 0x7fa656205270>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
 <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop
    type <function_type 0x7fa6561d40a8
        type <integer_type 0x7fa6566a15e8 int public SI
            size <integer_cst 0x7fa65668de28 constant 32>
            unit size <integer_cst 0x7fa65668de40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
            pointer_to_this <pointer_type 0x7fa6566a8a80>>
        QI
        size <integer_cst 0x7fa65668dcd8 constant 8>
        unit size <integer_cst 0x7fa65668dcf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7fa6561d3be0 value <pointer_type 0x7fa6561d4f18>
            chain <tree_list 0x7fa6561d3c08 value <integer_type 0x7fa6566a15e8 int>
                chain <tree_list 0x7fa6561d3c30 value <pointer_type 0x7fa6561d41f8>
                    chain <tree_list 0x7fa6561d3b90 value <pointer_type 0x7fa6561d4d20>
                        chain <tree_list 0x7fa6561d3af0 value <pointer_type 0x7fa6566a8a80> chain <tree_list 0x7fa6566a0ac8>>>>>>
        pointer_to_this <pointer_type 0x7fa6561dcc78>>
    addressable nothrow static function-specific-target function-specific-opt QI file test.c line 34 col 1 align 8 context <translation_unit_decl 0x7fa656698168 test.c> initial <block 0x7fa6561e8300>
    result <result_decl 0x7fa6566983c0 D.4029 type <integer_type 0x7fa6566a15e8 int>
        ignored SI file test.c line 34 col 1 size <integer_cst 0x7fa65668de28 32> unit size <integer_cst 0x7fa65668de40 4>
        align 32 context <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop>>
    arguments <parm_decl 0x7fa6561df580 qualified_name
        type <pointer_type 0x7fa6561d4f18 type <integer_type 0x7fa6561d4e70 char>
            public unsigned DI
            size <integer_cst 0x7fa65668dbe8 constant 64>
            unit size <integer_cst 0x7fa65668dc00 constant 8>
            align 64 symtab 0 alias set -1 structural equality>
        unsigned DI file test.c line 35 col 15 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 context <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop> arg-type <pointer_type 0x7fa6561d4f18>
        chain <parm_decl 0x7fa6561df600 namespace_len type <integer_type 0x7fa6566a15e8 int>
            SI file test.c line 36 col 7 size <integer_cst 0x7fa65668de28 32> unit size <integer_cst 0x7fa65668de40 4>
            align 32 context <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop> arg-type <integer_type 0x7fa6566a15e8 int> chain <parm_decl 0x7fa6561df680 oload_syms>>>
    struct-function 0x7fa6561e9160>
 <ssa_name 0x7fa6561f7e10
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa6561ff120 new>
    def_stmt new_74 = malloc (32);
    version 74
    ptr-info 0x7fa6562052d0>

dot graph START

======================================================================
 <ssa_name 0x7fa6561f7e10
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa6561ff120 new>
    def_stmt new_74 = malloc (32);
    version 74
    ptr-info 0x7fa6562052d0>

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

cleanup_chain = new_74;
common.h:133:14: warning: use location
   *pmy_chain = new;
              ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 7: cleanup_chain = new_74;
common.h:133:14: warning: use location
   *pmy_chain = new;
              ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 7dot graph target basicblock en1

dot graph stmt start cleanup_chain = new_74;
new_74 = malloc (32);
dot graph stmt end

dot graph stmt start cleanup_chain = new_74;
common.h:133:14: warning: use location
   *pmy_chain = new;
              ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

old_chain_71 = cleanup_chain;
common.h:127:19: warning: use location
   struct cleanup *old_chain = *pmy_chain;
                   ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 5: old_chain_71 = cleanup_chain;
common.h:127:19: warning: use location
   struct cleanup *old_chain = *pmy_chain;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 5dot graph target basicblock en1

dot graph stmt start old_chain_71 = cleanup_chain;
new_74 = malloc (32);
dot graph stmt end

dot graph stmt start old_chain_71 = cleanup_chain;
common.h:127:19: warning: use location
   struct cleanup *old_chain = *pmy_chain;
                   ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

_86 = old_chain_71;
lto1: warning: use location
dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 7: _86 = old_chain_71;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 7dot graph target basicblock en1

dot graph stmt start _86 = old_chain_71;
new_74 = malloc (32);
dot graph stmt end

dot graph stmt start _86 = old_chain_71;
lto1: warning: use location
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

if (old_chain_71 == 0B)
common.h:135:5: warning: use location
  if (old_chain == NULL)
     ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 5: if (old_chain_71 == 0B)
common.h:135:5: warning: use location
  if (old_chain == NULL)
     ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 5dot graph target basicblock en1

dot graph stmt start if (old_chain_71 == 0B)
new_74 = malloc (32);
dot graph stmt end

dot graph stmt start if (old_chain_71 == 0B)
common.h:135:5: warning: use location
  if (old_chain == NULL)
     ^
dot graph stmt end

if (old_chain_71 == 0B)

 ================== find cond branch ================= 
if (old_chain_71 == 0B)
Cond in fucntion find_oload_champ_namespace_loop basic block 5
 ================== possiable direct basic block ================= 
from find_oload_champ_namespace_loop basic block 6
 ================== possiable direct basic block ================= 
from find_oload_champ_namespace_loop basic block 7
 ================== warring ================== 
[40;35m    need check this branch possiable have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

_72 = cleanup_chain;
common.h:129:15: warning: use location
   new->next = *pmy_chain;
               ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 5: _72 = cleanup_chain;
common.h:129:15: warning: use location
   new->next = *pmy_chain;
               ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 5dot graph target basicblock en1

dot graph stmt start _72 = cleanup_chain;
new_74 = malloc (32);
dot graph stmt end

dot graph stmt start _72 = cleanup_chain;
common.h:129:15: warning: use location
   new->next = *pmy_chain;
               ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

cleanup_chain = new_70;
common.h:133:14: warning: use location
   *pmy_chain = new;
              ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 5: cleanup_chain = new_70;
common.h:133:14: warning: use location
   *pmy_chain = new;
              ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 5dot graph target basicblock en1

dot graph stmt start cleanup_chain = new_70;
new_74 = malloc (32);
dot graph stmt end

dot graph stmt start cleanup_chain = new_70;
common.h:133:14: warning: use location
   *pmy_chain = new;
              ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

old_chain_75 = cleanup_chain;
common.h:127:19: warning: use location
   struct cleanup *old_chain = *pmy_chain;
                   ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 7: old_chain_75 = cleanup_chain;
common.h:127:19: warning: use location
   struct cleanup *old_chain = *pmy_chain;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 7dot graph target basicblock en1

dot graph stmt start old_chain_75 = cleanup_chain;
new_74 = malloc (32);
dot graph stmt end

dot graph stmt start old_chain_75 = cleanup_chain;
common.h:127:19: warning: use location
   struct cleanup *old_chain = *pmy_chain;
                   ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

_95 = old_chain_75;
lto1: warning: use location
dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 9: _95 = old_chain_75;
lto1: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 9dot graph target basicblock en1

dot graph stmt start _95 = old_chain_75;
new_74 = malloc (32);
dot graph stmt end

dot graph stmt start _95 = old_chain_75;
lto1: warning: use location
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

_76 = cleanup_chain;
common.h:129:15: warning: use location
   new->next = *pmy_chain;
               ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 7: _76 = cleanup_chain;
common.h:129:15: warning: use location
   new->next = *pmy_chain;
               ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 7dot graph target basicblock en1

dot graph stmt start _76 = cleanup_chain;
new_74 = malloc (32);
dot graph stmt end

dot graph stmt start _76 = cleanup_chain;
common.h:129:15: warning: use location
   new->next = *pmy_chain;
               ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

new_70->arg = _8;
common.h:132:12: warning: use location
   new->arg = arg;
            ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 5: new_70->arg = _8;
common.h:132:12: warning: use location
   new->arg = arg;
            ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 5dot graph target basicblock en1

dot graph stmt start new_70->arg = _8;
new_74 = malloc (32);
dot graph stmt end

dot graph stmt start new_70->arg = _8;
common.h:132:12: warning: use location
   new->arg = arg;
            ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

new_74->arg = _9;
common.h:132:12: warning: use location
   new->arg = arg;
            ^
dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc en1

dot graph target line desc form basic block 7: new_74->arg = _9;
common.h:132:12: warning: use location
   new->arg = arg;
            ^
dot graph target line desend

dot graph target loc start # .MEM_89 = VDEF <.MEM_85>
new_74 = malloc (32);
common.h:125:19: warning: use location
   struct cleanup *new
                   ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 7dot graph target basicblock en1

dot graph stmt start new_74->arg = _9;
new_74 = malloc (32);
dot graph stmt end

dot graph stmt start new_74->arg = _9;
common.h:132:12: warning: use location
   new->arg = arg;
            ^
dot graph stmt end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 9dot graph target basicblock en1

dot graph arrowsubgraph cluster_955363841 dot graph subgraph  _95 = old_chain_75;
old_chain_75 = cleanup_chain;
dot graph subgrapend

 <ssa_name 0x7fa6561f7e10
    type <pointer_type 0x7fa6561d49d8
        type <record_type 0x7fa6561d4a80 cleanup BLK
            size <integer_cst 0x7fa65668df48 constant 256>
            unit size <integer_cst 0x7fa6566a9048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4a80 fields <field_decl 0x7fa6561d62f8 next> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d49d8> chain <type_decl 0x7fa6561d6390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561dc1f8>>
    var <var_decl 0x7fa6561ff120 new>
    def_stmt new_74 = malloc (32);
    version 74
    ptr-info 0x7fa6562052d0>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
 <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop
    type <function_type 0x7fa6561d40a8
        type <integer_type 0x7fa6566a15e8 int public SI
            size <integer_cst 0x7fa65668de28 constant 32>
            unit size <integer_cst 0x7fa65668de40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
            pointer_to_this <pointer_type 0x7fa6566a8a80>>
        QI
        size <integer_cst 0x7fa65668dcd8 constant 8>
        unit size <integer_cst 0x7fa65668dcf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7fa6561d3be0 value <pointer_type 0x7fa6561d4f18>
            chain <tree_list 0x7fa6561d3c08 value <integer_type 0x7fa6566a15e8 int>
                chain <tree_list 0x7fa6561d3c30 value <pointer_type 0x7fa6561d41f8>
                    chain <tree_list 0x7fa6561d3b90 value <pointer_type 0x7fa6561d4d20>
                        chain <tree_list 0x7fa6561d3af0 value <pointer_type 0x7fa6566a8a80> chain <tree_list 0x7fa6566a0ac8>>>>>>
        pointer_to_this <pointer_type 0x7fa6561dcc78>>
    addressable nothrow static function-specific-target function-specific-opt QI file test.c line 34 col 1 align 8 context <translation_unit_decl 0x7fa656698168 test.c> initial <block 0x7fa6561e8300>
    result <result_decl 0x7fa6566983c0 D.4029 type <integer_type 0x7fa6566a15e8 int>
        ignored SI file test.c line 34 col 1 size <integer_cst 0x7fa65668de28 32> unit size <integer_cst 0x7fa65668de40 4>
        align 32 context <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop>>
    arguments <parm_decl 0x7fa6561df580 qualified_name
        type <pointer_type 0x7fa6561d4f18 type <integer_type 0x7fa6561d4e70 char>
            public unsigned DI
            size <integer_cst 0x7fa65668dbe8 constant 64>
            unit size <integer_cst 0x7fa65668dc00 constant 8>
            align 64 symtab 0 alias set -1 structural equality>
        unsigned DI file test.c line 35 col 15 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 context <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop> arg-type <pointer_type 0x7fa6561d4f18>
        chain <parm_decl 0x7fa6561df600 namespace_len type <integer_type 0x7fa6566a15e8 int>
            SI file test.c line 36 col 7 size <integer_cst 0x7fa65668de28 32> unit size <integer_cst 0x7fa65668de40 4>
            align 32 context <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop> arg-type <integer_type 0x7fa6566a15e8 int> chain <parm_decl 0x7fa6561df680 oload_syms>>>
    struct-function 0x7fa6561e9160>
 <ssa_name 0x7fa6561f2c60
    type <pointer_type 0x7fa6561d42a0
        type <pointer_type 0x7fa6561d4348 type <record_type 0x7fa6561d43f0 symbol>
            public unsigned DI
            size <integer_cst 0x7fa65668dbe8 constant 64>
            unit size <integer_cst 0x7fa65668dc00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa6561d42a0>>
        public unsigned DI size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561d41f8>>
    var <var_decl 0x7fa6561f0480 new_oload_syms>
    def_stmt new_oload_syms_38 = malloc (800);
    version 38
    ptr-info 0x7fa656205210>

dot graph START

======================================================================
 <ssa_name 0x7fa6561f2c60
    type <pointer_type 0x7fa6561d42a0
        type <pointer_type 0x7fa6561d4348 type <record_type 0x7fa6561d43f0 symbol>
            public unsigned DI
            size <integer_cst 0x7fa65668dbe8 constant 64>
            unit size <integer_cst 0x7fa65668dc00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa6561d42a0>>
        public unsigned DI size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561d41f8>>
    var <var_decl 0x7fa6561f0480 new_oload_syms>
    def_stmt new_oload_syms_38 = malloc (800);
    version 38
    ptr-info 0x7fa656205210>

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

*oload_syms_26(D) = new_oload_syms_38;
test.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^
dot graph target loc start # .MEM_51 = VDEF <.MEM_94>
new_oload_syms_38 = malloc (800);
test.c:76:17: warning: use location
  new_oload_syms = malloc(100 * sizeof(struct symbol *)); /* allocation site */
                 ^
dot graph target loc en1

dot graph target line desc form basic block 15: *oload_syms_26(D) = new_oload_syms_38;
test.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_51 = VDEF <.MEM_94>
new_oload_syms_38 = malloc (800);
test.c:76:17: warning: use location
  new_oload_syms = malloc(100 * sizeof(struct symbol *)); /* allocation site */
                 ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 15dot graph target basicblock en1

dot graph stmt start *oload_syms_26(D) = new_oload_syms_38;
new_oload_syms_38 = malloc (800);
dot graph stmt end

dot graph stmt start *oload_syms_26(D) = new_oload_syms_38;
test.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

free (new_oload_syms_38);
test.c:94:4: warning: use location
    free (new_oload_syms);
    ^
dot graph target loc start # .MEM_51 = VDEF <.MEM_94>
new_oload_syms_38 = malloc (800);
test.c:76:17: warning: use location
  new_oload_syms = malloc(100 * sizeof(struct symbol *)); /* allocation site */
                 ^
dot graph target loc en1

dot graph target line desc form basic block 14: free (new_oload_syms_38);
test.c:94:4: warning: use location
    free (new_oload_syms);
    ^
dot graph target line desend

dot graph target loc start # .MEM_51 = VDEF <.MEM_94>
new_oload_syms_38 = malloc (800);
test.c:76:17: warning: use location
  new_oload_syms = malloc(100 * sizeof(struct symbol *)); /* allocation site */
                 ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 14dot graph target basicblock en1

dot graph stmt start free (new_oload_syms_38);
new_oload_syms_38 = malloc (800);
dot graph stmt end

dot graph stmt start free (new_oload_syms_38);
test.c:94:4: warning: use location
    free (new_oload_syms);
    ^
dot graph stmt end

dot graph target color descgreendot graph target color desend

this stmt is child function---free-----

 ================== find ================== 
free (new_oload_syms_38);
test.c:94:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

*oload_syms_26(D) = new_oload_syms_38;
test.c:86:16: warning: use location
    *oload_syms = new_oload_syms;
                ^
dot graph target loc start # .MEM_51 = VDEF <.MEM_94>
new_oload_syms_38 = malloc (800);
test.c:76:17: warning: use location
  new_oload_syms = malloc(100 * sizeof(struct symbol *)); /* allocation site */
                 ^
dot graph target loc en1

dot graph target line desc form basic block 12: *oload_syms_26(D) = new_oload_syms_38;
test.c:86:16: warning: use location
    *oload_syms = new_oload_syms;
                ^
dot graph target line desend

dot graph target loc start # .MEM_51 = VDEF <.MEM_94>
new_oload_syms_38 = malloc (800);
test.c:76:17: warning: use location
  new_oload_syms = malloc(100 * sizeof(struct symbol *)); /* allocation site */
                 ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 12dot graph target basicblock en1

dot graph stmt start *oload_syms_26(D) = new_oload_syms_38;
new_oload_syms_38 = malloc (800);
dot graph stmt end

dot graph stmt start *oload_syms_26(D) = new_oload_syms_38;
test.c:86:16: warning: use location
    *oload_syms = new_oload_syms;
                ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

_77 = MEM[(int *)new_oload_syms_38];
test.c:21:2: warning: use location
  __USE(oload_syms)
  ^
dot graph target loc start # .MEM_51 = VDEF <.MEM_94>
new_oload_syms_38 = malloc (800);
test.c:76:17: warning: use location
  new_oload_syms = malloc(100 * sizeof(struct symbol *)); /* allocation site */
                 ^
dot graph target loc en1

dot graph target line desc form basic block 11: _77 = MEM[(int *)new_oload_syms_38];
test.c:21:2: warning: use location
  __USE(oload_syms)
  ^
dot graph target line desend

dot graph target loc start # .MEM_51 = VDEF <.MEM_94>
new_oload_syms_38 = malloc (800);
test.c:76:17: warning: use location
  new_oload_syms = malloc(100 * sizeof(struct symbol *)); /* allocation site */
                 ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 11dot graph target basicblock en1

dot graph stmt start _77 = MEM[(int *)new_oload_syms_38];
new_oload_syms_38 = malloc (800);
dot graph stmt end

dot graph stmt start _77 = MEM[(int *)new_oload_syms_38];
test.c:21:2: warning: use location
  __USE(oload_syms)
  ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

*new_oload_syms_38 = 0B;
test.c:80:20: warning: use location
  new_oload_syms[0] = NULL;
                    ^
dot graph target loc start # .MEM_51 = VDEF <.MEM_94>
new_oload_syms_38 = malloc (800);
test.c:76:17: warning: use location
  new_oload_syms = malloc(100 * sizeof(struct symbol *)); /* allocation site */
                 ^
dot graph target loc en1

dot graph target line desc form basic block 11: *new_oload_syms_38 = 0B;
test.c:80:20: warning: use location
  new_oload_syms[0] = NULL;
                    ^
dot graph target line desend

dot graph target loc start # .MEM_51 = VDEF <.MEM_94>
new_oload_syms_38 = malloc (800);
test.c:76:17: warning: use location
  new_oload_syms = malloc(100 * sizeof(struct symbol *)); /* allocation site */
                 ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 11dot graph target basicblock en1

dot graph stmt start *new_oload_syms_38 = 0B;
new_oload_syms_38 = malloc (800);
dot graph stmt end

dot graph stmt start *new_oload_syms_38 = 0B;
test.c:80:20: warning: use location
  new_oload_syms[0] = NULL;
                    ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

if (new_oload_syms_38 == 0B)
test.c:78:5: warning: use location
  if (!new_oload_syms)
     ^
dot graph target loc start # .MEM_51 = VDEF <.MEM_94>
new_oload_syms_38 = malloc (800);
test.c:76:17: warning: use location
  new_oload_syms = malloc(100 * sizeof(struct symbol *)); /* allocation site */
                 ^
dot graph target loc en1

dot graph target line desc form basic block 9: if (new_oload_syms_38 == 0B)
test.c:78:5: warning: use location
  if (!new_oload_syms)
     ^
dot graph target line desend

dot graph target loc start # .MEM_51 = VDEF <.MEM_94>
new_oload_syms_38 = malloc (800);
test.c:76:17: warning: use location
  new_oload_syms = malloc(100 * sizeof(struct symbol *)); /* allocation site */
                 ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 9dot graph target basicblock en1

dot graph stmt start if (new_oload_syms_38 == 0B)
new_oload_syms_38 = malloc (800);
dot graph stmt end

dot graph stmt start if (new_oload_syms_38 == 0B)
test.c:78:5: warning: use location
  if (!new_oload_syms)
     ^
dot graph stmt end

if (new_oload_syms_38 == 0B)

 ================== find cond branch ================= 
if (new_oload_syms_38 == 0B)
Cond in fucntion find_oload_champ_namespace_loop basic block 9
 ================== possiable direct basic block ================= 
from find_oload_champ_namespace_loop basic block 10
 ================== possiable direct basic block ================= 
from find_oload_champ_namespace_loop basic block 11
 ================== warring ================== 
[40;35m    need check this branch possiable have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
dot graph target basicblock start from find_oload_champ_namespace_loop basic block 15dot graph target basicblock en1

dot graph arrowsubgraph cluster_1060508872 dot graph subgraph  *oload_syms_26(D) = new_oload_syms_38;
new_oload_syms_38 = malloc (800);
dot graph subgrapend

 <ssa_name 0x7fa6561f2c60
    type <pointer_type 0x7fa6561d42a0
        type <pointer_type 0x7fa6561d4348 type <record_type 0x7fa6561d43f0 symbol>
            public unsigned DI
            size <integer_cst 0x7fa65668dbe8 constant 64>
            unit size <integer_cst 0x7fa65668dc00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fa6561d42a0>>
        public unsigned DI size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561d41f8>>
    var <var_decl 0x7fa6561f0480 new_oload_syms>
    def_stmt new_oload_syms_38 = malloc (800);
    version 38
    ptr-info 0x7fa656205210>

 ================== Start Use after free Check ================== 
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
test.c:94:4: warning: Use after free error!: free location 
    free (new_oload_syms);
    ^
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
test.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================

 <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop
    type <function_type 0x7fa6561d40a8
        type <integer_type 0x7fa6566a15e8 int public SI
            size <integer_cst 0x7fa65668de28 constant 32>
            unit size <integer_cst 0x7fa65668de40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
            pointer_to_this <pointer_type 0x7fa6566a8a80>>
        QI
        size <integer_cst 0x7fa65668dcd8 constant 8>
        unit size <integer_cst 0x7fa65668dcf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7fa6561d3be0 value <pointer_type 0x7fa6561d4f18>
            chain <tree_list 0x7fa6561d3c08 value <integer_type 0x7fa6566a15e8 int>
                chain <tree_list 0x7fa6561d3c30 value <pointer_type 0x7fa6561d41f8>
                    chain <tree_list 0x7fa6561d3b90 value <pointer_type 0x7fa6561d4d20>
                        chain <tree_list 0x7fa6561d3af0 value <pointer_type 0x7fa6566a8a80> chain <tree_list 0x7fa6566a0ac8>>>>>>
        pointer_to_this <pointer_type 0x7fa6561dcc78>>
    addressable nothrow static function-specific-target function-specific-opt QI file test.c line 34 col 1 align 8 context <translation_unit_decl 0x7fa656698168 test.c> initial <block 0x7fa6561e8300>
    result <result_decl 0x7fa6566983c0 D.4029 type <integer_type 0x7fa6566a15e8 int>
        ignored SI file test.c line 34 col 1 size <integer_cst 0x7fa65668de28 32> unit size <integer_cst 0x7fa65668de40 4>
        align 32 context <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop>>
    arguments <parm_decl 0x7fa6561df580 qualified_name
        type <pointer_type 0x7fa6561d4f18 type <integer_type 0x7fa6561d4e70 char>
            public unsigned DI
            size <integer_cst 0x7fa65668dbe8 constant 64>
            unit size <integer_cst 0x7fa65668dc00 constant 8>
            align 64 symtab 0 alias set -1 structural equality>
        unsigned DI file test.c line 35 col 15 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 context <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop> arg-type <pointer_type 0x7fa6561d4f18>
        chain <parm_decl 0x7fa6561df600 namespace_len type <integer_type 0x7fa6566a15e8 int>
            SI file test.c line 36 col 7 size <integer_cst 0x7fa65668de28 32> unit size <integer_cst 0x7fa65668de40 4>
            align 32 context <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop> arg-type <integer_type 0x7fa6566a15e8 int> chain <parm_decl 0x7fa6561df680 oload_syms>>>
    struct-function 0x7fa6561e9160>
 <ssa_name 0x7fa656200120
    type <pointer_type 0x7fa6561d4c78
        type <record_type 0x7fa6561d4bd0 badness_vector TI
            size <integer_cst 0x7fa65668dc30 constant 128>
            unit size <integer_cst 0x7fa65668dc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4bd0 fields <field_decl 0x7fa6561d64c0 length> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d4c78> chain <type_decl 0x7fa6561d6558 D.3994>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561d4d20>>
    var <var_decl 0x7fa6561ff6c0 bv>
    def_stmt bv_79 = malloc (16);
    version 79
    ptr-info 0x7fa656205318>

dot graph START

======================================================================
 <ssa_name 0x7fa656200120
    type <pointer_type 0x7fa6561d4c78
        type <record_type 0x7fa6561d4bd0 badness_vector TI
            size <integer_cst 0x7fa65668dc30 constant 128>
            unit size <integer_cst 0x7fa65668dc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4bd0 fields <field_decl 0x7fa6561d64c0 length> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d4c78> chain <type_decl 0x7fa6561d6558 D.3994>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561d4d20>>
    var <var_decl 0x7fa6561ff6c0 bv>
    def_stmt bv_79 = malloc (16);
    version 79
    ptr-info 0x7fa656205318>

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
 <ssa_name 0x7fa656200120
    type <pointer_type 0x7fa6561d4c78
        type <record_type 0x7fa6561d4bd0 badness_vector TI
            size <integer_cst 0x7fa65668dc30 constant 128>
            unit size <integer_cst 0x7fa65668dc48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6561d4bd0 fields <field_decl 0x7fa6561d64c0 length> context <translation_unit_decl 0x7fa656698168 test.c>
            pointer_to_this <pointer_type 0x7fa6561d4c78> chain <type_decl 0x7fa6561d6558 D.3994>>
        public unsigned DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fa6561d4d20>>
    var <var_decl 0x7fa6561ff6c0 bv>
    def_stmt bv_79 = malloc (16);
    version 79
    ptr-info 0x7fa656205318>

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
 <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop
    type <function_type 0x7fa6561d40a8
        type <integer_type 0x7fa6566a15e8 int public SI
            size <integer_cst 0x7fa65668de28 constant 32>
            unit size <integer_cst 0x7fa65668de40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
            pointer_to_this <pointer_type 0x7fa6566a8a80>>
        QI
        size <integer_cst 0x7fa65668dcd8 constant 8>
        unit size <integer_cst 0x7fa65668dcf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality
        arg-types <tree_list 0x7fa6561d3be0 value <pointer_type 0x7fa6561d4f18>
            chain <tree_list 0x7fa6561d3c08 value <integer_type 0x7fa6566a15e8 int>
                chain <tree_list 0x7fa6561d3c30 value <pointer_type 0x7fa6561d41f8>
                    chain <tree_list 0x7fa6561d3b90 value <pointer_type 0x7fa6561d4d20>
                        chain <tree_list 0x7fa6561d3af0 value <pointer_type 0x7fa6566a8a80> chain <tree_list 0x7fa6566a0ac8>>>>>>
        pointer_to_this <pointer_type 0x7fa6561dcc78>>
    addressable nothrow static function-specific-target function-specific-opt QI file test.c line 34 col 1 align 8 context <translation_unit_decl 0x7fa656698168 test.c> initial <block 0x7fa6561e8300>
    result <result_decl 0x7fa6566983c0 D.4029 type <integer_type 0x7fa6566a15e8 int>
        ignored SI file test.c line 34 col 1 size <integer_cst 0x7fa65668de28 32> unit size <integer_cst 0x7fa65668de40 4>
        align 32 context <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop>>
    arguments <parm_decl 0x7fa6561df580 qualified_name
        type <pointer_type 0x7fa6561d4f18 type <integer_type 0x7fa6561d4e70 char>
            public unsigned DI
            size <integer_cst 0x7fa65668dbe8 constant 64>
            unit size <integer_cst 0x7fa65668dc00 constant 8>
            align 64 symtab 0 alias set -1 structural equality>
        unsigned DI file test.c line 35 col 15 size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
        align 64 context <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop> arg-type <pointer_type 0x7fa6561d4f18>
        chain <parm_decl 0x7fa6561df600 namespace_len type <integer_type 0x7fa6566a15e8 int>
            SI file test.c line 36 col 7 size <integer_cst 0x7fa65668de28 32> unit size <integer_cst 0x7fa65668de40 4>
            align 32 context <function_decl 0x7fa6561d5d00 find_oload_champ_namespace_loop> arg-type <integer_type 0x7fa6566a15e8 int> chain <parm_decl 0x7fa6561df680 oload_syms>>>
    struct-function 0x7fa6561e9160>
 <ssa_name 0x7fa6561f2678
    type <integer_type 0x7fa6566a15e8 int public SI
        size <integer_cst 0x7fa65668de28 constant 32>
        unit size <integer_cst 0x7fa65668de40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
        pointer_to_this <pointer_type 0x7fa6566a8a80>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version 7>

dot graph START

======================================================================
 <ssa_name 0x7fa6561f2678
    type <integer_type 0x7fa6566a15e8 int public SI
        size <integer_cst 0x7fa65668de28 constant 32>
        unit size <integer_cst 0x7fa65668de40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
        pointer_to_this <pointer_type 0x7fa6566a8a80>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version 7>

 ================== trace ptable================== 
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 8 level :-100========  [0m
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :-100========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 2 level :-100========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
find_oload_champ_namespace_loop this fucntion return value is heap-object 
find_oload_champ_namespace_loop this fucntion return value is heap-object find_oload_champ_namespace_loop
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 8 level :-100========  [0m
[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :-100========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 2 level :-100========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
find_oload_champ_namespace_loop this fucntion return value is heap-object 
find_oload_champ_namespace_loop this fucntion return value is heap-object find_oload_champ_namespace_loop
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
some fucntion return value is heap-object and with Collection SSA_NAME alias relation

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---find_oload_champ_namespace_loop-----
this other function ------find_oload_champ_namespace_loop-----
 
 Start check Pointer Collect  

======================================================================
dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
dot graph target loc en1

dot graph target line desc form basic block 4: _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
dot graph target line desend

dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 4dot graph target basicblock en1

dot graph stmt start _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
dot graph stmt end

dot graph stmt start _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
dot graph stmt end

this stmt is child function---find_oload_champ_namespace_loop-----

 ================== trace ================== 
 <ssa_name 0x7fa6561f2678
    type <integer_type 0x7fa6566a15e8 int public SI
        size <integer_cst 0x7fa65668de28 constant 32>
        unit size <integer_cst 0x7fa65668de40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
        pointer_to_this <pointer_type 0x7fa6566a8a80>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version 7>
trace fucntion name:find_oload_champ_namespace_loop 
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 8 level :0========  [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
test.c:94:4: warning: use location
    free (new_oload_syms);
    ^
dot graph start relate form ID : 716101528
from find_oload_champ_namespace_loop basic block 14dot graph end relate end

dot graph relate stmt start ID : 590858545 stmt(free) :free (new_oload_syms_38);
test.c:94:4: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 590858545 stmt(free) :free (new_oload_syms_38);
test.c:94:4: warning: use location
dot graph relate end

# .MEM_59 = VDEF <.MEM_58>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_58>
free (_14);
test.c:95:4: warning: use location
    free (new_oload_champ_bv);
    ^
dot graph start relate form ID : 716101528
from find_oload_champ_namespace_loop basic block 14dot graph end relate end

dot graph relate stmt start ID : 1588520649 stmt(free) :free (_14);
test.c:95:4: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1588520649 stmt(free) :free (_14);
test.c:95:4: warning: use location
dot graph relate end

[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_22 = VDEF <.MEM_16>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ptr_10);
common.h:91:7: warning: use location
       free (ptr);
       ^
dot graph start relate form ID : 1971970455
from discard_my_cleanups basic block 5dot graph end relate end

dot graph relate stmt start ID : 763490266 stmt(free) :free (ptr_10);
common.h:91:7: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 763490266 stmt(free) :free (ptr_10);
common.h:91:7: warning: use location
dot graph relate end

[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 2 level :1========  [0m
# .MEM_28 = VDEF <.MEM_20>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_20>
free (ptr_12);
common.h:112:4: warning: use location
    free (ptr);
    ^
dot graph start relate form ID : 1142199561
from do_my_cleanups basic block 5dot graph end relate end

dot graph relate stmt start ID : 1037445846 stmt(free) :free (ptr_12);
common.h:112:4: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1037445846 stmt(free) :free (ptr_12);
common.h:112:4: warning: use location
dot graph relate end

[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
find_oload_champ_namespace_loop this fucntion return value is heap-object 
find_oload_champ_namespace_loop this fucntion return value is heap-object find_oload_champ_namespace_loop
[40;46m =======add node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;44m =======trace_function_path find_oload_champ_namespace_loop  function_call count: 8 level :1========  [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
[40;31m  find free stmt free same pointer [0m
# .MEM_58 = VDEF <.MEM_99>
free (new_oload_syms_38);
test.c:94:4: warning: use location
    free (new_oload_syms);
    ^
dot graph start relate form ID : 810710674
from find_oload_champ_namespace_loop basic block 14dot graph end relate end

dot graph relate stmt start ID : 409563439 stmt(free) :free (new_oload_syms_38);
test.c:94:4: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 409563439 stmt(free) :free (new_oload_syms_38);
test.c:94:4: warning: use location
dot graph relate end

# .MEM_59 = VDEF <.MEM_58>
free (_14);
[40;31m  find free stmt free same pointer [0m
# .MEM_59 = VDEF <.MEM_58>
free (_14);
test.c:95:4: warning: use location
    free (new_oload_champ_bv);
    ^
dot graph start relate form ID : 810710674
from find_oload_champ_namespace_loop basic block 14dot graph end relate end

dot graph relate stmt start ID : 77234259 stmt(free) :free (_14);
test.c:95:4: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 77234259 stmt(free) :free (_14);
test.c:95:4: warning: use location
dot graph relate end

[40;42m =======pre add _ fucntion:discard_my_cleanups========= [0m
[40;46m =======add node_fun stack:discard_my_cleanups========= [0m
[40;44m =======trace_function_path discard_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_22 = VDEF <.MEM_16>
free (ptr_10);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ptr_10);
common.h:91:7: warning: use location
       free (ptr);
       ^
dot graph start relate form ID : 2143009837
from discard_my_cleanups basic block 5dot graph end relate end

dot graph relate stmt start ID : 1776393374 stmt(free) :free (ptr_10);
common.h:91:7: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 1776393374 stmt(free) :free (ptr_10);
common.h:91:7: warning: use location
dot graph relate end

[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 2 level :2========  [0m
# .MEM_28 = VDEF <.MEM_20>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_28 = VDEF <.MEM_20>
free (ptr_12);
common.h:112:4: warning: use location
    free (ptr);
    ^
dot graph start relate form ID : 1823704774
from do_my_cleanups basic block 5dot graph end relate end

dot graph relate stmt start ID : 436200183 stmt(free) :free (ptr_12);
common.h:112:4: warning: use location
dot graph relate end

dot graph target color descgreendot graph target color desend

dot graph relate stmt start ID : 436200183 stmt(free) :free (ptr_12);
common.h:112:4: warning: use location
dot graph relate end

[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:find_oload_champ_namespace_loop========= [0m
[40;41m =======recursive_fun2:find_oload_champ_namespace_loop========= [0m
find_oload_champ_namespace_loop this fucntion return value is heap-object 
find_oload_champ_namespace_loop this fucntion return value is heap-object find_oload_champ_namespace_loop
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:8 
dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

*oload_syms_26(D) = new_oload_syms_38;
test.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^
dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc en1

dot graph target line desc form basic block 15: *oload_syms_26(D) = new_oload_syms_38;
test.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 15dot graph target basicblock en1

dot graph stmt start *oload_syms_26(D) = new_oload_syms_38;
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
dot graph stmt end

dot graph stmt start *oload_syms_26(D) = new_oload_syms_38;
test.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

*oload_syms_26(D) = new_oload_syms_38;
test.c:86:16: warning: use location
    *oload_syms = new_oload_syms;
                ^
dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc en1

dot graph target line desc form basic block 12: *oload_syms_26(D) = new_oload_syms_38;
test.c:86:16: warning: use location
    *oload_syms = new_oload_syms;
                ^
dot graph target line desend

dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 12dot graph target basicblock en1

dot graph stmt start *oload_syms_26(D) = new_oload_syms_38;
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
dot graph stmt end

dot graph stmt start *oload_syms_26(D) = new_oload_syms_38;
test.c:86:16: warning: use location
    *oload_syms = new_oload_syms;
                ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

_8 = *oload_syms_26(D);
test.c:73:18: warning: use location
   old_cleanups = make_cleanup (free, *oload_syms);   /* double-free */
                  ^
dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc en1

dot graph target line desc form basic block 5: _8 = *oload_syms_26(D);
test.c:73:18: warning: use location
   old_cleanups = make_cleanup (free, *oload_syms);   /* double-free */
                  ^
dot graph target line desend

dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 5dot graph target basicblock en1

dot graph stmt start _8 = *oload_syms_26(D);
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
dot graph stmt end

dot graph stmt start _8 = *oload_syms_26(D);
test.c:73:18: warning: use location
   old_cleanups = make_cleanup (free, *oload_syms);   /* double-free */
                  ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

*oload_syms_26(D) = 0B;
test.c:57:15: warning: use location
   *oload_syms = NULL;
               ^
dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc en1

dot graph target line desc form basic block 2: *oload_syms_26(D) = 0B;
test.c:57:15: warning: use location
   *oload_syms = NULL;
               ^
dot graph target line desend

dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 2dot graph target basicblock en1

dot graph stmt start *oload_syms_26(D) = 0B;
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
dot graph stmt end

dot graph stmt start *oload_syms_26(D) = 0B;
test.c:57:15: warning: use location
   *oload_syms = NULL;
               ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

*oload_champ_bv_28(D) = _15;
test.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^
dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc en1

dot graph target line desc form basic block 15: *oload_champ_bv_28(D) = _15;
test.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^
dot graph target line desend

dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 15dot graph target basicblock en1

dot graph stmt start *oload_champ_bv_28(D) = _15;
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
dot graph stmt end

dot graph stmt start *oload_champ_bv_28(D) = _15;
test.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

*oload_champ_bv_28(D) = _13;
test.c:88:20: warning: use location
    *oload_champ_bv = new_oload_champ_bv;
                    ^
dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc en1

dot graph target line desc form basic block 12: *oload_champ_bv_28(D) = _13;
test.c:88:20: warning: use location
    *oload_champ_bv = new_oload_champ_bv;
                    ^
dot graph target line desend

dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 12dot graph target basicblock en1

dot graph stmt start *oload_champ_bv_28(D) = _13;
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
dot graph stmt end

dot graph stmt start *oload_champ_bv_28(D) = _13;
test.c:88:20: warning: use location
    *oload_champ_bv = new_oload_champ_bv;
                    ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

_9 = *oload_champ_bv_28(D);
test.c:74:18: warning: use location
   old_cleanups = make_cleanup (free, *oload_champ_bv);
                  ^
dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc en1

dot graph target line desc form basic block 7: _9 = *oload_champ_bv_28(D);
test.c:74:18: warning: use location
   old_cleanups = make_cleanup (free, *oload_champ_bv);
                  ^
dot graph target line desend

dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 7dot graph target basicblock en1

dot graph stmt start _9 = *oload_champ_bv_28(D);
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
dot graph stmt end

dot graph stmt start _9 = *oload_champ_bv_28(D);
test.c:74:18: warning: use location
   old_cleanups = make_cleanup (free, *oload_champ_bv);
                  ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

*oload_champ_bv_28(D) = 0B;
test.c:58:19: warning: use location
   *oload_champ_bv = NULL;
                   ^
dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc en1

dot graph target line desc form basic block 2: *oload_champ_bv_28(D) = 0B;
test.c:58:19: warning: use location
   *oload_champ_bv = NULL;
                   ^
dot graph target line desend

dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 2dot graph target basicblock en1

dot graph stmt start *oload_champ_bv_28(D) = 0B;
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
dot graph stmt end

dot graph stmt start *oload_champ_bv_28(D) = 0B;
test.c:58:19: warning: use location
   *oload_champ_bv = NULL;
                   ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

*oload_champ_31(D) = new_oload_champ_41;
test.c:102:20: warning: use location
       *oload_champ = new_oload_champ;
                    ^
dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc en1

dot graph target line desc form basic block 15: *oload_champ_31(D) = new_oload_champ_41;
test.c:102:20: warning: use location
       *oload_champ = new_oload_champ;
                    ^
dot graph target line desend

dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 15dot graph target basicblock en1

dot graph stmt start *oload_champ_31(D) = new_oload_champ_41;
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
dot graph stmt end

dot graph stmt start *oload_champ_31(D) = new_oload_champ_41;
test.c:102:20: warning: use location
       *oload_champ = new_oload_champ;
                    ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

*oload_champ_31(D) = new_oload_champ_41;
test.c:87:17: warning: use location
    *oload_champ = new_oload_champ;
                 ^
dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc en1

dot graph target line desc form basic block 12: *oload_champ_31(D) = new_oload_champ_41;
test.c:87:17: warning: use location
    *oload_champ = new_oload_champ;
                 ^
dot graph target line desend

dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 12dot graph target basicblock en1

dot graph stmt start *oload_champ_31(D) = new_oload_champ_41;
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
dot graph stmt end

dot graph stmt start *oload_champ_31(D) = new_oload_champ_41;
test.c:87:17: warning: use location
    *oload_champ = new_oload_champ;
                 ^
dot graph stmt end

dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

_3 = strlen (qualified_name_24(D));
test.c:54:17: warning: use location
  int name_len = strlen(qualified_name);
                 ^
dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc en1

dot graph target line desc form basic block 2: _3 = strlen (qualified_name_24(D));
test.c:54:17: warning: use location
  int name_len = strlen(qualified_name);
                 ^
dot graph target line desend

dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 2dot graph target basicblock en1

dot graph stmt start _3 = strlen (qualified_name_24(D));
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
dot graph stmt end

dot graph stmt start _3 = strlen (qualified_name_24(D));
test.c:54:17: warning: use location
  int name_len = strlen(qualified_name);
                 ^
dot graph stmt end

this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7fa6561f2678
    type <integer_type 0x7fa6566a15e8 int public SI
        size <integer_cst 0x7fa65668de28 constant 32>
        unit size <integer_cst 0x7fa65668de40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
        pointer_to_this <pointer_type 0x7fa6566a8a80>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version 7>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:8 
dot graph entry find_oload_champ_namespace_loop
dot graph target entry end

_5 = qualified_name_24(D) + _4;
test.c:60:55: warning: use location
  if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
                                                       ^
dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc en1

dot graph target line desc form basic block 3: _5 = qualified_name_24(D) + _4;
test.c:60:55: warning: use location
  if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
                                                       ^
dot graph target line desend

dot graph target loc start # .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: use location
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
dot graph target loc end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 3dot graph target basicblock en1

dot graph stmt start _5 = qualified_name_24(D) + _4;
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
dot graph stmt end

dot graph stmt start _5 = qualified_name_24(D) + _4;
test.c:60:55: warning: use location
  if ((next_namespace_len < name_len) && qualified_name[next_namespace_len] == ':')
                                                       ^
dot graph stmt end

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 15dot graph target basicblock en1

dot graph arrowsubgraph cluster_1632818273 dot graph subgraph  *oload_syms_26(D) = new_oload_syms_38;
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 15dot graph target basicblock en1

dot graph arrowsubgraph cluster_1902923515 dot graph subgraph  *oload_champ_bv_28(D) = _15;
GIMPLE_NOP
dot graph subgrapend

dot graph target basicblock start from find_oload_champ_namespace_loop basic block 15dot graph target basicblock en1

dot graph arrowsubgraph cluster_47714028 dot graph subgraph  *oload_champ_31(D) = new_oload_champ_41;
GIMPLE_NOP
dot graph subgrapend

 <ssa_name 0x7fa6561f2678
    type <integer_type 0x7fa6566a15e8 int public SI
        size <integer_cst 0x7fa65668de28 constant 32>
        unit size <integer_cst 0x7fa65668de40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
        pointer_to_this <pointer_type 0x7fa6566a8a80>>
   
    def_stmt _7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
    version 7>

 ================== Start Use after free Check ================== 
# .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: Use after free error!: free location 
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
# .MEM_54 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
test.c:101:19: warning: use location
       *oload_syms = new_oload_syms;
                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: Use after free error!: free location 
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
# .MEM_61 = VDEF <.MEM_99>
*oload_syms_26(D) = new_oload_syms_38;
test.c:86:16: warning: use location
    *oload_syms = new_oload_syms;
                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: Use after free error!: free location 
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
# VUSE <.MEM_42>
_8 = *oload_syms_26(D);
test.c:73:18: warning: use location
   old_cleanups = make_cleanup (free, *oload_syms);   /* double-free */
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: Use after free error!: free location 
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
# .MEM_56 = VDEF <.MEM_55>
*oload_champ_bv_28(D) = _15;
test.c:103:23: warning: use location
       *oload_champ_bv = new_oload_champ_bv;
                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: Use after free error!: free location 
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
# .MEM_63 = VDEF <.MEM_62>
*oload_champ_bv_28(D) = _13;
test.c:88:20: warning: use location
    *oload_champ_bv = new_oload_champ_bv;
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: Use after free error!: free location 
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
# VUSE <.MEM_85>
_9 = *oload_champ_bv_28(D);
test.c:74:18: warning: use location
   old_cleanups = make_cleanup (free, *oload_champ_bv);
                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: Use after free error!: free location 
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
# .MEM_55 = VDEF <.MEM_54>
*oload_champ_31(D) = new_oload_champ_41;
test.c:102:20: warning: use location
       *oload_champ = new_oload_champ;
                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 
# .MEM_48 = VDEF <.MEM_47>
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
test.c:65:7: warning: Use after free error!: free location 
   if (find_oload_champ_namespace_loop (qualified_name, next_namespace_len,
       ^
# .MEM_62 = VDEF <.MEM_61>
*oload_champ_31(D) = new_oload_champ_41;
test.c:87:17: warning: use location
    *oload_champ = new_oload_champ;
                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;31m    this function with other function alias that other function return value is heap-object [0m
[40;31m  	possible double free :8 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:find_oload_champ_namespace_loop========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m
 <function_decl 0x7fa6561d5b00 main
    type <function_type 0x7fa6561d47e0
        type <integer_type 0x7fa6566a15e8 int public SI
            size <integer_cst 0x7fa65668de28 constant 32>
            unit size <integer_cst 0x7fa65668de40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fa6566a15e8 precision 32 min <integer_cst 0x7fa65668dde0 -2147483648> max <integer_cst 0x7fa65668ddf8 2147483647>
            pointer_to_this <pointer_type 0x7fa6566a8a80>>
        QI
        size <integer_cst 0x7fa65668dcd8 constant 8>
        unit size <integer_cst 0x7fa65668dcf0 constant 1>
        align 8 symtab 0 alias set -1 structural equality>
    nothrow public static function-specific-target function-specific-opt QI file test.c line 109 col 5 align 8 context <translation_unit_decl 0x7fa656698168 test.c> initial <block 0x7fa6561e8ea0>
    result <result_decl 0x7fa656698708 D.4108 type <integer_type 0x7fa6566a15e8 int>
        ignored SI file test.c line 109 col 5 size <integer_cst 0x7fa65668de28 32> unit size <integer_cst 0x7fa65668de40 4>
        align 32 context <function_decl 0x7fa6561d5b00 main>>
    struct-function 0x7fa6561e9630>
 <string_cst 0x7fa6561fb960
    type <array_type 0x7fa6561dcdc8
        type <integer_type 0x7fa6561d4dc8 char public string-flag QI
            size <integer_cst 0x7fa65668dcd8 constant 8>
            unit size <integer_cst 0x7fa65668dcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa6566a13f0 precision 8 min <integer_cst 0x7fa6561d7180 -128> max <integer_cst 0x7fa6561d7168 127> context <translation_unit_decl 0x7fa656698168 test.c>>
        DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 8 symtab 0 alias set -1 structural equality
        domain <integer_type 0x7fa6561dcd20 type <integer_type 0x7fa6566a1000 sizetype>
            DI size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6566a1738 precision 64 min <integer_cst 0x7fa65668dc18 0> max <integer_cst 0x7fa6561d72a0 7>>
        pointer_to_this <pointer_type 0x7fa6561dce70>>
    readonly constant static "A::B::C\000">

dot graph START

======================================================================
 <string_cst 0x7fa6561fb960
    type <array_type 0x7fa6561dcdc8
        type <integer_type 0x7fa6561d4dc8 char public string-flag QI
            size <integer_cst 0x7fa65668dcd8 constant 8>
            unit size <integer_cst 0x7fa65668dcf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fa6566a13f0 precision 8 min <integer_cst 0x7fa6561d7180 -128> max <integer_cst 0x7fa6561d7168 127> context <translation_unit_decl 0x7fa656698168 test.c>>
        DI
        size <integer_cst 0x7fa65668dbe8 constant 64>
        unit size <integer_cst 0x7fa65668dc00 constant 8>
        align 8 symtab 0 alias set -1 structural equality
        domain <integer_type 0x7fa6561dcd20 type <integer_type 0x7fa6566a1000 sizetype>
            DI size <integer_cst 0x7fa65668dbe8 64> unit size <integer_cst 0x7fa65668dc00 8>
            align 64 symtab 0 alias set -1 canonical type 0x7fa6566a1738 precision 64 min <integer_cst 0x7fa65668dc18 0> max <integer_cst 0x7fa6561d72a0 7>>
        pointer_to_this <pointer_type 0x7fa6561dce70>>
    readonly constant static "A::B::C\000">
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 6
 [0m
[40;34m    used_stmt array stack totalsize of : 496
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
algorithm time: 0.020569 s
=======Mapping node_fun:discard_my_cleanups=========
<bb 2> [15.00%]:
goto <bb 6>; [100.00%]

=======is loop:0=========
<bb 3> [85.00%]:
_1 = ptr_10->next;
*pmy_chain_9(D) = _1;
_2 = ptr_10->free_arg;
if (_2 != 0B)
  goto <bb 4>; [93.48%]
else
  goto <bb 5>; [6.52%]

=======is loop:1=========
<bb 4> [79.46%]:
_3 = ptr_10->free_arg;
_4 = ptr_10->arg;
_3 (_4);

=======is loop:1=========
<bb 5> [85.00%]:
free (ptr_10);

=======is loop:1=========
<bb 6> [100.00%]:
ptr_10 = *pmy_chain_9(D);
if (ptr_10 != old_chain_11(D))
  goto <bb 3>; [85.00%]
else
  goto <bb 7>; [15.00%]

=======is loop:1=========
<bb 7> [15.00%]:
_5 = ptr_10->arg;
_15 = __printf_chk (1, "freearg: %x\n", _5);
return;

=======is loop:0=========
=======Mapping node_fun:do_my_cleanups=========
<bb 2> [15.00%]:
goto <bb 6>; [100.00%]

=======is loop:0=========
<bb 3> [85.00%]:
_1 = ptr_12->next;
*pmy_chain_11(D) = _1;
_2 = ptr_12->function;
_3 = ptr_12->arg;
_2 (_3);
_19 = __printf_chk (1, "cleanup!!!!! =========\n");
_4 = ptr_12->arg;
_18 = __printf_chk (1, "%x\n", _4);
_5 = ptr_12->free_arg;
if (_5 != 0B)
  goto <bb 4>; [93.48%]
else
  goto <bb 5>; [6.52%]

=======is loop:1=========
<bb 4> [79.46%]:
_6 = ptr_12->free_arg;
_7 = ptr_12->arg;
_6 (_7);

=======is loop:1=========
<bb 5> [85.00%]:
free (ptr_12);

=======is loop:1=========
<bb 6> [100.00%]:
ptr_12 = *pmy_chain_11(D);
if (ptr_12 != old_chain_13(D))
  goto <bb 3>; [85.00%]
else
  goto <bb 7>; [15.00%]

=======is loop:1=========
<bb 7> [15.00%]:
return;

=======is loop:0=========
=======Mapping node_fun:find_oload_champ_namespace_loop=========
<bb 2> [100.00%]:
_1 = static_call_num;
_2 = _1 + 1;
static_call_num = _2;
call_num_23 = static_call_num;
_3 = strlen (qualified_name_24(D));
name_len_25 = (int) _3;
*oload_syms_26(D) = 0B;
*oload_champ_bv_28(D) = 0B;
if (namespace_len_20(D) < name_len_25)
  goto <bb 3>; [67.00%]
else
  goto <bb 5>; [33.00%]

=======is loop:0=========
<bb 3> [67.00%]:
_4 = (sizetype) namespace_len_20(D);
_5 = qualified_name_24(D) + _4;
_6 = *_5;
if (_6 == 58)
  goto <bb 4>; [7.80%]
else
  goto <bb 5>; [92.20%]

=======is loop:0=========
<bb 4> [5.23%]:
next_namespace_len_30 = namespace_len_20(D) + 3;
_7 = find_oload_champ_namespace_loop (qualified_name_24(D), next_namespace_len_30, oload_syms_26(D), oload_champ_bv_28(D), oload_champ_31(D));
if (_7 != 0)
  goto <bb 16>; [46.00%]
else
  goto <bb 5>; [54.00%]

=======is loop:0=========
<bb 5> [97.60%]:
# searched_deeper_16 = PHI <0(2), 0(3), 1(4)>
_8 = *oload_syms_26(D);
new_70 = malloc (32);
old_chain_71 = cleanup_chain;
_72 = cleanup_chain;
new_70->next = _72;
new_70->function = free;
new_70->free_arg = 0B;
new_70->arg = _8;
cleanup_chain = new_70;
if (old_chain_71 == 0B)
  goto <bb 6>; [0.04%]
else
  goto <bb 7>; [99.96%]

=======is loop:0=========
<bb 6> [0.04%]:
exit (1);

=======is loop:0=========
<bb 7> [97.56%]:
_86 = old_chain_71;
_69 = _86;
_87 = _69;
_68 = _87;
_88 = _68;
old_cleanups_34 = _88;
_9 = *oload_champ_bv_28(D);
new_74 = malloc (32);
old_chain_75 = cleanup_chain;
_76 = cleanup_chain;
new_74->next = _76;
new_74->function = free;
new_74->free_arg = 0B;
new_74->arg = _9;
cleanup_chain = new_74;
if (old_chain_75 == 0B)
  goto <bb 8>; [0.04%]
else
  goto <bb 9>; [99.96%]

=======is loop:0=========
<bb 8> [0.04%]:
exit (1);

=======is loop:0=========
<bb 9> [97.52%]:
_95 = old_chain_75;
_73 = _95;
_96 = _73;
_67 = _96;
_97 = _67;
old_cleanups_36 = _97;
new_oload_syms_38 = malloc (800);
if (new_oload_syms_38 == 0B)
  goto <bb 10>; [0.04%]
else
  goto <bb 11>; [99.96%]

=======is loop:0=========
<bb 10> [0.04%]:
exit (1);

=======is loop:0=========
<bb 11> [97.48%]:
*new_oload_syms_38 = 0B;
_77 = MEM[(int *)new_oload_syms_38];
_78 = __printf_chk (1, "%d\n", _77);
bv_79 = malloc (16);
new_oload_champ_bv_107 = bv_79;
_101 = -1;
new_oload_champ_41 = _101;
_10 = new_oload_champ_41 != -1;
_11 = call_num_23 == 1;
_12 = _10 | _11;
if (_12 != 0)
  goto <bb 12>; [29.56%]
else
  goto <bb 13>; [70.44%]

=======is loop:0=========
<bb 12> [28.81%]:
*oload_syms_26(D) = new_oload_syms_38;
*oload_champ_31(D) = new_oload_champ_41;
_13 = new_oload_champ_bv_107;
*oload_champ_bv_28(D) = _13;
do_my_cleanups (&cleanup_chain, old_cleanups_36);
goto <bb 16>; [100.00%]

=======is loop:0=========
<bb 13> [68.66%]:
if (searched_deeper_16 != 0)
  goto <bb 14>; [46.00%]
else
  goto <bb 15>; [54.00%]

=======is loop:0=========
<bb 14> [31.59%]:
free (new_oload_syms_38);
_14 = new_oload_champ_bv_107;
free (_14);
discard_my_cleanups (&cleanup_chain, old_cleanups_36);
goto <bb 16>; [100.00%]

=======is loop:0=========
<bb 15> [37.08%]:
*oload_syms_26(D) = new_oload_syms_38;
*oload_champ_31(D) = new_oload_champ_41;
_15 = new_oload_champ_bv_107;
*oload_champ_bv_28(D) = _15;
discard_my_cleanups (&cleanup_chain, old_cleanups_36);

=======is loop:0=========
<bb 16> [99.88%]:
# _17 = PHI <1(4), 1(12), 0(14), 0(15)>
return _17;

=======is loop:0=========
=======Mapping node_fun:main=========
<bb 2> [100.00%]:
find_oload_champ_namespace_loop ("A::B::C", 1, &symvec, &bvvec, &oload_champ);
do_my_cleanups (&cleanup_chain, 0B);
symvec ={v} {CLOBBER};
bvvec ={v} {CLOBBER};
oload_champ ={v} {CLOBBER};
return 0;

=======is loop:0=========
time: 0.044396 s
