=======ipa_pta=========
# .MEM_36 = VDEF <.MEM_35>
MEM[(struct st *)p_19 + 48B].f = _1;
 <component_ref 0x7f0bfc797480
    type <pointer_type 0x7f0bfc7b3a80
        type <integer_type 0x7f0bfc7ac5e8 int public SI
            size <integer_cst 0x7f0bfc798e28 constant 32>
            unit size <integer_cst 0x7f0bfc798e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f0bfc7ac5e8 precision 32 min <integer_cst 0x7f0bfc798de0 -2147483648> max <integer_cst 0x7f0bfc798df8 2147483647>
            pointer_to_this <pointer_type 0x7f0bfc7b3a80>>
        unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <mem_ref 0x7f0bfc2d7208
        type <record_type 0x7f0bfc2c8a80 st TI
            size <integer_cst 0x7f0bfc798c30 constant 128>
            unit size <integer_cst 0x7f0bfc798c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0bfc2c8a80 fields <field_decl 0x7f0bfc2ca260 flag> context <translation_unit_decl 0x7f0bfc7a3168 test.c>
            pointer_to_this <pointer_type 0x7f0bfc2c8b28> chain <type_decl 0x7f0bfc2ca2f8 D.3991>>
       
        arg 0 <ssa_name 0x7f0bfc7a0a68 type <pointer_type 0x7f0bfc2c8b28>
            var <var_decl 0x7f0bfd52dab0 p>
            def_stmt p_19 = malloc (10);
            version 19
            ptr-info 0x7f0bfc2cbc00>
        arg 1 <integer_cst 0x7f0bfc851c30 constant 48>
        test.c:62:4 start: test.c:62:4 finish: test.c:62:4>
    arg 1 <field_decl 0x7f0bfc2ca1c8 f type <pointer_type 0x7f0bfc7b3a80>
        unsigned DI file test.c line 15 col 7 size <integer_cst 0x7f0bfc798be8 64> unit size <integer_cst 0x7f0bfc798c00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7f0bfc798c18 constant 0> bit offset <integer_cst 0x7f0bfc798be8 64> context <record_type 0x7f0bfc2c8a80 st>>
    test.c:62:7 start: test.c:62:7 finish: test.c:62:7>
 <ssa_name 0x7f0bfc7a06c0
    type <pointer_type 0x7f0bfc7b30a8
        type <void_type 0x7f0bfc7acf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f0bfc7b30a8>>
        public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0bfc7b8bd0>>
   
    def_stmt _1 = malloc (1);
    version 1
    ptr-info 0x7f0bfc2cbb70>
_2 = (long unsigned int) i_11;
 <ssa_name 0x7f0bfc7a0708
    type <integer_type 0x7f0bfc7ac7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f0bfc7ac738 precision 64 min <integer_cst 0x7f0bfc798eb8 0> max <integer_cst 0x7f0bfc79a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f0bfc7b89d8>>
   
    def_stmt _2 = (long unsigned int) i_11;
    version 2>
 <ssa_name 0x7f0bfc7a0990
    type <integer_type 0x7f0bfc7ac5e8 int public SI
        size <integer_cst 0x7f0bfc798e28 constant 32>
        unit size <integer_cst 0x7f0bfc798e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f0bfc7ac5e8 precision 32 min <integer_cst 0x7f0bfc798de0 -2147483648> max <integer_cst 0x7f0bfc798df8 2147483647>
        pointer_to_this <pointer_type 0x7f0bfc7b3a80>>
    var <var_decl 0x7f0bfd52dbd0 i>
    def_stmt i_11 = PHI <0(2), i_29(3)>
    version 11>
_3 = _2 * 16;
 <ssa_name 0x7f0bfc7a0750
    type <integer_type 0x7f0bfc7ac7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f0bfc7ac738 precision 64 min <integer_cst 0x7f0bfc798eb8 0> max <integer_cst 0x7f0bfc79a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f0bfc7b89d8>>
   
    def_stmt _3 = _2 * 16;
    version 3>
 <ssa_name 0x7f0bfc7a0708
    type <integer_type 0x7f0bfc7ac7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f0bfc7ac738 precision 64 min <integer_cst 0x7f0bfc798eb8 0> max <integer_cst 0x7f0bfc79a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f0bfc7b89d8>>
   
    def_stmt _2 = (long unsigned int) i_11;
    version 2>
_4 = p_19 + _3;
 <ssa_name 0x7f0bfc7a0798
    type <pointer_type 0x7f0bfc2c8b28
        type <record_type 0x7f0bfc2c8a80 st TI
            size <integer_cst 0x7f0bfc798c30 constant 128>
            unit size <integer_cst 0x7f0bfc798c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0bfc2c8a80 fields <field_decl 0x7f0bfc2ca260 flag> context <translation_unit_decl 0x7f0bfc7a3168 test.c>
            pointer_to_this <pointer_type 0x7f0bfc2c8b28> chain <type_decl 0x7f0bfc2ca2f8 D.3991>>
        public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _4 = p_19 + _3;
    version 4
    ptr-info 0x7f0bfc2cbb88>
 <ssa_name 0x7f0bfc7a0a68
    type <pointer_type 0x7f0bfc2c8b28
        type <record_type 0x7f0bfc2c8a80 st TI
            size <integer_cst 0x7f0bfc798c30 constant 128>
            unit size <integer_cst 0x7f0bfc798c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0bfc2c8a80 fields <field_decl 0x7f0bfc2ca260 flag> context <translation_unit_decl 0x7f0bfc7a3168 test.c>
            pointer_to_this <pointer_type 0x7f0bfc2c8b28> chain <type_decl 0x7f0bfc2ca2f8 D.3991>>
        public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0bfd52dab0 p>
    def_stmt p_19 = malloc (10);
    version 19
    ptr-info 0x7f0bfc2cbc00>
# .MEM_41 = VDEF <.MEM_40>
_4->f = _5;
 <component_ref 0x7f0bfc7974b0
    type <pointer_type 0x7f0bfc7b3a80
        type <integer_type 0x7f0bfc7ac5e8 int public SI
            size <integer_cst 0x7f0bfc798e28 constant 32>
            unit size <integer_cst 0x7f0bfc798e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f0bfc7ac5e8 precision 32 min <integer_cst 0x7f0bfc798de0 -2147483648> max <integer_cst 0x7f0bfc798df8 2147483647>
            pointer_to_this <pointer_type 0x7f0bfc7b3a80>>
        unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <mem_ref 0x7f0bfc2d7230
        type <record_type 0x7f0bfc2c8a80 st TI
            size <integer_cst 0x7f0bfc798c30 constant 128>
            unit size <integer_cst 0x7f0bfc798c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0bfc2c8a80 fields <field_decl 0x7f0bfc2ca260 flag> context <translation_unit_decl 0x7f0bfc7a3168 test.c>
            pointer_to_this <pointer_type 0x7f0bfc2c8b28> chain <type_decl 0x7f0bfc2ca2f8 D.3991>>
       
        arg 0 <ssa_name 0x7f0bfc7a0798 type <pointer_type 0x7f0bfc2c8b28>
           
            def_stmt _4 = p_19 + _3;
            version 4
            ptr-info 0x7f0bfc2cbb88>
        arg 1 <integer_cst 0x7f0bfc2cbb10 constant 0>
        test.c:64:4 start: test.c:64:4 finish: test.c:64:4>
    arg 1 <field_decl 0x7f0bfc2ca1c8 f type <pointer_type 0x7f0bfc7b3a80>
        unsigned DI file test.c line 15 col 7 size <integer_cst 0x7f0bfc798be8 64> unit size <integer_cst 0x7f0bfc798c00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7f0bfc798c18 constant 0> bit offset <integer_cst 0x7f0bfc798be8 64> context <record_type 0x7f0bfc2c8a80 st>>
    test.c:64:7 start: test.c:64:7 finish: test.c:64:7>
 <ssa_name 0x7f0bfc7a07e0
    type <pointer_type 0x7f0bfc7b30a8
        type <void_type 0x7f0bfc7acf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f0bfc7b30a8>>
        public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0bfc7b8bd0>>
   
    def_stmt _5 = malloc (1);
    version 5
    ptr-info 0x7f0bfc2cbba0>
i_29 = i_11 + 1;
 <ssa_name 0x7f0bfc7a0b40
    type <integer_type 0x7f0bfc7ac5e8 int public SI
        size <integer_cst 0x7f0bfc798e28 constant 32>
        unit size <integer_cst 0x7f0bfc798e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f0bfc7ac5e8 precision 32 min <integer_cst 0x7f0bfc798de0 -2147483648> max <integer_cst 0x7f0bfc798df8 2147483647>
        pointer_to_this <pointer_type 0x7f0bfc7b3a80>>
    var <var_decl 0x7f0bfd52dbd0 i>
    def_stmt i_29 = i_11 + 1;
    version 29>
 <ssa_name 0x7f0bfc7a0990
    type <integer_type 0x7f0bfc7ac5e8 int public SI
        size <integer_cst 0x7f0bfc798e28 constant 32>
        unit size <integer_cst 0x7f0bfc798e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f0bfc7ac5e8 precision 32 min <integer_cst 0x7f0bfc798de0 -2147483648> max <integer_cst 0x7f0bfc798df8 2147483647>
        pointer_to_this <pointer_type 0x7f0bfc7b3a80>>
    var <var_decl 0x7f0bfd52dbd0 i>
    def_stmt i_11 = PHI <0(2), i_29(3)>
    version 11>
--------GIMPLE Cond -------
succs:= 4
# .MEM_38 = VDEF <.MEM_37>
MEM[(struct st *)p_19 + 32B].f = _6;
 <component_ref 0x7f0bfc7974e0
    type <pointer_type 0x7f0bfc7b3a80
        type <integer_type 0x7f0bfc7ac5e8 int public SI
            size <integer_cst 0x7f0bfc798e28 constant 32>
            unit size <integer_cst 0x7f0bfc798e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f0bfc7ac5e8 precision 32 min <integer_cst 0x7f0bfc798de0 -2147483648> max <integer_cst 0x7f0bfc798df8 2147483647>
            pointer_to_this <pointer_type 0x7f0bfc7b3a80>>
        unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <mem_ref 0x7f0bfc2d7258
        type <record_type 0x7f0bfc2c8a80 st TI
            size <integer_cst 0x7f0bfc798c30 constant 128>
            unit size <integer_cst 0x7f0bfc798c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0bfc2c8a80 fields <field_decl 0x7f0bfc2ca260 flag> context <translation_unit_decl 0x7f0bfc7a3168 test.c>
            pointer_to_this <pointer_type 0x7f0bfc2c8b28> chain <type_decl 0x7f0bfc2ca2f8 D.3991>>
       
        arg 0 <ssa_name 0x7f0bfc7a0a68 type <pointer_type 0x7f0bfc2c8b28>
            var <var_decl 0x7f0bfd52dab0 p>
            def_stmt p_19 = malloc (10);
            version 19
            ptr-info 0x7f0bfc2cbc00>
        arg 1 <integer_cst 0x7f0bfc2cbae0 constant 32>
        test.c:65:3 start: test.c:65:3 finish: test.c:65:3>
    arg 1 <field_decl 0x7f0bfc2ca1c8 f type <pointer_type 0x7f0bfc7b3a80>
        unsigned DI file test.c line 15 col 7 size <integer_cst 0x7f0bfc798be8 64> unit size <integer_cst 0x7f0bfc798c00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7f0bfc798c18 constant 0> bit offset <integer_cst 0x7f0bfc798be8 64> context <record_type 0x7f0bfc2c8a80 st>>
    test.c:65:6 start: test.c:65:6 finish: test.c:65:6>
 <ssa_name 0x7f0bfc7a0828
    type <pointer_type 0x7f0bfc7b30a8
        type <void_type 0x7f0bfc7acf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f0bfc7b30a8>>
        public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0bfc7b8bd0>>
   
    def_stmt _6 = malloc (1);
    version 6
    ptr-info 0x7f0bfc2cbbb8>
--------GIMPLE Cond -------
succs:= 5
_7 = (long unsigned int) i_12;
 <ssa_name 0x7f0bfc7a0870
    type <integer_type 0x7f0bfc7ac7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f0bfc7ac738 precision 64 min <integer_cst 0x7f0bfc798eb8 0> max <integer_cst 0x7f0bfc79a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f0bfc7b89d8>>
   
    def_stmt _7 = (long unsigned int) i_12;
    version 7>
 <ssa_name 0x7f0bfc7a09d8
    type <integer_type 0x7f0bfc7ac5e8 int public SI
        size <integer_cst 0x7f0bfc798e28 constant 32>
        unit size <integer_cst 0x7f0bfc798e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f0bfc7ac5e8 precision 32 min <integer_cst 0x7f0bfc798de0 -2147483648> max <integer_cst 0x7f0bfc798df8 2147483647>
        pointer_to_this <pointer_type 0x7f0bfc7b3a80>>
    var <var_decl 0x7f0bfd52dc60 i>
    def_stmt i_12 = PHI <0(9), i_26(6)>
    version 12>
_8 = _7 * 16;
 <ssa_name 0x7f0bfc7a08b8
    type <integer_type 0x7f0bfc7ac7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f0bfc7ac738 precision 64 min <integer_cst 0x7f0bfc798eb8 0> max <integer_cst 0x7f0bfc79a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f0bfc7b89d8>>
   
    def_stmt _8 = _7 * 16;
    version 8>
 <ssa_name 0x7f0bfc7a0870
    type <integer_type 0x7f0bfc7ac7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f0bfc7ac738 precision 64 min <integer_cst 0x7f0bfc798eb8 0> max <integer_cst 0x7f0bfc79a500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f0bfc7b89d8>>
   
    def_stmt _7 = (long unsigned int) i_12;
    version 7>
_9 = p_19 + _8;
 <ssa_name 0x7f0bfc7a0900
    type <pointer_type 0x7f0bfc2c8b28
        type <record_type 0x7f0bfc2c8a80 st TI
            size <integer_cst 0x7f0bfc798c30 constant 128>
            unit size <integer_cst 0x7f0bfc798c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0bfc2c8a80 fields <field_decl 0x7f0bfc2ca260 flag> context <translation_unit_decl 0x7f0bfc7a3168 test.c>
            pointer_to_this <pointer_type 0x7f0bfc2c8b28> chain <type_decl 0x7f0bfc2ca2f8 D.3991>>
        public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _9 = p_19 + _8;
    version 9
    ptr-info 0x7f0bfc2cbbd0>
 <ssa_name 0x7f0bfc7a0a68
    type <pointer_type 0x7f0bfc2c8b28
        type <record_type 0x7f0bfc2c8a80 st TI
            size <integer_cst 0x7f0bfc798c30 constant 128>
            unit size <integer_cst 0x7f0bfc798c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0bfc2c8a80 fields <field_decl 0x7f0bfc2ca260 flag> context <translation_unit_decl 0x7f0bfc7a3168 test.c>
            pointer_to_this <pointer_type 0x7f0bfc2c8b28> chain <type_decl 0x7f0bfc2ca2f8 D.3991>>
        public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0bfd52dab0 p>
    def_stmt p_19 = malloc (10);
    version 19
    ptr-info 0x7f0bfc2cbc00>
# VUSE <.MEM_31>
_10 = _9->f;
 <ssa_name 0x7f0bfc7a0948
    type <pointer_type 0x7f0bfc7b3a80
        type <integer_type 0x7f0bfc7ac5e8 int public SI
            size <integer_cst 0x7f0bfc798e28 constant 32>
            unit size <integer_cst 0x7f0bfc798e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f0bfc7ac5e8 precision 32 min <integer_cst 0x7f0bfc798de0 -2147483648> max <integer_cst 0x7f0bfc798df8 2147483647>
            pointer_to_this <pointer_type 0x7f0bfc7b3a80>>
        unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    def_stmt _10 = _9->f;
    version 10
    ptr-info 0x7f0bfc2cbbe8>
 <component_ref 0x7f0bfc797510
    type <pointer_type 0x7f0bfc7b3a80
        type <integer_type 0x7f0bfc7ac5e8 int public SI
            size <integer_cst 0x7f0bfc798e28 constant 32>
            unit size <integer_cst 0x7f0bfc798e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7f0bfc7ac5e8 precision 32 min <integer_cst 0x7f0bfc798de0 -2147483648> max <integer_cst 0x7f0bfc798df8 2147483647>
            pointer_to_this <pointer_type 0x7f0bfc7b3a80>>
        unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <mem_ref 0x7f0bfc2d7280
        type <record_type 0x7f0bfc2c8a80 st TI
            size <integer_cst 0x7f0bfc798c30 constant 128>
            unit size <integer_cst 0x7f0bfc798c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0bfc2c8a80 fields <field_decl 0x7f0bfc2ca260 flag> context <translation_unit_decl 0x7f0bfc7a3168 test.c>
            pointer_to_this <pointer_type 0x7f0bfc2c8b28> chain <type_decl 0x7f0bfc2ca2f8 D.3991>>
       
        arg 0 <ssa_name 0x7f0bfc7a0900 type <pointer_type 0x7f0bfc2c8b28>
           
            def_stmt _9 = p_19 + _8;
            version 9
            ptr-info 0x7f0bfc2cbbd0>
        arg 1 <integer_cst 0x7f0bfc2cbb10 constant 0>
        test.c:72:9 start: test.c:72:9 finish: test.c:72:9>
    arg 1 <field_decl 0x7f0bfc2ca1c8 f type <pointer_type 0x7f0bfc7b3a80>
        unsigned DI file test.c line 15 col 7 size <integer_cst 0x7f0bfc798be8 64> unit size <integer_cst 0x7f0bfc798c00 8>
        align 64 offset_align 128
        offset <integer_cst 0x7f0bfc798c18 constant 0> bit offset <integer_cst 0x7f0bfc798be8 64> context <record_type 0x7f0bfc2c8a80 st>>
    test.c:72:12 start: test.c:72:12 finish: test.c:72:12>
i_26 = i_12 + 1;
 <ssa_name 0x7f0bfc7a0af8
    type <integer_type 0x7f0bfc7ac5e8 int public SI
        size <integer_cst 0x7f0bfc798e28 constant 32>
        unit size <integer_cst 0x7f0bfc798e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f0bfc7ac5e8 precision 32 min <integer_cst 0x7f0bfc798de0 -2147483648> max <integer_cst 0x7f0bfc798df8 2147483647>
        pointer_to_this <pointer_type 0x7f0bfc7b3a80>>
    var <var_decl 0x7f0bfd52dc60 i>
    def_stmt i_26 = i_12 + 1;
    version 26>
 <ssa_name 0x7f0bfc7a09d8
    type <integer_type 0x7f0bfc7ac5e8 int public SI
        size <integer_cst 0x7f0bfc798e28 constant 32>
        unit size <integer_cst 0x7f0bfc798e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f0bfc7ac5e8 precision 32 min <integer_cst 0x7f0bfc798de0 -2147483648> max <integer_cst 0x7f0bfc798df8 2147483647>
        pointer_to_this <pointer_type 0x7f0bfc7b3a80>>
    var <var_decl 0x7f0bfd52dc60 i>
    def_stmt i_12 = PHI <0(9), i_26(6)>
    version 12>
--------GIMPLE Cond -------
succs:= 5
succs:= 7
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
# .MEM_34 = VDEF <.MEM_33(D)>
p_19 = malloc (10);
# .MEM_35 = VDEF <.MEM_34>
_1 = malloc (1);
mappinggggggggggggFIELD_DECL2ggggggggggggggggggg-------
# .MEM_40 = VDEF <.MEM_30>
_5 = malloc (1);
mappinggggggggggggFIELD_DECL2ggggggggggggggggggg-------
# .MEM_37 = VDEF <.MEM_30>
_6 = malloc (1);
mappinggggggggggggFIELD_DECL2ggggggggggggggggggg-------
mappinggggggggggggFIELD_DECLggggggggggggggggggg-------
mappinggggggggggggggggggggggggggggggg-------
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
=======================================================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f0bfc7a0a68
    type <pointer_type 0x7f0bfc2c8b28
        type <record_type 0x7f0bfc2c8a80 st TI
            size <integer_cst 0x7f0bfc798c30 constant 128>
            unit size <integer_cst 0x7f0bfc798c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0bfc2c8a80 fields <field_decl 0x7f0bfc2ca260 flag> context <translation_unit_decl 0x7f0bfc7a3168 test.c>
            pointer_to_this <pointer_type 0x7f0bfc2c8b28> chain <type_decl 0x7f0bfc2ca2f8 D.3991>>
        public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0bfd52dab0 p>
    def_stmt p_19 = malloc (10);
    version 19
    ptr-info 0x7f0bfc2cbc00>
 <ssa_name 0x7f0bfc7a0a68
    type <pointer_type 0x7f0bfc2c8b28
        type <record_type 0x7f0bfc2c8a80 st TI
            size <integer_cst 0x7f0bfc798c30 constant 128>
            unit size <integer_cst 0x7f0bfc798c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f0bfc2c8a80 fields <field_decl 0x7f0bfc2ca260 flag> context <translation_unit_decl 0x7f0bfc7a3168 test.c>
            pointer_to_this <pointer_type 0x7f0bfc2c8b28> chain <type_decl 0x7f0bfc2ca2f8 D.3991>>
        public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f0bfd52dab0 p>
    def_stmt p_19 = malloc (10);
    version 19
    ptr-info 0x7f0bfc2cbc00>
# .MEM_34 = VDEF <.MEM_33(D)>
p_19 = malloc (10);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return  [0m
in succs:= 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = p_19 + _8;
In function ‘main’:
test.c:72:9: warning: use location
   free(p[i].f);
         ^

======================================================================
[40;31m    branch possiable have return  [0m
in succs:= 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = _9->f;
test.c:72:12: warning: use location
   free(p[i].f);
            ^

======================================================================
[40;31m    branch possiable have return  [0m
in succs:= 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (_10);
test.c:72:3: warning: use location
   free(p[i].f);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (_10);
test.c:72:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
MEM[(struct st *)p_19 + 48B].f = _1;
test.c:62:10: warning: use location
   p[3].f = malloc(1);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4->f = _5;
test.c:64:10: warning: use location
   p[i].f = malloc(1);
          ^
MEM[(struct st *)p_19 + 32B].f = _6;
test.c:65:9: warning: use location
  p[2].f = malloc(1);
         ^
MEM[(struct st *)p_19 + 32B].f = _6;
test.c:65:9: warning: use location

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f0bfc7a06c0
    type <pointer_type 0x7f0bfc7b30a8
        type <void_type 0x7f0bfc7acf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f0bfc7b30a8>>
        public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0bfc7b8bd0>>
   
    def_stmt _1 = malloc (1);
    version 1
    ptr-info 0x7f0bfc2cbb70>
 <ssa_name 0x7f0bfc7a06c0
    type <pointer_type 0x7f0bfc7b30a8
        type <void_type 0x7f0bfc7acf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f0bfc7b30a8>>
        public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0bfc7b8bd0>>
   
    def_stmt _1 = malloc (1);
    version 1
    ptr-info 0x7f0bfc2cbb70>
# .MEM_35 = VDEF <.MEM_34>
_1 = malloc (1);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
MEM[(struct st *)p_19 + 48B].f = _1;
test.c:62:10: warning: use location
   p[3].f = malloc(1);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4->f = _5;
test.c:64:10: warning: use location
   p[i].f = malloc(1);
          ^
MEM[(struct st *)p_19 + 32B].f = _6;
test.c:65:9: warning: use location
  p[2].f = malloc(1);
         ^

======================================================================
[40;31m    branch possiable have return  [0m
in succs:= 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = _9->f;
test.c:72:12: warning: use location
   free(p[i].f);
            ^

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0bfc7a07e0
    type <pointer_type 0x7f0bfc7b30a8
        type <void_type 0x7f0bfc7acf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f0bfc7b30a8>>
        public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0bfc7b8bd0>>
   
    def_stmt _5 = malloc (1);
    version 5
    ptr-info 0x7f0bfc2cbba0>
 <ssa_name 0x7f0bfc7a07e0
    type <pointer_type 0x7f0bfc7b30a8
        type <void_type 0x7f0bfc7acf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f0bfc7b30a8>>
        public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0bfc7b8bd0>>
   
    def_stmt _5 = malloc (1);
    version 5
    ptr-info 0x7f0bfc2cbba0>
# .MEM_40 = VDEF <.MEM_30>
_5 = malloc (1);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4->f = _5;
test.c:64:10: warning: use location
   p[i].f = malloc(1);
          ^
MEM[(struct st *)p_19 + 48B].f = _1;
test.c:62:10: warning: use location
   p[3].f = malloc(1);
          ^
MEM[(struct st *)p_19 + 32B].f = _6;
test.c:65:9: warning: use location
  p[2].f = malloc(1);
         ^

======================================================================
[40;31m    branch possiable have return  [0m
in succs:= 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = _9->f;
test.c:72:12: warning: use location
   free(p[i].f);
            ^

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f0bfc7a0828
    type <pointer_type 0x7f0bfc7b30a8
        type <void_type 0x7f0bfc7acf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f0bfc7b30a8>>
        public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0bfc7b8bd0>>
   
    def_stmt _6 = malloc (1);
    version 6
    ptr-info 0x7f0bfc2cbbb8>
 <ssa_name 0x7f0bfc7a0828
    type <pointer_type 0x7f0bfc7b30a8
        type <void_type 0x7f0bfc7acf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f0bfc7b30a8>>
        public unsigned DI
        size <integer_cst 0x7f0bfc798be8 constant 64>
        unit size <integer_cst 0x7f0bfc798c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f0bfc7b8bd0>>
   
    def_stmt _6 = malloc (1);
    version 6
    ptr-info 0x7f0bfc2cbbb8>
# .MEM_37 = VDEF <.MEM_30>
_6 = malloc (1);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
MEM[(struct st *)p_19 + 32B].f = _6;
test.c:65:9: warning: use location
  p[2].f = malloc(1);
         ^
MEM[(struct st *)p_19 + 48B].f = _1;
test.c:62:10: warning: use location
   p[3].f = malloc(1);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4->f = _5;
test.c:64:10: warning: use location
   p[i].f = malloc(1);
          ^

======================================================================
[40;31m    branch possiable have return  [0m
in succs:= 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_10 = _9->f;
test.c:72:12: warning: use location
   free(p[i].f);
            ^

 ================== Start Use after free Check ================== 

dot graph END

 ================== Start Use after free Check ================== 

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <integer_cst 0x7f0bfc2cbab0 type <integer_type 0x7f0bfc2c8930 size_t> constant 10>

dot graph START

======================================================================
 <integer_cst 0x7f0bfc2cbac8 type <integer_type 0x7f0bfc2c8930 size_t> constant 1>

dot graph START

======================================================================
 <integer_cst 0x7f0bfc2cbac8 type <integer_type 0x7f0bfc2c8930 size_t> constant 1>
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [9.09%]:
p_19 = malloc (10);
_1 = malloc (1);
MEM[(struct st *)p_19 + 48B].f = _1;
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [90.91%]:
_2 = (long unsigned int) i_11;
_3 = _2 * 16;
_4 = p_19 + _3;
_5 = malloc (1);
_4->f = _5;
i_29 = i_11 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [100.00%]:
# i_11 = PHI <0(2), i_29(3)>
if (i_11 <= 9)
  goto <bb 3>; [90.91%]
else
  goto <bb 5>; [9.09%]

=======is loop:0=========

 bb index 5 
<bb 5> [9.09%]:
_6 = malloc (1);
MEM[(struct st *)p_19 + 32B].f = _6;
if (test_24(D) != 0)
  goto <bb 8>; [31.00%]
else
  goto <bb 9>; [69.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [6.27%]:
goto <bb 7>; [100.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [62.73%]:
_7 = (long unsigned int) i_12;
_8 = _7 * 16;
_9 = p_19 + _8;
_10 = _9->f;
free (_10);
i_26 = i_12 + 1;

=======is loop:1=========

 bb index 7 
<bb 7> [69.00%]:
# i_12 = PHI <0(9), i_26(6)>
if (i_12 <= 9)
  goto <bb 6>; [90.91%]
else
  goto <bb 8>; [9.09%]

=======is loop:0=========

 bb index 8 
<bb 8> [9.09%]:
# _13 = PHI <200(5), 0(7)>
return _13;

[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 4 [0m
[40;34m    used_stmt array stack totalsize of : 720 [0m
[40;34m    collect time: : 0.000092 s [0m
[40;34m    algorithm time: 0.002706 s [0m
[40;34m    gimple stmt count : : 21 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
